!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" external @globalTrue : !s32i {alignment = 4 : i64} loc(#loc658)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc659)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc660)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc661)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc9)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc662)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc663)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc664)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc665)
  cir.func private @close(!s32i) -> !s32i loc(#loc666)
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc667)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc22)
  cir.func private @printIntLine(!s32i) loc(#loc668)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_connect_socket_10_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc670)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc671)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc671)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc671)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc31)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc672)
    cir.scope {
      %4 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc658)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc35)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc35)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc676)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc677)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc678)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc679)
          %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc680)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc46)
          %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc46)
          cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc679)
          %14 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc49)
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
          %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc49)
          cir.store %16, %11 : !u64i, !cir.ptr<!u64i> loc(#loc680)
          cir.scope {
            cir.do {
              cir.scope {
                %17 = cir.const #cir.int<2> : !s32i loc(#loc55)
                %18 = cir.const #cir.int<1> : !s32i loc(#loc56)
                %19 = cir.const #cir.int<6> : !s32i loc(#loc57)
                %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc58)
                cir.store %20, %10 : !s32i, !cir.ptr<!s32i> loc(#loc683)
                cir.scope {
                  %71 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc63)
                  %72 = cir.const #cir.int<1> : !s32i loc(#loc64)
                  %73 = cir.unary(minus, %72) nsw : !s32i, !s32i loc(#loc64)
                  %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc685)
                  cir.if %74 {
                    cir.break loc(#loc66)
                  } loc(#loc686)
                } loc(#loc684)
                %21 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc687)
                %22 = cir.const #cir.int<0> : !s32i loc(#loc69)
                %23 = cir.const #cir.int<16> : !u64i loc(#loc688)
                cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc689)
                %24 = cir.const #cir.int<2> : !s32i loc(#loc74)
                %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc74)
                %26 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
                cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc690)
                %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc9)
                %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc9)
                %29 = cir.call @inet_addr(%28) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc77)
                %30 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc78)
                %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc79)
                cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc691)
                %32 = cir.const #cir.int<27015> : !s32i loc(#loc82)
                %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc82)
                %34 = cir.call @htons(%33) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc83)
                %35 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc84)
                cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc692)
                cir.scope {
                  %71 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc89)
                  %72 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc694)
                  %73 = cir.const #cir.int<16> : !u64i loc(#loc695)
                  %74 = cir.cast(integral, %73 : !u64i), !u32i loc(#loc695)
                  %75 = cir.call @connect(%71, %72, %74) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc94)
                  %76 = cir.const #cir.int<1> : !s32i loc(#loc95)
                  %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc95)
                  %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc696)
                  cir.if %78 {
                    cir.break loc(#loc97)
                  } loc(#loc697)
                } loc(#loc693)
                %36 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc98)
                %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
                %38 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc100)
                %39 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc101)
                %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc698)
                %41 = cir.const #cir.int<1> : !u64i loc(#loc699)
                %42 = cir.const #cir.int<100> : !s32i loc(#loc106)
                %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc106)
                %44 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc107)
                %45 = cir.binop(sub, %43, %44) : !u64i loc(#loc700)
                %46 = cir.const #cir.int<1> : !s32i loc(#loc108)
                %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc108)
                %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc701)
                %49 = cir.binop(mul, %41, %48) : !u64i loc(#loc702)
                %50 = cir.const #cir.int<0> : !s32i loc(#loc110)
                %51 = cir.call @recv(%36, %40, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc111)
                %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc111)
                cir.store %52, %7 : !s32i, !cir.ptr<!s32i> loc(#loc703)
                cir.scope {
                  %71 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc116)
                  %72 = cir.const #cir.int<1> : !s32i loc(#loc117)
                  %73 = cir.unary(minus, %72) nsw : !s32i, !s32i loc(#loc117)
                  %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc705)
                  %75 = cir.ternary(%74, true {
                    %76 = cir.const #true loc(#loc118)
                    cir.yield %76 : !cir.bool loc(#loc118)
                  }, false {
                    %76 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc119)
                    %77 = cir.const #cir.int<0> : !s32i loc(#loc120)
                    %78 = cir.cmp(eq, %76, %77) : !s32i, !cir.bool loc(#loc706)
                    %79 = cir.ternary(%78, true {
                      %80 = cir.const #true loc(#loc118)
                      cir.yield %80 : !cir.bool loc(#loc118)
                    }, false {
                      %80 = cir.const #false loc(#loc118)
                      cir.yield %80 : !cir.bool loc(#loc118)
                    }) : (!cir.bool) -> !cir.bool loc(#loc118)
                    cir.yield %79 : !cir.bool loc(#loc118)
                  }) : (!cir.bool) -> !cir.bool loc(#loc118)
                  cir.if %75 {
                    cir.break loc(#loc122)
                  } loc(#loc707)
                } loc(#loc704)
                %53 = cir.const #cir.int<0> : !s32i loc(#loc123)
                %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc123)
                %55 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
                %56 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc125)
                %57 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc126)
                %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc126)
                %59 = cir.const #cir.int<1> : !u64i loc(#loc708)
                %60 = cir.binop(div, %58, %59) : !u64i loc(#loc709)
                %61 = cir.binop(add, %56, %60) : !u64i loc(#loc710)
                %62 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %61 : !u64i), !cir.ptr<!s8i> loc(#loc129)
                cir.store %54, %62 : !s8i, !cir.ptr<!s8i> loc(#loc711)
                %63 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc130)
                %64 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
                %65 = cir.const #cir.int<13> : !s32i loc(#loc132)
                %66 = cir.call @strchr(%64, %65) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc130)
                cir.store %66, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc712)
                cir.scope {
                  %71 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
                  %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc137)
                  cir.if %72 {
                    %73 = cir.const #cir.int<0> : !s32i loc(#loc139)
                    %74 = cir.cast(integral, %73 : !s32i), !s8i loc(#loc139)
                    %75 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
                    cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc715)
                  } loc(#loc714)
                } loc(#loc713)
                %67 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc142)
                %68 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
                %69 = cir.const #cir.int<10> : !s32i loc(#loc144)
                %70 = cir.call @strchr(%68, %69) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc142)
                cir.store %70, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc716)
                cir.scope {
                  %71 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
                  %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc149)
                  cir.if %72 {
                    %73 = cir.const #cir.int<0> : !s32i loc(#loc151)
                    %74 = cir.cast(integral, %73 : !s32i), !s8i loc(#loc151)
                    %75 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
                    cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc719)
                  } loc(#loc718)
                } loc(#loc717)
              } loc(#loc682)
              cir.yield loc(#loc52)
            } while {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc154)
              %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc154)
              cir.condition(%18) loc(#loc154)
            } loc(#loc681)
          } loc(#loc681)
          cir.scope {
            %17 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc157)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc158)
            %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc158)
            %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc721)
            cir.if %20 {
              %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc160)
              %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc161)
            } loc(#loc722)
          } loc(#loc720)
        } loc(#loc675)
      } loc(#loc674)
    } loc(#loc673)
    cir.scope {
      %4 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc658)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc164)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc164)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc726)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc727)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc728)
          cir.scope {
            %10 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc174)
            %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc175)
            %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc22)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc22)
            %14 = cir.call @__isoc99_sscanf(%11, %13, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc174)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc176)
            %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc730)
            cir.if %16 {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc178)
              cir.store %17, %9 : !s32i, !cir.ptr<!s32i> loc(#loc732)
              cir.scope {
                %19 = cir.const #cir.int<0> : !s32i loc(#loc182)
                cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc734)
                cir.for : cond {
                  %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc184)
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc185)
                  %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc735)
                  cir.condition(%22) loc(#loc186)
                } body {
                  cir.scope {
                    %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc188)
                    %21 = cir.unary(inc, %20) nsw : !s32i, !s32i loc(#loc189)
                    cir.store %21, %9 : !s32i, !cir.ptr<!s32i> loc(#loc737)
                  } loc(#loc736)
                  cir.yield loc(#loc181)
                } step {
                  %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc190)
                  %21 = cir.unary(inc, %20) nsw : !s32i, !s32i loc(#loc191)
                  cir.store %21, %7 : !s32i, !cir.ptr<!s32i> loc(#loc738)
                  cir.yield loc(#loc733)
                } loc(#loc733)
              } loc(#loc733)
              %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc192)
              cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc193)
            } loc(#loc731)
          } loc(#loc729)
        } loc(#loc725)
      } loc(#loc724)
    } loc(#loc723)
    cir.return loc(#loc26)
  } loc(#loc669)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_connect_socket_10_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc740)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc196)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc741)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc198)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc742)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc200)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc743)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc202)
    cir.return loc(#loc195)
  } loc(#loc739)
  cir.global "private" external @globalFalse : !s32i {alignment = 4 : i64} loc(#loc744)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc745)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc208)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc747)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc748)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc748)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc748)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc215)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc749)
    cir.scope {
      %4 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc658)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc219)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc219)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc753)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc754)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc755)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc756)
          %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc757)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc230)
          %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc230)
          cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc756)
          %14 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc233)
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc234)
          %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc233)
          cir.store %16, %11 : !u64i, !cir.ptr<!u64i> loc(#loc757)
          cir.scope {
            cir.do {
              cir.scope {
                %17 = cir.const #cir.int<2> : !s32i loc(#loc239)
                %18 = cir.const #cir.int<1> : !s32i loc(#loc240)
                %19 = cir.const #cir.int<6> : !s32i loc(#loc241)
                %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc242)
                cir.store %20, %10 : !s32i, !cir.ptr<!s32i> loc(#loc760)
                cir.scope {
                  %71 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc247)
                  %72 = cir.const #cir.int<1> : !s32i loc(#loc248)
                  %73 = cir.unary(minus, %72) nsw : !s32i, !s32i loc(#loc248)
                  %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc762)
                  cir.if %74 {
                    cir.break loc(#loc250)
                  } loc(#loc763)
                } loc(#loc761)
                %21 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc764)
                %22 = cir.const #cir.int<0> : !s32i loc(#loc253)
                %23 = cir.const #cir.int<16> : !u64i loc(#loc765)
                cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc766)
                %24 = cir.const #cir.int<2> : !s32i loc(#loc258)
                %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc258)
                %26 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
                cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc767)
                %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc260)
                %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc260)
                %29 = cir.call @inet_addr(%28) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc261)
                %30 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc78)
                %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc79)
                cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc768)
                %32 = cir.const #cir.int<27015> : !s32i loc(#loc264)
                %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc264)
                %34 = cir.call @htons(%33) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc265)
                %35 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc84)
                cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc769)
                cir.scope {
                  %71 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc270)
                  %72 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc771)
                  %73 = cir.const #cir.int<16> : !u64i loc(#loc772)
                  %74 = cir.cast(integral, %73 : !u64i), !u32i loc(#loc772)
                  %75 = cir.call @connect(%71, %72, %74) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc275)
                  %76 = cir.const #cir.int<1> : !s32i loc(#loc276)
                  %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc276)
                  %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc773)
                  cir.if %78 {
                    cir.break loc(#loc278)
                  } loc(#loc774)
                } loc(#loc770)
                %36 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc279)
                %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc280)
                %38 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc281)
                %39 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc282)
                %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc775)
                %41 = cir.const #cir.int<1> : !u64i loc(#loc776)
                %42 = cir.const #cir.int<100> : !s32i loc(#loc287)
                %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc287)
                %44 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc288)
                %45 = cir.binop(sub, %43, %44) : !u64i loc(#loc777)
                %46 = cir.const #cir.int<1> : !s32i loc(#loc289)
                %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc289)
                %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc778)
                %49 = cir.binop(mul, %41, %48) : !u64i loc(#loc779)
                %50 = cir.const #cir.int<0> : !s32i loc(#loc291)
                %51 = cir.call @recv(%36, %40, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc292)
                %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc292)
                cir.store %52, %7 : !s32i, !cir.ptr<!s32i> loc(#loc780)
                cir.scope {
                  %71 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc297)
                  %72 = cir.const #cir.int<1> : !s32i loc(#loc298)
                  %73 = cir.unary(minus, %72) nsw : !s32i, !s32i loc(#loc298)
                  %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc782)
                  %75 = cir.ternary(%74, true {
                    %76 = cir.const #true loc(#loc299)
                    cir.yield %76 : !cir.bool loc(#loc299)
                  }, false {
                    %76 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc300)
                    %77 = cir.const #cir.int<0> : !s32i loc(#loc301)
                    %78 = cir.cmp(eq, %76, %77) : !s32i, !cir.bool loc(#loc783)
                    %79 = cir.ternary(%78, true {
                      %80 = cir.const #true loc(#loc299)
                      cir.yield %80 : !cir.bool loc(#loc299)
                    }, false {
                      %80 = cir.const #false loc(#loc299)
                      cir.yield %80 : !cir.bool loc(#loc299)
                    }) : (!cir.bool) -> !cir.bool loc(#loc299)
                    cir.yield %79 : !cir.bool loc(#loc299)
                  }) : (!cir.bool) -> !cir.bool loc(#loc299)
                  cir.if %75 {
                    cir.break loc(#loc303)
                  } loc(#loc784)
                } loc(#loc781)
                %53 = cir.const #cir.int<0> : !s32i loc(#loc304)
                %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc304)
                %55 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc305)
                %56 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc306)
                %57 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc307)
                %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc307)
                %59 = cir.const #cir.int<1> : !u64i loc(#loc785)
                %60 = cir.binop(div, %58, %59) : !u64i loc(#loc786)
                %61 = cir.binop(add, %56, %60) : !u64i loc(#loc787)
                %62 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %61 : !u64i), !cir.ptr<!s8i> loc(#loc310)
                cir.store %54, %62 : !s8i, !cir.ptr<!s8i> loc(#loc788)
                %63 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc311)
                %64 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc312)
                %65 = cir.const #cir.int<13> : !s32i loc(#loc313)
                %66 = cir.call @strchr(%64, %65) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc311)
                cir.store %66, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc789)
                cir.scope {
                  %71 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc318)
                  %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc318)
                  cir.if %72 {
                    %73 = cir.const #cir.int<0> : !s32i loc(#loc320)
                    %74 = cir.cast(integral, %73 : !s32i), !s8i loc(#loc320)
                    %75 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc321)
                    cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc792)
                  } loc(#loc791)
                } loc(#loc790)
                %67 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc323)
                %68 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc324)
                %69 = cir.const #cir.int<10> : !s32i loc(#loc325)
                %70 = cir.call @strchr(%68, %69) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc323)
                cir.store %70, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc793)
                cir.scope {
                  %71 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc330)
                  %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc330)
                  cir.if %72 {
                    %73 = cir.const #cir.int<0> : !s32i loc(#loc332)
                    %74 = cir.cast(integral, %73 : !s32i), !s8i loc(#loc332)
                    %75 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc333)
                    cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc796)
                  } loc(#loc795)
                } loc(#loc794)
              } loc(#loc759)
              cir.yield loc(#loc236)
            } while {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc335)
              %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc335)
              cir.condition(%18) loc(#loc335)
            } loc(#loc758)
          } loc(#loc758)
          cir.scope {
            %17 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc338)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc339)
            %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc339)
            %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc798)
            cir.if %20 {
              %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc341)
              %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc342)
            } loc(#loc799)
          } loc(#loc797)
        } loc(#loc752)
      } loc(#loc751)
    } loc(#loc750)
    cir.scope {
      %4 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc744)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc345)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc345)
      cir.if %6 {
        %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc208)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc208)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc349)
      } else {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc803)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc804)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc805)
          cir.scope {
            %10 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc358)
            %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc359)
            %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc360)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc360)
            %14 = cir.call @__isoc99_sscanf(%11, %13, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc358)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc361)
            %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc807)
            cir.if %16 {
              cir.scope {
                %17 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc365)
                %18 = cir.const #cir.int<10000> : !s32i loc(#loc366)
                %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc810)
                cir.if %19 {
                  %20 = cir.const #cir.int<0> : !s32i loc(#loc368)
                  cir.store %20, %9 : !s32i, !cir.ptr<!s32i> loc(#loc812)
                  cir.scope {
                    %22 = cir.const #cir.int<0> : !s32i loc(#loc372)
                    cir.store %22, %7 : !s32i, !cir.ptr<!s32i> loc(#loc814)
                    cir.for : cond {
                      %23 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc374)
                      %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc375)
                      %25 = cir.cmp(lt, %23, %24) : !s32i, !cir.bool loc(#loc815)
                      cir.condition(%25) loc(#loc376)
                    } body {
                      cir.scope {
                        %23 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc378)
                        %24 = cir.unary(inc, %23) nsw : !s32i, !s32i loc(#loc379)
                        cir.store %24, %9 : !s32i, !cir.ptr<!s32i> loc(#loc817)
                      } loc(#loc816)
                      cir.yield loc(#loc371)
                    } step {
                      %23 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc380)
                      %24 = cir.unary(inc, %23) nsw : !s32i, !s32i loc(#loc381)
                      cir.store %24, %7 : !s32i, !cir.ptr<!s32i> loc(#loc818)
                      cir.yield loc(#loc813)
                    } loc(#loc813)
                  } loc(#loc813)
                  %21 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc382)
                  cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc383)
                } loc(#loc811)
              } loc(#loc809)
            } loc(#loc808)
          } loc(#loc806)
        } loc(#loc802)
      } loc(#loc801)
    } loc(#loc800)
    cir.return loc(#loc210)
  } loc(#loc746)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc820)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc821)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc821)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc821)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc390)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc822)
    cir.scope {
      %4 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc658)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc394)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc394)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc826)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc827)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc828)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc829)
          %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc830)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc405)
          %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc405)
          cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc829)
          %14 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc408)
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc409)
          %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc408)
          cir.store %16, %11 : !u64i, !cir.ptr<!u64i> loc(#loc830)
          cir.scope {
            cir.do {
              cir.scope {
                %17 = cir.const #cir.int<2> : !s32i loc(#loc414)
                %18 = cir.const #cir.int<1> : !s32i loc(#loc415)
                %19 = cir.const #cir.int<6> : !s32i loc(#loc416)
                %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc417)
                cir.store %20, %10 : !s32i, !cir.ptr<!s32i> loc(#loc833)
                cir.scope {
                  %71 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc422)
                  %72 = cir.const #cir.int<1> : !s32i loc(#loc423)
                  %73 = cir.unary(minus, %72) nsw : !s32i, !s32i loc(#loc423)
                  %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc835)
                  cir.if %74 {
                    cir.break loc(#loc425)
                  } loc(#loc836)
                } loc(#loc834)
                %21 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc837)
                %22 = cir.const #cir.int<0> : !s32i loc(#loc428)
                %23 = cir.const #cir.int<16> : !u64i loc(#loc838)
                cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc839)
                %24 = cir.const #cir.int<2> : !s32i loc(#loc433)
                %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc433)
                %26 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
                cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc840)
                %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc435)
                %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc435)
                %29 = cir.call @inet_addr(%28) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc436)
                %30 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc78)
                %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc79)
                cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc841)
                %32 = cir.const #cir.int<27015> : !s32i loc(#loc439)
                %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc439)
                %34 = cir.call @htons(%33) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc440)
                %35 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc84)
                cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc842)
                cir.scope {
                  %71 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc445)
                  %72 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc844)
                  %73 = cir.const #cir.int<16> : !u64i loc(#loc845)
                  %74 = cir.cast(integral, %73 : !u64i), !u32i loc(#loc845)
                  %75 = cir.call @connect(%71, %72, %74) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc450)
                  %76 = cir.const #cir.int<1> : !s32i loc(#loc451)
                  %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc451)
                  %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc846)
                  cir.if %78 {
                    cir.break loc(#loc453)
                  } loc(#loc847)
                } loc(#loc843)
                %36 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc454)
                %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc455)
                %38 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc456)
                %39 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc457)
                %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc848)
                %41 = cir.const #cir.int<1> : !u64i loc(#loc849)
                %42 = cir.const #cir.int<100> : !s32i loc(#loc462)
                %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc462)
                %44 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc463)
                %45 = cir.binop(sub, %43, %44) : !u64i loc(#loc850)
                %46 = cir.const #cir.int<1> : !s32i loc(#loc464)
                %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc464)
                %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc851)
                %49 = cir.binop(mul, %41, %48) : !u64i loc(#loc852)
                %50 = cir.const #cir.int<0> : !s32i loc(#loc466)
                %51 = cir.call @recv(%36, %40, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc467)
                %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc467)
                cir.store %52, %7 : !s32i, !cir.ptr<!s32i> loc(#loc853)
                cir.scope {
                  %71 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc472)
                  %72 = cir.const #cir.int<1> : !s32i loc(#loc473)
                  %73 = cir.unary(minus, %72) nsw : !s32i, !s32i loc(#loc473)
                  %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc855)
                  %75 = cir.ternary(%74, true {
                    %76 = cir.const #true loc(#loc474)
                    cir.yield %76 : !cir.bool loc(#loc474)
                  }, false {
                    %76 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc475)
                    %77 = cir.const #cir.int<0> : !s32i loc(#loc476)
                    %78 = cir.cmp(eq, %76, %77) : !s32i, !cir.bool loc(#loc856)
                    %79 = cir.ternary(%78, true {
                      %80 = cir.const #true loc(#loc474)
                      cir.yield %80 : !cir.bool loc(#loc474)
                    }, false {
                      %80 = cir.const #false loc(#loc474)
                      cir.yield %80 : !cir.bool loc(#loc474)
                    }) : (!cir.bool) -> !cir.bool loc(#loc474)
                    cir.yield %79 : !cir.bool loc(#loc474)
                  }) : (!cir.bool) -> !cir.bool loc(#loc474)
                  cir.if %75 {
                    cir.break loc(#loc478)
                  } loc(#loc857)
                } loc(#loc854)
                %53 = cir.const #cir.int<0> : !s32i loc(#loc479)
                %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc479)
                %55 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc480)
                %56 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc481)
                %57 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc482)
                %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc482)
                %59 = cir.const #cir.int<1> : !u64i loc(#loc858)
                %60 = cir.binop(div, %58, %59) : !u64i loc(#loc859)
                %61 = cir.binop(add, %56, %60) : !u64i loc(#loc860)
                %62 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %61 : !u64i), !cir.ptr<!s8i> loc(#loc485)
                cir.store %54, %62 : !s8i, !cir.ptr<!s8i> loc(#loc861)
                %63 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc486)
                %64 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc487)
                %65 = cir.const #cir.int<13> : !s32i loc(#loc488)
                %66 = cir.call @strchr(%64, %65) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc486)
                cir.store %66, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc862)
                cir.scope {
                  %71 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc493)
                  %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc493)
                  cir.if %72 {
                    %73 = cir.const #cir.int<0> : !s32i loc(#loc495)
                    %74 = cir.cast(integral, %73 : !s32i), !s8i loc(#loc495)
                    %75 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc496)
                    cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc865)
                  } loc(#loc864)
                } loc(#loc863)
                %67 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc498)
                %68 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc499)
                %69 = cir.const #cir.int<10> : !s32i loc(#loc500)
                %70 = cir.call @strchr(%68, %69) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc498)
                cir.store %70, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc866)
                cir.scope {
                  %71 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc505)
                  %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc505)
                  cir.if %72 {
                    %73 = cir.const #cir.int<0> : !s32i loc(#loc507)
                    %74 = cir.cast(integral, %73 : !s32i), !s8i loc(#loc507)
                    %75 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc508)
                    cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc869)
                  } loc(#loc868)
                } loc(#loc867)
              } loc(#loc832)
              cir.yield loc(#loc411)
            } while {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc510)
              %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc510)
              cir.condition(%18) loc(#loc510)
            } loc(#loc831)
          } loc(#loc831)
          cir.scope {
            %17 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc513)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc514)
            %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc514)
            %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc871)
            cir.if %20 {
              %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc516)
              %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc517)
            } loc(#loc872)
          } loc(#loc870)
        } loc(#loc825)
      } loc(#loc824)
    } loc(#loc823)
    cir.scope {
      %4 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc658)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc520)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc520)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc876)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc877)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc878)
          cir.scope {
            %10 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc530)
            %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc531)
            %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc532)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc532)
            %14 = cir.call @__isoc99_sscanf(%11, %13, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc530)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc533)
            %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc880)
            cir.if %16 {
              cir.scope {
                %17 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc537)
                %18 = cir.const #cir.int<10000> : !s32i loc(#loc538)
                %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc883)
                cir.if %19 {
                  %20 = cir.const #cir.int<0> : !s32i loc(#loc540)
                  cir.store %20, %9 : !s32i, !cir.ptr<!s32i> loc(#loc885)
                  cir.scope {
                    %22 = cir.const #cir.int<0> : !s32i loc(#loc544)
                    cir.store %22, %7 : !s32i, !cir.ptr<!s32i> loc(#loc887)
                    cir.for : cond {
                      %23 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc546)
                      %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc547)
                      %25 = cir.cmp(lt, %23, %24) : !s32i, !cir.bool loc(#loc888)
                      cir.condition(%25) loc(#loc548)
                    } body {
                      cir.scope {
                        %23 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc550)
                        %24 = cir.unary(inc, %23) nsw : !s32i, !s32i loc(#loc551)
                        cir.store %24, %9 : !s32i, !cir.ptr<!s32i> loc(#loc890)
                      } loc(#loc889)
                      cir.yield loc(#loc543)
                    } step {
                      %23 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc552)
                      %24 = cir.unary(inc, %23) nsw : !s32i, !s32i loc(#loc553)
                      cir.store %24, %7 : !s32i, !cir.ptr<!s32i> loc(#loc891)
                      cir.yield loc(#loc886)
                    } loc(#loc886)
                  } loc(#loc886)
                  %21 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc554)
                  cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc555)
                } loc(#loc884)
              } loc(#loc882)
            } loc(#loc881)
          } loc(#loc879)
        } loc(#loc875)
      } loc(#loc874)
    } loc(#loc873)
    cir.return loc(#loc385)
  } loc(#loc819)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc892)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc558)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc894)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc895)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc895)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc895)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc565)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc896)
    cir.scope {
      %4 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc744)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc569)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc569)
      cir.if %6 {
        %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc573)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc573)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc574)
      } else {
        %7 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc575)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc576)
        %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc558)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc558)
        %11 = cir.call @strcpy(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc575)
      } loc(#loc898)
    } loc(#loc897)
    cir.scope {
      %4 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc658)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc579)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc579)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc902)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc903)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc904)
          cir.scope {
            %10 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc589)
            %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc590)
            %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc591)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc591)
            %14 = cir.call @__isoc99_sscanf(%11, %13, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc589)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc592)
            %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc906)
            cir.if %16 {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc594)
              cir.store %17, %9 : !s32i, !cir.ptr<!s32i> loc(#loc908)
              cir.scope {
                %19 = cir.const #cir.int<0> : !s32i loc(#loc598)
                cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc910)
                cir.for : cond {
                  %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc600)
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc601)
                  %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc911)
                  cir.condition(%22) loc(#loc602)
                } body {
                  cir.scope {
                    %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc604)
                    %21 = cir.unary(inc, %20) nsw : !s32i, !s32i loc(#loc605)
                    cir.store %21, %9 : !s32i, !cir.ptr<!s32i> loc(#loc913)
                  } loc(#loc912)
                  cir.yield loc(#loc597)
                } step {
                  %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc606)
                  %21 = cir.unary(inc, %20) nsw : !s32i, !s32i loc(#loc607)
                  cir.store %21, %7 : !s32i, !cir.ptr<!s32i> loc(#loc914)
                  cir.yield loc(#loc909)
                } loc(#loc909)
              } loc(#loc909)
              %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc608)
              cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc609)
            } loc(#loc907)
          } loc(#loc905)
        } loc(#loc901)
      } loc(#loc900)
    } loc(#loc899)
    cir.return loc(#loc560)
  } loc(#loc893)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc916)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc917)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc917)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc917)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc616)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc918)
    cir.scope {
      %4 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc658)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc620)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc620)
      cir.if %6 {
        %7 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc622)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc623)
        %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc624)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc624)
        %11 = cir.call @strcpy(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc622)
      } loc(#loc920)
    } loc(#loc919)
    cir.scope {
      %4 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc658)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc627)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc627)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc924)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc925)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc926)
          cir.scope {
            %10 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc637)
            %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc638)
            %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc639)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc639)
            %14 = cir.call @__isoc99_sscanf(%11, %13, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc637)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc640)
            %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc928)
            cir.if %16 {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc642)
              cir.store %17, %9 : !s32i, !cir.ptr<!s32i> loc(#loc930)
              cir.scope {
                %19 = cir.const #cir.int<0> : !s32i loc(#loc646)
                cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc932)
                cir.for : cond {
                  %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc648)
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc649)
                  %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc933)
                  cir.condition(%22) loc(#loc650)
                } body {
                  cir.scope {
                    %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc652)
                    %21 = cir.unary(inc, %20) nsw : !s32i, !s32i loc(#loc653)
                    cir.store %21, %9 : !s32i, !cir.ptr<!s32i> loc(#loc935)
                  } loc(#loc934)
                  cir.yield loc(#loc645)
                } step {
                  %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc654)
                  %21 = cir.unary(inc, %20) nsw : !s32i, !s32i loc(#loc655)
                  cir.store %21, %7 : !s32i, !cir.ptr<!s32i> loc(#loc936)
                  cir.yield loc(#loc931)
                } loc(#loc931)
              } loc(#loc931)
              %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc656)
              cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc657)
            } loc(#loc929)
          } loc(#loc927)
        } loc(#loc923)
      } loc(#loc922)
    } loc(#loc921)
    cir.return loc(#loc611)
  } loc(#loc915)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase.h":116:1)
#loc2 = loc("../../testcasesupport/std_testcase.h":116:12)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc7 = loc("/usr/include/arpa/inet.h":34:1)
#loc8 = loc("/usr/include/arpa/inet.h":34:47)
#loc9 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":83:53)
#loc10 = loc("/usr/include/netinet/in.h":402:1)
#loc11 = loc("/usr/include/netinet/in.h":403:40)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc15 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc16 = loc("/usr/include/string.h":246:1)
#loc17 = loc("/usr/include/string.h":247:33)
#loc18 = loc("/usr/include/unistd.h":358:1)
#loc19 = loc("/usr/include/unistd.h":358:27)
#loc20 = loc("/usr/include/stdio.h":468:1)
#loc21 = loc("/usr/include/stdio.h":468:12)
#loc22 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":128:30)
#loc23 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc24 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc25 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":49:1)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":141:1)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":51:5)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":51:12)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":52:5)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":52:28)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":53:12)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":53:5)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":54:5)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":123:5)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":54:8)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":55:5)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":56:9)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":122:9)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":61:13)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":61:17)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":62:13)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":62:32)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":63:13)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":63:19)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":64:13)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":64:36)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":65:13)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":65:41)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":65:30)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":65:37)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":66:13)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":111:21)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":67:13)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":110:13)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":76:40)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":76:49)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":76:62)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":76:33)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":76:17)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":76:73)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":77:17)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":80:17)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":77:21)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":77:38)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":78:17)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":79:21)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":81:24)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":81:25)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":81:34)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":81:37)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":81:51)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":81:17)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":81:52)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":82:38)
#loc75 = loc("/usr/include/netinet/in.h":249:5)
#loc76 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":82:17)
#loc77 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":83:43)
#loc78 = loc("/usr/include/netinet/in.h":251:20)
#loc79 = loc("/usr/include/netinet/in.h":33:15)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":83:17)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":83:63)
#loc82 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":84:42)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":84:36)
#loc84 = loc("/usr/include/netinet/in.h":250:15)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":84:17)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":84:50)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":85:17)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":88:17)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":85:29)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":85:62)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":85:63)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":85:72)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":85:86)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":85:21)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":85:92)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":86:17)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":87:21)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":92:35)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":92:59)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":92:66)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":92:64)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":92:50)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":92:73)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":92:76)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":92:87)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":92:92)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":92:98)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":92:108)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":92:109)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":92:112)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":92:30)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":92:17)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":92:113)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":93:17)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":96:17)
#loc116 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":93:21)
#loc117 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":93:35)
#loc118 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":93:48)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":93:51)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":93:65)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":94:17)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":95:21)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":98:61)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":98:17)
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":98:22)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":98:32)
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":98:45)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":98:56)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":98:57)
#loc130 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":100:27)
#loc131 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":100:34)
#loc132 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":100:40)
#loc133 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":100:17)
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":100:44)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":101:17)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":104:17)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":101:21)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":102:17)
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":103:32)
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":103:22)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":103:21)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":105:27)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":105:34)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":105:40)
#loc145 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":105:17)
#loc146 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":105:44)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":106:17)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":109:17)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":106:21)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":107:17)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":108:32)
#loc152 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":108:22)
#loc153 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":108:21)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":111:20)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":112:13)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":115:13)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":112:17)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":112:34)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":113:13)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":114:30)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":114:17)
#loc162 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":124:5)
#loc163 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":140:5)
#loc164 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":124:8)
#loc165 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":125:5)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":126:9)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":139:9)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":127:13)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":127:17)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":127:20)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":127:23)
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":128:13)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":138:13)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":128:17)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":128:24)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":128:43)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":129:13)
#loc178 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":131:31)
#loc179 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":131:17)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":132:17)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":136:17)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":132:26)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":132:22)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":132:29)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":132:33)
#loc186 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":132:31)
#loc187 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":133:17)
#loc188 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":135:32)
#loc189 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":135:21)
#loc190 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":132:37)
#loc191 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":132:36)
#loc192 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":137:30)
#loc193 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":137:17)
#loc194 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":413:1)
#loc195 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":419:1)
#loc196 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":415:5)
#loc197 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":415:14)
#loc198 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":416:5)
#loc199 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":416:14)
#loc200 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":417:5)
#loc201 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":417:14)
#loc202 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":418:5)
#loc203 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":418:14)
#loc204 = loc("../../testcasesupport/std_testcase.h":117:1)
#loc205 = loc("../../testcasesupport/std_testcase.h":117:12)
#loc206 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc207 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc208 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":226:19)
#loc209 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":148:1)
#loc210 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":248:1)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":150:5)
#loc212 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":150:12)
#loc213 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":151:5)
#loc214 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":151:28)
#loc215 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":152:12)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":152:5)
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":153:5)
#loc218 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":222:5)
#loc219 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":153:8)
#loc220 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":154:5)
#loc221 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":155:9)
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":221:9)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":160:13)
#loc224 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":160:17)
#loc225 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":161:13)
#loc226 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":161:32)
#loc227 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":162:13)
#loc228 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":162:19)
#loc229 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":163:13)
#loc230 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":163:36)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":164:13)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":164:41)
#loc233 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":164:30)
#loc234 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":164:37)
#loc235 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":165:13)
#loc236 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":210:21)
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":166:13)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":209:13)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":175:40)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":175:49)
#loc241 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":175:62)
#loc242 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":175:33)
#loc243 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":175:17)
#loc244 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":175:73)
#loc245 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":176:17)
#loc246 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":179:17)
#loc247 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":176:21)
#loc248 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":176:38)
#loc249 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":177:17)
#loc250 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":178:21)
#loc251 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":180:24)
#loc252 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":180:25)
#loc253 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":180:34)
#loc254 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":180:37)
#loc255 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":180:51)
#loc256 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":180:17)
#loc257 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":180:52)
#loc258 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":181:38)
#loc259 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":181:17)
#loc260 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":182:53)
#loc261 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":182:43)
#loc262 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":182:17)
#loc263 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":182:63)
#loc264 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":183:42)
#loc265 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":183:36)
#loc266 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":183:17)
#loc267 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":183:50)
#loc268 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":184:17)
#loc269 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":187:17)
#loc270 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":184:29)
#loc271 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":184:62)
#loc272 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":184:63)
#loc273 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":184:72)
#loc274 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":184:86)
#loc275 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":184:21)
#loc276 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":184:92)
#loc277 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":185:17)
#loc278 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":186:21)
#loc279 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":191:35)
#loc280 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":191:59)
#loc281 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":191:66)
#loc282 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":191:64)
#loc283 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":191:50)
#loc284 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":191:73)
#loc285 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":191:76)
#loc286 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":191:87)
#loc287 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":191:92)
#loc288 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":191:98)
#loc289 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":191:108)
#loc290 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":191:109)
#loc291 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":191:112)
#loc292 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":191:30)
#loc293 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":191:17)
#loc294 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":191:113)
#loc295 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":192:17)
#loc296 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":195:17)
#loc297 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":192:21)
#loc298 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":192:35)
#loc299 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":192:48)
#loc300 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":192:51)
#loc301 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":192:65)
#loc302 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":193:17)
#loc303 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":194:21)
#loc304 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":197:61)
#loc305 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":197:17)
#loc306 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":197:22)
#loc307 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":197:32)
#loc308 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":197:45)
#loc309 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":197:56)
#loc310 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":197:57)
#loc311 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":199:27)
#loc312 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":199:34)
#loc313 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":199:40)
#loc314 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":199:17)
#loc315 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":199:44)
#loc316 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":200:17)
#loc317 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":203:17)
#loc318 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":200:21)
#loc319 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":201:17)
#loc320 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":202:32)
#loc321 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":202:22)
#loc322 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":202:21)
#loc323 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":204:27)
#loc324 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":204:34)
#loc325 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":204:40)
#loc326 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":204:17)
#loc327 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":204:44)
#loc328 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":205:17)
#loc329 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":208:17)
#loc330 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":205:21)
#loc331 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":206:17)
#loc332 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":207:32)
#loc333 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":207:22)
#loc334 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":207:21)
#loc335 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":210:20)
#loc336 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":211:13)
#loc337 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":214:13)
#loc338 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":211:17)
#loc339 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":211:34)
#loc340 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":212:13)
#loc341 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":213:30)
#loc342 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":213:17)
#loc343 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":223:5)
#loc344 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":247:5)
#loc345 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":223:8)
#loc346 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":224:5)
#loc347 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":227:5)
#loc348 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":229:5)
#loc349 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":226:9)
#loc350 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":230:9)
#loc351 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":246:9)
#loc352 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":231:13)
#loc353 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":231:17)
#loc354 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":231:20)
#loc355 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":231:23)
#loc356 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":232:13)
#loc357 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":245:13)
#loc358 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":232:17)
#loc359 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":232:24)
#loc360 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":232:30)
#loc361 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":232:43)
#loc362 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":233:13)
#loc363 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":235:17)
#loc364 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":244:17)
#loc365 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":235:21)
#loc366 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":235:25)
#loc367 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":236:17)
#loc368 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":237:35)
#loc369 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":237:21)
#loc370 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":238:21)
#loc371 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":242:21)
#loc372 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":238:30)
#loc373 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":238:26)
#loc374 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":238:33)
#loc375 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":238:37)
#loc376 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":238:35)
#loc377 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":239:21)
#loc378 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":241:36)
#loc379 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":241:25)
#loc380 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":238:41)
#loc381 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":238:40)
#loc382 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":243:34)
#loc383 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":243:21)
#loc384 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":251:1)
#loc385 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":346:1)
#loc386 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":253:5)
#loc387 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":253:12)
#loc388 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":254:5)
#loc389 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":254:28)
#loc390 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":255:12)
#loc391 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":255:5)
#loc392 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":256:5)
#loc393 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":325:5)
#loc394 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":256:8)
#loc395 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":257:5)
#loc396 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":258:9)
#loc397 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":324:9)
#loc398 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":263:13)
#loc399 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":263:17)
#loc400 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":264:13)
#loc401 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":264:32)
#loc402 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":265:13)
#loc403 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":265:19)
#loc404 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":266:13)
#loc405 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":266:36)
#loc406 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":267:13)
#loc407 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":267:41)
#loc408 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":267:30)
#loc409 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":267:37)
#loc410 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":268:13)
#loc411 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":313:21)
#loc412 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":269:13)
#loc413 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":312:13)
#loc414 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":278:40)
#loc415 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":278:49)
#loc416 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":278:62)
#loc417 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":278:33)
#loc418 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":278:17)
#loc419 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":278:73)
#loc420 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":279:17)
#loc421 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":282:17)
#loc422 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":279:21)
#loc423 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":279:38)
#loc424 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":280:17)
#loc425 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":281:21)
#loc426 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":283:24)
#loc427 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":283:25)
#loc428 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":283:34)
#loc429 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":283:37)
#loc430 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":283:51)
#loc431 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":283:17)
#loc432 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":283:52)
#loc433 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":284:38)
#loc434 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":284:17)
#loc435 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":285:53)
#loc436 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":285:43)
#loc437 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":285:17)
#loc438 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":285:63)
#loc439 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":286:42)
#loc440 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":286:36)
#loc441 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":286:17)
#loc442 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":286:50)
#loc443 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":287:17)
#loc444 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":290:17)
#loc445 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":287:29)
#loc446 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":287:62)
#loc447 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":287:63)
#loc448 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":287:72)
#loc449 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":287:86)
#loc450 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":287:21)
#loc451 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":287:92)
#loc452 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":288:17)
#loc453 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":289:21)
#loc454 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":294:35)
#loc455 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":294:59)
#loc456 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":294:66)
#loc457 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":294:64)
#loc458 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":294:50)
#loc459 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":294:73)
#loc460 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":294:76)
#loc461 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":294:87)
#loc462 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":294:92)
#loc463 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":294:98)
#loc464 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":294:108)
#loc465 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":294:109)
#loc466 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":294:112)
#loc467 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":294:30)
#loc468 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":294:17)
#loc469 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":294:113)
#loc470 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":295:17)
#loc471 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":298:17)
#loc472 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":295:21)
#loc473 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":295:35)
#loc474 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":295:48)
#loc475 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":295:51)
#loc476 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":295:65)
#loc477 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":296:17)
#loc478 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":297:21)
#loc479 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":300:61)
#loc480 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":300:17)
#loc481 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":300:22)
#loc482 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":300:32)
#loc483 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":300:45)
#loc484 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":300:56)
#loc485 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":300:57)
#loc486 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":302:27)
#loc487 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":302:34)
#loc488 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":302:40)
#loc489 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":302:17)
#loc490 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":302:44)
#loc491 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":303:17)
#loc492 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":306:17)
#loc493 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":303:21)
#loc494 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":304:17)
#loc495 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":305:32)
#loc496 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":305:22)
#loc497 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":305:21)
#loc498 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":307:27)
#loc499 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":307:34)
#loc500 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":307:40)
#loc501 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":307:17)
#loc502 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":307:44)
#loc503 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":308:17)
#loc504 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":311:17)
#loc505 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":308:21)
#loc506 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":309:17)
#loc507 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":310:32)
#loc508 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":310:22)
#loc509 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":310:21)
#loc510 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":313:20)
#loc511 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":314:13)
#loc512 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":317:13)
#loc513 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":314:17)
#loc514 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":314:34)
#loc515 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":315:13)
#loc516 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":316:30)
#loc517 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":316:17)
#loc518 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":326:5)
#loc519 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":345:5)
#loc520 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":326:8)
#loc521 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":327:5)
#loc522 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":328:9)
#loc523 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":344:9)
#loc524 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":329:13)
#loc525 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":329:17)
#loc526 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":329:20)
#loc527 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":329:23)
#loc528 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":330:13)
#loc529 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":343:13)
#loc530 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":330:17)
#loc531 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":330:24)
#loc532 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":330:30)
#loc533 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":330:43)
#loc534 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":331:13)
#loc535 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":333:17)
#loc536 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":342:17)
#loc537 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":333:21)
#loc538 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":333:25)
#loc539 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":334:17)
#loc540 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":335:35)
#loc541 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":335:21)
#loc542 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":336:21)
#loc543 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":340:21)
#loc544 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":336:30)
#loc545 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":336:26)
#loc546 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":336:33)
#loc547 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":336:37)
#loc548 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":336:35)
#loc549 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":337:21)
#loc550 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":339:36)
#loc551 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":339:25)
#loc552 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":336:41)
#loc553 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":336:40)
#loc554 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":341:34)
#loc555 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":341:21)
#loc556 = loc("/usr/include/string.h":141:1)
#loc557 = loc("/usr/include/string.h":142:14)
#loc558 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":362:22)
#loc559 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":349:1)
#loc560 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":381:1)
#loc561 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":351:5)
#loc562 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":351:12)
#loc563 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":352:5)
#loc564 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":352:28)
#loc565 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":353:12)
#loc566 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":353:5)
#loc567 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":354:5)
#loc568 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":363:5)
#loc569 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":354:8)
#loc570 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":355:5)
#loc571 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":358:5)
#loc572 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":360:5)
#loc573 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":357:19)
#loc574 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":357:9)
#loc575 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":362:9)
#loc576 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":362:16)
#loc577 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":364:5)
#loc578 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":380:5)
#loc579 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":364:8)
#loc580 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":365:5)
#loc581 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":366:9)
#loc582 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":379:9)
#loc583 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":367:13)
#loc584 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":367:17)
#loc585 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":367:20)
#loc586 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":367:23)
#loc587 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":368:13)
#loc588 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":378:13)
#loc589 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":368:17)
#loc590 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":368:24)
#loc591 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":368:30)
#loc592 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":368:43)
#loc593 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":369:13)
#loc594 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":371:31)
#loc595 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":371:17)
#loc596 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":372:17)
#loc597 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":376:17)
#loc598 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":372:26)
#loc599 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":372:22)
#loc600 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":372:29)
#loc601 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":372:33)
#loc602 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":372:31)
#loc603 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":373:17)
#loc604 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":375:32)
#loc605 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":375:21)
#loc606 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":372:37)
#loc607 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":372:36)
#loc608 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":377:30)
#loc609 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":377:17)
#loc610 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":384:1)
#loc611 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":411:1)
#loc612 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":386:5)
#loc613 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":386:12)
#loc614 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":387:5)
#loc615 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":387:28)
#loc616 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":388:12)
#loc617 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":388:5)
#loc618 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":389:5)
#loc619 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":393:5)
#loc620 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":389:8)
#loc621 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":390:5)
#loc622 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":392:9)
#loc623 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":392:16)
#loc624 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":392:22)
#loc625 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":394:5)
#loc626 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":410:5)
#loc627 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":394:8)
#loc628 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":395:5)
#loc629 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":396:9)
#loc630 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":409:9)
#loc631 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":397:13)
#loc632 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":397:17)
#loc633 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":397:20)
#loc634 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":397:23)
#loc635 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":398:13)
#loc636 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":408:13)
#loc637 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":398:17)
#loc638 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":398:24)
#loc639 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":398:30)
#loc640 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":398:43)
#loc641 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":399:13)
#loc642 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":401:31)
#loc643 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":401:17)
#loc644 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":402:17)
#loc645 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":406:17)
#loc646 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":402:26)
#loc647 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":402:22)
#loc648 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":402:29)
#loc649 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":402:33)
#loc650 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":402:31)
#loc651 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":403:17)
#loc652 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":405:32)
#loc653 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":405:21)
#loc654 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":402:37)
#loc655 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":402:36)
#loc656 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":407:30)
#loc657 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_10.c":407:17)
#loc658 = loc(fused[#loc1, #loc2])
#loc659 = loc(fused[#loc3, #loc4])
#loc660 = loc(fused[#loc5, #loc6])
#loc661 = loc(fused[#loc7, #loc8])
#loc662 = loc(fused[#loc10, #loc11])
#loc663 = loc(fused[#loc12, #loc13])
#loc664 = loc(fused[#loc14, #loc15])
#loc665 = loc(fused[#loc16, #loc17])
#loc666 = loc(fused[#loc18, #loc19])
#loc667 = loc(fused[#loc20, #loc21])
#loc668 = loc(fused[#loc23, #loc24])
#loc669 = loc(fused[#loc25, #loc26])
#loc670 = loc(fused[#loc27, #loc28])
#loc671 = loc(fused[#loc29, #loc30])
#loc672 = loc(fused[#loc32, #loc31])
#loc673 = loc(fused[#loc33, #loc34])
#loc674 = loc(fused[#loc36, #loc34])
#loc675 = loc(fused[#loc37, #loc38])
#loc676 = loc(fused[#loc39, #loc40])
#loc677 = loc(fused[#loc41, #loc42])
#loc678 = loc(fused[#loc43, #loc44])
#loc679 = loc(fused[#loc45, #loc46])
#loc680 = loc(fused[#loc47, #loc48])
#loc681 = loc(fused[#loc51, #loc52])
#loc682 = loc(fused[#loc53, #loc54])
#loc683 = loc(fused[#loc59, #loc60])
#loc684 = loc(fused[#loc61, #loc62])
#loc685 = loc(fused[#loc63, #loc64])
#loc686 = loc(fused[#loc65, #loc62])
#loc687 = loc(fused[#loc67, #loc68])
#loc688 = loc(fused[#loc70, #loc71])
#loc689 = loc(fused[#loc72, #loc73])
#loc690 = loc(fused[#loc76, #loc74])
#loc691 = loc(fused[#loc80, #loc81])
#loc692 = loc(fused[#loc85, #loc86])
#loc693 = loc(fused[#loc87, #loc88])
#loc694 = loc(fused[#loc90, #loc91])
#loc695 = loc(fused[#loc92, #loc93])
#loc696 = loc(fused[#loc94, #loc95])
#loc697 = loc(fused[#loc96, #loc88])
#loc698 = loc(fused[#loc102, #loc103])
#loc699 = loc(fused[#loc104, #loc105])
#loc700 = loc(fused[#loc106, #loc107])
#loc701 = loc(fused[#loc106, #loc108])
#loc702 = loc(fused[#loc104, #loc109])
#loc703 = loc(fused[#loc112, #loc113])
#loc704 = loc(fused[#loc114, #loc115])
#loc705 = loc(fused[#loc116, #loc117])
#loc706 = loc(fused[#loc119, #loc120])
#loc707 = loc(fused[#loc121, #loc115])
#loc708 = loc(fused[#loc127, #loc128])
#loc709 = loc(fused[#loc126, #loc128])
#loc710 = loc(fused[#loc125, #loc128])
#loc711 = loc(fused[#loc124, #loc123])
#loc712 = loc(fused[#loc133, #loc134])
#loc713 = loc(fused[#loc135, #loc136])
#loc714 = loc(fused[#loc138, #loc136])
#loc715 = loc(fused[#loc141, #loc139])
#loc716 = loc(fused[#loc145, #loc146])
#loc717 = loc(fused[#loc147, #loc148])
#loc718 = loc(fused[#loc150, #loc148])
#loc719 = loc(fused[#loc153, #loc151])
#loc720 = loc(fused[#loc155, #loc156])
#loc721 = loc(fused[#loc157, #loc158])
#loc722 = loc(fused[#loc159, #loc156])
#loc723 = loc(fused[#loc162, #loc163])
#loc724 = loc(fused[#loc165, #loc163])
#loc725 = loc(fused[#loc166, #loc167])
#loc726 = loc(fused[#loc168, #loc169])
#loc727 = loc(fused[#loc168, #loc170])
#loc728 = loc(fused[#loc168, #loc171])
#loc729 = loc(fused[#loc172, #loc173])
#loc730 = loc(fused[#loc174, #loc176])
#loc731 = loc(fused[#loc177, #loc173])
#loc732 = loc(fused[#loc179, #loc178])
#loc733 = loc(fused[#loc180, #loc181])
#loc734 = loc(fused[#loc183, #loc182])
#loc735 = loc(fused[#loc184, #loc185])
#loc736 = loc(fused[#loc187, #loc181])
#loc737 = loc(fused[#loc189, #loc188])
#loc738 = loc(fused[#loc191, #loc190])
#loc739 = loc(fused[#loc194, #loc195])
#loc740 = loc(fused[#loc196, #loc197])
#loc741 = loc(fused[#loc198, #loc199])
#loc742 = loc(fused[#loc200, #loc201])
#loc743 = loc(fused[#loc202, #loc203])
#loc744 = loc(fused[#loc204, #loc205])
#loc745 = loc(fused[#loc206, #loc207])
#loc746 = loc(fused[#loc209, #loc210])
#loc747 = loc(fused[#loc211, #loc212])
#loc748 = loc(fused[#loc213, #loc214])
#loc749 = loc(fused[#loc216, #loc215])
#loc750 = loc(fused[#loc217, #loc218])
#loc751 = loc(fused[#loc220, #loc218])
#loc752 = loc(fused[#loc221, #loc222])
#loc753 = loc(fused[#loc223, #loc224])
#loc754 = loc(fused[#loc225, #loc226])
#loc755 = loc(fused[#loc227, #loc228])
#loc756 = loc(fused[#loc229, #loc230])
#loc757 = loc(fused[#loc231, #loc232])
#loc758 = loc(fused[#loc235, #loc236])
#loc759 = loc(fused[#loc237, #loc238])
#loc760 = loc(fused[#loc243, #loc244])
#loc761 = loc(fused[#loc245, #loc246])
#loc762 = loc(fused[#loc247, #loc248])
#loc763 = loc(fused[#loc249, #loc246])
#loc764 = loc(fused[#loc251, #loc252])
#loc765 = loc(fused[#loc254, #loc255])
#loc766 = loc(fused[#loc256, #loc257])
#loc767 = loc(fused[#loc259, #loc258])
#loc768 = loc(fused[#loc262, #loc263])
#loc769 = loc(fused[#loc266, #loc267])
#loc770 = loc(fused[#loc268, #loc269])
#loc771 = loc(fused[#loc271, #loc272])
#loc772 = loc(fused[#loc273, #loc274])
#loc773 = loc(fused[#loc275, #loc276])
#loc774 = loc(fused[#loc277, #loc269])
#loc775 = loc(fused[#loc283, #loc284])
#loc776 = loc(fused[#loc285, #loc286])
#loc777 = loc(fused[#loc287, #loc288])
#loc778 = loc(fused[#loc287, #loc289])
#loc779 = loc(fused[#loc285, #loc290])
#loc780 = loc(fused[#loc293, #loc294])
#loc781 = loc(fused[#loc295, #loc296])
#loc782 = loc(fused[#loc297, #loc298])
#loc783 = loc(fused[#loc300, #loc301])
#loc784 = loc(fused[#loc302, #loc296])
#loc785 = loc(fused[#loc308, #loc309])
#loc786 = loc(fused[#loc307, #loc309])
#loc787 = loc(fused[#loc306, #loc309])
#loc788 = loc(fused[#loc305, #loc304])
#loc789 = loc(fused[#loc314, #loc315])
#loc790 = loc(fused[#loc316, #loc317])
#loc791 = loc(fused[#loc319, #loc317])
#loc792 = loc(fused[#loc322, #loc320])
#loc793 = loc(fused[#loc326, #loc327])
#loc794 = loc(fused[#loc328, #loc329])
#loc795 = loc(fused[#loc331, #loc329])
#loc796 = loc(fused[#loc334, #loc332])
#loc797 = loc(fused[#loc336, #loc337])
#loc798 = loc(fused[#loc338, #loc339])
#loc799 = loc(fused[#loc340, #loc337])
#loc800 = loc(fused[#loc343, #loc344])
#loc801 = loc(fused[#loc346, #loc347, #loc348, #loc344])
#loc802 = loc(fused[#loc350, #loc351])
#loc803 = loc(fused[#loc352, #loc353])
#loc804 = loc(fused[#loc352, #loc354])
#loc805 = loc(fused[#loc352, #loc355])
#loc806 = loc(fused[#loc356, #loc357])
#loc807 = loc(fused[#loc358, #loc361])
#loc808 = loc(fused[#loc362, #loc357])
#loc809 = loc(fused[#loc363, #loc364])
#loc810 = loc(fused[#loc365, #loc366])
#loc811 = loc(fused[#loc367, #loc364])
#loc812 = loc(fused[#loc369, #loc368])
#loc813 = loc(fused[#loc370, #loc371])
#loc814 = loc(fused[#loc373, #loc372])
#loc815 = loc(fused[#loc374, #loc375])
#loc816 = loc(fused[#loc377, #loc371])
#loc817 = loc(fused[#loc379, #loc378])
#loc818 = loc(fused[#loc381, #loc380])
#loc819 = loc(fused[#loc384, #loc385])
#loc820 = loc(fused[#loc386, #loc387])
#loc821 = loc(fused[#loc388, #loc389])
#loc822 = loc(fused[#loc391, #loc390])
#loc823 = loc(fused[#loc392, #loc393])
#loc824 = loc(fused[#loc395, #loc393])
#loc825 = loc(fused[#loc396, #loc397])
#loc826 = loc(fused[#loc398, #loc399])
#loc827 = loc(fused[#loc400, #loc401])
#loc828 = loc(fused[#loc402, #loc403])
#loc829 = loc(fused[#loc404, #loc405])
#loc830 = loc(fused[#loc406, #loc407])
#loc831 = loc(fused[#loc410, #loc411])
#loc832 = loc(fused[#loc412, #loc413])
#loc833 = loc(fused[#loc418, #loc419])
#loc834 = loc(fused[#loc420, #loc421])
#loc835 = loc(fused[#loc422, #loc423])
#loc836 = loc(fused[#loc424, #loc421])
#loc837 = loc(fused[#loc426, #loc427])
#loc838 = loc(fused[#loc429, #loc430])
#loc839 = loc(fused[#loc431, #loc432])
#loc840 = loc(fused[#loc434, #loc433])
#loc841 = loc(fused[#loc437, #loc438])
#loc842 = loc(fused[#loc441, #loc442])
#loc843 = loc(fused[#loc443, #loc444])
#loc844 = loc(fused[#loc446, #loc447])
#loc845 = loc(fused[#loc448, #loc449])
#loc846 = loc(fused[#loc450, #loc451])
#loc847 = loc(fused[#loc452, #loc444])
#loc848 = loc(fused[#loc458, #loc459])
#loc849 = loc(fused[#loc460, #loc461])
#loc850 = loc(fused[#loc462, #loc463])
#loc851 = loc(fused[#loc462, #loc464])
#loc852 = loc(fused[#loc460, #loc465])
#loc853 = loc(fused[#loc468, #loc469])
#loc854 = loc(fused[#loc470, #loc471])
#loc855 = loc(fused[#loc472, #loc473])
#loc856 = loc(fused[#loc475, #loc476])
#loc857 = loc(fused[#loc477, #loc471])
#loc858 = loc(fused[#loc483, #loc484])
#loc859 = loc(fused[#loc482, #loc484])
#loc860 = loc(fused[#loc481, #loc484])
#loc861 = loc(fused[#loc480, #loc479])
#loc862 = loc(fused[#loc489, #loc490])
#loc863 = loc(fused[#loc491, #loc492])
#loc864 = loc(fused[#loc494, #loc492])
#loc865 = loc(fused[#loc497, #loc495])
#loc866 = loc(fused[#loc501, #loc502])
#loc867 = loc(fused[#loc503, #loc504])
#loc868 = loc(fused[#loc506, #loc504])
#loc869 = loc(fused[#loc509, #loc507])
#loc870 = loc(fused[#loc511, #loc512])
#loc871 = loc(fused[#loc513, #loc514])
#loc872 = loc(fused[#loc515, #loc512])
#loc873 = loc(fused[#loc518, #loc519])
#loc874 = loc(fused[#loc521, #loc519])
#loc875 = loc(fused[#loc522, #loc523])
#loc876 = loc(fused[#loc524, #loc525])
#loc877 = loc(fused[#loc524, #loc526])
#loc878 = loc(fused[#loc524, #loc527])
#loc879 = loc(fused[#loc528, #loc529])
#loc880 = loc(fused[#loc530, #loc533])
#loc881 = loc(fused[#loc534, #loc529])
#loc882 = loc(fused[#loc535, #loc536])
#loc883 = loc(fused[#loc537, #loc538])
#loc884 = loc(fused[#loc539, #loc536])
#loc885 = loc(fused[#loc541, #loc540])
#loc886 = loc(fused[#loc542, #loc543])
#loc887 = loc(fused[#loc545, #loc544])
#loc888 = loc(fused[#loc546, #loc547])
#loc889 = loc(fused[#loc549, #loc543])
#loc890 = loc(fused[#loc551, #loc550])
#loc891 = loc(fused[#loc553, #loc552])
#loc892 = loc(fused[#loc556, #loc557])
#loc893 = loc(fused[#loc559, #loc560])
#loc894 = loc(fused[#loc561, #loc562])
#loc895 = loc(fused[#loc563, #loc564])
#loc896 = loc(fused[#loc566, #loc565])
#loc897 = loc(fused[#loc567, #loc568])
#loc898 = loc(fused[#loc570, #loc571, #loc572, #loc568])
#loc899 = loc(fused[#loc577, #loc578])
#loc900 = loc(fused[#loc580, #loc578])
#loc901 = loc(fused[#loc581, #loc582])
#loc902 = loc(fused[#loc583, #loc584])
#loc903 = loc(fused[#loc583, #loc585])
#loc904 = loc(fused[#loc583, #loc586])
#loc905 = loc(fused[#loc587, #loc588])
#loc906 = loc(fused[#loc589, #loc592])
#loc907 = loc(fused[#loc593, #loc588])
#loc908 = loc(fused[#loc595, #loc594])
#loc909 = loc(fused[#loc596, #loc597])
#loc910 = loc(fused[#loc599, #loc598])
#loc911 = loc(fused[#loc600, #loc601])
#loc912 = loc(fused[#loc603, #loc597])
#loc913 = loc(fused[#loc605, #loc604])
#loc914 = loc(fused[#loc607, #loc606])
#loc915 = loc(fused[#loc610, #loc611])
#loc916 = loc(fused[#loc612, #loc613])
#loc917 = loc(fused[#loc614, #loc615])
#loc918 = loc(fused[#loc617, #loc616])
#loc919 = loc(fused[#loc618, #loc619])
#loc920 = loc(fused[#loc621, #loc619])
#loc921 = loc(fused[#loc625, #loc626])
#loc922 = loc(fused[#loc628, #loc626])
#loc923 = loc(fused[#loc629, #loc630])
#loc924 = loc(fused[#loc631, #loc632])
#loc925 = loc(fused[#loc631, #loc633])
#loc926 = loc(fused[#loc631, #loc634])
#loc927 = loc(fused[#loc635, #loc636])
#loc928 = loc(fused[#loc637, #loc640])
#loc929 = loc(fused[#loc641, #loc636])
#loc930 = loc(fused[#loc643, #loc642])
#loc931 = loc(fused[#loc644, #loc645])
#loc932 = loc(fused[#loc647, #loc646])
#loc933 = loc(fused[#loc648, #loc649])
#loc934 = loc(fused[#loc651, #loc645])
#loc935 = loc(fused[#loc653, #loc652])
#loc936 = loc(fused[#loc655, #loc654])
