!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc111)
  cir.func no_proto private  @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc112)
  cir.func private  @printLongLongLine(!s64i) loc(#loc113)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc114)
  cir.func no_proto  @CWE690_NULL_Deref_From_Return__int64_t_realloc_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc116)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc117)
    %2 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc15)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc16)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc16)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc17)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc118)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc119)
    %9 = cir.call @realloc(%4, %8) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc15)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc120)
    cir.store %10, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc121)
    cir.scope {
      %11 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc123)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc123)
      %13 = cir.call %12() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc24)
      %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc24)
      cir.if %14 {
        %15 = cir.const #cir.int<5> : !s64i loc(#loc29)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc30)
        %17 = cir.const #cir.int<0> : !s32i loc(#loc31)
        %18 = cir.ptr_stride(%16 : !cir.ptr<!s64i>, %17 : !s32i), !cir.ptr<!s64i> loc(#loc32)
        cir.store %15, %18 : !s64i, !cir.ptr<!s64i> loc(#loc125)
        %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc33)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc34)
        %21 = cir.ptr_stride(%19 : !cir.ptr<!s64i>, %20 : !s32i), !cir.ptr<!s64i> loc(#loc35)
        %22 = cir.load %21 : !cir.ptr<!s64i>, !s64i loc(#loc33)
        cir.call @printLongLongLine(%22) : (!s64i) -> () loc(#loc36)
        %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc37)
        %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc38)
        %25 = cir.cast(bitcast, %24 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc38)
        cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc37)
      } else {
        cir.scope {
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc41)
          %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc42)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc42)
          %18 = cir.cmp(ne, %15, %17) : !cir.ptr<!s64i>, !s32i loc(#loc127)
          %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc43)
          cir.if %19 {
            %20 = cir.const #cir.int<5> : !s64i loc(#loc45)
            %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc46)
            %22 = cir.const #cir.int<0> : !s32i loc(#loc47)
            %23 = cir.ptr_stride(%21 : !cir.ptr<!s64i>, %22 : !s32i), !cir.ptr<!s64i> loc(#loc48)
            cir.store %20, %23 : !s64i, !cir.ptr<!s64i> loc(#loc129)
            %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc49)
            %25 = cir.const #cir.int<0> : !s32i loc(#loc50)
            %26 = cir.ptr_stride(%24 : !cir.ptr<!s64i>, %25 : !s32i), !cir.ptr<!s64i> loc(#loc51)
            %27 = cir.load %26 : !cir.ptr<!s64i>, !s64i loc(#loc49)
            cir.call @printLongLongLine(%27) : (!s64i) -> () loc(#loc52)
            %28 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc53)
            %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc54)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc54)
            cir.call @free(%30) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc53)
          } loc(#loc128)
        } loc(#loc126)
      } loc(#loc124)
    } loc(#loc122)
    cir.return loc(#loc10)
  } loc(#loc115)
  cir.func no_proto  @CWE690_NULL_Deref_From_Return__int64_t_realloc_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc131)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc57)
    cir.return loc(#loc56)
  } loc(#loc130)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc133)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc63)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc134)
    %2 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc65)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc66)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc66)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc67)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc135)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc136)
    %9 = cir.call @realloc(%4, %8) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc65)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc137)
    cir.store %10, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc138)
    cir.scope {
      %11 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc140)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc140)
      %13 = cir.call %12() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc74)
      %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc74)
      cir.if %14 {
        cir.scope {
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc81)
          %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc82)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc82)
          %18 = cir.cmp(ne, %15, %17) : !cir.ptr<!s64i>, !s32i loc(#loc143)
          %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc83)
          cir.if %19 {
            %20 = cir.const #cir.int<5> : !s64i loc(#loc85)
            %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc86)
            %22 = cir.const #cir.int<0> : !s32i loc(#loc87)
            %23 = cir.ptr_stride(%21 : !cir.ptr<!s64i>, %22 : !s32i), !cir.ptr<!s64i> loc(#loc88)
            cir.store %20, %23 : !s64i, !cir.ptr<!s64i> loc(#loc145)
            %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc89)
            %25 = cir.const #cir.int<0> : !s32i loc(#loc90)
            %26 = cir.ptr_stride(%24 : !cir.ptr<!s64i>, %25 : !s32i), !cir.ptr<!s64i> loc(#loc91)
            %27 = cir.load %26 : !cir.ptr<!s64i>, !s64i loc(#loc89)
            cir.call @printLongLongLine(%27) : (!s64i) -> () loc(#loc92)
            %28 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc93)
            %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc94)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc94)
            cir.call @free(%30) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc93)
          } loc(#loc144)
        } loc(#loc142)
      } else {
        cir.scope {
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc97)
          %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc98)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc98)
          %18 = cir.cmp(ne, %15, %17) : !cir.ptr<!s64i>, !s32i loc(#loc147)
          %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc99)
          cir.if %19 {
            %20 = cir.const #cir.int<5> : !s64i loc(#loc101)
            %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc102)
            %22 = cir.const #cir.int<0> : !s32i loc(#loc103)
            %23 = cir.ptr_stride(%21 : !cir.ptr<!s64i>, %22 : !s32i), !cir.ptr<!s64i> loc(#loc104)
            cir.store %20, %23 : !s64i, !cir.ptr<!s64i> loc(#loc149)
            %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc105)
            %25 = cir.const #cir.int<0> : !s32i loc(#loc106)
            %26 = cir.ptr_stride(%24 : !cir.ptr<!s64i>, %25 : !s32i), !cir.ptr<!s64i> loc(#loc107)
            %27 = cir.load %26 : !cir.ptr<!s64i>, !s64i loc(#loc105)
            cir.call @printLongLongLine(%27) : (!s64i) -> () loc(#loc108)
            %28 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc109)
            %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc110)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc110)
            cir.call @free(%30) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc109)
          } loc(#loc148)
        } loc(#loc146)
      } loc(#loc141)
    } loc(#loc139)
    cir.return loc(#loc60)
  } loc(#loc132)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":683:1)
#loc2 = loc("/usr/include/stdlib.h":684:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":23:1)
#loc10 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":46:1)
#loc11 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":25:5)
#loc12 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":25:15)
#loc13 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":26:12)
#loc14 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":26:5)
#loc15 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":28:23)
#loc16 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":28:31)
#loc17 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":28:37)
#loc18 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":28:39)
#loc19 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":28:53)
#loc20 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":28:54)
#loc21 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":28:5)
#loc22 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":29:5)
#loc23 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":45:5)
#loc24 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":29:8)
#loc25 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":29:33)
#loc26 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":30:5)
#loc27 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":35:5)
#loc28 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":37:5)
#loc29 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":32:19)
#loc30 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":32:9)
#loc31 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":32:14)
#loc32 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":32:15)
#loc33 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":33:27)
#loc34 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":33:32)
#loc35 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":33:33)
#loc36 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":33:9)
#loc37 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":34:9)
#loc38 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":34:14)
#loc39 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":39:9)
#loc40 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":44:9)
#loc41 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":39:13)
#loc42 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":39:21)
#loc43 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":39:18)
#loc44 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":40:9)
#loc45 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":41:23)
#loc46 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":41:13)
#loc47 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":41:18)
#loc48 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":41:19)
#loc49 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":42:31)
#loc50 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":42:36)
#loc51 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":42:37)
#loc52 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":42:13)
#loc53 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":43:13)
#loc54 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":43:18)
#loc55 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":82:1)
#loc56 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":85:1)
#loc57 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":84:5)
#loc58 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":84:13)
#loc59 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":54:1)
#loc60 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":80:1)
#loc61 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":56:5)
#loc62 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":56:15)
#loc63 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":57:12)
#loc64 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":57:5)
#loc65 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":59:23)
#loc66 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":59:31)
#loc67 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":59:37)
#loc68 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":59:39)
#loc69 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":59:53)
#loc70 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":59:54)
#loc71 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":59:5)
#loc72 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":60:5)
#loc73 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":79:5)
#loc74 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":60:8)
#loc75 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":60:33)
#loc76 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":61:5)
#loc77 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":69:5)
#loc78 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":71:5)
#loc79 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":63:9)
#loc80 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":68:9)
#loc81 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":63:13)
#loc82 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":63:21)
#loc83 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":63:18)
#loc84 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":64:9)
#loc85 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":65:23)
#loc86 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":65:13)
#loc87 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":65:18)
#loc88 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":65:19)
#loc89 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":66:31)
#loc90 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":66:36)
#loc91 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":66:37)
#loc92 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":66:13)
#loc93 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":67:13)
#loc94 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":67:18)
#loc95 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":73:9)
#loc96 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":78:9)
#loc97 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":73:13)
#loc98 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":73:21)
#loc99 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":73:18)
#loc100 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":74:9)
#loc101 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":75:23)
#loc102 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":75:13)
#loc103 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":75:18)
#loc104 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":75:19)
#loc105 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":76:31)
#loc106 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":76:36)
#loc107 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":76:37)
#loc108 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":76:13)
#loc109 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":77:13)
#loc110 = loc("CWE690_NULL_Deref_From_Return__int64_t_realloc_12.c":77:18)
#loc111 = loc(fused[#loc1, #loc2])
#loc112 = loc(fused[#loc3, #loc4])
#loc113 = loc(fused[#loc5, #loc6])
#loc114 = loc(fused[#loc7, #loc8])
#loc115 = loc(fused[#loc9, #loc10])
#loc116 = loc(fused[#loc11, #loc12])
#loc117 = loc(fused[#loc14, #loc13])
#loc118 = loc(fused[#loc18, #loc19])
#loc119 = loc(fused[#loc17, #loc19])
#loc120 = loc(fused[#loc15, #loc20])
#loc121 = loc(fused[#loc21, #loc20])
#loc122 = loc(fused[#loc22, #loc23])
#loc123 = loc(fused[#loc24, #loc25])
#loc124 = loc(fused[#loc26, #loc27, #loc28, #loc23])
#loc125 = loc(fused[#loc30, #loc29])
#loc126 = loc(fused[#loc39, #loc40])
#loc127 = loc(fused[#loc41, #loc42])
#loc128 = loc(fused[#loc44, #loc40])
#loc129 = loc(fused[#loc46, #loc45])
#loc130 = loc(fused[#loc55, #loc56])
#loc131 = loc(fused[#loc57, #loc58])
#loc132 = loc(fused[#loc59, #loc60])
#loc133 = loc(fused[#loc61, #loc62])
#loc134 = loc(fused[#loc64, #loc63])
#loc135 = loc(fused[#loc68, #loc69])
#loc136 = loc(fused[#loc67, #loc69])
#loc137 = loc(fused[#loc65, #loc70])
#loc138 = loc(fused[#loc71, #loc70])
#loc139 = loc(fused[#loc72, #loc73])
#loc140 = loc(fused[#loc74, #loc75])
#loc141 = loc(fused[#loc76, #loc77, #loc78, #loc73])
#loc142 = loc(fused[#loc79, #loc80])
#loc143 = loc(fused[#loc81, #loc82])
#loc144 = loc(fused[#loc84, #loc80])
#loc145 = loc(fused[#loc86, #loc85])
#loc146 = loc(fused[#loc95, #loc96])
#loc147 = loc(fused[#loc97, #loc98])
#loc148 = loc(fused[#loc100, #loc96])
#loc149 = loc(fused[#loc102, #loc101])
