!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc1 = loc("../../../testcasesupport/std_testcase.h":61:7)
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc1)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc1)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc1)
    cir.return loc(#loc1)
  } loc(#loc1)
  cir.func private @printIntLine(!s32i) loc(#loc104)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc105)
  cir.func @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_063badEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["buffer"] {alignment = 1 : i64} loc(#loc107)
    %1 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc108)
    %2 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc109)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc14)
    cir.store %3, %2 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc110)
    cir.br ^bb1 loc(#loc111)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<5> : !s32i loc(#loc18)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc19)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc112)
    cir.brcond %6 ^bb2, ^bb5 loc(#loc113)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc114)
  ^bb3:  // pred: ^bb2
    %7 = cir.const #cir.int<8> : !u64i loc(#loc115)
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc24)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc24)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc115)
    cir.call @_ZN12TwoIntsClassC2Ev(%10) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc11)
    cir.store %10, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc108)
    %11 = cir.const #cir.int<2> : !s32i loc(#loc25)
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc26)
    %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc27)
    cir.store %11, %13 : !s32i, !cir.ptr<!s32i> loc(#loc116)
    %14 = cir.const #cir.int<2> : !s32i loc(#loc28)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc29)
    %16 = cir.get_member %15[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
    cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc117)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc31)
    cir.store %17, %2 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc118)
    cir.br ^bb4 loc(#loc22)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc17)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc17)
  ^bb6:  // pred: ^bb5
    %18 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc33)
    %19 = cir.get_member %18[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc27)
    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc35)
    %21 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc36)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc36)
    cir.call @_ZdlPv(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc37)
    cir.return loc(#loc7)
  } loc(#loc106)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc119)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc40)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc120)
  cir.func internal private @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06L8goodG2B1Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc122)
    %1 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc123)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc49)
    cir.store %2, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc124)
    cir.br ^bb1 loc(#loc125)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc53)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc54)
    %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc126)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc127)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc40)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    cir.br ^bb6 loc(#loc56)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc128)
  ^bb4:  // pred: ^bb3
    %8 = cir.const #cir.int<8> : !u64i loc(#loc129)
    %9 = cir.call @_Znwm(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc122)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc129)
    cir.call @_ZN12TwoIntsClassC2Ev(%10) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc46)
    cir.store %10, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc122)
    %11 = cir.const #cir.int<2> : !s32i loc(#loc62)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc63)
    %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc27)
    cir.store %11, %13 : !s32i, !cir.ptr<!s32i> loc(#loc130)
    %14 = cir.const #cir.int<2> : !s32i loc(#loc64)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc65)
    %16 = cir.get_member %15[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
    cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc131)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc66)
    cir.store %17, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc132)
    cir.br ^bb5 loc(#loc60)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc52)
  ^bb6:  // 2 preds: ^bb2, ^bb5
    cir.br ^bb7 loc(#loc52)
  ^bb7:  // pred: ^bb6
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc68)
    %19 = cir.get_member %18[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc27)
    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc69)
    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc70)
    %21 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc71)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc71)
    cir.call @_ZdlPv(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc72)
    cir.return loc(#loc44)
  } loc(#loc121)
  cir.func internal private @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06L8goodG2B2Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc134)
    %1 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc135)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc79)
    cir.store %2, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc136)
    cir.br ^bb1 loc(#loc137)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc83)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc84)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc138)
    cir.brcond %5 ^bb2, ^bb5 loc(#loc139)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc140)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.int<8> : !u64i loc(#loc141)
    %7 = cir.call @_Znwm(%6) : (!u64i) -> !cir.ptr<!void> loc(#loc134)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc141)
    cir.call @_ZN12TwoIntsClassC2Ev(%8) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc76)
    cir.store %8, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc134)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc89)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc90)
    %11 = cir.get_member %10[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc27)
    cir.store %9, %11 : !s32i, !cir.ptr<!s32i> loc(#loc142)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc91)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc92)
    %14 = cir.get_member %13[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
    cir.store %12, %14 : !s32i, !cir.ptr<!s32i> loc(#loc143)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc93)
    cir.store %15, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc144)
    cir.br ^bb4 loc(#loc87)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc82)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc82)
  ^bb6:  // pred: ^bb5
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc95)
    %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc27)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc97)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc98)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc98)
    cir.call @_ZdlPv(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc99)
    cir.return loc(#loc74)
  } loc(#loc133)
  cir.func @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_064goodEv() extra(#fn_attr2) {
    cir.call @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06L8goodG2B1Ev() : () -> () loc(#loc102)
    cir.call @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06L8goodG2B2Ev() : () -> () loc(#loc103)
    cir.return loc(#loc101)
  } loc(#loc145)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":0:0)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc5 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":31:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":49:1)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":39:13)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":39:45)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":40:13)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":40:53)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":33:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":33:20)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":34:12)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":34:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":35:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":45:5)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":35:8)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":35:27)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":36:5)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":37:9)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":44:9)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":40:41)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":40:45)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":41:34)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":41:13)
#loc27 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":42:34)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":42:13)
#loc30 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":43:20)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":43:13)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":46:18)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":46:24)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":46:5)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":48:12)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":31:6)
#loc38 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc39 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":63:19)
#loc41 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc42 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":56:1)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":78:1)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":69:13)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":69:45)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":58:5)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":58:20)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":59:12)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":59:5)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":60:5)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":74:5)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":60:8)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":60:27)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":61:5)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":64:5)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":66:5)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":63:9)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":67:9)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":73:9)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":69:41)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":70:34)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":70:13)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":71:34)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":71:13)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":72:20)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":72:13)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":75:18)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":75:24)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":75:5)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":77:12)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":56:13)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":81:1)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":98:1)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":89:13)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":89:45)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":83:5)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":83:20)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":84:12)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":84:5)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":85:5)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":94:5)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":85:8)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":85:27)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":86:5)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":87:9)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":93:9)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":89:41)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":90:34)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":90:13)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":91:34)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":91:13)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":92:20)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":92:13)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":95:18)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":95:24)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":95:5)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":97:12)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":81:13)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":100:1)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":104:1)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":102:5)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_06.cpp":103:5)
#loc104 = loc(fused[#loc2, #loc3])
#loc105 = loc(fused[#loc4, #loc5])
#loc106 = loc(fused[#loc6, #loc7])
#loc107 = loc(fused[#loc8, #loc9])
#loc108 = loc(fused[#loc10, #loc11])
#loc109 = loc(fused[#loc12, #loc13])
#loc110 = loc(fused[#loc15, #loc14])
#loc111 = loc(fused[#loc16, #loc17])
#loc112 = loc(fused[#loc18, #loc19])
#loc113 = loc(fused[#loc20, #loc17])
#loc114 = loc(fused[#loc21, #loc22])
#loc115 = loc(fused[#loc23, #loc11])
#loc116 = loc(fused[#loc26, #loc25])
#loc117 = loc(fused[#loc29, #loc28])
#loc118 = loc(fused[#loc32, #loc31])
#loc119 = loc(fused[#loc38, #loc39])
#loc120 = loc(fused[#loc41, #loc42])
#loc121 = loc(fused[#loc43, #loc44])
#loc122 = loc(fused[#loc45, #loc46])
#loc123 = loc(fused[#loc47, #loc48])
#loc124 = loc(fused[#loc50, #loc49])
#loc125 = loc(fused[#loc51, #loc52])
#loc126 = loc(fused[#loc53, #loc54])
#loc127 = loc(fused[#loc55, #loc56, #loc57, #loc52])
#loc128 = loc(fused[#loc59, #loc60])
#loc129 = loc(fused[#loc61, #loc46])
#loc130 = loc(fused[#loc63, #loc62])
#loc131 = loc(fused[#loc65, #loc64])
#loc132 = loc(fused[#loc67, #loc66])
#loc133 = loc(fused[#loc73, #loc74])
#loc134 = loc(fused[#loc75, #loc76])
#loc135 = loc(fused[#loc77, #loc78])
#loc136 = loc(fused[#loc80, #loc79])
#loc137 = loc(fused[#loc81, #loc82])
#loc138 = loc(fused[#loc83, #loc84])
#loc139 = loc(fused[#loc85, #loc82])
#loc140 = loc(fused[#loc86, #loc87])
#loc141 = loc(fused[#loc88, #loc76])
#loc142 = loc(fused[#loc90, #loc89])
#loc143 = loc(fused[#loc92, #loc91])
#loc144 = loc(fused[#loc94, #loc93])
#loc145 = loc(fused[#loc100, #loc101])
