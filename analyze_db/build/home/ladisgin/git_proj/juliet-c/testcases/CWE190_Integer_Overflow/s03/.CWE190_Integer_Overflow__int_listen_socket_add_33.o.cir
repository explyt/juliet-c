!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc120 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":97:44)
#loc274 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":206:44)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_add_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc317)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc318)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc319)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc320)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc321)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc322)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc323)
  cir.func private @close(!s32i) -> !s32i loc(#loc324)
  cir.func private @printIntLine(!s32i) loc(#loc325)
  cir.func @_ZN49CWE190_Integer_Overflow__int_listen_socket_add_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc327)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc328)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc329)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc330)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc331)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc332)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc333)
    %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc334)
    %8 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc335)
    cir.store %7, %8 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc38)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc39)
    cir.store %9, %7 : !s32i, !cir.ptr<!s32i> loc(#loc336)
    cir.br ^bb1 loc(#loc337)
  ^bb1:  // pred: ^bb0
    %10 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc26)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc329)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc28)
    cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc330)
    cir.br ^bb2 loc(#loc338)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc338)
  ^bb3:  // pred: ^bb32
    %14 = cir.const #cir.int<0> : !s32i loc(#loc45)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc45)
    cir.brcond %15 ^bb4, ^bb33 loc(#loc45)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %16 = cir.const #cir.int<2> : !s32i loc(#loc46)
    %17 = cir.const #cir.int<1> : !u32i loc(#loc47)
    %18 = cir.cast(integral, %17 : !u32i), !s32i loc(#loc47)
    %19 = cir.const #cir.int<6> : !u32i loc(#loc48)
    %20 = cir.cast(integral, %19 : !u32i), !s32i loc(#loc48)
    %21 = cir.call @socket(%16, %18, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc49)
    cir.store %21, %2 : !s32i, !cir.ptr<!s32i> loc(#loc339)
    cir.br ^bb5 loc(#loc340)
  ^bb5:  // pred: ^bb4
    %22 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc54)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc55)
    %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc55)
    %25 = cir.cmp(eq, %22, %24) : !s32i, !cir.bool loc(#loc341)
    cir.brcond %25 ^bb6, ^bb7 loc(#loc342)
  ^bb6:  // pred: ^bb5
    cir.br ^bb33 loc(#loc57)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc53)
  ^bb8:  // pred: ^bb7
    %26 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc343)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc60)
    %28 = cir.const #cir.int<16> : !u64i loc(#loc344)
    cir.libc.memset %28 bytes from %26 set to %27 : !cir.ptr<!void>, !s32i, !u64i loc(#loc345)
    %29 = cir.const #cir.int<2> : !s32i loc(#loc65)
    %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc65)
    %31 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
    cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc346)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc68)
    %34 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc69)
    %35 = cir.get_member %34[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc70)
    cir.store %33, %35 : !u32i, !cir.ptr<!u32i> loc(#loc347)
    %36 = cir.const #cir.int<27015> : !s32i loc(#loc72)
    %37 = cir.cast(integral, %36 : !s32i), !u16i loc(#loc72)
    %38 = cir.call @htons(%37) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc73)
    %39 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
    cir.store %38, %39 : !u16i, !cir.ptr<!u16i> loc(#loc348)
    cir.br ^bb9 loc(#loc349)
  ^bb9:  // pred: ^bb8
    %40 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    %41 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc350)
    %42 = cir.const #cir.int<16> : !u64i loc(#loc351)
    %43 = cir.cast(integral, %42 : !u64i), !u32i loc(#loc351)
    %44 = cir.call @bind(%40, %41, %43) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc84)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc85)
    %46 = cir.unary(minus, %45) : !s32i, !s32i loc(#loc85)
    %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc352)
    cir.brcond %47 ^bb10, ^bb11 loc(#loc353)
  ^bb10:  // pred: ^bb9
    cir.br ^bb33 loc(#loc87)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc78)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc354)
  ^bb13:  // pred: ^bb12
    %48 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    %49 = cir.const #cir.int<5> : !s32i loc(#loc91)
    %50 = cir.call @listen(%48, %49) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc92)
    %51 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %52 = cir.unary(minus, %51) : !s32i, !s32i loc(#loc93)
    %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc355)
    cir.brcond %53 ^bb14, ^bb15 loc(#loc356)
  ^bb14:  // pred: ^bb13
    cir.br ^bb33 loc(#loc95)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc89)
  ^bb16:  // pred: ^bb15
    %54 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    %55 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc97)
    %56 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc98)
    %57 = cir.call @accept(%54, %55, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc99)
    cir.store %57, %3 : !s32i, !cir.ptr<!s32i> loc(#loc357)
    cir.br ^bb17 loc(#loc358)
  ^bb17:  // pred: ^bb16
    %58 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc105)
    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc359)
    cir.brcond %61 ^bb18, ^bb19 loc(#loc360)
  ^bb18:  // pred: ^bb17
    cir.br ^bb33 loc(#loc107)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc103)
  ^bb20:  // pred: ^bb19
    %62 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc108)
    %63 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc109)
    %64 = cir.cast(bitcast, %63 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc109)
    %65 = cir.const #cir.int<3> : !s32i loc(#loc110)
    %66 = cir.cast(integral, %65 : !s32i), !u64i loc(#loc110)
    %67 = cir.const #cir.int<4> : !u64i loc(#loc110)
    %68 = cir.binop(mul, %66, %67) : !u64i loc(#loc110)
    %69 = cir.const #cir.int<2> : !s32i loc(#loc110)
    %70 = cir.cast(integral, %69 : !s32i), !u64i loc(#loc110)
    %71 = cir.binop(add, %68, %70) : !u64i loc(#loc110)
    %72 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %73 = cir.cast(integral, %72 : !s32i), !u64i loc(#loc111)
    %74 = cir.binop(sub, %71, %73) : !u64i loc(#loc361)
    %75 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %76 = cir.call @recv(%62, %64, %74, %75) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc113)
    %77 = cir.cast(integral, %76 : !s64i), !s32i loc(#loc113)
    cir.store %77, %0 : !s32i, !cir.ptr<!s32i> loc(#loc362)
    cir.br ^bb21 loc(#loc363)
  ^bb21:  // pred: ^bb20
    %78 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    %79 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc119)
    %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc364)
    cir.brcond %81 ^bb22, ^bb23 loc(#loc120)
  ^bb22:  // pred: ^bb21
    %82 = cir.const #true loc(#loc120)
    cir.br ^bb28(%82 : !cir.bool) loc(#loc120)
  ^bb23:  // pred: ^bb21
    %83 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc121)
    %84 = cir.const #cir.int<0> : !s32i loc(#loc122)
    %85 = cir.cmp(eq, %83, %84) : !s32i, !cir.bool loc(#loc365)
    cir.brcond %85 ^bb24, ^bb25 loc(#loc120)
  ^bb24:  // pred: ^bb23
    %86 = cir.const #true loc(#loc120)
    cir.br ^bb26(%86 : !cir.bool) loc(#loc120)
  ^bb25:  // pred: ^bb23
    %87 = cir.const #false loc(#loc120)
    cir.br ^bb26(%87 : !cir.bool) loc(#loc120)
  ^bb26(%88: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":97:44)):  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc120)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28(%88 : !cir.bool) loc(#loc120)
  ^bb28(%89: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":97:44)):  // 2 preds: ^bb22, ^bb27
    cir.br ^bb29 loc(#loc120)
  ^bb29:  // pred: ^bb28
    cir.brcond %89 ^bb30, ^bb31 loc(#loc366)
  ^bb30:  // pred: ^bb29
    cir.br ^bb33 loc(#loc124)
  ^bb31:  // pred: ^bb29
    cir.br ^bb32 loc(#loc117)
  ^bb32:  // pred: ^bb31
    %90 = cir.const #cir.int<0> : !s8i loc(#loc125)
    %91 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    %92 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc127)
    %93 = cir.ptr_stride(%92 : !cir.ptr<!s8i>, %91 : !s32i), !cir.ptr<!s8i> loc(#loc127)
    cir.store %90, %93 : !s8i, !cir.ptr<!s8i> loc(#loc367)
    %94 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc128)
    %95 = cir.call @atoi(%94) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc129)
    cir.store %95, %7 : !s32i, !cir.ptr<!s32i> loc(#loc368)
    cir.br ^bb3 loc(#loc44)
  ^bb33:  // 6 preds: ^bb3, ^bb6, ^bb10, ^bb14, ^bb18, ^bb30
    cir.br ^bb34 loc(#loc44)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc369)
  ^bb35:  // pred: ^bb34
    %96 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc134)
    %97 = cir.const #cir.int<1> : !s32i loc(#loc135)
    %98 = cir.unary(minus, %97) : !s32i, !s32i loc(#loc135)
    %99 = cir.cmp(ne, %96, %98) : !s32i, !cir.bool loc(#loc370)
    cir.brcond %99 ^bb36, ^bb37 loc(#loc371)
  ^bb36:  // pred: ^bb35
    %100 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    %101 = cir.call @close(%100) : (!s32i) -> !s32i loc(#loc138)
    cir.br ^bb37 loc(#loc133)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc133)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc372)
  ^bb39:  // pred: ^bb38
    %102 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc141)
    %103 = cir.const #cir.int<1> : !s32i loc(#loc142)
    %104 = cir.unary(minus, %103) : !s32i, !s32i loc(#loc142)
    %105 = cir.cmp(ne, %102, %104) : !s32i, !cir.bool loc(#loc373)
    cir.brcond %105 ^bb40, ^bb41 loc(#loc374)
  ^bb40:  // pred: ^bb39
    %106 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    %107 = cir.call @close(%106) : (!s32i) -> !s32i loc(#loc145)
    cir.br ^bb41 loc(#loc140)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc140)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc42)
  ^bb43:  // pred: ^bb42
    cir.br ^bb44 loc(#loc375)
  ^bb44:  // pred: ^bb43
    %108 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc32)
    %109 = cir.load %108 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    cir.store %109, %5 : !s32i, !cir.ptr<!s32i> loc(#loc332)
    cir.br ^bb45 loc(#loc376)
  ^bb45:  // pred: ^bb44
    %110 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    %111 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %112 = cir.binop(add, %110, %111) nsw : !s32i loc(#loc150)
    cir.store %112, %6 : !s32i, !cir.ptr<!s32i> loc(#loc333)
    %113 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc151)
    cir.call @printIntLine(%113) : (!s32i) -> () loc(#loc152)
    cir.br ^bb46 loc(#loc149)
  ^bb46:  // pred: ^bb45
    cir.br ^bb47 loc(#loc147)
  ^bb47:  // pred: ^bb46
    cir.return loc(#loc20)
  } loc(#loc326)
  cir.func internal private @_ZN49CWE190_Integer_Overflow__int_listen_socket_add_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc378)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc379)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc380)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc381)
    cir.store %2, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc162)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc163)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc382)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc165)
    cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc383)
    cir.br ^bb1 loc(#loc384)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc156)
    %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc378)
    cir.br ^bb2 loc(#loc385)
  ^bb2:  // pred: ^bb1
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc171)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc158)
    %10 = cir.binop(add, %8, %9) nsw : !s32i loc(#loc171)
    cir.store %10, %1 : !s32i, !cir.ptr<!s32i> loc(#loc379)
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc172)
    cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc173)
    cir.br ^bb3 loc(#loc170)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc168)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc154)
  } loc(#loc377)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc386)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc176)
  cir.func internal private @_ZN49CWE190_Integer_Overflow__int_listen_socket_add_33L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc388)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc389)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc390)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc391)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc392)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc393)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc394)
    %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc395)
    %8 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc396)
    cir.store %7, %8 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc196)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc197)
    cir.store %9, %7 : !s32i, !cir.ptr<!s32i> loc(#loc397)
    cir.br ^bb1 loc(#loc398)
  ^bb1:  // pred: ^bb0
    %10 = cir.const #cir.int<1> : !s32i loc(#loc184)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc184)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc390)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc186)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc186)
    cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc391)
    cir.br ^bb2 loc(#loc399)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc399)
  ^bb3:  // pred: ^bb32
    %14 = cir.const #cir.int<0> : !s32i loc(#loc203)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc203)
    cir.brcond %15 ^bb4, ^bb33 loc(#loc203)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %16 = cir.const #cir.int<2> : !s32i loc(#loc204)
    %17 = cir.const #cir.int<1> : !u32i loc(#loc205)
    %18 = cir.cast(integral, %17 : !u32i), !s32i loc(#loc205)
    %19 = cir.const #cir.int<6> : !u32i loc(#loc206)
    %20 = cir.cast(integral, %19 : !u32i), !s32i loc(#loc206)
    %21 = cir.call @socket(%16, %18, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc207)
    cir.store %21, %2 : !s32i, !cir.ptr<!s32i> loc(#loc400)
    cir.br ^bb5 loc(#loc401)
  ^bb5:  // pred: ^bb4
    %22 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc212)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc213)
    %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc213)
    %25 = cir.cmp(eq, %22, %24) : !s32i, !cir.bool loc(#loc402)
    cir.brcond %25 ^bb6, ^bb7 loc(#loc403)
  ^bb6:  // pred: ^bb5
    cir.br ^bb33 loc(#loc215)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc211)
  ^bb8:  // pred: ^bb7
    %26 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc404)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc218)
    %28 = cir.const #cir.int<16> : !u64i loc(#loc405)
    cir.libc.memset %28 bytes from %26 set to %27 : !cir.ptr<!void>, !s32i, !u64i loc(#loc406)
    %29 = cir.const #cir.int<2> : !s32i loc(#loc223)
    %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc223)
    %31 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
    cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc407)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc225)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc225)
    %34 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc69)
    %35 = cir.get_member %34[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc70)
    cir.store %33, %35 : !u32i, !cir.ptr<!u32i> loc(#loc408)
    %36 = cir.const #cir.int<27015> : !s32i loc(#loc227)
    %37 = cir.cast(integral, %36 : !s32i), !u16i loc(#loc227)
    %38 = cir.call @htons(%37) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc228)
    %39 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
    cir.store %38, %39 : !u16i, !cir.ptr<!u16i> loc(#loc409)
    cir.br ^bb9 loc(#loc410)
  ^bb9:  // pred: ^bb8
    %40 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc233)
    %41 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc411)
    %42 = cir.const #cir.int<16> : !u64i loc(#loc412)
    %43 = cir.cast(integral, %42 : !u64i), !u32i loc(#loc412)
    %44 = cir.call @bind(%40, %41, %43) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc238)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc239)
    %46 = cir.unary(minus, %45) : !s32i, !s32i loc(#loc239)
    %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc413)
    cir.brcond %47 ^bb10, ^bb11 loc(#loc414)
  ^bb10:  // pred: ^bb9
    cir.br ^bb33 loc(#loc241)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc232)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc415)
  ^bb13:  // pred: ^bb12
    %48 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc244)
    %49 = cir.const #cir.int<5> : !s32i loc(#loc245)
    %50 = cir.call @listen(%48, %49) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc246)
    %51 = cir.const #cir.int<1> : !s32i loc(#loc247)
    %52 = cir.unary(minus, %51) : !s32i, !s32i loc(#loc247)
    %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc416)
    cir.brcond %53 ^bb14, ^bb15 loc(#loc417)
  ^bb14:  // pred: ^bb13
    cir.br ^bb33 loc(#loc249)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc243)
  ^bb16:  // pred: ^bb15
    %54 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc250)
    %55 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc251)
    %56 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc252)
    %57 = cir.call @accept(%54, %55, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc253)
    cir.store %57, %3 : !s32i, !cir.ptr<!s32i> loc(#loc418)
    cir.br ^bb17 loc(#loc419)
  ^bb17:  // pred: ^bb16
    %58 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc258)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc259)
    %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc259)
    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc420)
    cir.brcond %61 ^bb18, ^bb19 loc(#loc421)
  ^bb18:  // pred: ^bb17
    cir.br ^bb33 loc(#loc261)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc257)
  ^bb20:  // pred: ^bb19
    %62 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc262)
    %63 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc263)
    %64 = cir.cast(bitcast, %63 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc263)
    %65 = cir.const #cir.int<3> : !s32i loc(#loc264)
    %66 = cir.cast(integral, %65 : !s32i), !u64i loc(#loc264)
    %67 = cir.const #cir.int<4> : !u64i loc(#loc264)
    %68 = cir.binop(mul, %66, %67) : !u64i loc(#loc264)
    %69 = cir.const #cir.int<2> : !s32i loc(#loc264)
    %70 = cir.cast(integral, %69 : !s32i), !u64i loc(#loc264)
    %71 = cir.binop(add, %68, %70) : !u64i loc(#loc264)
    %72 = cir.const #cir.int<1> : !s32i loc(#loc265)
    %73 = cir.cast(integral, %72 : !s32i), !u64i loc(#loc265)
    %74 = cir.binop(sub, %71, %73) : !u64i loc(#loc422)
    %75 = cir.const #cir.int<0> : !s32i loc(#loc266)
    %76 = cir.call @recv(%62, %64, %74, %75) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc267)
    %77 = cir.cast(integral, %76 : !s64i), !s32i loc(#loc267)
    cir.store %77, %0 : !s32i, !cir.ptr<!s32i> loc(#loc423)
    cir.br ^bb21 loc(#loc424)
  ^bb21:  // pred: ^bb20
    %78 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc272)
    %79 = cir.const #cir.int<1> : !s32i loc(#loc273)
    %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc273)
    %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc425)
    cir.brcond %81 ^bb22, ^bb23 loc(#loc274)
  ^bb22:  // pred: ^bb21
    %82 = cir.const #true loc(#loc274)
    cir.br ^bb28(%82 : !cir.bool) loc(#loc274)
  ^bb23:  // pred: ^bb21
    %83 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc275)
    %84 = cir.const #cir.int<0> : !s32i loc(#loc276)
    %85 = cir.cmp(eq, %83, %84) : !s32i, !cir.bool loc(#loc426)
    cir.brcond %85 ^bb24, ^bb25 loc(#loc274)
  ^bb24:  // pred: ^bb23
    %86 = cir.const #true loc(#loc274)
    cir.br ^bb26(%86 : !cir.bool) loc(#loc274)
  ^bb25:  // pred: ^bb23
    %87 = cir.const #false loc(#loc274)
    cir.br ^bb26(%87 : !cir.bool) loc(#loc274)
  ^bb26(%88: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":206:44)):  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc274)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28(%88 : !cir.bool) loc(#loc274)
  ^bb28(%89: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":206:44)):  // 2 preds: ^bb22, ^bb27
    cir.br ^bb29 loc(#loc274)
  ^bb29:  // pred: ^bb28
    cir.brcond %89 ^bb30, ^bb31 loc(#loc427)
  ^bb30:  // pred: ^bb29
    cir.br ^bb33 loc(#loc278)
  ^bb31:  // pred: ^bb29
    cir.br ^bb32 loc(#loc271)
  ^bb32:  // pred: ^bb31
    %90 = cir.const #cir.int<0> : !s8i loc(#loc279)
    %91 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc280)
    %92 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc281)
    %93 = cir.ptr_stride(%92 : !cir.ptr<!s8i>, %91 : !s32i), !cir.ptr<!s8i> loc(#loc281)
    cir.store %90, %93 : !s8i, !cir.ptr<!s8i> loc(#loc428)
    %94 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc282)
    %95 = cir.call @atoi(%94) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc283)
    cir.store %95, %7 : !s32i, !cir.ptr<!s32i> loc(#loc429)
    cir.br ^bb3 loc(#loc202)
  ^bb33:  // 6 preds: ^bb3, ^bb6, ^bb10, ^bb14, ^bb18, ^bb30
    cir.br ^bb34 loc(#loc202)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc430)
  ^bb35:  // pred: ^bb34
    %96 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc288)
    %97 = cir.const #cir.int<1> : !s32i loc(#loc289)
    %98 = cir.unary(minus, %97) : !s32i, !s32i loc(#loc289)
    %99 = cir.cmp(ne, %96, %98) : !s32i, !cir.bool loc(#loc431)
    cir.brcond %99 ^bb36, ^bb37 loc(#loc432)
  ^bb36:  // pred: ^bb35
    %100 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc291)
    %101 = cir.call @close(%100) : (!s32i) -> !s32i loc(#loc292)
    cir.br ^bb37 loc(#loc287)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc287)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc433)
  ^bb39:  // pred: ^bb38
    %102 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc295)
    %103 = cir.const #cir.int<1> : !s32i loc(#loc296)
    %104 = cir.unary(minus, %103) : !s32i, !s32i loc(#loc296)
    %105 = cir.cmp(ne, %102, %104) : !s32i, !cir.bool loc(#loc434)
    cir.brcond %105 ^bb40, ^bb41 loc(#loc435)
  ^bb40:  // pred: ^bb39
    %106 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc298)
    %107 = cir.call @close(%106) : (!s32i) -> !s32i loc(#loc299)
    cir.br ^bb41 loc(#loc294)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc294)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc200)
  ^bb43:  // pred: ^bb42
    cir.br ^bb44 loc(#loc436)
  ^bb44:  // pred: ^bb43
    %108 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc190)
    %109 = cir.load %108 : !cir.ptr<!s32i>, !s32i loc(#loc190)
    cir.store %109, %5 : !s32i, !cir.ptr<!s32i> loc(#loc393)
    cir.br ^bb45 loc(#loc437)
  ^bb45:  // pred: ^bb44
    %110 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc304)
    %111 = cir.const #cir.int<2147483647> : !s32i loc(#loc305)
    %112 = cir.cmp(lt, %110, %111) : !s32i, !cir.bool loc(#loc438)
    cir.brcond %112 ^bb46, ^bb47 loc(#loc439)
  ^bb46:  // pred: ^bb45
    %113 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc309)
    %114 = cir.const #cir.int<1> : !s32i loc(#loc192)
    %115 = cir.binop(add, %113, %114) nsw : !s32i loc(#loc309)
    cir.store %115, %6 : !s32i, !cir.ptr<!s32i> loc(#loc394)
    %116 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc310)
    cir.call @printIntLine(%116) : (!s32i) -> () loc(#loc311)
    cir.br ^bb48 loc(#loc307)
  ^bb47:  // pred: ^bb45
    %117 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc176)
    %118 = cir.cast(array_to_ptrdecay, %117 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc176)
    cir.call @printLine(%118) : (!cir.ptr<!s8i>) -> () loc(#loc312)
    cir.br ^bb48 loc(#loc303)
  ^bb48:  // 2 preds: ^bb46, ^bb47
    cir.br ^bb49 loc(#loc303)
  ^bb49:  // pred: ^bb48
    cir.br ^bb50 loc(#loc301)
  ^bb50:  // pred: ^bb49
    cir.return loc(#loc178)
  } loc(#loc387)
  cir.func @_ZN49CWE190_Integer_Overflow__int_listen_socket_add_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN49CWE190_Integer_Overflow__int_listen_socket_add_33L7goodG2BEv() : () -> () loc(#loc315)
    cir.call @_ZN49CWE190_Integer_Overflow__int_listen_socket_add_33L7goodB2GEv() : () -> () loc(#loc316)
    cir.return loc(#loc314)
  } loc(#loc440)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc19 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":47:1)
#loc20 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":130:1)
#loc21 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":58:9)
#loc22 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":58:13)
#loc23 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":59:9)
#loc24 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":59:28)
#loc25 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":60:9)
#loc26 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":60:31)
#loc27 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":61:9)
#loc28 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":61:31)
#loc29 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":62:9)
#loc30 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":62:41)
#loc31 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":123:9)
#loc32 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":123:20)
#loc33 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":126:13)
#loc34 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":126:33)
#loc35 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":49:5)
#loc36 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":49:9)
#loc37 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":50:5)
#loc38 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":50:20)
#loc39 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":52:12)
#loc40 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":52:5)
#loc41 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":53:5)
#loc42 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":121:5)
#loc43 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":63:9)
#loc44 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":106:17)
#loc45 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":106:16)
#loc46 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":73:35)
#loc47 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":73:44)
#loc48 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":73:57)
#loc49 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":73:28)
#loc50 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":73:13)
#loc51 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":73:68)
#loc52 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":74:13)
#loc53 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":77:13)
#loc54 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":74:17)
#loc55 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":74:33)
#loc56 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":75:13)
#loc57 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":76:17)
#loc58 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":78:20)
#loc59 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":78:21)
#loc60 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":78:30)
#loc61 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":78:33)
#loc62 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":78:47)
#loc63 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":78:13)
#loc64 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":78:48)
#loc65 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":79:34)
#loc66 = loc("/usr/include/netinet/in.h":249:5)
#loc67 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":79:13)
#loc68 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":80:39)
#loc69 = loc("/usr/include/netinet/in.h":251:20)
#loc70 = loc("/usr/include/netinet/in.h":33:15)
#loc71 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":80:13)
#loc72 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":81:38)
#loc73 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":81:32)
#loc74 = loc("/usr/include/netinet/in.h":250:15)
#loc75 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":81:13)
#loc76 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":81:46)
#loc77 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":82:13)
#loc78 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":85:13)
#loc79 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":82:22)
#loc80 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":82:54)
#loc81 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":82:55)
#loc82 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":82:64)
#loc83 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":82:78)
#loc84 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":82:17)
#loc85 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":82:84)
#loc86 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":83:13)
#loc87 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":84:17)
#loc88 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":86:13)
#loc89 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":89:13)
#loc90 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":86:24)
#loc91 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":86:38)
#loc92 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":86:17)
#loc93 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":86:57)
#loc94 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":87:13)
#loc95 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":88:17)
#loc96 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":90:35)
#loc97 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":90:49)
#loc98 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":90:55)
#loc99 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":90:28)
#loc100 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":90:13)
#loc101 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":90:59)
#loc102 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":91:13)
#loc103 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":94:13)
#loc104 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":91:17)
#loc105 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":91:33)
#loc106 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":92:13)
#loc107 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":93:17)
#loc108 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":96:31)
#loc109 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":96:45)
#loc110 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":96:58)
#loc111 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":96:76)
#loc112 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":96:79)
#loc113 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":96:26)
#loc114 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":96:13)
#loc115 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":96:80)
#loc116 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":97:13)
#loc117 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":100:13)
#loc118 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":97:17)
#loc119 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":97:31)
#loc121 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":97:47)
#loc122 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":97:61)
#loc123 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":98:13)
#loc124 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":99:17)
#loc125 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":102:39)
#loc126 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":102:25)
#loc127 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":102:13)
#loc128 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":104:25)
#loc129 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":104:20)
#loc130 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":104:13)
#loc131 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":104:36)
#loc132 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":107:9)
#loc133 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":110:9)
#loc134 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":107:13)
#loc135 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":107:29)
#loc136 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":108:9)
#loc137 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":109:26)
#loc138 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":109:13)
#loc139 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":111:9)
#loc140 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":114:9)
#loc141 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":111:13)
#loc142 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":111:29)
#loc143 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":112:9)
#loc144 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":113:26)
#loc145 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":113:13)
#loc146 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":122:5)
#loc147 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":129:5)
#loc148 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":124:9)
#loc149 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":128:9)
#loc150 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":126:26)
#loc151 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":127:26)
#loc152 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":127:13)
#loc153 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":137:1)
#loc154 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":153:1)
#loc155 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":146:9)
#loc156 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":146:20)
#loc157 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":149:13)
#loc158 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":149:33)
#loc159 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":139:5)
#loc160 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":139:9)
#loc161 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":140:5)
#loc162 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":140:20)
#loc163 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":142:12)
#loc164 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":142:5)
#loc165 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":144:12)
#loc166 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":144:5)
#loc167 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":145:5)
#loc168 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":152:5)
#loc169 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":147:9)
#loc170 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":151:9)
#loc171 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":149:26)
#loc172 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":150:26)
#loc173 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":150:13)
#loc174 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc175 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc176 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":241:23)
#loc177 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":156:1)
#loc178 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":244:1)
#loc179 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":167:9)
#loc180 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":167:13)
#loc181 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":168:9)
#loc182 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":168:28)
#loc183 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":169:9)
#loc184 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":169:31)
#loc185 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":170:9)
#loc186 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":170:31)
#loc187 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":171:9)
#loc188 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":171:41)
#loc189 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":232:9)
#loc190 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":232:20)
#loc191 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":236:13)
#loc192 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":236:33)
#loc193 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":158:5)
#loc194 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":158:9)
#loc195 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":159:5)
#loc196 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":159:20)
#loc197 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":161:12)
#loc198 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":161:5)
#loc199 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":162:5)
#loc200 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":230:5)
#loc201 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":172:9)
#loc202 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":215:17)
#loc203 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":215:16)
#loc204 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":182:35)
#loc205 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":182:44)
#loc206 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":182:57)
#loc207 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":182:28)
#loc208 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":182:13)
#loc209 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":182:68)
#loc210 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":183:13)
#loc211 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":186:13)
#loc212 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":183:17)
#loc213 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":183:33)
#loc214 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":184:13)
#loc215 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":185:17)
#loc216 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":187:20)
#loc217 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":187:21)
#loc218 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":187:30)
#loc219 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":187:33)
#loc220 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":187:47)
#loc221 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":187:13)
#loc222 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":187:48)
#loc223 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":188:34)
#loc224 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":188:13)
#loc225 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":189:39)
#loc226 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":189:13)
#loc227 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":190:38)
#loc228 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":190:32)
#loc229 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":190:13)
#loc230 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":190:46)
#loc231 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":191:13)
#loc232 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":194:13)
#loc233 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":191:22)
#loc234 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":191:54)
#loc235 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":191:55)
#loc236 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":191:64)
#loc237 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":191:78)
#loc238 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":191:17)
#loc239 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":191:84)
#loc240 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":192:13)
#loc241 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":193:17)
#loc242 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":195:13)
#loc243 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":198:13)
#loc244 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":195:24)
#loc245 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":195:38)
#loc246 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":195:17)
#loc247 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":195:57)
#loc248 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":196:13)
#loc249 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":197:17)
#loc250 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":199:35)
#loc251 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":199:49)
#loc252 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":199:55)
#loc253 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":199:28)
#loc254 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":199:13)
#loc255 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":199:59)
#loc256 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":200:13)
#loc257 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":203:13)
#loc258 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":200:17)
#loc259 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":200:33)
#loc260 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":201:13)
#loc261 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":202:17)
#loc262 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":205:31)
#loc263 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":205:45)
#loc264 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":205:58)
#loc265 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":205:76)
#loc266 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":205:79)
#loc267 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":205:26)
#loc268 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":205:13)
#loc269 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":205:80)
#loc270 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":206:13)
#loc271 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":209:13)
#loc272 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":206:17)
#loc273 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":206:31)
#loc275 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":206:47)
#loc276 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":206:61)
#loc277 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":207:13)
#loc278 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":208:17)
#loc279 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":211:39)
#loc280 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":211:25)
#loc281 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":211:13)
#loc282 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":213:25)
#loc283 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":213:20)
#loc284 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":213:13)
#loc285 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":213:36)
#loc286 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":216:9)
#loc287 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":219:9)
#loc288 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":216:13)
#loc289 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":216:29)
#loc290 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":217:9)
#loc291 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":218:26)
#loc292 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":218:13)
#loc293 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":220:9)
#loc294 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":223:9)
#loc295 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":220:13)
#loc296 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":220:29)
#loc297 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":221:9)
#loc298 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":222:26)
#loc299 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":222:13)
#loc300 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":231:5)
#loc301 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":243:5)
#loc302 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":234:9)
#loc303 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":242:9)
#loc304 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":234:13)
#loc305 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":234:20)
#loc306 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":235:9)
#loc307 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":238:9)
#loc308 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":240:9)
#loc309 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":236:26)
#loc310 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":237:26)
#loc311 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":237:13)
#loc312 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":241:13)
#loc313 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":246:1)
#loc314 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":250:1)
#loc315 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":248:5)
#loc316 = loc("CWE190_Integer_Overflow__int_listen_socket_add_33.cpp":249:5)
#loc317 = loc(fused[#loc1, #loc2])
#loc318 = loc(fused[#loc3, #loc4])
#loc319 = loc(fused[#loc5, #loc6])
#loc320 = loc(fused[#loc7, #loc8])
#loc321 = loc(fused[#loc9, #loc10])
#loc322 = loc(fused[#loc11, #loc12])
#loc323 = loc(fused[#loc13, #loc14])
#loc324 = loc(fused[#loc15, #loc16])
#loc325 = loc(fused[#loc17, #loc18])
#loc326 = loc(fused[#loc19, #loc20])
#loc327 = loc(fused[#loc21, #loc22])
#loc328 = loc(fused[#loc23, #loc24])
#loc329 = loc(fused[#loc25, #loc26])
#loc330 = loc(fused[#loc27, #loc28])
#loc331 = loc(fused[#loc29, #loc30])
#loc332 = loc(fused[#loc31, #loc32])
#loc333 = loc(fused[#loc33, #loc34])
#loc334 = loc(fused[#loc35, #loc36])
#loc335 = loc(fused[#loc37, #loc38])
#loc336 = loc(fused[#loc40, #loc39])
#loc337 = loc(fused[#loc41, #loc42])
#loc338 = loc(fused[#loc43, #loc44])
#loc339 = loc(fused[#loc50, #loc51])
#loc340 = loc(fused[#loc52, #loc53])
#loc341 = loc(fused[#loc54, #loc55])
#loc342 = loc(fused[#loc56, #loc53])
#loc343 = loc(fused[#loc58, #loc59])
#loc344 = loc(fused[#loc61, #loc62])
#loc345 = loc(fused[#loc63, #loc64])
#loc346 = loc(fused[#loc67, #loc65])
#loc347 = loc(fused[#loc71, #loc68])
#loc348 = loc(fused[#loc75, #loc76])
#loc349 = loc(fused[#loc77, #loc78])
#loc350 = loc(fused[#loc80, #loc81])
#loc351 = loc(fused[#loc82, #loc83])
#loc352 = loc(fused[#loc84, #loc85])
#loc353 = loc(fused[#loc86, #loc78])
#loc354 = loc(fused[#loc88, #loc89])
#loc355 = loc(fused[#loc92, #loc93])
#loc356 = loc(fused[#loc94, #loc89])
#loc357 = loc(fused[#loc100, #loc101])
#loc358 = loc(fused[#loc102, #loc103])
#loc359 = loc(fused[#loc104, #loc105])
#loc360 = loc(fused[#loc106, #loc103])
#loc361 = loc(fused[#loc110, #loc111])
#loc362 = loc(fused[#loc114, #loc115])
#loc363 = loc(fused[#loc116, #loc117])
#loc364 = loc(fused[#loc118, #loc119])
#loc365 = loc(fused[#loc121, #loc122])
#loc366 = loc(fused[#loc123, #loc117])
#loc367 = loc(fused[#loc127, #loc125])
#loc368 = loc(fused[#loc130, #loc131])
#loc369 = loc(fused[#loc132, #loc133])
#loc370 = loc(fused[#loc134, #loc135])
#loc371 = loc(fused[#loc136, #loc133])
#loc372 = loc(fused[#loc139, #loc140])
#loc373 = loc(fused[#loc141, #loc142])
#loc374 = loc(fused[#loc143, #loc140])
#loc375 = loc(fused[#loc146, #loc147])
#loc376 = loc(fused[#loc148, #loc149])
#loc377 = loc(fused[#loc153, #loc154])
#loc378 = loc(fused[#loc155, #loc156])
#loc379 = loc(fused[#loc157, #loc158])
#loc380 = loc(fused[#loc159, #loc160])
#loc381 = loc(fused[#loc161, #loc162])
#loc382 = loc(fused[#loc164, #loc163])
#loc383 = loc(fused[#loc166, #loc165])
#loc384 = loc(fused[#loc167, #loc168])
#loc385 = loc(fused[#loc169, #loc170])
#loc386 = loc(fused[#loc174, #loc175])
#loc387 = loc(fused[#loc177, #loc178])
#loc388 = loc(fused[#loc179, #loc180])
#loc389 = loc(fused[#loc181, #loc182])
#loc390 = loc(fused[#loc183, #loc184])
#loc391 = loc(fused[#loc185, #loc186])
#loc392 = loc(fused[#loc187, #loc188])
#loc393 = loc(fused[#loc189, #loc190])
#loc394 = loc(fused[#loc191, #loc192])
#loc395 = loc(fused[#loc193, #loc194])
#loc396 = loc(fused[#loc195, #loc196])
#loc397 = loc(fused[#loc198, #loc197])
#loc398 = loc(fused[#loc199, #loc200])
#loc399 = loc(fused[#loc201, #loc202])
#loc400 = loc(fused[#loc208, #loc209])
#loc401 = loc(fused[#loc210, #loc211])
#loc402 = loc(fused[#loc212, #loc213])
#loc403 = loc(fused[#loc214, #loc211])
#loc404 = loc(fused[#loc216, #loc217])
#loc405 = loc(fused[#loc219, #loc220])
#loc406 = loc(fused[#loc221, #loc222])
#loc407 = loc(fused[#loc224, #loc223])
#loc408 = loc(fused[#loc226, #loc225])
#loc409 = loc(fused[#loc229, #loc230])
#loc410 = loc(fused[#loc231, #loc232])
#loc411 = loc(fused[#loc234, #loc235])
#loc412 = loc(fused[#loc236, #loc237])
#loc413 = loc(fused[#loc238, #loc239])
#loc414 = loc(fused[#loc240, #loc232])
#loc415 = loc(fused[#loc242, #loc243])
#loc416 = loc(fused[#loc246, #loc247])
#loc417 = loc(fused[#loc248, #loc243])
#loc418 = loc(fused[#loc254, #loc255])
#loc419 = loc(fused[#loc256, #loc257])
#loc420 = loc(fused[#loc258, #loc259])
#loc421 = loc(fused[#loc260, #loc257])
#loc422 = loc(fused[#loc264, #loc265])
#loc423 = loc(fused[#loc268, #loc269])
#loc424 = loc(fused[#loc270, #loc271])
#loc425 = loc(fused[#loc272, #loc273])
#loc426 = loc(fused[#loc275, #loc276])
#loc427 = loc(fused[#loc277, #loc271])
#loc428 = loc(fused[#loc281, #loc279])
#loc429 = loc(fused[#loc284, #loc285])
#loc430 = loc(fused[#loc286, #loc287])
#loc431 = loc(fused[#loc288, #loc289])
#loc432 = loc(fused[#loc290, #loc287])
#loc433 = loc(fused[#loc293, #loc294])
#loc434 = loc(fused[#loc295, #loc296])
#loc435 = loc(fused[#loc297, #loc294])
#loc436 = loc(fused[#loc300, #loc301])
#loc437 = loc(fused[#loc302, #loc303])
#loc438 = loc(fused[#loc304, #loc305])
#loc439 = loc(fused[#loc306, #loc307, #loc308, #loc303])
#loc440 = loc(fused[#loc313, #loc314])
