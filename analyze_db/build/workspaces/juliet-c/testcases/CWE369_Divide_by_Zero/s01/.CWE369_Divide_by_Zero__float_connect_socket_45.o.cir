!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc283)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc284)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc285)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc286)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc287)
  cir.func private @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc288)
  cir.func private @close(!s32i) -> !s32i loc(#loc289)
  cir.global "private" internal dsolocal @CWE369_Divide_by_Zero__float_connect_socket_45_badData = #cir.fp<0.000000e+00> : !cir.float {alignment = 4 : i64} loc(#loc290)
  cir.func no_proto @CWE369_Divide_by_Zero__float_connect_socket_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc292)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc22)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc293)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc295)
      %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc296)
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc297)
      %8 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc298)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc31)
      %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc31)
      cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc297)
      cir.scope {
        cir.do {
          cir.scope {
            %11 = cir.const #cir.int<2> : !s32i loc(#loc38)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc39)
            %13 = cir.const #cir.int<6> : !s32i loc(#loc40)
            %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc41)
            cir.store %14, %7 : !s32i, !cir.ptr<!s32i> loc(#loc301)
            cir.scope {
              %48 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc46)
              %49 = cir.const #cir.int<1> : !s32i loc(#loc47)
              %50 = cir.unary(minus, %49) nsw : !s32i, !s32i loc(#loc47)
              %51 = cir.cmp(eq, %48, %50) : !s32i, !cir.bool loc(#loc303)
              cir.if %51 {
                cir.break loc(#loc49)
              } loc(#loc304)
            } loc(#loc302)
            %15 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc305)
            %16 = cir.const #cir.int<0> : !s32i loc(#loc52)
            %17 = cir.const #cir.int<16> : !u64i loc(#loc306)
            cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc307)
            %18 = cir.const #cir.int<2> : !s32i loc(#loc57)
            %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc57)
            %20 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc58)
            cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc308)
            %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
            %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
            %23 = cir.call @inet_addr(%22) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc60)
            %24 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc61)
            %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc62)
            cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc309)
            %26 = cir.const #cir.int<27015> : !s32i loc(#loc65)
            %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc65)
            %28 = cir.call @htons(%27) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc66)
            %29 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
            cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc310)
            cir.scope {
              %48 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc72)
              %49 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc312)
              %50 = cir.const #cir.int<16> : !u64i loc(#loc313)
              %51 = cir.cast(integral, %50 : !u64i), !u32i loc(#loc313)
              %52 = cir.call @connect(%48, %49, %51) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc77)
              %53 = cir.const #cir.int<1> : !s32i loc(#loc78)
              %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc78)
              %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc314)
              cir.if %55 {
                cir.break loc(#loc80)
              } loc(#loc315)
            } loc(#loc311)
            %30 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc81)
            %31 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc82)
            %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc82)
            %33 = cir.const #cir.int<20> : !s32i loc(#loc83)
            %34 = cir.const #cir.int<1> : !s32i loc(#loc84)
            %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc83)
            %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc83)
            %37 = cir.const #cir.int<0> : !s32i loc(#loc85)
            %38 = cir.call @recv(%30, %32, %36, %37) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc86)
            %39 = cir.cast(integral, %38 : !s64i), !s32i loc(#loc86)
            cir.store %39, %5 : !s32i, !cir.ptr<!s32i> loc(#loc316)
            cir.scope {
              %48 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc91)
              %49 = cir.const #cir.int<1> : !s32i loc(#loc92)
              %50 = cir.unary(minus, %49) nsw : !s32i, !s32i loc(#loc92)
              %51 = cir.cmp(eq, %48, %50) : !s32i, !cir.bool loc(#loc318)
              %52 = cir.ternary(%51, true {
                %53 = cir.const #true loc(#loc93)
                cir.yield %53 : !cir.bool loc(#loc93)
              }, false {
                %53 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc94)
                %54 = cir.const #cir.int<0> : !s32i loc(#loc95)
                %55 = cir.cmp(eq, %53, %54) : !s32i, !cir.bool loc(#loc319)
                %56 = cir.ternary(%55, true {
                  %57 = cir.const #true loc(#loc93)
                  cir.yield %57 : !cir.bool loc(#loc93)
                }, false {
                  %57 = cir.const #false loc(#loc93)
                  cir.yield %57 : !cir.bool loc(#loc93)
                }) : (!cir.bool) -> !cir.bool loc(#loc93)
                cir.yield %56 : !cir.bool loc(#loc93)
              }) : (!cir.bool) -> !cir.bool loc(#loc93)
              cir.if %52 {
                cir.break loc(#loc97)
              } loc(#loc320)
            } loc(#loc317)
            %40 = cir.const #cir.int<0> : !s32i loc(#loc98)
            %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc98)
            %42 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc99)
            %43 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc100)
            %44 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %42 : !s32i), !cir.ptr<!s8i> loc(#loc100)
            cir.store %41, %44 : !s8i, !cir.ptr<!s8i> loc(#loc321)
            %45 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc101)
            %46 = cir.call @atof(%45) : (!cir.ptr<!s8i>) -> !cir.double side_effect(pure) extra(#fn_attr) loc(#loc102)
            %47 = cir.cast(floating, %46 : !cir.double), !cir.float loc(#loc102)
            cir.store %47, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc322)
          } loc(#loc300)
          cir.yield loc(#loc35)
        } while {
          %11 = cir.const #cir.int<0> : !s32i loc(#loc105)
          %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc105)
          cir.condition(%12) loc(#loc105)
        } loc(#loc299)
      } loc(#loc299)
      cir.scope {
        %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc108)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc109)
        %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc109)
        %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc324)
        cir.if %14 {
          %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc111)
          %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc112)
        } loc(#loc325)
      } loc(#loc323)
    } loc(#loc294)
    %2 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc113)
    %3 = cir.get_global @CWE369_Divide_by_Zero__float_connect_socket_45_badData : !cir.ptr<!cir.float> loc(#loc290)
    cir.store %2, %3 : !cir.float, !cir.ptr<!cir.float> loc(#loc326)
    %4 = cir.get_global @badSink : !cir.ptr<!cir.func<()>> loc(#loc327)
    cir.call %4() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc115)
    cir.return loc(#loc19)
  } loc(#loc291)
  cir.func no_proto @CWE369_Divide_by_Zero__float_connect_socket_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc329)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc119)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc330)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc121)
    cir.return loc(#loc118)
  } loc(#loc328)
  cir.func private @printIntLine(!s32i) loc(#loc331)
  cir.func no_proto internal private @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc333)
    %1 = cir.get_global @CWE369_Divide_by_Zero__float_connect_socket_45_badData : !cir.ptr<!cir.float> loc(#loc290)
    %2 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc128)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc333)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc335)
      %4 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc133)
      %5 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc134)
      %6 = cir.cast(floating, %5 : !cir.float), !cir.double loc(#loc134)
      %7 = cir.binop(div, %4, %6) : !cir.double loc(#loc336)
      %8 = cir.cast(float_to_int, %7 : !cir.double), !s32i loc(#loc336)
      cir.store %8, %3 : !s32i, !cir.ptr<!s32i> loc(#loc335)
      %9 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc135)
      cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc136)
    } loc(#loc334)
    cir.return loc(#loc126)
  } loc(#loc332)
  cir.global "private" internal dsolocal @CWE369_Divide_by_Zero__float_connect_socket_45_goodG2BData = #cir.fp<0.000000e+00> : !cir.float {alignment = 4 : i64} loc(#loc337)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc339)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc143)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc340)
    %2 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc145)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc341)
    %3 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc147)
    %4 = cir.get_global @CWE369_Divide_by_Zero__float_connect_socket_45_goodG2BData : !cir.ptr<!cir.float> loc(#loc337)
    cir.store %3, %4 : !cir.float, !cir.ptr<!cir.float> loc(#loc342)
    %5 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<()>> loc(#loc343)
    cir.call %5() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc149)
    cir.return loc(#loc140)
  } loc(#loc338)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc345)
    %1 = cir.get_global @CWE369_Divide_by_Zero__float_connect_socket_45_goodG2BData : !cir.ptr<!cir.float> loc(#loc337)
    %2 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc154)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc345)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc347)
      %4 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc159)
      %5 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc160)
      %6 = cir.cast(floating, %5 : !cir.float), !cir.double loc(#loc160)
      %7 = cir.binop(div, %4, %6) : !cir.double loc(#loc348)
      %8 = cir.cast(float_to_int, %7 : !cir.double), !s32i loc(#loc348)
      cir.store %8, %3 : !s32i, !cir.ptr<!s32i> loc(#loc347)
      %9 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc161)
      cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc162)
    } loc(#loc346)
    cir.return loc(#loc152)
  } loc(#loc344)
  cir.global "private" internal dsolocal @CWE369_Divide_by_Zero__float_connect_socket_45_goodB2GData = #cir.fp<0.000000e+00> : !cir.float {alignment = 4 : i64} loc(#loc349)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc351)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc169)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc352)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc354)
      %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc355)
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc356)
      %8 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc357)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc178)
      %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc178)
      cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc356)
      cir.scope {
        cir.do {
          cir.scope {
            %11 = cir.const #cir.int<2> : !s32i loc(#loc185)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc186)
            %13 = cir.const #cir.int<6> : !s32i loc(#loc187)
            %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc188)
            cir.store %14, %7 : !s32i, !cir.ptr<!s32i> loc(#loc360)
            cir.scope {
              %48 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc193)
              %49 = cir.const #cir.int<1> : !s32i loc(#loc194)
              %50 = cir.unary(minus, %49) nsw : !s32i, !s32i loc(#loc194)
              %51 = cir.cmp(eq, %48, %50) : !s32i, !cir.bool loc(#loc362)
              cir.if %51 {
                cir.break loc(#loc196)
              } loc(#loc363)
            } loc(#loc361)
            %15 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc364)
            %16 = cir.const #cir.int<0> : !s32i loc(#loc199)
            %17 = cir.const #cir.int<16> : !u64i loc(#loc365)
            cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc366)
            %18 = cir.const #cir.int<2> : !s32i loc(#loc204)
            %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc204)
            %20 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc58)
            cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc367)
            %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc206)
            %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc206)
            %23 = cir.call @inet_addr(%22) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc207)
            %24 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc61)
            %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc62)
            cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc368)
            %26 = cir.const #cir.int<27015> : !s32i loc(#loc210)
            %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc210)
            %28 = cir.call @htons(%27) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc211)
            %29 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
            cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc369)
            cir.scope {
              %48 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc216)
              %49 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc371)
              %50 = cir.const #cir.int<16> : !u64i loc(#loc372)
              %51 = cir.cast(integral, %50 : !u64i), !u32i loc(#loc372)
              %52 = cir.call @connect(%48, %49, %51) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc221)
              %53 = cir.const #cir.int<1> : !s32i loc(#loc222)
              %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc222)
              %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc373)
              cir.if %55 {
                cir.break loc(#loc224)
              } loc(#loc374)
            } loc(#loc370)
            %30 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc225)
            %31 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc226)
            %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc226)
            %33 = cir.const #cir.int<20> : !s32i loc(#loc227)
            %34 = cir.const #cir.int<1> : !s32i loc(#loc228)
            %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc227)
            %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc227)
            %37 = cir.const #cir.int<0> : !s32i loc(#loc229)
            %38 = cir.call @recv(%30, %32, %36, %37) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc230)
            %39 = cir.cast(integral, %38 : !s64i), !s32i loc(#loc230)
            cir.store %39, %5 : !s32i, !cir.ptr<!s32i> loc(#loc375)
            cir.scope {
              %48 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc235)
              %49 = cir.const #cir.int<1> : !s32i loc(#loc236)
              %50 = cir.unary(minus, %49) nsw : !s32i, !s32i loc(#loc236)
              %51 = cir.cmp(eq, %48, %50) : !s32i, !cir.bool loc(#loc377)
              %52 = cir.ternary(%51, true {
                %53 = cir.const #true loc(#loc237)
                cir.yield %53 : !cir.bool loc(#loc237)
              }, false {
                %53 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc238)
                %54 = cir.const #cir.int<0> : !s32i loc(#loc239)
                %55 = cir.cmp(eq, %53, %54) : !s32i, !cir.bool loc(#loc378)
                %56 = cir.ternary(%55, true {
                  %57 = cir.const #true loc(#loc237)
                  cir.yield %57 : !cir.bool loc(#loc237)
                }, false {
                  %57 = cir.const #false loc(#loc237)
                  cir.yield %57 : !cir.bool loc(#loc237)
                }) : (!cir.bool) -> !cir.bool loc(#loc237)
                cir.yield %56 : !cir.bool loc(#loc237)
              }) : (!cir.bool) -> !cir.bool loc(#loc237)
              cir.if %52 {
                cir.break loc(#loc241)
              } loc(#loc379)
            } loc(#loc376)
            %40 = cir.const #cir.int<0> : !s32i loc(#loc242)
            %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc242)
            %42 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc243)
            %43 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc244)
            %44 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %42 : !s32i), !cir.ptr<!s8i> loc(#loc244)
            cir.store %41, %44 : !s8i, !cir.ptr<!s8i> loc(#loc380)
            %45 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc245)
            %46 = cir.call @atof(%45) : (!cir.ptr<!s8i>) -> !cir.double side_effect(pure) extra(#fn_attr) loc(#loc246)
            %47 = cir.cast(floating, %46 : !cir.double), !cir.float loc(#loc246)
            cir.store %47, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc381)
          } loc(#loc359)
          cir.yield loc(#loc182)
        } while {
          %11 = cir.const #cir.int<0> : !s32i loc(#loc249)
          %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc249)
          cir.condition(%12) loc(#loc249)
        } loc(#loc358)
      } loc(#loc358)
      cir.scope {
        %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc252)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc253)
        %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc253)
        %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc383)
        cir.if %14 {
          %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc255)
          %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc256)
        } loc(#loc384)
      } loc(#loc382)
    } loc(#loc353)
    %2 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc257)
    %3 = cir.get_global @CWE369_Divide_by_Zero__float_connect_socket_45_goodB2GData : !cir.ptr<!cir.float> loc(#loc349)
    cir.store %2, %3 : !cir.float, !cir.ptr<!cir.float> loc(#loc385)
    %4 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<()>> loc(#loc386)
    cir.call %4() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc259)
    cir.return loc(#loc166)
  } loc(#loc350)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc387)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc263)
  cir.func no_proto internal private @goodB2GSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc389)
    %1 = cir.get_global @CWE369_Divide_by_Zero__float_connect_socket_45_goodB2GData : !cir.ptr<!cir.float> loc(#loc349)
    %2 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc267)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc389)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc270)
      %4 = cir.cast(floating, %3 : !cir.float), !cir.double loc(#loc270)
      %5 = cir.fabs %4 : !cir.double loc(#loc270)
      %6 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc271)
      %7 = cir.cmp(gt, %5, %6) : !cir.double, !cir.bool loc(#loc391)
      cir.if %7 {
        %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc393)
        %9 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc278)
        %10 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc279)
        %11 = cir.cast(floating, %10 : !cir.float), !cir.double loc(#loc279)
        %12 = cir.binop(div, %9, %11) : !cir.double loc(#loc394)
        %13 = cir.cast(float_to_int, %12 : !cir.double), !s32i loc(#loc394)
        cir.store %13, %8 : !s32i, !cir.ptr<!s32i> loc(#loc393)
        %14 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc280)
        cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc281)
      } else {
        %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc263)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc263)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc282)
      } loc(#loc392)
    } loc(#loc390)
    cir.return loc(#loc265)
  } loc(#loc388)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_45.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":90:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":102:1)
#loc13 = loc("/usr/include/stdlib.h":103:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":44:1)
#loc17 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":44:14)
#loc18 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":60:1)
#loc19 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":123:1)
#loc20 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":62:5)
#loc21 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":62:11)
#loc22 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":64:12)
#loc23 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":64:5)
#loc24 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":65:5)
#loc25 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":120:5)
#loc26 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":70:9)
#loc27 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":70:13)
#loc28 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":71:9)
#loc29 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":71:28)
#loc30 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":72:9)
#loc31 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":72:32)
#loc32 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":73:9)
#loc33 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":73:41)
#loc34 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":74:9)
#loc35 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":109:17)
#loc36 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":75:9)
#loc37 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":108:9)
#loc38 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":83:36)
#loc39 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":83:45)
#loc40 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":83:58)
#loc41 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":83:29)
#loc42 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":83:13)
#loc43 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":83:69)
#loc44 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":84:13)
#loc45 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":87:13)
#loc46 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":84:17)
#loc47 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":84:34)
#loc48 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":85:13)
#loc49 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":86:17)
#loc50 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":88:20)
#loc51 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":88:21)
#loc52 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":88:30)
#loc53 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":88:33)
#loc54 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":88:47)
#loc55 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":88:13)
#loc56 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":88:48)
#loc57 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":89:34)
#loc58 = loc("/usr/include/netinet/in.h":249:5)
#loc59 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":89:13)
#loc60 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":90:39)
#loc61 = loc("/usr/include/netinet/in.h":251:20)
#loc62 = loc("/usr/include/netinet/in.h":33:15)
#loc63 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":90:13)
#loc64 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":90:59)
#loc65 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":91:38)
#loc66 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":91:32)
#loc67 = loc("/usr/include/netinet/in.h":250:15)
#loc68 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":91:13)
#loc69 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":91:46)
#loc70 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":92:13)
#loc71 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":95:13)
#loc72 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":92:25)
#loc73 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":92:58)
#loc74 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":92:59)
#loc75 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":92:68)
#loc76 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":92:82)
#loc77 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":92:17)
#loc78 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":92:88)
#loc79 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":93:13)
#loc80 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":94:17)
#loc81 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":99:31)
#loc82 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":99:46)
#loc83 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":99:59)
#loc84 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":99:77)
#loc85 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":99:80)
#loc86 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":99:26)
#loc87 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":99:13)
#loc88 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":99:81)
#loc89 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":100:13)
#loc90 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":103:13)
#loc91 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":100:17)
#loc92 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":100:31)
#loc93 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":100:44)
#loc94 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":100:47)
#loc95 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":100:61)
#loc96 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":101:13)
#loc97 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":102:17)
#loc98 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":105:39)
#loc99 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":105:25)
#loc100 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":105:13)
#loc101 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":107:32)
#loc102 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":107:27)
#loc103 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":107:13)
#loc104 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":107:43)
#loc105 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":109:16)
#loc106 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":110:9)
#loc107 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":113:9)
#loc108 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":110:13)
#loc109 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":110:30)
#loc110 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":111:9)
#loc111 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":112:26)
#loc112 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":112:13)
#loc113 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":121:62)
#loc114 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":121:5)
#loc115 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":122:5)
#loc116 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":122:13)
#loc117 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":232:1)
#loc118 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":236:1)
#loc119 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":234:5)
#loc120 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":234:13)
#loc121 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":235:5)
#loc122 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":235:13)
#loc123 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc124 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc125 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":50:1)
#loc126 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":58:1)
#loc127 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":52:5)
#loc128 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":52:18)
#loc129 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":53:5)
#loc130 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":57:5)
#loc131 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":55:9)
#loc132 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":55:40)
#loc133 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":55:28)
#loc134 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":55:36)
#loc135 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":56:22)
#loc136 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":56:9)
#loc137 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":45:1)
#loc138 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":45:14)
#loc139 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":140:1)
#loc140 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":149:1)
#loc141 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":142:5)
#loc142 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":142:11)
#loc143 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":144:12)
#loc144 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":144:5)
#loc145 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":146:12)
#loc146 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":146:5)
#loc147 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":147:66)
#loc148 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":147:5)
#loc149 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":148:5)
#loc150 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":148:17)
#loc151 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":130:1)
#loc152 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":138:1)
#loc153 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":132:5)
#loc154 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":132:18)
#loc155 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":133:5)
#loc156 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":137:5)
#loc157 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":135:9)
#loc158 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":135:40)
#loc159 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":135:28)
#loc160 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":135:36)
#loc161 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":136:22)
#loc162 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":136:9)
#loc163 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":46:1)
#loc164 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":46:14)
#loc165 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":167:1)
#loc166 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":230:1)
#loc167 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":169:5)
#loc168 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":169:11)
#loc169 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":171:12)
#loc170 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":171:5)
#loc171 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":172:5)
#loc172 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":227:5)
#loc173 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":177:9)
#loc174 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":177:13)
#loc175 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":178:9)
#loc176 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":178:28)
#loc177 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":179:9)
#loc178 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":179:32)
#loc179 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":180:9)
#loc180 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":180:41)
#loc181 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":181:9)
#loc182 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":216:17)
#loc183 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":182:9)
#loc184 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":215:9)
#loc185 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":190:36)
#loc186 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":190:45)
#loc187 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":190:58)
#loc188 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":190:29)
#loc189 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":190:13)
#loc190 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":190:69)
#loc191 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":191:13)
#loc192 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":194:13)
#loc193 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":191:17)
#loc194 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":191:34)
#loc195 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":192:13)
#loc196 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":193:17)
#loc197 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":195:20)
#loc198 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":195:21)
#loc199 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":195:30)
#loc200 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":195:33)
#loc201 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":195:47)
#loc202 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":195:13)
#loc203 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":195:48)
#loc204 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":196:34)
#loc205 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":196:13)
#loc206 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":197:49)
#loc207 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":197:39)
#loc208 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":197:13)
#loc209 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":197:59)
#loc210 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":198:38)
#loc211 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":198:32)
#loc212 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":198:13)
#loc213 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":198:46)
#loc214 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":199:13)
#loc215 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":202:13)
#loc216 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":199:25)
#loc217 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":199:58)
#loc218 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":199:59)
#loc219 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":199:68)
#loc220 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":199:82)
#loc221 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":199:17)
#loc222 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":199:88)
#loc223 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":200:13)
#loc224 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":201:17)
#loc225 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":206:31)
#loc226 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":206:46)
#loc227 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":206:59)
#loc228 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":206:77)
#loc229 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":206:80)
#loc230 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":206:26)
#loc231 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":206:13)
#loc232 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":206:81)
#loc233 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":207:13)
#loc234 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":210:13)
#loc235 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":207:17)
#loc236 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":207:31)
#loc237 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":207:44)
#loc238 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":207:47)
#loc239 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":207:61)
#loc240 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":208:13)
#loc241 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":209:17)
#loc242 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":212:39)
#loc243 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":212:25)
#loc244 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":212:13)
#loc245 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":214:32)
#loc246 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":214:27)
#loc247 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":214:13)
#loc248 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":214:43)
#loc249 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":216:16)
#loc250 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":217:9)
#loc251 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":220:9)
#loc252 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":217:13)
#loc253 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":217:30)
#loc254 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":218:9)
#loc255 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":219:26)
#loc256 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":219:13)
#loc257 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":228:66)
#loc258 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":228:5)
#loc259 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":229:5)
#loc260 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":229:17)
#loc261 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc262 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc263 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":163:19)
#loc264 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":152:1)
#loc265 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":165:1)
#loc266 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":154:5)
#loc267 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":154:18)
#loc268 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":156:5)
#loc269 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":164:5)
#loc270 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":156:13)
#loc271 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":156:21)
#loc272 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":156:8)
#loc273 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":157:5)
#loc274 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":160:5)
#loc275 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":162:5)
#loc276 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":158:9)
#loc277 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":158:40)
#loc278 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":158:28)
#loc279 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":158:36)
#loc280 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":159:22)
#loc281 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":159:9)
#loc282 = loc("CWE369_Divide_by_Zero__float_connect_socket_45.c":163:9)
#loc283 = loc(fused[#loc1, #loc2])
#loc284 = loc(fused[#loc3, #loc4])
#loc285 = loc(fused[#loc6, #loc7])
#loc286 = loc(fused[#loc8, #loc9])
#loc287 = loc(fused[#loc10, #loc11])
#loc288 = loc(fused[#loc12, #loc13])
#loc289 = loc(fused[#loc14, #loc15])
#loc290 = loc(fused[#loc16, #loc17])
#loc291 = loc(fused[#loc18, #loc19])
#loc292 = loc(fused[#loc20, #loc21])
#loc293 = loc(fused[#loc23, #loc22])
#loc294 = loc(fused[#loc24, #loc25])
#loc295 = loc(fused[#loc26, #loc27])
#loc296 = loc(fused[#loc28, #loc29])
#loc297 = loc(fused[#loc30, #loc31])
#loc298 = loc(fused[#loc32, #loc33])
#loc299 = loc(fused[#loc34, #loc35])
#loc300 = loc(fused[#loc36, #loc37])
#loc301 = loc(fused[#loc42, #loc43])
#loc302 = loc(fused[#loc44, #loc45])
#loc303 = loc(fused[#loc46, #loc47])
#loc304 = loc(fused[#loc48, #loc45])
#loc305 = loc(fused[#loc50, #loc51])
#loc306 = loc(fused[#loc53, #loc54])
#loc307 = loc(fused[#loc55, #loc56])
#loc308 = loc(fused[#loc59, #loc57])
#loc309 = loc(fused[#loc63, #loc64])
#loc310 = loc(fused[#loc68, #loc69])
#loc311 = loc(fused[#loc70, #loc71])
#loc312 = loc(fused[#loc73, #loc74])
#loc313 = loc(fused[#loc75, #loc76])
#loc314 = loc(fused[#loc77, #loc78])
#loc315 = loc(fused[#loc79, #loc71])
#loc316 = loc(fused[#loc87, #loc88])
#loc317 = loc(fused[#loc89, #loc90])
#loc318 = loc(fused[#loc91, #loc92])
#loc319 = loc(fused[#loc94, #loc95])
#loc320 = loc(fused[#loc96, #loc90])
#loc321 = loc(fused[#loc100, #loc98])
#loc322 = loc(fused[#loc103, #loc104])
#loc323 = loc(fused[#loc106, #loc107])
#loc324 = loc(fused[#loc108, #loc109])
#loc325 = loc(fused[#loc110, #loc107])
#loc326 = loc(fused[#loc114, #loc113])
#loc327 = loc(fused[#loc115, #loc116])
#loc328 = loc(fused[#loc117, #loc118])
#loc329 = loc(fused[#loc119, #loc120])
#loc330 = loc(fused[#loc121, #loc122])
#loc331 = loc(fused[#loc123, #loc124])
#loc332 = loc(fused[#loc125, #loc126])
#loc333 = loc(fused[#loc127, #loc128])
#loc334 = loc(fused[#loc129, #loc130])
#loc335 = loc(fused[#loc131, #loc132])
#loc336 = loc(fused[#loc133, #loc134])
#loc337 = loc(fused[#loc137, #loc138])
#loc338 = loc(fused[#loc139, #loc140])
#loc339 = loc(fused[#loc141, #loc142])
#loc340 = loc(fused[#loc144, #loc143])
#loc341 = loc(fused[#loc146, #loc145])
#loc342 = loc(fused[#loc148, #loc147])
#loc343 = loc(fused[#loc149, #loc150])
#loc344 = loc(fused[#loc151, #loc152])
#loc345 = loc(fused[#loc153, #loc154])
#loc346 = loc(fused[#loc155, #loc156])
#loc347 = loc(fused[#loc157, #loc158])
#loc348 = loc(fused[#loc159, #loc160])
#loc349 = loc(fused[#loc163, #loc164])
#loc350 = loc(fused[#loc165, #loc166])
#loc351 = loc(fused[#loc167, #loc168])
#loc352 = loc(fused[#loc170, #loc169])
#loc353 = loc(fused[#loc171, #loc172])
#loc354 = loc(fused[#loc173, #loc174])
#loc355 = loc(fused[#loc175, #loc176])
#loc356 = loc(fused[#loc177, #loc178])
#loc357 = loc(fused[#loc179, #loc180])
#loc358 = loc(fused[#loc181, #loc182])
#loc359 = loc(fused[#loc183, #loc184])
#loc360 = loc(fused[#loc189, #loc190])
#loc361 = loc(fused[#loc191, #loc192])
#loc362 = loc(fused[#loc193, #loc194])
#loc363 = loc(fused[#loc195, #loc192])
#loc364 = loc(fused[#loc197, #loc198])
#loc365 = loc(fused[#loc200, #loc201])
#loc366 = loc(fused[#loc202, #loc203])
#loc367 = loc(fused[#loc205, #loc204])
#loc368 = loc(fused[#loc208, #loc209])
#loc369 = loc(fused[#loc212, #loc213])
#loc370 = loc(fused[#loc214, #loc215])
#loc371 = loc(fused[#loc217, #loc218])
#loc372 = loc(fused[#loc219, #loc220])
#loc373 = loc(fused[#loc221, #loc222])
#loc374 = loc(fused[#loc223, #loc215])
#loc375 = loc(fused[#loc231, #loc232])
#loc376 = loc(fused[#loc233, #loc234])
#loc377 = loc(fused[#loc235, #loc236])
#loc378 = loc(fused[#loc238, #loc239])
#loc379 = loc(fused[#loc240, #loc234])
#loc380 = loc(fused[#loc244, #loc242])
#loc381 = loc(fused[#loc247, #loc248])
#loc382 = loc(fused[#loc250, #loc251])
#loc383 = loc(fused[#loc252, #loc253])
#loc384 = loc(fused[#loc254, #loc251])
#loc385 = loc(fused[#loc258, #loc257])
#loc386 = loc(fused[#loc259, #loc260])
#loc387 = loc(fused[#loc261, #loc262])
#loc388 = loc(fused[#loc264, #loc265])
#loc389 = loc(fused[#loc266, #loc267])
#loc390 = loc(fused[#loc268, #loc269])
#loc391 = loc(fused[#loc272, #loc271])
#loc392 = loc(fused[#loc273, #loc274, #loc275, #loc269])
#loc393 = loc(fused[#loc276, #loc277])
#loc394 = loc(fused[#loc278, #loc279])
