!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_remove_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc58)
  cir.func private @remove(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"removemebad.txt\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc5)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_remove_11_bad() extra(#fn_attr1) {
    cir.br ^bb1 loc(#loc61)
  ^bb1:  // pred: ^bb0
    %0 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc62)
    %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc62)
    %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc10)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc10)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc63)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc5)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc5)
    %6 = cir.call @remove(%5) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc13)
    cir.br ^bb3 loc(#loc9)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc9)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc7)
  } loc(#loc60)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_remove_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc65)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc16)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc66)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc18)
    cir.return loc(#loc15)
  } loc(#loc64)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc67)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc24)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"removemegood.txt\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc25)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"remove failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc26)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.br ^bb1 loc(#loc70)
  ^bb1:  // pred: ^bb0
    %0 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc71)
    %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc71)
    %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc31)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc31)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc72)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc24)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc24)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc36)
    cir.br ^bb8 loc(#loc34)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc73)
  ^bb4:  // pred: ^bb3
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc25)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc25)
    %8 = cir.call @remove(%7) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc39)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %10 = cir.cmp(ne, %8, %9) : !s32i, !cir.bool loc(#loc74)
    cir.brcond %10 ^bb5, ^bb6 loc(#loc75)
  ^bb5:  // pred: ^bb4
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc26)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc26)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc42)
    cir.br ^bb6 loc(#loc38)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc38)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc30)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc30)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc28)
  } loc(#loc69)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.br ^bb1 loc(#loc77)
  ^bb1:  // pred: ^bb0
    %0 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc78)
    %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc78)
    %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc47)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc47)
    cir.brcond %3 ^bb2, ^bb7 loc(#loc79)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc80)
  ^bb3:  // pred: ^bb2
    %4 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc52)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc52)
    %6 = cir.call @remove(%5) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc53)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %8 = cir.cmp(ne, %6, %7) : !s32i, !cir.bool loc(#loc81)
    cir.brcond %8 ^bb4, ^bb5 loc(#loc82)
  ^bb4:  // pred: ^bb3
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc56)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    cir.br ^bb5 loc(#loc51)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc51)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc46)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc46)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc44)
  } loc(#loc76)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_remove_11.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/stdio.h":158:1)
#loc4 = loc("/usr/include/stdio.h":158:44)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":35:16)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":30:1)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":37:1)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":32:5)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":36:5)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":32:8)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":32:26)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":33:5)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":35:9)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":74:1)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":78:1)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":76:5)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":76:11)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":77:5)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":77:11)
#loc20 = loc("../../testcasesupport/std_testcase_io.h":50:1)
#loc21 = loc("../../testcasesupport/std_testcase_io.h":50:24)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc23 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":49:19)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":54:20)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":56:23)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":44:1)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":59:1)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":46:5)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":58:5)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":46:8)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":46:27)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":47:5)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":50:5)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":52:5)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":49:9)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":54:9)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":57:9)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":54:13)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":54:43)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":55:9)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":56:13)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":62:1)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":72:1)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":64:5)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":71:5)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":64:8)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":64:26)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":65:5)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":67:9)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":70:9)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":67:20)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":67:13)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":67:43)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":68:9)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":69:23)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_remove_11.c":69:13)
#loc58 = loc(fused[#loc1, #loc2])
#loc59 = loc(fused[#loc3, #loc4])
#loc60 = loc(fused[#loc6, #loc7])
#loc61 = loc(fused[#loc8, #loc9])
#loc62 = loc(fused[#loc10, #loc11])
#loc63 = loc(fused[#loc12, #loc9])
#loc64 = loc(fused[#loc14, #loc15])
#loc65 = loc(fused[#loc16, #loc17])
#loc66 = loc(fused[#loc18, #loc19])
#loc67 = loc(fused[#loc20, #loc21])
#loc68 = loc(fused[#loc22, #loc23])
#loc69 = loc(fused[#loc27, #loc28])
#loc70 = loc(fused[#loc29, #loc30])
#loc71 = loc(fused[#loc31, #loc32])
#loc72 = loc(fused[#loc33, #loc34, #loc35, #loc30])
#loc73 = loc(fused[#loc37, #loc38])
#loc74 = loc(fused[#loc39, #loc40])
#loc75 = loc(fused[#loc41, #loc38])
#loc76 = loc(fused[#loc43, #loc44])
#loc77 = loc(fused[#loc45, #loc46])
#loc78 = loc(fused[#loc47, #loc48])
#loc79 = loc(fused[#loc49, #loc46])
#loc80 = loc(fused[#loc50, #loc51])
#loc81 = loc(fused[#loc53, #loc54])
#loc82 = loc(fused[#loc55, #loc51])
