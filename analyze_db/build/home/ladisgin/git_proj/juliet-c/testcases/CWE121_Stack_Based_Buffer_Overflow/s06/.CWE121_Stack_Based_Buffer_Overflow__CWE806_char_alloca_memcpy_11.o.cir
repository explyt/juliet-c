!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc145)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc146)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc147)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc149)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc150)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc151)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc14)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc14)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc14)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc14)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc14)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
    cir.br ^bb1 loc(#loc153)
  ^bb1:  // pred: ^bb0
    %11 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc154)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc154)
    %13 = cir.call %12() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc19)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %14 ^bb2, ^bb3 loc(#loc155)
  ^bb2:  // pred: ^bb1
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc22)
    %17 = cir.const #cir.int<65> : !s32i loc(#loc23)
    %18 = cir.const #cir.int<100> : !s32i loc(#loc24)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc24)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc24)
    cir.libc.memset %21 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc156)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc28)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    %25 = cir.const #cir.int<100> : !s32i loc(#loc30)
    %26 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc30)
    %28 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc32)
    cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc157)
    cir.br ^bb3 loc(#loc18)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc18)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc158)
  ^bb5:  // pred: ^bb4
    %29 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc149)
    cir.store %29, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc149)
    %30 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc35)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc35)
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc36)
    %34 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc37)
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %36 = cir.call @strlen(%35) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc37)
    %37 = cir.const #cir.int<1> : !u64i loc(#loc159)
    %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc160)
    cir.libc.memcpy %38 bytes from %33 to %31 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc161)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc43)
    %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc43)
    %41 = cir.const #cir.int<50> : !s32i loc(#loc44)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc45)
    %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc44)
    %44 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc46)
    %45 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc46)
    cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc162)
    %46 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    cir.br ^bb6 loc(#loc34)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc8)
  } loc(#loc148)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc164)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc51)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc165)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc53)
    cir.return loc(#loc50)
  } loc(#loc163)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc166)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc57)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc168)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc169)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc170)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc65)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc65)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc65)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc65)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc65)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc65)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc65)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc170)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc171)
    cir.br ^bb1 loc(#loc172)
  ^bb1:  // pred: ^bb0
    %11 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc173)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc173)
    %13 = cir.call %12() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc70)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc70)
    cir.brcond %14 ^bb2, ^bb3 loc(#loc174)
  ^bb2:  // pred: ^bb1
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc57)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    cir.br ^bb4 loc(#loc73)
  ^bb3:  // pred: ^bb1
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc76)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc77)
    %20 = cir.const #cir.int<50> : !s32i loc(#loc78)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc78)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc78)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc175)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc82)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc82)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
    %27 = cir.const #cir.int<50> : !s32i loc(#loc84)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc85)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc84)
    %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc86)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc176)
    cir.br ^bb4 loc(#loc69)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc69)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc177)
  ^bb6:  // pred: ^bb5
    %31 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc168)
    cir.store %31, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc168)
    %32 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc89)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc89)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc90)
    %36 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc91)
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
    %38 = cir.call @strlen(%37) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc91)
    %39 = cir.const #cir.int<1> : !u64i loc(#loc178)
    %40 = cir.binop(mul, %38, %39) : !u64i loc(#loc179)
    cir.libc.memcpy %40 bytes from %35 to %33 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc180)
    %41 = cir.const #cir.int<0> : !s32i loc(#loc97)
    %42 = cir.cast(integral, %41 : !s32i), !s8i loc(#loc97)
    %43 = cir.const #cir.int<50> : !s32i loc(#loc98)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %45 = cir.binop(sub, %43, %44) nsw : !s32i loc(#loc98)
    %46 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc100)
    %47 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %45 : !s32i), !cir.ptr<!s8i> loc(#loc100)
    cir.store %42, %47 : !s8i, !cir.ptr<!s8i> loc(#loc181)
    %48 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
    cir.call @printLine(%48) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    cir.br ^bb7 loc(#loc88)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc59)
  } loc(#loc167)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc183)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc184)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc185)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc110)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc110)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc110)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc110)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc110)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc110)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc110)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc185)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc186)
    cir.br ^bb1 loc(#loc187)
  ^bb1:  // pred: ^bb0
    %11 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc188)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc188)
    %13 = cir.call %12() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc115)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc115)
    cir.brcond %14 ^bb2, ^bb3 loc(#loc189)
  ^bb2:  // pred: ^bb1
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc118)
    %17 = cir.const #cir.int<65> : !s32i loc(#loc119)
    %18 = cir.const #cir.int<50> : !s32i loc(#loc120)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc121)
    %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc120)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc120)
    cir.libc.memset %21 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc190)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc124)
    %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc124)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
    %25 = cir.const #cir.int<50> : !s32i loc(#loc126)
    %26 = cir.const #cir.int<1> : !s32i loc(#loc127)
    %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc126)
    %28 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc128)
    cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc191)
    cir.br ^bb3 loc(#loc114)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc114)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc192)
  ^bb5:  // pred: ^bb4
    %29 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc183)
    cir.store %29, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc183)
    %30 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc131)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc131)
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc132)
    %34 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc133)
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
    %36 = cir.call @strlen(%35) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc133)
    %37 = cir.const #cir.int<1> : !u64i loc(#loc193)
    %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc194)
    cir.libc.memcpy %38 bytes from %33 to %31 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc195)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc139)
    %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc139)
    %41 = cir.const #cir.int<50> : !s32i loc(#loc140)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc141)
    %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc140)
    %44 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc142)
    %45 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc142)
    cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc196)
    %46 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
    cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc144)
    cir.br ^bb6 loc(#loc130)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc104)
  } loc(#loc182)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":23:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":41:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":35:9)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":35:25)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":25:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":25:12)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":26:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":26:33)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":27:12)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":27:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":28:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":33:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":28:8)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":28:26)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":29:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":31:16)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":31:22)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":31:27)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":31:31)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":31:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":31:32)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":32:23)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":32:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":32:14)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":32:18)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":32:19)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":34:5)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":40:5)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":37:16)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":37:22)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":37:28)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":37:35)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":37:41)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":37:52)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":37:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":37:53)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":38:22)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":38:14)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":38:17)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":38:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":39:19)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":39:9)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":94:1)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":98:1)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":96:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":96:14)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":97:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":97:14)
#loc55 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc56 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":56:19)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":48:1)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":71:1)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":65:9)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":65:25)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":50:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":50:12)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":51:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":51:33)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":52:12)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":52:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":53:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":63:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":53:8)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":53:27)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":54:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":57:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":59:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":56:9)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":61:16)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":61:22)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":61:27)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":61:30)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":61:9)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":61:31)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":62:22)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":62:9)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":62:14)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":62:17)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":62:18)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":64:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":70:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":67:16)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":67:22)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":67:28)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":67:35)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":67:41)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":67:52)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":67:9)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":67:53)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":68:22)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":68:14)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":68:17)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":68:9)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":69:19)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":69:9)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":74:1)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":92:1)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":86:9)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":86:25)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":76:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":76:12)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":77:5)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":77:33)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":78:12)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":78:5)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":79:5)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":84:5)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":79:8)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":79:26)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":80:5)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":82:16)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":82:22)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":82:27)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":82:30)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":82:9)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":82:31)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":83:22)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":83:9)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":83:14)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":83:17)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":83:18)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":85:5)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":91:5)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":88:16)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":88:22)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":88:28)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":88:35)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":88:41)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":88:52)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":88:9)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":88:53)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":89:22)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":89:14)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":89:17)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":89:9)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":90:19)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_11.c":90:9)
#loc145 = loc(fused[#loc1, #loc2])
#loc146 = loc(fused[#loc3, #loc4])
#loc147 = loc(fused[#loc5, #loc6])
#loc148 = loc(fused[#loc7, #loc8])
#loc149 = loc(fused[#loc9, #loc10])
#loc150 = loc(fused[#loc11, #loc12])
#loc151 = loc(fused[#loc13, #loc14])
#loc152 = loc(fused[#loc16, #loc15])
#loc153 = loc(fused[#loc17, #loc18])
#loc154 = loc(fused[#loc19, #loc20])
#loc155 = loc(fused[#loc21, #loc18])
#loc156 = loc(fused[#loc26, #loc27])
#loc157 = loc(fused[#loc29, #loc28])
#loc158 = loc(fused[#loc33, #loc34])
#loc159 = loc(fused[#loc39, #loc40])
#loc160 = loc(fused[#loc37, #loc40])
#loc161 = loc(fused[#loc41, #loc42])
#loc162 = loc(fused[#loc46, #loc43])
#loc163 = loc(fused[#loc49, #loc50])
#loc164 = loc(fused[#loc51, #loc52])
#loc165 = loc(fused[#loc53, #loc54])
#loc166 = loc(fused[#loc55, #loc56])
#loc167 = loc(fused[#loc58, #loc59])
#loc168 = loc(fused[#loc60, #loc61])
#loc169 = loc(fused[#loc62, #loc63])
#loc170 = loc(fused[#loc64, #loc65])
#loc171 = loc(fused[#loc67, #loc66])
#loc172 = loc(fused[#loc68, #loc69])
#loc173 = loc(fused[#loc70, #loc71])
#loc174 = loc(fused[#loc72, #loc73, #loc74, #loc69])
#loc175 = loc(fused[#loc80, #loc81])
#loc176 = loc(fused[#loc83, #loc82])
#loc177 = loc(fused[#loc87, #loc88])
#loc178 = loc(fused[#loc93, #loc94])
#loc179 = loc(fused[#loc91, #loc94])
#loc180 = loc(fused[#loc95, #loc96])
#loc181 = loc(fused[#loc100, #loc97])
#loc182 = loc(fused[#loc103, #loc104])
#loc183 = loc(fused[#loc105, #loc106])
#loc184 = loc(fused[#loc107, #loc108])
#loc185 = loc(fused[#loc109, #loc110])
#loc186 = loc(fused[#loc112, #loc111])
#loc187 = loc(fused[#loc113, #loc114])
#loc188 = loc(fused[#loc115, #loc116])
#loc189 = loc(fused[#loc117, #loc114])
#loc190 = loc(fused[#loc122, #loc123])
#loc191 = loc(fused[#loc125, #loc124])
#loc192 = loc(fused[#loc129, #loc130])
#loc193 = loc(fused[#loc135, #loc136])
#loc194 = loc(fused[#loc133, #loc136])
#loc195 = loc(fused[#loc137, #loc138])
#loc196 = loc(fused[#loc142, #loc139])
