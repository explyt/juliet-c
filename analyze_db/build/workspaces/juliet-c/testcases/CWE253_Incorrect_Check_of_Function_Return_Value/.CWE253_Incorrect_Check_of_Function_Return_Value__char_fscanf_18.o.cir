!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc49)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"fscanf failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc8)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc53)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc54)
    cir.goto "sink" loc(#loc55)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc17)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc53)
    cir.store %2, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc53)
    %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc14)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc54)
    cir.scope {
      %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc20)
      %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc50)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc21)
      %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc5)
      %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc5)
      %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
      %10 = cir.call @__isoc99_fscanf(%6, %8, %9) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc20)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc23)
      %12 = cir.cmp(eq, %10, %11) : !s32i, !cir.bool loc(#loc57)
      cir.if %12 {
        %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc8)
        %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc8)
        cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc25)
      } loc(#loc58)
    } loc(#loc56)
    cir.return loc(#loc10)
  } loc(#loc52)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc60)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc28)
    cir.return loc(#loc27)
  } loc(#loc59)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc62)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc63)
    cir.goto "sink" loc(#loc64)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc38)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc62)
    cir.store %2, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc62)
    %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc35)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc63)
    cir.scope {
      %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc41)
      %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc50)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc42)
      %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc43)
      %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc43)
      %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
      %10 = cir.call @__isoc99_fscanf(%6, %8, %9) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc41)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc45)
      %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc45)
      %13 = cir.cmp(eq, %10, %12) : !s32i, !cir.bool loc(#loc66)
      cir.if %13 {
        %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc47)
        %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc47)
        cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc48)
      } loc(#loc67)
    } loc(#loc65)
    cir.return loc(#loc31)
  } loc(#loc61)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":35:27)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":37:23)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":24:1)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":40:1)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":31:9)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":31:32)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":32:9)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":32:23)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":26:5)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":26:10)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":27:1)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":35:9)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":38:9)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":35:13)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":35:20)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":35:37)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":35:46)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":36:9)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":37:13)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":64:1)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":67:1)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":66:5)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":66:11)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":47:1)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":62:1)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":54:9)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":54:32)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":55:9)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":55:23)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":49:5)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":49:10)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":50:1)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":57:9)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":60:9)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":57:13)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":57:20)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":57:27)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":57:37)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":57:46)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":58:9)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":59:23)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_18.c":59:13)
#loc49 = loc(fused[#loc1, #loc2])
#loc50 = loc(fused[#loc3, #loc4])
#loc51 = loc(fused[#loc6, #loc7])
#loc52 = loc(fused[#loc9, #loc10])
#loc53 = loc(fused[#loc11, #loc12])
#loc54 = loc(fused[#loc13, #loc14])
#loc55 = loc(fused[#loc15, #loc16])
#loc56 = loc(fused[#loc18, #loc19])
#loc57 = loc(fused[#loc20, #loc23])
#loc58 = loc(fused[#loc24, #loc19])
#loc59 = loc(fused[#loc26, #loc27])
#loc60 = loc(fused[#loc28, #loc29])
#loc61 = loc(fused[#loc30, #loc31])
#loc62 = loc(fused[#loc32, #loc33])
#loc63 = loc(fused[#loc34, #loc35])
#loc64 = loc(fused[#loc36, #loc37])
#loc65 = loc(fused[#loc39, #loc40])
#loc66 = loc(fused[#loc41, #loc45])
#loc67 = loc(fused[#loc46, #loc40])
