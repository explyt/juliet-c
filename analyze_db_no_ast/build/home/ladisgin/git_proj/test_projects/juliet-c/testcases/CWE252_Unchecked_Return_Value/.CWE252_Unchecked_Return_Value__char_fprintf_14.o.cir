!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fprintf_14.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  external @globalFive : !s32i {alignment = 4 : i64} loc(#loc69)
  cir.func private  @fprintf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc70)
  cir.global "private"  external @stdout : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc71)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%s\0A\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc7)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc8)
  cir.func no_proto  @CWE252_Unchecked_Return_Value__char_fprintf_14_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc69)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc13)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc14)
      %3 = cir.cmp(eq, %1, %2) : !s32i, !s32i loc(#loc74)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc15)
      cir.if %4 {
        %5 = cir.get_global @fprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc17)
        %6 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc71)
        %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc18)
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc7)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc7)
        %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc8)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc8)
        %12 = cir.call @fprintf(%7, %9, %11) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc17)
      } loc(#loc75)
    } loc(#loc73)
    cir.return loc(#loc10)
  } loc(#loc72)
  cir.func no_proto  @CWE252_Unchecked_Return_Value__char_fprintf_14_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc77)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc21)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc78)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc23)
    cir.return loc(#loc20)
  } loc(#loc76)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc79)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc27)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"fprintf failed!\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc28)
  cir.func no_proto internal private  @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc69)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc33)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc34)
      %3 = cir.cmp(ne, %1, %2) : !s32i, !s32i loc(#loc82)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc35)
      cir.if %4 {
        %5 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc27)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc27)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc39)
      } else {
        cir.scope {
          %5 = cir.get_global @fprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc42)
          %6 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc71)
          %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc43)
          %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc44)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc44)
          %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc45)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc45)
          %12 = cir.call @fprintf(%7, %9, %11) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc42)
          %13 = cir.const #cir.int<0> : !s32i loc(#loc46)
          %14 = cir.cmp(lt, %12, %13) : !s32i, !s32i loc(#loc85)
          %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc47)
          cir.if %15 {
            %16 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc28)
            %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc28)
            cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc49)
          } loc(#loc86)
        } loc(#loc84)
      } loc(#loc83)
    } loc(#loc81)
    cir.return loc(#loc30)
  } loc(#loc80)
  cir.func no_proto internal private  @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc69)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc54)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc55)
      %3 = cir.cmp(eq, %1, %2) : !s32i, !s32i loc(#loc89)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc56)
      cir.if %4 {
        cir.scope {
          %5 = cir.get_global @fprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc60)
          %6 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc71)
          %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc61)
          %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc62)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc62)
          %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc63)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc63)
          %12 = cir.call @fprintf(%7, %9, %11) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc60)
          %13 = cir.const #cir.int<0> : !s32i loc(#loc64)
          %14 = cir.cmp(lt, %12, %13) : !s32i, !s32i loc(#loc92)
          %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc65)
          cir.if %15 {
            %16 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc67)
            %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc67)
            cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc68)
          } loc(#loc93)
        } loc(#loc91)
      } loc(#loc90)
    } loc(#loc88)
    cir.return loc(#loc51)
  } loc(#loc87)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fprintf_14.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase.h":118:1)
#loc2 = loc("../../testcasesupport/std_testcase.h":118:12)
#loc3 = loc("/usr/include/stdio.h":357:1)
#loc4 = loc("/usr/include/stdio.h":358:45)
#loc5 = loc("/usr/include/stdio.h":150:1)
#loc6 = loc("/usr/include/stdio.h":150:14)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":29:25)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":29:33)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":24:1)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":31:1)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":26:5)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":30:5)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":26:8)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":26:20)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":26:18)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":27:5)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":29:9)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":29:17)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":68:1)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":72:1)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":70:5)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":70:11)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":71:5)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":71:11)
#loc25 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc26 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":43:19)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":50:23)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":38:1)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":53:1)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":40:5)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":52:5)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":40:8)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":40:20)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":40:18)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":41:5)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":44:5)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":46:5)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":43:9)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":48:9)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":51:9)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":48:13)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":48:21)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":48:29)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":48:37)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":48:49)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":48:47)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":49:9)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":50:13)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":56:1)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":66:1)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":58:5)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":65:5)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":58:8)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":58:20)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":58:18)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":59:5)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":61:9)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":64:9)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":61:13)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":61:21)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":61:29)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":61:37)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":61:49)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":61:47)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":62:9)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":63:23)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_fprintf_14.c":63:13)
#loc69 = loc(fused[#loc1, #loc2])
#loc70 = loc(fused[#loc3, #loc4])
#loc71 = loc(fused[#loc5, #loc6])
#loc72 = loc(fused[#loc9, #loc10])
#loc73 = loc(fused[#loc11, #loc12])
#loc74 = loc(fused[#loc13, #loc14])
#loc75 = loc(fused[#loc16, #loc12])
#loc76 = loc(fused[#loc19, #loc20])
#loc77 = loc(fused[#loc21, #loc22])
#loc78 = loc(fused[#loc23, #loc24])
#loc79 = loc(fused[#loc25, #loc26])
#loc80 = loc(fused[#loc29, #loc30])
#loc81 = loc(fused[#loc31, #loc32])
#loc82 = loc(fused[#loc33, #loc34])
#loc83 = loc(fused[#loc36, #loc37, #loc38, #loc32])
#loc84 = loc(fused[#loc40, #loc41])
#loc85 = loc(fused[#loc42, #loc46])
#loc86 = loc(fused[#loc48, #loc41])
#loc87 = loc(fused[#loc50, #loc51])
#loc88 = loc(fused[#loc52, #loc53])
#loc89 = loc(fused[#loc54, #loc55])
#loc90 = loc(fused[#loc57, #loc53])
#loc91 = loc(fused[#loc58, #loc59])
#loc92 = loc(fused[#loc60, #loc64])
#loc93 = loc(fused[#loc66, #loc59])
