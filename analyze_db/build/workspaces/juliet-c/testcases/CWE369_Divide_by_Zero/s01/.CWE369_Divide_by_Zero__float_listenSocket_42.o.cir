!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc19 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":46:24)
#loc20 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":46:30)
#loc113 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":92:44)
#loc169 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":159:28)
#loc170 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":159:34)
#loc259 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":205:44)
#loc317 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":138:28)
#loc318 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":138:34)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc351 = loc(fused[#loc19, #loc20])
#loc408 = loc(fused[#loc169, #loc170])
#loc464 = loc(fused[#loc317, #loc318])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc342)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc343)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc344)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc345)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc346)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc347)
  cir.func private @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc348)
  cir.func private @close(!s32i) -> !s32i loc(#loc349)
  cir.func internal private @badSource(%arg0: !cir.float loc(fused[#loc19, #loc20])) -> !cir.float extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc352)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc353)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc354)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc355)
    %4 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc356)
    %5 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc351)
    %6 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["__retval"] {alignment = 4 : i64} loc(#loc18)
    cir.store %arg0, %5 : !cir.float, !cir.ptr<!cir.float> loc(#loc31)
    cir.br ^bb1 loc(#loc357)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc26)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc354)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc28)
    cir.store %10, %3 : !s32i, !cir.ptr<!s32i> loc(#loc355)
    cir.br ^bb2 loc(#loc358)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc358)
  ^bb3:  // pred: ^bb34
    %11 = cir.const #cir.int<0> : !s32i loc(#loc36)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc36)
    cir.brcond %12 ^bb4, ^bb35 loc(#loc36)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc359)
  ^bb5:  // pred: ^bb4
    %13 = cir.const #cir.int<2> : !s32i loc(#loc39)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %15 = cir.const #cir.int<6> : !s32i loc(#loc41)
    %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc42)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc360)
    cir.br ^bb6 loc(#loc361)
  ^bb6:  // pred: ^bb5
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc47)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc48)
    %20 = cir.cmp(eq, %17, %19) : !s32i, !cir.bool loc(#loc362)
    cir.brcond %20 ^bb7, ^bb8 loc(#loc363)
  ^bb7:  // pred: ^bb6
    cir.br ^bb35 loc(#loc50)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc46)
  ^bb9:  // pred: ^bb8
    %21 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc364)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc53)
    %23 = cir.const #cir.int<16> : !u64i loc(#loc365)
    cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc366)
    %24 = cir.const #cir.int<2> : !s32i loc(#loc58)
    %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc58)
    %26 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc59)
    cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc367)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc61)
    %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc61)
    %29 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc62)
    %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc63)
    cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc368)
    %31 = cir.const #cir.int<27015> : !s32i loc(#loc65)
    %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc65)
    %33 = cir.call @htons(%32) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc66)
    %34 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
    cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc369)
    cir.br ^bb10 loc(#loc370)
  ^bb10:  // pred: ^bb9
    %35 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    %36 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc371)
    %37 = cir.const #cir.int<16> : !u64i loc(#loc372)
    %38 = cir.cast(integral, %37 : !u64i), !u32i loc(#loc372)
    %39 = cir.call @bind(%35, %36, %38) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc77)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc78)
    %41 = cir.unary(minus, %40) nsw : !s32i, !s32i loc(#loc78)
    %42 = cir.cmp(eq, %39, %41) : !s32i, !cir.bool loc(#loc373)
    cir.brcond %42 ^bb11, ^bb12 loc(#loc374)
  ^bb11:  // pred: ^bb10
    cir.br ^bb35 loc(#loc80)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc71)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc375)
  ^bb14:  // pred: ^bb13
    %43 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    %44 = cir.const #cir.int<5> : !s32i loc(#loc84)
    %45 = cir.call @listen(%43, %44) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc85)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %47 = cir.unary(minus, %46) nsw : !s32i, !s32i loc(#loc86)
    %48 = cir.cmp(eq, %45, %47) : !s32i, !cir.bool loc(#loc376)
    cir.brcond %48 ^bb15, ^bb16 loc(#loc377)
  ^bb15:  // pred: ^bb14
    cir.br ^bb35 loc(#loc88)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc82)
  ^bb17:  // pred: ^bb16
    %49 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc89)
    %50 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc90)
    %51 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc91)
    %52 = cir.call @accept(%49, %50, %51) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc92)
    cir.store %52, %3 : !s32i, !cir.ptr<!s32i> loc(#loc378)
    cir.br ^bb18 loc(#loc379)
  ^bb18:  // pred: ^bb17
    %53 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc97)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc98)
    %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc380)
    cir.brcond %56 ^bb19, ^bb20 loc(#loc381)
  ^bb19:  // pred: ^bb18
    cir.br ^bb35 loc(#loc100)
  ^bb20:  // pred: ^bb18
    cir.br ^bb21 loc(#loc96)
  ^bb21:  // pred: ^bb20
    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc101)
    %58 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc102)
    %59 = cir.cast(bitcast, %58 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc102)
    %60 = cir.const #cir.int<20> : !s32i loc(#loc103)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %62 = cir.binop(sub, %60, %61) nsw : !s32i loc(#loc103)
    %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc103)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc105)
    %65 = cir.call @recv(%57, %59, %63, %64) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc106)
    %66 = cir.cast(integral, %65 : !s64i), !s32i loc(#loc106)
    cir.store %66, %0 : !s32i, !cir.ptr<!s32i> loc(#loc382)
    cir.br ^bb22 loc(#loc383)
  ^bb22:  // pred: ^bb21
    %67 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    %68 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %69 = cir.unary(minus, %68) nsw : !s32i, !s32i loc(#loc112)
    %70 = cir.cmp(eq, %67, %69) : !s32i, !cir.bool loc(#loc384)
    cir.brcond %70 ^bb23, ^bb24 loc(#loc113)
  ^bb23:  // pred: ^bb22
    %71 = cir.const #true loc(#loc113)
    cir.br ^bb29(%71 : !cir.bool) loc(#loc113)
  ^bb24:  // pred: ^bb22
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    %73 = cir.const #cir.int<0> : !s32i loc(#loc115)
    %74 = cir.cmp(eq, %72, %73) : !s32i, !cir.bool loc(#loc385)
    cir.brcond %74 ^bb25, ^bb26 loc(#loc113)
  ^bb25:  // pred: ^bb24
    %75 = cir.const #true loc(#loc113)
    cir.br ^bb27(%75 : !cir.bool) loc(#loc113)
  ^bb26:  // pred: ^bb24
    %76 = cir.const #false loc(#loc113)
    cir.br ^bb27(%76 : !cir.bool) loc(#loc113)
  ^bb27(%77: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":92:44)):  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc113)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29(%77 : !cir.bool) loc(#loc113)
  ^bb29(%78: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":92:44)):  // 2 preds: ^bb23, ^bb28
    cir.br ^bb30 loc(#loc113)
  ^bb30:  // pred: ^bb29
    cir.brcond %78 ^bb31, ^bb32 loc(#loc386)
  ^bb31:  // pred: ^bb30
    cir.br ^bb35 loc(#loc117)
  ^bb32:  // pred: ^bb30
    cir.br ^bb33 loc(#loc110)
  ^bb33:  // pred: ^bb32
    %79 = cir.const #cir.int<0> : !s32i loc(#loc118)
    %80 = cir.cast(integral, %79 : !s32i), !s8i loc(#loc118)
    %81 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    %82 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc120)
    %83 = cir.ptr_stride(%82 : !cir.ptr<!s8i>, %81 : !s32i), !cir.ptr<!s8i> loc(#loc120)
    cir.store %80, %83 : !s8i, !cir.ptr<!s8i> loc(#loc387)
    %84 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc121)
    %85 = cir.call @atof(%84) : (!cir.ptr<!s8i>) -> !cir.double side_effect(pure) extra(#fn_attr) loc(#loc122)
    %86 = cir.cast(floating, %85 : !cir.double), !cir.float loc(#loc122)
    cir.store %86, %5 : !cir.float, !cir.ptr<!cir.float> loc(#loc388)
    cir.br ^bb34 loc(#loc38)
  ^bb34:  // pred: ^bb33
    cir.br ^bb3 loc(#loc35)
  ^bb35:  // 6 preds: ^bb3, ^bb7, ^bb11, ^bb15, ^bb19, ^bb31
    cir.br ^bb36 loc(#loc35)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc389)
  ^bb37:  // pred: ^bb36
    %87 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %88 = cir.const #cir.int<1> : !s32i loc(#loc128)
    %89 = cir.unary(minus, %88) nsw : !s32i, !s32i loc(#loc128)
    %90 = cir.cmp(ne, %87, %89) : !s32i, !cir.bool loc(#loc390)
    cir.brcond %90 ^bb38, ^bb39 loc(#loc391)
  ^bb38:  // pred: ^bb37
    %91 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    %92 = cir.call @close(%91) : (!s32i) -> !s32i loc(#loc131)
    cir.br ^bb39 loc(#loc126)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc126)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc392)
  ^bb41:  // pred: ^bb40
    %93 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc134)
    %94 = cir.const #cir.int<1> : !s32i loc(#loc135)
    %95 = cir.unary(minus, %94) nsw : !s32i, !s32i loc(#loc135)
    %96 = cir.cmp(ne, %93, %95) : !s32i, !cir.bool loc(#loc393)
    cir.brcond %96 ^bb42, ^bb43 loc(#loc394)
  ^bb42:  // pred: ^bb41
    %97 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    %98 = cir.call @close(%97) : (!s32i) -> !s32i loc(#loc138)
    cir.br ^bb43 loc(#loc133)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc133)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc33)
  ^bb45:  // pred: ^bb44
    %99 = cir.load %5 : !cir.ptr<!cir.float>, !cir.float loc(#loc139)
    cir.store %99, %6 : !cir.float, !cir.ptr<!cir.float> loc(#loc395)
    %100 = cir.load %6 : !cir.ptr<!cir.float>, !cir.float loc(#loc395)
    cir.return %100 : !cir.float loc(#loc395)
  } loc(#loc350)
  cir.func private @printIntLine(!s32i) loc(#loc396)
  cir.func no_proto @CWE369_Divide_by_Zero__float_listenSocket_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc398)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc399)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc149)
    cir.store %2, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc400)
    %3 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc151)
    %4 = cir.call @badSource(%3) : (!cir.float) -> !cir.float loc(#loc152)
    cir.store %4, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc401)
    cir.br ^bb1 loc(#loc402)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc157)
    %6 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc158)
    %7 = cir.cast(floating, %6 : !cir.float), !cir.double loc(#loc158)
    %8 = cir.binop(div, %5, %7) : !cir.double loc(#loc403)
    %9 = cir.cast(float_to_int, %8 : !cir.double), !s32i loc(#loc403)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc398)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc160)
    cir.br ^bb2 loc(#loc156)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc144)
  } loc(#loc397)
  cir.func no_proto @CWE369_Divide_by_Zero__float_listenSocket_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc405)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc163)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc406)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc165)
    cir.return loc(#loc162)
  } loc(#loc404)
  cir.func internal private @goodB2GSource(%arg0: !cir.float loc(fused[#loc169, #loc170])) -> !cir.float extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc409)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc410)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc411)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc412)
    %4 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc413)
    %5 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc408)
    %6 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["__retval"] {alignment = 4 : i64} loc(#loc168)
    cir.store %arg0, %5 : !cir.float, !cir.ptr<!cir.float> loc(#loc181)
    cir.br ^bb1 loc(#loc414)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc176)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc176)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc411)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc178)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc178)
    cir.store %10, %3 : !s32i, !cir.ptr<!s32i> loc(#loc412)
    cir.br ^bb2 loc(#loc415)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc415)
  ^bb3:  // pred: ^bb34
    %11 = cir.const #cir.int<0> : !s32i loc(#loc186)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc186)
    cir.brcond %12 ^bb4, ^bb35 loc(#loc186)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc416)
  ^bb5:  // pred: ^bb4
    %13 = cir.const #cir.int<2> : !s32i loc(#loc189)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc190)
    %15 = cir.const #cir.int<6> : !s32i loc(#loc191)
    %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc192)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc417)
    cir.br ^bb6 loc(#loc418)
  ^bb6:  // pred: ^bb5
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc197)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc198)
    %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc198)
    %20 = cir.cmp(eq, %17, %19) : !s32i, !cir.bool loc(#loc419)
    cir.brcond %20 ^bb7, ^bb8 loc(#loc420)
  ^bb7:  // pred: ^bb6
    cir.br ^bb35 loc(#loc200)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc196)
  ^bb9:  // pred: ^bb8
    %21 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc421)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc203)
    %23 = cir.const #cir.int<16> : !u64i loc(#loc422)
    cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc423)
    %24 = cir.const #cir.int<2> : !s32i loc(#loc208)
    %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc208)
    %26 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc59)
    cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc424)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc210)
    %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc210)
    %29 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc62)
    %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc63)
    cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc425)
    %31 = cir.const #cir.int<27015> : !s32i loc(#loc212)
    %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc212)
    %33 = cir.call @htons(%32) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc213)
    %34 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
    cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc426)
    cir.br ^bb10 loc(#loc427)
  ^bb10:  // pred: ^bb9
    %35 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc218)
    %36 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc428)
    %37 = cir.const #cir.int<16> : !u64i loc(#loc429)
    %38 = cir.cast(integral, %37 : !u64i), !u32i loc(#loc429)
    %39 = cir.call @bind(%35, %36, %38) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc223)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc224)
    %41 = cir.unary(minus, %40) nsw : !s32i, !s32i loc(#loc224)
    %42 = cir.cmp(eq, %39, %41) : !s32i, !cir.bool loc(#loc430)
    cir.brcond %42 ^bb11, ^bb12 loc(#loc431)
  ^bb11:  // pred: ^bb10
    cir.br ^bb35 loc(#loc226)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc217)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc432)
  ^bb14:  // pred: ^bb13
    %43 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc229)
    %44 = cir.const #cir.int<5> : !s32i loc(#loc230)
    %45 = cir.call @listen(%43, %44) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc231)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc232)
    %47 = cir.unary(minus, %46) nsw : !s32i, !s32i loc(#loc232)
    %48 = cir.cmp(eq, %45, %47) : !s32i, !cir.bool loc(#loc433)
    cir.brcond %48 ^bb15, ^bb16 loc(#loc434)
  ^bb15:  // pred: ^bb14
    cir.br ^bb35 loc(#loc234)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc228)
  ^bb17:  // pred: ^bb16
    %49 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc235)
    %50 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc236)
    %51 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc237)
    %52 = cir.call @accept(%49, %50, %51) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc238)
    cir.store %52, %3 : !s32i, !cir.ptr<!s32i> loc(#loc435)
    cir.br ^bb18 loc(#loc436)
  ^bb18:  // pred: ^bb17
    %53 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc243)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc244)
    %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc244)
    %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc437)
    cir.brcond %56 ^bb19, ^bb20 loc(#loc438)
  ^bb19:  // pred: ^bb18
    cir.br ^bb35 loc(#loc246)
  ^bb20:  // pred: ^bb18
    cir.br ^bb21 loc(#loc242)
  ^bb21:  // pred: ^bb20
    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc247)
    %58 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc248)
    %59 = cir.cast(bitcast, %58 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc248)
    %60 = cir.const #cir.int<20> : !s32i loc(#loc249)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc250)
    %62 = cir.binop(sub, %60, %61) nsw : !s32i loc(#loc249)
    %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc249)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc251)
    %65 = cir.call @recv(%57, %59, %63, %64) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc252)
    %66 = cir.cast(integral, %65 : !s64i), !s32i loc(#loc252)
    cir.store %66, %0 : !s32i, !cir.ptr<!s32i> loc(#loc439)
    cir.br ^bb22 loc(#loc440)
  ^bb22:  // pred: ^bb21
    %67 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc257)
    %68 = cir.const #cir.int<1> : !s32i loc(#loc258)
    %69 = cir.unary(minus, %68) nsw : !s32i, !s32i loc(#loc258)
    %70 = cir.cmp(eq, %67, %69) : !s32i, !cir.bool loc(#loc441)
    cir.brcond %70 ^bb23, ^bb24 loc(#loc259)
  ^bb23:  // pred: ^bb22
    %71 = cir.const #true loc(#loc259)
    cir.br ^bb29(%71 : !cir.bool) loc(#loc259)
  ^bb24:  // pred: ^bb22
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc260)
    %73 = cir.const #cir.int<0> : !s32i loc(#loc261)
    %74 = cir.cmp(eq, %72, %73) : !s32i, !cir.bool loc(#loc442)
    cir.brcond %74 ^bb25, ^bb26 loc(#loc259)
  ^bb25:  // pred: ^bb24
    %75 = cir.const #true loc(#loc259)
    cir.br ^bb27(%75 : !cir.bool) loc(#loc259)
  ^bb26:  // pred: ^bb24
    %76 = cir.const #false loc(#loc259)
    cir.br ^bb27(%76 : !cir.bool) loc(#loc259)
  ^bb27(%77: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":205:44)):  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc259)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29(%77 : !cir.bool) loc(#loc259)
  ^bb29(%78: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":205:44)):  // 2 preds: ^bb23, ^bb28
    cir.br ^bb30 loc(#loc259)
  ^bb30:  // pred: ^bb29
    cir.brcond %78 ^bb31, ^bb32 loc(#loc443)
  ^bb31:  // pred: ^bb30
    cir.br ^bb35 loc(#loc263)
  ^bb32:  // pred: ^bb30
    cir.br ^bb33 loc(#loc256)
  ^bb33:  // pred: ^bb32
    %79 = cir.const #cir.int<0> : !s32i loc(#loc264)
    %80 = cir.cast(integral, %79 : !s32i), !s8i loc(#loc264)
    %81 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc265)
    %82 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc266)
    %83 = cir.ptr_stride(%82 : !cir.ptr<!s8i>, %81 : !s32i), !cir.ptr<!s8i> loc(#loc266)
    cir.store %80, %83 : !s8i, !cir.ptr<!s8i> loc(#loc444)
    %84 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc267)
    %85 = cir.call @atof(%84) : (!cir.ptr<!s8i>) -> !cir.double side_effect(pure) extra(#fn_attr) loc(#loc268)
    %86 = cir.cast(floating, %85 : !cir.double), !cir.float loc(#loc268)
    cir.store %86, %5 : !cir.float, !cir.ptr<!cir.float> loc(#loc445)
    cir.br ^bb34 loc(#loc188)
  ^bb34:  // pred: ^bb33
    cir.br ^bb3 loc(#loc185)
  ^bb35:  // 6 preds: ^bb3, ^bb7, ^bb11, ^bb15, ^bb19, ^bb31
    cir.br ^bb36 loc(#loc185)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc446)
  ^bb37:  // pred: ^bb36
    %87 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc273)
    %88 = cir.const #cir.int<1> : !s32i loc(#loc274)
    %89 = cir.unary(minus, %88) nsw : !s32i, !s32i loc(#loc274)
    %90 = cir.cmp(ne, %87, %89) : !s32i, !cir.bool loc(#loc447)
    cir.brcond %90 ^bb38, ^bb39 loc(#loc448)
  ^bb38:  // pred: ^bb37
    %91 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc276)
    %92 = cir.call @close(%91) : (!s32i) -> !s32i loc(#loc277)
    cir.br ^bb39 loc(#loc272)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc272)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc449)
  ^bb41:  // pred: ^bb40
    %93 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc280)
    %94 = cir.const #cir.int<1> : !s32i loc(#loc281)
    %95 = cir.unary(minus, %94) nsw : !s32i, !s32i loc(#loc281)
    %96 = cir.cmp(ne, %93, %95) : !s32i, !cir.bool loc(#loc450)
    cir.brcond %96 ^bb42, ^bb43 loc(#loc451)
  ^bb42:  // pred: ^bb41
    %97 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc283)
    %98 = cir.call @close(%97) : (!s32i) -> !s32i loc(#loc284)
    cir.br ^bb43 loc(#loc279)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc279)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc183)
  ^bb45:  // pred: ^bb44
    %99 = cir.load %5 : !cir.ptr<!cir.float>, !cir.float loc(#loc285)
    cir.store %99, %6 : !cir.float, !cir.ptr<!cir.float> loc(#loc452)
    %100 = cir.load %6 : !cir.ptr<!cir.float>, !cir.float loc(#loc452)
    cir.return %100 : !cir.float loc(#loc452)
  } loc(#loc407)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc453)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc289)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc455)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc456)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc296)
    cir.store %2, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc457)
    %3 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc298)
    %4 = cir.call @goodB2GSource(%3) : (!cir.float) -> !cir.float loc(#loc299)
    cir.store %4, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc458)
    cir.br ^bb1 loc(#loc459)
  ^bb1:  // pred: ^bb0
    %5 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc304)
    %6 = cir.cast(floating, %5 : !cir.float), !cir.double loc(#loc304)
    %7 = cir.fabs %6 : !cir.double loc(#loc304)
    %8 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc305)
    %9 = cir.cmp(gt, %7, %8) : !cir.double, !cir.bool loc(#loc460)
    cir.brcond %9 ^bb2, ^bb3 loc(#loc461)
  ^bb2:  // pred: ^bb1
    %10 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc310)
    %11 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc311)
    %12 = cir.cast(floating, %11 : !cir.float), !cir.double loc(#loc311)
    %13 = cir.binop(div, %10, %12) : !cir.double loc(#loc462)
    %14 = cir.cast(float_to_int, %13 : !cir.double), !s32i loc(#loc462)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc455)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc312)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc313)
    cir.br ^bb4 loc(#loc308)
  ^bb3:  // pred: ^bb1
    %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc289)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc289)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc314)
    cir.br ^bb4 loc(#loc303)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc303)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc291)
  } loc(#loc454)
  cir.func internal private @goodG2BSource(%arg0: !cir.float loc(fused[#loc317, #loc318])) -> !cir.float extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc464)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["__retval"] {alignment = 4 : i64} loc(#loc316)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc319)
    %2 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc320)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc465)
    %3 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc322)
    cir.store %3, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc466)
    %4 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc466)
    cir.return %4 : !cir.float loc(#loc466)
  } loc(#loc463)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc468)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc469)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc330)
    cir.store %2, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc470)
    %3 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc332)
    %4 = cir.call @goodG2BSource(%3) : (!cir.float) -> !cir.float loc(#loc333)
    cir.store %4, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc471)
    cir.br ^bb1 loc(#loc472)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc338)
    %6 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc339)
    %7 = cir.cast(floating, %6 : !cir.float), !cir.double loc(#loc339)
    %8 = cir.binop(div, %5, %7) : !cir.double loc(#loc473)
    %9 = cir.cast(float_to_int, %8 : !cir.double), !s32i loc(#loc473)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc468)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc340)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc341)
    cir.br ^bb2 loc(#loc337)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc325)
  } loc(#loc467)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_42.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":102:1)
#loc14 = loc("/usr/include/stdlib.h":103:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":46:1)
#loc18 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":118:1)
#loc21 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":53:9)
#loc22 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":53:13)
#loc23 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":54:9)
#loc24 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":54:28)
#loc25 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":55:9)
#loc26 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":55:31)
#loc27 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":56:9)
#loc28 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":56:31)
#loc29 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":57:9)
#loc30 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":57:41)
#loc31 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":47:1)
#loc32 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":48:5)
#loc33 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":116:5)
#loc34 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":58:9)
#loc35 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":101:17)
#loc36 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":101:16)
#loc37 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":59:9)
#loc38 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":100:9)
#loc39 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":67:35)
#loc40 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":67:44)
#loc41 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":67:57)
#loc42 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":67:28)
#loc43 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":67:13)
#loc44 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":67:68)
#loc45 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":68:13)
#loc46 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":71:13)
#loc47 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":68:17)
#loc48 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":68:33)
#loc49 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":69:13)
#loc50 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":70:17)
#loc51 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":72:20)
#loc52 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":72:21)
#loc53 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":72:30)
#loc54 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":72:33)
#loc55 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":72:47)
#loc56 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":72:13)
#loc57 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":72:48)
#loc58 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":73:34)
#loc59 = loc("/usr/include/netinet/in.h":249:5)
#loc60 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":73:13)
#loc61 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":74:39)
#loc62 = loc("/usr/include/netinet/in.h":251:20)
#loc63 = loc("/usr/include/netinet/in.h":33:15)
#loc64 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":74:13)
#loc65 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":75:38)
#loc66 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":75:32)
#loc67 = loc("/usr/include/netinet/in.h":250:15)
#loc68 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":75:13)
#loc69 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":75:46)
#loc70 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":76:13)
#loc71 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":79:13)
#loc72 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":76:22)
#loc73 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":76:54)
#loc74 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":76:55)
#loc75 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":76:64)
#loc76 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":76:78)
#loc77 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":76:17)
#loc78 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":76:84)
#loc79 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":77:13)
#loc80 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":78:17)
#loc81 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":80:13)
#loc82 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":83:13)
#loc83 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":80:24)
#loc84 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":80:38)
#loc85 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":80:17)
#loc86 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":80:57)
#loc87 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":81:13)
#loc88 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":82:17)
#loc89 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":84:35)
#loc90 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":84:49)
#loc91 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":84:55)
#loc92 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":84:28)
#loc93 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":84:13)
#loc94 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":84:59)
#loc95 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":85:13)
#loc96 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":88:13)
#loc97 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":85:17)
#loc98 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":85:33)
#loc99 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":86:13)
#loc100 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":87:17)
#loc101 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":91:31)
#loc102 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":91:45)
#loc103 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":91:58)
#loc104 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":91:76)
#loc105 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":91:79)
#loc106 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":91:26)
#loc107 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":91:13)
#loc108 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":91:80)
#loc109 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":92:13)
#loc110 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":95:13)
#loc111 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":92:17)
#loc112 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":92:31)
#loc114 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":92:47)
#loc115 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":92:61)
#loc116 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":93:13)
#loc117 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":94:17)
#loc118 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":97:39)
#loc119 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":97:25)
#loc120 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":97:13)
#loc121 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":99:32)
#loc122 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":99:27)
#loc123 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":99:13)
#loc124 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":99:43)
#loc125 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":102:9)
#loc126 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":105:9)
#loc127 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":102:13)
#loc128 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":102:29)
#loc129 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":103:9)
#loc130 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":104:26)
#loc131 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":104:13)
#loc132 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":106:9)
#loc133 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":109:9)
#loc134 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":106:13)
#loc135 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":106:29)
#loc136 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":107:9)
#loc137 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":108:26)
#loc138 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":108:13)
#loc139 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":117:12)
#loc140 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":117:5)
#loc141 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc142 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc143 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":120:1)
#loc144 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":131:1)
#loc145 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":128:9)
#loc146 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":128:40)
#loc147 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":122:5)
#loc148 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":122:11)
#loc149 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":124:12)
#loc150 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":124:5)
#loc151 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":125:22)
#loc152 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":125:12)
#loc153 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":125:5)
#loc154 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":125:26)
#loc155 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":126:5)
#loc156 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":130:5)
#loc157 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":128:28)
#loc158 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":128:36)
#loc159 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":129:22)
#loc160 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":129:9)
#loc161 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":251:1)
#loc162 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":255:1)
#loc163 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":253:5)
#loc164 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":253:13)
#loc165 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":254:5)
#loc166 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":254:13)
#loc167 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":159:1)
#loc168 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":231:1)
#loc171 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":166:9)
#loc172 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":166:13)
#loc173 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":167:9)
#loc174 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":167:28)
#loc175 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":168:9)
#loc176 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":168:31)
#loc177 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":169:9)
#loc178 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":169:31)
#loc179 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":170:9)
#loc180 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":170:41)
#loc181 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":160:1)
#loc182 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":161:5)
#loc183 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":229:5)
#loc184 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":171:9)
#loc185 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":214:17)
#loc186 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":214:16)
#loc187 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":172:9)
#loc188 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":213:9)
#loc189 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":180:35)
#loc190 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":180:44)
#loc191 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":180:57)
#loc192 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":180:28)
#loc193 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":180:13)
#loc194 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":180:68)
#loc195 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":181:13)
#loc196 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":184:13)
#loc197 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":181:17)
#loc198 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":181:33)
#loc199 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":182:13)
#loc200 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":183:17)
#loc201 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":185:20)
#loc202 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":185:21)
#loc203 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":185:30)
#loc204 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":185:33)
#loc205 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":185:47)
#loc206 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":185:13)
#loc207 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":185:48)
#loc208 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":186:34)
#loc209 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":186:13)
#loc210 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":187:39)
#loc211 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":187:13)
#loc212 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":188:38)
#loc213 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":188:32)
#loc214 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":188:13)
#loc215 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":188:46)
#loc216 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":189:13)
#loc217 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":192:13)
#loc218 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":189:22)
#loc219 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":189:54)
#loc220 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":189:55)
#loc221 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":189:64)
#loc222 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":189:78)
#loc223 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":189:17)
#loc224 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":189:84)
#loc225 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":190:13)
#loc226 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":191:17)
#loc227 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":193:13)
#loc228 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":196:13)
#loc229 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":193:24)
#loc230 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":193:38)
#loc231 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":193:17)
#loc232 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":193:57)
#loc233 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":194:13)
#loc234 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":195:17)
#loc235 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":197:35)
#loc236 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":197:49)
#loc237 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":197:55)
#loc238 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":197:28)
#loc239 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":197:13)
#loc240 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":197:59)
#loc241 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":198:13)
#loc242 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":201:13)
#loc243 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":198:17)
#loc244 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":198:33)
#loc245 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":199:13)
#loc246 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":200:17)
#loc247 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":204:31)
#loc248 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":204:45)
#loc249 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":204:58)
#loc250 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":204:76)
#loc251 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":204:79)
#loc252 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":204:26)
#loc253 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":204:13)
#loc254 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":204:80)
#loc255 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":205:13)
#loc256 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":208:13)
#loc257 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":205:17)
#loc258 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":205:31)
#loc260 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":205:47)
#loc261 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":205:61)
#loc262 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":206:13)
#loc263 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":207:17)
#loc264 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":210:39)
#loc265 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":210:25)
#loc266 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":210:13)
#loc267 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":212:32)
#loc268 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":212:27)
#loc269 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":212:13)
#loc270 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":212:43)
#loc271 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":215:9)
#loc272 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":218:9)
#loc273 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":215:13)
#loc274 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":215:29)
#loc275 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":216:9)
#loc276 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":217:26)
#loc277 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":217:13)
#loc278 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":219:9)
#loc279 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":222:9)
#loc280 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":219:13)
#loc281 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":219:29)
#loc282 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":220:9)
#loc283 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":221:26)
#loc284 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":221:13)
#loc285 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":230:12)
#loc286 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":230:5)
#loc287 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc288 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc289 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":247:19)
#loc290 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":233:1)
#loc291 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":249:1)
#loc292 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":242:9)
#loc293 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":242:40)
#loc294 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":235:5)
#loc295 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":235:11)
#loc296 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":237:12)
#loc297 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":237:5)
#loc298 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":238:26)
#loc299 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":238:12)
#loc300 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":238:5)
#loc301 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":238:30)
#loc302 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":240:5)
#loc303 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":248:5)
#loc304 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":240:13)
#loc305 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":240:21)
#loc306 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":240:8)
#loc307 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":241:5)
#loc308 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":244:5)
#loc309 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":246:5)
#loc310 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":242:28)
#loc311 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":242:36)
#loc312 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":243:22)
#loc313 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":243:9)
#loc314 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":247:9)
#loc315 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":138:1)
#loc316 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":143:1)
#loc319 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":139:1)
#loc320 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":141:12)
#loc321 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":141:5)
#loc322 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":142:12)
#loc323 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":142:5)
#loc324 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":145:1)
#loc325 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":156:1)
#loc326 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":153:9)
#loc327 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":153:40)
#loc328 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":147:5)
#loc329 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":147:11)
#loc330 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":149:12)
#loc331 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":149:5)
#loc332 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":150:26)
#loc333 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":150:12)
#loc334 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":150:5)
#loc335 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":150:30)
#loc336 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":151:5)
#loc337 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":155:5)
#loc338 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":153:28)
#loc339 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":153:36)
#loc340 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":154:22)
#loc341 = loc("CWE369_Divide_by_Zero__float_listenSocket_42.c":154:9)
#loc342 = loc(fused[#loc1, #loc2])
#loc343 = loc(fused[#loc3, #loc4])
#loc344 = loc(fused[#loc5, #loc6])
#loc345 = loc(fused[#loc7, #loc8])
#loc346 = loc(fused[#loc9, #loc10])
#loc347 = loc(fused[#loc11, #loc12])
#loc348 = loc(fused[#loc13, #loc14])
#loc349 = loc(fused[#loc15, #loc16])
#loc350 = loc(fused[#loc17, #loc18])
#loc352 = loc(fused[#loc21, #loc22])
#loc353 = loc(fused[#loc23, #loc24])
#loc354 = loc(fused[#loc25, #loc26])
#loc355 = loc(fused[#loc27, #loc28])
#loc356 = loc(fused[#loc29, #loc30])
#loc357 = loc(fused[#loc32, #loc33])
#loc358 = loc(fused[#loc34, #loc35])
#loc359 = loc(fused[#loc37, #loc38])
#loc360 = loc(fused[#loc43, #loc44])
#loc361 = loc(fused[#loc45, #loc46])
#loc362 = loc(fused[#loc47, #loc48])
#loc363 = loc(fused[#loc49, #loc46])
#loc364 = loc(fused[#loc51, #loc52])
#loc365 = loc(fused[#loc54, #loc55])
#loc366 = loc(fused[#loc56, #loc57])
#loc367 = loc(fused[#loc60, #loc58])
#loc368 = loc(fused[#loc64, #loc61])
#loc369 = loc(fused[#loc68, #loc69])
#loc370 = loc(fused[#loc70, #loc71])
#loc371 = loc(fused[#loc73, #loc74])
#loc372 = loc(fused[#loc75, #loc76])
#loc373 = loc(fused[#loc77, #loc78])
#loc374 = loc(fused[#loc79, #loc71])
#loc375 = loc(fused[#loc81, #loc82])
#loc376 = loc(fused[#loc85, #loc86])
#loc377 = loc(fused[#loc87, #loc82])
#loc378 = loc(fused[#loc93, #loc94])
#loc379 = loc(fused[#loc95, #loc96])
#loc380 = loc(fused[#loc97, #loc98])
#loc381 = loc(fused[#loc99, #loc96])
#loc382 = loc(fused[#loc107, #loc108])
#loc383 = loc(fused[#loc109, #loc110])
#loc384 = loc(fused[#loc111, #loc112])
#loc385 = loc(fused[#loc114, #loc115])
#loc386 = loc(fused[#loc116, #loc110])
#loc387 = loc(fused[#loc120, #loc118])
#loc388 = loc(fused[#loc123, #loc124])
#loc389 = loc(fused[#loc125, #loc126])
#loc390 = loc(fused[#loc127, #loc128])
#loc391 = loc(fused[#loc129, #loc126])
#loc392 = loc(fused[#loc132, #loc133])
#loc393 = loc(fused[#loc134, #loc135])
#loc394 = loc(fused[#loc136, #loc133])
#loc395 = loc(fused[#loc140, #loc139])
#loc396 = loc(fused[#loc141, #loc142])
#loc397 = loc(fused[#loc143, #loc144])
#loc398 = loc(fused[#loc145, #loc146])
#loc399 = loc(fused[#loc147, #loc148])
#loc400 = loc(fused[#loc150, #loc149])
#loc401 = loc(fused[#loc153, #loc154])
#loc402 = loc(fused[#loc155, #loc156])
#loc403 = loc(fused[#loc157, #loc158])
#loc404 = loc(fused[#loc161, #loc162])
#loc405 = loc(fused[#loc163, #loc164])
#loc406 = loc(fused[#loc165, #loc166])
#loc407 = loc(fused[#loc167, #loc168])
#loc409 = loc(fused[#loc171, #loc172])
#loc410 = loc(fused[#loc173, #loc174])
#loc411 = loc(fused[#loc175, #loc176])
#loc412 = loc(fused[#loc177, #loc178])
#loc413 = loc(fused[#loc179, #loc180])
#loc414 = loc(fused[#loc182, #loc183])
#loc415 = loc(fused[#loc184, #loc185])
#loc416 = loc(fused[#loc187, #loc188])
#loc417 = loc(fused[#loc193, #loc194])
#loc418 = loc(fused[#loc195, #loc196])
#loc419 = loc(fused[#loc197, #loc198])
#loc420 = loc(fused[#loc199, #loc196])
#loc421 = loc(fused[#loc201, #loc202])
#loc422 = loc(fused[#loc204, #loc205])
#loc423 = loc(fused[#loc206, #loc207])
#loc424 = loc(fused[#loc209, #loc208])
#loc425 = loc(fused[#loc211, #loc210])
#loc426 = loc(fused[#loc214, #loc215])
#loc427 = loc(fused[#loc216, #loc217])
#loc428 = loc(fused[#loc219, #loc220])
#loc429 = loc(fused[#loc221, #loc222])
#loc430 = loc(fused[#loc223, #loc224])
#loc431 = loc(fused[#loc225, #loc217])
#loc432 = loc(fused[#loc227, #loc228])
#loc433 = loc(fused[#loc231, #loc232])
#loc434 = loc(fused[#loc233, #loc228])
#loc435 = loc(fused[#loc239, #loc240])
#loc436 = loc(fused[#loc241, #loc242])
#loc437 = loc(fused[#loc243, #loc244])
#loc438 = loc(fused[#loc245, #loc242])
#loc439 = loc(fused[#loc253, #loc254])
#loc440 = loc(fused[#loc255, #loc256])
#loc441 = loc(fused[#loc257, #loc258])
#loc442 = loc(fused[#loc260, #loc261])
#loc443 = loc(fused[#loc262, #loc256])
#loc444 = loc(fused[#loc266, #loc264])
#loc445 = loc(fused[#loc269, #loc270])
#loc446 = loc(fused[#loc271, #loc272])
#loc447 = loc(fused[#loc273, #loc274])
#loc448 = loc(fused[#loc275, #loc272])
#loc449 = loc(fused[#loc278, #loc279])
#loc450 = loc(fused[#loc280, #loc281])
#loc451 = loc(fused[#loc282, #loc279])
#loc452 = loc(fused[#loc286, #loc285])
#loc453 = loc(fused[#loc287, #loc288])
#loc454 = loc(fused[#loc290, #loc291])
#loc455 = loc(fused[#loc292, #loc293])
#loc456 = loc(fused[#loc294, #loc295])
#loc457 = loc(fused[#loc297, #loc296])
#loc458 = loc(fused[#loc300, #loc301])
#loc459 = loc(fused[#loc302, #loc303])
#loc460 = loc(fused[#loc306, #loc305])
#loc461 = loc(fused[#loc307, #loc308, #loc309, #loc303])
#loc462 = loc(fused[#loc310, #loc311])
#loc463 = loc(fused[#loc315, #loc316])
#loc465 = loc(fused[#loc321, #loc320])
#loc466 = loc(fused[#loc323, #loc322])
#loc467 = loc(fused[#loc324, #loc325])
#loc468 = loc(fused[#loc326, #loc327])
#loc469 = loc(fused[#loc328, #loc329])
#loc470 = loc(fused[#loc331, #loc330])
#loc471 = loc(fused[#loc334, #loc335])
#loc472 = loc(fused[#loc336, #loc337])
#loc473 = loc(fused[#loc338, #loc339])
