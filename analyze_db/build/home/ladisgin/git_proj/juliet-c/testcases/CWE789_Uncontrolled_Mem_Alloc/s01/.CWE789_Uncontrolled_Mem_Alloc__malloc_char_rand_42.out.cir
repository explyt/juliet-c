!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":28:25)
#loc6 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":28:32)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":151:10)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":151:14)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":151:20)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":151:32)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":102:29)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":102:36)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":67:29)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":67:36)
#true = #cir.bool<true> : !cir.bool
#loc216 = loc(fused[#loc5, #loc6])
#loc247 = loc(fused[#loc84, #loc85])
#loc248 = loc(fused[#loc86, #loc87])
#loc253 = loc(fused[#loc104, #loc105])
#loc275 = loc(fused[#loc162, #loc163])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc214)
  cir.func internal private @badSource(%arg0: !u64i loc(fused[#loc5, #loc6])) -> !u64i extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc216)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["__retval"] {alignment = 8 : i64} loc(#loc4)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc7)
    %2 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc8)
    cir.store %3, %0 : !u64i, !cir.ptr<!u64i> loc(#loc217)
    %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc11)
    cir.store %4, %1 : !u64i, !cir.ptr<!u64i> loc(#loc218)
    %5 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc218)
    cir.return %5 : !u64i loc(#loc218)
  } loc(#loc215)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc219)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc220)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc221)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc19)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc222)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc223)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc24)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc225)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc29)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc226)
    %3 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc31)
    %4 = cir.call @badSource(%3) : (!u64i) -> !u64i loc(#loc32)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc227)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc229)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc41)
        %7 = cir.const #cir.int<5> : !u64i loc(#loc231)
        %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc232)
        cir.if %8 {
          %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc47)
          %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc48)
          %11 = cir.const #cir.int<1> : !u64i loc(#loc234)
          %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc235)
          %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc47)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc236)
          cir.store %14, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc237)
          cir.scope {
            %24 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
            %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc56)
            %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc56)
            %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc239)
            cir.if %27 {
              %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc58)
              %29 = cir.const #cir.int<1> : !s32i loc(#loc59)
              %30 = cir.unary(minus, %29) : !s32i, !s32i loc(#loc60)
              cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc58)
            } loc(#loc240)
          } loc(#loc238)
          %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc61)
          %16 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
          %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc19)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc19)
          %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc61)
          %20 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
          cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc64)
          %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc65)
          %22 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
          %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc66)
          cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc65)
        } else {
          %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc24)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc24)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc67)
        } loc(#loc233)
      } loc(#loc230)
    } loc(#loc228)
    cir.return loc(#loc26)
  } loc(#loc224)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc242)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc70)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc243)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc72)
    cir.return loc(#loc69)
  } loc(#loc241)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc244)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc245)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc79)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc80)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc81)
  cir.func @main(%arg0: !s32i loc(fused[#loc84, #loc85]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc86, #loc87])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc247)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc248)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc83)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc88)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc88)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc89)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc90)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc90)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc91)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc78)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    %8 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42_good : !cir.ptr<!cir.func<!void ()>> loc(#loc249)
    cir.call @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42_good() : () -> () loc(#loc93)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc79)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc80)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    %13 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc250)
    cir.call @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42_bad() : () -> () loc(#loc97)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc81)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc100)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc251)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc251)
    cir.return %17 : !s32i loc(#loc251)
  } loc(#loc246)
  cir.func internal private @goodB2GSource(%arg0: !u64i loc(fused[#loc104, #loc105])) -> !u64i extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc253)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["__retval"] {alignment = 8 : i64} loc(#loc103)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc106)
    %2 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc107)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc107)
    cir.store %3, %0 : !u64i, !cir.ptr<!u64i> loc(#loc254)
    %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc110)
    cir.store %4, %1 : !u64i, !cir.ptr<!u64i> loc(#loc255)
    %5 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc255)
    cir.return %5 : !u64i loc(#loc255)
  } loc(#loc252)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc112)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc257)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc117)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc117)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc258)
    %3 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc119)
    %4 = cir.call @goodB2GSource(%3) : (!u64i) -> !u64i loc(#loc120)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc259)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc261)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc129)
        %7 = cir.const #cir.int<5> : !u64i loc(#loc263)
        %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc264)
        %9 = cir.ternary(%8, true {
          %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc133)
          %11 = cir.const #cir.int<100> : !s32i loc(#loc134)
          %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc134)
          %13 = cir.cmp(lt, %10, %12) : !u64i, !cir.bool loc(#loc265)
          %14 = cir.ternary(%13, true {
            %15 = cir.const #true loc(#loc132)
            cir.yield %15 : !cir.bool loc(#loc132)
          }, false {
            %15 = cir.const #false loc(#loc132)
            cir.yield %15 : !cir.bool loc(#loc132)
          }) : (!cir.bool) -> !cir.bool loc(#loc132)
          cir.yield %14 : !cir.bool loc(#loc132)
        }, false {
          %10 = cir.const #false loc(#loc132)
          cir.yield %10 : !cir.bool loc(#loc132)
        }) : (!cir.bool) -> !cir.bool loc(#loc132)
        cir.if %9 {
          %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc138)
          %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc139)
          %12 = cir.const #cir.int<1> : !u64i loc(#loc267)
          %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc268)
          %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc138)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc269)
          cir.store %15, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc270)
          cir.scope {
            %25 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
            %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc147)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc147)
            %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc272)
            cir.if %28 {
              %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc149)
              %30 = cir.const #cir.int<1> : !s32i loc(#loc150)
              %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc151)
              cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc149)
            } loc(#loc273)
          } loc(#loc271)
          %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc152)
          %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
          %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc154)
          %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc154)
          %20 = cir.call @strcpy(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc152)
          %21 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc156)
          %22 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc157)
          %23 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
          %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc158)
          cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc157)
        } else {
          %10 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc112)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc112)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc159)
        } loc(#loc266)
      } loc(#loc262)
    } loc(#loc260)
    cir.return loc(#loc114)
  } loc(#loc256)
  cir.func internal private @goodG2BSource(%arg0: !u64i loc(fused[#loc162, #loc163])) -> !u64i extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc275)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["__retval"] {alignment = 8 : i64} loc(#loc161)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc164)
    %2 = cir.const #cir.int<20> : !s32i loc(#loc165)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc165)
    cir.store %3, %0 : !u64i, !cir.ptr<!u64i> loc(#loc276)
    %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc167)
    cir.store %4, %1 : !u64i, !cir.ptr<!u64i> loc(#loc277)
    %5 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc277)
    cir.return %5 : !u64i loc(#loc277)
  } loc(#loc274)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc279)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc173)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc173)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc280)
    %3 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc175)
    %4 = cir.call @goodG2BSource(%3) : (!u64i) -> !u64i loc(#loc176)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc281)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc283)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc185)
        %7 = cir.const #cir.int<5> : !u64i loc(#loc285)
        %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc286)
        cir.if %8 {
          %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc191)
          %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc192)
          %11 = cir.const #cir.int<1> : !u64i loc(#loc288)
          %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc289)
          %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc191)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc290)
          cir.store %14, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc291)
          cir.scope {
            %24 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc199)
            %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc200)
            %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc200)
            %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc293)
            cir.if %27 {
              %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc202)
              %29 = cir.const #cir.int<1> : !s32i loc(#loc203)
              %30 = cir.unary(minus, %29) : !s32i, !s32i loc(#loc204)
              cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc202)
            } loc(#loc294)
          } loc(#loc292)
          %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc205)
          %16 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc206)
          %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc207)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc207)
          %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc205)
          %20 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc208)
          cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc209)
          %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc210)
          %22 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc211)
          %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc211)
          cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc210)
        } else {
          %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc212)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc212)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc213)
        } loc(#loc287)
      } loc(#loc284)
    } loc(#loc282)
    cir.return loc(#loc170)
  } loc(#loc278)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":28:1)
#loc4 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":33:1)
#loc7 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":29:1)
#loc8 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":31:12)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":31:5)
#loc10 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":31:17)
#loc11 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":32:12)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":32:5)
#loc13 = loc("/usr/include/stdlib.h":672:1)
#loc14 = loc("/usr/include/stdlib.h":672:45)
#loc15 = loc("/usr/include/stdlib.h":756:1)
#loc16 = loc("/usr/include/stdlib.h":756:70)
#loc17 = loc("/usr/include/string.h":141:1)
#loc18 = loc("/usr/include/string.h":142:14)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":51:30)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc22 = loc("/usr/include/stdlib.h":687:1)
#loc23 = loc("/usr/include/stdlib.h":687:32)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":57:23)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":35:1)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":60:1)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":37:5)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":37:12)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":39:12)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":39:5)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":40:22)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":40:12)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":40:5)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":40:26)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":41:5)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":59:5)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":42:9)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":42:16)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":46:9)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":58:9)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":46:13)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":46:20)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":46:39)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":47:9)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":54:9)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":56:9)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":48:32)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":48:39)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":48:44)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":48:55)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":48:56)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":48:13)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":49:13)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":49:45)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":49:17)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":49:29)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":49:35)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":49:36)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":49:42)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":49:41)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":51:13)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":51:20)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":52:23)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":52:13)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":53:13)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":53:18)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":57:13)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":136:1)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":140:1)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":138:5)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":138:13)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":139:5)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":139:13)
#loc74 = loc("/usr/include/stdlib.h":575:1)
#loc75 = loc("/usr/include/stdlib.h":575:41)
#loc76 = loc("/usr/include/time.h":76:1)
#loc77 = loc("/usr/include/time.h":76:38)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":156:15)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":158:15)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":161:15)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":163:15)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":151:1)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":166:1)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":152:1)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":154:27)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":154:22)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":154:5)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":156:5)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":157:5)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":157:61)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":158:5)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":161:5)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":162:5)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":162:60)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":163:5)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":165:12)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":165:5)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":102:1)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":107:1)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":103:1)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":105:12)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":105:5)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":105:17)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":106:12)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":106:5)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":131:23)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":109:1)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":134:1)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":111:5)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":111:12)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":113:12)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":113:5)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":114:26)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":114:12)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":114:5)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":114:30)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":115:5)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":133:5)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":116:9)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":116:16)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":120:9)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":132:9)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":120:13)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":120:20)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":120:39)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":120:41)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":120:44)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":120:51)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":121:9)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":128:9)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":130:9)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":122:32)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":122:39)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":122:44)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":122:55)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":122:56)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":122:13)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":123:13)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":123:45)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":123:17)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":123:29)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":123:35)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":123:36)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":123:42)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":123:41)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":125:13)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":125:20)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":125:30)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":126:23)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":126:13)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":127:13)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":127:18)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":131:13)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":67:1)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":72:1)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":68:1)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":70:12)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":70:5)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":71:12)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":71:5)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":74:1)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":99:1)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":76:5)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":76:12)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":78:12)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":78:5)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":79:26)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":79:12)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":79:5)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":79:30)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":80:5)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":98:5)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":81:9)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":81:16)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":85:9)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":97:9)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":85:13)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":85:20)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":85:39)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":86:9)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":93:9)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":95:9)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":87:32)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":87:39)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":87:44)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":87:55)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":87:56)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":87:13)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":88:13)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":88:45)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":88:17)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":88:29)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":88:35)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":88:36)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":88:42)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":88:41)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":90:13)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":90:20)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":90:30)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":91:23)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":91:13)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":92:13)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":92:18)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":96:23)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_42.c":96:13)
#loc214 = loc(fused[#loc1, #loc2])
#loc215 = loc(fused[#loc3, #loc4])
#loc217 = loc(fused[#loc9, #loc10])
#loc218 = loc(fused[#loc12, #loc11])
#loc219 = loc(fused[#loc13, #loc14])
#loc220 = loc(fused[#loc15, #loc16])
#loc221 = loc(fused[#loc17, #loc18])
#loc222 = loc(fused[#loc20, #loc21])
#loc223 = loc(fused[#loc22, #loc23])
#loc224 = loc(fused[#loc25, #loc26])
#loc225 = loc(fused[#loc27, #loc28])
#loc226 = loc(fused[#loc30, #loc29])
#loc227 = loc(fused[#loc33, #loc34])
#loc228 = loc(fused[#loc35, #loc36])
#loc229 = loc(fused[#loc37, #loc38])
#loc230 = loc(fused[#loc39, #loc40])
#loc231 = loc(fused[#loc42, #loc43])
#loc232 = loc(fused[#loc41, #loc43])
#loc233 = loc(fused[#loc44, #loc45, #loc46, #loc40])
#loc234 = loc(fused[#loc49, #loc50])
#loc235 = loc(fused[#loc48, #loc50])
#loc236 = loc(fused[#loc47, #loc51])
#loc237 = loc(fused[#loc52, #loc51])
#loc238 = loc(fused[#loc53, #loc54])
#loc239 = loc(fused[#loc55, #loc56])
#loc240 = loc(fused[#loc57, #loc54])
#loc241 = loc(fused[#loc68, #loc69])
#loc242 = loc(fused[#loc70, #loc71])
#loc243 = loc(fused[#loc72, #loc73])
#loc244 = loc(fused[#loc74, #loc75])
#loc245 = loc(fused[#loc76, #loc77])
#loc246 = loc(fused[#loc82, #loc83])
#loc249 = loc(fused[#loc93, #loc94])
#loc250 = loc(fused[#loc97, #loc98])
#loc251 = loc(fused[#loc101, #loc100])
#loc252 = loc(fused[#loc102, #loc103])
#loc254 = loc(fused[#loc108, #loc109])
#loc255 = loc(fused[#loc111, #loc110])
#loc256 = loc(fused[#loc113, #loc114])
#loc257 = loc(fused[#loc115, #loc116])
#loc258 = loc(fused[#loc118, #loc117])
#loc259 = loc(fused[#loc121, #loc122])
#loc260 = loc(fused[#loc123, #loc124])
#loc261 = loc(fused[#loc125, #loc126])
#loc262 = loc(fused[#loc127, #loc128])
#loc263 = loc(fused[#loc130, #loc131])
#loc264 = loc(fused[#loc129, #loc131])
#loc265 = loc(fused[#loc133, #loc134])
#loc266 = loc(fused[#loc135, #loc136, #loc137, #loc128])
#loc267 = loc(fused[#loc140, #loc141])
#loc268 = loc(fused[#loc139, #loc141])
#loc269 = loc(fused[#loc138, #loc142])
#loc270 = loc(fused[#loc143, #loc142])
#loc271 = loc(fused[#loc144, #loc145])
#loc272 = loc(fused[#loc146, #loc147])
#loc273 = loc(fused[#loc148, #loc145])
#loc274 = loc(fused[#loc160, #loc161])
#loc276 = loc(fused[#loc166, #loc165])
#loc277 = loc(fused[#loc168, #loc167])
#loc278 = loc(fused[#loc169, #loc170])
#loc279 = loc(fused[#loc171, #loc172])
#loc280 = loc(fused[#loc174, #loc173])
#loc281 = loc(fused[#loc177, #loc178])
#loc282 = loc(fused[#loc179, #loc180])
#loc283 = loc(fused[#loc181, #loc182])
#loc284 = loc(fused[#loc183, #loc184])
#loc285 = loc(fused[#loc186, #loc187])
#loc286 = loc(fused[#loc185, #loc187])
#loc287 = loc(fused[#loc188, #loc189, #loc190, #loc184])
#loc288 = loc(fused[#loc193, #loc194])
#loc289 = loc(fused[#loc192, #loc194])
#loc290 = loc(fused[#loc191, #loc195])
#loc291 = loc(fused[#loc196, #loc195])
#loc292 = loc(fused[#loc197, #loc198])
#loc293 = loc(fused[#loc199, #loc200])
#loc294 = loc(fused[#loc201, #loc198])
