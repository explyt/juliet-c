!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc7 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":25:21)
#loc8 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":25:29)
#loc50 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":58:26)
#loc51 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":58:34)
#loc91 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":92:26)
#loc92 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":92:34)
#loc130 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":121:25)
#loc131 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":121:33)
#loc161 = loc(fused[#loc7, #loc8])
#loc179 = loc(fused[#loc50, #loc51])
#loc194 = loc(fused[#loc91, #loc92])
#loc209 = loc(fused[#loc130, #loc131])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__int64_t_min_postdec_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc158)
  cir.func private  @printLongLongLine(!s64i) loc(#loc159)
  cir.func internal private  @badSink(%arg0: !s64i loc(fused[#loc7, #loc8])) extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc161)
    cir.store %arg0, %0 : !s64i, !cir.ptr<!s64i> loc(#loc9)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc158)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc12)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc12)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc165)
          %5 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc18)
          %6 = cir.unary(dec, %5) : !s64i, !s64i loc(#loc19)
          cir.store %6, %0 : !s64i, !cir.ptr<!s64i> loc(#loc166)
          %7 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc17)
          cir.store %7, %4 : !s64i, !cir.ptr<!s64i> loc(#loc165)
          %8 = cir.load %4 : !cir.ptr<!s64i>, !s64i loc(#loc20)
          cir.call @printLongLongLine(%8) : (!s64i) -> () loc(#loc21)
        } loc(#loc164)
      } loc(#loc163)
    } loc(#loc162)
    cir.return loc(#loc6)
  } loc(#loc160)
  cir.func no_proto  @CWE191_Integer_Underflow__int64_t_min_postdec_21_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc168)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc26)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc169)
    %2 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc28)
    %3 = cir.unary(minus, %2) : !s64i, !s64i loc(#loc28)
    %4 = cir.const #cir.int<1> : !s64i loc(#loc28)
    %5 = cir.binop(sub, %3, %4) nsw : !s64i loc(#loc28)
    cir.store %5, %0 : !s64i, !cir.ptr<!s64i> loc(#loc170)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %7 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc158)
    cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc171)
    %8 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc32)
    cir.call @badSink(%8) : (!s64i) -> () loc(#loc33)
    cir.return loc(#loc23)
  } loc(#loc167)
  cir.func no_proto  @CWE191_Integer_Underflow__int64_t_min_postdec_21_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc173)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc174)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc175)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc35)
  } loc(#loc172)
  cir.global "private"  internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc176)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc177)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc46)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc47)
  cir.func internal private  @goodB2G1Sink(%arg0: !s64i loc(fused[#loc50, #loc51])) extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc179)
    cir.store %arg0, %0 : !s64i, !cir.ptr<!s64i> loc(#loc52)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc176)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc55)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc55)
      cir.if %3 {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc46)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc46)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc59)
      } else {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc62)
          %5 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc63)
          %6 = cir.unary(minus, %5) : !s64i, !s64i loc(#loc63)
          %7 = cir.const #cir.int<1> : !s64i loc(#loc63)
          %8 = cir.binop(sub, %6, %7) nsw : !s64i loc(#loc63)
          %9 = cir.cmp(gt, %4, %8) : !s64i, !s32i loc(#loc183)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc64)
          cir.if %10 {
            %11 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc185)
            %12 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc70)
            %13 = cir.unary(dec, %12) : !s64i, !s64i loc(#loc71)
            cir.store %13, %0 : !s64i, !cir.ptr<!s64i> loc(#loc186)
            %14 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc69)
            cir.store %14, %11 : !s64i, !cir.ptr<!s64i> loc(#loc185)
            %15 = cir.load %11 : !cir.ptr<!s64i>, !s64i loc(#loc72)
            cir.call @printLongLongLine(%15) : (!s64i) -> () loc(#loc73)
          } else {
            %11 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc47)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc47)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc74)
          } loc(#loc184)
        } loc(#loc182)
      } loc(#loc181)
    } loc(#loc180)
    cir.return loc(#loc49)
  } loc(#loc178)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc188)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc79)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc189)
    %2 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc81)
    %3 = cir.unary(minus, %2) : !s64i, !s64i loc(#loc81)
    %4 = cir.const #cir.int<1> : !s64i loc(#loc81)
    %5 = cir.binop(sub, %3, %4) nsw : !s64i loc(#loc81)
    cir.store %5, %0 : !s64i, !cir.ptr<!s64i> loc(#loc190)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc83)
    %7 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc176)
    cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc191)
    %8 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc85)
    cir.call @goodB2G1Sink(%8) : (!s64i) -> () loc(#loc86)
    cir.return loc(#loc76)
  } loc(#loc187)
  cir.global "private"  internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc192)
  cir.func internal private  @goodB2G2Sink(%arg0: !s64i loc(fused[#loc91, #loc92])) extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc194)
    cir.store %arg0, %0 : !s64i, !cir.ptr<!s64i> loc(#loc93)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc192)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc96)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc96)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc100)
          %5 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc101)
          %6 = cir.unary(minus, %5) : !s64i, !s64i loc(#loc101)
          %7 = cir.const #cir.int<1> : !s64i loc(#loc101)
          %8 = cir.binop(sub, %6, %7) nsw : !s64i loc(#loc101)
          %9 = cir.cmp(gt, %4, %8) : !s64i, !s32i loc(#loc198)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc102)
          cir.if %10 {
            %11 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc200)
            %12 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc108)
            %13 = cir.unary(dec, %12) : !s64i, !s64i loc(#loc109)
            cir.store %13, %0 : !s64i, !cir.ptr<!s64i> loc(#loc201)
            %14 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc107)
            cir.store %14, %11 : !s64i, !cir.ptr<!s64i> loc(#loc200)
            %15 = cir.load %11 : !cir.ptr<!s64i>, !s64i loc(#loc110)
            cir.call @printLongLongLine(%15) : (!s64i) -> () loc(#loc111)
          } else {
            %11 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc112)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc112)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc113)
          } loc(#loc199)
        } loc(#loc197)
      } loc(#loc196)
    } loc(#loc195)
    cir.return loc(#loc90)
  } loc(#loc193)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc203)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc118)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc204)
    %2 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc120)
    %3 = cir.unary(minus, %2) : !s64i, !s64i loc(#loc120)
    %4 = cir.const #cir.int<1> : !s64i loc(#loc120)
    %5 = cir.binop(sub, %3, %4) nsw : !s64i loc(#loc120)
    cir.store %5, %0 : !s64i, !cir.ptr<!s64i> loc(#loc205)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc122)
    %7 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc192)
    cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc206)
    %8 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc124)
    cir.call @goodB2G2Sink(%8) : (!s64i) -> () loc(#loc125)
    cir.return loc(#loc115)
  } loc(#loc202)
  cir.global "private"  internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc207)
  cir.func internal private  @goodG2BSink(%arg0: !s64i loc(fused[#loc130, #loc131])) extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc209)
    cir.store %arg0, %0 : !s64i, !cir.ptr<!s64i> loc(#loc132)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc207)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc135)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc135)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc213)
          %5 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc141)
          %6 = cir.unary(dec, %5) : !s64i, !s64i loc(#loc142)
          cir.store %6, %0 : !s64i, !cir.ptr<!s64i> loc(#loc214)
          %7 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc140)
          cir.store %7, %4 : !s64i, !cir.ptr<!s64i> loc(#loc213)
          %8 = cir.load %4 : !cir.ptr<!s64i>, !s64i loc(#loc143)
          cir.call @printLongLongLine(%8) : (!s64i) -> () loc(#loc144)
        } loc(#loc212)
      } loc(#loc211)
    } loc(#loc210)
    cir.return loc(#loc129)
  } loc(#loc208)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc216)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc149)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc217)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc151)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc152)
    %4 = cir.cast(integral, %3 : !s32i), !s64i loc(#loc152)
    cir.store %4, %0 : !s64i, !cir.ptr<!s64i> loc(#loc218)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc154)
    %6 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc207)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc219)
    %7 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc156)
    cir.call @goodG2BSink(%7) : (!s64i) -> () loc(#loc157)
    cir.return loc(#loc146)
  } loc(#loc215)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__int64_t_min_postdec_21.c":0:0)
#loc1 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":23:1)
#loc2 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":23:24)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc5 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":25:1)
#loc6 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":36:1)
#loc9 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":26:1)
#loc10 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":27:5)
#loc11 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":35:5)
#loc12 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":27:8)
#loc13 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":28:5)
#loc14 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":29:9)
#loc15 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":34:9)
#loc16 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":32:13)
#loc17 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":32:30)
#loc18 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":31:17)
#loc19 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":31:13)
#loc20 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":33:31)
#loc21 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":33:13)
#loc22 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":38:1)
#loc23 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":46:1)
#loc24 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":40:5)
#loc25 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":40:13)
#loc26 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":41:12)
#loc27 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":41:5)
#loc28 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":43:12)
#loc29 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":43:5)
#loc30 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":44:17)
#loc31 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":44:5)
#loc32 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":45:13)
#loc33 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":45:5)
#loc34 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":144:1)
#loc35 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":149:1)
#loc36 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":146:5)
#loc37 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":146:14)
#loc38 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":147:5)
#loc39 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":147:14)
#loc40 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":148:5)
#loc41 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":148:13)
#loc42 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":53:1)
#loc43 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":53:29)
#loc44 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc45 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc46 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":63:19)
#loc47 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":76:23)
#loc48 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":58:1)
#loc49 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":79:1)
#loc52 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":59:1)
#loc53 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":60:5)
#loc54 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":78:5)
#loc55 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":60:8)
#loc56 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":61:5)
#loc57 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":64:5)
#loc58 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":66:5)
#loc59 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":63:9)
#loc60 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":68:9)
#loc61 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":77:9)
#loc62 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":68:13)
#loc63 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":68:20)
#loc64 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":68:18)
#loc65 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":69:9)
#loc66 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":73:9)
#loc67 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":75:9)
#loc68 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":71:13)
#loc69 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":71:30)
#loc70 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":70:17)
#loc71 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":70:13)
#loc72 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":72:31)
#loc73 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":72:13)
#loc74 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":76:13)
#loc75 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":81:1)
#loc76 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":89:1)
#loc77 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":83:5)
#loc78 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":83:13)
#loc79 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":84:12)
#loc80 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":84:5)
#loc81 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":86:12)
#loc82 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":86:5)
#loc83 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":87:22)
#loc84 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":87:5)
#loc85 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":88:18)
#loc86 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":88:5)
#loc87 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":54:1)
#loc88 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":54:29)
#loc89 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":92:1)
#loc90 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":108:1)
#loc93 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":93:1)
#loc94 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":94:5)
#loc95 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":107:5)
#loc96 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":94:8)
#loc97 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":95:5)
#loc98 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":97:9)
#loc99 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":106:9)
#loc100 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":97:13)
#loc101 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":97:20)
#loc102 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":97:18)
#loc103 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":98:9)
#loc104 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":102:9)
#loc105 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":104:9)
#loc106 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":100:13)
#loc107 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":100:30)
#loc108 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":99:17)
#loc109 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":99:13)
#loc110 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":101:31)
#loc111 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":101:13)
#loc112 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":105:23)
#loc113 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":105:13)
#loc114 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":110:1)
#loc115 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":118:1)
#loc116 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":112:5)
#loc117 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":112:13)
#loc118 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":113:12)
#loc119 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":113:5)
#loc120 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":115:12)
#loc121 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":115:5)
#loc122 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":116:22)
#loc123 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":116:5)
#loc124 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":117:18)
#loc125 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":117:5)
#loc126 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":55:1)
#loc127 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":55:28)
#loc128 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":121:1)
#loc129 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":132:1)
#loc132 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":122:1)
#loc133 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":123:5)
#loc134 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":131:5)
#loc135 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":123:8)
#loc136 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":124:5)
#loc137 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":125:9)
#loc138 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":130:9)
#loc139 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":128:13)
#loc140 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":128:30)
#loc141 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":127:17)
#loc142 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":127:13)
#loc143 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":129:31)
#loc144 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":129:13)
#loc145 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":134:1)
#loc146 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":142:1)
#loc147 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":136:5)
#loc148 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":136:13)
#loc149 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":137:12)
#loc150 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":137:5)
#loc151 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":139:13)
#loc152 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":139:12)
#loc153 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":139:5)
#loc154 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":140:21)
#loc155 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":140:5)
#loc156 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":141:17)
#loc157 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_21.c":141:5)
#loc158 = loc(fused[#loc1, #loc2])
#loc159 = loc(fused[#loc3, #loc4])
#loc160 = loc(fused[#loc5, #loc6])
#loc162 = loc(fused[#loc10, #loc11])
#loc163 = loc(fused[#loc13, #loc11])
#loc164 = loc(fused[#loc14, #loc15])
#loc165 = loc(fused[#loc16, #loc17])
#loc166 = loc(fused[#loc19, #loc18])
#loc167 = loc(fused[#loc22, #loc23])
#loc168 = loc(fused[#loc24, #loc25])
#loc169 = loc(fused[#loc27, #loc26])
#loc170 = loc(fused[#loc29, #loc28])
#loc171 = loc(fused[#loc31, #loc30])
#loc172 = loc(fused[#loc34, #loc35])
#loc173 = loc(fused[#loc36, #loc37])
#loc174 = loc(fused[#loc38, #loc39])
#loc175 = loc(fused[#loc40, #loc41])
#loc176 = loc(fused[#loc42, #loc43])
#loc177 = loc(fused[#loc44, #loc45])
#loc178 = loc(fused[#loc48, #loc49])
#loc180 = loc(fused[#loc53, #loc54])
#loc181 = loc(fused[#loc56, #loc57, #loc58, #loc54])
#loc182 = loc(fused[#loc60, #loc61])
#loc183 = loc(fused[#loc62, #loc63])
#loc184 = loc(fused[#loc65, #loc66, #loc67, #loc61])
#loc185 = loc(fused[#loc68, #loc69])
#loc186 = loc(fused[#loc71, #loc70])
#loc187 = loc(fused[#loc75, #loc76])
#loc188 = loc(fused[#loc77, #loc78])
#loc189 = loc(fused[#loc80, #loc79])
#loc190 = loc(fused[#loc82, #loc81])
#loc191 = loc(fused[#loc84, #loc83])
#loc192 = loc(fused[#loc87, #loc88])
#loc193 = loc(fused[#loc89, #loc90])
#loc195 = loc(fused[#loc94, #loc95])
#loc196 = loc(fused[#loc97, #loc95])
#loc197 = loc(fused[#loc98, #loc99])
#loc198 = loc(fused[#loc100, #loc101])
#loc199 = loc(fused[#loc103, #loc104, #loc105, #loc99])
#loc200 = loc(fused[#loc106, #loc107])
#loc201 = loc(fused[#loc109, #loc108])
#loc202 = loc(fused[#loc114, #loc115])
#loc203 = loc(fused[#loc116, #loc117])
#loc204 = loc(fused[#loc119, #loc118])
#loc205 = loc(fused[#loc121, #loc120])
#loc206 = loc(fused[#loc123, #loc122])
#loc207 = loc(fused[#loc126, #loc127])
#loc208 = loc(fused[#loc128, #loc129])
#loc210 = loc(fused[#loc133, #loc134])
#loc211 = loc(fused[#loc136, #loc134])
#loc212 = loc(fused[#loc137, #loc138])
#loc213 = loc(fused[#loc139, #loc140])
#loc214 = loc(fused[#loc142, #loc141])
#loc215 = loc(fused[#loc145, #loc146])
#loc216 = loc(fused[#loc147, #loc148])
#loc217 = loc(fused[#loc150, #loc149])
#loc218 = loc(fused[#loc153, #loc151])
#loc219 = loc(fused[#loc155, #loc154])
