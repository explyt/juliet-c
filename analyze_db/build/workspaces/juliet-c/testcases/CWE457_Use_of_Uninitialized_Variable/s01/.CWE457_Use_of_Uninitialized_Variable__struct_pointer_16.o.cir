!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @printIntLine(!s32i) loc(#loc109)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__struct_pointer_16_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc111)
    cir.scope {
      cir.while {
        %1 = cir.const #cir.int<1> : !s32i loc(#loc9)
        %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc9)
        cir.condition(%2) loc(#loc9)
      } do {
        cir.scope {
          cir.break loc(#loc11)
        } loc(#loc113)
        cir.yield loc(#loc8)
      } loc(#loc112)
    } loc(#loc112)
    cir.scope {
      cir.while {
        %1 = cir.const #cir.int<1> : !s32i loc(#loc14)
        %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc14)
        cir.condition(%2) loc(#loc14)
      } do {
        cir.scope {
          %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc16)
          %2 = cir.get_member %1[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc17)
          %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc18)
          cir.call @printIntLine(%3) : (!s32i) -> () loc(#loc19)
          %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc20)
          %5 = cir.get_member %4[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc21)
          %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc22)
          cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc23)
          cir.break loc(#loc24)
        } loc(#loc115)
        cir.yield loc(#loc13)
      } loc(#loc114)
    } loc(#loc114)
    cir.return loc(#loc4)
  } loc(#loc110)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__struct_pointer_16_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc117)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc27)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc118)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc29)
    cir.return loc(#loc26)
  } loc(#loc116)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc119)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc120)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc122)
    cir.scope {
      cir.while {
        %1 = cir.const #cir.int<1> : !s32i loc(#loc41)
        %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc41)
        cir.condition(%2) loc(#loc41)
      } do {
        cir.scope {
          cir.break loc(#loc43)
        } loc(#loc124)
        cir.yield loc(#loc40)
      } loc(#loc123)
    } loc(#loc123)
    cir.scope {
      cir.while {
        %1 = cir.const #cir.int<1> : !s32i loc(#loc46)
        %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc46)
        cir.condition(%2) loc(#loc46)
      } do {
        cir.scope {
          %1 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc48)
          %2 = cir.const #cir.int<8> : !u64i loc(#loc127)
          %3 = cir.call @malloc(%2) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc48)
          %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc128)
          cir.store %4, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc129)
          cir.scope {
            %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc55)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc56)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc56)
            %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc131)
            cir.if %20 {
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc58)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc59)
              %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc60)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr1) loc(#loc58)
            } loc(#loc132)
          } loc(#loc130)
          %5 = cir.const #cir.int<5> : !s32i loc(#loc61)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc62)
          %7 = cir.get_member %6[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc17)
          cir.store %5, %7 : !s32i, !cir.ptr<!s32i> loc(#loc133)
          %8 = cir.const #cir.int<6> : !s32i loc(#loc63)
          %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc64)
          %10 = cir.get_member %9[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc21)
          cir.store %8, %10 : !s32i, !cir.ptr<!s32i> loc(#loc134)
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc65)
          %12 = cir.get_member %11[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc17)
          %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc66)
          cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc67)
          %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc68)
          %15 = cir.get_member %14[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc21)
          %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc69)
          cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc70)
          cir.break loc(#loc71)
        } loc(#loc126)
        cir.yield loc(#loc45)
      } loc(#loc125)
    } loc(#loc125)
    cir.return loc(#loc36)
  } loc(#loc121)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc136)
    cir.scope {
      cir.while {
        %1 = cir.const #cir.int<1> : !s32i loc(#loc78)
        %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc78)
        cir.condition(%2) loc(#loc78)
      } do {
        cir.scope {
          %1 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc80)
          %2 = cir.const #cir.int<8> : !u64i loc(#loc139)
          %3 = cir.call @malloc(%2) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc80)
          %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc140)
          cir.store %4, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc141)
          cir.scope {
            %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc87)
            %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc88)
            %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc88)
            %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc143)
            cir.if %14 {
              %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc90)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc91)
              %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc92)
              cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr1) loc(#loc90)
            } loc(#loc144)
          } loc(#loc142)
          %5 = cir.const #cir.int<5> : !s32i loc(#loc93)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc94)
          %7 = cir.get_member %6[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc17)
          cir.store %5, %7 : !s32i, !cir.ptr<!s32i> loc(#loc145)
          %8 = cir.const #cir.int<6> : !s32i loc(#loc95)
          %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc96)
          %10 = cir.get_member %9[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc21)
          cir.store %8, %10 : !s32i, !cir.ptr<!s32i> loc(#loc146)
          cir.break loc(#loc97)
        } loc(#loc138)
        cir.yield loc(#loc77)
      } loc(#loc137)
    } loc(#loc137)
    cir.scope {
      cir.while {
        %1 = cir.const #cir.int<1> : !s32i loc(#loc100)
        %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc100)
        cir.condition(%2) loc(#loc100)
      } do {
        cir.scope {
          %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc102)
          %2 = cir.get_member %1[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc17)
          %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc103)
          cir.call @printIntLine(%3) : (!s32i) -> () loc(#loc104)
          %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc105)
          %5 = cir.get_member %4[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc21)
          %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc106)
          cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc107)
          cir.break loc(#loc108)
        } loc(#loc148)
        cir.yield loc(#loc99)
      } loc(#loc147)
    } loc(#loc147)
    cir.return loc(#loc73)
  } loc(#loc135)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":24:1)
#loc4 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":40:1)
#loc5 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":26:5)
#loc6 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":26:21)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":27:5)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":32:5)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":27:11)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":28:5)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":31:9)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":33:5)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":39:5)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":33:11)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":34:5)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":36:22)
#loc17 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":36:28)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":36:9)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":37:22)
#loc21 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":37:28)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":37:9)
#loc24 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":38:9)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":93:1)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":97:1)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":95:5)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":95:13)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":96:5)
#loc30 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":96:13)
#loc31 = loc("/usr/include/stdlib.h":672:1)
#loc32 = loc("/usr/include/stdlib.h":672:45)
#loc33 = loc("/usr/include/stdlib.h":756:1)
#loc34 = loc("/usr/include/stdlib.h":756:70)
#loc35 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":47:1)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":68:1)
#loc37 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":49:5)
#loc38 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":49:21)
#loc39 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":50:5)
#loc40 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":55:5)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":50:11)
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":51:5)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":54:9)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":56:5)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":67:5)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":56:11)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":57:5)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":60:33)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":60:40)
#loc50 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":60:60)
#loc51 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":60:61)
#loc52 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":60:9)
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":61:9)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":61:37)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":61:13)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":61:21)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":61:27)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":61:28)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":61:34)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":61:33)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":62:24)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":62:9)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":63:24)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":63:9)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":64:22)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":64:28)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":64:9)
#loc68 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":65:22)
#loc69 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":65:28)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":65:9)
#loc71 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":66:9)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":71:1)
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":91:1)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":73:5)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":73:21)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":74:5)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":83:5)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":74:11)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":75:5)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":78:33)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":78:40)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":78:60)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":78:61)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":78:9)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":79:9)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":79:37)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":79:13)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":79:21)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":79:27)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":79:28)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":79:34)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":79:33)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":80:24)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":80:9)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":81:24)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":81:9)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":82:9)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":84:5)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":90:5)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":84:11)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":85:5)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":87:22)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":87:28)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":87:9)
#loc105 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":88:22)
#loc106 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":88:28)
#loc107 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":88:9)
#loc108 = loc("CWE457_Use_of_Uninitialized_Variable__struct_pointer_16.c":89:9)
#loc109 = loc(fused[#loc1, #loc2])
#loc110 = loc(fused[#loc3, #loc4])
#loc111 = loc(fused[#loc5, #loc6])
#loc112 = loc(fused[#loc7, #loc8])
#loc113 = loc(fused[#loc10, #loc8])
#loc114 = loc(fused[#loc12, #loc13])
#loc115 = loc(fused[#loc15, #loc13])
#loc116 = loc(fused[#loc25, #loc26])
#loc117 = loc(fused[#loc27, #loc28])
#loc118 = loc(fused[#loc29, #loc30])
#loc119 = loc(fused[#loc31, #loc32])
#loc120 = loc(fused[#loc33, #loc34])
#loc121 = loc(fused[#loc35, #loc36])
#loc122 = loc(fused[#loc37, #loc38])
#loc123 = loc(fused[#loc39, #loc40])
#loc124 = loc(fused[#loc42, #loc40])
#loc125 = loc(fused[#loc44, #loc45])
#loc126 = loc(fused[#loc47, #loc45])
#loc127 = loc(fused[#loc49, #loc50])
#loc128 = loc(fused[#loc48, #loc51])
#loc129 = loc(fused[#loc52, #loc51])
#loc130 = loc(fused[#loc53, #loc54])
#loc131 = loc(fused[#loc55, #loc56])
#loc132 = loc(fused[#loc57, #loc54])
#loc133 = loc(fused[#loc62, #loc61])
#loc134 = loc(fused[#loc64, #loc63])
#loc135 = loc(fused[#loc72, #loc73])
#loc136 = loc(fused[#loc74, #loc75])
#loc137 = loc(fused[#loc76, #loc77])
#loc138 = loc(fused[#loc79, #loc77])
#loc139 = loc(fused[#loc81, #loc82])
#loc140 = loc(fused[#loc80, #loc83])
#loc141 = loc(fused[#loc84, #loc83])
#loc142 = loc(fused[#loc85, #loc86])
#loc143 = loc(fused[#loc87, #loc88])
#loc144 = loc(fused[#loc89, #loc86])
#loc145 = loc(fused[#loc94, #loc93])
#loc146 = loc(fused[#loc96, #loc95])
#loc147 = loc(fused[#loc98, #loc99])
#loc148 = loc(fused[#loc101, #loc99])
