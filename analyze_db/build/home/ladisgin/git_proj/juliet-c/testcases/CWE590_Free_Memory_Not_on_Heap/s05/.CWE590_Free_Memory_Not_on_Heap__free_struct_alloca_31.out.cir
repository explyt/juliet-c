!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":99:10)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":99:14)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":99:20)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":99:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc176 = loc(fused[#loc69, #loc70])
#loc177 = loc(fused[#loc71, #loc72])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc150)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc151)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc153)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc9)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc154)
    cir.scope {
      %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc156)
      %3 = cir.const #cir.int<100> : !s32i loc(#loc14)
      %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc14)
      %5 = cir.const #cir.int<8> : !u64i loc(#loc14)
      %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc14)
      %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc14)
      cir.store %9, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc156)
      cir.scope {
        %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc158)
        cir.scope {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc21)
          %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc21)
          cir.store %13, %11 : !u64i, !cir.ptr<!u64i> loc(#loc160)
          cir.for : cond {
            %14 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc23)
            %15 = cir.const #cir.int<100> : !s32i loc(#loc24)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc24)
            %17 = cir.cmp(lt, %14, %16) : !u64i, !cir.bool loc(#loc161)
            cir.condition(%17) loc(#loc25)
          } body {
            cir.scope {
              %14 = cir.const #cir.int<1> : !s32i loc(#loc27)
              %15 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc28)
              %16 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc29)
              %17 = cir.ptr_stride(%15 : !cir.ptr<!ty__twoIntsStruct>, %16 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
              %18 = cir.get_member %17[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
              cir.store %14, %18 : !s32i, !cir.ptr<!s32i> loc(#loc163)
              %19 = cir.const #cir.int<1> : !s32i loc(#loc32)
              %20 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc33)
              %21 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc34)
              %22 = cir.ptr_stride(%20 : !cir.ptr<!ty__twoIntsStruct>, %21 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc35)
              %23 = cir.get_member %22[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
              cir.store %19, %23 : !s32i, !cir.ptr<!s32i> loc(#loc164)
            } loc(#loc162)
            cir.yield loc(#loc20)
          } step {
            %14 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc37)
            %15 = cir.unary(inc, %14) : !u64i, !u64i loc(#loc38)
            cir.store %15, %11 : !u64i, !cir.ptr<!u64i> loc(#loc165)
            cir.yield loc(#loc159)
          } loc(#loc159)
        } loc(#loc159)
      } loc(#loc157)
      %10 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
      cir.store %10, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc166)
    } loc(#loc155)
    cir.scope {
      %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc168)
      %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc169)
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc44)
      cir.store %4, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc168)
      %5 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc46)
      cir.store %5, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc169)
      %6 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc47)
      %7 = cir.const #cir.int<0> : !s32i loc(#loc48)
      %8 = cir.ptr_stride(%6 : !cir.ptr<!ty__twoIntsStruct>, %7 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc49)
      cir.call @printStructLine(%8) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc50)
      %9 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc51)
      %10 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc52)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc52)
      cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc51)
    } loc(#loc167)
    cir.return loc(#loc6)
  } loc(#loc152)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc171)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc55)
    cir.return loc(#loc54)
  } loc(#loc170)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc172)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc173)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc174)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc63)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc66)
  cir.func @main(%arg0: !s32i loc(fused[#loc69, #loc70]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc71, #loc72])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc176)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc177)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc68)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc73)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc73)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc74)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc75)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc75)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc76)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc63)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    %8 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31_good : !cir.ptr<!cir.func<!void ()>> loc(#loc178)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31_good() : () -> () loc(#loc78)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc64)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc65)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %13 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc179)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31_bad() : () -> () loc(#loc82)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc66)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc85)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc180)
    cir.return %17 : !s32i loc(#loc180)
  } loc(#loc175)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc181)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc89)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc182)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc184)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc96)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc185)
    cir.scope {
      %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc187)
      %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc102)
      %4 = cir.const #cir.int<100> : !s32i loc(#loc103)
      %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc103)
      %6 = cir.const #cir.int<8> : !u64i loc(#loc188)
      %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc189)
      %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc102)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc190)
      cir.store %9, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc187)
      cir.scope {
        %11 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc108)
        %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc109)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc109)
        %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc192)
        cir.if %14 {
          %15 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc89)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc89)
          cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc111)
          %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc112)
          %18 = cir.const #cir.int<1> : !s32i loc(#loc113)
          cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc112)
        } loc(#loc193)
      } loc(#loc191)
      cir.scope {
        %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc195)
        cir.scope {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc120)
          %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc120)
          cir.store %13, %11 : !u64i, !cir.ptr<!u64i> loc(#loc197)
          cir.for : cond {
            %14 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc122)
            %15 = cir.const #cir.int<100> : !s32i loc(#loc123)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc123)
            %17 = cir.cmp(lt, %14, %16) : !u64i, !cir.bool loc(#loc198)
            cir.condition(%17) loc(#loc124)
          } body {
            cir.scope {
              %14 = cir.const #cir.int<1> : !s32i loc(#loc126)
              %15 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc127)
              %16 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc128)
              %17 = cir.ptr_stride(%15 : !cir.ptr<!ty__twoIntsStruct>, %16 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc129)
              %18 = cir.get_member %17[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
              cir.store %14, %18 : !s32i, !cir.ptr<!s32i> loc(#loc200)
              %19 = cir.const #cir.int<1> : !s32i loc(#loc130)
              %20 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc131)
              %21 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc132)
              %22 = cir.ptr_stride(%20 : !cir.ptr<!ty__twoIntsStruct>, %21 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc133)
              %23 = cir.get_member %22[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
              cir.store %19, %23 : !s32i, !cir.ptr<!s32i> loc(#loc201)
            } loc(#loc199)
            cir.yield loc(#loc119)
          } step {
            %14 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc134)
            %15 = cir.unary(inc, %14) : !u64i, !u64i loc(#loc135)
            cir.store %15, %11 : !u64i, !cir.ptr<!u64i> loc(#loc202)
            cir.yield loc(#loc196)
          } loc(#loc196)
        } loc(#loc196)
      } loc(#loc194)
      %10 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc136)
      cir.store %10, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc203)
    } loc(#loc186)
    cir.scope {
      %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc205)
      %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc206)
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc141)
      cir.store %4, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc205)
      %5 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc143)
      cir.store %5, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc206)
      %6 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc144)
      %7 = cir.const #cir.int<0> : !s32i loc(#loc145)
      %8 = cir.ptr_stride(%6 : !cir.ptr<!ty__twoIntsStruct>, %7 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc146)
      cir.call @printStructLine(%8) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc147)
      %9 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc148)
      %10 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc149)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc149)
      cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc148)
    } loc(#loc204)
    cir.return loc(#loc93)
  } loc(#loc183)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":23:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":47:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":25:5)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":25:21)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":26:12)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":26:5)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":27:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":39:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":29:9)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":29:55)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":30:9)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":37:9)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":31:13)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":31:20)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":32:13)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":36:13)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":32:22)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":32:18)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":32:25)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":32:29)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":32:27)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":33:13)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":34:40)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":34:17)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":34:28)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":34:29)
#loc31 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":35:40)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":35:17)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":35:28)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":35:29)
#loc36 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":32:35)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":32:34)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":38:16)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":38:9)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":40:5)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":46:5)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":41:9)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":41:36)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":42:9)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":42:32)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":43:26)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":43:31)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":43:32)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":43:9)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":45:9)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":45:14)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":85:1)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":88:1)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":87:5)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":87:13)
#loc57 = loc("/usr/include/stdlib.h":575:1)
#loc58 = loc("/usr/include/stdlib.h":575:41)
#loc59 = loc("/usr/include/time.h":76:1)
#loc60 = loc("/usr/include/time.h":76:38)
#loc61 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc62 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":104:15)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":106:15)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":109:15)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":111:15)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":99:1)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":114:1)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":100:1)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":102:27)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":102:22)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":102:5)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":104:5)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":105:5)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":105:64)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":106:5)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":109:5)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":110:5)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":110:63)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":111:5)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":113:12)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":113:5)
#loc87 = loc("/usr/include/stdlib.h":672:1)
#loc88 = loc("/usr/include/stdlib.h":672:45)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":63:23)
#loc90 = loc("/usr/include/stdlib.h":756:1)
#loc91 = loc("/usr/include/stdlib.h":756:70)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":54:1)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":83:1)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":56:5)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":56:21)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":57:12)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":57:5)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":58:5)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":75:5)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":60:9)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":60:87)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":60:55)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":60:62)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":60:66)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":60:86)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":61:9)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":65:9)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":61:13)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":61:27)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":62:9)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":63:13)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":64:13)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":64:18)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":66:9)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":73:9)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":67:13)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":67:20)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":68:13)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":72:13)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":68:22)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":68:18)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":68:25)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":68:29)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":68:27)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":69:13)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":70:40)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":70:17)
#loc128 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":70:28)
#loc129 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":70:29)
#loc130 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":71:40)
#loc131 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":71:17)
#loc132 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":71:28)
#loc133 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":71:29)
#loc134 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":68:35)
#loc135 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":68:34)
#loc136 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":74:16)
#loc137 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":74:9)
#loc138 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":76:5)
#loc139 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":82:5)
#loc140 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":77:9)
#loc141 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":77:36)
#loc142 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":78:9)
#loc143 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":78:32)
#loc144 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":79:26)
#loc145 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":79:31)
#loc146 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":79:32)
#loc147 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":79:9)
#loc148 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":81:9)
#loc149 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_31.c":81:14)
#loc150 = loc(fused[#loc1, #loc2])
#loc151 = loc(fused[#loc3, #loc4])
#loc152 = loc(fused[#loc5, #loc6])
#loc153 = loc(fused[#loc7, #loc8])
#loc154 = loc(fused[#loc10, #loc9])
#loc155 = loc(fused[#loc11, #loc12])
#loc156 = loc(fused[#loc13, #loc14])
#loc157 = loc(fused[#loc15, #loc16])
#loc158 = loc(fused[#loc17, #loc18])
#loc159 = loc(fused[#loc19, #loc20])
#loc160 = loc(fused[#loc22, #loc21])
#loc161 = loc(fused[#loc23, #loc24])
#loc162 = loc(fused[#loc26, #loc20])
#loc163 = loc(fused[#loc28, #loc27])
#loc164 = loc(fused[#loc33, #loc32])
#loc165 = loc(fused[#loc38, #loc37])
#loc166 = loc(fused[#loc40, #loc39])
#loc167 = loc(fused[#loc41, #loc42])
#loc168 = loc(fused[#loc43, #loc44])
#loc169 = loc(fused[#loc45, #loc46])
#loc170 = loc(fused[#loc53, #loc54])
#loc171 = loc(fused[#loc55, #loc56])
#loc172 = loc(fused[#loc57, #loc58])
#loc173 = loc(fused[#loc59, #loc60])
#loc174 = loc(fused[#loc61, #loc62])
#loc175 = loc(fused[#loc67, #loc68])
#loc178 = loc(fused[#loc78, #loc79])
#loc179 = loc(fused[#loc82, #loc83])
#loc180 = loc(fused[#loc86, #loc85])
#loc181 = loc(fused[#loc87, #loc88])
#loc182 = loc(fused[#loc90, #loc91])
#loc183 = loc(fused[#loc92, #loc93])
#loc184 = loc(fused[#loc94, #loc95])
#loc185 = loc(fused[#loc97, #loc96])
#loc186 = loc(fused[#loc98, #loc99])
#loc187 = loc(fused[#loc100, #loc101])
#loc188 = loc(fused[#loc104, #loc105])
#loc189 = loc(fused[#loc103, #loc105])
#loc190 = loc(fused[#loc102, #loc101])
#loc191 = loc(fused[#loc106, #loc107])
#loc192 = loc(fused[#loc108, #loc109])
#loc193 = loc(fused[#loc110, #loc107])
#loc194 = loc(fused[#loc114, #loc115])
#loc195 = loc(fused[#loc116, #loc117])
#loc196 = loc(fused[#loc118, #loc119])
#loc197 = loc(fused[#loc121, #loc120])
#loc198 = loc(fused[#loc122, #loc123])
#loc199 = loc(fused[#loc125, #loc119])
#loc200 = loc(fused[#loc127, #loc126])
#loc201 = loc(fused[#loc131, #loc130])
#loc202 = loc(fused[#loc135, #loc134])
#loc203 = loc(fused[#loc137, #loc136])
#loc204 = loc(fused[#loc138, #loc139])
#loc205 = loc(fused[#loc140, #loc141])
#loc206 = loc(fused[#loc142, #loc143])
