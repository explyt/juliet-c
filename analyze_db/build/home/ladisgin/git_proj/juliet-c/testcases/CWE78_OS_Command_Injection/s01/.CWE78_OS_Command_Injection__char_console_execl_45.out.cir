!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc55 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":73:33)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":128:10)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":128:14)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":128:20)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":128:32)
#true = #cir.bool<true> : !cir.bool
#loc183 = loc(fused[#loc90, #loc91])
#loc184 = loc(fused[#loc92, #loc93])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_console_execl_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc147)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_console_execl_45_bad.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc148)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc149)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc150)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc151)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc152)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc13)
  cir.global "private" internal dsolocal @CWE78_OS_Command_Injection__char_console_execl_45_badData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc153)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_execl_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc155)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc156)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc148)
    %3 = cir.get_global @__const.CWE78_OS_Command_Injection__char_console_execl_45_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc148)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc148)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc22)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc157)
    cir.br ^bb1 loc(#loc158)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc26)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
    %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc26)
    cir.store %7, %0 : !u64i, !cir.ptr<!u64i> loc(#loc155)
    cir.br ^bb2 loc(#loc159)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<100> : !s32i loc(#loc30)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc30)
    %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc31)
    %11 = cir.binop(sub, %9, %10) : !u64i loc(#loc160)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc32)
    %14 = cir.cmp(gt, %11, %13) : !u64i, !cir.bool loc(#loc161)
    cir.brcond %14 ^bb3, ^bb21 loc(#loc162)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc163)
  ^bb4:  // pred: ^bb3
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %16 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc37)
    %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc38)
    %18 = cir.const #cir.int<100> : !s32i loc(#loc39)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc39)
    %20 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc40)
    %21 = cir.binop(sub, %19, %20) : !u64i loc(#loc164)
    %22 = cir.cast(integral, %21 : !u64i), !s32i loc(#loc164)
    %23 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc151)
    %24 = cir.load %23 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc41)
    %25 = cir.call @fgets(%17, %22, %24) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc42)
    %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc43)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc43)
    %28 = cir.cmp(ne, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc165)
    cir.brcond %28 ^bb5, ^bb18 loc(#loc166)
  ^bb5:  // pred: ^bb4
    %29 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc47)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    %31 = cir.call @strlen(%30) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc47)
    cir.store %31, %0 : !u64i, !cir.ptr<!u64i> loc(#loc167)
    cir.br ^bb6 loc(#loc168)
  ^bb6:  // pred: ^bb5
    %32 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc53)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc54)
    %35 = cir.cmp(gt, %32, %34) : !u64i, !cir.bool loc(#loc169)
    cir.brcond %35 ^bb7, ^bb12 loc(#loc55)
  ^bb7:  // pred: ^bb6
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    %37 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc57)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc58)
    %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc58)
    %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc170)
    %41 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %40 : !u64i), !cir.ptr<!s8i> loc(#loc59)
    %42 = cir.load %41 : !cir.ptr<!s8i>, !s8i loc(#loc56)
    %43 = cir.cast(integral, %42 : !s8i), !s32i loc(#loc56)
    %44 = cir.const #cir.int<10> : !s32i loc(#loc60)
    %45 = cir.cmp(eq, %43, %44) : !s32i, !cir.bool loc(#loc171)
    cir.brcond %45 ^bb8, ^bb9 loc(#loc55)
  ^bb8:  // pred: ^bb7
    %46 = cir.const #true loc(#loc55)
    cir.br ^bb10(%46 : !cir.bool) loc(#loc55)
  ^bb9:  // pred: ^bb7
    %47 = cir.const #false loc(#loc55)
    cir.br ^bb10(%47 : !cir.bool) loc(#loc55)
  ^bb10(%48: !cir.bool loc("CWE78_OS_Command_Injection__char_console_execl_45.c":73:33)):  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc55)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13(%48 : !cir.bool) loc(#loc55)
  ^bb12:  // pred: ^bb6
    %49 = cir.const #false loc(#loc55)
    cir.br ^bb13(%49 : !cir.bool) loc(#loc55)
  ^bb13(%50: !cir.bool loc("CWE78_OS_Command_Injection__char_console_execl_45.c":73:33)):  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc55)
  ^bb14:  // pred: ^bb13
    cir.brcond %50 ^bb15, ^bb16 loc(#loc172)
  ^bb15:  // pred: ^bb14
    %51 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc62)
    %53 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
    %54 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc64)
    %55 = cir.const #cir.int<1> : !s32i loc(#loc65)
    %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc65)
    %57 = cir.binop(sub, %54, %56) : !u64i loc(#loc173)
    %58 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %57 : !u64i), !cir.ptr<!s8i> loc(#loc66)
    cir.store %52, %58 : !s8i, !cir.ptr<!s8i> loc(#loc174)
    cir.br ^bb16 loc(#loc52)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc52)
  ^bb17:  // pred: ^bb16
    cir.br ^bb19 loc(#loc45)
  ^bb18:  // pred: ^bb4
    %59 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc13)
    %60 = cir.cast(array_to_ptrdecay, %59 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc13)
    cir.call @printLine(%60) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %61 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %62 = cir.cast(integral, %61 : !s32i), !s8i loc(#loc68)
    %63 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
    %64 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc70)
    %65 = cir.ptr_stride(%63 : !cir.ptr<!s8i>, %64 : !u64i), !cir.ptr<!s8i> loc(#loc71)
    cir.store %62, %65 : !s8i, !cir.ptr<!s8i> loc(#loc175)
    cir.br ^bb19 loc(#loc35)
  ^bb19:  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc35)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc29)
  ^bb21:  // 2 preds: ^bb2, ^bb20
    cir.br ^bb22 loc(#loc29)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc25)
  ^bb23:  // pred: ^bb22
    %66 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
    %67 = cir.get_global @CWE78_OS_Command_Injection__char_console_execl_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc153)
    cir.store %66, %67 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc176)
    %68 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc177)
    cir.call %68() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc74)
    cir.return loc(#loc17)
  } loc(#loc154)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_execl_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc179)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc78)
    cir.return loc(#loc77)
  } loc(#loc178)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc180)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc181)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc84)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc85)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc86)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc87)
  cir.func @main(%arg0: !s32i loc(fused[#loc90, #loc91]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc92, #loc93])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc183)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc184)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc89)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc94)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc94)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc95)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc96)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc96)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc97)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc84)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_console_execl_45_good : !cir.ptr<!cir.func<!void ()>> loc(#loc185)
    cir.call @CWE78_OS_Command_Injection__char_console_execl_45_good() : () -> () loc(#loc99)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc85)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc86)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc86)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_console_execl_45_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc186)
    cir.call @CWE78_OS_Command_Injection__char_console_execl_45_bad() : () -> () loc(#loc103)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc87)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc105)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc106)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc187)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc187)
    cir.return %17 : !s32i loc(#loc187)
  } loc(#loc182)
  cir.func private @execl(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc188)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"/bin/sh\00" : !cir.array<!s8i x 8>> : !cir.array<!s8i x 8> {alignment = 1 : i64} loc(#loc110)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc111)
  cir.func no_proto internal private @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc190)
    %1 = cir.get_global @CWE78_OS_Command_Injection__char_console_execl_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc153)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc190)
    %3 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc110)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc110)
    %5 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc116)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc116)
    %7 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc111)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc111)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc118)
    %11 = cir.call @execl(%4, %6, %8, %9, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc119)
    cir.return loc(#loc113)
  } loc(#loc189)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc191)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc122)
  cir.global "private" internal dsolocal @CWE78_OS_Command_Injection__char_console_execl_45_goodG2BData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc192)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc194)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc147)
    %2 = cir.get_global @__const.goodG2B.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc147)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc147)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc129)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc195)
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc131)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
    %6 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc122)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc122)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc131)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
    %10 = cir.get_global @CWE78_OS_Command_Injection__char_console_execl_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc192)
    cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc196)
    %11 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc197)
    cir.call %11() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc135)
    cir.return loc(#loc126)
  } loc(#loc193)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc199)
    %1 = cir.get_global @CWE78_OS_Command_Injection__char_console_execl_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc192)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc199)
    %3 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc141)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc141)
    %5 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc142)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc142)
    %7 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc143)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc143)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc145)
    %11 = cir.call @execl(%4, %6, %8, %9, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc146)
    cir.return loc(#loc138)
  } loc(#loc198)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_console_execl_45.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":106:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":106:28)
#loc3 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":59:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":59:28)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("/usr/include/stdio.h":149:1)
#loc10 = loc("/usr/include/stdio.h":149:14)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":80:27)
#loc14 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":43:1)
#loc15 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":43:15)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":56:1)
#loc17 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":88:1)
#loc18 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":63:9)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":63:37)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":58:5)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":58:12)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":60:12)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":60:5)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":61:5)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":85:5)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":63:26)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":63:33)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":65:9)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":84:9)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":65:13)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":65:17)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":65:27)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":66:9)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":68:13)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":83:13)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":68:23)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":68:28)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":68:27)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":68:43)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":68:47)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":68:57)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":68:17)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":68:67)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":69:13)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":77:13)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":79:13)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":72:27)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":72:34)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":72:17)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":72:38)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":73:17)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":76:17)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":73:21)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":73:31)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":73:36)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":73:41)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":73:49)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":73:50)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":73:55)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":74:17)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":75:39)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":75:21)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":75:26)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":75:34)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":75:35)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":80:17)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":82:33)
#loc69 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":82:17)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":82:22)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":82:29)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":86:65)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":86:5)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":87:5)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":87:13)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":114:1)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":117:1)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":116:5)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":116:13)
#loc80 = loc("/usr/include/stdlib.h":575:1)
#loc81 = loc("/usr/include/stdlib.h":575:41)
#loc82 = loc("/usr/include/time.h":76:1)
#loc83 = loc("/usr/include/time.h":76:38)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":133:15)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":135:15)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":138:15)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":140:15)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":128:1)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":143:1)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":129:1)
#loc95 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":131:27)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":131:22)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":131:5)
#loc98 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":133:5)
#loc99 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":134:5)
#loc100 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":134:60)
#loc101 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":135:5)
#loc102 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":138:5)
#loc103 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":139:5)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":139:59)
#loc105 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":140:5)
#loc106 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":142:12)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":142:5)
#loc108 = loc("/usr/include/unistd.h":594:1)
#loc109 = loc("/usr/include/unistd.h":595:14)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":53:11)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":53:47)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":48:1)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":54:1)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":50:5)
#loc115 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":50:19)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":53:29)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":53:61)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":53:75)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":53:5)
#loc120 = loc("/usr/include/string.h":149:1)
#loc121 = loc("/usr/include/string.h":150:14)
#loc122 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":109:18)
#loc123 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":44:1)
#loc124 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":44:15)
#loc125 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":103:1)
#loc126 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":112:1)
#loc127 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":105:5)
#loc128 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":105:12)
#loc129 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":107:12)
#loc130 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":107:5)
#loc131 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":109:5)
#loc132 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":109:12)
#loc133 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":110:69)
#loc134 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":110:5)
#loc135 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":111:5)
#loc136 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":111:17)
#loc137 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":95:1)
#loc138 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":101:1)
#loc139 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":97:5)
#loc140 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":97:19)
#loc141 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":100:11)
#loc142 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":100:29)
#loc143 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":100:47)
#loc144 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":100:61)
#loc145 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":100:75)
#loc146 = loc("CWE78_OS_Command_Injection__char_console_execl_45.c":100:5)
#loc147 = loc(fused[#loc1, #loc2])
#loc148 = loc(fused[#loc3, #loc4])
#loc149 = loc(fused[#loc5, #loc6])
#loc150 = loc(fused[#loc7, #loc8])
#loc151 = loc(fused[#loc9, #loc10])
#loc152 = loc(fused[#loc11, #loc12])
#loc153 = loc(fused[#loc14, #loc15])
#loc154 = loc(fused[#loc16, #loc17])
#loc155 = loc(fused[#loc18, #loc19])
#loc156 = loc(fused[#loc20, #loc21])
#loc157 = loc(fused[#loc23, #loc22])
#loc158 = loc(fused[#loc24, #loc25])
#loc159 = loc(fused[#loc28, #loc29])
#loc160 = loc(fused[#loc30, #loc31])
#loc161 = loc(fused[#loc30, #loc32])
#loc162 = loc(fused[#loc33, #loc29])
#loc163 = loc(fused[#loc34, #loc35])
#loc164 = loc(fused[#loc39, #loc40])
#loc165 = loc(fused[#loc42, #loc43])
#loc166 = loc(fused[#loc44, #loc45, #loc46, #loc35])
#loc167 = loc(fused[#loc49, #loc50])
#loc168 = loc(fused[#loc51, #loc52])
#loc169 = loc(fused[#loc53, #loc54])
#loc170 = loc(fused[#loc57, #loc58])
#loc171 = loc(fused[#loc56, #loc60])
#loc172 = loc(fused[#loc61, #loc52])
#loc173 = loc(fused[#loc64, #loc65])
#loc174 = loc(fused[#loc63, #loc62])
#loc175 = loc(fused[#loc69, #loc68])
#loc176 = loc(fused[#loc73, #loc72])
#loc177 = loc(fused[#loc74, #loc75])
#loc178 = loc(fused[#loc76, #loc77])
#loc179 = loc(fused[#loc78, #loc79])
#loc180 = loc(fused[#loc80, #loc81])
#loc181 = loc(fused[#loc82, #loc83])
#loc182 = loc(fused[#loc88, #loc89])
#loc185 = loc(fused[#loc99, #loc100])
#loc186 = loc(fused[#loc103, #loc104])
#loc187 = loc(fused[#loc107, #loc106])
#loc188 = loc(fused[#loc108, #loc109])
#loc189 = loc(fused[#loc112, #loc113])
#loc190 = loc(fused[#loc114, #loc115])
#loc191 = loc(fused[#loc120, #loc121])
#loc192 = loc(fused[#loc123, #loc124])
#loc193 = loc(fused[#loc125, #loc126])
#loc194 = loc(fused[#loc127, #loc128])
#loc195 = loc(fused[#loc130, #loc129])
#loc196 = loc(fused[#loc134, #loc133])
#loc197 = loc(fused[#loc135, #loc136])
#loc198 = loc(fused[#loc137, #loc138])
#loc199 = loc(fused[#loc139, #loc140])
