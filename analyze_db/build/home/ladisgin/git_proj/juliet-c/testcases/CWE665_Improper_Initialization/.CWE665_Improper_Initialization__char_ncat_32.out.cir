!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc72 = loc("CWE665_Improper_Initialization__char_ncat_32.c":98:10)
#loc73 = loc("CWE665_Improper_Initialization__char_ncat_32.c":98:14)
#loc74 = loc("CWE665_Improper_Initialization__char_ncat_32.c":98:20)
#loc75 = loc("CWE665_Improper_Initialization__char_ncat_32.c":98:32)
#loc170 = loc(fused[#loc72, #loc73])
#loc171 = loc(fused[#loc74, #loc75])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_ncat_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc145)
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc146)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc147)
  cir.func no_proto @CWE665_Improper_Initialization__char_ncat_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc149)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc150)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc151)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc152)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc150)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc151)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc17)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc153)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc155)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc22)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc155)
      %8 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
      %9 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc25)
      cir.store %8, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc156)
    } loc(#loc154)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc158)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc30)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc158)
      cir.scope {
        %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc160)
        %9 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc161)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc38)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc38)
        %12 = cir.const #cir.int<67> : !s32i loc(#loc39)
        %13 = cir.const #cir.int<100> : !s32i loc(#loc40)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc41)
        %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc40)
        %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc40)
        cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc162)
        %17 = cir.const #cir.int<0> : !s32i loc(#loc44)
        %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc44)
        %19 = cir.const #cir.int<100> : !s32i loc(#loc45)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc46)
        %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc45)
        %22 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
        %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc47)
        cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc163)
        %24 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc48)
        %25 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc49)
        %26 = cir.call @strlen(%25) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc48)
        cir.store %26, %8 : !u64i, !cir.ptr<!u64i> loc(#loc164)
        %27 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc52)
        %28 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
        %29 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc54)
        %30 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc55)
        %31 = cir.call @strncat(%28, %29, %30) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc52)
        %32 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
        cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc57)
      } loc(#loc159)
    } loc(#loc157)
    cir.return loc(#loc8)
  } loc(#loc148)
  cir.func no_proto @CWE665_Improper_Initialization__char_ncat_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc166)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    cir.return loc(#loc59)
  } loc(#loc165)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc167)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc168)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc69)
  cir.func @main(%arg0: !s32i loc(fused[#loc72, #loc73]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc74, #loc75])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc170)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc171)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc71)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc76)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc76)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc77)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc78)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc78)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc79)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc66)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %8 = cir.get_global @CWE665_Improper_Initialization__char_ncat_32_good : !cir.ptr<!cir.func<!void ()>> loc(#loc172)
    cir.call @CWE665_Improper_Initialization__char_ncat_32_good() : () -> () loc(#loc81)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc67)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc68)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %13 = cir.get_global @CWE665_Improper_Initialization__char_ncat_32_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc173)
    cir.call @CWE665_Improper_Initialization__char_ncat_32_bad() : () -> () loc(#loc85)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc69)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc88)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc174)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc174)
    cir.return %17 : !s32i loc(#loc174)
  } loc(#loc169)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc176)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc177)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc178)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc179)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc177)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc178)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc100)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc180)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc182)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc105)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc182)
      %8 = cir.const #cir.int<0> : !s32i loc(#loc107)
      %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc107)
      %10 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc109)
      %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc110)
      cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc183)
      %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
      %14 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc112)
      cir.store %13, %14 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc184)
    } loc(#loc181)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc186)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc186)
      cir.scope {
        %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc188)
        %9 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc189)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc125)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc125)
        %12 = cir.const #cir.int<67> : !s32i loc(#loc126)
        %13 = cir.const #cir.int<100> : !s32i loc(#loc127)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc128)
        %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc127)
        %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc127)
        cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc190)
        %17 = cir.const #cir.int<0> : !s32i loc(#loc131)
        %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc131)
        %19 = cir.const #cir.int<100> : !s32i loc(#loc132)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc133)
        %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc132)
        %22 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc134)
        %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc134)
        cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc191)
        %24 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc135)
        %25 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc136)
        %26 = cir.call @strlen(%25) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc135)
        cir.store %26, %8 : !u64i, !cir.ptr<!u64i> loc(#loc192)
        %27 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc139)
        %28 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
        %29 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc141)
        %30 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc142)
        %31 = cir.call @strncat(%28, %29, %30) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc139)
        %32 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
        cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc144)
      } loc(#loc187)
    } loc(#loc185)
    cir.return loc(#loc91)
  } loc(#loc175)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_ncat_32.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/string.h":152:1)
#loc4 = loc("/usr/include/string.h":153:29)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE665_Improper_Initialization__char_ncat_32.c":23:1)
#loc8 = loc("CWE665_Improper_Initialization__char_ncat_32.c":49:1)
#loc9 = loc("CWE665_Improper_Initialization__char_ncat_32.c":25:5)
#loc10 = loc("CWE665_Improper_Initialization__char_ncat_32.c":25:12)
#loc11 = loc("CWE665_Improper_Initialization__char_ncat_32.c":26:5)
#loc12 = loc("CWE665_Improper_Initialization__char_ncat_32.c":26:25)
#loc13 = loc("CWE665_Improper_Initialization__char_ncat_32.c":27:5)
#loc14 = loc("CWE665_Improper_Initialization__char_ncat_32.c":27:25)
#loc15 = loc("CWE665_Improper_Initialization__char_ncat_32.c":28:5)
#loc16 = loc("CWE665_Improper_Initialization__char_ncat_32.c":28:24)
#loc17 = loc("CWE665_Improper_Initialization__char_ncat_32.c":29:12)
#loc18 = loc("CWE665_Improper_Initialization__char_ncat_32.c":29:5)
#loc19 = loc("CWE665_Improper_Initialization__char_ncat_32.c":30:5)
#loc20 = loc("CWE665_Improper_Initialization__char_ncat_32.c":35:5)
#loc21 = loc("CWE665_Improper_Initialization__char_ncat_32.c":31:9)
#loc22 = loc("CWE665_Improper_Initialization__char_ncat_32.c":31:24)
#loc23 = loc("CWE665_Improper_Initialization__char_ncat_32.c":31:23)
#loc24 = loc("CWE665_Improper_Initialization__char_ncat_32.c":34:21)
#loc25 = loc("CWE665_Improper_Initialization__char_ncat_32.c":34:10)
#loc26 = loc("CWE665_Improper_Initialization__char_ncat_32.c":34:9)
#loc27 = loc("CWE665_Improper_Initialization__char_ncat_32.c":36:5)
#loc28 = loc("CWE665_Improper_Initialization__char_ncat_32.c":48:5)
#loc29 = loc("CWE665_Improper_Initialization__char_ncat_32.c":37:9)
#loc30 = loc("CWE665_Improper_Initialization__char_ncat_32.c":37:24)
#loc31 = loc("CWE665_Improper_Initialization__char_ncat_32.c":37:23)
#loc32 = loc("CWE665_Improper_Initialization__char_ncat_32.c":38:9)
#loc33 = loc("CWE665_Improper_Initialization__char_ncat_32.c":47:9)
#loc34 = loc("CWE665_Improper_Initialization__char_ncat_32.c":39:13)
#loc35 = loc("CWE665_Improper_Initialization__char_ncat_32.c":39:20)
#loc36 = loc("CWE665_Improper_Initialization__char_ncat_32.c":40:13)
#loc37 = loc("CWE665_Improper_Initialization__char_ncat_32.c":40:28)
#loc38 = loc("CWE665_Improper_Initialization__char_ncat_32.c":41:20)
#loc39 = loc("CWE665_Improper_Initialization__char_ncat_32.c":41:28)
#loc40 = loc("CWE665_Improper_Initialization__char_ncat_32.c":41:33)
#loc41 = loc("CWE665_Improper_Initialization__char_ncat_32.c":41:37)
#loc42 = loc("CWE665_Improper_Initialization__char_ncat_32.c":41:13)
#loc43 = loc("CWE665_Improper_Initialization__char_ncat_32.c":41:38)
#loc44 = loc("CWE665_Improper_Initialization__char_ncat_32.c":42:29)
#loc45 = loc("CWE665_Improper_Initialization__char_ncat_32.c":42:20)
#loc46 = loc("CWE665_Improper_Initialization__char_ncat_32.c":42:24)
#loc47 = loc("CWE665_Improper_Initialization__char_ncat_32.c":42:13)
#loc48 = loc("CWE665_Improper_Initialization__char_ncat_32.c":43:25)
#loc49 = loc("CWE665_Improper_Initialization__char_ncat_32.c":43:32)
#loc50 = loc("CWE665_Improper_Initialization__char_ncat_32.c":43:13)
#loc51 = loc("CWE665_Improper_Initialization__char_ncat_32.c":43:38)
#loc52 = loc("CWE665_Improper_Initialization__char_ncat_32.c":45:13)
#loc53 = loc("CWE665_Improper_Initialization__char_ncat_32.c":45:21)
#loc54 = loc("CWE665_Improper_Initialization__char_ncat_32.c":45:27)
#loc55 = loc("CWE665_Improper_Initialization__char_ncat_32.c":45:35)
#loc56 = loc("CWE665_Improper_Initialization__char_ncat_32.c":46:23)
#loc57 = loc("CWE665_Improper_Initialization__char_ncat_32.c":46:13)
#loc58 = loc("CWE665_Improper_Initialization__char_ncat_32.c":84:1)
#loc59 = loc("CWE665_Improper_Initialization__char_ncat_32.c":87:1)
#loc60 = loc("CWE665_Improper_Initialization__char_ncat_32.c":86:5)
#loc61 = loc("CWE665_Improper_Initialization__char_ncat_32.c":86:13)
#loc62 = loc("/usr/include/stdlib.h":575:1)
#loc63 = loc("/usr/include/stdlib.h":575:41)
#loc64 = loc("/usr/include/time.h":76:1)
#loc65 = loc("/usr/include/time.h":76:38)
#loc66 = loc("CWE665_Improper_Initialization__char_ncat_32.c":103:15)
#loc67 = loc("CWE665_Improper_Initialization__char_ncat_32.c":105:15)
#loc68 = loc("CWE665_Improper_Initialization__char_ncat_32.c":108:15)
#loc69 = loc("CWE665_Improper_Initialization__char_ncat_32.c":110:15)
#loc70 = loc("CWE665_Improper_Initialization__char_ncat_32.c":98:1)
#loc71 = loc("CWE665_Improper_Initialization__char_ncat_32.c":113:1)
#loc76 = loc("CWE665_Improper_Initialization__char_ncat_32.c":99:1)
#loc77 = loc("CWE665_Improper_Initialization__char_ncat_32.c":101:27)
#loc78 = loc("CWE665_Improper_Initialization__char_ncat_32.c":101:22)
#loc79 = loc("CWE665_Improper_Initialization__char_ncat_32.c":101:5)
#loc80 = loc("CWE665_Improper_Initialization__char_ncat_32.c":103:5)
#loc81 = loc("CWE665_Improper_Initialization__char_ncat_32.c":104:5)
#loc82 = loc("CWE665_Improper_Initialization__char_ncat_32.c":104:55)
#loc83 = loc("CWE665_Improper_Initialization__char_ncat_32.c":105:5)
#loc84 = loc("CWE665_Improper_Initialization__char_ncat_32.c":108:5)
#loc85 = loc("CWE665_Improper_Initialization__char_ncat_32.c":109:5)
#loc86 = loc("CWE665_Improper_Initialization__char_ncat_32.c":109:54)
#loc87 = loc("CWE665_Improper_Initialization__char_ncat_32.c":110:5)
#loc88 = loc("CWE665_Improper_Initialization__char_ncat_32.c":112:12)
#loc89 = loc("CWE665_Improper_Initialization__char_ncat_32.c":112:5)
#loc90 = loc("CWE665_Improper_Initialization__char_ncat_32.c":56:1)
#loc91 = loc("CWE665_Improper_Initialization__char_ncat_32.c":82:1)
#loc92 = loc("CWE665_Improper_Initialization__char_ncat_32.c":58:5)
#loc93 = loc("CWE665_Improper_Initialization__char_ncat_32.c":58:12)
#loc94 = loc("CWE665_Improper_Initialization__char_ncat_32.c":59:5)
#loc95 = loc("CWE665_Improper_Initialization__char_ncat_32.c":59:25)
#loc96 = loc("CWE665_Improper_Initialization__char_ncat_32.c":60:5)
#loc97 = loc("CWE665_Improper_Initialization__char_ncat_32.c":60:25)
#loc98 = loc("CWE665_Improper_Initialization__char_ncat_32.c":61:5)
#loc99 = loc("CWE665_Improper_Initialization__char_ncat_32.c":61:24)
#loc100 = loc("CWE665_Improper_Initialization__char_ncat_32.c":62:12)
#loc101 = loc("CWE665_Improper_Initialization__char_ncat_32.c":62:5)
#loc102 = loc("CWE665_Improper_Initialization__char_ncat_32.c":63:5)
#loc103 = loc("CWE665_Improper_Initialization__char_ncat_32.c":68:5)
#loc104 = loc("CWE665_Improper_Initialization__char_ncat_32.c":64:9)
#loc105 = loc("CWE665_Improper_Initialization__char_ncat_32.c":64:24)
#loc106 = loc("CWE665_Improper_Initialization__char_ncat_32.c":64:23)
#loc107 = loc("CWE665_Improper_Initialization__char_ncat_32.c":66:19)
#loc108 = loc("CWE665_Improper_Initialization__char_ncat_32.c":66:9)
#loc109 = loc("CWE665_Improper_Initialization__char_ncat_32.c":66:14)
#loc110 = loc("CWE665_Improper_Initialization__char_ncat_32.c":66:15)
#loc111 = loc("CWE665_Improper_Initialization__char_ncat_32.c":67:21)
#loc112 = loc("CWE665_Improper_Initialization__char_ncat_32.c":67:10)
#loc113 = loc("CWE665_Improper_Initialization__char_ncat_32.c":67:9)
#loc114 = loc("CWE665_Improper_Initialization__char_ncat_32.c":69:5)
#loc115 = loc("CWE665_Improper_Initialization__char_ncat_32.c":81:5)
#loc116 = loc("CWE665_Improper_Initialization__char_ncat_32.c":70:9)
#loc117 = loc("CWE665_Improper_Initialization__char_ncat_32.c":70:24)
#loc118 = loc("CWE665_Improper_Initialization__char_ncat_32.c":70:23)
#loc119 = loc("CWE665_Improper_Initialization__char_ncat_32.c":71:9)
#loc120 = loc("CWE665_Improper_Initialization__char_ncat_32.c":80:9)
#loc121 = loc("CWE665_Improper_Initialization__char_ncat_32.c":72:13)
#loc122 = loc("CWE665_Improper_Initialization__char_ncat_32.c":72:20)
#loc123 = loc("CWE665_Improper_Initialization__char_ncat_32.c":73:13)
#loc124 = loc("CWE665_Improper_Initialization__char_ncat_32.c":73:28)
#loc125 = loc("CWE665_Improper_Initialization__char_ncat_32.c":74:20)
#loc126 = loc("CWE665_Improper_Initialization__char_ncat_32.c":74:28)
#loc127 = loc("CWE665_Improper_Initialization__char_ncat_32.c":74:33)
#loc128 = loc("CWE665_Improper_Initialization__char_ncat_32.c":74:37)
#loc129 = loc("CWE665_Improper_Initialization__char_ncat_32.c":74:13)
#loc130 = loc("CWE665_Improper_Initialization__char_ncat_32.c":74:38)
#loc131 = loc("CWE665_Improper_Initialization__char_ncat_32.c":75:29)
#loc132 = loc("CWE665_Improper_Initialization__char_ncat_32.c":75:20)
#loc133 = loc("CWE665_Improper_Initialization__char_ncat_32.c":75:24)
#loc134 = loc("CWE665_Improper_Initialization__char_ncat_32.c":75:13)
#loc135 = loc("CWE665_Improper_Initialization__char_ncat_32.c":76:25)
#loc136 = loc("CWE665_Improper_Initialization__char_ncat_32.c":76:32)
#loc137 = loc("CWE665_Improper_Initialization__char_ncat_32.c":76:13)
#loc138 = loc("CWE665_Improper_Initialization__char_ncat_32.c":76:38)
#loc139 = loc("CWE665_Improper_Initialization__char_ncat_32.c":78:13)
#loc140 = loc("CWE665_Improper_Initialization__char_ncat_32.c":78:21)
#loc141 = loc("CWE665_Improper_Initialization__char_ncat_32.c":78:27)
#loc142 = loc("CWE665_Improper_Initialization__char_ncat_32.c":78:35)
#loc143 = loc("CWE665_Improper_Initialization__char_ncat_32.c":79:23)
#loc144 = loc("CWE665_Improper_Initialization__char_ncat_32.c":79:13)
#loc145 = loc(fused[#loc1, #loc2])
#loc146 = loc(fused[#loc3, #loc4])
#loc147 = loc(fused[#loc5, #loc6])
#loc148 = loc(fused[#loc7, #loc8])
#loc149 = loc(fused[#loc9, #loc10])
#loc150 = loc(fused[#loc11, #loc12])
#loc151 = loc(fused[#loc13, #loc14])
#loc152 = loc(fused[#loc15, #loc16])
#loc153 = loc(fused[#loc18, #loc17])
#loc154 = loc(fused[#loc19, #loc20])
#loc155 = loc(fused[#loc21, #loc22])
#loc156 = loc(fused[#loc26, #loc24])
#loc157 = loc(fused[#loc27, #loc28])
#loc158 = loc(fused[#loc29, #loc30])
#loc159 = loc(fused[#loc32, #loc33])
#loc160 = loc(fused[#loc34, #loc35])
#loc161 = loc(fused[#loc36, #loc37])
#loc162 = loc(fused[#loc42, #loc43])
#loc163 = loc(fused[#loc47, #loc44])
#loc164 = loc(fused[#loc50, #loc51])
#loc165 = loc(fused[#loc58, #loc59])
#loc166 = loc(fused[#loc60, #loc61])
#loc167 = loc(fused[#loc62, #loc63])
#loc168 = loc(fused[#loc64, #loc65])
#loc169 = loc(fused[#loc70, #loc71])
#loc172 = loc(fused[#loc81, #loc82])
#loc173 = loc(fused[#loc85, #loc86])
#loc174 = loc(fused[#loc89, #loc88])
#loc175 = loc(fused[#loc90, #loc91])
#loc176 = loc(fused[#loc92, #loc93])
#loc177 = loc(fused[#loc94, #loc95])
#loc178 = loc(fused[#loc96, #loc97])
#loc179 = loc(fused[#loc98, #loc99])
#loc180 = loc(fused[#loc101, #loc100])
#loc181 = loc(fused[#loc102, #loc103])
#loc182 = loc(fused[#loc104, #loc105])
#loc183 = loc(fused[#loc108, #loc107])
#loc184 = loc(fused[#loc113, #loc111])
#loc185 = loc(fused[#loc114, #loc115])
#loc186 = loc(fused[#loc116, #loc117])
#loc187 = loc(fused[#loc119, #loc120])
#loc188 = loc(fused[#loc121, #loc122])
#loc189 = loc(fused[#loc123, #loc124])
#loc190 = loc(fused[#loc129, #loc130])
#loc191 = loc(fused[#loc134, #loc131])
#loc192 = loc(fused[#loc137, #loc138])
