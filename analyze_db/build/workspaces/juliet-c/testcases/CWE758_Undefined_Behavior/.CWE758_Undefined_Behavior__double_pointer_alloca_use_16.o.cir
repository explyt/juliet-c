!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
module @"/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printDoubleLine(!cir.double) loc(#loc68)
  cir.func no_proto @CWE758_Undefined_Behavior__double_pointer_alloca_use_16_bad() extra(#fn_attr) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc7)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc7)
        cir.condition(%1) loc(#loc7)
      } do {
        cir.scope {
          cir.scope {
            %0 = cir.alloca !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc73)
            %1 = cir.const #cir.int<8> : !u64i loc(#loc12)
            %2 = cir.alloca !u8i, !cir.ptr<!u8i>, %1 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
            %3 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data", init] {alignment = 8 : i64} loc(#loc74)
            %4 = cir.cast(bitcast, %2 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
            %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc12)
            cir.store %5, %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>> loc(#loc73)
            %6 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc14)
            %7 = cir.load %6 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc15)
            cir.store %7, %3 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc74)
            %8 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc16)
            %9 = cir.load %8 : !cir.ptr<!cir.double>, !cir.double loc(#loc17)
            cir.call @printDoubleLine(%9) : (!cir.double) -> () loc(#loc18)
          } loc(#loc72)
          cir.break loc(#loc19)
        } loc(#loc71)
        cir.yield loc(#loc6)
      } loc(#loc70)
    } loc(#loc70)
    cir.return loc(#loc4)
  } loc(#loc69)
  cir.func no_proto @CWE758_Undefined_Behavior__double_pointer_alloca_use_16_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc76)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc22)
    cir.return loc(#loc21)
  } loc(#loc75)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc77)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc78)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc32)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc32)
        cir.condition(%1) loc(#loc32)
      } do {
        cir.scope {
          cir.scope {
            %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc83)
            %1 = cir.alloca !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc84)
            %2 = cir.const #cir.int<8> : !u64i loc(#loc39)
            %3 = cir.alloca !u8i, !cir.ptr<!u8i>, %2 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc39)
            %4 = cir.cast(bitcast, %3 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc39)
            %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc39)
            cir.store %5, %1 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>> loc(#loc84)
            %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc40)
            %7 = cir.const #cir.int<8> : !u64i loc(#loc85)
            %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc40)
            %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc86)
            cir.store %9, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc87)
            cir.scope {
              %14 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc47)
              %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc48)
              %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc48)
              %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!cir.double>, !cir.bool loc(#loc89)
              cir.if %17 {
                %18 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc50)
                %19 = cir.const #cir.int<1> : !s32i loc(#loc51)
                %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc52)
                cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr1) loc(#loc50)
              } loc(#loc90)
            } loc(#loc88)
            %10 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc53)
            %11 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc54)
            cir.store %10, %11 : !cir.double, !cir.ptr<!cir.double> loc(#loc91)
            %12 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc56)
            %13 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc57)
            cir.store %12, %13 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc92)
            cir.scope {
              %14 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data", init] {alignment = 8 : i64} loc(#loc94)
              %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc62)
              %16 = cir.load %15 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc63)
              cir.store %16, %14 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc94)
              %17 = cir.load deref %14 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc64)
              %18 = cir.load %17 : !cir.ptr<!cir.double>, !cir.double loc(#loc65)
              cir.call @printDoubleLine(%18) : (!cir.double) -> () loc(#loc66)
            } loc(#loc93)
          } loc(#loc82)
          cir.break loc(#loc67)
        } loc(#loc81)
        cir.yield loc(#loc31)
      } loc(#loc80)
    } loc(#loc80)
    cir.return loc(#loc29)
  } loc(#loc79)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":38:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":38:41)
#loc3 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":20:1)
#loc4 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":31:1)
#loc5 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":22:5)
#loc6 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":30:5)
#loc7 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":22:11)
#loc8 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":23:5)
#loc9 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":24:9)
#loc10 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":28:9)
#loc11 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":25:13)
#loc12 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":25:46)
#loc13 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":26:13)
#loc14 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":26:30)
#loc15 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":26:29)
#loc16 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":27:30)
#loc17 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":27:29)
#loc18 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":27:13)
#loc19 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":29:9)
#loc20 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":59:1)
#loc21 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":62:1)
#loc22 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":61:5)
#loc23 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":61:11)
#loc24 = loc("/usr/include/stdlib.h":672:1)
#loc25 = loc("/usr/include/stdlib.h":672:45)
#loc26 = loc("/usr/include/stdlib.h":756:1)
#loc27 = loc("/usr/include/stdlib.h":756:70)
#loc28 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":38:1)
#loc29 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":57:1)
#loc30 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":40:5)
#loc31 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":56:5)
#loc32 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":40:11)
#loc33 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":41:5)
#loc34 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":42:9)
#loc35 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":54:9)
#loc36 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":43:13)
#loc37 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":43:22)
#loc38 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":44:13)
#loc39 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":44:46)
#loc40 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":46:30)
#loc41 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":46:37)
#loc42 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":46:50)
#loc43 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":46:51)
#loc44 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":46:13)
#loc45 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":47:13)
#loc46 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":47:41)
#loc47 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":47:17)
#loc48 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":47:25)
#loc49 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":47:31)
#loc50 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":47:32)
#loc51 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":47:38)
#loc52 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":47:37)
#loc53 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":48:21)
#loc54 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":48:14)
#loc55 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":48:13)
#loc56 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":49:24)
#loc57 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":49:14)
#loc58 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":49:13)
#loc59 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":50:13)
#loc60 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":53:13)
#loc61 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":51:17)
#loc62 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":51:34)
#loc63 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":51:33)
#loc64 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":52:34)
#loc65 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":52:33)
#loc66 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":52:17)
#loc67 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_16.c":55:9)
#loc68 = loc(fused[#loc1, #loc2])
#loc69 = loc(fused[#loc3, #loc4])
#loc70 = loc(fused[#loc5, #loc6])
#loc71 = loc(fused[#loc8, #loc6])
#loc72 = loc(fused[#loc9, #loc10])
#loc73 = loc(fused[#loc11, #loc12])
#loc74 = loc(fused[#loc13, #loc14])
#loc75 = loc(fused[#loc20, #loc21])
#loc76 = loc(fused[#loc22, #loc23])
#loc77 = loc(fused[#loc24, #loc25])
#loc78 = loc(fused[#loc26, #loc27])
#loc79 = loc(fused[#loc28, #loc29])
#loc80 = loc(fused[#loc30, #loc31])
#loc81 = loc(fused[#loc33, #loc31])
#loc82 = loc(fused[#loc34, #loc35])
#loc83 = loc(fused[#loc36, #loc37])
#loc84 = loc(fused[#loc38, #loc39])
#loc85 = loc(fused[#loc41, #loc42])
#loc86 = loc(fused[#loc40, #loc43])
#loc87 = loc(fused[#loc44, #loc43])
#loc88 = loc(fused[#loc45, #loc46])
#loc89 = loc(fused[#loc47, #loc48])
#loc90 = loc(fused[#loc49, #loc46])
#loc91 = loc(fused[#loc55, #loc53])
#loc92 = loc(fused[#loc58, #loc56])
#loc93 = loc(fused[#loc59, #loc60])
#loc94 = loc(fused[#loc61, #loc62])
