!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc45 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":122:10)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":122:14)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":122:20)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":122:32)
#loc139 = loc(fused[#loc45, #loc46])
#loc140 = loc(fused[#loc47, #loc48])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_snprintf_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc123)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\0A\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc4)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc124)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_snprintf_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc126)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc127)
    cir.br ^bb1 loc(#loc128)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<6> : !s32i loc(#loc16)
    cir.br ^bb2 loc(#loc14)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %2 : !s32i, ^bb7 [
      6: ^bb4
    ] loc(#loc14)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc17)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc129)
  ^bb5:  // pred: ^bb4
    %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc126)
    cir.store %3, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc126)
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc13)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc127)
    %5 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc20)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc22)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc22)
    %9 = cir.const #cir.int<6> : !u64i loc(#loc130)
    %10 = cir.binop(sub, %8, %9) : !u64i loc(#loc131)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc25)
    %13 = cir.binop(sub, %10, %12) : !u64i loc(#loc132)
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc3)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc3)
    %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc4)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc4)
    %18 = cir.call @snprintf(%6, %13, %15, %17) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc20)
    cir.br ^bb6 loc(#loc19)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc26)
  ^bb7:  // pred: ^bb2
    %19 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc7)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc27)
    cir.br ^bb8 loc(#loc28)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc15)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc9)
  } loc(#loc125)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_snprintf_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc134)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc31)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc135)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc33)
    cir.return loc(#loc30)
  } loc(#loc133)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc136)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc137)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc39)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc40)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc41)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc42)
  cir.func @main(%arg0: !s32i loc(fused[#loc45, #loc46]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc47, #loc48])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc139)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc140)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc44)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc49)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc49)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc50)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc51)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc51)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc52)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc39)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    %8 = cir.get_global @CWE252_Unchecked_Return_Value__char_snprintf_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc141)
    cir.call @CWE252_Unchecked_Return_Value__char_snprintf_15_good() : () -> () loc(#loc54)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc40)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc41)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    %13 = cir.get_global @CWE252_Unchecked_Return_Value__char_snprintf_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc142)
    cir.call @CWE252_Unchecked_Return_Value__char_snprintf_15_bad() : () -> () loc(#loc58)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc42)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc61)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc143)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    cir.return %17 : !s32i loc(#loc143)
  } loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"snprintf failed!\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc63)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc145)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc146)
    cir.br ^bb1 loc(#loc147)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<5> : !s32i loc(#loc72)
    cir.br ^bb2 loc(#loc70)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %2 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc70)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc73)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %3 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc74)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    cir.br ^bb12 loc(#loc76)
  ^bb5:  // pred: ^bb2
    cir.br ^bb6 loc(#loc148)
  ^bb6:  // pred: ^bb5
    %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc145)
    cir.store %5, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc145)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc69)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
    cir.br ^bb7 loc(#loc149)
  ^bb7:  // pred: ^bb6
    %7 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc81)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc83)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc83)
    %11 = cir.const #cir.int<6> : !u64i loc(#loc150)
    %12 = cir.binop(sub, %10, %11) : !u64i loc(#loc151)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc86)
    %15 = cir.binop(sub, %12, %14) : !u64i loc(#loc152)
    %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc87)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc87)
    %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc88)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc88)
    %20 = cir.call @snprintf(%8, %15, %17, %19) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc81)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc89)
    %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc153)
    cir.brcond %22 ^bb8, ^bb9 loc(#loc154)
  ^bb8:  // pred: ^bb7
    %23 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc63)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    cir.br ^bb9 loc(#loc80)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc80)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc78)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc92)
  ^bb12:  // 2 preds: ^bb4, ^bb11
    cir.br ^bb13 loc(#loc71)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc65)
  } loc(#loc144)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc156)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc157)
    cir.br ^bb1 loc(#loc158)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<6> : !s32i loc(#loc101)
    cir.br ^bb2 loc(#loc99)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %2 : !s32i, ^bb11 [
      6: ^bb4
    ] loc(#loc99)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc102)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc159)
  ^bb5:  // pred: ^bb4
    %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc156)
    cir.store %3, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc156)
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc98)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc157)
    cir.br ^bb6 loc(#loc160)
  ^bb6:  // pred: ^bb5
    %5 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc107)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc109)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc109)
    %9 = cir.const #cir.int<6> : !u64i loc(#loc161)
    %10 = cir.binop(sub, %8, %9) : !u64i loc(#loc162)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc112)
    %13 = cir.binop(sub, %10, %12) : !u64i loc(#loc163)
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc113)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc113)
    %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc114)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc114)
    %18 = cir.call @snprintf(%6, %13, %15, %17) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc107)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc115)
    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc164)
    cir.brcond %20 ^bb7, ^bb8 loc(#loc165)
  ^bb7:  // pred: ^bb6
    %21 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc117)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc117)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    cir.br ^bb8 loc(#loc106)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc106)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc104)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12 loc(#loc119)
  ^bb11:  // pred: ^bb2
    %23 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc120)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc120)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc121)
    cir.br ^bb12 loc(#loc122)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc100)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc94)
  } loc(#loc155)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_snprintf_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":385:1)
#loc2 = loc("/usr/include/stdio.h":387:62)
#loc3 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":43:42)
#loc4 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":43:50)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":48:19)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":32:1)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":51:1)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":40:9)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":40:32)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":41:9)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":41:23)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":34:5)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":50:5)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":34:12)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":36:5)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":37:5)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":44:5)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":43:9)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":43:18)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":43:23)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":43:27)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":43:37)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":43:39)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":45:5)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":48:9)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":49:9)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":107:1)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":111:1)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":109:5)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":109:11)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":110:5)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":110:11)
#loc35 = loc("/usr/include/stdlib.h":575:1)
#loc36 = loc("/usr/include/stdlib.h":575:41)
#loc37 = loc("/usr/include/time.h":76:1)
#loc38 = loc("/usr/include/time.h":76:38)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":127:15)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":129:15)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":132:15)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":134:15)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":122:1)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":137:1)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":123:1)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":125:27)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":125:22)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":125:5)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":127:5)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":128:5)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":128:58)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":129:5)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":132:5)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":133:5)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":133:57)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":134:5)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":136:12)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":136:5)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":75:23)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":58:1)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":80:1)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":70:9)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":70:32)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":71:9)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":71:23)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":60:5)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":79:5)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":60:12)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":62:5)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":64:19)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":64:9)
#loc76 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":65:9)
#loc77 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":67:5)
#loc78 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":77:5)
#loc79 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":73:9)
#loc80 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":76:9)
#loc81 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":73:13)
#loc82 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":73:22)
#loc83 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":73:27)
#loc84 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":73:31)
#loc85 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":73:41)
#loc86 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":73:43)
#loc87 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":73:46)
#loc88 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":73:54)
#loc89 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":73:61)
#loc90 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":74:9)
#loc91 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":75:13)
#loc92 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":78:5)
#loc93 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":83:1)
#loc94 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":105:1)
#loc95 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":91:9)
#loc96 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":91:32)
#loc97 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":92:9)
#loc98 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":92:23)
#loc99 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":85:5)
#loc100 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":104:5)
#loc101 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":85:12)
#loc102 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":87:5)
#loc103 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":88:5)
#loc104 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":98:5)
#loc105 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":94:9)
#loc106 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":97:9)
#loc107 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":94:13)
#loc108 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":94:22)
#loc109 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":94:27)
#loc110 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":94:31)
#loc111 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":94:41)
#loc112 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":94:43)
#loc113 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":94:46)
#loc114 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":94:54)
#loc115 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":94:61)
#loc116 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":95:9)
#loc117 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":96:23)
#loc118 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":96:13)
#loc119 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":99:5)
#loc120 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":102:19)
#loc121 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":102:9)
#loc122 = loc("CWE252_Unchecked_Return_Value__char_snprintf_15.c":103:9)
#loc123 = loc(fused[#loc1, #loc2])
#loc124 = loc(fused[#loc5, #loc6])
#loc125 = loc(fused[#loc8, #loc9])
#loc126 = loc(fused[#loc10, #loc11])
#loc127 = loc(fused[#loc12, #loc13])
#loc128 = loc(fused[#loc14, #loc15])
#loc129 = loc(fused[#loc18, #loc19])
#loc130 = loc(fused[#loc23, #loc24])
#loc131 = loc(fused[#loc22, #loc24])
#loc132 = loc(fused[#loc22, #loc25])
#loc133 = loc(fused[#loc29, #loc30])
#loc134 = loc(fused[#loc31, #loc32])
#loc135 = loc(fused[#loc33, #loc34])
#loc136 = loc(fused[#loc35, #loc36])
#loc137 = loc(fused[#loc37, #loc38])
#loc138 = loc(fused[#loc43, #loc44])
#loc141 = loc(fused[#loc54, #loc55])
#loc142 = loc(fused[#loc58, #loc59])
#loc143 = loc(fused[#loc62, #loc61])
#loc144 = loc(fused[#loc64, #loc65])
#loc145 = loc(fused[#loc66, #loc67])
#loc146 = loc(fused[#loc68, #loc69])
#loc147 = loc(fused[#loc70, #loc71])
#loc148 = loc(fused[#loc77, #loc78])
#loc149 = loc(fused[#loc79, #loc80])
#loc150 = loc(fused[#loc84, #loc85])
#loc151 = loc(fused[#loc83, #loc85])
#loc152 = loc(fused[#loc83, #loc86])
#loc153 = loc(fused[#loc81, #loc89])
#loc154 = loc(fused[#loc90, #loc80])
#loc155 = loc(fused[#loc93, #loc94])
#loc156 = loc(fused[#loc95, #loc96])
#loc157 = loc(fused[#loc97, #loc98])
#loc158 = loc(fused[#loc99, #loc100])
#loc159 = loc(fused[#loc103, #loc104])
#loc160 = loc(fused[#loc105, #loc106])
#loc161 = loc(fused[#loc110, #loc111])
#loc162 = loc(fused[#loc109, #loc111])
#loc163 = loc(fused[#loc109, #loc112])
#loc164 = loc(fused[#loc107, #loc115])
#loc165 = loc(fused[#loc116, #loc106])
