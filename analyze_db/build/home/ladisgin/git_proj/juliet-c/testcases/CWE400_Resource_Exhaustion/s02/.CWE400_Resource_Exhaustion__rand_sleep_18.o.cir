!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc17 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":38:13)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":59:13)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":63:19)
#true = #cir.bool<true> : !cir.bool
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_sleep_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc76)
  cir.func private @usleep(!u32i) -> !s32i loc(#loc77)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_sleep_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc80)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc12)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc13)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc81)
    cir.br ^bb1 loc(#loc82)
  ^bb1:  // pred: ^bb0
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc17)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %5 = cir.binop(and, %3, %4) : !s32i loc(#loc17)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc17)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc17)
  ^bb2:  // pred: ^bb1
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc17)
    %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc17)
    %9 = cir.const #cir.int<30> : !s32i loc(#loc17)
    %10 = cir.shift(left, %8 : !u32i, %9 : !s32i) -> !u32i loc(#loc17)
    %11 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc17)
    %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc17)
    %13 = cir.const #cir.int<15> : !s32i loc(#loc17)
    %14 = cir.shift(left, %12 : !u32i, %13 : !s32i) -> !u32i loc(#loc17)
    %15 = cir.binop(xor, %10, %14) : !u32i loc(#loc17)
    %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc17)
    %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc17)
    %18 = cir.binop(xor, %15, %17) : !u32i loc(#loc17)
    cir.br ^bb4(%18 : !u32i) loc(#loc17)
  ^bb3:  // pred: ^bb1
    %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc17)
    %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc17)
    %21 = cir.const #cir.int<30> : !s32i loc(#loc17)
    %22 = cir.shift(left, %20 : !u32i, %21 : !s32i) -> !u32i loc(#loc17)
    %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc17)
    %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc17)
    %25 = cir.const #cir.int<15> : !s32i loc(#loc17)
    %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc17)
    %27 = cir.binop(xor, %22, %26) : !u32i loc(#loc17)
    %28 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc17)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc17)
    %30 = cir.binop(xor, %27, %29) : !u32i loc(#loc17)
    %31 = cir.unary(minus, %30) : !u32i, !u32i loc(#loc17)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc17)
    %34 = cir.binop(sub, %31, %33) : !u32i loc(#loc17)
    cir.br ^bb4(%34 : !u32i) loc(#loc17)
  ^bb4(%35: !u32i loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":38:13)):  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc17)
  ^bb5:  // pred: ^bb4
    %36 = cir.cast(integral, %35 : !u32i), !s32i loc(#loc17)
    cir.store %36, %0 : !s32i, !cir.ptr<!s32i> loc(#loc83)
    cir.br ^bb6 loc(#loc84)
  ^bb6:  // pred: ^bb5
    %37 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    %38 = cir.cast(integral, %37 : !s32i), !u32i loc(#loc21)
    %39 = cir.call @usleep(%38) : (!u32i) -> !s32i loc(#loc22)
    %40 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc7)
    %41 = cir.cast(array_to_ptrdecay, %40 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%41) : (!cir.ptr<!s8i>) -> () loc(#loc23)
    cir.return loc(#loc9)
  } loc(#loc79)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_sleep_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc86)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc26)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc87)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc28)
    cir.return loc(#loc25)
  } loc(#loc85)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc30)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc31)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc89)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc37)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc90)
    cir.br ^bb1 loc(#loc91)
  ^bb1:  // pred: ^bb0
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc41)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %5 = cir.binop(and, %3, %4) : !s32i loc(#loc41)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc41)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc41)
  ^bb2:  // pred: ^bb1
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc41)
    %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc41)
    %9 = cir.const #cir.int<30> : !s32i loc(#loc41)
    %10 = cir.shift(left, %8 : !u32i, %9 : !s32i) -> !u32i loc(#loc41)
    %11 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc41)
    %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc41)
    %13 = cir.const #cir.int<15> : !s32i loc(#loc41)
    %14 = cir.shift(left, %12 : !u32i, %13 : !s32i) -> !u32i loc(#loc41)
    %15 = cir.binop(xor, %10, %14) : !u32i loc(#loc41)
    %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc41)
    %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc41)
    %18 = cir.binop(xor, %15, %17) : !u32i loc(#loc41)
    cir.br ^bb4(%18 : !u32i) loc(#loc41)
  ^bb3:  // pred: ^bb1
    %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc41)
    %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc41)
    %21 = cir.const #cir.int<30> : !s32i loc(#loc41)
    %22 = cir.shift(left, %20 : !u32i, %21 : !s32i) -> !u32i loc(#loc41)
    %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc41)
    %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc41)
    %25 = cir.const #cir.int<15> : !s32i loc(#loc41)
    %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc41)
    %27 = cir.binop(xor, %22, %26) : !u32i loc(#loc41)
    %28 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc41)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc41)
    %30 = cir.binop(xor, %27, %29) : !u32i loc(#loc41)
    %31 = cir.unary(minus, %30) : !u32i, !u32i loc(#loc41)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc41)
    %34 = cir.binop(sub, %31, %33) : !u32i loc(#loc41)
    cir.br ^bb4(%34 : !u32i) loc(#loc41)
  ^bb4(%35: !u32i loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":59:13)):  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc41)
  ^bb5:  // pred: ^bb4
    %36 = cir.cast(integral, %35 : !u32i), !s32i loc(#loc41)
    cir.store %36, %0 : !s32i, !cir.ptr<!s32i> loc(#loc92)
    cir.br ^bb6 loc(#loc93)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc94)
  ^bb7:  // pred: ^bb6
    %37 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc47)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc48)
    %39 = cir.cmp(gt, %37, %38) : !s32i, !cir.bool loc(#loc95)
    cir.brcond %39 ^bb8, ^bb13 loc(#loc49)
  ^bb8:  // pred: ^bb7
    %40 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc50)
    %41 = cir.const #cir.int<2000> : !s32i loc(#loc51)
    %42 = cir.cmp(le, %40, %41) : !s32i, !cir.bool loc(#loc96)
    cir.brcond %42 ^bb9, ^bb10 loc(#loc49)
  ^bb9:  // pred: ^bb8
    %43 = cir.const #true loc(#loc49)
    cir.br ^bb11(%43 : !cir.bool) loc(#loc49)
  ^bb10:  // pred: ^bb8
    %44 = cir.const #false loc(#loc49)
    cir.br ^bb11(%44 : !cir.bool) loc(#loc49)
  ^bb11(%45: !cir.bool loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":63:19)):  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc49)
  ^bb12:  // pred: ^bb11
    cir.br ^bb14(%45 : !cir.bool) loc(#loc49)
  ^bb13:  // pred: ^bb7
    %46 = cir.const #false loc(#loc49)
    cir.br ^bb14(%46 : !cir.bool) loc(#loc49)
  ^bb14(%47: !cir.bool loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":63:19)):  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc49)
  ^bb15:  // pred: ^bb14
    cir.brcond %47 ^bb16, ^bb17 loc(#loc97)
  ^bb16:  // pred: ^bb15
    %48 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc55)
    %49 = cir.cast(integral, %48 : !s32i), !u32i loc(#loc55)
    %50 = cir.call @usleep(%49) : (!u32i) -> !s32i loc(#loc56)
    %51 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc30)
    %52 = cir.cast(array_to_ptrdecay, %51 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc30)
    cir.call @printLine(%52) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    cir.br ^bb18 loc(#loc53)
  ^bb17:  // pred: ^bb15
    %53 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc31)
    %54 = cir.cast(array_to_ptrdecay, %53 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc31)
    cir.call @printLine(%54) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    cir.br ^bb18 loc(#loc46)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc46)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc33)
  } loc(#loc88)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc99)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc63)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc64)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc100)
    cir.br ^bb1 loc(#loc101)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<20> : !s32i loc(#loc68)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc102)
    cir.br ^bb2 loc(#loc103)
  ^bb2:  // pred: ^bb1
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc72)
    %6 = cir.call @usleep(%5) : (!u32i) -> !s32i loc(#loc73)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc74)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    cir.return loc(#loc60)
  } loc(#loc98)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_sleep_18.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("/usr/include/unistd.h":480:1)
#loc4 = loc("/usr/include/unistd.h":480:43)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":43:15)
#loc8 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":30:1)
#loc9 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":44:1)
#loc10 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":32:5)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":32:9)
#loc12 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":34:14)
#loc13 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":34:13)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":34:5)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":35:5)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":35:10)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":38:5)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":39:5)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":39:10)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":42:11)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":42:5)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":43:5)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":91:1)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":95:1)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":93:5)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":93:13)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":94:5)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":94:13)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":66:19)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":70:19)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":51:1)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":72:1)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":53:5)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":53:9)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":55:14)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":55:13)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":55:5)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":56:5)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":56:10)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":59:5)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":60:5)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":60:10)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":63:5)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":71:5)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":63:9)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":63:17)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":63:22)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":63:31)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":64:5)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":67:5)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":69:5)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":65:15)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":65:9)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":66:9)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":70:9)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":75:1)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":89:1)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":77:5)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":77:9)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":79:14)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":79:13)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":79:5)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":80:5)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":80:10)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":83:13)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":83:5)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":84:5)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":84:10)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":87:11)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":87:5)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":88:15)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_sleep_18.c":88:5)
#loc76 = loc(fused[#loc1, #loc2])
#loc77 = loc(fused[#loc3, #loc4])
#loc78 = loc(fused[#loc5, #loc6])
#loc79 = loc(fused[#loc8, #loc9])
#loc80 = loc(fused[#loc10, #loc11])
#loc81 = loc(fused[#loc14, #loc12])
#loc82 = loc(fused[#loc15, #loc16])
#loc83 = loc(fused[#loc18, #loc17])
#loc84 = loc(fused[#loc19, #loc20])
#loc85 = loc(fused[#loc24, #loc25])
#loc86 = loc(fused[#loc26, #loc27])
#loc87 = loc(fused[#loc28, #loc29])
#loc88 = loc(fused[#loc32, #loc33])
#loc89 = loc(fused[#loc34, #loc35])
#loc90 = loc(fused[#loc38, #loc36])
#loc91 = loc(fused[#loc39, #loc40])
#loc92 = loc(fused[#loc42, #loc41])
#loc93 = loc(fused[#loc43, #loc44])
#loc94 = loc(fused[#loc45, #loc46])
#loc95 = loc(fused[#loc47, #loc48])
#loc96 = loc(fused[#loc50, #loc51])
#loc97 = loc(fused[#loc52, #loc53, #loc54, #loc46])
#loc98 = loc(fused[#loc59, #loc60])
#loc99 = loc(fused[#loc61, #loc62])
#loc100 = loc(fused[#loc65, #loc63])
#loc101 = loc(fused[#loc66, #loc67])
#loc102 = loc(fused[#loc69, #loc68])
#loc103 = loc(fused[#loc70, #loc71])
