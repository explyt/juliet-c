!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_loop_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc177)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc178)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc179)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc180)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc181)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_loop_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc183)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc15)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc184)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc17)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc18)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc18)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc185)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc186)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc17)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc187)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc188)
    cir.scope {
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
      %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc26)
      %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc26)
      %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc190)
      cir.if %26 {
        %27 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc28)
        %28 = cir.const #cir.int<1> : !s32i loc(#loc29)
        %29 = cir.unary(minus, %28) nsw : !s32i, !s32i loc(#loc30)
        cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc28)
      } loc(#loc191)
    } loc(#loc189)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc31)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc32)
    %12 = cir.const #cir.int<50> : !s32i loc(#loc33)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc33)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc33)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc192)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc37)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc37)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %19 = cir.const #cir.int<50> : !s32i loc(#loc39)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc39)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc41)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc193)
    cir.scope {
      %23 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc195)
      %24 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc196)
      %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
      cir.store %25, %23 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc195)
      %26 = cir.load %23 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
      cir.store %26, %24 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc196)
      cir.scope {
        %27 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc198)
        %28 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc199)
        %29 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc200)
        %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc55)
        %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc55)
        %32 = cir.const #cir.int<67> : !s32i loc(#loc56)
        %33 = cir.const #cir.int<100> : !s32i loc(#loc57)
        %34 = cir.const #cir.int<1> : !s32i loc(#loc58)
        %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc57)
        %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc57)
        cir.libc.memset %36 bytes from %31 set to %32 : !cir.ptr<!void>, !s32i, !u64i loc(#loc201)
        %37 = cir.const #cir.int<0> : !s32i loc(#loc61)
        %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc61)
        %39 = cir.const #cir.int<100> : !s32i loc(#loc62)
        %40 = cir.const #cir.int<1> : !s32i loc(#loc63)
        %41 = cir.binop(sub, %39, %40) nsw : !s32i loc(#loc62)
        %42 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc64)
        %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !s32i), !cir.ptr<!s8i> loc(#loc64)
        cir.store %38, %43 : !s8i, !cir.ptr<!s8i> loc(#loc202)
        %44 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc65)
        %45 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc66)
        %46 = cir.call @strlen(%45) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc65)
        cir.store %46, %28 : !u64i, !cir.ptr<!u64i> loc(#loc203)
        cir.scope {
          %58 = cir.const #cir.int<0> : !s32i loc(#loc71)
          %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc71)
          cir.store %59, %27 : !u64i, !cir.ptr<!u64i> loc(#loc205)
          cir.for : cond {
            %60 = cir.load %27 : !cir.ptr<!u64i>, !u64i loc(#loc73)
            %61 = cir.load %28 : !cir.ptr<!u64i>, !u64i loc(#loc74)
            %62 = cir.cmp(lt, %60, %61) : !u64i, !cir.bool loc(#loc206)
            cir.condition(%62) loc(#loc75)
          } body {
            cir.scope {
              %60 = cir.load %24 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
              %61 = cir.load %27 : !cir.ptr<!u64i>, !u64i loc(#loc78)
              %62 = cir.ptr_stride(%60 : !cir.ptr<!s8i>, %61 : !u64i), !cir.ptr<!s8i> loc(#loc79)
              %63 = cir.load %62 : !cir.ptr<!s8i>, !s8i loc(#loc77)
              %64 = cir.load %27 : !cir.ptr<!u64i>, !u64i loc(#loc80)
              %65 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc81)
              %66 = cir.ptr_stride(%65 : !cir.ptr<!s8i>, %64 : !u64i), !cir.ptr<!s8i> loc(#loc81)
              cir.store %63, %66 : !s8i, !cir.ptr<!s8i> loc(#loc208)
            } loc(#loc207)
            cir.yield loc(#loc70)
          } step {
            %60 = cir.load %27 : !cir.ptr<!u64i>, !u64i loc(#loc82)
            %61 = cir.unary(inc, %60) : !u64i, !u64i loc(#loc83)
            cir.store %61, %27 : !u64i, !cir.ptr<!u64i> loc(#loc209)
            cir.yield loc(#loc204)
          } loc(#loc204)
        } loc(#loc204)
        %47 = cir.const #cir.int<0> : !s32i loc(#loc84)
        %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc84)
        %49 = cir.const #cir.int<100> : !s32i loc(#loc85)
        %50 = cir.const #cir.int<1> : !s32i loc(#loc86)
        %51 = cir.binop(sub, %49, %50) nsw : !s32i loc(#loc85)
        %52 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc87)
        %53 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %51 : !s32i), !cir.ptr<!s8i> loc(#loc87)
        cir.store %48, %53 : !s8i, !cir.ptr<!s8i> loc(#loc210)
        %54 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc88)
        cir.call @printLine(%54) : (!cir.ptr<!s8i>) -> () loc(#loc89)
        %55 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc90)
        %56 = cir.load %24 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
        %57 = cir.cast(bitcast, %56 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc91)
        cir.call @free(%57) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc90)
      } loc(#loc197)
    } loc(#loc194)
    cir.return loc(#loc12)
  } loc(#loc182)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_loop_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc212)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc94)
    cir.return loc(#loc93)
  } loc(#loc211)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc214)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc100)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc215)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc102)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc103)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc103)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc216)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc217)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc102)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc218)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc219)
    cir.scope {
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
      %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc111)
      %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc111)
      %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc221)
      cir.if %26 {
        %27 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc113)
        %28 = cir.const #cir.int<1> : !s32i loc(#loc114)
        %29 = cir.unary(minus, %28) nsw : !s32i, !s32i loc(#loc115)
        cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc113)
      } loc(#loc222)
    } loc(#loc220)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc116)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc117)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc118)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc118)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc118)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc223)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc122)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc122)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc124)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc125)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc124)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc126)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc224)
    cir.scope {
      %23 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc226)
      %24 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc227)
      %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
      cir.store %25, %23 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc226)
      %26 = cir.load %23 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
      cir.store %26, %24 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc227)
      cir.scope {
        %27 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc229)
        %28 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc230)
        %29 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc231)
        %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc140)
        %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc140)
        %32 = cir.const #cir.int<67> : !s32i loc(#loc141)
        %33 = cir.const #cir.int<100> : !s32i loc(#loc142)
        %34 = cir.const #cir.int<1> : !s32i loc(#loc143)
        %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc142)
        %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc142)
        cir.libc.memset %36 bytes from %31 set to %32 : !cir.ptr<!void>, !s32i, !u64i loc(#loc232)
        %37 = cir.const #cir.int<0> : !s32i loc(#loc146)
        %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc146)
        %39 = cir.const #cir.int<100> : !s32i loc(#loc147)
        %40 = cir.const #cir.int<1> : !s32i loc(#loc148)
        %41 = cir.binop(sub, %39, %40) nsw : !s32i loc(#loc147)
        %42 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc149)
        %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !s32i), !cir.ptr<!s8i> loc(#loc149)
        cir.store %38, %43 : !s8i, !cir.ptr<!s8i> loc(#loc233)
        %44 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc150)
        %45 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc151)
        %46 = cir.call @strlen(%45) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc150)
        cir.store %46, %28 : !u64i, !cir.ptr<!u64i> loc(#loc234)
        cir.scope {
          %58 = cir.const #cir.int<0> : !s32i loc(#loc156)
          %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc156)
          cir.store %59, %27 : !u64i, !cir.ptr<!u64i> loc(#loc236)
          cir.for : cond {
            %60 = cir.load %27 : !cir.ptr<!u64i>, !u64i loc(#loc158)
            %61 = cir.load %28 : !cir.ptr<!u64i>, !u64i loc(#loc159)
            %62 = cir.cmp(lt, %60, %61) : !u64i, !cir.bool loc(#loc237)
            cir.condition(%62) loc(#loc160)
          } body {
            cir.scope {
              %60 = cir.load %24 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
              %61 = cir.load %27 : !cir.ptr<!u64i>, !u64i loc(#loc163)
              %62 = cir.ptr_stride(%60 : !cir.ptr<!s8i>, %61 : !u64i), !cir.ptr<!s8i> loc(#loc164)
              %63 = cir.load %62 : !cir.ptr<!s8i>, !s8i loc(#loc162)
              %64 = cir.load %27 : !cir.ptr<!u64i>, !u64i loc(#loc165)
              %65 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc166)
              %66 = cir.ptr_stride(%65 : !cir.ptr<!s8i>, %64 : !u64i), !cir.ptr<!s8i> loc(#loc166)
              cir.store %63, %66 : !s8i, !cir.ptr<!s8i> loc(#loc239)
            } loc(#loc238)
            cir.yield loc(#loc155)
          } step {
            %60 = cir.load %27 : !cir.ptr<!u64i>, !u64i loc(#loc167)
            %61 = cir.unary(inc, %60) : !u64i, !u64i loc(#loc168)
            cir.store %61, %27 : !u64i, !cir.ptr<!u64i> loc(#loc240)
            cir.yield loc(#loc235)
          } loc(#loc235)
        } loc(#loc235)
        %47 = cir.const #cir.int<0> : !s32i loc(#loc169)
        %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc169)
        %49 = cir.const #cir.int<100> : !s32i loc(#loc170)
        %50 = cir.const #cir.int<1> : !s32i loc(#loc171)
        %51 = cir.binop(sub, %49, %50) nsw : !s32i loc(#loc170)
        %52 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc172)
        %53 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %51 : !s32i), !cir.ptr<!s8i> loc(#loc172)
        cir.store %48, %53 : !s8i, !cir.ptr<!s8i> loc(#loc241)
        %54 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc173)
        cir.call @printLine(%54) : (!cir.ptr<!s8i>) -> () loc(#loc174)
        %55 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc175)
        %56 = cir.load %24 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
        %57 = cir.cast(bitcast, %56 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc176)
        cir.call @free(%57) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc175)
      } loc(#loc228)
    } loc(#loc225)
    cir.return loc(#loc97)
  } loc(#loc213)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_loop_31.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":23:1)
#loc12 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":52:1)
#loc13 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":25:5)
#loc14 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":25:12)
#loc15 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":26:12)
#loc16 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":26:5)
#loc17 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":28:20)
#loc18 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":28:27)
#loc19 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":28:30)
#loc20 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":28:41)
#loc21 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":28:42)
#loc22 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":28:5)
#loc23 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":29:5)
#loc24 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":29:33)
#loc25 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":29:9)
#loc26 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":29:17)
#loc27 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":29:23)
#loc28 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":29:24)
#loc29 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":29:30)
#loc30 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":29:29)
#loc31 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":30:12)
#loc32 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":30:18)
#loc33 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":30:23)
#loc34 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":30:26)
#loc35 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":30:5)
#loc36 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":30:27)
#loc37 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":31:18)
#loc38 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":31:5)
#loc39 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":31:10)
#loc40 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":31:13)
#loc41 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":31:14)
#loc42 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":32:5)
#loc43 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":51:5)
#loc44 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":33:9)
#loc45 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":33:27)
#loc46 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":34:9)
#loc47 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":34:23)
#loc48 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":35:9)
#loc49 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":50:9)
#loc50 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":36:13)
#loc51 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":36:20)
#loc52 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":36:23)
#loc53 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":37:13)
#loc54 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":37:26)
#loc55 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":38:20)
#loc56 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":38:26)
#loc57 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":38:31)
#loc58 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":38:35)
#loc59 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":38:13)
#loc60 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":38:36)
#loc61 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":39:27)
#loc62 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":39:18)
#loc63 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":39:22)
#loc64 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":39:13)
#loc65 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":40:23)
#loc66 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":40:30)
#loc67 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":40:13)
#loc68 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":40:34)
#loc69 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":43:13)
#loc70 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":46:13)
#loc71 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":43:22)
#loc72 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":43:18)
#loc73 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":43:25)
#loc74 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":43:29)
#loc75 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":43:27)
#loc76 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":44:13)
#loc77 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":45:27)
#loc78 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":45:32)
#loc79 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":45:33)
#loc80 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":45:22)
#loc81 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":45:17)
#loc82 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":43:39)
#loc83 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":43:38)
#loc84 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":47:27)
#loc85 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":47:18)
#loc86 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":47:22)
#loc87 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":47:13)
#loc88 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":48:23)
#loc89 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":48:13)
#loc90 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":49:13)
#loc91 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":49:18)
#loc92 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":90:1)
#loc93 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":93:1)
#loc94 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":92:5)
#loc95 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":92:13)
#loc96 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":59:1)
#loc97 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":88:1)
#loc98 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":61:5)
#loc99 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":61:12)
#loc100 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":62:12)
#loc101 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":62:5)
#loc102 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":64:20)
#loc103 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":64:27)
#loc104 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":64:31)
#loc105 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":64:42)
#loc106 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":64:43)
#loc107 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":64:5)
#loc108 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":65:5)
#loc109 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":65:33)
#loc110 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":65:9)
#loc111 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":65:17)
#loc112 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":65:23)
#loc113 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":65:24)
#loc114 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":65:30)
#loc115 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":65:29)
#loc116 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":66:12)
#loc117 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":66:18)
#loc118 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":66:23)
#loc119 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":66:27)
#loc120 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":66:5)
#loc121 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":66:28)
#loc122 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":67:19)
#loc123 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":67:5)
#loc124 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":67:10)
#loc125 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":67:14)
#loc126 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":67:15)
#loc127 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":68:5)
#loc128 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":87:5)
#loc129 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":69:9)
#loc130 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":69:27)
#loc131 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":70:9)
#loc132 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":70:23)
#loc133 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":71:9)
#loc134 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":86:9)
#loc135 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":72:13)
#loc136 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":72:20)
#loc137 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":72:23)
#loc138 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":73:13)
#loc139 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":73:26)
#loc140 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":74:20)
#loc141 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":74:26)
#loc142 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":74:31)
#loc143 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":74:35)
#loc144 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":74:13)
#loc145 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":74:36)
#loc146 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":75:27)
#loc147 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":75:18)
#loc148 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":75:22)
#loc149 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":75:13)
#loc150 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":76:23)
#loc151 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":76:30)
#loc152 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":76:13)
#loc153 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":76:34)
#loc154 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":79:13)
#loc155 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":82:13)
#loc156 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":79:22)
#loc157 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":79:18)
#loc158 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":79:25)
#loc159 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":79:29)
#loc160 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":79:27)
#loc161 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":80:13)
#loc162 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":81:27)
#loc163 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":81:32)
#loc164 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":81:33)
#loc165 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":81:22)
#loc166 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":81:17)
#loc167 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":79:39)
#loc168 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":79:38)
#loc169 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":83:27)
#loc170 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":83:18)
#loc171 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":83:22)
#loc172 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":83:13)
#loc173 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":84:23)
#loc174 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":84:13)
#loc175 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":85:13)
#loc176 = loc("CWE126_Buffer_Overread__malloc_char_loop_31.c":85:18)
#loc177 = loc(fused[#loc1, #loc2])
#loc178 = loc(fused[#loc3, #loc4])
#loc179 = loc(fused[#loc5, #loc6])
#loc180 = loc(fused[#loc7, #loc8])
#loc181 = loc(fused[#loc9, #loc10])
#loc182 = loc(fused[#loc11, #loc12])
#loc183 = loc(fused[#loc13, #loc14])
#loc184 = loc(fused[#loc16, #loc15])
#loc185 = loc(fused[#loc19, #loc20])
#loc186 = loc(fused[#loc18, #loc20])
#loc187 = loc(fused[#loc17, #loc21])
#loc188 = loc(fused[#loc22, #loc21])
#loc189 = loc(fused[#loc23, #loc24])
#loc190 = loc(fused[#loc25, #loc26])
#loc191 = loc(fused[#loc27, #loc24])
#loc192 = loc(fused[#loc35, #loc36])
#loc193 = loc(fused[#loc38, #loc37])
#loc194 = loc(fused[#loc42, #loc43])
#loc195 = loc(fused[#loc44, #loc45])
#loc196 = loc(fused[#loc46, #loc47])
#loc197 = loc(fused[#loc48, #loc49])
#loc198 = loc(fused[#loc50, #loc51])
#loc199 = loc(fused[#loc50, #loc52])
#loc200 = loc(fused[#loc53, #loc54])
#loc201 = loc(fused[#loc59, #loc60])
#loc202 = loc(fused[#loc64, #loc61])
#loc203 = loc(fused[#loc67, #loc68])
#loc204 = loc(fused[#loc69, #loc70])
#loc205 = loc(fused[#loc72, #loc71])
#loc206 = loc(fused[#loc73, #loc74])
#loc207 = loc(fused[#loc76, #loc70])
#loc208 = loc(fused[#loc81, #loc79])
#loc209 = loc(fused[#loc83, #loc82])
#loc210 = loc(fused[#loc87, #loc84])
#loc211 = loc(fused[#loc92, #loc93])
#loc212 = loc(fused[#loc94, #loc95])
#loc213 = loc(fused[#loc96, #loc97])
#loc214 = loc(fused[#loc98, #loc99])
#loc215 = loc(fused[#loc101, #loc100])
#loc216 = loc(fused[#loc104, #loc105])
#loc217 = loc(fused[#loc103, #loc105])
#loc218 = loc(fused[#loc102, #loc106])
#loc219 = loc(fused[#loc107, #loc106])
#loc220 = loc(fused[#loc108, #loc109])
#loc221 = loc(fused[#loc110, #loc111])
#loc222 = loc(fused[#loc112, #loc109])
#loc223 = loc(fused[#loc120, #loc121])
#loc224 = loc(fused[#loc123, #loc122])
#loc225 = loc(fused[#loc127, #loc128])
#loc226 = loc(fused[#loc129, #loc130])
#loc227 = loc(fused[#loc131, #loc132])
#loc228 = loc(fused[#loc133, #loc134])
#loc229 = loc(fused[#loc135, #loc136])
#loc230 = loc(fused[#loc135, #loc137])
#loc231 = loc(fused[#loc138, #loc139])
#loc232 = loc(fused[#loc144, #loc145])
#loc233 = loc(fused[#loc149, #loc146])
#loc234 = loc(fused[#loc152, #loc153])
#loc235 = loc(fused[#loc154, #loc155])
#loc236 = loc(fused[#loc157, #loc156])
#loc237 = loc(fused[#loc158, #loc159])
#loc238 = loc(fused[#loc161, #loc155])
#loc239 = loc(fused[#loc166, #loc164])
#loc240 = loc(fused[#loc168, #loc167])
#loc241 = loc(fused[#loc172, #loc169])
