!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":313:10)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":313:14)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":313:20)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":313:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc523 = loc(fused[#loc209, #loc210])
#loc524 = loc(fused[#loc211, #loc212])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc443)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc444)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc445)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc446)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc447)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc448)
  cir.func private @strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc449)
  cir.func private @close(!s32i) -> !s32i loc(#loc450)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc451)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc452)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc453)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc23)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc454)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc455)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc28)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc457)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc33)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc458)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc37)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc37)
        cir.condition(%4) loc(#loc37)
      } do {
        cir.scope {
          %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc461)
          %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc462)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc463)
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc464)
          %7 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc465)
          %8 = cir.const #cir.int<1> : !s32i loc(#loc45)
          %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc45)
          cir.store %9, %5 : !s32i, !cir.ptr<!s32i> loc(#loc463)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc47)
          %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc47)
          cir.store %11, %6 : !s32i, !cir.ptr<!s32i> loc(#loc464)
          cir.scope {
            cir.do {
              %12 = cir.const #cir.int<2> : !s32i loc(#loc52)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc53)
              %14 = cir.const #cir.int<6> : !s32i loc(#loc54)
              %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc55)
              cir.store %15, %5 : !s32i, !cir.ptr<!s32i> loc(#loc467)
              cir.scope {
                %60 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc60)
                %61 = cir.const #cir.int<1> : !s32i loc(#loc61)
                %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc61)
                %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc469)
                cir.if %63 {
                  cir.break loc(#loc63)
                } loc(#loc470)
              } loc(#loc468)
              %16 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc471)
              %17 = cir.const #cir.int<0> : !s32i loc(#loc66)
              %18 = cir.const #cir.int<16> : !u64i loc(#loc472)
              cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc473)
              %19 = cir.const #cir.int<2> : !s32i loc(#loc71)
              %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc71)
              %21 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
              cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc474)
              %22 = cir.const #cir.int<0> : !s32i loc(#loc74)
              %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc74)
              %24 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc75)
              %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc76)
              cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc475)
              %26 = cir.const #cir.int<27015> : !s32i loc(#loc78)
              %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc78)
              %28 = cir.call @htons(%27) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc79)
              %29 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
              cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc476)
              cir.scope {
                %60 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc85)
                %61 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc478)
                %62 = cir.const #cir.int<16> : !u64i loc(#loc479)
                %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc479)
                %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc90)
                %65 = cir.const #cir.int<1> : !s32i loc(#loc91)
                %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc91)
                %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc480)
                cir.if %67 {
                  cir.break loc(#loc93)
                } loc(#loc481)
              } loc(#loc477)
              cir.scope {
                %60 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc96)
                %61 = cir.const #cir.int<5> : !s32i loc(#loc97)
                %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc98)
                %63 = cir.const #cir.int<1> : !s32i loc(#loc99)
                %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc99)
                %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc483)
                cir.if %65 {
                  cir.break loc(#loc101)
                } loc(#loc484)
              } loc(#loc482)
              %30 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc102)
              %31 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc103)
              %32 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc104)
              %33 = cir.call @accept(%30, %31, %32) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc105)
              cir.store %33, %6 : !s32i, !cir.ptr<!s32i> loc(#loc485)
              cir.scope {
                %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc110)
                %61 = cir.const #cir.int<1> : !s32i loc(#loc111)
                %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc111)
                %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc487)
                cir.if %63 {
                  cir.break loc(#loc113)
                } loc(#loc488)
              } loc(#loc486)
              %34 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc114)
              %35 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc115)
              %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc115)
              %37 = cir.const #cir.int<3> : !s32i loc(#loc116)
              %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc116)
              %39 = cir.const #cir.int<8> : !u64i loc(#loc116)
              %40 = cir.binop(mul, %38, %39) : !u64i loc(#loc116)
              %41 = cir.const #cir.int<2> : !s32i loc(#loc116)
              %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc116)
              %43 = cir.binop(add, %40, %42) : !u64i loc(#loc116)
              %44 = cir.const #cir.int<1> : !s32i loc(#loc117)
              %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc117)
              %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc489)
              %47 = cir.const #cir.int<0> : !s32i loc(#loc118)
              %48 = cir.call @recv(%34, %36, %46, %47) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc119)
              %49 = cir.cast(integral, %48 : !s64i), !s32i loc(#loc119)
              cir.store %49, %3 : !s32i, !cir.ptr<!s32i> loc(#loc490)
              cir.scope {
                %60 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc124)
                %61 = cir.const #cir.int<1> : !s32i loc(#loc125)
                %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc125)
                %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc492)
                %64 = cir.ternary(%63, true {
                  %65 = cir.const #true loc(#loc126)
                  cir.yield %65 : !cir.bool loc(#loc126)
                }, false {
                  %65 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc127)
                  %66 = cir.const #cir.int<0> : !s32i loc(#loc128)
                  %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc493)
                  %68 = cir.ternary(%67, true {
                    %69 = cir.const #true loc(#loc126)
                    cir.yield %69 : !cir.bool loc(#loc126)
                  }, false {
                    %69 = cir.const #false loc(#loc126)
                    cir.yield %69 : !cir.bool loc(#loc126)
                  }) : (!cir.bool) -> !cir.bool loc(#loc126)
                  cir.yield %68 : !cir.bool loc(#loc126)
                }) : (!cir.bool) -> !cir.bool loc(#loc126)
                cir.if %64 {
                  cir.break loc(#loc130)
                } loc(#loc494)
              } loc(#loc491)
              %50 = cir.const #cir.int<0> : !s32i loc(#loc131)
              %51 = cir.cast(integral, %50 : !s32i), !s8i loc(#loc131)
              %52 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc132)
              %53 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc133)
              %54 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %52 : !s32i), !cir.ptr<!s8i> loc(#loc133)
              cir.store %51, %54 : !s8i, !cir.ptr<!s8i> loc(#loc495)
              %55 = cir.get_global @strtoul : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i)>> loc(#loc134)
              %56 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc135)
              %57 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc136)
              %58 = cir.const #cir.int<0> : !s32i loc(#loc137)
              %59 = cir.call @strtoul(%56, %57, %58) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc134)
              cir.store %59, %0 : !u64i, !cir.ptr<!u64i> loc(#loc496)
              cir.yield loc(#loc51)
            } while {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc140)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc140)
              cir.condition(%13) loc(#loc140)
            } loc(#loc466)
          } loc(#loc466)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc143)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc144)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc144)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc498)
            cir.if %15 {
              %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc146)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc147)
            } loc(#loc499)
          } loc(#loc497)
          cir.scope {
            %12 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc150)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc151)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc151)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc501)
            cir.if %15 {
              %16 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc153)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc154)
            } loc(#loc502)
          } loc(#loc500)
        } loc(#loc460)
        cir.break loc(#loc155)
      } loc(#loc459)
    } loc(#loc459)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc158)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc158)
        cir.condition(%4) loc(#loc158)
      } do {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc505)
          cir.scope {
            %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc165)
            %5 = cir.const #cir.int<5> : !u64i loc(#loc507)
            %6 = cir.cmp(gt, %4, %5) : !u64i, !cir.bool loc(#loc508)
            cir.if %6 {
              %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc171)
              %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc172)
              %9 = cir.const #cir.int<1> : !u64i loc(#loc510)
              %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc511)
              %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc171)
              %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc512)
              cir.store %12, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc513)
              cir.scope {
                %22 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
                %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc180)
                %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc180)
                %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!s8i>, !cir.bool loc(#loc515)
                cir.if %25 {
                  %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc182)
                  %27 = cir.const #cir.int<1> : !s32i loc(#loc183)
                  %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc184)
                  cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc182)
                } loc(#loc516)
              } loc(#loc514)
              %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc185)
              %14 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc186)
              %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc23)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc23)
              %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc185)
              %18 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc187)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc188)
              %19 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc189)
              %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc190)
              %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc190)
              cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc189)
            } else {
              %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc28)
              %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc28)
              cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc191)
            } loc(#loc509)
          } loc(#loc506)
        } loc(#loc504)
        cir.break loc(#loc192)
      } loc(#loc503)
    } loc(#loc503)
    cir.return loc(#loc30)
  } loc(#loc456)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc518)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc195)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc519)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc197)
    cir.return loc(#loc194)
  } loc(#loc517)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc520)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc521)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc203)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc204)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc205)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc206)
  cir.func @main(%arg0: !s32i loc(fused[#loc209, #loc210]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc211, #loc212])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc523)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc524)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc208)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc213)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc213)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc214)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc215)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc215)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc216)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc203)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc203)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc217)
    %8 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc525)
    cir.call @CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16_good() : () -> () loc(#loc218)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc204)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc204)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc220)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc205)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc205)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc221)
    %13 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc526)
    cir.call @CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16_bad() : () -> () loc(#loc222)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc206)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc206)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc224)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc225)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc527)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc527)
    cir.return %17 : !s32i loc(#loc527)
  } loc(#loc522)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc227)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc529)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc232)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc232)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc530)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc236)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc236)
        cir.condition(%4) loc(#loc236)
      } do {
        cir.scope {
          %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc533)
          %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc534)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc535)
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc536)
          %7 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc537)
          %8 = cir.const #cir.int<1> : !s32i loc(#loc244)
          %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc244)
          cir.store %9, %5 : !s32i, !cir.ptr<!s32i> loc(#loc535)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc246)
          %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc246)
          cir.store %11, %6 : !s32i, !cir.ptr<!s32i> loc(#loc536)
          cir.scope {
            cir.do {
              %12 = cir.const #cir.int<2> : !s32i loc(#loc251)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc252)
              %14 = cir.const #cir.int<6> : !s32i loc(#loc253)
              %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc254)
              cir.store %15, %5 : !s32i, !cir.ptr<!s32i> loc(#loc539)
              cir.scope {
                %60 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc259)
                %61 = cir.const #cir.int<1> : !s32i loc(#loc260)
                %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc260)
                %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc541)
                cir.if %63 {
                  cir.break loc(#loc262)
                } loc(#loc542)
              } loc(#loc540)
              %16 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc543)
              %17 = cir.const #cir.int<0> : !s32i loc(#loc265)
              %18 = cir.const #cir.int<16> : !u64i loc(#loc544)
              cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc545)
              %19 = cir.const #cir.int<2> : !s32i loc(#loc270)
              %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc270)
              %21 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
              cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc546)
              %22 = cir.const #cir.int<0> : !s32i loc(#loc272)
              %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc272)
              %24 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc75)
              %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc76)
              cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc547)
              %26 = cir.const #cir.int<27015> : !s32i loc(#loc274)
              %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc274)
              %28 = cir.call @htons(%27) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc275)
              %29 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
              cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc548)
              cir.scope {
                %60 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc280)
                %61 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc550)
                %62 = cir.const #cir.int<16> : !u64i loc(#loc551)
                %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc551)
                %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc285)
                %65 = cir.const #cir.int<1> : !s32i loc(#loc286)
                %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc286)
                %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc552)
                cir.if %67 {
                  cir.break loc(#loc288)
                } loc(#loc553)
              } loc(#loc549)
              cir.scope {
                %60 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc291)
                %61 = cir.const #cir.int<5> : !s32i loc(#loc292)
                %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc293)
                %63 = cir.const #cir.int<1> : !s32i loc(#loc294)
                %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc294)
                %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc555)
                cir.if %65 {
                  cir.break loc(#loc296)
                } loc(#loc556)
              } loc(#loc554)
              %30 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc297)
              %31 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc298)
              %32 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc299)
              %33 = cir.call @accept(%30, %31, %32) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc300)
              cir.store %33, %6 : !s32i, !cir.ptr<!s32i> loc(#loc557)
              cir.scope {
                %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc305)
                %61 = cir.const #cir.int<1> : !s32i loc(#loc306)
                %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc306)
                %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc559)
                cir.if %63 {
                  cir.break loc(#loc308)
                } loc(#loc560)
              } loc(#loc558)
              %34 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc309)
              %35 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc310)
              %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc310)
              %37 = cir.const #cir.int<3> : !s32i loc(#loc311)
              %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc311)
              %39 = cir.const #cir.int<8> : !u64i loc(#loc311)
              %40 = cir.binop(mul, %38, %39) : !u64i loc(#loc311)
              %41 = cir.const #cir.int<2> : !s32i loc(#loc311)
              %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc311)
              %43 = cir.binop(add, %40, %42) : !u64i loc(#loc311)
              %44 = cir.const #cir.int<1> : !s32i loc(#loc312)
              %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc312)
              %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc561)
              %47 = cir.const #cir.int<0> : !s32i loc(#loc313)
              %48 = cir.call @recv(%34, %36, %46, %47) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc314)
              %49 = cir.cast(integral, %48 : !s64i), !s32i loc(#loc314)
              cir.store %49, %3 : !s32i, !cir.ptr<!s32i> loc(#loc562)
              cir.scope {
                %60 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc319)
                %61 = cir.const #cir.int<1> : !s32i loc(#loc320)
                %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc320)
                %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc564)
                %64 = cir.ternary(%63, true {
                  %65 = cir.const #true loc(#loc321)
                  cir.yield %65 : !cir.bool loc(#loc321)
                }, false {
                  %65 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc322)
                  %66 = cir.const #cir.int<0> : !s32i loc(#loc323)
                  %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc565)
                  %68 = cir.ternary(%67, true {
                    %69 = cir.const #true loc(#loc321)
                    cir.yield %69 : !cir.bool loc(#loc321)
                  }, false {
                    %69 = cir.const #false loc(#loc321)
                    cir.yield %69 : !cir.bool loc(#loc321)
                  }) : (!cir.bool) -> !cir.bool loc(#loc321)
                  cir.yield %68 : !cir.bool loc(#loc321)
                }) : (!cir.bool) -> !cir.bool loc(#loc321)
                cir.if %64 {
                  cir.break loc(#loc325)
                } loc(#loc566)
              } loc(#loc563)
              %50 = cir.const #cir.int<0> : !s32i loc(#loc326)
              %51 = cir.cast(integral, %50 : !s32i), !s8i loc(#loc326)
              %52 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc327)
              %53 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc328)
              %54 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %52 : !s32i), !cir.ptr<!s8i> loc(#loc328)
              cir.store %51, %54 : !s8i, !cir.ptr<!s8i> loc(#loc567)
              %55 = cir.get_global @strtoul : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i)>> loc(#loc329)
              %56 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc330)
              %57 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc331)
              %58 = cir.const #cir.int<0> : !s32i loc(#loc332)
              %59 = cir.call @strtoul(%56, %57, %58) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc329)
              cir.store %59, %0 : !u64i, !cir.ptr<!u64i> loc(#loc568)
              cir.yield loc(#loc250)
            } while {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc335)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc335)
              cir.condition(%13) loc(#loc335)
            } loc(#loc538)
          } loc(#loc538)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc338)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc339)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc339)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc570)
            cir.if %15 {
              %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc341)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc342)
            } loc(#loc571)
          } loc(#loc569)
          cir.scope {
            %12 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc345)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc346)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc346)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc573)
            cir.if %15 {
              %16 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc348)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc349)
            } loc(#loc574)
          } loc(#loc572)
        } loc(#loc532)
        cir.break loc(#loc350)
      } loc(#loc531)
    } loc(#loc531)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc353)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc353)
        cir.condition(%4) loc(#loc353)
      } do {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc577)
          cir.scope {
            %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc360)
            %5 = cir.const #cir.int<5> : !u64i loc(#loc579)
            %6 = cir.cmp(gt, %4, %5) : !u64i, !cir.bool loc(#loc580)
            %7 = cir.ternary(%6, true {
              %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc364)
              %9 = cir.const #cir.int<100> : !s32i loc(#loc365)
              %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc365)
              %11 = cir.cmp(lt, %8, %10) : !u64i, !cir.bool loc(#loc581)
              %12 = cir.ternary(%11, true {
                %13 = cir.const #true loc(#loc363)
                cir.yield %13 : !cir.bool loc(#loc363)
              }, false {
                %13 = cir.const #false loc(#loc363)
                cir.yield %13 : !cir.bool loc(#loc363)
              }) : (!cir.bool) -> !cir.bool loc(#loc363)
              cir.yield %12 : !cir.bool loc(#loc363)
            }, false {
              %8 = cir.const #false loc(#loc363)
              cir.yield %8 : !cir.bool loc(#loc363)
            }) : (!cir.bool) -> !cir.bool loc(#loc363)
            cir.if %7 {
              %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc369)
              %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc370)
              %10 = cir.const #cir.int<1> : !u64i loc(#loc583)
              %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc584)
              %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc369)
              %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc585)
              cir.store %13, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc586)
              cir.scope {
                %23 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc377)
                %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc378)
                %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc378)
                %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc588)
                cir.if %26 {
                  %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc380)
                  %28 = cir.const #cir.int<1> : !s32i loc(#loc381)
                  %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc382)
                  cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc380)
                } loc(#loc589)
              } loc(#loc587)
              %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc383)
              %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc384)
              %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc385)
              %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc385)
              %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc383)
              %19 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc386)
              cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc387)
              %20 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc388)
              %21 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc389)
              %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc389)
              cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc388)
            } else {
              %8 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc227)
              %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc227)
              cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc390)
            } loc(#loc582)
          } loc(#loc578)
        } loc(#loc576)
        cir.break loc(#loc391)
      } loc(#loc575)
    } loc(#loc575)
    cir.return loc(#loc229)
  } loc(#loc528)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc591)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc396)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc396)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc592)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc400)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc400)
        cir.condition(%4) loc(#loc400)
      } do {
        %3 = cir.const #cir.int<20> : !s32i loc(#loc401)
        %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc401)
        cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc594)
        cir.break loc(#loc403)
      } loc(#loc593)
    } loc(#loc593)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc406)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc406)
        cir.condition(%4) loc(#loc406)
      } do {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc597)
          cir.scope {
            %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc413)
            %5 = cir.const #cir.int<5> : !u64i loc(#loc599)
            %6 = cir.cmp(gt, %4, %5) : !u64i, !cir.bool loc(#loc600)
            cir.if %6 {
              %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc419)
              %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc420)
              %9 = cir.const #cir.int<1> : !u64i loc(#loc602)
              %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc603)
              %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc419)
              %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc604)
              cir.store %12, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc605)
              cir.scope {
                %22 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc427)
                %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc428)
                %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc428)
                %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!s8i>, !cir.bool loc(#loc607)
                cir.if %25 {
                  %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc430)
                  %27 = cir.const #cir.int<1> : !s32i loc(#loc431)
                  %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc432)
                  cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc430)
                } loc(#loc608)
              } loc(#loc606)
              %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc433)
              %14 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc434)
              %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc435)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc435)
              %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc433)
              %18 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc436)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc437)
              %19 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc438)
              %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc439)
              %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc439)
              cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc438)
            } else {
              %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc440)
              %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc440)
              cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc441)
            } loc(#loc601)
          } loc(#loc598)
        } loc(#loc596)
        cir.break loc(#loc442)
      } loc(#loc595)
    } loc(#loc595)
    cir.return loc(#loc393)
  } loc(#loc590)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":181:1)
#loc14 = loc("/usr/include/stdlib.h":183:14)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("/usr/include/stdlib.h":672:1)
#loc18 = loc("/usr/include/stdlib.h":672:45)
#loc19 = loc("/usr/include/stdlib.h":756:1)
#loc20 = loc("/usr/include/stdlib.h":756:70)
#loc21 = loc("/usr/include/string.h":141:1)
#loc22 = loc("/usr/include/string.h":142:14)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":140:34)
#loc24 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc25 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc26 = loc("/usr/include/stdlib.h":687:1)
#loc27 = loc("/usr/include/stdlib.h":687:32)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":146:27)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":50:1)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":151:1)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":52:5)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":52:12)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":54:12)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":54:5)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":55:5)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":127:5)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":55:11)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":57:9)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":125:9)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":62:13)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":62:17)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":63:13)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":63:32)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":64:13)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":64:35)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":65:13)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":65:35)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":66:13)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":66:45)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":67:13)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":110:21)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":77:39)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":77:48)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":77:61)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":77:32)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":77:17)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":77:72)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":78:17)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":81:17)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":78:21)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":78:37)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":79:17)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":80:21)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":82:24)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":82:25)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":82:34)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":82:37)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":82:51)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":82:17)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":82:52)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":83:38)
#loc72 = loc("/usr/include/netinet/in.h":249:5)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":83:17)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":84:43)
#loc75 = loc("/usr/include/netinet/in.h":251:20)
#loc76 = loc("/usr/include/netinet/in.h":33:15)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":84:17)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":85:42)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":85:36)
#loc80 = loc("/usr/include/netinet/in.h":250:15)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":85:17)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":85:50)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":86:17)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":89:17)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":86:26)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":86:58)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":86:59)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":86:68)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":86:82)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":86:21)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":86:88)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":87:17)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":88:21)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":90:17)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":93:17)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":90:28)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":90:42)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":90:21)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":90:61)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":91:17)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":92:21)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":94:39)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":94:53)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":94:59)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":94:32)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":94:17)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":94:63)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":95:17)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":98:17)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":95:21)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":95:37)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":96:17)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":97:21)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":100:35)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":100:49)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":100:62)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":100:80)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":100:83)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":100:30)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":100:17)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":100:84)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":101:17)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":104:17)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":101:21)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":101:35)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":101:48)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":101:51)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":101:65)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":102:17)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":103:21)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":106:43)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":106:29)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":106:17)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":108:24)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":108:32)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":108:45)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":108:51)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":108:17)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":108:52)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":110:20)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":111:13)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":114:13)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":111:17)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":111:33)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":112:13)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":113:30)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":113:17)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":115:13)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":118:13)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":115:17)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":115:33)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":116:13)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":117:30)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":117:17)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":126:9)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":128:5)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":150:5)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":128:11)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":130:9)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":148:9)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":131:13)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":131:20)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":135:13)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":147:13)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":135:17)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":135:24)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":135:43)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":136:13)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":143:13)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":145:13)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":137:36)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":137:43)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":137:48)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":137:59)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":137:60)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":137:17)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":138:17)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":138:49)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":138:21)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":138:33)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":138:39)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":138:40)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":138:46)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":138:45)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":140:17)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":140:24)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":141:27)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":141:17)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":142:17)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":142:22)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":146:17)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":149:9)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":298:1)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":302:1)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":300:5)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":300:13)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":301:5)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":301:13)
#loc199 = loc("/usr/include/stdlib.h":575:1)
#loc200 = loc("/usr/include/stdlib.h":575:41)
#loc201 = loc("/usr/include/time.h":76:1)
#loc202 = loc("/usr/include/time.h":76:38)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":318:15)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":320:15)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":323:15)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":325:15)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":313:1)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":328:1)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":314:1)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":316:27)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":316:22)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":316:5)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":318:5)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":319:5)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":319:70)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":320:5)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":323:5)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":324:5)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":324:69)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":325:5)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":327:12)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":327:5)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":254:27)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":158:1)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":259:1)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":160:5)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":160:12)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":162:12)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":162:5)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":163:5)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":235:5)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":163:11)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":165:9)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":233:9)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":170:13)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":170:17)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":171:13)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":171:32)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":172:13)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":172:35)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":173:13)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":173:35)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":174:13)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":174:45)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":175:13)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":218:21)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":185:39)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":185:48)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":185:61)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":185:32)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":185:17)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":185:72)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":186:17)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":189:17)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":186:21)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":186:37)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":187:17)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":188:21)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":190:24)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":190:25)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":190:34)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":190:37)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":190:51)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":190:17)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":190:52)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":191:38)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":191:17)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":192:43)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":192:17)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":193:42)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":193:36)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":193:17)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":193:50)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":194:17)
#loc279 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":197:17)
#loc280 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":194:26)
#loc281 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":194:58)
#loc282 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":194:59)
#loc283 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":194:68)
#loc284 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":194:82)
#loc285 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":194:21)
#loc286 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":194:88)
#loc287 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":195:17)
#loc288 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":196:21)
#loc289 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":198:17)
#loc290 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":201:17)
#loc291 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":198:28)
#loc292 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":198:42)
#loc293 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":198:21)
#loc294 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":198:61)
#loc295 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":199:17)
#loc296 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":200:21)
#loc297 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":202:39)
#loc298 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":202:53)
#loc299 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":202:59)
#loc300 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":202:32)
#loc301 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":202:17)
#loc302 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":202:63)
#loc303 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":203:17)
#loc304 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":206:17)
#loc305 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":203:21)
#loc306 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":203:37)
#loc307 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":204:17)
#loc308 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":205:21)
#loc309 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":208:35)
#loc310 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":208:49)
#loc311 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":208:62)
#loc312 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":208:80)
#loc313 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":208:83)
#loc314 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":208:30)
#loc315 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":208:17)
#loc316 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":208:84)
#loc317 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":209:17)
#loc318 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":212:17)
#loc319 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":209:21)
#loc320 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":209:35)
#loc321 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":209:48)
#loc322 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":209:51)
#loc323 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":209:65)
#loc324 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":210:17)
#loc325 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":211:21)
#loc326 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":214:43)
#loc327 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":214:29)
#loc328 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":214:17)
#loc329 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":216:24)
#loc330 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":216:32)
#loc331 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":216:45)
#loc332 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":216:51)
#loc333 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":216:17)
#loc334 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":216:52)
#loc335 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":218:20)
#loc336 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":219:13)
#loc337 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":222:13)
#loc338 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":219:17)
#loc339 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":219:33)
#loc340 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":220:13)
#loc341 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":221:30)
#loc342 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":221:17)
#loc343 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":223:13)
#loc344 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":226:13)
#loc345 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":223:17)
#loc346 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":223:33)
#loc347 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":224:13)
#loc348 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":225:30)
#loc349 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":225:17)
#loc350 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":234:9)
#loc351 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":236:5)
#loc352 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":258:5)
#loc353 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":236:11)
#loc354 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":238:9)
#loc355 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":256:9)
#loc356 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":239:13)
#loc357 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":239:20)
#loc358 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":243:13)
#loc359 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":255:13)
#loc360 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":243:17)
#loc361 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":243:24)
#loc362 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":243:43)
#loc363 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":243:45)
#loc364 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":243:48)
#loc365 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":243:55)
#loc366 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":244:13)
#loc367 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":251:13)
#loc368 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":253:13)
#loc369 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":245:36)
#loc370 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":245:43)
#loc371 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":245:48)
#loc372 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":245:59)
#loc373 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":245:60)
#loc374 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":245:17)
#loc375 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":246:17)
#loc376 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":246:49)
#loc377 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":246:21)
#loc378 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":246:33)
#loc379 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":246:39)
#loc380 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":246:40)
#loc381 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":246:46)
#loc382 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":246:45)
#loc383 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":248:17)
#loc384 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":248:24)
#loc385 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":248:34)
#loc386 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":249:27)
#loc387 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":249:17)
#loc388 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":250:17)
#loc389 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":250:22)
#loc390 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":254:17)
#loc391 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":257:9)
#loc392 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":262:1)
#loc393 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":296:1)
#loc394 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":264:5)
#loc395 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":264:12)
#loc396 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":266:12)
#loc397 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":266:5)
#loc398 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":267:5)
#loc399 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":272:5)
#loc400 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":267:11)
#loc401 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":270:16)
#loc402 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":270:9)
#loc403 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":271:9)
#loc404 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":273:5)
#loc405 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":295:5)
#loc406 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":273:11)
#loc407 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":275:9)
#loc408 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":293:9)
#loc409 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":276:13)
#loc410 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":276:20)
#loc411 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":280:13)
#loc412 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":292:13)
#loc413 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":280:17)
#loc414 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":280:24)
#loc415 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":280:43)
#loc416 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":281:13)
#loc417 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":288:13)
#loc418 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":290:13)
#loc419 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":282:36)
#loc420 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":282:43)
#loc421 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":282:48)
#loc422 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":282:59)
#loc423 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":282:60)
#loc424 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":282:17)
#loc425 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":283:17)
#loc426 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":283:49)
#loc427 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":283:21)
#loc428 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":283:33)
#loc429 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":283:39)
#loc430 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":283:40)
#loc431 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":283:46)
#loc432 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":283:45)
#loc433 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":285:17)
#loc434 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":285:24)
#loc435 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":285:34)
#loc436 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":286:27)
#loc437 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":286:17)
#loc438 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":287:17)
#loc439 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":287:22)
#loc440 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":291:27)
#loc441 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":291:17)
#loc442 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_16.c":294:9)
#loc443 = loc(fused[#loc1, #loc2])
#loc444 = loc(fused[#loc3, #loc4])
#loc445 = loc(fused[#loc5, #loc6])
#loc446 = loc(fused[#loc7, #loc8])
#loc447 = loc(fused[#loc9, #loc10])
#loc448 = loc(fused[#loc11, #loc12])
#loc449 = loc(fused[#loc13, #loc14])
#loc450 = loc(fused[#loc15, #loc16])
#loc451 = loc(fused[#loc17, #loc18])
#loc452 = loc(fused[#loc19, #loc20])
#loc453 = loc(fused[#loc21, #loc22])
#loc454 = loc(fused[#loc24, #loc25])
#loc455 = loc(fused[#loc26, #loc27])
#loc456 = loc(fused[#loc29, #loc30])
#loc457 = loc(fused[#loc31, #loc32])
#loc458 = loc(fused[#loc34, #loc33])
#loc459 = loc(fused[#loc35, #loc36])
#loc460 = loc(fused[#loc38, #loc39])
#loc461 = loc(fused[#loc40, #loc41])
#loc462 = loc(fused[#loc42, #loc43])
#loc463 = loc(fused[#loc44, #loc45])
#loc464 = loc(fused[#loc46, #loc47])
#loc465 = loc(fused[#loc48, #loc49])
#loc466 = loc(fused[#loc50, #loc51])
#loc467 = loc(fused[#loc56, #loc57])
#loc468 = loc(fused[#loc58, #loc59])
#loc469 = loc(fused[#loc60, #loc61])
#loc470 = loc(fused[#loc62, #loc59])
#loc471 = loc(fused[#loc64, #loc65])
#loc472 = loc(fused[#loc67, #loc68])
#loc473 = loc(fused[#loc69, #loc70])
#loc474 = loc(fused[#loc73, #loc71])
#loc475 = loc(fused[#loc77, #loc74])
#loc476 = loc(fused[#loc81, #loc82])
#loc477 = loc(fused[#loc83, #loc84])
#loc478 = loc(fused[#loc86, #loc87])
#loc479 = loc(fused[#loc88, #loc89])
#loc480 = loc(fused[#loc90, #loc91])
#loc481 = loc(fused[#loc92, #loc84])
#loc482 = loc(fused[#loc94, #loc95])
#loc483 = loc(fused[#loc98, #loc99])
#loc484 = loc(fused[#loc100, #loc95])
#loc485 = loc(fused[#loc106, #loc107])
#loc486 = loc(fused[#loc108, #loc109])
#loc487 = loc(fused[#loc110, #loc111])
#loc488 = loc(fused[#loc112, #loc109])
#loc489 = loc(fused[#loc116, #loc117])
#loc490 = loc(fused[#loc120, #loc121])
#loc491 = loc(fused[#loc122, #loc123])
#loc492 = loc(fused[#loc124, #loc125])
#loc493 = loc(fused[#loc127, #loc128])
#loc494 = loc(fused[#loc129, #loc123])
#loc495 = loc(fused[#loc133, #loc131])
#loc496 = loc(fused[#loc138, #loc139])
#loc497 = loc(fused[#loc141, #loc142])
#loc498 = loc(fused[#loc143, #loc144])
#loc499 = loc(fused[#loc145, #loc142])
#loc500 = loc(fused[#loc148, #loc149])
#loc501 = loc(fused[#loc150, #loc151])
#loc502 = loc(fused[#loc152, #loc149])
#loc503 = loc(fused[#loc156, #loc157])
#loc504 = loc(fused[#loc159, #loc160])
#loc505 = loc(fused[#loc161, #loc162])
#loc506 = loc(fused[#loc163, #loc164])
#loc507 = loc(fused[#loc166, #loc167])
#loc508 = loc(fused[#loc165, #loc167])
#loc509 = loc(fused[#loc168, #loc169, #loc170, #loc164])
#loc510 = loc(fused[#loc173, #loc174])
#loc511 = loc(fused[#loc172, #loc174])
#loc512 = loc(fused[#loc171, #loc175])
#loc513 = loc(fused[#loc176, #loc175])
#loc514 = loc(fused[#loc177, #loc178])
#loc515 = loc(fused[#loc179, #loc180])
#loc516 = loc(fused[#loc181, #loc178])
#loc517 = loc(fused[#loc193, #loc194])
#loc518 = loc(fused[#loc195, #loc196])
#loc519 = loc(fused[#loc197, #loc198])
#loc520 = loc(fused[#loc199, #loc200])
#loc521 = loc(fused[#loc201, #loc202])
#loc522 = loc(fused[#loc207, #loc208])
#loc525 = loc(fused[#loc218, #loc219])
#loc526 = loc(fused[#loc222, #loc223])
#loc527 = loc(fused[#loc226, #loc225])
#loc528 = loc(fused[#loc228, #loc229])
#loc529 = loc(fused[#loc230, #loc231])
#loc530 = loc(fused[#loc233, #loc232])
#loc531 = loc(fused[#loc234, #loc235])
#loc532 = loc(fused[#loc237, #loc238])
#loc533 = loc(fused[#loc239, #loc240])
#loc534 = loc(fused[#loc241, #loc242])
#loc535 = loc(fused[#loc243, #loc244])
#loc536 = loc(fused[#loc245, #loc246])
#loc537 = loc(fused[#loc247, #loc248])
#loc538 = loc(fused[#loc249, #loc250])
#loc539 = loc(fused[#loc255, #loc256])
#loc540 = loc(fused[#loc257, #loc258])
#loc541 = loc(fused[#loc259, #loc260])
#loc542 = loc(fused[#loc261, #loc258])
#loc543 = loc(fused[#loc263, #loc264])
#loc544 = loc(fused[#loc266, #loc267])
#loc545 = loc(fused[#loc268, #loc269])
#loc546 = loc(fused[#loc271, #loc270])
#loc547 = loc(fused[#loc273, #loc272])
#loc548 = loc(fused[#loc276, #loc277])
#loc549 = loc(fused[#loc278, #loc279])
#loc550 = loc(fused[#loc281, #loc282])
#loc551 = loc(fused[#loc283, #loc284])
#loc552 = loc(fused[#loc285, #loc286])
#loc553 = loc(fused[#loc287, #loc279])
#loc554 = loc(fused[#loc289, #loc290])
#loc555 = loc(fused[#loc293, #loc294])
#loc556 = loc(fused[#loc295, #loc290])
#loc557 = loc(fused[#loc301, #loc302])
#loc558 = loc(fused[#loc303, #loc304])
#loc559 = loc(fused[#loc305, #loc306])
#loc560 = loc(fused[#loc307, #loc304])
#loc561 = loc(fused[#loc311, #loc312])
#loc562 = loc(fused[#loc315, #loc316])
#loc563 = loc(fused[#loc317, #loc318])
#loc564 = loc(fused[#loc319, #loc320])
#loc565 = loc(fused[#loc322, #loc323])
#loc566 = loc(fused[#loc324, #loc318])
#loc567 = loc(fused[#loc328, #loc326])
#loc568 = loc(fused[#loc333, #loc334])
#loc569 = loc(fused[#loc336, #loc337])
#loc570 = loc(fused[#loc338, #loc339])
#loc571 = loc(fused[#loc340, #loc337])
#loc572 = loc(fused[#loc343, #loc344])
#loc573 = loc(fused[#loc345, #loc346])
#loc574 = loc(fused[#loc347, #loc344])
#loc575 = loc(fused[#loc351, #loc352])
#loc576 = loc(fused[#loc354, #loc355])
#loc577 = loc(fused[#loc356, #loc357])
#loc578 = loc(fused[#loc358, #loc359])
#loc579 = loc(fused[#loc361, #loc362])
#loc580 = loc(fused[#loc360, #loc362])
#loc581 = loc(fused[#loc364, #loc365])
#loc582 = loc(fused[#loc366, #loc367, #loc368, #loc359])
#loc583 = loc(fused[#loc371, #loc372])
#loc584 = loc(fused[#loc370, #loc372])
#loc585 = loc(fused[#loc369, #loc373])
#loc586 = loc(fused[#loc374, #loc373])
#loc587 = loc(fused[#loc375, #loc376])
#loc588 = loc(fused[#loc377, #loc378])
#loc589 = loc(fused[#loc379, #loc376])
#loc590 = loc(fused[#loc392, #loc393])
#loc591 = loc(fused[#loc394, #loc395])
#loc592 = loc(fused[#loc397, #loc396])
#loc593 = loc(fused[#loc398, #loc399])
#loc594 = loc(fused[#loc402, #loc401])
#loc595 = loc(fused[#loc404, #loc405])
#loc596 = loc(fused[#loc407, #loc408])
#loc597 = loc(fused[#loc409, #loc410])
#loc598 = loc(fused[#loc411, #loc412])
#loc599 = loc(fused[#loc414, #loc415])
#loc600 = loc(fused[#loc413, #loc415])
#loc601 = loc(fused[#loc416, #loc417, #loc418, #loc412])
#loc602 = loc(fused[#loc421, #loc422])
#loc603 = loc(fused[#loc420, #loc422])
#loc604 = loc(fused[#loc419, #loc423])
#loc605 = loc(fused[#loc424, #loc423])
#loc606 = loc(fused[#loc425, #loc426])
#loc607 = loc(fused[#loc427, #loc428])
#loc608 = loc(fused[#loc429, #loc426])
