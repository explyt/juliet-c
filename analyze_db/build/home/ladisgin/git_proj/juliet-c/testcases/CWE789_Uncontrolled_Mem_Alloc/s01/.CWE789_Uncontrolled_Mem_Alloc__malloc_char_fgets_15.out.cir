!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":318:10)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":318:14)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":318:20)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":318:32)
#true = #cir.bool<true> : !cir.bool
#loc466 = loc(fused[#loc118, #loc119])
#loc467 = loc(fused[#loc120, #loc121])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc426)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc427)
  cir.func private @strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc428)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc429)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc10)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc430)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc431)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc432)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc17)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc433)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc20)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc435)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc25)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc25)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc436)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc29)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc439)
            %5 = cir.const #cir.zero : !cir.array<!s8i x 26> loc(#loc439)
            cir.store %5, %4 : !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>> loc(#loc439)
            cir.scope {
              %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc37)
              %7 = cir.const #cir.int<3> : !s32i loc(#loc38)
              %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc38)
              %9 = cir.const #cir.int<8> : !u64i loc(#loc38)
              %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc38)
              %11 = cir.const #cir.int<2> : !s32i loc(#loc38)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc38)
              %13 = cir.binop(add, %10, %12) : !u64i loc(#loc38)
              %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc38)
              %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc427)
              %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc39)
              %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc40)
              %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
              %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc41)
              %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc441)
              cir.if %20 {
                %21 = cir.get_global @strtoul : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i)>> loc(#loc45)
                %22 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc46)
                %23 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc47)
                %24 = cir.const #cir.int<0> : !s32i loc(#loc48)
                %25 = cir.call @strtoul(%22, %23, %24) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc45)
                cir.store %25, %0 : !u64i, !cir.ptr<!u64i> loc(#loc443)
              } else {
                %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
                %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
                cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc51)
              } loc(#loc442)
            } loc(#loc440)
          } loc(#loc438)
          cir.break loc(#loc52)
        } loc(#loc30)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc10)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc10)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc54)
          cir.break loc(#loc55)
        } loc(#loc53)
        cir.yield loc(#loc27)
      } loc(#loc27)
    } loc(#loc437)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc58)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc446)
            cir.scope {
              %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc66)
              %6 = cir.const #cir.int<5> : !u64i loc(#loc448)
              %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc449)
              cir.if %7 {
                %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc72)
                %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc73)
                %10 = cir.const #cir.int<1> : !u64i loc(#loc451)
                %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc452)
                %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc72)
                %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc453)
                cir.store %13, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc454)
                cir.scope {
                  %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
                  %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc81)
                  %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc81)
                  %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc456)
                  cir.if %26 {
                    %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc83)
                    %28 = cir.const #cir.int<1> : !s32i loc(#loc84)
                    %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc85)
                    cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc83)
                  } loc(#loc457)
                } loc(#loc455)
                %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc86)
                %15 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
                %16 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc17)
                %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc17)
                %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc86)
                %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
                cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc89)
                %20 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc90)
                %21 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
                %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc91)
                cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc90)
              } else {
                %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc20)
                %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc20)
                cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc92)
              } loc(#loc450)
            } loc(#loc447)
          } loc(#loc445)
          cir.break loc(#loc93)
        } loc(#loc59)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc95)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc95)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc96)
          cir.break loc(#loc97)
        } loc(#loc94)
        cir.yield loc(#loc56)
      } loc(#loc56)
    } loc(#loc444)
    cir.return loc(#loc22)
  } loc(#loc434)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc459)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc100)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc460)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc102)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc461)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc104)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc462)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc106)
    cir.return loc(#loc99)
  } loc(#loc458)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc463)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc464)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc112)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc113)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc114)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc115)
  cir.func @main(%arg0: !s32i loc(fused[#loc118, #loc119]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc120, #loc121])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc466)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc467)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc117)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc122)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc122)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc123)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc124)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc124)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc125)
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc112)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc112)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc126)
    %8 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc468)
    cir.call @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15_good() : () -> () loc(#loc127)
    %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc113)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc113)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc129)
    %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc114)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc114)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    %13 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc469)
    cir.call @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15_bad() : () -> () loc(#loc131)
    %14 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc115)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc115)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc133)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc134)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc470)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc470)
    cir.return %17 : !s32i loc(#loc470)
  } loc(#loc465)
  cir.global "private" constant cir_private dsolocal @".str.8" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc136)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc472)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc141)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc141)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc473)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc145)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc476)
            %5 = cir.const #cir.zero : !cir.array<!s8i x 26> loc(#loc476)
            cir.store %5, %4 : !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>> loc(#loc476)
            cir.scope {
              %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc153)
              %7 = cir.const #cir.int<3> : !s32i loc(#loc154)
              %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc154)
              %9 = cir.const #cir.int<8> : !u64i loc(#loc154)
              %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc154)
              %11 = cir.const #cir.int<2> : !s32i loc(#loc154)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc154)
              %13 = cir.binop(add, %10, %12) : !u64i loc(#loc154)
              %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc154)
              %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc427)
              %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc155)
              %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc156)
              %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc157)
              %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc157)
              %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc478)
              cir.if %20 {
                %21 = cir.get_global @strtoul : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i)>> loc(#loc161)
                %22 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc162)
                %23 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc163)
                %24 = cir.const #cir.int<0> : !s32i loc(#loc164)
                %25 = cir.call @strtoul(%22, %23, %24) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc161)
                cir.store %25, %0 : !u64i, !cir.ptr<!u64i> loc(#loc480)
              } else {
                %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc167)
                %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc167)
                cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc168)
              } loc(#loc479)
            } loc(#loc477)
          } loc(#loc475)
          cir.break loc(#loc169)
        } loc(#loc146)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc171)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc171)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc172)
          cir.break loc(#loc173)
        } loc(#loc170)
        cir.yield loc(#loc143)
      } loc(#loc143)
    } loc(#loc474)
    cir.scope {
      %3 = cir.const #cir.int<8> : !s32i loc(#loc176)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc178)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc178)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc179)
          cir.break loc(#loc180)
        } loc(#loc177)
        cir.case(default, []) {
          cir.scope {
            %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc483)
            cir.scope {
              %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc188)
              %6 = cir.const #cir.int<5> : !u64i loc(#loc485)
              %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc486)
              %8 = cir.ternary(%7, true {
                %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc192)
                %10 = cir.const #cir.int<100> : !s32i loc(#loc193)
                %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc193)
                %12 = cir.cmp(lt, %9, %11) : !u64i, !cir.bool loc(#loc487)
                %13 = cir.ternary(%12, true {
                  %14 = cir.const #true loc(#loc191)
                  cir.yield %14 : !cir.bool loc(#loc191)
                }, false {
                  %14 = cir.const #false loc(#loc191)
                  cir.yield %14 : !cir.bool loc(#loc191)
                }) : (!cir.bool) -> !cir.bool loc(#loc191)
                cir.yield %13 : !cir.bool loc(#loc191)
              }, false {
                %9 = cir.const #false loc(#loc191)
                cir.yield %9 : !cir.bool loc(#loc191)
              }) : (!cir.bool) -> !cir.bool loc(#loc191)
              cir.if %8 {
                %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc197)
                %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc198)
                %11 = cir.const #cir.int<1> : !u64i loc(#loc489)
                %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc490)
                %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc197)
                %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc491)
                cir.store %14, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc492)
                cir.scope {
                  %24 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc205)
                  %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc206)
                  %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc206)
                  %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc494)
                  cir.if %27 {
                    %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc208)
                    %29 = cir.const #cir.int<1> : !s32i loc(#loc209)
                    %30 = cir.unary(minus, %29) : !s32i, !s32i loc(#loc210)
                    cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc208)
                  } loc(#loc495)
                } loc(#loc493)
                %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc211)
                %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc212)
                %17 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc213)
                %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc213)
                %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc211)
                %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc214)
                cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc215)
                %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc216)
                %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc217)
                %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc217)
                cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc216)
              } else {
                %9 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc136)
                %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc136)
                cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc218)
              } loc(#loc488)
            } loc(#loc484)
          } loc(#loc482)
          cir.break loc(#loc219)
        } loc(#loc181)
        cir.yield loc(#loc174)
      } loc(#loc174)
    } loc(#loc481)
    cir.return loc(#loc138)
  } loc(#loc471)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc497)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc224)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc224)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc498)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc228)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc501)
            %5 = cir.const #cir.zero : !cir.array<!s8i x 26> loc(#loc501)
            cir.store %5, %4 : !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>> loc(#loc501)
            cir.scope {
              %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc236)
              %7 = cir.const #cir.int<3> : !s32i loc(#loc237)
              %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc237)
              %9 = cir.const #cir.int<8> : !u64i loc(#loc237)
              %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc237)
              %11 = cir.const #cir.int<2> : !s32i loc(#loc237)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc237)
              %13 = cir.binop(add, %10, %12) : !u64i loc(#loc237)
              %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc237)
              %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc427)
              %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc238)
              %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc239)
              %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc240)
              %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc240)
              %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc503)
              cir.if %20 {
                %21 = cir.get_global @strtoul : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i)>> loc(#loc244)
                %22 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc245)
                %23 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc246)
                %24 = cir.const #cir.int<0> : !s32i loc(#loc247)
                %25 = cir.call @strtoul(%22, %23, %24) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc244)
                cir.store %25, %0 : !u64i, !cir.ptr<!u64i> loc(#loc505)
              } else {
                %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc250)
                %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc250)
                cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc251)
              } loc(#loc504)
            } loc(#loc502)
          } loc(#loc500)
          cir.break loc(#loc252)
        } loc(#loc229)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc254)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc254)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc255)
          cir.break loc(#loc256)
        } loc(#loc253)
        cir.yield loc(#loc226)
      } loc(#loc226)
    } loc(#loc499)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc259)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc508)
            cir.scope {
              %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc267)
              %6 = cir.const #cir.int<5> : !u64i loc(#loc510)
              %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc511)
              %8 = cir.ternary(%7, true {
                %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc271)
                %10 = cir.const #cir.int<100> : !s32i loc(#loc272)
                %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc272)
                %12 = cir.cmp(lt, %9, %11) : !u64i, !cir.bool loc(#loc512)
                %13 = cir.ternary(%12, true {
                  %14 = cir.const #true loc(#loc270)
                  cir.yield %14 : !cir.bool loc(#loc270)
                }, false {
                  %14 = cir.const #false loc(#loc270)
                  cir.yield %14 : !cir.bool loc(#loc270)
                }) : (!cir.bool) -> !cir.bool loc(#loc270)
                cir.yield %13 : !cir.bool loc(#loc270)
              }, false {
                %9 = cir.const #false loc(#loc270)
                cir.yield %9 : !cir.bool loc(#loc270)
              }) : (!cir.bool) -> !cir.bool loc(#loc270)
              cir.if %8 {
                %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc276)
                %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc277)
                %11 = cir.const #cir.int<1> : !u64i loc(#loc514)
                %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc515)
                %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc276)
                %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc516)
                cir.store %14, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc517)
                cir.scope {
                  %24 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc284)
                  %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc285)
                  %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc285)
                  %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc519)
                  cir.if %27 {
                    %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc287)
                    %29 = cir.const #cir.int<1> : !s32i loc(#loc288)
                    %30 = cir.unary(minus, %29) : !s32i, !s32i loc(#loc289)
                    cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc287)
                  } loc(#loc520)
                } loc(#loc518)
                %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc290)
                %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc291)
                %17 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc292)
                %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc292)
                %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc290)
                %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc293)
                cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc294)
                %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc295)
                %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc296)
                %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc296)
                cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc295)
              } else {
                %9 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc297)
                %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc297)
                cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc298)
              } loc(#loc513)
            } loc(#loc509)
          } loc(#loc507)
          cir.break loc(#loc299)
        } loc(#loc260)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc301)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc301)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc302)
          cir.break loc(#loc303)
        } loc(#loc300)
        cir.yield loc(#loc257)
      } loc(#loc257)
    } loc(#loc506)
    cir.return loc(#loc221)
  } loc(#loc496)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc522)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc308)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc308)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc523)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc312)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc314)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc314)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc315)
          cir.break loc(#loc316)
        } loc(#loc313)
        cir.case(default, []) {
          %4 = cir.const #cir.int<20> : !s32i loc(#loc318)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc318)
          cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc525)
          cir.break loc(#loc320)
        } loc(#loc317)
        cir.yield loc(#loc310)
      } loc(#loc310)
    } loc(#loc524)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc323)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc528)
            cir.scope {
              %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc331)
              %6 = cir.const #cir.int<5> : !u64i loc(#loc530)
              %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc531)
              cir.if %7 {
                %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc337)
                %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc338)
                %10 = cir.const #cir.int<1> : !u64i loc(#loc533)
                %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc534)
                %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc337)
                %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc535)
                cir.store %13, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc536)
                cir.scope {
                  %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc345)
                  %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc346)
                  %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc346)
                  %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc538)
                  cir.if %26 {
                    %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc348)
                    %28 = cir.const #cir.int<1> : !s32i loc(#loc349)
                    %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc350)
                    cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc348)
                  } loc(#loc539)
                } loc(#loc537)
                %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc351)
                %15 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc352)
                %16 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc353)
                %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc353)
                %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc351)
                %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc354)
                cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc355)
                %20 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc356)
                %21 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc357)
                %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc357)
                cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc356)
              } else {
                %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc358)
                %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc358)
                cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc359)
              } loc(#loc532)
            } loc(#loc529)
          } loc(#loc527)
          cir.break loc(#loc360)
        } loc(#loc324)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc362)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc362)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc363)
          cir.break loc(#loc364)
        } loc(#loc361)
        cir.yield loc(#loc321)
      } loc(#loc321)
    } loc(#loc526)
    cir.return loc(#loc305)
  } loc(#loc521)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc541)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc369)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc369)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc542)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc373)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.const #cir.int<20> : !s32i loc(#loc375)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc375)
          cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc544)
          cir.break loc(#loc377)
        } loc(#loc374)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc379)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc379)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc380)
          cir.break loc(#loc381)
        } loc(#loc378)
        cir.yield loc(#loc371)
      } loc(#loc371)
    } loc(#loc543)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc384)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc547)
            cir.scope {
              %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc392)
              %6 = cir.const #cir.int<5> : !u64i loc(#loc549)
              %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc550)
              cir.if %7 {
                %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc398)
                %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc399)
                %10 = cir.const #cir.int<1> : !u64i loc(#loc552)
                %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc553)
                %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc398)
                %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc554)
                cir.store %13, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc555)
                cir.scope {
                  %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc406)
                  %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc407)
                  %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc407)
                  %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc557)
                  cir.if %26 {
                    %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc409)
                    %28 = cir.const #cir.int<1> : !s32i loc(#loc410)
                    %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc411)
                    cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc409)
                  } loc(#loc558)
                } loc(#loc556)
                %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc412)
                %15 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc413)
                %16 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc414)
                %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc414)
                %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc412)
                %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc415)
                cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc416)
                %20 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc417)
                %21 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc418)
                %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc418)
                cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc417)
              } else {
                %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc419)
                %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc419)
                cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc420)
              } loc(#loc551)
            } loc(#loc548)
          } loc(#loc546)
          cir.break loc(#loc421)
        } loc(#loc385)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc423)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc423)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc424)
          cir.break loc(#loc425)
        } loc(#loc422)
        cir.yield loc(#loc382)
      } loc(#loc382)
    } loc(#loc545)
    cir.return loc(#loc366)
  } loc(#loc540)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":181:1)
#loc6 = loc("/usr/include/stdlib.h":183:14)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":48:23)
#loc10 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":54:19)
#loc11 = loc("/usr/include/stdlib.h":672:1)
#loc12 = loc("/usr/include/stdlib.h":672:45)
#loc13 = loc("/usr/include/stdlib.h":756:1)
#loc14 = loc("/usr/include/stdlib.h":756:70)
#loc15 = loc("/usr/include/string.h":141:1)
#loc16 = loc("/usr/include/string.h":142:14)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":70:30)
#loc18 = loc("/usr/include/stdlib.h":687:1)
#loc19 = loc("/usr/include/stdlib.h":687:32)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":76:23)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":30:1)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":85:1)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":32:5)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":32:12)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":34:12)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":34:5)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":35:5)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":56:5)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":35:12)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":37:5)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":38:5)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":50:5)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":39:9)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":39:45)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":41:9)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":49:9)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":41:19)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":41:32)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":41:49)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":41:13)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":41:59)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":42:9)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":45:9)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":47:9)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":44:20)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":44:28)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":44:41)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":44:47)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":44:13)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":44:48)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":48:13)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":51:5)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":52:5)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":54:9)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":55:9)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":57:5)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":84:5)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":57:12)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":59:5)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":60:5)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":78:5)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":61:9)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":61:16)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":65:9)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":77:9)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":65:13)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":65:20)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":65:39)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":66:9)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":73:9)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":75:9)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":67:32)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":67:39)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":67:44)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":67:55)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":67:56)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":67:13)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":68:13)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":68:45)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":68:17)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":68:29)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":68:35)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":68:36)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":68:42)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":68:41)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":70:13)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":70:20)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":71:23)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":71:13)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":72:13)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":72:18)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":76:13)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":79:5)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":80:5)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":82:19)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":82:9)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":83:9)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":301:1)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":307:1)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":303:5)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":303:14)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":304:5)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":304:14)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":305:5)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":305:14)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":306:5)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":306:14)
#loc108 = loc("/usr/include/stdlib.h":575:1)
#loc109 = loc("/usr/include/stdlib.h":575:41)
#loc110 = loc("/usr/include/time.h":76:1)
#loc111 = loc("/usr/include/time.h":76:38)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":323:15)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":325:15)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":328:15)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":330:15)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":318:1)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":333:1)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":319:1)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":321:27)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":321:22)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":321:5)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":323:5)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":324:5)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":324:62)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":325:5)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":328:5)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":329:5)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":329:61)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":330:5)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":332:12)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":332:5)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":142:23)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":92:1)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":147:1)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":94:5)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":94:12)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":96:12)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":96:5)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":97:5)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":118:5)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":97:12)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":99:5)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":100:5)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":112:5)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":101:9)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":101:45)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":103:9)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":111:9)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":103:19)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":103:32)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":103:49)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":103:13)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":103:59)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":104:9)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":107:9)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":109:9)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":106:20)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":106:28)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":106:41)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":106:47)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":106:13)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":106:48)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":110:23)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":110:13)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":113:5)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":114:5)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":116:19)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":116:9)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":117:9)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":119:5)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":146:5)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":119:12)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":121:5)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":123:19)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":123:9)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":124:9)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":125:5)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":126:5)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":144:5)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":127:9)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":127:16)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":131:9)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":143:9)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":131:13)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":131:20)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":131:39)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":131:41)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":131:44)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":131:51)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":132:9)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":139:9)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":141:9)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":133:32)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":133:39)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":133:44)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":133:55)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":133:56)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":133:13)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":134:13)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":134:45)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":134:17)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":134:29)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":134:35)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":134:36)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":134:42)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":134:41)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":136:13)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":136:20)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":136:30)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":137:23)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":137:13)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":138:13)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":138:18)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":142:13)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":145:5)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":150:1)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":205:1)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":152:5)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":152:12)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":154:12)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":154:5)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":155:5)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":176:5)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":155:12)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":157:5)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":158:5)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":170:5)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":159:9)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":159:45)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":161:9)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":169:9)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":161:19)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":161:32)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":161:49)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":161:13)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":161:59)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":162:9)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":165:9)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":167:9)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":164:20)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":164:28)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":164:41)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":164:47)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":164:13)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":164:48)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":168:23)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":168:13)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":171:5)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":172:5)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":174:19)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":174:9)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":175:9)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":177:5)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":204:5)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":177:12)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":179:5)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":180:5)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":198:5)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":181:9)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":181:16)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":185:9)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":197:9)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":185:13)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":185:20)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":185:39)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":185:41)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":185:44)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":185:51)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":186:9)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":193:9)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":195:9)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":187:32)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":187:39)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":187:44)
#loc279 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":187:55)
#loc280 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":187:56)
#loc281 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":187:13)
#loc282 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":188:13)
#loc283 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":188:45)
#loc284 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":188:17)
#loc285 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":188:29)
#loc286 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":188:35)
#loc287 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":188:36)
#loc288 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":188:42)
#loc289 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":188:41)
#loc290 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":190:13)
#loc291 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":190:20)
#loc292 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":190:30)
#loc293 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":191:23)
#loc294 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":191:13)
#loc295 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":192:13)
#loc296 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":192:18)
#loc297 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":196:23)
#loc298 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":196:13)
#loc299 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":199:5)
#loc300 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":200:5)
#loc301 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":202:19)
#loc302 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":202:9)
#loc303 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":203:9)
#loc304 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":208:1)
#loc305 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":252:1)
#loc306 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":210:5)
#loc307 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":210:12)
#loc308 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":212:12)
#loc309 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":212:5)
#loc310 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":213:5)
#loc311 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":223:5)
#loc312 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":213:12)
#loc313 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":215:5)
#loc314 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":217:19)
#loc315 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":217:9)
#loc316 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":218:9)
#loc317 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":219:5)
#loc318 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":221:16)
#loc319 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":221:9)
#loc320 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":222:9)
#loc321 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":224:5)
#loc322 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":251:5)
#loc323 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":224:12)
#loc324 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":226:5)
#loc325 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":227:5)
#loc326 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":245:5)
#loc327 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":228:9)
#loc328 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":228:16)
#loc329 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":232:9)
#loc330 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":244:9)
#loc331 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":232:13)
#loc332 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":232:20)
#loc333 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":232:39)
#loc334 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":233:9)
#loc335 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":240:9)
#loc336 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":242:9)
#loc337 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":234:32)
#loc338 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":234:39)
#loc339 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":234:44)
#loc340 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":234:55)
#loc341 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":234:56)
#loc342 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":234:13)
#loc343 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":235:13)
#loc344 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":235:45)
#loc345 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":235:17)
#loc346 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":235:29)
#loc347 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":235:35)
#loc348 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":235:36)
#loc349 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":235:42)
#loc350 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":235:41)
#loc351 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":237:13)
#loc352 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":237:20)
#loc353 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":237:30)
#loc354 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":238:23)
#loc355 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":238:13)
#loc356 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":239:13)
#loc357 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":239:18)
#loc358 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":243:23)
#loc359 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":243:13)
#loc360 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":246:5)
#loc361 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":247:5)
#loc362 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":249:19)
#loc363 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":249:9)
#loc364 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":250:9)
#loc365 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":255:1)
#loc366 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":299:1)
#loc367 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":257:5)
#loc368 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":257:12)
#loc369 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":259:12)
#loc370 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":259:5)
#loc371 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":260:5)
#loc372 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":270:5)
#loc373 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":260:12)
#loc374 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":262:5)
#loc375 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":264:16)
#loc376 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":264:9)
#loc377 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":265:9)
#loc378 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":266:5)
#loc379 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":268:19)
#loc380 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":268:9)
#loc381 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":269:9)
#loc382 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":271:5)
#loc383 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":298:5)
#loc384 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":271:12)
#loc385 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":273:5)
#loc386 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":274:5)
#loc387 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":292:5)
#loc388 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":275:9)
#loc389 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":275:16)
#loc390 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":279:9)
#loc391 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":291:9)
#loc392 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":279:13)
#loc393 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":279:20)
#loc394 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":279:39)
#loc395 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":280:9)
#loc396 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":287:9)
#loc397 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":289:9)
#loc398 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":281:32)
#loc399 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":281:39)
#loc400 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":281:44)
#loc401 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":281:55)
#loc402 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":281:56)
#loc403 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":281:13)
#loc404 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":282:13)
#loc405 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":282:45)
#loc406 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":282:17)
#loc407 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":282:29)
#loc408 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":282:35)
#loc409 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":282:36)
#loc410 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":282:42)
#loc411 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":282:41)
#loc412 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":284:13)
#loc413 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":284:20)
#loc414 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":284:30)
#loc415 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":285:23)
#loc416 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":285:13)
#loc417 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":286:13)
#loc418 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":286:18)
#loc419 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":290:23)
#loc420 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":290:13)
#loc421 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":293:5)
#loc422 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":294:5)
#loc423 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":296:19)
#loc424 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":296:9)
#loc425 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_15.c":297:9)
#loc426 = loc(fused[#loc1, #loc2])
#loc427 = loc(fused[#loc3, #loc4])
#loc428 = loc(fused[#loc5, #loc6])
#loc429 = loc(fused[#loc7, #loc8])
#loc430 = loc(fused[#loc11, #loc12])
#loc431 = loc(fused[#loc13, #loc14])
#loc432 = loc(fused[#loc15, #loc16])
#loc433 = loc(fused[#loc18, #loc19])
#loc434 = loc(fused[#loc21, #loc22])
#loc435 = loc(fused[#loc23, #loc24])
#loc436 = loc(fused[#loc26, #loc25])
#loc437 = loc(fused[#loc27, #loc28])
#loc438 = loc(fused[#loc31, #loc32])
#loc439 = loc(fused[#loc33, #loc34])
#loc440 = loc(fused[#loc35, #loc36])
#loc441 = loc(fused[#loc40, #loc41])
#loc442 = loc(fused[#loc42, #loc43, #loc44, #loc36])
#loc443 = loc(fused[#loc49, #loc50])
#loc444 = loc(fused[#loc56, #loc57])
#loc445 = loc(fused[#loc60, #loc61])
#loc446 = loc(fused[#loc62, #loc63])
#loc447 = loc(fused[#loc64, #loc65])
#loc448 = loc(fused[#loc67, #loc68])
#loc449 = loc(fused[#loc66, #loc68])
#loc450 = loc(fused[#loc69, #loc70, #loc71, #loc65])
#loc451 = loc(fused[#loc74, #loc75])
#loc452 = loc(fused[#loc73, #loc75])
#loc453 = loc(fused[#loc72, #loc76])
#loc454 = loc(fused[#loc77, #loc76])
#loc455 = loc(fused[#loc78, #loc79])
#loc456 = loc(fused[#loc80, #loc81])
#loc457 = loc(fused[#loc82, #loc79])
#loc458 = loc(fused[#loc98, #loc99])
#loc459 = loc(fused[#loc100, #loc101])
#loc460 = loc(fused[#loc102, #loc103])
#loc461 = loc(fused[#loc104, #loc105])
#loc462 = loc(fused[#loc106, #loc107])
#loc463 = loc(fused[#loc108, #loc109])
#loc464 = loc(fused[#loc110, #loc111])
#loc465 = loc(fused[#loc116, #loc117])
#loc468 = loc(fused[#loc127, #loc128])
#loc469 = loc(fused[#loc131, #loc132])
#loc470 = loc(fused[#loc135, #loc134])
#loc471 = loc(fused[#loc137, #loc138])
#loc472 = loc(fused[#loc139, #loc140])
#loc473 = loc(fused[#loc142, #loc141])
#loc474 = loc(fused[#loc143, #loc144])
#loc475 = loc(fused[#loc147, #loc148])
#loc476 = loc(fused[#loc149, #loc150])
#loc477 = loc(fused[#loc151, #loc152])
#loc478 = loc(fused[#loc156, #loc157])
#loc479 = loc(fused[#loc158, #loc159, #loc160, #loc152])
#loc480 = loc(fused[#loc165, #loc166])
#loc481 = loc(fused[#loc174, #loc175])
#loc482 = loc(fused[#loc182, #loc183])
#loc483 = loc(fused[#loc184, #loc185])
#loc484 = loc(fused[#loc186, #loc187])
#loc485 = loc(fused[#loc189, #loc190])
#loc486 = loc(fused[#loc188, #loc190])
#loc487 = loc(fused[#loc192, #loc193])
#loc488 = loc(fused[#loc194, #loc195, #loc196, #loc187])
#loc489 = loc(fused[#loc199, #loc200])
#loc490 = loc(fused[#loc198, #loc200])
#loc491 = loc(fused[#loc197, #loc201])
#loc492 = loc(fused[#loc202, #loc201])
#loc493 = loc(fused[#loc203, #loc204])
#loc494 = loc(fused[#loc205, #loc206])
#loc495 = loc(fused[#loc207, #loc204])
#loc496 = loc(fused[#loc220, #loc221])
#loc497 = loc(fused[#loc222, #loc223])
#loc498 = loc(fused[#loc225, #loc224])
#loc499 = loc(fused[#loc226, #loc227])
#loc500 = loc(fused[#loc230, #loc231])
#loc501 = loc(fused[#loc232, #loc233])
#loc502 = loc(fused[#loc234, #loc235])
#loc503 = loc(fused[#loc239, #loc240])
#loc504 = loc(fused[#loc241, #loc242, #loc243, #loc235])
#loc505 = loc(fused[#loc248, #loc249])
#loc506 = loc(fused[#loc257, #loc258])
#loc507 = loc(fused[#loc261, #loc262])
#loc508 = loc(fused[#loc263, #loc264])
#loc509 = loc(fused[#loc265, #loc266])
#loc510 = loc(fused[#loc268, #loc269])
#loc511 = loc(fused[#loc267, #loc269])
#loc512 = loc(fused[#loc271, #loc272])
#loc513 = loc(fused[#loc273, #loc274, #loc275, #loc266])
#loc514 = loc(fused[#loc278, #loc279])
#loc515 = loc(fused[#loc277, #loc279])
#loc516 = loc(fused[#loc276, #loc280])
#loc517 = loc(fused[#loc281, #loc280])
#loc518 = loc(fused[#loc282, #loc283])
#loc519 = loc(fused[#loc284, #loc285])
#loc520 = loc(fused[#loc286, #loc283])
#loc521 = loc(fused[#loc304, #loc305])
#loc522 = loc(fused[#loc306, #loc307])
#loc523 = loc(fused[#loc309, #loc308])
#loc524 = loc(fused[#loc310, #loc311])
#loc525 = loc(fused[#loc319, #loc318])
#loc526 = loc(fused[#loc321, #loc322])
#loc527 = loc(fused[#loc325, #loc326])
#loc528 = loc(fused[#loc327, #loc328])
#loc529 = loc(fused[#loc329, #loc330])
#loc530 = loc(fused[#loc332, #loc333])
#loc531 = loc(fused[#loc331, #loc333])
#loc532 = loc(fused[#loc334, #loc335, #loc336, #loc330])
#loc533 = loc(fused[#loc339, #loc340])
#loc534 = loc(fused[#loc338, #loc340])
#loc535 = loc(fused[#loc337, #loc341])
#loc536 = loc(fused[#loc342, #loc341])
#loc537 = loc(fused[#loc343, #loc344])
#loc538 = loc(fused[#loc345, #loc346])
#loc539 = loc(fused[#loc347, #loc344])
#loc540 = loc(fused[#loc365, #loc366])
#loc541 = loc(fused[#loc367, #loc368])
#loc542 = loc(fused[#loc370, #loc369])
#loc543 = loc(fused[#loc371, #loc372])
#loc544 = loc(fused[#loc376, #loc375])
#loc545 = loc(fused[#loc382, #loc383])
#loc546 = loc(fused[#loc386, #loc387])
#loc547 = loc(fused[#loc388, #loc389])
#loc548 = loc(fused[#loc390, #loc391])
#loc549 = loc(fused[#loc393, #loc394])
#loc550 = loc(fused[#loc392, #loc394])
#loc551 = loc(fused[#loc395, #loc396, #loc397, #loc391])
#loc552 = loc(fused[#loc400, #loc401])
#loc553 = loc(fused[#loc399, #loc401])
#loc554 = loc(fused[#loc398, #loc402])
#loc555 = loc(fused[#loc403, #loc402])
#loc556 = loc(fused[#loc404, #loc405])
#loc557 = loc(fused[#loc406, #loc407])
#loc558 = loc(fused[#loc408, #loc405])
