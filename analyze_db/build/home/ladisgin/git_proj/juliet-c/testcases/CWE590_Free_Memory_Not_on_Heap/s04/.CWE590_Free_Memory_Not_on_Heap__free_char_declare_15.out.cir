!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":130:10)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":130:14)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":130:20)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":130:32)
#loc193 = loc(fused[#loc56, #loc57])
#loc194 = loc(fused[#loc58, #loc59])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc176)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc3)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc177)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_declare_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc179)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc10)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc180)
    cir.scope {
      %6 = cir.const #cir.int<6> : !s32i loc(#loc14)
      cir.switch (%6 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %7 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc183)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc20)
            %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc20)
            %10 = cir.const #cir.int<65> : !s32i loc(#loc21)
            %11 = cir.const #cir.int<100> : !s32i loc(#loc22)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc23)
            %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc22)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc22)
            cir.libc.memset %14 bytes from %9 set to %10 : !cir.ptr<!void>, !s32i, !u64i loc(#loc184)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc26)
            %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc26)
            %17 = cir.const #cir.int<100> : !s32i loc(#loc27)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc28)
            %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc27)
            %20 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc29)
            %21 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc29)
            cir.store %16, %21 : !s8i, !cir.ptr<!s8i> loc(#loc185)
            %22 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc30)
            cir.store %22, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc186)
          } loc(#loc182)
          cir.break loc(#loc32)
        } loc(#loc15)
        cir.case(default, []) {
          %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc3)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc3)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc34)
          cir.break loc(#loc35)
        } loc(#loc33)
        cir.yield loc(#loc12)
      } loc(#loc12)
    } loc(#loc181)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc37)
    %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc38)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc39)
    cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc38)
    cir.return loc(#loc7)
  } loc(#loc178)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_declare_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc188)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc189)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    cir.return loc(#loc41)
  } loc(#loc187)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc190)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc191)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc53)
  cir.func @main(%arg0: !s32i loc(fused[#loc56, #loc57]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc58, #loc59])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc193)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc194)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc55)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc60)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc60)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc61)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc62)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc62)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc63)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc50)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %8 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_declare_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc195)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_declare_15_good() : () -> () loc(#loc65)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc51)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc52)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %13 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_declare_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc196)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_declare_15_bad() : () -> () loc(#loc69)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc53)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc72)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc197)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc197)
    cir.return %17 : !s32i loc(#loc197)
  } loc(#loc192)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc198)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc76)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc199)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc201)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc83)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc202)
    cir.scope {
      %6 = cir.const #cir.int<5> : !s32i loc(#loc87)
      cir.switch (%6 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc89)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc89)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc90)
          cir.break loc(#loc91)
        } loc(#loc88)
        cir.case(default, []) {
          cir.scope {
            %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc205)
            %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc97)
            %9 = cir.const #cir.int<100> : !s32i loc(#loc98)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc98)
            %11 = cir.const #cir.int<1> : !u64i loc(#loc206)
            %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc207)
            %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc97)
            %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc208)
            cir.store %14, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc205)
            cir.scope {
              %30 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
              %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc104)
              %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc104)
              %33 = cir.cmp(eq, %30, %32) : !cir.ptr<!s8i>, !cir.bool loc(#loc210)
              cir.if %33 {
                %34 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc76)
                %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc76)
                cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc106)
                %36 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc107)
                %37 = cir.const #cir.int<1> : !s32i loc(#loc108)
                cir.call @exit(%37) : (!s32i) -> () extra(#fn_attr) loc(#loc107)
              } loc(#loc211)
            } loc(#loc209)
            %15 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
            %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc109)
            %17 = cir.const #cir.int<65> : !s32i loc(#loc110)
            %18 = cir.const #cir.int<100> : !s32i loc(#loc111)
            %19 = cir.const #cir.int<1> : !s32i loc(#loc112)
            %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc111)
            %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc111)
            cir.libc.memset %21 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc212)
            %22 = cir.const #cir.int<0> : !s32i loc(#loc115)
            %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc115)
            %24 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
            %25 = cir.const #cir.int<100> : !s32i loc(#loc117)
            %26 = cir.const #cir.int<1> : !s32i loc(#loc118)
            %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc117)
            %28 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc119)
            cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc213)
            %29 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
            cir.store %29, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc214)
          } loc(#loc204)
          cir.break loc(#loc122)
        } loc(#loc92)
        cir.yield loc(#loc85)
      } loc(#loc85)
    } loc(#loc203)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
    cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc124)
    %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc125)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc126)
    cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc125)
    cir.return loc(#loc80)
  } loc(#loc200)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc216)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc131)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc217)
    cir.scope {
      %6 = cir.const #cir.int<6> : !s32i loc(#loc135)
      cir.switch (%6 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc220)
            %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc141)
            %9 = cir.const #cir.int<100> : !s32i loc(#loc142)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc142)
            %11 = cir.const #cir.int<1> : !u64i loc(#loc221)
            %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc222)
            %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc141)
            %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc223)
            cir.store %14, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc220)
            cir.scope {
              %30 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
              %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc148)
              %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc148)
              %33 = cir.cmp(eq, %30, %32) : !cir.ptr<!s8i>, !cir.bool loc(#loc225)
              cir.if %33 {
                %34 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc150)
                %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc150)
                cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc151)
                %36 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc152)
                %37 = cir.const #cir.int<1> : !s32i loc(#loc153)
                cir.call @exit(%37) : (!s32i) -> () extra(#fn_attr) loc(#loc152)
              } loc(#loc226)
            } loc(#loc224)
            %15 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
            %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc154)
            %17 = cir.const #cir.int<65> : !s32i loc(#loc155)
            %18 = cir.const #cir.int<100> : !s32i loc(#loc156)
            %19 = cir.const #cir.int<1> : !s32i loc(#loc157)
            %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc156)
            %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc156)
            cir.libc.memset %21 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc227)
            %22 = cir.const #cir.int<0> : !s32i loc(#loc160)
            %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc160)
            %24 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
            %25 = cir.const #cir.int<100> : !s32i loc(#loc162)
            %26 = cir.const #cir.int<1> : !s32i loc(#loc163)
            %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc162)
            %28 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc164)
            cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc228)
            %29 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
            cir.store %29, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc229)
          } loc(#loc219)
          cir.break loc(#loc167)
        } loc(#loc136)
        cir.case(default, []) {
          %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc169)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc169)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc170)
          cir.break loc(#loc171)
        } loc(#loc168)
        cir.yield loc(#loc133)
      } loc(#loc133)
    } loc(#loc218)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
    cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc173)
    %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc174)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc175)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc175)
    cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc174)
    cir.return loc(#loc128)
  } loc(#loc215)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":40:19)
#loc4 = loc("/usr/include/stdlib.h":687:1)
#loc5 = loc("/usr/include/stdlib.h":687:32)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":23:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":46:1)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":25:5)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":25:12)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":26:12)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":26:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":27:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":42:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":27:12)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":29:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":30:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":36:5)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":32:9)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":32:28)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":33:16)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":33:28)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":33:33)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":33:37)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":33:9)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":33:38)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":34:29)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":34:20)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":34:24)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":34:9)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":35:16)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":35:9)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":37:5)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":38:5)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":40:9)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":41:9)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":43:15)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":43:5)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":45:5)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":45:10)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":114:1)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":118:1)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":116:5)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":116:14)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":117:5)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":117:14)
#loc46 = loc("/usr/include/stdlib.h":575:1)
#loc47 = loc("/usr/include/stdlib.h":575:41)
#loc48 = loc("/usr/include/time.h":76:1)
#loc49 = loc("/usr/include/time.h":76:38)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":135:15)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":137:15)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":140:15)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":142:15)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":130:1)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":145:1)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":131:1)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":133:27)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":133:22)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":133:5)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":135:5)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":136:5)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":136:63)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":137:5)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":140:5)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":141:5)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":141:62)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":142:5)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":144:12)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":144:5)
#loc74 = loc("/usr/include/stdlib.h":672:1)
#loc75 = loc("/usr/include/stdlib.h":672:45)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":69:23)
#loc77 = loc("/usr/include/stdlib.h":756:1)
#loc78 = loc("/usr/include/stdlib.h":756:70)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":53:1)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":81:1)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":55:5)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":55:12)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":56:12)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":56:5)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":57:5)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":77:5)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":57:12)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":59:5)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":61:19)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":61:9)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":62:9)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":63:5)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":64:5)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":75:5)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":66:9)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":66:60)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":66:37)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":66:44)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":66:48)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":66:59)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":67:9)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":71:9)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":67:13)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":67:27)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":68:9)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":69:13)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":70:13)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":70:18)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":72:16)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":72:28)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":72:33)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":72:37)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":72:9)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":72:38)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":73:29)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":73:9)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":73:20)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":73:24)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":73:25)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":74:16)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":74:9)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":76:5)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":78:15)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":78:5)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":80:5)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":80:10)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":84:1)
#loc128 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":112:1)
#loc129 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":86:5)
#loc130 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":86:12)
#loc131 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":87:12)
#loc132 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":87:5)
#loc133 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":88:5)
#loc134 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":108:5)
#loc135 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":88:12)
#loc136 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":90:5)
#loc137 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":91:5)
#loc138 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":102:5)
#loc139 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":93:9)
#loc140 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":93:60)
#loc141 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":93:37)
#loc142 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":93:44)
#loc143 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":93:48)
#loc144 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":93:59)
#loc145 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":94:9)
#loc146 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":98:9)
#loc147 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":94:13)
#loc148 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":94:27)
#loc149 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":95:9)
#loc150 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":96:23)
#loc151 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":96:13)
#loc152 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":97:13)
#loc153 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":97:18)
#loc154 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":99:16)
#loc155 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":99:28)
#loc156 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":99:33)
#loc157 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":99:37)
#loc158 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":99:9)
#loc159 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":99:38)
#loc160 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":100:29)
#loc161 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":100:9)
#loc162 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":100:20)
#loc163 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":100:24)
#loc164 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":100:25)
#loc165 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":101:16)
#loc166 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":101:9)
#loc167 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":103:5)
#loc168 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":104:5)
#loc169 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":106:19)
#loc170 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":106:9)
#loc171 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":107:9)
#loc172 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":109:15)
#loc173 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":109:5)
#loc174 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":111:5)
#loc175 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_15.c":111:10)
#loc176 = loc(fused[#loc1, #loc2])
#loc177 = loc(fused[#loc4, #loc5])
#loc178 = loc(fused[#loc6, #loc7])
#loc179 = loc(fused[#loc8, #loc9])
#loc180 = loc(fused[#loc11, #loc10])
#loc181 = loc(fused[#loc12, #loc13])
#loc182 = loc(fused[#loc16, #loc17])
#loc183 = loc(fused[#loc18, #loc19])
#loc184 = loc(fused[#loc24, #loc25])
#loc185 = loc(fused[#loc29, #loc26])
#loc186 = loc(fused[#loc31, #loc30])
#loc187 = loc(fused[#loc40, #loc41])
#loc188 = loc(fused[#loc42, #loc43])
#loc189 = loc(fused[#loc44, #loc45])
#loc190 = loc(fused[#loc46, #loc47])
#loc191 = loc(fused[#loc48, #loc49])
#loc192 = loc(fused[#loc54, #loc55])
#loc195 = loc(fused[#loc65, #loc66])
#loc196 = loc(fused[#loc69, #loc70])
#loc197 = loc(fused[#loc73, #loc72])
#loc198 = loc(fused[#loc74, #loc75])
#loc199 = loc(fused[#loc77, #loc78])
#loc200 = loc(fused[#loc79, #loc80])
#loc201 = loc(fused[#loc81, #loc82])
#loc202 = loc(fused[#loc84, #loc83])
#loc203 = loc(fused[#loc85, #loc86])
#loc204 = loc(fused[#loc93, #loc94])
#loc205 = loc(fused[#loc95, #loc96])
#loc206 = loc(fused[#loc99, #loc100])
#loc207 = loc(fused[#loc98, #loc100])
#loc208 = loc(fused[#loc97, #loc96])
#loc209 = loc(fused[#loc101, #loc102])
#loc210 = loc(fused[#loc103, #loc104])
#loc211 = loc(fused[#loc105, #loc102])
#loc212 = loc(fused[#loc113, #loc114])
#loc213 = loc(fused[#loc116, #loc115])
#loc214 = loc(fused[#loc121, #loc120])
#loc215 = loc(fused[#loc127, #loc128])
#loc216 = loc(fused[#loc129, #loc130])
#loc217 = loc(fused[#loc132, #loc131])
#loc218 = loc(fused[#loc133, #loc134])
#loc219 = loc(fused[#loc137, #loc138])
#loc220 = loc(fused[#loc139, #loc140])
#loc221 = loc(fused[#loc143, #loc144])
#loc222 = loc(fused[#loc142, #loc144])
#loc223 = loc(fused[#loc141, #loc140])
#loc224 = loc(fused[#loc145, #loc146])
#loc225 = loc(fused[#loc147, #loc148])
#loc226 = loc(fused[#loc149, #loc146])
#loc227 = loc(fused[#loc158, #loc159])
#loc228 = loc(fused[#loc161, #loc160])
#loc229 = loc(fused[#loc166, #loc165])
