!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc52 = loc("CWE665_Improper_Initialization__char_cat_04.c":117:10)
#loc53 = loc("CWE665_Improper_Initialization__char_cat_04.c":117:14)
#loc54 = loc("CWE665_Improper_Initialization__char_cat_04.c":117:20)
#loc55 = loc("CWE665_Improper_Initialization__char_cat_04.c":117:32)
#loc162 = loc(fused[#loc52, #loc53])
#loc163 = loc(fused[#loc54, #loc55])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_cat_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc144)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc145)
  cir.func no_proto @CWE665_Improper_Initialization__char_cat_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc147)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc148)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc149)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc13)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
    cir.br ^bb1 loc(#loc151)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc17)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc152)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc16)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc16)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc153)
  ^bb5:  // pred: ^bb4
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc21)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc21)
    %8 = cir.const #cir.int<67> : !s32i loc(#loc22)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc23)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc23)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc23)
    cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc154)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc27)
    %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc27)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc28)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc28)
    %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc30)
    %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc30)
    cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc155)
    %20 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc31)
    %21 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc33)
    %23 = cir.call @strcat(%21, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc31)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc35)
    cir.br ^bb6 loc(#loc20)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc6)
  } loc(#loc146)
  cir.func no_proto @CWE665_Improper_Initialization__char_cat_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc157)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc158)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc37)
  } loc(#loc156)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc159)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc160)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc49)
  cir.func @main(%arg0: !s32i loc(fused[#loc52, #loc53]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc54, #loc55])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc162)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc163)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc51)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc56)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc56)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc57)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc58)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc58)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc59)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc46)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %8 = cir.get_global @CWE665_Improper_Initialization__char_cat_04_good : !cir.ptr<!cir.func<!void ()>> loc(#loc164)
    cir.call @CWE665_Improper_Initialization__char_cat_04_good() : () -> () loc(#loc61)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc47)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc48)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %13 = cir.get_global @CWE665_Improper_Initialization__char_cat_04_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc165)
    cir.call @CWE665_Improper_Initialization__char_cat_04_bad() : () -> () loc(#loc65)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc49)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc68)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc166)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    cir.return %17 : !s32i loc(#loc166)
  } loc(#loc161)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc70)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc168)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc169)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc170)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc79)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc171)
    cir.br ^bb1 loc(#loc172)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc83)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc83)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc173)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc70)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    cir.br ^bb4 loc(#loc85)
  ^bb3:  // pred: ^bb1
    %8 = cir.const #cir.int<0> : !s32i loc(#loc88)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc88)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc90)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc91)
    cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc174)
    cir.br ^bb4 loc(#loc82)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc82)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc175)
  ^bb6:  // pred: ^bb5
    %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc94)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc94)
    %15 = cir.const #cir.int<67> : !s32i loc(#loc95)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc96)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc96)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc96)
    cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc176)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc100)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc100)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc101)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc101)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc103)
    %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc103)
    cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc177)
    %27 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc104)
    %28 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc106)
    %30 = cir.call @strcat(%28, %29) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc104)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    cir.br ^bb7 loc(#loc93)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc72)
  } loc(#loc167)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc179)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc180)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc181)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc117)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc182)
    cir.br ^bb1 loc(#loc183)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<1> : !s32i loc(#loc121)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc121)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc184)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<0> : !s32i loc(#loc123)
    %7 = cir.cast(integral, %6 : !s32i), !s8i loc(#loc123)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc125)
    %10 = cir.ptr_stride(%8 : !cir.ptr<!s8i>, %9 : !s32i), !cir.ptr<!s8i> loc(#loc126)
    cir.store %7, %10 : !s8i, !cir.ptr<!s8i> loc(#loc185)
    cir.br ^bb3 loc(#loc120)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc120)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc186)
  ^bb5:  // pred: ^bb4
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc129)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc129)
    %13 = cir.const #cir.int<67> : !s32i loc(#loc130)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc131)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc131)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc131)
    cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc187)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc135)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc135)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc136)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc137)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc136)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc138)
    %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc138)
    cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc188)
    %25 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc139)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc141)
    %28 = cir.call @strcat(%26, %27) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc139)
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc143)
    cir.br ^bb6 loc(#loc128)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc110)
  } loc(#loc178)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_cat_04.c":0:0)
#loc1 = loc("/usr/include/string.h":149:1)
#loc2 = loc("/usr/include/string.h":150:14)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE665_Improper_Initialization__char_cat_04.c":30:1)
#loc6 = loc("CWE665_Improper_Initialization__char_cat_04.c":48:1)
#loc7 = loc("CWE665_Improper_Initialization__char_cat_04.c":41:9)
#loc8 = loc("CWE665_Improper_Initialization__char_cat_04.c":41:24)
#loc9 = loc("CWE665_Improper_Initialization__char_cat_04.c":32:5)
#loc10 = loc("CWE665_Improper_Initialization__char_cat_04.c":32:12)
#loc11 = loc("CWE665_Improper_Initialization__char_cat_04.c":33:5)
#loc12 = loc("CWE665_Improper_Initialization__char_cat_04.c":33:24)
#loc13 = loc("CWE665_Improper_Initialization__char_cat_04.c":34:12)
#loc14 = loc("CWE665_Improper_Initialization__char_cat_04.c":34:5)
#loc15 = loc("CWE665_Improper_Initialization__char_cat_04.c":35:5)
#loc16 = loc("CWE665_Improper_Initialization__char_cat_04.c":39:5)
#loc17 = loc("CWE665_Improper_Initialization__char_cat_04.c":35:8)
#loc18 = loc("CWE665_Improper_Initialization__char_cat_04.c":36:5)
#loc19 = loc("CWE665_Improper_Initialization__char_cat_04.c":40:5)
#loc20 = loc("CWE665_Improper_Initialization__char_cat_04.c":47:5)
#loc21 = loc("CWE665_Improper_Initialization__char_cat_04.c":42:16)
#loc22 = loc("CWE665_Improper_Initialization__char_cat_04.c":42:24)
#loc23 = loc("CWE665_Improper_Initialization__char_cat_04.c":42:29)
#loc24 = loc("CWE665_Improper_Initialization__char_cat_04.c":42:33)
#loc25 = loc("CWE665_Improper_Initialization__char_cat_04.c":42:9)
#loc26 = loc("CWE665_Improper_Initialization__char_cat_04.c":42:34)
#loc27 = loc("CWE665_Improper_Initialization__char_cat_04.c":43:25)
#loc28 = loc("CWE665_Improper_Initialization__char_cat_04.c":43:16)
#loc29 = loc("CWE665_Improper_Initialization__char_cat_04.c":43:20)
#loc30 = loc("CWE665_Improper_Initialization__char_cat_04.c":43:9)
#loc31 = loc("CWE665_Improper_Initialization__char_cat_04.c":45:9)
#loc32 = loc("CWE665_Improper_Initialization__char_cat_04.c":45:16)
#loc33 = loc("CWE665_Improper_Initialization__char_cat_04.c":45:22)
#loc34 = loc("CWE665_Improper_Initialization__char_cat_04.c":46:19)
#loc35 = loc("CWE665_Improper_Initialization__char_cat_04.c":46:9)
#loc36 = loc("CWE665_Improper_Initialization__char_cat_04.c":101:1)
#loc37 = loc("CWE665_Improper_Initialization__char_cat_04.c":105:1)
#loc38 = loc("CWE665_Improper_Initialization__char_cat_04.c":103:5)
#loc39 = loc("CWE665_Improper_Initialization__char_cat_04.c":103:14)
#loc40 = loc("CWE665_Improper_Initialization__char_cat_04.c":104:5)
#loc41 = loc("CWE665_Improper_Initialization__char_cat_04.c":104:14)
#loc42 = loc("/usr/include/stdlib.h":575:1)
#loc43 = loc("/usr/include/stdlib.h":575:41)
#loc44 = loc("/usr/include/time.h":76:1)
#loc45 = loc("/usr/include/time.h":76:38)
#loc46 = loc("CWE665_Improper_Initialization__char_cat_04.c":122:15)
#loc47 = loc("CWE665_Improper_Initialization__char_cat_04.c":124:15)
#loc48 = loc("CWE665_Improper_Initialization__char_cat_04.c":127:15)
#loc49 = loc("CWE665_Improper_Initialization__char_cat_04.c":129:15)
#loc50 = loc("CWE665_Improper_Initialization__char_cat_04.c":117:1)
#loc51 = loc("CWE665_Improper_Initialization__char_cat_04.c":132:1)
#loc56 = loc("CWE665_Improper_Initialization__char_cat_04.c":118:1)
#loc57 = loc("CWE665_Improper_Initialization__char_cat_04.c":120:27)
#loc58 = loc("CWE665_Improper_Initialization__char_cat_04.c":120:22)
#loc59 = loc("CWE665_Improper_Initialization__char_cat_04.c":120:5)
#loc60 = loc("CWE665_Improper_Initialization__char_cat_04.c":122:5)
#loc61 = loc("CWE665_Improper_Initialization__char_cat_04.c":123:5)
#loc62 = loc("CWE665_Improper_Initialization__char_cat_04.c":123:54)
#loc63 = loc("CWE665_Improper_Initialization__char_cat_04.c":124:5)
#loc64 = loc("CWE665_Improper_Initialization__char_cat_04.c":127:5)
#loc65 = loc("CWE665_Improper_Initialization__char_cat_04.c":128:5)
#loc66 = loc("CWE665_Improper_Initialization__char_cat_04.c":128:53)
#loc67 = loc("CWE665_Improper_Initialization__char_cat_04.c":129:5)
#loc68 = loc("CWE665_Improper_Initialization__char_cat_04.c":131:12)
#loc69 = loc("CWE665_Improper_Initialization__char_cat_04.c":131:5)
#loc70 = loc("CWE665_Improper_Initialization__char_cat_04.c":63:19)
#loc71 = loc("CWE665_Improper_Initialization__char_cat_04.c":55:1)
#loc72 = loc("CWE665_Improper_Initialization__char_cat_04.c":78:1)
#loc73 = loc("CWE665_Improper_Initialization__char_cat_04.c":71:9)
#loc74 = loc("CWE665_Improper_Initialization__char_cat_04.c":71:24)
#loc75 = loc("CWE665_Improper_Initialization__char_cat_04.c":57:5)
#loc76 = loc("CWE665_Improper_Initialization__char_cat_04.c":57:12)
#loc77 = loc("CWE665_Improper_Initialization__char_cat_04.c":58:5)
#loc78 = loc("CWE665_Improper_Initialization__char_cat_04.c":58:24)
#loc79 = loc("CWE665_Improper_Initialization__char_cat_04.c":59:12)
#loc80 = loc("CWE665_Improper_Initialization__char_cat_04.c":59:5)
#loc81 = loc("CWE665_Improper_Initialization__char_cat_04.c":60:5)
#loc82 = loc("CWE665_Improper_Initialization__char_cat_04.c":69:5)
#loc83 = loc("CWE665_Improper_Initialization__char_cat_04.c":60:8)
#loc84 = loc("CWE665_Improper_Initialization__char_cat_04.c":61:5)
#loc85 = loc("CWE665_Improper_Initialization__char_cat_04.c":64:5)
#loc86 = loc("CWE665_Improper_Initialization__char_cat_04.c":66:5)
#loc87 = loc("CWE665_Improper_Initialization__char_cat_04.c":63:9)
#loc88 = loc("CWE665_Improper_Initialization__char_cat_04.c":68:19)
#loc89 = loc("CWE665_Improper_Initialization__char_cat_04.c":68:9)
#loc90 = loc("CWE665_Improper_Initialization__char_cat_04.c":68:14)
#loc91 = loc("CWE665_Improper_Initialization__char_cat_04.c":68:15)
#loc92 = loc("CWE665_Improper_Initialization__char_cat_04.c":70:5)
#loc93 = loc("CWE665_Improper_Initialization__char_cat_04.c":77:5)
#loc94 = loc("CWE665_Improper_Initialization__char_cat_04.c":72:16)
#loc95 = loc("CWE665_Improper_Initialization__char_cat_04.c":72:24)
#loc96 = loc("CWE665_Improper_Initialization__char_cat_04.c":72:29)
#loc97 = loc("CWE665_Improper_Initialization__char_cat_04.c":72:33)
#loc98 = loc("CWE665_Improper_Initialization__char_cat_04.c":72:9)
#loc99 = loc("CWE665_Improper_Initialization__char_cat_04.c":72:34)
#loc100 = loc("CWE665_Improper_Initialization__char_cat_04.c":73:25)
#loc101 = loc("CWE665_Improper_Initialization__char_cat_04.c":73:16)
#loc102 = loc("CWE665_Improper_Initialization__char_cat_04.c":73:20)
#loc103 = loc("CWE665_Improper_Initialization__char_cat_04.c":73:9)
#loc104 = loc("CWE665_Improper_Initialization__char_cat_04.c":75:9)
#loc105 = loc("CWE665_Improper_Initialization__char_cat_04.c":75:16)
#loc106 = loc("CWE665_Improper_Initialization__char_cat_04.c":75:22)
#loc107 = loc("CWE665_Improper_Initialization__char_cat_04.c":76:19)
#loc108 = loc("CWE665_Improper_Initialization__char_cat_04.c":76:9)
#loc109 = loc("CWE665_Improper_Initialization__char_cat_04.c":81:1)
#loc110 = loc("CWE665_Improper_Initialization__char_cat_04.c":99:1)
#loc111 = loc("CWE665_Improper_Initialization__char_cat_04.c":92:9)
#loc112 = loc("CWE665_Improper_Initialization__char_cat_04.c":92:24)
#loc113 = loc("CWE665_Improper_Initialization__char_cat_04.c":83:5)
#loc114 = loc("CWE665_Improper_Initialization__char_cat_04.c":83:12)
#loc115 = loc("CWE665_Improper_Initialization__char_cat_04.c":84:5)
#loc116 = loc("CWE665_Improper_Initialization__char_cat_04.c":84:24)
#loc117 = loc("CWE665_Improper_Initialization__char_cat_04.c":85:12)
#loc118 = loc("CWE665_Improper_Initialization__char_cat_04.c":85:5)
#loc119 = loc("CWE665_Improper_Initialization__char_cat_04.c":86:5)
#loc120 = loc("CWE665_Improper_Initialization__char_cat_04.c":90:5)
#loc121 = loc("CWE665_Improper_Initialization__char_cat_04.c":86:8)
#loc122 = loc("CWE665_Improper_Initialization__char_cat_04.c":87:5)
#loc123 = loc("CWE665_Improper_Initialization__char_cat_04.c":89:19)
#loc124 = loc("CWE665_Improper_Initialization__char_cat_04.c":89:9)
#loc125 = loc("CWE665_Improper_Initialization__char_cat_04.c":89:14)
#loc126 = loc("CWE665_Improper_Initialization__char_cat_04.c":89:15)
#loc127 = loc("CWE665_Improper_Initialization__char_cat_04.c":91:5)
#loc128 = loc("CWE665_Improper_Initialization__char_cat_04.c":98:5)
#loc129 = loc("CWE665_Improper_Initialization__char_cat_04.c":93:16)
#loc130 = loc("CWE665_Improper_Initialization__char_cat_04.c":93:24)
#loc131 = loc("CWE665_Improper_Initialization__char_cat_04.c":93:29)
#loc132 = loc("CWE665_Improper_Initialization__char_cat_04.c":93:33)
#loc133 = loc("CWE665_Improper_Initialization__char_cat_04.c":93:9)
#loc134 = loc("CWE665_Improper_Initialization__char_cat_04.c":93:34)
#loc135 = loc("CWE665_Improper_Initialization__char_cat_04.c":94:25)
#loc136 = loc("CWE665_Improper_Initialization__char_cat_04.c":94:16)
#loc137 = loc("CWE665_Improper_Initialization__char_cat_04.c":94:20)
#loc138 = loc("CWE665_Improper_Initialization__char_cat_04.c":94:9)
#loc139 = loc("CWE665_Improper_Initialization__char_cat_04.c":96:9)
#loc140 = loc("CWE665_Improper_Initialization__char_cat_04.c":96:16)
#loc141 = loc("CWE665_Improper_Initialization__char_cat_04.c":96:22)
#loc142 = loc("CWE665_Improper_Initialization__char_cat_04.c":97:19)
#loc143 = loc("CWE665_Improper_Initialization__char_cat_04.c":97:9)
#loc144 = loc(fused[#loc1, #loc2])
#loc145 = loc(fused[#loc3, #loc4])
#loc146 = loc(fused[#loc5, #loc6])
#loc147 = loc(fused[#loc7, #loc8])
#loc148 = loc(fused[#loc9, #loc10])
#loc149 = loc(fused[#loc11, #loc12])
#loc150 = loc(fused[#loc14, #loc13])
#loc151 = loc(fused[#loc15, #loc16])
#loc152 = loc(fused[#loc18, #loc16])
#loc153 = loc(fused[#loc19, #loc20])
#loc154 = loc(fused[#loc25, #loc26])
#loc155 = loc(fused[#loc30, #loc27])
#loc156 = loc(fused[#loc36, #loc37])
#loc157 = loc(fused[#loc38, #loc39])
#loc158 = loc(fused[#loc40, #loc41])
#loc159 = loc(fused[#loc42, #loc43])
#loc160 = loc(fused[#loc44, #loc45])
#loc161 = loc(fused[#loc50, #loc51])
#loc164 = loc(fused[#loc61, #loc62])
#loc165 = loc(fused[#loc65, #loc66])
#loc166 = loc(fused[#loc69, #loc68])
#loc167 = loc(fused[#loc71, #loc72])
#loc168 = loc(fused[#loc73, #loc74])
#loc169 = loc(fused[#loc75, #loc76])
#loc170 = loc(fused[#loc77, #loc78])
#loc171 = loc(fused[#loc80, #loc79])
#loc172 = loc(fused[#loc81, #loc82])
#loc173 = loc(fused[#loc84, #loc85, #loc86, #loc82])
#loc174 = loc(fused[#loc89, #loc88])
#loc175 = loc(fused[#loc92, #loc93])
#loc176 = loc(fused[#loc98, #loc99])
#loc177 = loc(fused[#loc103, #loc100])
#loc178 = loc(fused[#loc109, #loc110])
#loc179 = loc(fused[#loc111, #loc112])
#loc180 = loc(fused[#loc113, #loc114])
#loc181 = loc(fused[#loc115, #loc116])
#loc182 = loc(fused[#loc118, #loc117])
#loc183 = loc(fused[#loc119, #loc120])
#loc184 = loc(fused[#loc122, #loc120])
#loc185 = loc(fused[#loc124, #loc123])
#loc186 = loc(fused[#loc127, #loc128])
#loc187 = loc(fused[#loc133, #loc134])
#loc188 = loc(fused[#loc138, #loc135])
