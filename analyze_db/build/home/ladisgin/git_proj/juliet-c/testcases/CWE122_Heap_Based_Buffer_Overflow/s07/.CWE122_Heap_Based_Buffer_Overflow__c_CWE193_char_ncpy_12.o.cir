!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc135)
  cir.global "private" constant cir_private @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc136)
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc137)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc138)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc139)
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc140)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc141)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc142)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc143)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc136)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc145)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc23)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
    cir.br ^bb1 loc(#loc147)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc148)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc148)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc27)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc27)
    cir.brcond %6 ^bb2, ^bb7 loc(#loc149)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc32)
    %8 = cir.const #cir.int<10> : !s32i loc(#loc33)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc33)
    %10 = cir.const #cir.int<1> : !u64i loc(#loc150)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc151)
    %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc32)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc152)
    cir.store %13, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc153)
    cir.br ^bb3 loc(#loc154)
  ^bb3:  // pred: ^bb2
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc41)
    %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc155)
    cir.brcond %17 ^bb4, ^bb5 loc(#loc156)
  ^bb4:  // pred: ^bb3
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc43)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc45)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc43)
    cir.br ^bb5 loc(#loc39)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc39)
  ^bb6:  // pred: ^bb5
    cir.br ^bb12 loc(#loc30)
  ^bb7:  // pred: ^bb1
    %21 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc46)
    %22 = cir.const #cir.int<10> : !s32i loc(#loc47)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %24 = cir.binop(add, %22, %23) nsw : !s32i loc(#loc47)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc47)
    %26 = cir.const #cir.int<1> : !u64i loc(#loc157)
    %27 = cir.binop(mul, %25, %26) : !u64i loc(#loc158)
    %28 = cir.call @malloc(%27) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc46)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc159)
    cir.store %29, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc160)
    cir.br ^bb8 loc(#loc161)
  ^bb8:  // pred: ^bb7
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc57)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc57)
    %33 = cir.cmp(eq, %30, %32) : !cir.ptr<!s8i>, !cir.bool loc(#loc162)
    cir.brcond %33 ^bb9, ^bb10 loc(#loc163)
  ^bb9:  // pred: ^bb8
    %34 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc59)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc60)
    %36 = cir.unary(minus, %35) : !s32i, !s32i loc(#loc61)
    cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc59)
    cir.br ^bb10 loc(#loc55)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc55)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc26)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc26)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc164)
  ^bb14:  // pred: ^bb13
    %37 = cir.get_global @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc136)
    cir.copy %37 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc136)
    %38 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc64)
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
    %40 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc66)
    %41 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc67)
    %42 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc68)
    %43 = cir.call @strlen(%42) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc67)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc69)
    %46 = cir.binop(add, %43, %45) : !u64i loc(#loc165)
    %47 = cir.call @strncpy(%39, %40, %46) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc64)
    %48 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%48) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %49 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc72)
    %50 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
    %51 = cir.cast(bitcast, %50 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc73)
    cir.call @free(%51) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc72)
    cir.br ^bb15 loc(#loc63)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc20)
  } loc(#loc144)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc167)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc76)
    cir.return loc(#loc75)
  } loc(#loc166)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc135)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc169)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc82)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc170)
    cir.br ^bb1 loc(#loc171)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc172)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc172)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc86)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc86)
    cir.brcond %6 ^bb2, ^bb7 loc(#loc173)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc91)
    %8 = cir.const #cir.int<10> : !s32i loc(#loc92)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %10 = cir.binop(add, %8, %9) nsw : !s32i loc(#loc92)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc92)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc174)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc175)
    %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc91)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc176)
    cir.store %15, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc177)
    cir.br ^bb3 loc(#loc178)
  ^bb3:  // pred: ^bb2
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc102)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc102)
    %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc179)
    cir.brcond %19 ^bb4, ^bb5 loc(#loc180)
  ^bb4:  // pred: ^bb3
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc104)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc106)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc104)
    cir.br ^bb5 loc(#loc100)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc100)
  ^bb6:  // pred: ^bb5
    cir.br ^bb12 loc(#loc89)
  ^bb7:  // pred: ^bb1
    %23 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc107)
    %24 = cir.const #cir.int<10> : !s32i loc(#loc108)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %26 = cir.binop(add, %24, %25) nsw : !s32i loc(#loc108)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc108)
    %28 = cir.const #cir.int<1> : !u64i loc(#loc181)
    %29 = cir.binop(mul, %27, %28) : !u64i loc(#loc182)
    %30 = cir.call @malloc(%29) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc107)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc183)
    cir.store %31, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc184)
    cir.br ^bb8 loc(#loc185)
  ^bb8:  // pred: ^bb7
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
    %33 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc118)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc118)
    %35 = cir.cmp(eq, %32, %34) : !cir.ptr<!s8i>, !cir.bool loc(#loc186)
    cir.brcond %35 ^bb9, ^bb10 loc(#loc187)
  ^bb9:  // pred: ^bb8
    %36 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc120)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc121)
    %38 = cir.unary(minus, %37) : !s32i, !s32i loc(#loc122)
    cir.call @exit(%38) : (!s32i) -> () extra(#fn_attr) loc(#loc120)
    cir.br ^bb10 loc(#loc116)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc116)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc85)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc85)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc188)
  ^bb14:  // pred: ^bb13
    %39 = cir.get_global @__const.goodG2B.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc135)
    cir.copy %39 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc135)
    %40 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc125)
    %41 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
    %42 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc127)
    %43 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc128)
    %44 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc129)
    %45 = cir.call @strlen(%44) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc128)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc130)
    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc130)
    %48 = cir.binop(add, %45, %47) : !u64i loc(#loc189)
    %49 = cir.call @strncpy(%41, %42, %48) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc125)
    %50 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
    cir.call @printLine(%50) : (!cir.ptr<!s8i>) -> () loc(#loc132)
    %51 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc133)
    %52 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
    %53 = cir.cast(bitcast, %52 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc134)
    cir.call @free(%53) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc133)
    cir.br ^bb15 loc(#loc124)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc79)
  } loc(#loc168)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":77:9)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":77:29)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":45:9)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":45:29)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc7 = loc("/usr/include/stdlib.h":672:1)
#loc8 = loc("/usr/include/stdlib.h":672:45)
#loc9 = loc("/usr/include/stdlib.h":756:1)
#loc10 = loc("/usr/include/stdlib.h":756:70)
#loc11 = loc("/usr/include/string.h":144:1)
#loc12 = loc("/usr/include/string.h":146:14)
#loc13 = loc("/usr/include/string.h":407:1)
#loc14 = loc("/usr/include/string.h":408:33)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc17 = loc("/usr/include/stdlib.h":687:1)
#loc18 = loc("/usr/include/stdlib.h":687:32)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":28:1)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":52:1)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":30:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":30:12)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":31:12)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":31:5)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":32:5)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":43:5)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":32:8)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":32:33)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":33:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":37:5)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":39:5)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":35:24)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":35:31)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":35:34)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":35:45)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":35:46)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":35:9)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":36:9)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":36:37)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":36:13)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":36:21)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":36:27)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":36:28)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":36:34)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":36:33)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":41:24)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":41:32)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":41:35)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":41:38)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":41:49)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":41:31)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":41:50)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":41:9)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":42:9)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":42:37)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":42:13)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":42:21)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":42:27)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":42:28)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":42:34)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":42:33)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":44:5)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":51:5)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":48:9)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":48:17)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":48:23)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":48:31)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":48:38)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":48:48)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":49:19)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":49:9)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":50:9)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":50:14)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":86:1)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":89:1)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":88:5)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":88:13)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":60:1)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":84:1)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":62:5)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":62:12)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":63:12)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":63:5)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":64:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":75:5)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":64:8)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":64:33)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":65:5)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":69:5)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":71:5)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":67:24)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":67:32)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":67:35)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":67:38)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":67:49)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":67:31)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":67:50)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":67:9)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":68:9)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":68:37)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":68:13)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":68:21)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":68:27)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":68:28)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":68:34)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":68:33)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":73:24)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":73:32)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":73:35)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":73:38)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":73:49)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":73:31)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":73:50)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":73:9)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":74:9)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":74:37)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":74:13)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":74:21)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":74:27)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":74:28)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":74:34)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":74:33)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":76:5)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":83:5)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":80:9)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":80:17)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":80:23)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":80:31)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":80:38)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":80:48)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":81:19)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":81:9)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":82:9)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_ncpy_12.c":82:14)
#loc135 = loc(fused[#loc1, #loc2])
#loc136 = loc(fused[#loc3, #loc4])
#loc137 = loc(fused[#loc5, #loc6])
#loc138 = loc(fused[#loc7, #loc8])
#loc139 = loc(fused[#loc9, #loc10])
#loc140 = loc(fused[#loc11, #loc12])
#loc141 = loc(fused[#loc13, #loc14])
#loc142 = loc(fused[#loc15, #loc16])
#loc143 = loc(fused[#loc17, #loc18])
#loc144 = loc(fused[#loc19, #loc20])
#loc145 = loc(fused[#loc21, #loc22])
#loc146 = loc(fused[#loc24, #loc23])
#loc147 = loc(fused[#loc25, #loc26])
#loc148 = loc(fused[#loc27, #loc28])
#loc149 = loc(fused[#loc29, #loc30, #loc31, #loc26])
#loc150 = loc(fused[#loc34, #loc35])
#loc151 = loc(fused[#loc33, #loc35])
#loc152 = loc(fused[#loc32, #loc36])
#loc153 = loc(fused[#loc37, #loc36])
#loc154 = loc(fused[#loc38, #loc39])
#loc155 = loc(fused[#loc40, #loc41])
#loc156 = loc(fused[#loc42, #loc39])
#loc157 = loc(fused[#loc49, #loc50])
#loc158 = loc(fused[#loc51, #loc50])
#loc159 = loc(fused[#loc46, #loc52])
#loc160 = loc(fused[#loc53, #loc52])
#loc161 = loc(fused[#loc54, #loc55])
#loc162 = loc(fused[#loc56, #loc57])
#loc163 = loc(fused[#loc58, #loc55])
#loc164 = loc(fused[#loc62, #loc63])
#loc165 = loc(fused[#loc67, #loc69])
#loc166 = loc(fused[#loc74, #loc75])
#loc167 = loc(fused[#loc76, #loc77])
#loc168 = loc(fused[#loc78, #loc79])
#loc169 = loc(fused[#loc80, #loc81])
#loc170 = loc(fused[#loc83, #loc82])
#loc171 = loc(fused[#loc84, #loc85])
#loc172 = loc(fused[#loc86, #loc87])
#loc173 = loc(fused[#loc88, #loc89, #loc90, #loc85])
#loc174 = loc(fused[#loc94, #loc95])
#loc175 = loc(fused[#loc96, #loc95])
#loc176 = loc(fused[#loc91, #loc97])
#loc177 = loc(fused[#loc98, #loc97])
#loc178 = loc(fused[#loc99, #loc100])
#loc179 = loc(fused[#loc101, #loc102])
#loc180 = loc(fused[#loc103, #loc100])
#loc181 = loc(fused[#loc110, #loc111])
#loc182 = loc(fused[#loc112, #loc111])
#loc183 = loc(fused[#loc107, #loc113])
#loc184 = loc(fused[#loc114, #loc113])
#loc185 = loc(fused[#loc115, #loc116])
#loc186 = loc(fused[#loc117, #loc118])
#loc187 = loc(fused[#loc119, #loc116])
#loc188 = loc(fused[#loc123, #loc124])
#loc189 = loc(fused[#loc128, #loc130])
