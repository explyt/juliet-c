!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":23:68)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":23:77)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":40:72)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":40:81)
#loc49 = loc(fused[#loc9, #loc10])
#loc54 = loc(fused[#loc28, #loc29])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s10/CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc45)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc46)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc47)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b_badSink(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc9, #loc10])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc49)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc50)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc13)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc12)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc14)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc50)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc52)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc52)
      cir.store %5, %4 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc52)
      %6 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc19)
      %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc20)
      %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
      %9 = cir.call @strcat(%7, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc19)
      %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
      cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc23)
      %11 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc24)
      %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc25)
      cir.call @free(%13) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc24)
    } loc(#loc51)
    cir.return loc(#loc8)
  } loc(#loc48)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b_goodG2BSink(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc28, #loc29])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc54)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc55)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc32)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc31)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc55)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc57)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc57)
      cir.store %5, %4 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc57)
      %6 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc38)
      %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc39)
      %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
      %9 = cir.call @strcat(%7, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc38)
      %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
      cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc42)
      %11 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc43)
      %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc44)
      cir.call @free(%13) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc43)
    } loc(#loc56)
    cir.return loc(#loc27)
  } loc(#loc53)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s10/CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":0:0)
#loc1 = loc("/usr/include/string.h":149:1)
#loc2 = loc("/usr/include/string.h":150:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":23:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":33:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":25:5)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":25:20)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":24:1)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":25:19)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":26:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":32:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":27:9)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":27:25)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":29:9)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":29:16)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":29:22)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":30:19)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":30:9)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":31:9)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":31:14)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":40:1)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":50:1)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":42:5)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":42:20)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":41:1)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":42:19)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":43:5)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":49:5)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":44:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":44:25)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":46:9)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":46:16)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":46:22)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":47:19)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":47:9)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":48:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_63b.c":48:14)
#loc45 = loc(fused[#loc1, #loc2])
#loc46 = loc(fused[#loc3, #loc4])
#loc47 = loc(fused[#loc5, #loc6])
#loc48 = loc(fused[#loc7, #loc8])
#loc50 = loc(fused[#loc11, #loc12])
#loc51 = loc(fused[#loc15, #loc16])
#loc52 = loc(fused[#loc17, #loc18])
#loc53 = loc(fused[#loc26, #loc27])
#loc55 = loc(fused[#loc30, #loc31])
#loc56 = loc(fused[#loc34, #loc35])
#loc57 = loc(fused[#loc36, #loc37])
