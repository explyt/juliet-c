!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc1 = loc("../../../testcasesupport/std_testcase.h":96:16)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":127:10)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":127:14)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":127:20)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":127:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc174 = loc(fused[#loc119, #loc120])
#loc175 = loc(fused[#loc121, #loc122])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s03/CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func linkonce_odr @_ZN14_twoIntsStructC2Ev(%arg0: !cir.ptr<!ty__twoIntsStruct> loc("../../../testcasesupport/std_testcase.h":96:16)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["this", init] {alignment = 8 : i64} loc(#loc1)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc1)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc1)
    cir.return loc(#loc1)
  } loc(#loc1)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc135)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc4)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc136)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc137)
  cir.func @_ZN62CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_153badEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc139)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc140)
    cir.scope {
      %5 = cir.const #cir.int<6> : !s32i loc(#loc17)
      cir.switch (%5 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %6 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["buffer"] {alignment = 1 : i64} loc(#loc143)
            %7 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc144)
            %8 = cir.const #cir.int<8> : !u64i loc(#loc145)
            %9 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc26)
            %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc26)
            %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc145)
            cir.call @_ZN14_twoIntsStructC2Ev(%11) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr1) loc(#loc24)
            cir.store %11, %7 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc144)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc27)
            %13 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc28)
            %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc29)
            cir.store %12, %14 : !s32i, !cir.ptr<!s32i> loc(#loc146)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc30)
            %16 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc31)
            %17 = cir.get_member %16[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
            cir.store %15, %17 : !s32i, !cir.ptr<!s32i> loc(#loc147)
            %18 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc33)
            cir.store %18, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc148)
          } loc(#loc142)
          cir.break loc(#loc35)
        } loc(#loc18)
        cir.case(default, []) {
          %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc4)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc4)
          cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc37)
          cir.break loc(#loc38)
        } loc(#loc36)
        cir.yield loc(#loc15)
      } loc(#loc15)
    } loc(#loc141)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
    cir.call @printStructLine(%2) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc40)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc41)
    cir.call @_ZdlPv(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc42)
    cir.return loc(#loc10)
  } loc(#loc138)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc149)
  cir.func internal private @_ZN62CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15L8goodG2B1Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc151)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc49)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc152)
    cir.scope {
      %5 = cir.const #cir.int<5> : !s32i loc(#loc53)
      cir.switch (%5 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc55)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc55)
          cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc56)
          cir.break loc(#loc57)
        } loc(#loc54)
        cir.case(default, []) {
          cir.scope {
            %6 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc155)
            %7 = cir.const #cir.int<8> : !u64i loc(#loc156)
            %8 = cir.call @_Znwm(%7) : (!u64i) -> !cir.ptr<!void> loc(#loc155)
            %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc156)
            cir.call @_ZN14_twoIntsStructC2Ev(%9) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr1) loc(#loc62)
            cir.store %9, %6 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc155)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc64)
            %11 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc65)
            %12 = cir.get_member %11[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc29)
            cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc157)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc66)
            %14 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc67)
            %15 = cir.get_member %14[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
            cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc158)
            %16 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc68)
            cir.store %16, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc159)
          } loc(#loc154)
          cir.break loc(#loc70)
        } loc(#loc58)
        cir.yield loc(#loc51)
      } loc(#loc51)
    } loc(#loc153)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc71)
    cir.call @printStructLine(%2) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc72)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc73)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc73)
    cir.call @_ZdlPv(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc74)
    cir.return loc(#loc46)
  } loc(#loc150)
  cir.func internal private @_ZN62CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15L8goodG2B2Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc161)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc79)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc162)
    cir.scope {
      %5 = cir.const #cir.int<6> : !s32i loc(#loc83)
      cir.switch (%5 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %6 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc165)
            %7 = cir.const #cir.int<8> : !u64i loc(#loc166)
            %8 = cir.call @_Znwm(%7) : (!u64i) -> !cir.ptr<!void> loc(#loc165)
            %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc166)
            cir.call @_ZN14_twoIntsStructC2Ev(%9) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr1) loc(#loc88)
            cir.store %9, %6 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc165)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc90)
            %11 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc91)
            %12 = cir.get_member %11[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc29)
            cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc167)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc92)
            %14 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc93)
            %15 = cir.get_member %14[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
            cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc168)
            %16 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc94)
            cir.store %16, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc169)
          } loc(#loc164)
          cir.break loc(#loc96)
        } loc(#loc84)
        cir.case(default, []) {
          %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc98)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc98)
          cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc99)
          cir.break loc(#loc100)
        } loc(#loc97)
        cir.yield loc(#loc81)
      } loc(#loc81)
    } loc(#loc163)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc101)
    cir.call @printStructLine(%2) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc102)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc103)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc103)
    cir.call @_ZdlPv(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc104)
    cir.return loc(#loc76)
  } loc(#loc160)
  cir.func @_ZN62CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_154goodEv() extra(#fn_attr2) {
    cir.call @_ZN62CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15L8goodG2B1Ev() : () -> () loc(#loc107)
    cir.call @_ZN62CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15L8goodG2B2Ev() : () -> () loc(#loc108)
    cir.return loc(#loc106)
  } loc(#loc170)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc171)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc172)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc113)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc114)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc115)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc116)
  cir.func @main(%arg0: !s32i loc(fused[#loc119, #loc120]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc121, #loc122])) -> !s32i extra(#fn_attr2) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc174)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc175)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc118)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc123)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc123)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc124)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc125)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc125)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc126)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc113)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc113)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc127)
    cir.call @_ZN62CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_154goodEv() : () -> () loc(#loc128)
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc114)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc114)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc129)
    %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc115)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc115)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    cir.call @_ZN62CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_153badEv() : () -> () loc(#loc131)
    %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc116)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc116)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc132)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc133)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc176)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc176)
    cir.return %15 : !s32i loc(#loc176)
  } loc(#loc173)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s03/CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":0:0)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc4 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":44:19)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc7 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc8 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":26:1)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":50:1)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":28:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":28:21)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":29:12)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":29:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":30:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":46:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":30:12)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":32:5)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":33:5)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":40:5)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":35:9)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":35:42)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":36:9)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":36:50)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":36:38)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":36:42)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":37:30)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":37:9)
#loc29 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":38:30)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":38:9)
#loc32 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":39:16)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":39:9)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":41:5)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":42:5)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":44:9)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":45:9)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":47:21)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":47:5)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":49:12)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":26:6)
#loc43 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc44 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":57:1)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":80:1)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":59:5)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":59:21)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":60:12)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":60:5)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":61:5)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":76:5)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":61:12)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":63:5)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":65:19)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":65:9)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":66:9)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":67:5)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":68:5)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":74:5)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":70:9)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":70:42)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":70:38)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":71:30)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":71:9)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":72:30)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":72:9)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":73:16)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":73:9)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":75:5)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":77:21)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":77:5)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":79:12)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":57:13)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":83:1)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":106:1)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":85:5)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":85:21)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":86:12)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":86:5)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":87:5)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":102:5)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":87:12)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":89:5)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":90:5)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":96:5)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":92:9)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":92:42)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":92:38)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":93:30)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":93:9)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":94:30)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":94:9)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":95:16)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":95:9)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":97:5)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":98:5)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":100:19)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":100:9)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":101:9)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":103:21)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":103:5)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":105:12)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":83:13)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":108:1)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":112:1)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":110:5)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":111:5)
#loc109 = loc("/usr/include/stdlib.h":575:1)
#loc110 = loc("/usr/include/stdlib.h":575:41)
#loc111 = loc("/usr/include/time.h":76:1)
#loc112 = loc("/usr/include/time.h":76:38)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":132:15)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":134:15)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":137:15)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":139:15)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":127:1)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":142:1)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":128:1)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":130:27)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":130:22)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":130:5)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":132:5)
#loc128 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":133:5)
#loc129 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":134:5)
#loc130 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":137:5)
#loc131 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":138:5)
#loc132 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":139:5)
#loc133 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":141:12)
#loc134 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_placement_new_15.cpp":141:5)
#loc135 = loc(fused[#loc2, #loc3])
#loc136 = loc(fused[#loc5, #loc6])
#loc137 = loc(fused[#loc7, #loc8])
#loc138 = loc(fused[#loc9, #loc10])
#loc139 = loc(fused[#loc11, #loc12])
#loc140 = loc(fused[#loc14, #loc13])
#loc141 = loc(fused[#loc15, #loc16])
#loc142 = loc(fused[#loc19, #loc20])
#loc143 = loc(fused[#loc21, #loc22])
#loc144 = loc(fused[#loc23, #loc24])
#loc145 = loc(fused[#loc25, #loc24])
#loc146 = loc(fused[#loc28, #loc27])
#loc147 = loc(fused[#loc31, #loc30])
#loc148 = loc(fused[#loc34, #loc33])
#loc149 = loc(fused[#loc43, #loc44])
#loc150 = loc(fused[#loc45, #loc46])
#loc151 = loc(fused[#loc47, #loc48])
#loc152 = loc(fused[#loc50, #loc49])
#loc153 = loc(fused[#loc51, #loc52])
#loc154 = loc(fused[#loc59, #loc60])
#loc155 = loc(fused[#loc61, #loc62])
#loc156 = loc(fused[#loc63, #loc62])
#loc157 = loc(fused[#loc65, #loc64])
#loc158 = loc(fused[#loc67, #loc66])
#loc159 = loc(fused[#loc69, #loc68])
#loc160 = loc(fused[#loc75, #loc76])
#loc161 = loc(fused[#loc77, #loc78])
#loc162 = loc(fused[#loc80, #loc79])
#loc163 = loc(fused[#loc81, #loc82])
#loc164 = loc(fused[#loc85, #loc86])
#loc165 = loc(fused[#loc87, #loc88])
#loc166 = loc(fused[#loc89, #loc88])
#loc167 = loc(fused[#loc91, #loc90])
#loc168 = loc(fused[#loc93, #loc92])
#loc169 = loc(fused[#loc95, #loc94])
#loc170 = loc(fused[#loc105, #loc106])
#loc171 = loc(fused[#loc109, #loc110])
#loc172 = loc(fused[#loc111, #loc112])
#loc173 = loc(fused[#loc117, #loc118])
#loc176 = loc(fused[#loc134, #loc133])
