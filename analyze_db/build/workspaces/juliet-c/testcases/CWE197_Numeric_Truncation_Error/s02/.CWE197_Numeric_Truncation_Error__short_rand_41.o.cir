!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc5 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":21:61)
#loc6 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":21:67)
#loc23 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":36:19)
#loc29 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":44:65)
#loc30 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":44:71)
#loc56 = loc(fused[#loc5, #loc6])
#loc65 = loc(fused[#loc29, #loc30])
module @"/workspaces/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printHexCharLine(!s8i) loc(#loc54)
  cir.func @CWE197_Numeric_Truncation_Error__short_rand_41_badSink(%arg0: !s16i loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc57)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc56)
    cir.store %arg0, %1 : !s16i, !cir.ptr<!s16i> loc(#loc9)
    cir.br ^bb1 loc(#loc58)
  ^bb1:  // pred: ^bb0
    %2 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc8)
    %3 = cir.cast(integral, %2 : !s16i), !s8i loc(#loc8)
    cir.store %3, %0 : !s8i, !cir.ptr<!s8i> loc(#loc57)
    %4 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc12)
    cir.call @printHexCharLine(%4) : (!s8i) -> () loc(#loc13)
    cir.br ^bb2 loc(#loc11)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc4)
  } loc(#loc55)
  cir.func private @rand() -> !s32i extra(#fn_attr1) loc(#loc59)
  cir.func no_proto @CWE197_Numeric_Truncation_Error__short_rand_41_bad() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc61)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc21)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc21)
    cir.store %3, %0 : !s16i, !cir.ptr<!s16i> loc(#loc62)
    %4 = cir.call @rand() : () -> !s32i extra(#fn_attr1) loc(#loc23)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %6 = cir.binop(and, %4, %5) : !s32i loc(#loc23)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc23)
    cir.brcond %7 ^bb1, ^bb2 loc(#loc23)
  ^bb1:  // pred: ^bb0
    %8 = cir.call @rand() : () -> !s32i extra(#fn_attr1) loc(#loc23)
    %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc23)
    %10 = cir.const #cir.int<30> : !s32i loc(#loc23)
    %11 = cir.shift(left, %9 : !u32i, %10 : !s32i) -> !u32i loc(#loc23)
    %12 = cir.call @rand() : () -> !s32i extra(#fn_attr1) loc(#loc23)
    %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc23)
    %14 = cir.const #cir.int<15> : !s32i loc(#loc23)
    %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc23)
    %16 = cir.binop(xor, %11, %15) : !u32i loc(#loc23)
    %17 = cir.call @rand() : () -> !s32i extra(#fn_attr1) loc(#loc23)
    %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc23)
    %19 = cir.binop(xor, %16, %18) : !u32i loc(#loc23)
    cir.br ^bb3(%19 : !u32i) loc(#loc23)
  ^bb2:  // pred: ^bb0
    %20 = cir.call @rand() : () -> !s32i extra(#fn_attr1) loc(#loc23)
    %21 = cir.cast(integral, %20 : !s32i), !u32i loc(#loc23)
    %22 = cir.const #cir.int<30> : !s32i loc(#loc23)
    %23 = cir.shift(left, %21 : !u32i, %22 : !s32i) -> !u32i loc(#loc23)
    %24 = cir.call @rand() : () -> !s32i extra(#fn_attr1) loc(#loc23)
    %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc23)
    %26 = cir.const #cir.int<15> : !s32i loc(#loc23)
    %27 = cir.shift(left, %25 : !u32i, %26 : !s32i) -> !u32i loc(#loc23)
    %28 = cir.binop(xor, %23, %27) : !u32i loc(#loc23)
    %29 = cir.call @rand() : () -> !s32i extra(#fn_attr1) loc(#loc23)
    %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc23)
    %31 = cir.binop(xor, %28, %30) : !u32i loc(#loc23)
    %32 = cir.unary(minus, %31) : !u32i, !u32i loc(#loc23)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %34 = cir.cast(integral, %33 : !s32i), !u32i loc(#loc23)
    %35 = cir.binop(sub, %32, %34) : !u32i loc(#loc23)
    cir.br ^bb3(%35 : !u32i) loc(#loc23)
  ^bb3(%36: !u32i loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":36:19)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc23)
  ^bb4:  // pred: ^bb3
    %37 = cir.cast(integral, %36 : !u32i), !s32i loc(#loc23)
    %38 = cir.cast(integral, %37 : !s32i), !s16i loc(#loc23)
    cir.store %38, %0 : !s16i, !cir.ptr<!s16i> loc(#loc63)
    %39 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc25)
    cir.call @CWE197_Numeric_Truncation_Error__short_rand_41_badSink(%39) : (!s16i) -> () loc(#loc26)
    cir.return loc(#loc17)
  } loc(#loc60)
  cir.func @CWE197_Numeric_Truncation_Error__short_rand_41_goodG2BSink(%arg0: !s16i loc(fused[#loc29, #loc30])) extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc66)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc65)
    cir.store %arg0, %1 : !s16i, !cir.ptr<!s16i> loc(#loc33)
    cir.br ^bb1 loc(#loc67)
  ^bb1:  // pred: ^bb0
    %2 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc32)
    %3 = cir.cast(integral, %2 : !s16i), !s8i loc(#loc32)
    cir.store %3, %0 : !s8i, !cir.ptr<!s8i> loc(#loc66)
    %4 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc36)
    cir.call @printHexCharLine(%4) : (!s8i) -> () loc(#loc37)
    cir.br ^bb2 loc(#loc35)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc28)
  } loc(#loc64)
  cir.func no_proto @CWE197_Numeric_Truncation_Error__short_rand_41_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc69)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc40)
    cir.return loc(#loc39)
  } loc(#loc68)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc71)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc46)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc47)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc47)
    cir.store %3, %0 : !s16i, !cir.ptr<!s16i> loc(#loc72)
    %4 = cir.const #cir.int<127> : !s32i loc(#loc49)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc50)
    %6 = cir.binop(sub, %4, %5) nsw : !s32i loc(#loc49)
    %7 = cir.cast(integral, %6 : !s32i), !s16i loc(#loc49)
    cir.store %7, %0 : !s16i, !cir.ptr<!s16i> loc(#loc73)
    %8 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc52)
    cir.call @CWE197_Numeric_Truncation_Error__short_rand_41_goodG2BSink(%8) : (!s16i) -> () loc(#loc53)
    cir.return loc(#loc43)
  } loc(#loc70)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_rand_41.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc3 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":21:1)
#loc4 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":28:1)
#loc7 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":25:9)
#loc8 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":25:31)
#loc9 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":22:1)
#loc10 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":23:5)
#loc11 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":27:5)
#loc12 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":26:26)
#loc13 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":26:9)
#loc14 = loc("/usr/include/stdlib.h":573:1)
#loc15 = loc("/usr/include/stdlib.h":573:24)
#loc16 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":30:1)
#loc17 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":38:1)
#loc18 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":32:5)
#loc19 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":32:11)
#loc20 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":34:13)
#loc21 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":34:12)
#loc22 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":34:5)
#loc24 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":36:5)
#loc25 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":37:60)
#loc26 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":37:5)
#loc27 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":44:1)
#loc28 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":51:1)
#loc31 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":48:9)
#loc32 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":48:31)
#loc33 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":45:1)
#loc34 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":46:5)
#loc35 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":50:5)
#loc36 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":49:26)
#loc37 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":49:9)
#loc38 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":64:1)
#loc39 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":67:1)
#loc40 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":66:5)
#loc41 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":66:13)
#loc42 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":54:1)
#loc43 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":62:1)
#loc44 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":56:5)
#loc45 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":56:11)
#loc46 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":58:13)
#loc47 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":58:12)
#loc48 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":58:5)
#loc49 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":60:12)
#loc50 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":60:21)
#loc51 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":60:5)
#loc52 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":61:64)
#loc53 = loc("CWE197_Numeric_Truncation_Error__short_rand_41.c":61:5)
#loc54 = loc(fused[#loc1, #loc2])
#loc55 = loc(fused[#loc3, #loc4])
#loc57 = loc(fused[#loc7, #loc8])
#loc58 = loc(fused[#loc10, #loc11])
#loc59 = loc(fused[#loc14, #loc15])
#loc60 = loc(fused[#loc16, #loc17])
#loc61 = loc(fused[#loc18, #loc19])
#loc62 = loc(fused[#loc22, #loc20])
#loc63 = loc(fused[#loc24, #loc23])
#loc64 = loc(fused[#loc27, #loc28])
#loc66 = loc(fused[#loc31, #loc32])
#loc67 = loc(fused[#loc34, #loc35])
#loc68 = loc(fused[#loc38, #loc39])
#loc69 = loc(fused[#loc40, #loc41])
#loc70 = loc(fused[#loc42, #loc43])
#loc71 = loc(fused[#loc44, #loc45])
#loc72 = loc(fused[#loc48, #loc46])
#loc73 = loc(fused[#loc51, #loc50])
