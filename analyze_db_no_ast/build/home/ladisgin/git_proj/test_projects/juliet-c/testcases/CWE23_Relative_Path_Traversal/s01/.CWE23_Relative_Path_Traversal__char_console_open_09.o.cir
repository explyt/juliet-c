!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_open_09.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  constant external @GLOBAL_CONST_TRUE : !s32i {alignment = 4 : i64} loc(#loc180)
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc181)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc182)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc183)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc184)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc11)
  cir.func private  @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc185)
  cir.func private  @close(!s32i) -> !s32i loc(#loc186)
  cir.func  @_ZN51CWE23_Relative_Path_Traversal__char_console_open_093badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc188)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc189)
    %2 = cir.const #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc189)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc189)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc22)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc190)
    cir.scope {
      %4 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc180)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc26)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc26)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc194)
          %8 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc32)
          %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
          %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc32)
          cir.store %10, %7 : !u64i, !cir.ptr<!u64i> loc(#loc194)
          cir.scope {
            %11 = cir.const #cir.int<4096> : !s32i loc(#loc36)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc36)
            %13 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc37)
            %14 = cir.binop(sub, %12, %13) : !u64i loc(#loc196)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc38)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc38)
            %17 = cir.cmp(gt, %14, %16) : !u64i, !cir.bool loc(#loc197)
            cir.if %17 {
              cir.scope {
                %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
                %19 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc43)
                %20 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %19 : !u64i), !cir.ptr<!s8i> loc(#loc44)
                %21 = cir.const #cir.int<4096> : !s32i loc(#loc45)
                %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc45)
                %23 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc46)
                %24 = cir.binop(sub, %22, %23) : !u64i loc(#loc200)
                %25 = cir.cast(integral, %24 : !u64i), !s32i loc(#loc200)
                %26 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc183)
                %27 = cir.load %26 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc47)
                %28 = cir.call @fgets(%20, %25, %27) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc48)
                %29 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc49)
                %30 = cir.cmp(ne, %28, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc201)
                cir.if %30 {
                  %31 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc53)
                  %32 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
                  %33 = cir.call @strlen(%32) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc53)
                  cir.store %33, %7 : !u64i, !cir.ptr<!u64i> loc(#loc203)
                  cir.scope {
                    %34 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc59)
                    %35 = cir.const #cir.int<0> : !s32i loc(#loc60)
                    %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc60)
                    %37 = cir.cmp(gt, %34, %36) : !u64i, !cir.bool loc(#loc205)
                    %38 = cir.ternary(%37, true {
                      %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
                      %40 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc63)
                      %41 = cir.const #cir.int<1> : !s32i loc(#loc64)
                      %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc64)
                      %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc206)
                      %44 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc65)
                      %45 = cir.load %44 : !cir.ptr<!s8i>, !s8i loc(#loc62)
                      %46 = cir.cast(integral, %45 : !s8i), !s32i loc(#loc62)
                      %47 = cir.const #cir.int<10> : !s8i loc(#loc66)
                      %48 = cir.cast(integral, %47 : !s8i), !s32i loc(#loc66)
                      %49 = cir.cmp(eq, %46, %48) : !s32i, !cir.bool loc(#loc207)
                      %50 = cir.ternary(%49, true {
                        %51 = cir.const #true loc(#loc61)
                        cir.yield %51 : !cir.bool loc(#loc61)
                      }, false {
                        %51 = cir.const #false loc(#loc61)
                        cir.yield %51 : !cir.bool loc(#loc61)
                      }) : (!cir.bool) -> !cir.bool loc(#loc61)
                      cir.yield %50 : !cir.bool loc(#loc61)
                    }, false {
                      %39 = cir.const #false loc(#loc61)
                      cir.yield %39 : !cir.bool loc(#loc61)
                    }) : (!cir.bool) -> !cir.bool loc(#loc61)
                    cir.if %38 {
                      %39 = cir.const #cir.int<0> : !s8i loc(#loc68)
                      %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
                      %41 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc70)
                      %42 = cir.const #cir.int<1> : !s32i loc(#loc71)
                      %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc71)
                      %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc209)
                      %45 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc72)
                      cir.store %39, %45 : !s8i, !cir.ptr<!s8i> loc(#loc210)
                    } loc(#loc208)
                  } loc(#loc204)
                } else {
                  %31 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc11)
                  %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc11)
                  cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc73)
                  %33 = cir.const #cir.int<0> : !s8i loc(#loc74)
                  %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
                  %35 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc76)
                  %36 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc77)
                  cir.store %33, %36 : !s8i, !cir.ptr<!s8i> loc(#loc211)
                } loc(#loc202)
              } loc(#loc199)
            } loc(#loc198)
          } loc(#loc195)
        } loc(#loc193)
      } loc(#loc192)
    } loc(#loc191)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc213)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc83)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc84)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc214)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc85)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc86)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc215)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc87)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc216)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc92)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc93)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc94)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc218)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc96)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc97)
        } loc(#loc219)
      } loc(#loc217)
    } loc(#loc212)
    cir.return loc(#loc17)
  } loc(#loc187)
  cir.global "private"  constant external @GLOBAL_CONST_FALSE : !s32i {alignment = 4 : i64} loc(#loc220)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc100)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc221)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc103)
  cir.func internal private  @_ZN51CWE23_Relative_Path_Traversal__char_console_open_09L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc223)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc224)
    %2 = cir.const #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc224)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc224)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc110)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc225)
    cir.scope {
      %4 = cir.get_global @GLOBAL_CONST_FALSE : !cir.ptr<!s32i> loc(#loc220)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc114)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc114)
      cir.if %6 {
        %7 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc100)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc100)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc118)
      } else {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc119)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
        %9 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc103)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc103)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc119)
      } loc(#loc227)
    } loc(#loc226)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc229)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc126)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc127)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc230)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc128)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc129)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc231)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc130)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc232)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc135)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc136)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc137)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc234)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc139)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc140)
        } loc(#loc235)
      } loc(#loc233)
    } loc(#loc228)
    cir.return loc(#loc105)
  } loc(#loc222)
  cir.func internal private  @_ZN51CWE23_Relative_Path_Traversal__char_console_open_09L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc237)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc238)
    %2 = cir.const #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc238)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc238)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc147)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc239)
    cir.scope {
      %4 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc180)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc151)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc151)
      cir.if %6 {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc153)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
        %9 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc155)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc155)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc153)
      } loc(#loc241)
    } loc(#loc240)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc243)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc161)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc162)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc244)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc163)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc164)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc245)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc165)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc246)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc170)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc171)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc172)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc248)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc174)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc175)
        } loc(#loc249)
      } loc(#loc247)
    } loc(#loc242)
    cir.return loc(#loc142)
  } loc(#loc236)
  cir.func  @_ZN51CWE23_Relative_Path_Traversal__char_console_open_094goodEv() extra(#fn_attr1) {
    cir.call @_ZN51CWE23_Relative_Path_Traversal__char_console_open_09L8goodG2B1Ev() : () -> () loc(#loc178)
    cir.call @_ZN51CWE23_Relative_Path_Traversal__char_console_open_09L8goodG2B2Ev() : () -> () loc(#loc179)
    cir.return loc(#loc177)
  } loc(#loc250)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_open_09.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":109:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":109:18)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("/usr/include/stdio.h":654:1)
#loc6 = loc("/usr/include/stdio.h":655:59)
#loc7 = loc("/usr/include/stdio.h":149:1)
#loc8 = loc("/usr/include/stdio.h":149:14)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":66:31)
#loc12 = loc("/usr/include/fcntl.h":209:1)
#loc13 = loc("/usr/include/fcntl.h":209:56)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":40:1)
#loc17 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":82:1)
#loc18 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":42:5)
#loc19 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":42:12)
#loc20 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":43:5)
#loc21 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":43:37)
#loc22 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":44:12)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":44:5)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":45:5)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":72:5)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":45:8)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":46:5)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":47:9)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":71:9)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":49:13)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":49:41)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":49:30)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":49:37)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":51:13)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":70:13)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":51:17)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":51:30)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":51:40)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":52:13)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":54:17)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":69:17)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":54:27)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":54:32)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":54:31)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":54:47)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":54:60)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":54:70)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":54:21)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":54:80)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":55:17)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":63:17)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":65:17)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":58:31)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":58:38)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":58:21)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":58:42)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":59:21)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":62:21)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":59:25)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":59:35)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":59:37)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":59:40)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":59:45)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":59:53)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":59:54)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":59:59)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":60:21)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":61:43)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":61:25)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":61:30)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":61:38)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":61:39)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":66:21)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":68:37)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":68:21)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":68:26)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":68:33)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":73:5)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":81:5)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":74:9)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":74:13)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":76:25)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":76:31)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":76:38)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":76:47)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":76:55)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":76:20)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":76:9)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":76:63)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":77:9)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":80:9)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":77:13)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":77:26)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":77:25)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":78:9)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":79:19)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":79:13)
#loc98 = loc("../../../testcasesupport/std_testcase.h":110:1)
#loc99 = loc("../../../testcasesupport/std_testcase.h":110:18)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":97:19)
#loc101 = loc("/usr/include/string.h":149:1)
#loc102 = loc("/usr/include/string.h":150:14)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":102:22)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":89:1)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":113:1)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":91:5)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":91:12)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":92:5)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":92:37)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":93:12)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":93:5)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":94:5)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":103:5)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":94:8)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":95:5)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":98:5)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":100:5)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":97:9)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":102:9)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":102:16)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":104:5)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":112:5)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":105:9)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":105:13)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":107:25)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":107:31)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":107:38)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":107:47)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":107:55)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":107:20)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":107:9)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":107:63)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":108:9)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":111:9)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":108:13)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":108:26)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":108:25)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":109:9)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":110:19)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":110:13)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":116:1)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":135:1)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":118:5)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":118:12)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":119:5)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":119:37)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":120:12)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":120:5)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":121:5)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":125:5)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":121:8)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":122:5)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":124:9)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":124:16)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":124:22)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":126:5)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":134:5)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":127:9)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":127:13)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":129:25)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":129:31)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":129:38)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":129:47)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":129:55)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":129:20)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":129:9)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":129:63)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":130:9)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":133:9)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":130:13)
#loc171 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":130:26)
#loc172 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":130:25)
#loc173 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":131:9)
#loc174 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":132:19)
#loc175 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":132:13)
#loc176 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":137:1)
#loc177 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":141:1)
#loc178 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":139:5)
#loc179 = loc("CWE23_Relative_Path_Traversal__char_console_open_09.cpp":140:5)
#loc180 = loc(fused[#loc1, #loc2])
#loc181 = loc(fused[#loc3, #loc4])
#loc182 = loc(fused[#loc5, #loc6])
#loc183 = loc(fused[#loc7, #loc8])
#loc184 = loc(fused[#loc9, #loc10])
#loc185 = loc(fused[#loc12, #loc13])
#loc186 = loc(fused[#loc14, #loc15])
#loc187 = loc(fused[#loc16, #loc17])
#loc188 = loc(fused[#loc18, #loc19])
#loc189 = loc(fused[#loc20, #loc21])
#loc190 = loc(fused[#loc23, #loc22])
#loc191 = loc(fused[#loc24, #loc25])
#loc192 = loc(fused[#loc27, #loc25])
#loc193 = loc(fused[#loc28, #loc29])
#loc194 = loc(fused[#loc30, #loc31])
#loc195 = loc(fused[#loc34, #loc35])
#loc196 = loc(fused[#loc36, #loc37])
#loc197 = loc(fused[#loc36, #loc38])
#loc198 = loc(fused[#loc39, #loc35])
#loc199 = loc(fused[#loc40, #loc41])
#loc200 = loc(fused[#loc45, #loc46])
#loc201 = loc(fused[#loc48, #loc49])
#loc202 = loc(fused[#loc50, #loc51, #loc52, #loc41])
#loc203 = loc(fused[#loc55, #loc56])
#loc204 = loc(fused[#loc57, #loc58])
#loc205 = loc(fused[#loc59, #loc60])
#loc206 = loc(fused[#loc63, #loc64])
#loc207 = loc(fused[#loc62, #loc66])
#loc208 = loc(fused[#loc67, #loc58])
#loc209 = loc(fused[#loc70, #loc71])
#loc210 = loc(fused[#loc69, #loc68])
#loc211 = loc(fused[#loc75, #loc74])
#loc212 = loc(fused[#loc78, #loc79])
#loc213 = loc(fused[#loc80, #loc81])
#loc214 = loc(fused[#loc83, #loc84])
#loc215 = loc(fused[#loc85, #loc86])
#loc216 = loc(fused[#loc88, #loc89])
#loc217 = loc(fused[#loc90, #loc91])
#loc218 = loc(fused[#loc92, #loc93])
#loc219 = loc(fused[#loc95, #loc91])
#loc220 = loc(fused[#loc98, #loc99])
#loc221 = loc(fused[#loc101, #loc102])
#loc222 = loc(fused[#loc104, #loc105])
#loc223 = loc(fused[#loc106, #loc107])
#loc224 = loc(fused[#loc108, #loc109])
#loc225 = loc(fused[#loc111, #loc110])
#loc226 = loc(fused[#loc112, #loc113])
#loc227 = loc(fused[#loc115, #loc116, #loc117, #loc113])
#loc228 = loc(fused[#loc121, #loc122])
#loc229 = loc(fused[#loc123, #loc124])
#loc230 = loc(fused[#loc126, #loc127])
#loc231 = loc(fused[#loc128, #loc129])
#loc232 = loc(fused[#loc131, #loc132])
#loc233 = loc(fused[#loc133, #loc134])
#loc234 = loc(fused[#loc135, #loc136])
#loc235 = loc(fused[#loc138, #loc134])
#loc236 = loc(fused[#loc141, #loc142])
#loc237 = loc(fused[#loc143, #loc144])
#loc238 = loc(fused[#loc145, #loc146])
#loc239 = loc(fused[#loc148, #loc147])
#loc240 = loc(fused[#loc149, #loc150])
#loc241 = loc(fused[#loc152, #loc150])
#loc242 = loc(fused[#loc156, #loc157])
#loc243 = loc(fused[#loc158, #loc159])
#loc244 = loc(fused[#loc161, #loc162])
#loc245 = loc(fused[#loc163, #loc164])
#loc246 = loc(fused[#loc166, #loc167])
#loc247 = loc(fused[#loc168, #loc169])
#loc248 = loc(fused[#loc170, #loc171])
#loc249 = loc(fused[#loc173, #loc169])
#loc250 = loc(fused[#loc176, #loc177])
