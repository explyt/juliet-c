!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc12 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":59:71)
#loc13 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":59:78)
#loc180 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":151:75)
#loc181 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":151:82)
#loc215 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":190:10)
#loc216 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":190:14)
#loc217 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":190:20)
#loc218 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":190:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc251 = loc(fused[#loc12, #loc13])
#loc317 = loc(fused[#loc180, #loc181])
#loc330 = loc(fused[#loc215, #loc216])
#loc331 = loc(fused[#loc217, #loc218])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_popen_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc246)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_connect_socket_popen_41_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc247)
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc248)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc7)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc249)
  cir.func @CWE78_OS_Command_Injection__char_connect_socket_popen_41_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc12, #loc13])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc251)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc14)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc253)
      %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
      %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc7)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc7)
      %5 = cir.call @popen(%2, %4) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc20)
      cir.store %5, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc254)
      cir.scope {
        %6 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc25)
        %7 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc26)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc26)
        %9 = cir.cmp(ne, %6, %8) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc256)
        cir.if %9 {
          %10 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
          %11 = cir.call @pclose(%10) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc29)
        } loc(#loc257)
      } loc(#loc255)
    } loc(#loc252)
    cir.return loc(#loc11)
  } loc(#loc250)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc258)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc259)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr1) loc(#loc260)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc36)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr1) loc(#loc261)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc262)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc263)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc264)
  cir.func private @close(!s32i) -> !s32i loc(#loc265)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_popen_41_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc267)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc247)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_connect_socket_popen_41_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc247)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc247)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc51)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc268)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc270)
      %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc271)
      %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc272)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc273)
      %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc274)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc62)
      %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc62)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc273)
      %12 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc65)
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
      %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc65)
      cir.store %14, %9 : !u64i, !cir.ptr<!u64i> loc(#loc274)
      cir.scope {
        cir.do {
          %15 = cir.const #cir.int<2> : !s32i loc(#loc69)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc70)
          %17 = cir.const #cir.int<6> : !s32i loc(#loc71)
          %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc72)
          cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc276)
          cir.scope {
            %69 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc77)
            %70 = cir.const #cir.int<1> : !s32i loc(#loc78)
            %71 = cir.unary(minus, %70) : !s32i, !s32i loc(#loc78)
            %72 = cir.cmp(eq, %69, %71) : !s32i, !cir.bool loc(#loc278)
            cir.if %72 {
              cir.break loc(#loc80)
            } loc(#loc279)
          } loc(#loc277)
          %19 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc280)
          %20 = cir.const #cir.int<0> : !s32i loc(#loc83)
          %21 = cir.const #cir.int<16> : !u64i loc(#loc281)
          cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc282)
          %22 = cir.const #cir.int<2> : !s32i loc(#loc88)
          %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc88)
          %24 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc89)
          cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc283)
          %25 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc36)
          %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc36)
          %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr1) loc(#loc91)
          %28 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc92)
          %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc93)
          cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc284)
          %30 = cir.const #cir.int<27015> : !s32i loc(#loc96)
          %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc96)
          %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr1) loc(#loc97)
          %33 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc98)
          cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc285)
          cir.scope {
            %69 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc103)
            %70 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc287)
            %71 = cir.const #cir.int<16> : !u64i loc(#loc288)
            %72 = cir.cast(integral, %71 : !u64i), !u32i loc(#loc288)
            %73 = cir.call @connect(%69, %70, %72) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc108)
            %74 = cir.const #cir.int<1> : !s32i loc(#loc109)
            %75 = cir.unary(minus, %74) : !s32i, !s32i loc(#loc109)
            %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc289)
            cir.if %76 {
              cir.break loc(#loc111)
            } loc(#loc290)
          } loc(#loc286)
          %34 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc112)
          %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
          %36 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc114)
          %37 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %36 : !u64i), !cir.ptr<!s8i> loc(#loc115)
          %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc291)
          %39 = cir.const #cir.int<1> : !u64i loc(#loc292)
          %40 = cir.const #cir.int<100> : !s32i loc(#loc120)
          %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc120)
          %42 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc121)
          %43 = cir.binop(sub, %41, %42) : !u64i loc(#loc293)
          %44 = cir.const #cir.int<1> : !s32i loc(#loc122)
          %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc122)
          %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc294)
          %47 = cir.binop(mul, %39, %46) : !u64i loc(#loc295)
          %48 = cir.const #cir.int<0> : !s32i loc(#loc124)
          %49 = cir.call @recv(%34, %38, %47, %48) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc125)
          %50 = cir.cast(integral, %49 : !s64i), !s32i loc(#loc125)
          cir.store %50, %5 : !s32i, !cir.ptr<!s32i> loc(#loc296)
          cir.scope {
            %69 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc130)
            %70 = cir.const #cir.int<1> : !s32i loc(#loc131)
            %71 = cir.unary(minus, %70) : !s32i, !s32i loc(#loc131)
            %72 = cir.cmp(eq, %69, %71) : !s32i, !cir.bool loc(#loc298)
            %73 = cir.ternary(%72, true {
              %74 = cir.const #true loc(#loc132)
              cir.yield %74 : !cir.bool loc(#loc132)
            }, false {
              %74 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc133)
              %75 = cir.const #cir.int<0> : !s32i loc(#loc134)
              %76 = cir.cmp(eq, %74, %75) : !s32i, !cir.bool loc(#loc299)
              %77 = cir.ternary(%76, true {
                %78 = cir.const #true loc(#loc132)
                cir.yield %78 : !cir.bool loc(#loc132)
              }, false {
                %78 = cir.const #false loc(#loc132)
                cir.yield %78 : !cir.bool loc(#loc132)
              }) : (!cir.bool) -> !cir.bool loc(#loc132)
              cir.yield %77 : !cir.bool loc(#loc132)
            }) : (!cir.bool) -> !cir.bool loc(#loc132)
            cir.if %73 {
              cir.break loc(#loc136)
            } loc(#loc300)
          } loc(#loc297)
          %51 = cir.const #cir.int<0> : !s32i loc(#loc137)
          %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc137)
          %53 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
          %54 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc139)
          %55 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc140)
          %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc140)
          %57 = cir.const #cir.int<1> : !u64i loc(#loc301)
          %58 = cir.binop(div, %56, %57) : !u64i loc(#loc302)
          %59 = cir.binop(add, %54, %58) : !u64i loc(#loc303)
          %60 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %59 : !u64i), !cir.ptr<!s8i> loc(#loc143)
          cir.store %52, %60 : !s8i, !cir.ptr<!s8i> loc(#loc304)
          %61 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc144)
          %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
          %63 = cir.const #cir.int<13> : !s32i loc(#loc146)
          %64 = cir.call @strchr(%62, %63) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc144)
          cir.store %64, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc305)
          cir.scope {
            %69 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
            %70 = cir.cast(ptr_to_bool, %69 : !cir.ptr<!s8i>), !cir.bool loc(#loc151)
            cir.if %70 {
              %71 = cir.const #cir.int<0> : !s32i loc(#loc153)
              %72 = cir.cast(integral, %71 : !s32i), !s8i loc(#loc153)
              %73 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
              cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc308)
            } loc(#loc307)
          } loc(#loc306)
          %65 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc156)
          %66 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
          %67 = cir.const #cir.int<10> : !s32i loc(#loc158)
          %68 = cir.call @strchr(%66, %67) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc156)
          cir.store %68, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc309)
          cir.scope {
            %69 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
            %70 = cir.cast(ptr_to_bool, %69 : !cir.ptr<!s8i>), !cir.bool loc(#loc163)
            cir.if %70 {
              %71 = cir.const #cir.int<0> : !s32i loc(#loc165)
              %72 = cir.cast(integral, %71 : !s32i), !s8i loc(#loc165)
              %73 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
              cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc312)
            } loc(#loc311)
          } loc(#loc310)
          cir.yield loc(#loc68)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc168)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc168)
          cir.condition(%16) loc(#loc168)
        } loc(#loc275)
      } loc(#loc275)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc171)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc172)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc172)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc314)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc174)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc175)
        } loc(#loc315)
      } loc(#loc313)
    } loc(#loc269)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
    cir.call @CWE78_OS_Command_Injection__char_connect_socket_popen_41_badSink(%4) : (!cir.ptr<!s8i>) -> () loc(#loc177)
    cir.return loc(#loc48)
  } loc(#loc266)
  cir.func @CWE78_OS_Command_Injection__char_connect_socket_popen_41_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc180, #loc181])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc317)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc182)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc319)
      %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc187)
      %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc188)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc188)
      %5 = cir.call @popen(%2, %4) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc189)
      cir.store %5, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc320)
      cir.scope {
        %6 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc194)
        %7 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc195)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc195)
        %9 = cir.cmp(ne, %6, %8) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc322)
        cir.if %9 {
          %10 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc197)
          %11 = cir.call @pclose(%10) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc198)
        } loc(#loc323)
      } loc(#loc321)
    } loc(#loc318)
    cir.return loc(#loc179)
  } loc(#loc316)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_popen_41_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc325)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc201)
    cir.return loc(#loc200)
  } loc(#loc324)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc326)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc327)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc328)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc209)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc210)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc211)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc212)
  cir.func @main(%arg0: !s32i loc(fused[#loc215, #loc216]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc217, #loc218])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc330)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc331)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc214)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc219)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc219)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc220)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc221)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc221)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc222)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc209)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc209)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc223)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_connect_socket_popen_41_good : !cir.ptr<!cir.func<!void ()>> loc(#loc332)
    cir.call @CWE78_OS_Command_Injection__char_connect_socket_popen_41_good() : () -> () loc(#loc224)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc210)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc210)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc226)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc211)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc211)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc227)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_connect_socket_popen_41_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc333)
    cir.call @CWE78_OS_Command_Injection__char_connect_socket_popen_41_bad() : () -> () loc(#loc228)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc212)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc212)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc230)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc231)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc334)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc334)
    cir.return %17 : !s32i loc(#loc334)
  } loc(#loc329)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc335)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc235)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc337)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc246)
    %2 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc246)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc246)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc240)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc338)
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc242)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc243)
    %6 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc235)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc235)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc242)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc244)
    cir.call @CWE78_OS_Command_Injection__char_connect_socket_popen_41_goodG2BSink(%9) : (!cir.ptr<!s8i>) -> () loc(#loc245)
    cir.return loc(#loc237)
  } loc(#loc336)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":168:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":168:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":75:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":75:26)
#loc5 = loc("/usr/include/stdio.h":893:1)
#loc6 = loc("/usr/include/stdio.h":894:3)
#loc7 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":64:28)
#loc8 = loc("/usr/include/stdio.h":887:1)
#loc9 = loc("/usr/include/stdio.h":887:36)
#loc10 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":59:1)
#loc11 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":70:1)
#loc14 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":60:1)
#loc15 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":61:5)
#loc16 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":69:5)
#loc17 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":62:9)
#loc18 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":62:15)
#loc19 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":64:22)
#loc20 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":64:16)
#loc21 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":64:9)
#loc22 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":64:31)
#loc23 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":65:9)
#loc24 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":68:9)
#loc25 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":65:13)
#loc26 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":65:21)
#loc27 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":66:9)
#loc28 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":67:20)
#loc29 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":67:13)
#loc30 = loc("/usr/include/string.h":407:1)
#loc31 = loc("/usr/include/string.h":408:33)
#loc32 = loc("/usr/include/sys/socket.h":102:1)
#loc33 = loc("/usr/include/sys/socket.h":102:62)
#loc34 = loc("/usr/include/arpa/inet.h":34:1)
#loc35 = loc("/usr/include/arpa/inet.h":34:47)
#loc36 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":104:49)
#loc37 = loc("/usr/include/netinet/in.h":404:1)
#loc38 = loc("/usr/include/netinet/in.h":405:40)
#loc39 = loc("/usr/include/sys/socket.h":126:1)
#loc40 = loc("/usr/include/sys/socket.h":126:75)
#loc41 = loc("/usr/include/sys/socket.h":145:1)
#loc42 = loc("/usr/include/sys/socket.h":145:68)
#loc43 = loc("/usr/include/string.h":246:1)
#loc44 = loc("/usr/include/string.h":247:33)
#loc45 = loc("/usr/include/unistd.h":358:1)
#loc46 = loc("/usr/include/unistd.h":358:27)
#loc47 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":72:1)
#loc48 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":145:1)
#loc49 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":74:5)
#loc50 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":74:12)
#loc51 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":76:12)
#loc52 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":76:5)
#loc53 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":77:5)
#loc54 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":143:5)
#loc55 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":82:9)
#loc56 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":82:13)
#loc57 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":83:9)
#loc58 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":83:28)
#loc59 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":84:9)
#loc60 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":84:15)
#loc61 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":85:9)
#loc62 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":85:32)
#loc63 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":86:9)
#loc64 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":86:37)
#loc65 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":86:26)
#loc66 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":86:33)
#loc67 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":87:9)
#loc68 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":132:17)
#loc69 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":97:36)
#loc70 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":97:45)
#loc71 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":97:58)
#loc72 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":97:29)
#loc73 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":97:13)
#loc74 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":97:69)
#loc75 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":98:13)
#loc76 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":101:13)
#loc77 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":98:17)
#loc78 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":98:34)
#loc79 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":99:13)
#loc80 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":100:17)
#loc81 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":102:20)
#loc82 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":102:21)
#loc83 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":102:30)
#loc84 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":102:33)
#loc85 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":102:47)
#loc86 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":102:13)
#loc87 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":102:48)
#loc88 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":103:34)
#loc89 = loc("/usr/include/netinet/in.h":249:5)
#loc90 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":103:13)
#loc91 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":104:39)
#loc92 = loc("/usr/include/netinet/in.h":251:20)
#loc93 = loc("/usr/include/netinet/in.h":33:15)
#loc94 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":104:13)
#loc95 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":104:59)
#loc96 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":105:38)
#loc97 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":105:32)
#loc98 = loc("/usr/include/netinet/in.h":250:15)
#loc99 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":105:13)
#loc100 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":105:46)
#loc101 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":106:13)
#loc102 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":109:13)
#loc103 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":106:25)
#loc104 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":106:58)
#loc105 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":106:59)
#loc106 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":106:68)
#loc107 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":106:82)
#loc108 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":106:17)
#loc109 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":106:88)
#loc110 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":107:13)
#loc111 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":108:17)
#loc112 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":113:31)
#loc113 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":113:55)
#loc114 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":113:62)
#loc115 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":113:60)
#loc116 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":113:46)
#loc117 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":113:69)
#loc118 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":113:72)
#loc119 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":113:83)
#loc120 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":113:88)
#loc121 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":113:94)
#loc122 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":113:104)
#loc123 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":113:105)
#loc124 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":113:108)
#loc125 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":113:26)
#loc126 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":113:13)
#loc127 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":113:109)
#loc128 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":114:13)
#loc129 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":117:13)
#loc130 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":114:17)
#loc131 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":114:31)
#loc132 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":114:44)
#loc133 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":114:47)
#loc134 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":114:61)
#loc135 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":115:13)
#loc136 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":116:17)
#loc137 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":119:57)
#loc138 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":119:13)
#loc139 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":119:18)
#loc140 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":119:28)
#loc141 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":119:41)
#loc142 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":119:52)
#loc143 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":119:53)
#loc144 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":121:23)
#loc145 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":121:30)
#loc146 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":121:36)
#loc147 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":121:13)
#loc148 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":121:40)
#loc149 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":122:13)
#loc150 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":125:13)
#loc151 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":122:17)
#loc152 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":123:13)
#loc153 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":124:28)
#loc154 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":124:18)
#loc155 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":124:17)
#loc156 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":126:23)
#loc157 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":126:30)
#loc158 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":126:36)
#loc159 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":126:13)
#loc160 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":126:40)
#loc161 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":127:13)
#loc162 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":130:13)
#loc163 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":127:17)
#loc164 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":128:13)
#loc165 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":129:28)
#loc166 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":129:18)
#loc167 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":129:17)
#loc168 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":132:16)
#loc169 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":133:9)
#loc170 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":136:9)
#loc171 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":133:13)
#loc172 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":133:30)
#loc173 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":134:9)
#loc174 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":135:26)
#loc175 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":135:13)
#loc176 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":144:70)
#loc177 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":144:5)
#loc178 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":151:1)
#loc179 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":162:1)
#loc182 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":152:1)
#loc183 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":153:5)
#loc184 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":161:5)
#loc185 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":154:9)
#loc186 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":154:15)
#loc187 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":156:22)
#loc188 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":156:28)
#loc189 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":156:16)
#loc190 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":156:9)
#loc191 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":156:31)
#loc192 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":157:9)
#loc193 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":160:9)
#loc194 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":157:13)
#loc195 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":157:21)
#loc196 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":158:9)
#loc197 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":159:20)
#loc198 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":159:13)
#loc199 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":175:1)
#loc200 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":178:1)
#loc201 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":177:5)
#loc202 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":177:13)
#loc203 = loc("/usr/include/stdlib.h":575:1)
#loc204 = loc("/usr/include/stdlib.h":575:41)
#loc205 = loc("/usr/include/time.h":76:1)
#loc206 = loc("/usr/include/time.h":76:38)
#loc207 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc208 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc209 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":195:15)
#loc210 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":197:15)
#loc211 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":200:15)
#loc212 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":202:15)
#loc213 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":190:1)
#loc214 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":205:1)
#loc219 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":191:1)
#loc220 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":193:27)
#loc221 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":193:22)
#loc222 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":193:5)
#loc223 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":195:5)
#loc224 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":196:5)
#loc225 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":196:67)
#loc226 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":197:5)
#loc227 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":200:5)
#loc228 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":201:5)
#loc229 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":201:66)
#loc230 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":202:5)
#loc231 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":204:12)
#loc232 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":204:5)
#loc233 = loc("/usr/include/string.h":149:1)
#loc234 = loc("/usr/include/string.h":150:14)
#loc235 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":171:18)
#loc236 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":165:1)
#loc237 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":173:1)
#loc238 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":167:5)
#loc239 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":167:12)
#loc240 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":169:12)
#loc241 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":169:5)
#loc242 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":171:5)
#loc243 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":171:12)
#loc244 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":172:74)
#loc245 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":172:5)
#loc246 = loc(fused[#loc1, #loc2])
#loc247 = loc(fused[#loc3, #loc4])
#loc248 = loc(fused[#loc5, #loc6])
#loc249 = loc(fused[#loc8, #loc9])
#loc250 = loc(fused[#loc10, #loc11])
#loc252 = loc(fused[#loc15, #loc16])
#loc253 = loc(fused[#loc17, #loc18])
#loc254 = loc(fused[#loc21, #loc22])
#loc255 = loc(fused[#loc23, #loc24])
#loc256 = loc(fused[#loc25, #loc26])
#loc257 = loc(fused[#loc27, #loc24])
#loc258 = loc(fused[#loc30, #loc31])
#loc259 = loc(fused[#loc32, #loc33])
#loc260 = loc(fused[#loc34, #loc35])
#loc261 = loc(fused[#loc37, #loc38])
#loc262 = loc(fused[#loc39, #loc40])
#loc263 = loc(fused[#loc41, #loc42])
#loc264 = loc(fused[#loc43, #loc44])
#loc265 = loc(fused[#loc45, #loc46])
#loc266 = loc(fused[#loc47, #loc48])
#loc267 = loc(fused[#loc49, #loc50])
#loc268 = loc(fused[#loc52, #loc51])
#loc269 = loc(fused[#loc53, #loc54])
#loc270 = loc(fused[#loc55, #loc56])
#loc271 = loc(fused[#loc57, #loc58])
#loc272 = loc(fused[#loc59, #loc60])
#loc273 = loc(fused[#loc61, #loc62])
#loc274 = loc(fused[#loc63, #loc64])
#loc275 = loc(fused[#loc67, #loc68])
#loc276 = loc(fused[#loc73, #loc74])
#loc277 = loc(fused[#loc75, #loc76])
#loc278 = loc(fused[#loc77, #loc78])
#loc279 = loc(fused[#loc79, #loc76])
#loc280 = loc(fused[#loc81, #loc82])
#loc281 = loc(fused[#loc84, #loc85])
#loc282 = loc(fused[#loc86, #loc87])
#loc283 = loc(fused[#loc90, #loc88])
#loc284 = loc(fused[#loc94, #loc95])
#loc285 = loc(fused[#loc99, #loc100])
#loc286 = loc(fused[#loc101, #loc102])
#loc287 = loc(fused[#loc104, #loc105])
#loc288 = loc(fused[#loc106, #loc107])
#loc289 = loc(fused[#loc108, #loc109])
#loc290 = loc(fused[#loc110, #loc102])
#loc291 = loc(fused[#loc116, #loc117])
#loc292 = loc(fused[#loc118, #loc119])
#loc293 = loc(fused[#loc120, #loc121])
#loc294 = loc(fused[#loc120, #loc122])
#loc295 = loc(fused[#loc118, #loc123])
#loc296 = loc(fused[#loc126, #loc127])
#loc297 = loc(fused[#loc128, #loc129])
#loc298 = loc(fused[#loc130, #loc131])
#loc299 = loc(fused[#loc133, #loc134])
#loc300 = loc(fused[#loc135, #loc129])
#loc301 = loc(fused[#loc141, #loc142])
#loc302 = loc(fused[#loc140, #loc142])
#loc303 = loc(fused[#loc139, #loc142])
#loc304 = loc(fused[#loc138, #loc137])
#loc305 = loc(fused[#loc147, #loc148])
#loc306 = loc(fused[#loc149, #loc150])
#loc307 = loc(fused[#loc152, #loc150])
#loc308 = loc(fused[#loc155, #loc153])
#loc309 = loc(fused[#loc159, #loc160])
#loc310 = loc(fused[#loc161, #loc162])
#loc311 = loc(fused[#loc164, #loc162])
#loc312 = loc(fused[#loc167, #loc165])
#loc313 = loc(fused[#loc169, #loc170])
#loc314 = loc(fused[#loc171, #loc172])
#loc315 = loc(fused[#loc173, #loc170])
#loc316 = loc(fused[#loc178, #loc179])
#loc318 = loc(fused[#loc183, #loc184])
#loc319 = loc(fused[#loc185, #loc186])
#loc320 = loc(fused[#loc190, #loc191])
#loc321 = loc(fused[#loc192, #loc193])
#loc322 = loc(fused[#loc194, #loc195])
#loc323 = loc(fused[#loc196, #loc193])
#loc324 = loc(fused[#loc199, #loc200])
#loc325 = loc(fused[#loc201, #loc202])
#loc326 = loc(fused[#loc203, #loc204])
#loc327 = loc(fused[#loc205, #loc206])
#loc328 = loc(fused[#loc207, #loc208])
#loc329 = loc(fused[#loc213, #loc214])
#loc332 = loc(fused[#loc224, #loc225])
#loc333 = loc(fused[#loc228, #loc229])
#loc334 = loc(fused[#loc232, #loc231])
#loc335 = loc(fused[#loc233, #loc234])
#loc336 = loc(fused[#loc236, #loc237])
#loc337 = loc(fused[#loc238, #loc239])
#loc338 = loc(fused[#loc241, #loc240])
