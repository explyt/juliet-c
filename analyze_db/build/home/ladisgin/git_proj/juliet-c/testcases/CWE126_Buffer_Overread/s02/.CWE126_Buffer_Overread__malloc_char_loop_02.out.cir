!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc106 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":140:10)
#loc107 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":140:14)
#loc108 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":140:20)
#loc109 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":140:32)
#loc325 = loc(fused[#loc106, #loc107])
#loc326 = loc(fused[#loc108, #loc109])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_loop_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc286)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc287)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc288)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc289)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc290)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_loop_02_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc292)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc15)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc293)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc19)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc19)
      cir.if %3 {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc21)
        %5 = cir.const #cir.int<50> : !s32i loc(#loc22)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc22)
        %7 = cir.const #cir.int<1> : !u64i loc(#loc296)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc297)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc21)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc298)
        cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc299)
        cir.scope {
          %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
          %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
          %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc30)
          %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc301)
          cir.if %28 {
            %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc32)
            %30 = cir.const #cir.int<1> : !s32i loc(#loc33)
            %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc34)
            cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc32)
          } loc(#loc302)
        } loc(#loc300)
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc35)
        %13 = cir.const #cir.int<65> : !s32i loc(#loc36)
        %14 = cir.const #cir.int<50> : !s32i loc(#loc37)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc38)
        %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc37)
        %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc37)
        cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc303)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc41)
        %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc41)
        %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
        %21 = cir.const #cir.int<50> : !s32i loc(#loc43)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc44)
        %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc43)
        %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc45)
        cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc304)
      } loc(#loc295)
    } loc(#loc294)
    cir.scope {
      %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc306)
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc307)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc308)
      %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc53)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc53)
      %7 = cir.const #cir.int<67> : !s32i loc(#loc54)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc55)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc56)
      %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc55)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc55)
      cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc309)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc59)
      %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc59)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc60)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc61)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc60)
      %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc62)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc62)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc310)
      %19 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc63)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc64)
      %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc63)
      cir.store %21, %3 : !u64i, !cir.ptr<!u64i> loc(#loc311)
      cir.scope {
        %33 = cir.const #cir.int<0> : !s32i loc(#loc69)
        %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc69)
        cir.store %34, %2 : !u64i, !cir.ptr<!u64i> loc(#loc313)
        cir.for : cond {
          %35 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc71)
          %36 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc72)
          %37 = cir.cmp(lt, %35, %36) : !u64i, !cir.bool loc(#loc314)
          cir.condition(%37) loc(#loc73)
        } body {
          cir.scope {
            %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
            %36 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc76)
            %37 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %36 : !u64i), !cir.ptr<!s8i> loc(#loc77)
            %38 = cir.load %37 : !cir.ptr<!s8i>, !s8i loc(#loc75)
            %39 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc78)
            %40 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc79)
            %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc79)
            cir.store %38, %41 : !s8i, !cir.ptr<!s8i> loc(#loc316)
          } loc(#loc315)
          cir.yield loc(#loc68)
        } step {
          %35 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc80)
          %36 = cir.unary(inc, %35) : !u64i, !u64i loc(#loc81)
          cir.store %36, %2 : !u64i, !cir.ptr<!u64i> loc(#loc317)
          cir.yield loc(#loc312)
        } loc(#loc312)
      } loc(#loc312)
      %22 = cir.const #cir.int<0> : !s32i loc(#loc82)
      %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc82)
      %24 = cir.const #cir.int<100> : !s32i loc(#loc83)
      %25 = cir.const #cir.int<1> : !s32i loc(#loc84)
      %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc83)
      %27 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc85)
      %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc85)
      cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc318)
      %29 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc86)
      cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc87)
      %30 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc88)
      %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
      %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc89)
      cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc88)
    } loc(#loc305)
    cir.return loc(#loc12)
  } loc(#loc291)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_loop_02_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc320)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc92)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc321)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc94)
    cir.return loc(#loc91)
  } loc(#loc319)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc322)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc323)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc100)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc101)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc102)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc103)
  cir.func @main(%arg0: !s32i loc(fused[#loc106, #loc107]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc108, #loc109])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc325)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc326)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc105)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc110)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc110)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc111)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc112)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc112)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc113)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc100)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    %8 = cir.get_global @CWE126_Buffer_Overread__malloc_char_loop_02_good : !cir.ptr<!cir.func<!void ()>> loc(#loc327)
    cir.call @CWE126_Buffer_Overread__malloc_char_loop_02_good() : () -> () loc(#loc115)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc101)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc101)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc102)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc102)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    %13 = cir.get_global @CWE126_Buffer_Overread__malloc_char_loop_02_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc328)
    cir.call @CWE126_Buffer_Overread__malloc_char_loop_02_bad() : () -> () loc(#loc119)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc103)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc103)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc121)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc122)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc329)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc329)
    cir.return %17 : !s32i loc(#loc329)
  } loc(#loc324)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc124)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc331)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc129)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc332)
    cir.scope {
      %2 = cir.const #cir.int<0> : !s32i loc(#loc133)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc133)
      cir.if %3 {
        %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc124)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc124)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc137)
      } else {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc138)
        %5 = cir.const #cir.int<100> : !s32i loc(#loc139)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc139)
        %7 = cir.const #cir.int<1> : !u64i loc(#loc335)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc336)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc138)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc337)
        cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc338)
        cir.scope {
          %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
          %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc147)
          %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc147)
          %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc340)
          cir.if %28 {
            %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc149)
            %30 = cir.const #cir.int<1> : !s32i loc(#loc150)
            %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc151)
            cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc149)
          } loc(#loc341)
        } loc(#loc339)
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc152)
        %13 = cir.const #cir.int<65> : !s32i loc(#loc153)
        %14 = cir.const #cir.int<100> : !s32i loc(#loc154)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc155)
        %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc154)
        %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc154)
        cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc342)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc158)
        %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc158)
        %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
        %21 = cir.const #cir.int<100> : !s32i loc(#loc160)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc161)
        %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc160)
        %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc162)
        cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc343)
      } loc(#loc334)
    } loc(#loc333)
    cir.scope {
      %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc345)
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc346)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc347)
      %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc170)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc170)
      %7 = cir.const #cir.int<67> : !s32i loc(#loc171)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc172)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc173)
      %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc172)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc172)
      cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc348)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc176)
      %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc176)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc177)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc178)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc177)
      %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc179)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc179)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc349)
      %19 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc180)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc181)
      %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc180)
      cir.store %21, %3 : !u64i, !cir.ptr<!u64i> loc(#loc350)
      cir.scope {
        %33 = cir.const #cir.int<0> : !s32i loc(#loc186)
        %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc186)
        cir.store %34, %2 : !u64i, !cir.ptr<!u64i> loc(#loc352)
        cir.for : cond {
          %35 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc188)
          %36 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc189)
          %37 = cir.cmp(lt, %35, %36) : !u64i, !cir.bool loc(#loc353)
          cir.condition(%37) loc(#loc190)
        } body {
          cir.scope {
            %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc192)
            %36 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc193)
            %37 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %36 : !u64i), !cir.ptr<!s8i> loc(#loc194)
            %38 = cir.load %37 : !cir.ptr<!s8i>, !s8i loc(#loc192)
            %39 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc195)
            %40 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc196)
            %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc196)
            cir.store %38, %41 : !s8i, !cir.ptr<!s8i> loc(#loc355)
          } loc(#loc354)
          cir.yield loc(#loc185)
        } step {
          %35 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc197)
          %36 = cir.unary(inc, %35) : !u64i, !u64i loc(#loc198)
          cir.store %36, %2 : !u64i, !cir.ptr<!u64i> loc(#loc356)
          cir.yield loc(#loc351)
        } loc(#loc351)
      } loc(#loc351)
      %22 = cir.const #cir.int<0> : !s32i loc(#loc199)
      %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc199)
      %24 = cir.const #cir.int<100> : !s32i loc(#loc200)
      %25 = cir.const #cir.int<1> : !s32i loc(#loc201)
      %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc200)
      %27 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc202)
      %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc202)
      cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc357)
      %29 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc203)
      cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc204)
      %30 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc205)
      %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc206)
      %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc206)
      cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc205)
    } loc(#loc344)
    cir.return loc(#loc126)
  } loc(#loc330)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc359)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc211)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc360)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc215)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc215)
      cir.if %3 {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc217)
        %5 = cir.const #cir.int<100> : !s32i loc(#loc218)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc218)
        %7 = cir.const #cir.int<1> : !u64i loc(#loc363)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc364)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc217)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc365)
        cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc366)
        cir.scope {
          %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc225)
          %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc226)
          %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc226)
          %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc368)
          cir.if %28 {
            %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc228)
            %30 = cir.const #cir.int<1> : !s32i loc(#loc229)
            %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc230)
            cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc228)
          } loc(#loc369)
        } loc(#loc367)
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc231)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc231)
        %13 = cir.const #cir.int<65> : !s32i loc(#loc232)
        %14 = cir.const #cir.int<100> : !s32i loc(#loc233)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc234)
        %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc233)
        %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc233)
        cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc370)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc237)
        %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc237)
        %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc238)
        %21 = cir.const #cir.int<100> : !s32i loc(#loc239)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc240)
        %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc239)
        %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc241)
        cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc371)
      } loc(#loc362)
    } loc(#loc361)
    cir.scope {
      %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc373)
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc374)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc375)
      %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc249)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc249)
      %7 = cir.const #cir.int<67> : !s32i loc(#loc250)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc251)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc252)
      %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc251)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc251)
      cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc376)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc255)
      %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc255)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc256)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc257)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc256)
      %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc258)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc258)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc377)
      %19 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc259)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc260)
      %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc259)
      cir.store %21, %3 : !u64i, !cir.ptr<!u64i> loc(#loc378)
      cir.scope {
        %33 = cir.const #cir.int<0> : !s32i loc(#loc265)
        %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc265)
        cir.store %34, %2 : !u64i, !cir.ptr<!u64i> loc(#loc380)
        cir.for : cond {
          %35 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc267)
          %36 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc268)
          %37 = cir.cmp(lt, %35, %36) : !u64i, !cir.bool loc(#loc381)
          cir.condition(%37) loc(#loc269)
        } body {
          cir.scope {
            %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc271)
            %36 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc272)
            %37 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %36 : !u64i), !cir.ptr<!s8i> loc(#loc273)
            %38 = cir.load %37 : !cir.ptr<!s8i>, !s8i loc(#loc271)
            %39 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc274)
            %40 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc275)
            %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc275)
            cir.store %38, %41 : !s8i, !cir.ptr<!s8i> loc(#loc383)
          } loc(#loc382)
          cir.yield loc(#loc264)
        } step {
          %35 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc276)
          %36 = cir.unary(inc, %35) : !u64i, !u64i loc(#loc277)
          cir.store %36, %2 : !u64i, !cir.ptr<!u64i> loc(#loc384)
          cir.yield loc(#loc379)
        } loc(#loc379)
      } loc(#loc379)
      %22 = cir.const #cir.int<0> : !s32i loc(#loc278)
      %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc278)
      %24 = cir.const #cir.int<100> : !s32i loc(#loc279)
      %25 = cir.const #cir.int<1> : !s32i loc(#loc280)
      %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc279)
      %27 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc281)
      %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc281)
      cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc385)
      %29 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc282)
      cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc283)
      %30 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc284)
      %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc285)
      %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc285)
      cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc284)
    } loc(#loc372)
    cir.return loc(#loc208)
  } loc(#loc358)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_loop_02.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":23:1)
#loc12 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":51:1)
#loc13 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":25:5)
#loc14 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":25:12)
#loc15 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":26:12)
#loc16 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":26:5)
#loc17 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":27:5)
#loc18 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":34:5)
#loc19 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":27:8)
#loc20 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":28:5)
#loc21 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":30:24)
#loc22 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":30:31)
#loc23 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":30:34)
#loc24 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":30:45)
#loc25 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":30:46)
#loc26 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":30:9)
#loc27 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":31:9)
#loc28 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":31:37)
#loc29 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":31:13)
#loc30 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":31:21)
#loc31 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":31:27)
#loc32 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":31:28)
#loc33 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":31:34)
#loc34 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":31:33)
#loc35 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":32:16)
#loc36 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":32:22)
#loc37 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":32:27)
#loc38 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":32:30)
#loc39 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":32:9)
#loc40 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":32:31)
#loc41 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":33:22)
#loc42 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":33:9)
#loc43 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":33:14)
#loc44 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":33:17)
#loc45 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":33:18)
#loc46 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":35:5)
#loc47 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":50:5)
#loc48 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":36:9)
#loc49 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":36:16)
#loc50 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":36:19)
#loc51 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":37:9)
#loc52 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":37:22)
#loc53 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":38:16)
#loc54 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":38:22)
#loc55 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":38:27)
#loc56 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":38:31)
#loc57 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":38:9)
#loc58 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":38:32)
#loc59 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":39:23)
#loc60 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":39:14)
#loc61 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":39:18)
#loc62 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":39:9)
#loc63 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":40:19)
#loc64 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":40:26)
#loc65 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":40:9)
#loc66 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":40:30)
#loc67 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":43:9)
#loc68 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":46:9)
#loc69 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":43:18)
#loc70 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":43:14)
#loc71 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":43:21)
#loc72 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":43:25)
#loc73 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":43:23)
#loc74 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":44:9)
#loc75 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":45:23)
#loc76 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":45:28)
#loc77 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":45:29)
#loc78 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":45:18)
#loc79 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":45:13)
#loc80 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":43:35)
#loc81 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":43:34)
#loc82 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":47:23)
#loc83 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":47:14)
#loc84 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":47:18)
#loc85 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":47:9)
#loc86 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":48:19)
#loc87 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":48:9)
#loc88 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":49:9)
#loc89 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":49:14)
#loc90 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":124:1)
#loc91 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":128:1)
#loc92 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":126:5)
#loc93 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":126:14)
#loc94 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":127:5)
#loc95 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":127:14)
#loc96 = loc("/usr/include/stdlib.h":575:1)
#loc97 = loc("/usr/include/stdlib.h":575:41)
#loc98 = loc("/usr/include/time.h":76:1)
#loc99 = loc("/usr/include/time.h":76:38)
#loc100 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":145:15)
#loc101 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":147:15)
#loc102 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":150:15)
#loc103 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":152:15)
#loc104 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":140:1)
#loc105 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":155:1)
#loc110 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":141:1)
#loc111 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":143:27)
#loc112 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":143:22)
#loc113 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":143:5)
#loc114 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":145:5)
#loc115 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":146:5)
#loc116 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":146:54)
#loc117 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":147:5)
#loc118 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":150:5)
#loc119 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":151:5)
#loc120 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":151:53)
#loc121 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":152:5)
#loc122 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":154:12)
#loc123 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":154:5)
#loc124 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":65:19)
#loc125 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":58:1)
#loc126 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":91:1)
#loc127 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":60:5)
#loc128 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":60:12)
#loc129 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":61:12)
#loc130 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":61:5)
#loc131 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":62:5)
#loc132 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":74:5)
#loc133 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":62:8)
#loc134 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":63:5)
#loc135 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":66:5)
#loc136 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":68:5)
#loc137 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":65:9)
#loc138 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":70:24)
#loc139 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":70:31)
#loc140 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":70:35)
#loc141 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":70:46)
#loc142 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":70:47)
#loc143 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":70:9)
#loc144 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":71:9)
#loc145 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":71:37)
#loc146 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":71:13)
#loc147 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":71:21)
#loc148 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":71:27)
#loc149 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":71:28)
#loc150 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":71:34)
#loc151 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":71:33)
#loc152 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":72:16)
#loc153 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":72:22)
#loc154 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":72:27)
#loc155 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":72:31)
#loc156 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":72:9)
#loc157 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":72:32)
#loc158 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":73:23)
#loc159 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":73:9)
#loc160 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":73:14)
#loc161 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":73:18)
#loc162 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":73:19)
#loc163 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":75:5)
#loc164 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":90:5)
#loc165 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":76:9)
#loc166 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":76:16)
#loc167 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":76:19)
#loc168 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":77:9)
#loc169 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":77:22)
#loc170 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":78:16)
#loc171 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":78:22)
#loc172 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":78:27)
#loc173 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":78:31)
#loc174 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":78:9)
#loc175 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":78:32)
#loc176 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":79:23)
#loc177 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":79:14)
#loc178 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":79:18)
#loc179 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":79:9)
#loc180 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":80:19)
#loc181 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":80:26)
#loc182 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":80:9)
#loc183 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":80:30)
#loc184 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":83:9)
#loc185 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":86:9)
#loc186 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":83:18)
#loc187 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":83:14)
#loc188 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":83:21)
#loc189 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":83:25)
#loc190 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":83:23)
#loc191 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":84:9)
#loc192 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":85:23)
#loc193 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":85:28)
#loc194 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":85:29)
#loc195 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":85:18)
#loc196 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":85:13)
#loc197 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":83:35)
#loc198 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":83:34)
#loc199 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":87:23)
#loc200 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":87:14)
#loc201 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":87:18)
#loc202 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":87:9)
#loc203 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":88:19)
#loc204 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":88:9)
#loc205 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":89:9)
#loc206 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":89:14)
#loc207 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":94:1)
#loc208 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":122:1)
#loc209 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":96:5)
#loc210 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":96:12)
#loc211 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":97:12)
#loc212 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":97:5)
#loc213 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":98:5)
#loc214 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":105:5)
#loc215 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":98:8)
#loc216 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":99:5)
#loc217 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":101:24)
#loc218 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":101:31)
#loc219 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":101:35)
#loc220 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":101:46)
#loc221 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":101:47)
#loc222 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":101:9)
#loc223 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":102:9)
#loc224 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":102:37)
#loc225 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":102:13)
#loc226 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":102:21)
#loc227 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":102:27)
#loc228 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":102:28)
#loc229 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":102:34)
#loc230 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":102:33)
#loc231 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":103:16)
#loc232 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":103:22)
#loc233 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":103:27)
#loc234 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":103:31)
#loc235 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":103:9)
#loc236 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":103:32)
#loc237 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":104:23)
#loc238 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":104:9)
#loc239 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":104:14)
#loc240 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":104:18)
#loc241 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":104:19)
#loc242 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":106:5)
#loc243 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":121:5)
#loc244 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":107:9)
#loc245 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":107:16)
#loc246 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":107:19)
#loc247 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":108:9)
#loc248 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":108:22)
#loc249 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":109:16)
#loc250 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":109:22)
#loc251 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":109:27)
#loc252 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":109:31)
#loc253 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":109:9)
#loc254 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":109:32)
#loc255 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":110:23)
#loc256 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":110:14)
#loc257 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":110:18)
#loc258 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":110:9)
#loc259 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":111:19)
#loc260 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":111:26)
#loc261 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":111:9)
#loc262 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":111:30)
#loc263 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":114:9)
#loc264 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":117:9)
#loc265 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":114:18)
#loc266 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":114:14)
#loc267 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":114:21)
#loc268 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":114:25)
#loc269 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":114:23)
#loc270 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":115:9)
#loc271 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":116:23)
#loc272 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":116:28)
#loc273 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":116:29)
#loc274 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":116:18)
#loc275 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":116:13)
#loc276 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":114:35)
#loc277 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":114:34)
#loc278 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":118:23)
#loc279 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":118:14)
#loc280 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":118:18)
#loc281 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":118:9)
#loc282 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":119:19)
#loc283 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":119:9)
#loc284 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":120:9)
#loc285 = loc("CWE126_Buffer_Overread__malloc_char_loop_02.c":120:14)
#loc286 = loc(fused[#loc1, #loc2])
#loc287 = loc(fused[#loc3, #loc4])
#loc288 = loc(fused[#loc5, #loc6])
#loc289 = loc(fused[#loc7, #loc8])
#loc290 = loc(fused[#loc9, #loc10])
#loc291 = loc(fused[#loc11, #loc12])
#loc292 = loc(fused[#loc13, #loc14])
#loc293 = loc(fused[#loc16, #loc15])
#loc294 = loc(fused[#loc17, #loc18])
#loc295 = loc(fused[#loc20, #loc18])
#loc296 = loc(fused[#loc23, #loc24])
#loc297 = loc(fused[#loc22, #loc24])
#loc298 = loc(fused[#loc21, #loc25])
#loc299 = loc(fused[#loc26, #loc25])
#loc300 = loc(fused[#loc27, #loc28])
#loc301 = loc(fused[#loc29, #loc30])
#loc302 = loc(fused[#loc31, #loc28])
#loc303 = loc(fused[#loc39, #loc40])
#loc304 = loc(fused[#loc42, #loc41])
#loc305 = loc(fused[#loc46, #loc47])
#loc306 = loc(fused[#loc48, #loc49])
#loc307 = loc(fused[#loc48, #loc50])
#loc308 = loc(fused[#loc51, #loc52])
#loc309 = loc(fused[#loc57, #loc58])
#loc310 = loc(fused[#loc62, #loc59])
#loc311 = loc(fused[#loc65, #loc66])
#loc312 = loc(fused[#loc67, #loc68])
#loc313 = loc(fused[#loc70, #loc69])
#loc314 = loc(fused[#loc71, #loc72])
#loc315 = loc(fused[#loc74, #loc68])
#loc316 = loc(fused[#loc79, #loc77])
#loc317 = loc(fused[#loc81, #loc80])
#loc318 = loc(fused[#loc85, #loc82])
#loc319 = loc(fused[#loc90, #loc91])
#loc320 = loc(fused[#loc92, #loc93])
#loc321 = loc(fused[#loc94, #loc95])
#loc322 = loc(fused[#loc96, #loc97])
#loc323 = loc(fused[#loc98, #loc99])
#loc324 = loc(fused[#loc104, #loc105])
#loc327 = loc(fused[#loc115, #loc116])
#loc328 = loc(fused[#loc119, #loc120])
#loc329 = loc(fused[#loc123, #loc122])
#loc330 = loc(fused[#loc125, #loc126])
#loc331 = loc(fused[#loc127, #loc128])
#loc332 = loc(fused[#loc130, #loc129])
#loc333 = loc(fused[#loc131, #loc132])
#loc334 = loc(fused[#loc134, #loc135, #loc136, #loc132])
#loc335 = loc(fused[#loc140, #loc141])
#loc336 = loc(fused[#loc139, #loc141])
#loc337 = loc(fused[#loc138, #loc142])
#loc338 = loc(fused[#loc143, #loc142])
#loc339 = loc(fused[#loc144, #loc145])
#loc340 = loc(fused[#loc146, #loc147])
#loc341 = loc(fused[#loc148, #loc145])
#loc342 = loc(fused[#loc156, #loc157])
#loc343 = loc(fused[#loc159, #loc158])
#loc344 = loc(fused[#loc163, #loc164])
#loc345 = loc(fused[#loc165, #loc166])
#loc346 = loc(fused[#loc165, #loc167])
#loc347 = loc(fused[#loc168, #loc169])
#loc348 = loc(fused[#loc174, #loc175])
#loc349 = loc(fused[#loc179, #loc176])
#loc350 = loc(fused[#loc182, #loc183])
#loc351 = loc(fused[#loc184, #loc185])
#loc352 = loc(fused[#loc187, #loc186])
#loc353 = loc(fused[#loc188, #loc189])
#loc354 = loc(fused[#loc191, #loc185])
#loc355 = loc(fused[#loc196, #loc194])
#loc356 = loc(fused[#loc198, #loc197])
#loc357 = loc(fused[#loc202, #loc199])
#loc358 = loc(fused[#loc207, #loc208])
#loc359 = loc(fused[#loc209, #loc210])
#loc360 = loc(fused[#loc212, #loc211])
#loc361 = loc(fused[#loc213, #loc214])
#loc362 = loc(fused[#loc216, #loc214])
#loc363 = loc(fused[#loc219, #loc220])
#loc364 = loc(fused[#loc218, #loc220])
#loc365 = loc(fused[#loc217, #loc221])
#loc366 = loc(fused[#loc222, #loc221])
#loc367 = loc(fused[#loc223, #loc224])
#loc368 = loc(fused[#loc225, #loc226])
#loc369 = loc(fused[#loc227, #loc224])
#loc370 = loc(fused[#loc235, #loc236])
#loc371 = loc(fused[#loc238, #loc237])
#loc372 = loc(fused[#loc242, #loc243])
#loc373 = loc(fused[#loc244, #loc245])
#loc374 = loc(fused[#loc244, #loc246])
#loc375 = loc(fused[#loc247, #loc248])
#loc376 = loc(fused[#loc253, #loc254])
#loc377 = loc(fused[#loc258, #loc255])
#loc378 = loc(fused[#loc261, #loc262])
#loc379 = loc(fused[#loc263, #loc264])
#loc380 = loc(fused[#loc266, #loc265])
#loc381 = loc(fused[#loc267, #loc268])
#loc382 = loc(fused[#loc270, #loc264])
#loc383 = loc(fused[#loc275, #loc273])
#loc384 = loc(fused[#loc277, #loc276])
#loc385 = loc(fused[#loc281, #loc278])
