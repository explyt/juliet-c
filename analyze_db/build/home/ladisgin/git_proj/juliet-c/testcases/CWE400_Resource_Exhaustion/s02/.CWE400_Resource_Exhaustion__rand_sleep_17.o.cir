!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc26 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":39:17)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":63:17)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":68:23)
#true = #cir.bool<true> : !cir.bool
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_sleep_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc133)
  cir.func private @usleep(!u32i) -> !s32i loc(#loc134)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc135)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_sleep_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc137)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc138)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc139)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc16)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc140)
    cir.br ^bb1 loc(#loc141)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<0> : !s32i loc(#loc20)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc142)
    cir.br ^bb2 loc(#loc141)
  ^bb2:  // 2 preds: ^bb1, ^bb10
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc22)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc143)
    cir.brcond %8 ^bb3, ^bb11 loc(#loc24)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc144)
  ^bb4:  // pred: ^bb3
    %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %11 = cir.binop(and, %9, %10) : !s32i loc(#loc26)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc26)
    cir.brcond %12 ^bb5, ^bb6 loc(#loc26)
  ^bb5:  // pred: ^bb4
    %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
    %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc26)
    %15 = cir.const #cir.int<30> : !s32i loc(#loc26)
    %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc26)
    %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
    %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc26)
    %19 = cir.const #cir.int<15> : !s32i loc(#loc26)
    %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc26)
    %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc26)
    %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
    %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc26)
    %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc26)
    cir.br ^bb7(%24 : !u32i) loc(#loc26)
  ^bb6:  // pred: ^bb4
    %25 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
    %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc26)
    %27 = cir.const #cir.int<30> : !s32i loc(#loc26)
    %28 = cir.shift(left, %26 : !u32i, %27 : !s32i) -> !u32i loc(#loc26)
    %29 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
    %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc26)
    %31 = cir.const #cir.int<15> : !s32i loc(#loc26)
    %32 = cir.shift(left, %30 : !u32i, %31 : !s32i) -> !u32i loc(#loc26)
    %33 = cir.binop(xor, %28, %32) : !u32i loc(#loc26)
    %34 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
    %35 = cir.cast(integral, %34 : !s32i), !u32i loc(#loc26)
    %36 = cir.binop(xor, %33, %35) : !u32i loc(#loc26)
    %37 = cir.unary(minus, %36) : !u32i, !u32i loc(#loc26)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %39 = cir.cast(integral, %38 : !s32i), !u32i loc(#loc26)
    %40 = cir.binop(sub, %37, %39) : !u32i loc(#loc26)
    cir.br ^bb7(%40 : !u32i) loc(#loc26)
  ^bb7(%41: !u32i loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":39:17)):  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc26)
  ^bb8:  // pred: ^bb7
    %42 = cir.cast(integral, %41 : !u32i), !s32i loc(#loc26)
    cir.store %42, %2 : !s32i, !cir.ptr<!s32i> loc(#loc145)
    cir.br ^bb9 loc(#loc19)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc19)
  ^bb10:  // pred: ^bb9
    %43 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc28)
    %44 = cir.unary(inc, %43) : !s32i, !s32i loc(#loc29)
    cir.store %44, %0 : !s32i, !cir.ptr<!s32i> loc(#loc146)
    cir.br ^bb2 loc(#loc141)
  ^bb11:  // pred: ^bb2
    cir.br ^bb12 loc(#loc19)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc147)
  ^bb13:  // pred: ^bb12
    %45 = cir.const #cir.int<0> : !s32i loc(#loc32)
    cir.store %45, %1 : !s32i, !cir.ptr<!s32i> loc(#loc148)
    cir.br ^bb14 loc(#loc147)
  ^bb14:  // 2 preds: ^bb13, ^bb18
    %46 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %48 = cir.cmp(lt, %46, %47) : !s32i, !cir.bool loc(#loc149)
    cir.brcond %48 ^bb15, ^bb19 loc(#loc36)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc150)
  ^bb16:  // pred: ^bb15
    %49 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    %50 = cir.cast(integral, %49 : !s32i), !u32i loc(#loc38)
    %51 = cir.call @usleep(%50) : (!u32i) -> !s32i loc(#loc39)
    %52 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc7)
    %53 = cir.cast(array_to_ptrdecay, %52 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%53) : (!cir.ptr<!s8i>) -> () loc(#loc40)
    cir.br ^bb17 loc(#loc31)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc31)
  ^bb18:  // pred: ^bb17
    %54 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc41)
    %55 = cir.unary(inc, %54) : !s32i, !s32i loc(#loc42)
    cir.store %55, %1 : !s32i, !cir.ptr<!s32i> loc(#loc151)
    cir.br ^bb14 loc(#loc147)
  ^bb19:  // pred: ^bb14
    cir.br ^bb20 loc(#loc31)
  ^bb20:  // pred: ^bb19
    cir.return loc(#loc9)
  } loc(#loc136)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_sleep_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc153)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc154)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    cir.return loc(#loc44)
  } loc(#loc152)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc50)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc156)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc157)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc158)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc58)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc59)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc159)
    cir.br ^bb1 loc(#loc160)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<0> : !s32i loc(#loc63)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    cir.br ^bb2 loc(#loc160)
  ^bb2:  // 2 preds: ^bb1, ^bb10
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc66)
    %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc162)
    cir.brcond %8 ^bb3, ^bb11 loc(#loc67)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc163)
  ^bb4:  // pred: ^bb3
    %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc69)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %11 = cir.binop(and, %9, %10) : !s32i loc(#loc69)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc69)
    cir.brcond %12 ^bb5, ^bb6 loc(#loc69)
  ^bb5:  // pred: ^bb4
    %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc69)
    %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc69)
    %15 = cir.const #cir.int<30> : !s32i loc(#loc69)
    %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc69)
    %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc69)
    %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc69)
    %19 = cir.const #cir.int<15> : !s32i loc(#loc69)
    %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc69)
    %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc69)
    %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc69)
    %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc69)
    %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc69)
    cir.br ^bb7(%24 : !u32i) loc(#loc69)
  ^bb6:  // pred: ^bb4
    %25 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc69)
    %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc69)
    %27 = cir.const #cir.int<30> : !s32i loc(#loc69)
    %28 = cir.shift(left, %26 : !u32i, %27 : !s32i) -> !u32i loc(#loc69)
    %29 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc69)
    %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc69)
    %31 = cir.const #cir.int<15> : !s32i loc(#loc69)
    %32 = cir.shift(left, %30 : !u32i, %31 : !s32i) -> !u32i loc(#loc69)
    %33 = cir.binop(xor, %28, %32) : !u32i loc(#loc69)
    %34 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc69)
    %35 = cir.cast(integral, %34 : !s32i), !u32i loc(#loc69)
    %36 = cir.binop(xor, %33, %35) : !u32i loc(#loc69)
    %37 = cir.unary(minus, %36) : !u32i, !u32i loc(#loc69)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %39 = cir.cast(integral, %38 : !s32i), !u32i loc(#loc69)
    %40 = cir.binop(sub, %37, %39) : !u32i loc(#loc69)
    cir.br ^bb7(%40 : !u32i) loc(#loc69)
  ^bb7(%41: !u32i loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":63:17)):  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc69)
  ^bb8:  // pred: ^bb7
    %42 = cir.cast(integral, %41 : !u32i), !s32i loc(#loc69)
    cir.store %42, %2 : !s32i, !cir.ptr<!s32i> loc(#loc164)
    cir.br ^bb9 loc(#loc62)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc62)
  ^bb10:  // pred: ^bb9
    %43 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc71)
    %44 = cir.unary(inc, %43) : !s32i, !s32i loc(#loc72)
    cir.store %44, %0 : !s32i, !cir.ptr<!s32i> loc(#loc165)
    cir.br ^bb2 loc(#loc160)
  ^bb11:  // pred: ^bb2
    cir.br ^bb12 loc(#loc62)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc166)
  ^bb13:  // pred: ^bb12
    %45 = cir.const #cir.int<0> : !s32i loc(#loc75)
    cir.store %45, %1 : !s32i, !cir.ptr<!s32i> loc(#loc167)
    cir.br ^bb14 loc(#loc166)
  ^bb14:  // 2 preds: ^bb13, ^bb31
    %46 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc77)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc78)
    %48 = cir.cmp(lt, %46, %47) : !s32i, !cir.bool loc(#loc168)
    cir.brcond %48 ^bb15, ^bb32 loc(#loc79)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc169)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc170)
  ^bb17:  // pred: ^bb16
    %49 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    %50 = cir.const #cir.int<0> : !s32i loc(#loc84)
    %51 = cir.cmp(gt, %49, %50) : !s32i, !cir.bool loc(#loc171)
    cir.brcond %51 ^bb18, ^bb23 loc(#loc85)
  ^bb18:  // pred: ^bb17
    %52 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc86)
    %53 = cir.const #cir.int<2000> : !s32i loc(#loc87)
    %54 = cir.cmp(le, %52, %53) : !s32i, !cir.bool loc(#loc172)
    cir.brcond %54 ^bb19, ^bb20 loc(#loc85)
  ^bb19:  // pred: ^bb18
    %55 = cir.const #true loc(#loc85)
    cir.br ^bb21(%55 : !cir.bool) loc(#loc85)
  ^bb20:  // pred: ^bb18
    %56 = cir.const #false loc(#loc85)
    cir.br ^bb21(%56 : !cir.bool) loc(#loc85)
  ^bb21(%57: !cir.bool loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":68:23)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc85)
  ^bb22:  // pred: ^bb21
    cir.br ^bb24(%57 : !cir.bool) loc(#loc85)
  ^bb23:  // pred: ^bb17
    %58 = cir.const #false loc(#loc85)
    cir.br ^bb24(%58 : !cir.bool) loc(#loc85)
  ^bb24(%59: !cir.bool loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":68:23)):  // 2 preds: ^bb22, ^bb23
    cir.br ^bb25 loc(#loc85)
  ^bb25:  // pred: ^bb24
    cir.brcond %59 ^bb26, ^bb27 loc(#loc173)
  ^bb26:  // pred: ^bb25
    %60 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    %61 = cir.cast(integral, %60 : !s32i), !u32i loc(#loc91)
    %62 = cir.call @usleep(%61) : (!u32i) -> !s32i loc(#loc92)
    %63 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc49)
    %64 = cir.cast(array_to_ptrdecay, %63 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%64) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    cir.br ^bb28 loc(#loc89)
  ^bb27:  // pred: ^bb25
    %65 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc50)
    %66 = cir.cast(array_to_ptrdecay, %65 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%66) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    cir.br ^bb28 loc(#loc82)
  ^bb28:  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc82)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc74)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc74)
  ^bb31:  // pred: ^bb30
    %67 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %68 = cir.unary(inc, %67) : !s32i, !s32i loc(#loc96)
    cir.store %68, %1 : !s32i, !cir.ptr<!s32i> loc(#loc174)
    cir.br ^bb14 loc(#loc166)
  ^bb32:  // pred: ^bb14
    cir.br ^bb33 loc(#loc74)
  ^bb33:  // pred: ^bb32
    cir.return loc(#loc52)
  } loc(#loc155)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc176)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc177)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc178)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc105)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc179)
    cir.br ^bb1 loc(#loc180)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<0> : !s32i loc(#loc109)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc181)
    cir.br ^bb2 loc(#loc180)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc182)
    cir.brcond %8 ^bb3, ^bb7 loc(#loc113)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc183)
  ^bb4:  // pred: ^bb3
    %9 = cir.const #cir.int<20> : !s32i loc(#loc115)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc184)
    cir.br ^bb5 loc(#loc108)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc108)
  ^bb6:  // pred: ^bb5
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc118)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc185)
    cir.br ^bb2 loc(#loc180)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc108)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc186)
  ^bb9:  // pred: ^bb8
    %12 = cir.const #cir.int<0> : !s32i loc(#loc121)
    cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc187)
    cir.br ^bb10 loc(#loc186)
  ^bb10:  // 2 preds: ^bb9, ^bb14
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc124)
    %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc188)
    cir.brcond %15 ^bb11, ^bb15 loc(#loc125)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc189)
  ^bb12:  // pred: ^bb11
    %16 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc127)
    %18 = cir.call @usleep(%17) : (!u32i) -> !s32i loc(#loc128)
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc129)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc129)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    cir.br ^bb13 loc(#loc120)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc120)
  ^bb14:  // pred: ^bb13
    %21 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc131)
    %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc132)
    cir.store %22, %1 : !s32i, !cir.ptr<!s32i> loc(#loc190)
    cir.br ^bb10 loc(#loc186)
  ^bb15:  // pred: ^bb10
    cir.br ^bb16 loc(#loc120)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc98)
  } loc(#loc175)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_sleep_17.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("/usr/include/unistd.h":480:1)
#loc4 = loc("/usr/include/unistd.h":480:43)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":45:19)
#loc8 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":30:1)
#loc9 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":47:1)
#loc10 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":32:5)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":32:9)
#loc12 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":32:11)
#loc13 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":33:5)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":33:9)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":35:14)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":35:13)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":35:5)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":36:5)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":40:5)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":36:13)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":36:9)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":36:16)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":36:20)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":36:18)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":37:5)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":39:9)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":36:24)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":36:23)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":41:5)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":46:5)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":41:13)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":41:9)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":41:16)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":41:20)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":41:18)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":42:5)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":44:15)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":44:9)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":45:9)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":41:24)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":41:23)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":100:1)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":104:1)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":102:5)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":102:13)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":103:5)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":103:13)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":71:23)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":75:23)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":54:1)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":78:1)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":56:5)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":56:9)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":56:11)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":57:5)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":57:9)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":59:14)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":59:13)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":59:5)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":60:5)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":64:5)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":60:13)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":60:9)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":60:16)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":60:20)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":60:18)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":61:5)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":63:9)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":60:24)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":60:23)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":65:5)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":77:5)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":65:13)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":65:9)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":65:16)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":65:20)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":65:18)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":66:5)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":68:9)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":76:9)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":68:13)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":68:21)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":68:26)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":68:35)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":69:9)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":72:9)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":74:9)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":70:19)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":70:13)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":71:13)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":75:13)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":65:24)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":65:23)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":81:1)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":98:1)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":83:5)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":83:9)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":83:11)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":84:5)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":84:9)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":86:14)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":86:13)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":86:5)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":87:5)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":91:5)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":87:13)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":87:9)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":87:16)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":87:20)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":87:18)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":88:5)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":90:17)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":90:9)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":87:24)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":87:23)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":92:5)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":97:5)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":92:13)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":92:9)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":92:16)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":92:20)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":92:18)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":93:5)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":95:15)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":95:9)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":96:19)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":96:9)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":92:24)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_sleep_17.c":92:23)
#loc133 = loc(fused[#loc1, #loc2])
#loc134 = loc(fused[#loc3, #loc4])
#loc135 = loc(fused[#loc5, #loc6])
#loc136 = loc(fused[#loc8, #loc9])
#loc137 = loc(fused[#loc10, #loc11])
#loc138 = loc(fused[#loc10, #loc12])
#loc139 = loc(fused[#loc13, #loc14])
#loc140 = loc(fused[#loc17, #loc15])
#loc141 = loc(fused[#loc18, #loc19])
#loc142 = loc(fused[#loc21, #loc20])
#loc143 = loc(fused[#loc22, #loc23])
#loc144 = loc(fused[#loc25, #loc19])
#loc145 = loc(fused[#loc27, #loc26])
#loc146 = loc(fused[#loc29, #loc28])
#loc147 = loc(fused[#loc30, #loc31])
#loc148 = loc(fused[#loc33, #loc32])
#loc149 = loc(fused[#loc34, #loc35])
#loc150 = loc(fused[#loc37, #loc31])
#loc151 = loc(fused[#loc42, #loc41])
#loc152 = loc(fused[#loc43, #loc44])
#loc153 = loc(fused[#loc45, #loc46])
#loc154 = loc(fused[#loc47, #loc48])
#loc155 = loc(fused[#loc51, #loc52])
#loc156 = loc(fused[#loc53, #loc54])
#loc157 = loc(fused[#loc53, #loc55])
#loc158 = loc(fused[#loc56, #loc57])
#loc159 = loc(fused[#loc60, #loc58])
#loc160 = loc(fused[#loc61, #loc62])
#loc161 = loc(fused[#loc64, #loc63])
#loc162 = loc(fused[#loc65, #loc66])
#loc163 = loc(fused[#loc68, #loc62])
#loc164 = loc(fused[#loc70, #loc69])
#loc165 = loc(fused[#loc72, #loc71])
#loc166 = loc(fused[#loc73, #loc74])
#loc167 = loc(fused[#loc76, #loc75])
#loc168 = loc(fused[#loc77, #loc78])
#loc169 = loc(fused[#loc80, #loc74])
#loc170 = loc(fused[#loc81, #loc82])
#loc171 = loc(fused[#loc83, #loc84])
#loc172 = loc(fused[#loc86, #loc87])
#loc173 = loc(fused[#loc88, #loc89, #loc90, #loc82])
#loc174 = loc(fused[#loc96, #loc95])
#loc175 = loc(fused[#loc97, #loc98])
#loc176 = loc(fused[#loc99, #loc100])
#loc177 = loc(fused[#loc99, #loc101])
#loc178 = loc(fused[#loc102, #loc103])
#loc179 = loc(fused[#loc106, #loc104])
#loc180 = loc(fused[#loc107, #loc108])
#loc181 = loc(fused[#loc110, #loc109])
#loc182 = loc(fused[#loc111, #loc112])
#loc183 = loc(fused[#loc114, #loc108])
#loc184 = loc(fused[#loc116, #loc115])
#loc185 = loc(fused[#loc118, #loc117])
#loc186 = loc(fused[#loc119, #loc120])
#loc187 = loc(fused[#loc122, #loc121])
#loc188 = loc(fused[#loc123, #loc124])
#loc189 = loc(fused[#loc126, #loc120])
#loc190 = loc(fused[#loc132, #loc131])
