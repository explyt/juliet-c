!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc24 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":53:21)
#loc25 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":53:25)
#loc180 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":385:10)
#loc181 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":385:14)
#loc182 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":385:20)
#loc183 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":385:32)
#loc205 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":151:26)
#loc206 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":151:30)
#loc355 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":252:26)
#loc356 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":252:30)
#loc504 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":348:25)
#loc505 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":348:29)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc539 = loc(fused[#loc24, #loc25])
#loc597 = loc(fused[#loc180, #loc181])
#loc598 = loc(fused[#loc182, #loc183])
#loc604 = loc(fused[#loc205, #loc206])
#loc660 = loc(fused[#loc355, #loc356])
#loc716 = loc(fused[#loc504, #loc505])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__listen_socket_sleep_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc528)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc529)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc530)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc531)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc532)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc533)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc534)
  cir.func private @close(!s32i) -> !s32i loc(#loc535)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc536)
  cir.func private @usleep(!u32i) -> !s32i loc(#loc537)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc21)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc24, #loc25])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc539)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc26)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc536)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc29)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc29)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc31)
        %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc31)
        %6 = cir.call @usleep(%5) : (!u32i) -> !s32i loc(#loc32)
        %7 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc21)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc21)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc33)
      } loc(#loc541)
    } loc(#loc540)
    cir.return loc(#loc23)
  } loc(#loc538)
  cir.func no_proto @CWE400_Resource_Exhaustion__listen_socket_sleep_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc543)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc39)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc544)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc546)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc547)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc548)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc549)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc550)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc48)
      %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc48)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc548)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc50)
      %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc50)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc549)
      cir.scope {
        cir.do {
          %15 = cir.const #cir.int<2> : !s32i loc(#loc55)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc56)
          %17 = cir.const #cir.int<6> : !s32i loc(#loc57)
          %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc58)
          cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc552)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc63)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc64)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc64)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc554)
            cir.if %63 {
              cir.break loc(#loc66)
            } loc(#loc555)
          } loc(#loc553)
          %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc556)
          %20 = cir.const #cir.int<0> : !s32i loc(#loc69)
          %21 = cir.const #cir.int<16> : !u64i loc(#loc557)
          cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc558)
          %22 = cir.const #cir.int<2> : !s32i loc(#loc74)
          %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc74)
          %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
          cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc559)
          %25 = cir.const #cir.int<0> : !s32i loc(#loc77)
          %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc77)
          %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc78)
          %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc79)
          cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc560)
          %29 = cir.const #cir.int<27015> : !s32i loc(#loc81)
          %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc81)
          %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc82)
          %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
          cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc561)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc88)
            %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc563)
            %62 = cir.const #cir.int<16> : !u64i loc(#loc564)
            %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc564)
            %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc93)
            %65 = cir.const #cir.int<1> : !s32i loc(#loc94)
            %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc94)
            %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc565)
            cir.if %67 {
              cir.break loc(#loc96)
            } loc(#loc566)
          } loc(#loc562)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc99)
            %61 = cir.const #cir.int<5> : !s32i loc(#loc100)
            %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc101)
            %63 = cir.const #cir.int<1> : !s32i loc(#loc102)
            %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc102)
            %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc568)
            cir.if %65 {
              cir.break loc(#loc104)
            } loc(#loc569)
          } loc(#loc567)
          %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc105)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc106)
          %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc107)
          %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc108)
          cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc570)
          cir.scope {
            %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc113)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc114)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc114)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc572)
            cir.if %63 {
              cir.break loc(#loc116)
            } loc(#loc573)
          } loc(#loc571)
          %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc117)
          %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc118)
          %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc118)
          %40 = cir.const #cir.int<3> : !s32i loc(#loc119)
          %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc119)
          %42 = cir.const #cir.int<4> : !u64i loc(#loc119)
          %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc119)
          %44 = cir.const #cir.int<2> : !s32i loc(#loc119)
          %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc119)
          %46 = cir.binop(add, %43, %45) : !u64i loc(#loc119)
          %47 = cir.const #cir.int<1> : !s32i loc(#loc120)
          %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc120)
          %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc574)
          %50 = cir.const #cir.int<0> : !s32i loc(#loc121)
          %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc122)
          %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc122)
          cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc575)
          cir.scope {
            %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc127)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc128)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc128)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc577)
            %64 = cir.ternary(%63, true {
              %65 = cir.const #true loc(#loc129)
              cir.yield %65 : !cir.bool loc(#loc129)
            }, false {
              %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc130)
              %66 = cir.const #cir.int<0> : !s32i loc(#loc131)
              %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc578)
              %68 = cir.ternary(%67, true {
                %69 = cir.const #true loc(#loc129)
                cir.yield %69 : !cir.bool loc(#loc129)
              }, false {
                %69 = cir.const #false loc(#loc129)
                cir.yield %69 : !cir.bool loc(#loc129)
              }) : (!cir.bool) -> !cir.bool loc(#loc129)
              cir.yield %68 : !cir.bool loc(#loc129)
            }) : (!cir.bool) -> !cir.bool loc(#loc129)
            cir.if %64 {
              cir.break loc(#loc133)
            } loc(#loc579)
          } loc(#loc576)
          %53 = cir.const #cir.int<0> : !s32i loc(#loc134)
          %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc134)
          %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc135)
          %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc136)
          %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc136)
          cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc580)
          %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc137)
          %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc138)
          cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc581)
          cir.yield loc(#loc54)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc141)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc141)
          cir.condition(%16) loc(#loc141)
        } loc(#loc551)
      } loc(#loc551)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc144)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc145)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc145)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc583)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc147)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc148)
        } loc(#loc584)
      } loc(#loc582)
      cir.scope {
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc151)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc152)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc152)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc586)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc154)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc155)
        } loc(#loc587)
      } loc(#loc585)
    } loc(#loc545)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc156)
    %4 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc536)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc588)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    cir.call @badSink(%5) : (!s32i) -> () loc(#loc159)
    cir.return loc(#loc35)
  } loc(#loc542)
  cir.func no_proto @CWE400_Resource_Exhaustion__listen_socket_sleep_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc590)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc162)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc591)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc164)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc592)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc166)
    cir.return loc(#loc161)
  } loc(#loc589)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc593)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc594)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc595)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc174)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc175)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc176)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc177)
  cir.func @main(%arg0: !s32i loc(fused[#loc180, #loc181]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc182, #loc183])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc597)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc598)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc179)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc184)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc184)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc185)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc186)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc186)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc187)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc174)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc174)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc188)
    %8 = cir.get_global @CWE400_Resource_Exhaustion__listen_socket_sleep_21_good : !cir.ptr<!cir.func<!void ()>> loc(#loc599)
    cir.call @CWE400_Resource_Exhaustion__listen_socket_sleep_21_good() : () -> () loc(#loc189)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc175)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc175)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc191)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc176)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc176)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc192)
    %13 = cir.get_global @CWE400_Resource_Exhaustion__listen_socket_sleep_21_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc600)
    cir.call @CWE400_Resource_Exhaustion__listen_socket_sleep_21_bad() : () -> () loc(#loc193)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc177)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc177)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc195)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc196)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc601)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc601)
    cir.return %17 : !s32i loc(#loc601)
  } loc(#loc596)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc602)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc200)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc201)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc202)
  cir.func internal private @goodB2G1Sink(%arg0: !s32i loc(fused[#loc205, #loc206])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc604)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc207)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc602)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc210)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc210)
      cir.if %3 {
        %4 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc200)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc200)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc214)
      } else {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc217)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc218)
          %6 = cir.cmp(gt, %4, %5) : !s32i, !cir.bool loc(#loc608)
          %7 = cir.ternary(%6, true {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc220)
            %9 = cir.const #cir.int<2000> : !s32i loc(#loc221)
            %10 = cir.cmp(le, %8, %9) : !s32i, !cir.bool loc(#loc609)
            %11 = cir.ternary(%10, true {
              %12 = cir.const #true loc(#loc219)
              cir.yield %12 : !cir.bool loc(#loc219)
            }, false {
              %12 = cir.const #false loc(#loc219)
              cir.yield %12 : !cir.bool loc(#loc219)
            }) : (!cir.bool) -> !cir.bool loc(#loc219)
            cir.yield %11 : !cir.bool loc(#loc219)
          }, false {
            %8 = cir.const #false loc(#loc219)
            cir.yield %8 : !cir.bool loc(#loc219)
          }) : (!cir.bool) -> !cir.bool loc(#loc219)
          cir.if %7 {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc225)
            %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc225)
            %10 = cir.call @usleep(%9) : (!u32i) -> !s32i loc(#loc226)
            %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc201)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc201)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc227)
          } else {
            %8 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc202)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc202)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc228)
          } loc(#loc610)
        } loc(#loc607)
      } loc(#loc606)
    } loc(#loc605)
    cir.return loc(#loc204)
  } loc(#loc603)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc612)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc233)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc234)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc613)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc615)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc616)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc617)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc618)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc619)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc243)
      %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc243)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc617)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc245)
      %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc245)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc618)
      cir.scope {
        cir.do {
          %15 = cir.const #cir.int<2> : !s32i loc(#loc250)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc251)
          %17 = cir.const #cir.int<6> : !s32i loc(#loc252)
          %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc253)
          cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc621)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc258)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc259)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc259)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc623)
            cir.if %63 {
              cir.break loc(#loc261)
            } loc(#loc624)
          } loc(#loc622)
          %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc625)
          %20 = cir.const #cir.int<0> : !s32i loc(#loc264)
          %21 = cir.const #cir.int<16> : !u64i loc(#loc626)
          cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc627)
          %22 = cir.const #cir.int<2> : !s32i loc(#loc269)
          %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc269)
          %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
          cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc628)
          %25 = cir.const #cir.int<0> : !s32i loc(#loc271)
          %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc271)
          %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc78)
          %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc79)
          cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc629)
          %29 = cir.const #cir.int<27015> : !s32i loc(#loc273)
          %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc273)
          %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc274)
          %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
          cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc630)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc279)
            %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc632)
            %62 = cir.const #cir.int<16> : !u64i loc(#loc633)
            %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc633)
            %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc284)
            %65 = cir.const #cir.int<1> : !s32i loc(#loc285)
            %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc285)
            %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc634)
            cir.if %67 {
              cir.break loc(#loc287)
            } loc(#loc635)
          } loc(#loc631)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc290)
            %61 = cir.const #cir.int<5> : !s32i loc(#loc291)
            %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc292)
            %63 = cir.const #cir.int<1> : !s32i loc(#loc293)
            %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc293)
            %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc637)
            cir.if %65 {
              cir.break loc(#loc295)
            } loc(#loc638)
          } loc(#loc636)
          %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc296)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc297)
          %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc298)
          %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc299)
          cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc639)
          cir.scope {
            %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc304)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc305)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc305)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc641)
            cir.if %63 {
              cir.break loc(#loc307)
            } loc(#loc642)
          } loc(#loc640)
          %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc308)
          %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc309)
          %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc309)
          %40 = cir.const #cir.int<3> : !s32i loc(#loc310)
          %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc310)
          %42 = cir.const #cir.int<4> : !u64i loc(#loc310)
          %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc310)
          %44 = cir.const #cir.int<2> : !s32i loc(#loc310)
          %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc310)
          %46 = cir.binop(add, %43, %45) : !u64i loc(#loc310)
          %47 = cir.const #cir.int<1> : !s32i loc(#loc311)
          %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc311)
          %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc643)
          %50 = cir.const #cir.int<0> : !s32i loc(#loc312)
          %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc313)
          %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc313)
          cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc644)
          cir.scope {
            %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc318)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc319)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc319)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc646)
            %64 = cir.ternary(%63, true {
              %65 = cir.const #true loc(#loc320)
              cir.yield %65 : !cir.bool loc(#loc320)
            }, false {
              %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc321)
              %66 = cir.const #cir.int<0> : !s32i loc(#loc322)
              %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc647)
              %68 = cir.ternary(%67, true {
                %69 = cir.const #true loc(#loc320)
                cir.yield %69 : !cir.bool loc(#loc320)
              }, false {
                %69 = cir.const #false loc(#loc320)
                cir.yield %69 : !cir.bool loc(#loc320)
              }) : (!cir.bool) -> !cir.bool loc(#loc320)
              cir.yield %68 : !cir.bool loc(#loc320)
            }) : (!cir.bool) -> !cir.bool loc(#loc320)
            cir.if %64 {
              cir.break loc(#loc324)
            } loc(#loc648)
          } loc(#loc645)
          %53 = cir.const #cir.int<0> : !s32i loc(#loc325)
          %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc325)
          %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc326)
          %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc327)
          %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc327)
          cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc649)
          %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc328)
          %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc329)
          cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc650)
          cir.yield loc(#loc249)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc332)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc332)
          cir.condition(%16) loc(#loc332)
        } loc(#loc620)
      } loc(#loc620)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc335)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc336)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc336)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc652)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc338)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc339)
        } loc(#loc653)
      } loc(#loc651)
      cir.scope {
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc342)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc343)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc343)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc655)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc345)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc346)
        } loc(#loc656)
      } loc(#loc654)
    } loc(#loc614)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc347)
    %4 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc602)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc657)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc349)
    cir.call @goodB2G1Sink(%5) : (!s32i) -> () loc(#loc350)
    cir.return loc(#loc230)
  } loc(#loc611)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc658)
  cir.func internal private @goodB2G2Sink(%arg0: !s32i loc(fused[#loc355, #loc356])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc660)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc357)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc658)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc360)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc360)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc364)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc365)
          %6 = cir.cmp(gt, %4, %5) : !s32i, !cir.bool loc(#loc664)
          %7 = cir.ternary(%6, true {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc367)
            %9 = cir.const #cir.int<2000> : !s32i loc(#loc368)
            %10 = cir.cmp(le, %8, %9) : !s32i, !cir.bool loc(#loc665)
            %11 = cir.ternary(%10, true {
              %12 = cir.const #true loc(#loc366)
              cir.yield %12 : !cir.bool loc(#loc366)
            }, false {
              %12 = cir.const #false loc(#loc366)
              cir.yield %12 : !cir.bool loc(#loc366)
            }) : (!cir.bool) -> !cir.bool loc(#loc366)
            cir.yield %11 : !cir.bool loc(#loc366)
          }, false {
            %8 = cir.const #false loc(#loc366)
            cir.yield %8 : !cir.bool loc(#loc366)
          }) : (!cir.bool) -> !cir.bool loc(#loc366)
          cir.if %7 {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc372)
            %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc372)
            %10 = cir.call @usleep(%9) : (!u32i) -> !s32i loc(#loc373)
            %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc374)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc374)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc375)
          } else {
            %8 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc376)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc376)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc377)
          } loc(#loc666)
        } loc(#loc663)
      } loc(#loc662)
    } loc(#loc661)
    cir.return loc(#loc354)
  } loc(#loc659)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc668)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc382)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc383)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc669)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc671)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc672)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc673)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc674)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc675)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc392)
      %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc392)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc673)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc394)
      %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc394)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc674)
      cir.scope {
        cir.do {
          %15 = cir.const #cir.int<2> : !s32i loc(#loc399)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc400)
          %17 = cir.const #cir.int<6> : !s32i loc(#loc401)
          %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc402)
          cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc677)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc407)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc408)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc408)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc679)
            cir.if %63 {
              cir.break loc(#loc410)
            } loc(#loc680)
          } loc(#loc678)
          %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc681)
          %20 = cir.const #cir.int<0> : !s32i loc(#loc413)
          %21 = cir.const #cir.int<16> : !u64i loc(#loc682)
          cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc683)
          %22 = cir.const #cir.int<2> : !s32i loc(#loc418)
          %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc418)
          %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
          cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc684)
          %25 = cir.const #cir.int<0> : !s32i loc(#loc420)
          %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc420)
          %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc78)
          %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc79)
          cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc685)
          %29 = cir.const #cir.int<27015> : !s32i loc(#loc422)
          %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc422)
          %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc423)
          %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
          cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc686)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc428)
            %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc688)
            %62 = cir.const #cir.int<16> : !u64i loc(#loc689)
            %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc689)
            %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc433)
            %65 = cir.const #cir.int<1> : !s32i loc(#loc434)
            %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc434)
            %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc690)
            cir.if %67 {
              cir.break loc(#loc436)
            } loc(#loc691)
          } loc(#loc687)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc439)
            %61 = cir.const #cir.int<5> : !s32i loc(#loc440)
            %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc441)
            %63 = cir.const #cir.int<1> : !s32i loc(#loc442)
            %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc442)
            %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc693)
            cir.if %65 {
              cir.break loc(#loc444)
            } loc(#loc694)
          } loc(#loc692)
          %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc445)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc446)
          %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc447)
          %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc448)
          cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc695)
          cir.scope {
            %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc453)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc454)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc454)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc697)
            cir.if %63 {
              cir.break loc(#loc456)
            } loc(#loc698)
          } loc(#loc696)
          %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc457)
          %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc458)
          %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc458)
          %40 = cir.const #cir.int<3> : !s32i loc(#loc459)
          %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc459)
          %42 = cir.const #cir.int<4> : !u64i loc(#loc459)
          %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc459)
          %44 = cir.const #cir.int<2> : !s32i loc(#loc459)
          %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc459)
          %46 = cir.binop(add, %43, %45) : !u64i loc(#loc459)
          %47 = cir.const #cir.int<1> : !s32i loc(#loc460)
          %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc460)
          %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc699)
          %50 = cir.const #cir.int<0> : !s32i loc(#loc461)
          %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc462)
          %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc462)
          cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc700)
          cir.scope {
            %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc467)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc468)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc468)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc702)
            %64 = cir.ternary(%63, true {
              %65 = cir.const #true loc(#loc469)
              cir.yield %65 : !cir.bool loc(#loc469)
            }, false {
              %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc470)
              %66 = cir.const #cir.int<0> : !s32i loc(#loc471)
              %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc703)
              %68 = cir.ternary(%67, true {
                %69 = cir.const #true loc(#loc469)
                cir.yield %69 : !cir.bool loc(#loc469)
              }, false {
                %69 = cir.const #false loc(#loc469)
                cir.yield %69 : !cir.bool loc(#loc469)
              }) : (!cir.bool) -> !cir.bool loc(#loc469)
              cir.yield %68 : !cir.bool loc(#loc469)
            }) : (!cir.bool) -> !cir.bool loc(#loc469)
            cir.if %64 {
              cir.break loc(#loc473)
            } loc(#loc704)
          } loc(#loc701)
          %53 = cir.const #cir.int<0> : !s32i loc(#loc474)
          %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc474)
          %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc475)
          %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc476)
          %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc476)
          cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc705)
          %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc477)
          %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc478)
          cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc706)
          cir.yield loc(#loc398)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc481)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc481)
          cir.condition(%16) loc(#loc481)
        } loc(#loc676)
      } loc(#loc676)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc484)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc485)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc485)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc708)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc487)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc488)
        } loc(#loc709)
      } loc(#loc707)
      cir.scope {
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc491)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc492)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc492)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc711)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc494)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc495)
        } loc(#loc712)
      } loc(#loc710)
    } loc(#loc670)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc496)
    %4 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc658)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc713)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc498)
    cir.call @goodB2G2Sink(%5) : (!s32i) -> () loc(#loc499)
    cir.return loc(#loc379)
  } loc(#loc667)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc714)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc504, #loc505])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc716)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc506)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc714)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc509)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc509)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc511)
        %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc511)
        %6 = cir.call @usleep(%5) : (!u32i) -> !s32i loc(#loc512)
        %7 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc513)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc513)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc514)
      } loc(#loc718)
    } loc(#loc717)
    cir.return loc(#loc503)
  } loc(#loc715)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc720)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc519)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc520)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc721)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc522)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc722)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc524)
    %5 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc714)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc723)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc526)
    cir.call @goodG2BSink(%6) : (!s32i) -> () loc(#loc527)
    cir.return loc(#loc516)
  } loc(#loc719)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":51:1)
#loc18 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":51:24)
#loc19 = loc("/usr/include/unistd.h":480:1)
#loc20 = loc("/usr/include/unistd.h":480:43)
#loc21 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":59:19)
#loc22 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":53:1)
#loc23 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":61:1)
#loc26 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":54:1)
#loc27 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":55:5)
#loc28 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":60:5)
#loc29 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":55:8)
#loc30 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":56:5)
#loc31 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":58:15)
#loc32 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":58:9)
#loc33 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":59:9)
#loc34 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":63:1)
#loc35 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":139:1)
#loc36 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":65:5)
#loc37 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":65:9)
#loc38 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":67:14)
#loc39 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":67:13)
#loc40 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":67:5)
#loc41 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":68:5)
#loc42 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":136:5)
#loc43 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":73:9)
#loc44 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":73:13)
#loc45 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":74:9)
#loc46 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":74:28)
#loc47 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":75:9)
#loc48 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":75:31)
#loc49 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":76:9)
#loc50 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":76:31)
#loc51 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":77:9)
#loc52 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":77:41)
#loc53 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":78:9)
#loc54 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":121:17)
#loc55 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":88:35)
#loc56 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":88:44)
#loc57 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":88:57)
#loc58 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":88:28)
#loc59 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":88:13)
#loc60 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":88:68)
#loc61 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":89:13)
#loc62 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":92:13)
#loc63 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":89:17)
#loc64 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":89:33)
#loc65 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":90:13)
#loc66 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":91:17)
#loc67 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":93:20)
#loc68 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":93:21)
#loc69 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":93:30)
#loc70 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":93:33)
#loc71 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":93:47)
#loc72 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":93:13)
#loc73 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":93:48)
#loc74 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":94:34)
#loc75 = loc("/usr/include/netinet/in.h":249:5)
#loc76 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":94:13)
#loc77 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":95:39)
#loc78 = loc("/usr/include/netinet/in.h":251:20)
#loc79 = loc("/usr/include/netinet/in.h":33:15)
#loc80 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":95:13)
#loc81 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":96:38)
#loc82 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":96:32)
#loc83 = loc("/usr/include/netinet/in.h":250:15)
#loc84 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":96:13)
#loc85 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":96:46)
#loc86 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":97:13)
#loc87 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":100:13)
#loc88 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":97:22)
#loc89 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":97:54)
#loc90 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":97:55)
#loc91 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":97:64)
#loc92 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":97:78)
#loc93 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":97:17)
#loc94 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":97:84)
#loc95 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":98:13)
#loc96 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":99:17)
#loc97 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":101:13)
#loc98 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":104:13)
#loc99 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":101:24)
#loc100 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":101:38)
#loc101 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":101:17)
#loc102 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":101:57)
#loc103 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":102:13)
#loc104 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":103:17)
#loc105 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":105:35)
#loc106 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":105:49)
#loc107 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":105:55)
#loc108 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":105:28)
#loc109 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":105:13)
#loc110 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":105:59)
#loc111 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":106:13)
#loc112 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":109:13)
#loc113 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":106:17)
#loc114 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":106:33)
#loc115 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":107:13)
#loc116 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":108:17)
#loc117 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":111:31)
#loc118 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":111:45)
#loc119 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":111:58)
#loc120 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":111:76)
#loc121 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":111:79)
#loc122 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":111:26)
#loc123 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":111:13)
#loc124 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":111:80)
#loc125 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":112:13)
#loc126 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":115:13)
#loc127 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":112:17)
#loc128 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":112:31)
#loc129 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":112:44)
#loc130 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":112:47)
#loc131 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":112:61)
#loc132 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":113:13)
#loc133 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":114:17)
#loc134 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":117:39)
#loc135 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":117:25)
#loc136 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":117:13)
#loc137 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":119:26)
#loc138 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":119:21)
#loc139 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":119:13)
#loc140 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":119:37)
#loc141 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":121:16)
#loc142 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":122:9)
#loc143 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":125:9)
#loc144 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":122:13)
#loc145 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":122:29)
#loc146 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":123:9)
#loc147 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":124:26)
#loc148 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":124:13)
#loc149 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":126:9)
#loc150 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":129:9)
#loc151 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":126:13)
#loc152 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":126:29)
#loc153 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":127:9)
#loc154 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":128:26)
#loc155 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":128:13)
#loc156 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":137:17)
#loc157 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":137:5)
#loc158 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":138:13)
#loc159 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":138:5)
#loc160 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":369:1)
#loc161 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":374:1)
#loc162 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":371:5)
#loc163 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":371:14)
#loc164 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":372:5)
#loc165 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":372:14)
#loc166 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":373:5)
#loc167 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":373:13)
#loc168 = loc("/usr/include/stdlib.h":575:1)
#loc169 = loc("/usr/include/stdlib.h":575:41)
#loc170 = loc("/usr/include/time.h":76:1)
#loc171 = loc("/usr/include/time.h":76:38)
#loc172 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc173 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc174 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":390:15)
#loc175 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":392:15)
#loc176 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":395:15)
#loc177 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":397:15)
#loc178 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":385:1)
#loc179 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":400:1)
#loc184 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":386:1)
#loc185 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":388:27)
#loc186 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":388:22)
#loc187 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":388:5)
#loc188 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":390:5)
#loc189 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":391:5)
#loc190 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":391:61)
#loc191 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":392:5)
#loc192 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":395:5)
#loc193 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":396:5)
#loc194 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":396:60)
#loc195 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":397:5)
#loc196 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":399:12)
#loc197 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":399:5)
#loc198 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":146:1)
#loc199 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":146:29)
#loc200 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":156:19)
#loc201 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":164:23)
#loc202 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":168:23)
#loc203 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":151:1)
#loc204 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":171:1)
#loc207 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":152:1)
#loc208 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":153:5)
#loc209 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":170:5)
#loc210 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":153:8)
#loc211 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":154:5)
#loc212 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":157:5)
#loc213 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":159:5)
#loc214 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":156:9)
#loc215 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":161:9)
#loc216 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":169:9)
#loc217 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":161:13)
#loc218 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":161:21)
#loc219 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":161:23)
#loc220 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":161:26)
#loc221 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":161:35)
#loc222 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":162:9)
#loc223 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":165:9)
#loc224 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":167:9)
#loc225 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":163:19)
#loc226 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":163:13)
#loc227 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":164:13)
#loc228 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":168:13)
#loc229 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":173:1)
#loc230 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":249:1)
#loc231 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":175:5)
#loc232 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":175:9)
#loc233 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":177:14)
#loc234 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":177:13)
#loc235 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":177:5)
#loc236 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":178:5)
#loc237 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":246:5)
#loc238 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":183:9)
#loc239 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":183:13)
#loc240 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":184:9)
#loc241 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":184:28)
#loc242 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":185:9)
#loc243 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":185:31)
#loc244 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":186:9)
#loc245 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":186:31)
#loc246 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":187:9)
#loc247 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":187:41)
#loc248 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":188:9)
#loc249 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":231:17)
#loc250 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":198:35)
#loc251 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":198:44)
#loc252 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":198:57)
#loc253 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":198:28)
#loc254 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":198:13)
#loc255 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":198:68)
#loc256 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":199:13)
#loc257 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":202:13)
#loc258 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":199:17)
#loc259 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":199:33)
#loc260 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":200:13)
#loc261 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":201:17)
#loc262 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":203:20)
#loc263 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":203:21)
#loc264 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":203:30)
#loc265 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":203:33)
#loc266 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":203:47)
#loc267 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":203:13)
#loc268 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":203:48)
#loc269 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":204:34)
#loc270 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":204:13)
#loc271 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":205:39)
#loc272 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":205:13)
#loc273 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":206:38)
#loc274 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":206:32)
#loc275 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":206:13)
#loc276 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":206:46)
#loc277 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":207:13)
#loc278 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":210:13)
#loc279 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":207:22)
#loc280 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":207:54)
#loc281 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":207:55)
#loc282 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":207:64)
#loc283 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":207:78)
#loc284 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":207:17)
#loc285 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":207:84)
#loc286 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":208:13)
#loc287 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":209:17)
#loc288 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":211:13)
#loc289 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":214:13)
#loc290 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":211:24)
#loc291 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":211:38)
#loc292 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":211:17)
#loc293 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":211:57)
#loc294 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":212:13)
#loc295 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":213:17)
#loc296 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":215:35)
#loc297 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":215:49)
#loc298 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":215:55)
#loc299 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":215:28)
#loc300 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":215:13)
#loc301 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":215:59)
#loc302 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":216:13)
#loc303 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":219:13)
#loc304 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":216:17)
#loc305 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":216:33)
#loc306 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":217:13)
#loc307 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":218:17)
#loc308 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":221:31)
#loc309 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":221:45)
#loc310 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":221:58)
#loc311 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":221:76)
#loc312 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":221:79)
#loc313 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":221:26)
#loc314 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":221:13)
#loc315 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":221:80)
#loc316 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":222:13)
#loc317 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":225:13)
#loc318 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":222:17)
#loc319 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":222:31)
#loc320 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":222:44)
#loc321 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":222:47)
#loc322 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":222:61)
#loc323 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":223:13)
#loc324 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":224:17)
#loc325 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":227:39)
#loc326 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":227:25)
#loc327 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":227:13)
#loc328 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":229:26)
#loc329 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":229:21)
#loc330 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":229:13)
#loc331 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":229:37)
#loc332 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":231:16)
#loc333 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":232:9)
#loc334 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":235:9)
#loc335 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":232:13)
#loc336 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":232:29)
#loc337 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":233:9)
#loc338 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":234:26)
#loc339 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":234:13)
#loc340 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":236:9)
#loc341 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":239:9)
#loc342 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":236:13)
#loc343 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":236:29)
#loc344 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":237:9)
#loc345 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":238:26)
#loc346 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":238:13)
#loc347 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":247:22)
#loc348 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":247:5)
#loc349 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":248:18)
#loc350 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":248:5)
#loc351 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":147:1)
#loc352 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":147:29)
#loc353 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":252:1)
#loc354 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":267:1)
#loc357 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":253:1)
#loc358 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":254:5)
#loc359 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":266:5)
#loc360 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":254:8)
#loc361 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":255:5)
#loc362 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":257:9)
#loc363 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":265:9)
#loc364 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":257:13)
#loc365 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":257:21)
#loc366 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":257:23)
#loc367 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":257:26)
#loc368 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":257:35)
#loc369 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":258:9)
#loc370 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":261:9)
#loc371 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":263:9)
#loc372 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":259:19)
#loc373 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":259:13)
#loc374 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":260:23)
#loc375 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":260:13)
#loc376 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":264:23)
#loc377 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":264:13)
#loc378 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":269:1)
#loc379 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":345:1)
#loc380 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":271:5)
#loc381 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":271:9)
#loc382 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":273:14)
#loc383 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":273:13)
#loc384 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":273:5)
#loc385 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":274:5)
#loc386 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":342:5)
#loc387 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":279:9)
#loc388 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":279:13)
#loc389 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":280:9)
#loc390 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":280:28)
#loc391 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":281:9)
#loc392 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":281:31)
#loc393 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":282:9)
#loc394 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":282:31)
#loc395 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":283:9)
#loc396 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":283:41)
#loc397 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":284:9)
#loc398 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":327:17)
#loc399 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":294:35)
#loc400 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":294:44)
#loc401 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":294:57)
#loc402 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":294:28)
#loc403 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":294:13)
#loc404 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":294:68)
#loc405 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":295:13)
#loc406 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":298:13)
#loc407 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":295:17)
#loc408 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":295:33)
#loc409 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":296:13)
#loc410 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":297:17)
#loc411 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":299:20)
#loc412 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":299:21)
#loc413 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":299:30)
#loc414 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":299:33)
#loc415 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":299:47)
#loc416 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":299:13)
#loc417 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":299:48)
#loc418 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":300:34)
#loc419 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":300:13)
#loc420 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":301:39)
#loc421 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":301:13)
#loc422 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":302:38)
#loc423 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":302:32)
#loc424 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":302:13)
#loc425 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":302:46)
#loc426 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":303:13)
#loc427 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":306:13)
#loc428 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":303:22)
#loc429 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":303:54)
#loc430 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":303:55)
#loc431 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":303:64)
#loc432 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":303:78)
#loc433 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":303:17)
#loc434 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":303:84)
#loc435 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":304:13)
#loc436 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":305:17)
#loc437 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":307:13)
#loc438 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":310:13)
#loc439 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":307:24)
#loc440 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":307:38)
#loc441 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":307:17)
#loc442 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":307:57)
#loc443 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":308:13)
#loc444 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":309:17)
#loc445 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":311:35)
#loc446 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":311:49)
#loc447 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":311:55)
#loc448 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":311:28)
#loc449 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":311:13)
#loc450 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":311:59)
#loc451 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":312:13)
#loc452 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":315:13)
#loc453 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":312:17)
#loc454 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":312:33)
#loc455 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":313:13)
#loc456 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":314:17)
#loc457 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":317:31)
#loc458 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":317:45)
#loc459 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":317:58)
#loc460 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":317:76)
#loc461 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":317:79)
#loc462 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":317:26)
#loc463 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":317:13)
#loc464 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":317:80)
#loc465 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":318:13)
#loc466 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":321:13)
#loc467 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":318:17)
#loc468 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":318:31)
#loc469 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":318:44)
#loc470 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":318:47)
#loc471 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":318:61)
#loc472 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":319:13)
#loc473 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":320:17)
#loc474 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":323:39)
#loc475 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":323:25)
#loc476 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":323:13)
#loc477 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":325:26)
#loc478 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":325:21)
#loc479 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":325:13)
#loc480 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":325:37)
#loc481 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":327:16)
#loc482 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":328:9)
#loc483 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":331:9)
#loc484 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":328:13)
#loc485 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":328:29)
#loc486 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":329:9)
#loc487 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":330:26)
#loc488 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":330:13)
#loc489 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":332:9)
#loc490 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":335:9)
#loc491 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":332:13)
#loc492 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":332:29)
#loc493 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":333:9)
#loc494 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":334:26)
#loc495 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":334:13)
#loc496 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":343:22)
#loc497 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":343:5)
#loc498 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":344:18)
#loc499 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":344:5)
#loc500 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":148:1)
#loc501 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":148:28)
#loc502 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":348:1)
#loc503 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":356:1)
#loc506 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":349:1)
#loc507 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":350:5)
#loc508 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":355:5)
#loc509 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":350:8)
#loc510 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":351:5)
#loc511 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":353:15)
#loc512 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":353:9)
#loc513 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":354:19)
#loc514 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":354:9)
#loc515 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":358:1)
#loc516 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":367:1)
#loc517 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":360:5)
#loc518 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":360:9)
#loc519 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":362:14)
#loc520 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":362:13)
#loc521 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":362:5)
#loc522 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":364:13)
#loc523 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":364:5)
#loc524 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":365:21)
#loc525 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":365:5)
#loc526 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":366:17)
#loc527 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":366:5)
#loc528 = loc(fused[#loc1, #loc2])
#loc529 = loc(fused[#loc3, #loc4])
#loc530 = loc(fused[#loc5, #loc6])
#loc531 = loc(fused[#loc7, #loc8])
#loc532 = loc(fused[#loc9, #loc10])
#loc533 = loc(fused[#loc11, #loc12])
#loc534 = loc(fused[#loc13, #loc14])
#loc535 = loc(fused[#loc15, #loc16])
#loc536 = loc(fused[#loc17, #loc18])
#loc537 = loc(fused[#loc19, #loc20])
#loc538 = loc(fused[#loc22, #loc23])
#loc540 = loc(fused[#loc27, #loc28])
#loc541 = loc(fused[#loc30, #loc28])
#loc542 = loc(fused[#loc34, #loc35])
#loc543 = loc(fused[#loc36, #loc37])
#loc544 = loc(fused[#loc40, #loc38])
#loc545 = loc(fused[#loc41, #loc42])
#loc546 = loc(fused[#loc43, #loc44])
#loc547 = loc(fused[#loc45, #loc46])
#loc548 = loc(fused[#loc47, #loc48])
#loc549 = loc(fused[#loc49, #loc50])
#loc550 = loc(fused[#loc51, #loc52])
#loc551 = loc(fused[#loc53, #loc54])
#loc552 = loc(fused[#loc59, #loc60])
#loc553 = loc(fused[#loc61, #loc62])
#loc554 = loc(fused[#loc63, #loc64])
#loc555 = loc(fused[#loc65, #loc62])
#loc556 = loc(fused[#loc67, #loc68])
#loc557 = loc(fused[#loc70, #loc71])
#loc558 = loc(fused[#loc72, #loc73])
#loc559 = loc(fused[#loc76, #loc74])
#loc560 = loc(fused[#loc80, #loc77])
#loc561 = loc(fused[#loc84, #loc85])
#loc562 = loc(fused[#loc86, #loc87])
#loc563 = loc(fused[#loc89, #loc90])
#loc564 = loc(fused[#loc91, #loc92])
#loc565 = loc(fused[#loc93, #loc94])
#loc566 = loc(fused[#loc95, #loc87])
#loc567 = loc(fused[#loc97, #loc98])
#loc568 = loc(fused[#loc101, #loc102])
#loc569 = loc(fused[#loc103, #loc98])
#loc570 = loc(fused[#loc109, #loc110])
#loc571 = loc(fused[#loc111, #loc112])
#loc572 = loc(fused[#loc113, #loc114])
#loc573 = loc(fused[#loc115, #loc112])
#loc574 = loc(fused[#loc119, #loc120])
#loc575 = loc(fused[#loc123, #loc124])
#loc576 = loc(fused[#loc125, #loc126])
#loc577 = loc(fused[#loc127, #loc128])
#loc578 = loc(fused[#loc130, #loc131])
#loc579 = loc(fused[#loc132, #loc126])
#loc580 = loc(fused[#loc136, #loc134])
#loc581 = loc(fused[#loc139, #loc140])
#loc582 = loc(fused[#loc142, #loc143])
#loc583 = loc(fused[#loc144, #loc145])
#loc584 = loc(fused[#loc146, #loc143])
#loc585 = loc(fused[#loc149, #loc150])
#loc586 = loc(fused[#loc151, #loc152])
#loc587 = loc(fused[#loc153, #loc150])
#loc588 = loc(fused[#loc157, #loc156])
#loc589 = loc(fused[#loc160, #loc161])
#loc590 = loc(fused[#loc162, #loc163])
#loc591 = loc(fused[#loc164, #loc165])
#loc592 = loc(fused[#loc166, #loc167])
#loc593 = loc(fused[#loc168, #loc169])
#loc594 = loc(fused[#loc170, #loc171])
#loc595 = loc(fused[#loc172, #loc173])
#loc596 = loc(fused[#loc178, #loc179])
#loc599 = loc(fused[#loc189, #loc190])
#loc600 = loc(fused[#loc193, #loc194])
#loc601 = loc(fused[#loc197, #loc196])
#loc602 = loc(fused[#loc198, #loc199])
#loc603 = loc(fused[#loc203, #loc204])
#loc605 = loc(fused[#loc208, #loc209])
#loc606 = loc(fused[#loc211, #loc212, #loc213, #loc209])
#loc607 = loc(fused[#loc215, #loc216])
#loc608 = loc(fused[#loc217, #loc218])
#loc609 = loc(fused[#loc220, #loc221])
#loc610 = loc(fused[#loc222, #loc223, #loc224, #loc216])
#loc611 = loc(fused[#loc229, #loc230])
#loc612 = loc(fused[#loc231, #loc232])
#loc613 = loc(fused[#loc235, #loc233])
#loc614 = loc(fused[#loc236, #loc237])
#loc615 = loc(fused[#loc238, #loc239])
#loc616 = loc(fused[#loc240, #loc241])
#loc617 = loc(fused[#loc242, #loc243])
#loc618 = loc(fused[#loc244, #loc245])
#loc619 = loc(fused[#loc246, #loc247])
#loc620 = loc(fused[#loc248, #loc249])
#loc621 = loc(fused[#loc254, #loc255])
#loc622 = loc(fused[#loc256, #loc257])
#loc623 = loc(fused[#loc258, #loc259])
#loc624 = loc(fused[#loc260, #loc257])
#loc625 = loc(fused[#loc262, #loc263])
#loc626 = loc(fused[#loc265, #loc266])
#loc627 = loc(fused[#loc267, #loc268])
#loc628 = loc(fused[#loc270, #loc269])
#loc629 = loc(fused[#loc272, #loc271])
#loc630 = loc(fused[#loc275, #loc276])
#loc631 = loc(fused[#loc277, #loc278])
#loc632 = loc(fused[#loc280, #loc281])
#loc633 = loc(fused[#loc282, #loc283])
#loc634 = loc(fused[#loc284, #loc285])
#loc635 = loc(fused[#loc286, #loc278])
#loc636 = loc(fused[#loc288, #loc289])
#loc637 = loc(fused[#loc292, #loc293])
#loc638 = loc(fused[#loc294, #loc289])
#loc639 = loc(fused[#loc300, #loc301])
#loc640 = loc(fused[#loc302, #loc303])
#loc641 = loc(fused[#loc304, #loc305])
#loc642 = loc(fused[#loc306, #loc303])
#loc643 = loc(fused[#loc310, #loc311])
#loc644 = loc(fused[#loc314, #loc315])
#loc645 = loc(fused[#loc316, #loc317])
#loc646 = loc(fused[#loc318, #loc319])
#loc647 = loc(fused[#loc321, #loc322])
#loc648 = loc(fused[#loc323, #loc317])
#loc649 = loc(fused[#loc327, #loc325])
#loc650 = loc(fused[#loc330, #loc331])
#loc651 = loc(fused[#loc333, #loc334])
#loc652 = loc(fused[#loc335, #loc336])
#loc653 = loc(fused[#loc337, #loc334])
#loc654 = loc(fused[#loc340, #loc341])
#loc655 = loc(fused[#loc342, #loc343])
#loc656 = loc(fused[#loc344, #loc341])
#loc657 = loc(fused[#loc348, #loc347])
#loc658 = loc(fused[#loc351, #loc352])
#loc659 = loc(fused[#loc353, #loc354])
#loc661 = loc(fused[#loc358, #loc359])
#loc662 = loc(fused[#loc361, #loc359])
#loc663 = loc(fused[#loc362, #loc363])
#loc664 = loc(fused[#loc364, #loc365])
#loc665 = loc(fused[#loc367, #loc368])
#loc666 = loc(fused[#loc369, #loc370, #loc371, #loc363])
#loc667 = loc(fused[#loc378, #loc379])
#loc668 = loc(fused[#loc380, #loc381])
#loc669 = loc(fused[#loc384, #loc382])
#loc670 = loc(fused[#loc385, #loc386])
#loc671 = loc(fused[#loc387, #loc388])
#loc672 = loc(fused[#loc389, #loc390])
#loc673 = loc(fused[#loc391, #loc392])
#loc674 = loc(fused[#loc393, #loc394])
#loc675 = loc(fused[#loc395, #loc396])
#loc676 = loc(fused[#loc397, #loc398])
#loc677 = loc(fused[#loc403, #loc404])
#loc678 = loc(fused[#loc405, #loc406])
#loc679 = loc(fused[#loc407, #loc408])
#loc680 = loc(fused[#loc409, #loc406])
#loc681 = loc(fused[#loc411, #loc412])
#loc682 = loc(fused[#loc414, #loc415])
#loc683 = loc(fused[#loc416, #loc417])
#loc684 = loc(fused[#loc419, #loc418])
#loc685 = loc(fused[#loc421, #loc420])
#loc686 = loc(fused[#loc424, #loc425])
#loc687 = loc(fused[#loc426, #loc427])
#loc688 = loc(fused[#loc429, #loc430])
#loc689 = loc(fused[#loc431, #loc432])
#loc690 = loc(fused[#loc433, #loc434])
#loc691 = loc(fused[#loc435, #loc427])
#loc692 = loc(fused[#loc437, #loc438])
#loc693 = loc(fused[#loc441, #loc442])
#loc694 = loc(fused[#loc443, #loc438])
#loc695 = loc(fused[#loc449, #loc450])
#loc696 = loc(fused[#loc451, #loc452])
#loc697 = loc(fused[#loc453, #loc454])
#loc698 = loc(fused[#loc455, #loc452])
#loc699 = loc(fused[#loc459, #loc460])
#loc700 = loc(fused[#loc463, #loc464])
#loc701 = loc(fused[#loc465, #loc466])
#loc702 = loc(fused[#loc467, #loc468])
#loc703 = loc(fused[#loc470, #loc471])
#loc704 = loc(fused[#loc472, #loc466])
#loc705 = loc(fused[#loc476, #loc474])
#loc706 = loc(fused[#loc479, #loc480])
#loc707 = loc(fused[#loc482, #loc483])
#loc708 = loc(fused[#loc484, #loc485])
#loc709 = loc(fused[#loc486, #loc483])
#loc710 = loc(fused[#loc489, #loc490])
#loc711 = loc(fused[#loc491, #loc492])
#loc712 = loc(fused[#loc493, #loc490])
#loc713 = loc(fused[#loc497, #loc496])
#loc714 = loc(fused[#loc500, #loc501])
#loc715 = loc(fused[#loc502, #loc503])
#loc717 = loc(fused[#loc507, #loc508])
#loc718 = loc(fused[#loc510, #loc508])
#loc719 = loc(fused[#loc515, #loc516])
#loc720 = loc(fused[#loc517, #loc518])
#loc721 = loc(fused[#loc521, #loc519])
#loc722 = loc(fused[#loc523, #loc522])
#loc723 = loc(fused[#loc525, #loc524])
