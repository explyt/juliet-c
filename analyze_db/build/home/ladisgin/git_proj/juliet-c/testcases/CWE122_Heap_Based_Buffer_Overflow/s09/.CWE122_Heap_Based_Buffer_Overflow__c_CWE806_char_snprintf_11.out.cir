!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":116:10)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":116:14)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":116:20)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":116:32)
#loc228 = loc(fused[#loc79, #loc80])
#loc229 = loc(fused[#loc81, #loc82])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc199)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc200)
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc201)
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc202)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc203)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc11)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc204)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc205)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc207)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc208)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc22)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc23)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc23)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc209)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc210)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc22)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc211)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc212)
    cir.br ^bb1 loc(#loc213)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc31)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc31)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc214)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc215)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc33)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc35)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc33)
    cir.br ^bb3 loc(#loc29)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc29)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc216)
  ^bb5:  // pred: ^bb4
    %16 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc217)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc217)
    %18 = cir.call %17() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc38)
    %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc38)
    cir.brcond %19 ^bb6, ^bb7 loc(#loc218)
  ^bb6:  // pred: ^bb5
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc41)
    %22 = cir.const #cir.int<65> : !s32i loc(#loc42)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc43)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc43)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc43)
    cir.libc.memset %26 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc219)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc47)
    %28 = cir.cast(integral, %27 : !s32i), !s8i loc(#loc47)
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    %30 = cir.const #cir.int<100> : !s32i loc(#loc49)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc49)
    %33 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc51)
    cir.store %28, %33 : !s8i, !cir.ptr<!s8i> loc(#loc220)
    cir.br ^bb7 loc(#loc37)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc37)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc221)
  ^bb9:  // pred: ^bb8
    %34 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc207)
    cir.store %34, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc207)
    %35 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc54)
    %36 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc55)
    %37 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc56)
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
    %39 = cir.call @strlen(%38) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc56)
    %40 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc11)
    %41 = cir.cast(array_to_ptrdecay, %40 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc11)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
    %43 = cir.call @snprintf(%36, %39, %41, %42) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc54)
    %44 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%44) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %45 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc61)
    %46 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
    %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc62)
    cir.call @free(%47) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc61)
    cir.br ^bb10 loc(#loc53)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc17)
  } loc(#loc206)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc223)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc65)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc224)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc67)
    cir.return loc(#loc64)
  } loc(#loc222)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc225)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc226)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc73)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc75)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc76)
  cir.func @main(%arg0: !s32i loc(fused[#loc79, #loc80]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc81, #loc82])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc228)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc229)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc78)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc83)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc83)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc84)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc85)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc85)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc86)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc73)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11_good : !cir.ptr<!cir.func<!void ()>> loc(#loc230)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11_good() : () -> () loc(#loc88)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc74)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc75)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc231)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11_bad() : () -> () loc(#loc92)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc76)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc95)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc232)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc232)
    cir.return %17 : !s32i loc(#loc232)
  } loc(#loc227)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc233)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc99)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc235)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc236)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc106)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc107)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc107)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc237)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc238)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc106)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc239)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc240)
    cir.br ^bb1 loc(#loc241)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc115)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc115)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc242)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc243)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc117)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc118)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc119)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc117)
    cir.br ^bb3 loc(#loc113)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc113)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc244)
  ^bb5:  // pred: ^bb4
    %16 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc245)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc245)
    %18 = cir.call %17() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc122)
    %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc122)
    cir.brcond %19 ^bb6, ^bb7 loc(#loc246)
  ^bb6:  // pred: ^bb5
    %20 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc99)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc127)
    cir.br ^bb8 loc(#loc125)
  ^bb7:  // pred: ^bb5
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc128)
    %24 = cir.const #cir.int<65> : !s32i loc(#loc129)
    %25 = cir.const #cir.int<50> : !s32i loc(#loc130)
    %26 = cir.const #cir.int<1> : !s32i loc(#loc131)
    %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc130)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc130)
    cir.libc.memset %28 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc247)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc134)
    %30 = cir.cast(integral, %29 : !s32i), !s8i loc(#loc134)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
    %32 = cir.const #cir.int<50> : !s32i loc(#loc136)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc137)
    %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc136)
    %35 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %34 : !s32i), !cir.ptr<!s8i> loc(#loc138)
    cir.store %30, %35 : !s8i, !cir.ptr<!s8i> loc(#loc248)
    cir.br ^bb8 loc(#loc121)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc121)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc249)
  ^bb10:  // pred: ^bb9
    %36 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc235)
    cir.store %36, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc235)
    %37 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc141)
    %38 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc142)
    %39 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc143)
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
    %41 = cir.call @strlen(%40) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc143)
    %42 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc145)
    %43 = cir.cast(array_to_ptrdecay, %42 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc145)
    %44 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
    %45 = cir.call @snprintf(%38, %41, %43, %44) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc141)
    %46 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
    cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc148)
    %47 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc149)
    %48 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
    %49 = cir.cast(bitcast, %48 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc150)
    cir.call @free(%49) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc149)
    cir.br ^bb11 loc(#loc140)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc101)
  } loc(#loc234)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc251)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc252)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc157)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc158)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc158)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc253)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc254)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc157)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc255)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc256)
    cir.br ^bb1 loc(#loc257)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc166)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc166)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc258)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc259)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc168)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc169)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc170)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc168)
    cir.br ^bb3 loc(#loc164)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc164)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc260)
  ^bb5:  // pred: ^bb4
    %16 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc261)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc261)
    %18 = cir.call %17() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc173)
    %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc173)
    cir.brcond %19 ^bb6, ^bb7 loc(#loc262)
  ^bb6:  // pred: ^bb5
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc176)
    %22 = cir.const #cir.int<65> : !s32i loc(#loc177)
    %23 = cir.const #cir.int<50> : !s32i loc(#loc178)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc179)
    %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc178)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc178)
    cir.libc.memset %26 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc263)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc182)
    %28 = cir.cast(integral, %27 : !s32i), !s8i loc(#loc182)
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc183)
    %30 = cir.const #cir.int<50> : !s32i loc(#loc184)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc185)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc184)
    %33 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc186)
    cir.store %28, %33 : !s8i, !cir.ptr<!s8i> loc(#loc264)
    cir.br ^bb7 loc(#loc172)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc172)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc265)
  ^bb9:  // pred: ^bb8
    %34 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc251)
    cir.store %34, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc251)
    %35 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc189)
    %36 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc190)
    %37 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc191)
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc192)
    %39 = cir.call @strlen(%38) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc191)
    %40 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc193)
    %41 = cir.cast(array_to_ptrdecay, %40 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc193)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc194)
    %43 = cir.call @snprintf(%36, %39, %41, %42) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc189)
    %44 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc195)
    cir.call @printLine(%44) : (!cir.ptr<!s8i>) -> () loc(#loc196)
    %45 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc197)
    %46 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc198)
    %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc198)
    cir.call @free(%47) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc197)
    cir.br ^bb10 loc(#loc188)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc152)
  } loc(#loc250)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc7 = loc("/usr/include/stdio.h":385:1)
#loc8 = loc("/usr/include/stdio.h":387:62)
#loc9 = loc("/usr/include/string.h":407:1)
#loc10 = loc("/usr/include/string.h":408:33)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":43:38)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc14 = loc("/usr/include/stdlib.h":687:1)
#loc15 = loc("/usr/include/stdlib.h":687:32)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":29:1)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":47:1)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":41:9)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":41:25)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":31:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":31:12)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":32:20)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":32:27)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":32:31)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":32:42)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":32:43)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":32:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":33:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":33:33)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":33:9)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":33:17)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":33:23)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":33:24)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":33:30)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":33:29)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":34:5)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":39:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":34:8)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":34:26)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":35:5)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":37:16)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":37:22)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":37:27)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":37:31)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":37:9)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":37:32)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":38:23)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":38:9)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":38:14)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":38:18)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":38:19)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":40:5)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":46:5)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":43:9)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":43:18)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":43:24)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":43:31)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":43:44)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":44:19)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":44:9)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":45:9)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":45:14)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":100:1)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":104:1)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":102:5)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":102:14)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":103:5)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":103:14)
#loc69 = loc("/usr/include/stdlib.h":575:1)
#loc70 = loc("/usr/include/stdlib.h":575:41)
#loc71 = loc("/usr/include/time.h":76:1)
#loc72 = loc("/usr/include/time.h":76:38)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":121:15)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":123:15)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":126:15)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":128:15)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":116:1)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":131:1)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":117:1)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":119:27)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":119:22)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":119:5)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":121:5)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":122:5)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":122:71)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":123:5)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":126:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":127:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":127:70)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":128:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":130:12)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":130:5)
#loc97 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc98 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":62:19)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":54:1)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":77:1)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":71:9)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":71:25)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":56:5)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":56:12)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":57:20)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":57:27)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":57:31)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":57:42)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":57:43)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":57:5)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":58:5)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":58:33)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":58:9)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":58:17)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":58:23)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":58:24)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":58:30)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":58:29)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":59:5)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":69:5)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":59:8)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":59:27)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":60:5)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":63:5)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":65:5)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":62:9)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":67:16)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":67:22)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":67:27)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":67:30)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":67:9)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":67:31)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":68:22)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":68:9)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":68:14)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":68:17)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":68:18)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":70:5)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":76:5)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":73:9)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":73:18)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":73:24)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":73:31)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":73:38)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":73:44)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":74:19)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":74:9)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":75:9)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":75:14)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":80:1)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":98:1)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":92:9)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":92:25)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":82:5)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":82:12)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":83:20)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":83:27)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":83:31)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":83:42)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":83:43)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":83:5)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":84:5)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":84:33)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":84:9)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":84:17)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":84:23)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":84:24)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":84:30)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":84:29)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":85:5)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":90:5)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":85:8)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":85:26)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":86:5)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":88:16)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":88:22)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":88:27)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":88:30)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":88:9)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":88:31)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":89:22)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":89:9)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":89:14)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":89:17)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":89:18)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":91:5)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":97:5)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":94:9)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":94:18)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":94:24)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":94:31)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":94:38)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":94:44)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":95:19)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":95:9)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":96:9)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_11.c":96:14)
#loc199 = loc(fused[#loc1, #loc2])
#loc200 = loc(fused[#loc3, #loc4])
#loc201 = loc(fused[#loc5, #loc6])
#loc202 = loc(fused[#loc7, #loc8])
#loc203 = loc(fused[#loc9, #loc10])
#loc204 = loc(fused[#loc12, #loc13])
#loc205 = loc(fused[#loc14, #loc15])
#loc206 = loc(fused[#loc16, #loc17])
#loc207 = loc(fused[#loc18, #loc19])
#loc208 = loc(fused[#loc20, #loc21])
#loc209 = loc(fused[#loc24, #loc25])
#loc210 = loc(fused[#loc23, #loc25])
#loc211 = loc(fused[#loc22, #loc26])
#loc212 = loc(fused[#loc27, #loc26])
#loc213 = loc(fused[#loc28, #loc29])
#loc214 = loc(fused[#loc30, #loc31])
#loc215 = loc(fused[#loc32, #loc29])
#loc216 = loc(fused[#loc36, #loc37])
#loc217 = loc(fused[#loc38, #loc39])
#loc218 = loc(fused[#loc40, #loc37])
#loc219 = loc(fused[#loc45, #loc46])
#loc220 = loc(fused[#loc48, #loc47])
#loc221 = loc(fused[#loc52, #loc53])
#loc222 = loc(fused[#loc63, #loc64])
#loc223 = loc(fused[#loc65, #loc66])
#loc224 = loc(fused[#loc67, #loc68])
#loc225 = loc(fused[#loc69, #loc70])
#loc226 = loc(fused[#loc71, #loc72])
#loc227 = loc(fused[#loc77, #loc78])
#loc230 = loc(fused[#loc88, #loc89])
#loc231 = loc(fused[#loc92, #loc93])
#loc232 = loc(fused[#loc96, #loc95])
#loc233 = loc(fused[#loc97, #loc98])
#loc234 = loc(fused[#loc100, #loc101])
#loc235 = loc(fused[#loc102, #loc103])
#loc236 = loc(fused[#loc104, #loc105])
#loc237 = loc(fused[#loc108, #loc109])
#loc238 = loc(fused[#loc107, #loc109])
#loc239 = loc(fused[#loc106, #loc110])
#loc240 = loc(fused[#loc111, #loc110])
#loc241 = loc(fused[#loc112, #loc113])
#loc242 = loc(fused[#loc114, #loc115])
#loc243 = loc(fused[#loc116, #loc113])
#loc244 = loc(fused[#loc120, #loc121])
#loc245 = loc(fused[#loc122, #loc123])
#loc246 = loc(fused[#loc124, #loc125, #loc126, #loc121])
#loc247 = loc(fused[#loc132, #loc133])
#loc248 = loc(fused[#loc135, #loc134])
#loc249 = loc(fused[#loc139, #loc140])
#loc250 = loc(fused[#loc151, #loc152])
#loc251 = loc(fused[#loc153, #loc154])
#loc252 = loc(fused[#loc155, #loc156])
#loc253 = loc(fused[#loc159, #loc160])
#loc254 = loc(fused[#loc158, #loc160])
#loc255 = loc(fused[#loc157, #loc161])
#loc256 = loc(fused[#loc162, #loc161])
#loc257 = loc(fused[#loc163, #loc164])
#loc258 = loc(fused[#loc165, #loc166])
#loc259 = loc(fused[#loc167, #loc164])
#loc260 = loc(fused[#loc171, #loc172])
#loc261 = loc(fused[#loc173, #loc174])
#loc262 = loc(fused[#loc175, #loc172])
#loc263 = loc(fused[#loc180, #loc181])
#loc264 = loc(fused[#loc183, #loc182])
#loc265 = loc(fused[#loc187, #loc188])
