!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc23 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":36:23)
module @"/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc155)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc156)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc157)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc158)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc159)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__rand_malloc_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc161)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc162)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc17)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc17)
    cir.store %3, %1 : !s16i, !cir.ptr<!s16i> loc(#loc163)
    cir.br ^bb1 loc(#loc164)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc21)
    cir.brcond %5 ^bb2, ^bb7 loc(#loc165)
  ^bb2:  // pred: ^bb1
    %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %8 = cir.binop(and, %6, %7) : !s32i loc(#loc23)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc23)
    cir.brcond %9 ^bb3, ^bb4 loc(#loc23)
  ^bb3:  // pred: ^bb2
    %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
    %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc23)
    %12 = cir.const #cir.int<30> : !s32i loc(#loc23)
    %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc23)
    %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
    %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc23)
    %16 = cir.const #cir.int<15> : !s32i loc(#loc23)
    %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc23)
    %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc23)
    %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
    %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc23)
    %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc23)
    cir.br ^bb5(%21 : !u32i) loc(#loc23)
  ^bb4:  // pred: ^bb2
    %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
    %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc23)
    %24 = cir.const #cir.int<30> : !s32i loc(#loc23)
    %25 = cir.shift(left, %23 : !u32i, %24 : !s32i) -> !u32i loc(#loc23)
    %26 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
    %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc23)
    %28 = cir.const #cir.int<15> : !s32i loc(#loc23)
    %29 = cir.shift(left, %27 : !u32i, %28 : !s32i) -> !u32i loc(#loc23)
    %30 = cir.binop(xor, %25, %29) : !u32i loc(#loc23)
    %31 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
    %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc23)
    %33 = cir.binop(xor, %30, %32) : !u32i loc(#loc23)
    %34 = cir.unary(minus, %33) : !u32i, !u32i loc(#loc23)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %36 = cir.cast(integral, %35 : !s32i), !u32i loc(#loc23)
    %37 = cir.binop(sub, %34, %36) : !u32i loc(#loc23)
    cir.br ^bb5(%37 : !u32i) loc(#loc23)
  ^bb5(%38: !u32i loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":36:23)):  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc23)
  ^bb6:  // pred: ^bb5
    %39 = cir.cast(integral, %38 : !u32i), !s32i loc(#loc23)
    %40 = cir.cast(integral, %39 : !s32i), !s16i loc(#loc23)
    cir.store %40, %1 : !s16i, !cir.ptr<!s16i> loc(#loc166)
    cir.br ^bb7 loc(#loc20)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc20)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc167)
  ^bb9:  // pred: ^bb8
    %41 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc27)
    %42 = cir.cast(integral, %41 : !s16i), !s32i loc(#loc27)
    %43 = cir.const #cir.int<100> : !s32i loc(#loc28)
    %44 = cir.cmp(lt, %42, %43) : !s32i, !cir.bool loc(#loc168)
    cir.brcond %44 ^bb10, ^bb15 loc(#loc169)
  ^bb10:  // pred: ^bb9
    %45 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc30)
    %46 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc31)
    %47 = cir.cast(integral, %46 : !s16i), !u64i loc(#loc31)
    %48 = cir.call @malloc(%47) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc30)
    %49 = cir.cast(bitcast, %48 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc170)
    cir.store %49, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc161)
    cir.br ^bb11 loc(#loc171)
  ^bb11:  // pred: ^bb10
    %50 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    %51 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc35)
    %52 = cir.cast(bitcast, %51 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc35)
    %53 = cir.cmp(eq, %50, %52) : !cir.ptr<!s8i>, !cir.bool loc(#loc172)
    cir.brcond %53 ^bb12, ^bb13 loc(#loc173)
  ^bb12:  // pred: ^bb11
    %54 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc37)
    %55 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc39)
    cir.call @exit(%56) : (!s32i) -> () extra(#fn_attr) loc(#loc37)
    cir.br ^bb13 loc(#loc33)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc33)
  ^bb14:  // pred: ^bb13
    %57 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    %58 = cir.cast(bitcast, %57 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc40)
    %59 = cir.const #cir.int<65> : !s32i loc(#loc41)
    %60 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc42)
    %61 = cir.cast(integral, %60 : !s16i), !s32i loc(#loc42)
    %62 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %63 = cir.binop(sub, %61, %62) nsw : !s32i loc(#loc42)
    %64 = cir.cast(integral, %63 : !s32i), !u64i loc(#loc42)
    cir.libc.memset %64 bytes from %58 set to %59 : !cir.ptr<!void>, !s32i, !u64i loc(#loc174)
    %65 = cir.const #cir.int<0> : !s32i loc(#loc46)
    %66 = cir.cast(integral, %65 : !s32i), !s8i loc(#loc46)
    %67 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
    %68 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc48)
    %69 = cir.cast(integral, %68 : !s16i), !s32i loc(#loc48)
    %70 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %71 = cir.binop(sub, %69, %70) nsw : !s32i loc(#loc48)
    %72 = cir.ptr_stride(%67 : !cir.ptr<!s8i>, %71 : !s32i), !cir.ptr<!s8i> loc(#loc50)
    cir.store %66, %72 : !s8i, !cir.ptr<!s8i> loc(#loc175)
    %73 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%73) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    %74 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
    %75 = cir.cast(bitcast, %74 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc53)
    cir.call @free(%75) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc54)
    cir.br ^bb15 loc(#loc26)
  ^bb15:  // 2 preds: ^bb9, ^bb14
    cir.br ^bb16 loc(#loc26)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc12)
  } loc(#loc160)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__rand_malloc_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc177)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc57)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc178)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc59)
    cir.return loc(#loc56)
  } loc(#loc176)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc61)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc180)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc181)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc68)
    cir.store %3, %1 : !s16i, !cir.ptr<!s16i> loc(#loc182)
    cir.br ^bb1 loc(#loc183)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc72)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc72)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc184)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc61)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    cir.br ^bb4 loc(#loc74)
  ^bb3:  // pred: ^bb1
    %8 = cir.const #cir.int<100> : !s32i loc(#loc77)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc78)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc77)
    %11 = cir.cast(integral, %10 : !s32i), !s16i loc(#loc77)
    cir.store %11, %1 : !s16i, !cir.ptr<!s16i> loc(#loc185)
    cir.br ^bb4 loc(#loc71)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc71)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc186)
  ^bb6:  // pred: ^bb5
    %12 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc82)
    %13 = cir.cast(integral, %12 : !s16i), !s32i loc(#loc82)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc83)
    %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc187)
    cir.brcond %15 ^bb7, ^bb12 loc(#loc188)
  ^bb7:  // pred: ^bb6
    %16 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc85)
    %17 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc86)
    %18 = cir.cast(integral, %17 : !s16i), !u64i loc(#loc86)
    %19 = cir.call @malloc(%18) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc85)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc189)
    cir.store %20, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc180)
    cir.br ^bb8 loc(#loc190)
  ^bb8:  // pred: ^bb7
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
    %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc90)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc90)
    %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!s8i>, !cir.bool loc(#loc191)
    cir.brcond %24 ^bb9, ^bb10 loc(#loc192)
  ^bb9:  // pred: ^bb8
    %25 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc92)
    %26 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %27 = cir.unary(minus, %26) nsw : !s32i, !s32i loc(#loc94)
    cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc92)
    cir.br ^bb10 loc(#loc88)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc88)
  ^bb11:  // pred: ^bb10
    %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc95)
    %30 = cir.const #cir.int<65> : !s32i loc(#loc96)
    %31 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc97)
    %32 = cir.cast(integral, %31 : !s16i), !s32i loc(#loc97)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc97)
    %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc97)
    cir.libc.memset %35 bytes from %29 set to %30 : !cir.ptr<!void>, !s32i, !u64i loc(#loc193)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc101)
    %37 = cir.cast(integral, %36 : !s32i), !s8i loc(#loc101)
    %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
    %39 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc103)
    %40 = cir.cast(integral, %39 : !s16i), !s32i loc(#loc103)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %42 = cir.binop(sub, %40, %41) nsw : !s32i loc(#loc103)
    %43 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %42 : !s32i), !cir.ptr<!s8i> loc(#loc105)
    cir.store %37, %43 : !s8i, !cir.ptr<!s8i> loc(#loc194)
    %44 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
    cir.call @printLine(%44) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    %45 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc108)
    cir.call @free(%46) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc109)
    cir.br ^bb12 loc(#loc81)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc81)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc63)
  } loc(#loc179)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc196)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc197)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc116)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc116)
    cir.store %3, %1 : !s16i, !cir.ptr<!s16i> loc(#loc198)
    cir.br ^bb1 loc(#loc199)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc120)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc200)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<100> : !s32i loc(#loc122)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc123)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc122)
    %9 = cir.cast(integral, %8 : !s32i), !s16i loc(#loc122)
    cir.store %9, %1 : !s16i, !cir.ptr<!s16i> loc(#loc201)
    cir.br ^bb3 loc(#loc119)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc119)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc202)
  ^bb5:  // pred: ^bb4
    %10 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc127)
    %11 = cir.cast(integral, %10 : !s16i), !s32i loc(#loc127)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc128)
    %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc203)
    cir.brcond %13 ^bb6, ^bb11 loc(#loc204)
  ^bb6:  // pred: ^bb5
    %14 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc130)
    %15 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc131)
    %16 = cir.cast(integral, %15 : !s16i), !u64i loc(#loc131)
    %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc130)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc205)
    cir.store %18, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc196)
    cir.br ^bb7 loc(#loc206)
  ^bb7:  // pred: ^bb6
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc135)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc135)
    %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc207)
    cir.brcond %22 ^bb8, ^bb9 loc(#loc208)
  ^bb8:  // pred: ^bb7
    %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc137)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc138)
    %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc139)
    cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc137)
    cir.br ^bb9 loc(#loc133)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc133)
  ^bb10:  // pred: ^bb9
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc140)
    %28 = cir.const #cir.int<65> : !s32i loc(#loc141)
    %29 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc142)
    %30 = cir.cast(integral, %29 : !s16i), !s32i loc(#loc142)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc143)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc142)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc142)
    cir.libc.memset %33 bytes from %27 set to %28 : !cir.ptr<!void>, !s32i, !u64i loc(#loc209)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc146)
    %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc146)
    %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
    %37 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc148)
    %38 = cir.cast(integral, %37 : !s16i), !s32i loc(#loc148)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc149)
    %40 = cir.binop(sub, %38, %39) nsw : !s32i loc(#loc148)
    %41 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %40 : !s32i), !cir.ptr<!s8i> loc(#loc150)
    cir.store %35, %41 : !s8i, !cir.ptr<!s8i> loc(#loc210)
    %42 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
    cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc152)
    %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc153)
    cir.call @free(%44) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc154)
    cir.br ^bb11 loc(#loc126)
  ^bb11:  // 2 preds: ^bb5, ^bb10
    cir.br ^bb12 loc(#loc126)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc111)
  } loc(#loc195)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":28:1)
#loc12 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":51:1)
#loc13 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":43:9)
#loc14 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":43:48)
#loc15 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":30:5)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":30:11)
#loc17 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":32:12)
#loc18 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":32:5)
#loc19 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":33:5)
#loc20 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":37:5)
#loc21 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":33:8)
#loc22 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":34:5)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":36:9)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":39:5)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":50:5)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":39:9)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":39:16)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":40:5)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":43:37)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":43:44)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":44:9)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":44:43)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":44:13)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":44:27)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":44:33)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":44:34)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":44:40)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":44:39)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":46:16)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":46:28)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":46:33)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":46:38)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":46:9)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":46:39)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":47:30)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":47:9)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":47:20)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":47:25)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":47:26)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":48:19)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":48:9)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":49:14)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":49:9)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":114:1)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":118:1)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":116:5)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":116:14)
#loc59 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":117:5)
#loc60 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":117:14)
#loc61 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":66:19)
#loc62 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":58:1)
#loc63 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":86:1)
#loc64 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":78:9)
#loc65 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":78:48)
#loc66 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":60:5)
#loc67 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":60:11)
#loc68 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":62:12)
#loc69 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":62:5)
#loc70 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":63:5)
#loc71 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":72:5)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":63:8)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":64:5)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":67:5)
#loc75 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":69:5)
#loc76 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":66:9)
#loc77 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":71:16)
#loc78 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":71:20)
#loc79 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":71:9)
#loc80 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":74:5)
#loc81 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":85:5)
#loc82 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":74:9)
#loc83 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":74:16)
#loc84 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":75:5)
#loc85 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":78:37)
#loc86 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":78:44)
#loc87 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":79:9)
#loc88 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":79:43)
#loc89 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":79:13)
#loc90 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":79:27)
#loc91 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":79:33)
#loc92 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":79:34)
#loc93 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":79:40)
#loc94 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":79:39)
#loc95 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":81:16)
#loc96 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":81:28)
#loc97 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":81:33)
#loc98 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":81:38)
#loc99 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":81:9)
#loc100 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":81:39)
#loc101 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":82:30)
#loc102 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":82:9)
#loc103 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":82:20)
#loc104 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":82:25)
#loc105 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":82:26)
#loc106 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":83:19)
#loc107 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":83:9)
#loc108 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":84:14)
#loc109 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":84:9)
#loc110 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":89:1)
#loc111 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":112:1)
#loc112 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":104:9)
#loc113 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":104:48)
#loc114 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":91:5)
#loc115 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":91:11)
#loc116 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":93:12)
#loc117 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":93:5)
#loc118 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":94:5)
#loc119 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":98:5)
#loc120 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":94:8)
#loc121 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":95:5)
#loc122 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":97:16)
#loc123 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":97:20)
#loc124 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":97:9)
#loc125 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":100:5)
#loc126 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":111:5)
#loc127 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":100:9)
#loc128 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":100:16)
#loc129 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":101:5)
#loc130 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":104:37)
#loc131 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":104:44)
#loc132 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":105:9)
#loc133 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":105:43)
#loc134 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":105:13)
#loc135 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":105:27)
#loc136 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":105:33)
#loc137 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":105:34)
#loc138 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":105:40)
#loc139 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":105:39)
#loc140 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":107:16)
#loc141 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":107:28)
#loc142 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":107:33)
#loc143 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":107:38)
#loc144 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":107:9)
#loc145 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":107:39)
#loc146 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":108:30)
#loc147 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":108:9)
#loc148 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":108:20)
#loc149 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":108:25)
#loc150 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":108:26)
#loc151 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":109:19)
#loc152 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":109:9)
#loc153 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":110:14)
#loc154 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_04.c":110:9)
#loc155 = loc(fused[#loc1, #loc2])
#loc156 = loc(fused[#loc3, #loc4])
#loc157 = loc(fused[#loc5, #loc6])
#loc158 = loc(fused[#loc7, #loc8])
#loc159 = loc(fused[#loc9, #loc10])
#loc160 = loc(fused[#loc11, #loc12])
#loc161 = loc(fused[#loc13, #loc14])
#loc162 = loc(fused[#loc15, #loc16])
#loc163 = loc(fused[#loc18, #loc17])
#loc164 = loc(fused[#loc19, #loc20])
#loc165 = loc(fused[#loc22, #loc20])
#loc166 = loc(fused[#loc24, #loc23])
#loc167 = loc(fused[#loc25, #loc26])
#loc168 = loc(fused[#loc27, #loc28])
#loc169 = loc(fused[#loc29, #loc26])
#loc170 = loc(fused[#loc30, #loc14])
#loc171 = loc(fused[#loc32, #loc33])
#loc172 = loc(fused[#loc34, #loc35])
#loc173 = loc(fused[#loc36, #loc33])
#loc174 = loc(fused[#loc44, #loc45])
#loc175 = loc(fused[#loc47, #loc46])
#loc176 = loc(fused[#loc55, #loc56])
#loc177 = loc(fused[#loc57, #loc58])
#loc178 = loc(fused[#loc59, #loc60])
#loc179 = loc(fused[#loc62, #loc63])
#loc180 = loc(fused[#loc64, #loc65])
#loc181 = loc(fused[#loc66, #loc67])
#loc182 = loc(fused[#loc69, #loc68])
#loc183 = loc(fused[#loc70, #loc71])
#loc184 = loc(fused[#loc73, #loc74, #loc75, #loc71])
#loc185 = loc(fused[#loc79, #loc78])
#loc186 = loc(fused[#loc80, #loc81])
#loc187 = loc(fused[#loc82, #loc83])
#loc188 = loc(fused[#loc84, #loc81])
#loc189 = loc(fused[#loc85, #loc65])
#loc190 = loc(fused[#loc87, #loc88])
#loc191 = loc(fused[#loc89, #loc90])
#loc192 = loc(fused[#loc91, #loc88])
#loc193 = loc(fused[#loc99, #loc100])
#loc194 = loc(fused[#loc102, #loc101])
#loc195 = loc(fused[#loc110, #loc111])
#loc196 = loc(fused[#loc112, #loc113])
#loc197 = loc(fused[#loc114, #loc115])
#loc198 = loc(fused[#loc117, #loc116])
#loc199 = loc(fused[#loc118, #loc119])
#loc200 = loc(fused[#loc121, #loc119])
#loc201 = loc(fused[#loc124, #loc123])
#loc202 = loc(fused[#loc125, #loc126])
#loc203 = loc(fused[#loc127, #loc128])
#loc204 = loc(fused[#loc129, #loc126])
#loc205 = loc(fused[#loc130, #loc113])
#loc206 = loc(fused[#loc132, #loc133])
#loc207 = loc(fused[#loc134, #loc135])
#loc208 = loc(fused[#loc136, #loc133])
#loc209 = loc(fused[#loc144, #loc145])
#loc210 = loc(fused[#loc147, #loc146])
