!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc105)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc106)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc107)
  cir.func private @printLongLongLine(!s64i) loc(#loc108)
  cir.func no_proto @CWE191_Integer_Underflow__int64_t_fscanf_postdec_16_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc110)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc13)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc111)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc17)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc17)
        cir.condition(%3) loc(#loc17)
      } do {
        cir.scope {
          %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc19)
          %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc106)
          %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc20)
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc107)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc107)
          %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc19)
          cir.break loc(#loc21)
        } loc(#loc113)
        cir.yield loc(#loc16)
      } loc(#loc112)
    } loc(#loc112)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc24)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc24)
        cir.condition(%3) loc(#loc24)
      } do {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc117)
            %3 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc30)
            %4 = cir.unary(dec, %3) nsw : !s64i, !s64i loc(#loc31)
            cir.store %4, %0 : !s64i, !cir.ptr<!s64i> loc(#loc118)
            %5 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc29)
            cir.store %5, %2 : !s64i, !cir.ptr<!s64i> loc(#loc117)
            %6 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc32)
            cir.call @printLongLongLine(%6) : (!s64i) -> () loc(#loc33)
          } loc(#loc116)
          cir.break loc(#loc34)
        } loc(#loc115)
        cir.yield loc(#loc23)
      } loc(#loc114)
    } loc(#loc114)
    cir.return loc(#loc10)
  } loc(#loc109)
  cir.func no_proto @CWE191_Integer_Underflow__int64_t_fscanf_postdec_16_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc120)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc37)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc121)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc39)
    cir.return loc(#loc36)
  } loc(#loc119)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc122)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc43)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc124)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc48)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc125)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc52)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc52)
        cir.condition(%3) loc(#loc52)
      } do {
        cir.scope {
          %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc54)
          %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc106)
          %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc55)
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc128)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc128)
          %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc54)
          cir.break loc(#loc58)
        } loc(#loc127)
        cir.yield loc(#loc51)
      } loc(#loc126)
    } loc(#loc126)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc61)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc61)
        cir.condition(%3) loc(#loc61)
      } do {
        cir.scope {
          cir.scope {
            %2 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc65)
            %3 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc66)
            %4 = cir.unary(minus, %3) nsw : !s64i, !s64i loc(#loc66)
            %5 = cir.const #cir.int<1> : !s64i loc(#loc66)
            %6 = cir.binop(sub, %4, %5) nsw : !s64i loc(#loc66)
            %7 = cir.cmp(gt, %2, %6) : !s64i, !cir.bool loc(#loc132)
            cir.if %7 {
              %8 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc134)
              %9 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc72)
              %10 = cir.unary(dec, %9) nsw : !s64i, !s64i loc(#loc73)
              cir.store %10, %0 : !s64i, !cir.ptr<!s64i> loc(#loc135)
              %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc71)
              cir.store %11, %8 : !s64i, !cir.ptr<!s64i> loc(#loc134)
              %12 = cir.load %8 : !cir.ptr<!s64i>, !s64i loc(#loc74)
              cir.call @printLongLongLine(%12) : (!s64i) -> () loc(#loc75)
            } else {
              %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc43)
              %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc43)
              cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc76)
            } loc(#loc133)
          } loc(#loc131)
          cir.break loc(#loc77)
        } loc(#loc130)
        cir.yield loc(#loc60)
      } loc(#loc129)
    } loc(#loc129)
    cir.return loc(#loc45)
  } loc(#loc123)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc137)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc82)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc138)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc86)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc86)
        cir.condition(%3) loc(#loc86)
      } do {
        cir.scope {
          %2 = cir.const #cir.int<2> : !s32i loc(#loc88)
          %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc89)
          %4 = cir.cast(integral, %3 : !s32i), !s64i loc(#loc89)
          cir.store %4, %0 : !s64i, !cir.ptr<!s64i> loc(#loc141)
          cir.break loc(#loc91)
        } loc(#loc140)
        cir.yield loc(#loc85)
      } loc(#loc139)
    } loc(#loc139)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc94)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc94)
        cir.condition(%3) loc(#loc94)
      } do {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc145)
            %3 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc100)
            %4 = cir.unary(dec, %3) nsw : !s64i, !s64i loc(#loc101)
            cir.store %4, %0 : !s64i, !cir.ptr<!s64i> loc(#loc146)
            %5 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc99)
            cir.store %5, %2 : !s64i, !cir.ptr<!s64i> loc(#loc145)
            %6 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc102)
            cir.call @printLongLongLine(%6) : (!s64i) -> () loc(#loc103)
          } loc(#loc144)
          cir.break loc(#loc104)
        } loc(#loc143)
        cir.yield loc(#loc93)
      } loc(#loc142)
    } loc(#loc142)
    cir.return loc(#loc79)
  } loc(#loc136)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":30:24)
#loc6 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":30:28)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc9 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":23:1)
#loc10 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":43:1)
#loc11 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":25:5)
#loc12 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":25:13)
#loc13 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":26:12)
#loc14 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":26:5)
#loc15 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":27:5)
#loc16 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":32:5)
#loc17 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":27:11)
#loc18 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":28:5)
#loc19 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":30:9)
#loc20 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":30:17)
#loc21 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":31:9)
#loc22 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":33:5)
#loc23 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":42:5)
#loc24 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":33:11)
#loc25 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":34:5)
#loc26 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":35:9)
#loc27 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":40:9)
#loc28 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":38:13)
#loc29 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":38:30)
#loc30 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":37:17)
#loc31 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":37:13)
#loc32 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":39:31)
#loc33 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":39:13)
#loc34 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":41:9)
#loc35 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":100:1)
#loc36 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":104:1)
#loc37 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":102:5)
#loc38 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":102:13)
#loc39 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":103:5)
#loc40 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":103:13)
#loc41 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc42 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc43 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":71:23)
#loc44 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":50:1)
#loc45 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":75:1)
#loc46 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":52:5)
#loc47 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":52:13)
#loc48 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":53:12)
#loc49 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":53:5)
#loc50 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":54:5)
#loc51 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":59:5)
#loc52 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":54:11)
#loc53 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":55:5)
#loc54 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":57:9)
#loc55 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":57:17)
#loc56 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":57:24)
#loc57 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":57:28)
#loc58 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":58:9)
#loc59 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":60:5)
#loc60 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":74:5)
#loc61 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":60:11)
#loc62 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":61:5)
#loc63 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":63:9)
#loc64 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":72:9)
#loc65 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":63:13)
#loc66 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":63:20)
#loc67 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":64:9)
#loc68 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":68:9)
#loc69 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":70:9)
#loc70 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":66:13)
#loc71 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":66:30)
#loc72 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":65:17)
#loc73 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":65:13)
#loc74 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":67:31)
#loc75 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":67:13)
#loc76 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":71:13)
#loc77 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":73:9)
#loc78 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":78:1)
#loc79 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":98:1)
#loc80 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":80:5)
#loc81 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":80:13)
#loc82 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":81:12)
#loc83 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":81:5)
#loc84 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":82:5)
#loc85 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":87:5)
#loc86 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":82:11)
#loc87 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":83:5)
#loc88 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":85:17)
#loc89 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":85:16)
#loc90 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":85:9)
#loc91 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":86:9)
#loc92 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":88:5)
#loc93 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":97:5)
#loc94 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":88:11)
#loc95 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":89:5)
#loc96 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":90:9)
#loc97 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":95:9)
#loc98 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":93:13)
#loc99 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":93:30)
#loc100 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":92:17)
#loc101 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":92:13)
#loc102 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":94:31)
#loc103 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":94:13)
#loc104 = loc("CWE191_Integer_Underflow__int64_t_fscanf_postdec_16.c":96:9)
#loc105 = loc(fused[#loc1, #loc2])
#loc106 = loc(fused[#loc3, #loc4])
#loc107 = loc(fused[#loc5, #loc6])
#loc108 = loc(fused[#loc7, #loc8])
#loc109 = loc(fused[#loc9, #loc10])
#loc110 = loc(fused[#loc11, #loc12])
#loc111 = loc(fused[#loc14, #loc13])
#loc112 = loc(fused[#loc15, #loc16])
#loc113 = loc(fused[#loc18, #loc16])
#loc114 = loc(fused[#loc22, #loc23])
#loc115 = loc(fused[#loc25, #loc23])
#loc116 = loc(fused[#loc26, #loc27])
#loc117 = loc(fused[#loc28, #loc29])
#loc118 = loc(fused[#loc31, #loc30])
#loc119 = loc(fused[#loc35, #loc36])
#loc120 = loc(fused[#loc37, #loc38])
#loc121 = loc(fused[#loc39, #loc40])
#loc122 = loc(fused[#loc41, #loc42])
#loc123 = loc(fused[#loc44, #loc45])
#loc124 = loc(fused[#loc46, #loc47])
#loc125 = loc(fused[#loc49, #loc48])
#loc126 = loc(fused[#loc50, #loc51])
#loc127 = loc(fused[#loc53, #loc51])
#loc128 = loc(fused[#loc56, #loc57])
#loc129 = loc(fused[#loc59, #loc60])
#loc130 = loc(fused[#loc62, #loc60])
#loc131 = loc(fused[#loc63, #loc64])
#loc132 = loc(fused[#loc65, #loc66])
#loc133 = loc(fused[#loc67, #loc68, #loc69, #loc64])
#loc134 = loc(fused[#loc70, #loc71])
#loc135 = loc(fused[#loc73, #loc72])
#loc136 = loc(fused[#loc78, #loc79])
#loc137 = loc(fused[#loc80, #loc81])
#loc138 = loc(fused[#loc83, #loc82])
#loc139 = loc(fused[#loc84, #loc85])
#loc140 = loc(fused[#loc87, #loc85])
#loc141 = loc(fused[#loc90, #loc88])
#loc142 = loc(fused[#loc92, #loc93])
#loc143 = loc(fused[#loc95, #loc93])
#loc144 = loc(fused[#loc96, #loc97])
#loc145 = loc(fused[#loc98, #loc99])
#loc146 = loc(fused[#loc101, #loc100])
