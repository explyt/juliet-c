!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":140:23)
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc273)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc274)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc275)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc276)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc277)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc278)
  cir.func private @printIntLine(!s32i) loc(#loc279)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc16)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc280)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc282)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc283)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc284)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc285)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc30)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc286)
    cir.br ^bb1 loc(#loc287)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc282)
    cir.store %6, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc282)
    cir.br ^bb2 loc(#loc288)
  ^bb2:  // pred: ^bb1
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc36)
    %8 = cir.const #cir.int<3> : !s32i loc(#loc37)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc37)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc37)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc37)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc37)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc37)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc37)
    %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc37)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc274)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc38)
    %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc39)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc40)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc40)
    %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc289)
    cir.brcond %21 ^bb3, ^bb4 loc(#loc290)
  ^bb3:  // pred: ^bb2
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc44)
    %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc45)
    cir.store %23, %3 : !s32i, !cir.ptr<!s32i> loc(#loc291)
    cir.br ^bb5 loc(#loc42)
  ^bb4:  // pred: ^bb2
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    cir.br ^bb5 loc(#loc35)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc35)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc33)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc292)
  ^bb8:  // pred: ^bb7
    %26 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc51)
    %27 = cir.const #cir.int<10> : !s32i loc(#loc52)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc52)
    %29 = cir.const #cir.int<4> : !u64i loc(#loc293)
    %30 = cir.binop(mul, %28, %29) : !u64i loc(#loc294)
    %31 = cir.call @malloc(%30) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc51)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc295)
    cir.store %32, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc284)
    cir.br ^bb9 loc(#loc296)
  ^bb9:  // pred: ^bb8
    %33 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc57)
    %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc58)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc58)
    %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!s32i>, !cir.bool loc(#loc297)
    cir.brcond %36 ^bb10, ^bb11 loc(#loc298)
  ^bb10:  // pred: ^bb9
    %37 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc60)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc61)
    %39 = cir.unary(minus, %38) nsw : !s32i, !s32i loc(#loc62)
    cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc60)
    cir.br ^bb11 loc(#loc56)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc56)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc299)
  ^bb13:  // pred: ^bb12
    %40 = cir.const #cir.int<0> : !s32i loc(#loc65)
    cir.store %40, %1 : !s32i, !cir.ptr<!s32i> loc(#loc300)
    cir.br ^bb14 loc(#loc299)
  ^bb14:  // 2 preds: ^bb13, ^bb18
    %41 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc67)
    %42 = cir.const #cir.int<10> : !s32i loc(#loc68)
    %43 = cir.cmp(lt, %41, %42) : !s32i, !cir.bool loc(#loc301)
    cir.brcond %43 ^bb15, ^bb19 loc(#loc69)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc302)
  ^bb16:  // pred: ^bb15
    %44 = cir.const #cir.int<0> : !s32i loc(#loc71)
    %45 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc72)
    %46 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc73)
    %47 = cir.ptr_stride(%45 : !cir.ptr<!s32i>, %46 : !s32i), !cir.ptr<!s32i> loc(#loc74)
    cir.store %44, %47 : !s32i, !cir.ptr<!s32i> loc(#loc303)
    cir.br ^bb17 loc(#loc64)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc64)
  ^bb18:  // pred: ^bb17
    %48 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc75)
    %49 = cir.unary(inc, %48) nsw : !s32i, !s32i loc(#loc76)
    cir.store %49, %1 : !s32i, !cir.ptr<!s32i> loc(#loc304)
    cir.br ^bb14 loc(#loc299)
  ^bb19:  // pred: ^bb14
    cir.br ^bb20 loc(#loc64)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc305)
  ^bb21:  // pred: ^bb20
    %50 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    %51 = cir.const #cir.int<0> : !s32i loc(#loc80)
    %52 = cir.cmp(ge, %50, %51) : !s32i, !cir.bool loc(#loc306)
    cir.brcond %52 ^bb22, ^bb31 loc(#loc307)
  ^bb22:  // pred: ^bb21
    %53 = cir.const #cir.int<1> : !s32i loc(#loc84)
    %54 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc85)
    %55 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc86)
    %56 = cir.ptr_stride(%54 : !cir.ptr<!s32i>, %55 : !s32i), !cir.ptr<!s32i> loc(#loc87)
    cir.store %53, %56 : !s32i, !cir.ptr<!s32i> loc(#loc308)
    cir.br ^bb23 loc(#loc309)
  ^bb23:  // pred: ^bb22
    %57 = cir.const #cir.int<0> : !s32i loc(#loc90)
    cir.store %57, %1 : !s32i, !cir.ptr<!s32i> loc(#loc310)
    cir.br ^bb24 loc(#loc309)
  ^bb24:  // 2 preds: ^bb23, ^bb28
    %58 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    %59 = cir.const #cir.int<10> : !s32i loc(#loc93)
    %60 = cir.cmp(lt, %58, %59) : !s32i, !cir.bool loc(#loc311)
    cir.brcond %60 ^bb25, ^bb29 loc(#loc94)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc312)
  ^bb26:  // pred: ^bb25
    %61 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc96)
    %62 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc97)
    %63 = cir.ptr_stride(%61 : !cir.ptr<!s32i>, %62 : !s32i), !cir.ptr<!s32i> loc(#loc98)
    %64 = cir.load %63 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    cir.call @printIntLine(%64) : (!s32i) -> () loc(#loc99)
    cir.br ^bb27 loc(#loc89)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28 loc(#loc89)
  ^bb28:  // pred: ^bb27
    %65 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    %66 = cir.unary(inc, %65) nsw : !s32i, !s32i loc(#loc101)
    cir.store %66, %1 : !s32i, !cir.ptr<!s32i> loc(#loc313)
    cir.br ^bb24 loc(#loc309)
  ^bb29:  // pred: ^bb24
    cir.br ^bb30 loc(#loc89)
  ^bb30:  // pred: ^bb29
    cir.br ^bb32 loc(#loc82)
  ^bb31:  // pred: ^bb21
    %67 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc16)
    %68 = cir.cast(array_to_ptrdecay, %67 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc16)
    cir.call @printLine(%68) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    cir.br ^bb32 loc(#loc78)
  ^bb32:  // 2 preds: ^bb30, ^bb31
    cir.br ^bb33 loc(#loc78)
  ^bb33:  // pred: ^bb32
    %69 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc103)
    %70 = cir.cast(bitcast, %69 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc103)
    cir.call @free(%70) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc104)
    cir.br ^bb34 loc(#loc50)
  ^bb34:  // pred: ^bb33
    cir.return loc(#loc20)
  } loc(#loc281)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc315)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc107)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc316)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc109)
    cir.return loc(#loc106)
  } loc(#loc314)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc318)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc319)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc320)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc120)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc321)
    %5 = cir.const #cir.int<7> : !s32i loc(#loc122)
    cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc322)
    cir.br ^bb1 loc(#loc323)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc126)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc127)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc127)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc324)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc325)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc126)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc326)
    cir.store %12, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc319)
    cir.br ^bb2 loc(#loc327)
  ^bb2:  // pred: ^bb1
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc132)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc133)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc133)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc328)
    cir.brcond %16 ^bb3, ^bb4 loc(#loc329)
  ^bb3:  // pred: ^bb2
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc135)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc136)
    %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc137)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc135)
    cir.br ^bb4 loc(#loc131)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc131)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc330)
  ^bb6:  // pred: ^bb5
    %20 = cir.const #cir.int<0> : !s32i loc(#loc140)
    cir.store %20, %0 : !s32i, !cir.ptr<!s32i> loc(#loc331)
    cir.br ^bb7 loc(#loc330)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    %22 = cir.const #cir.int<10> : !s32i loc(#loc143)
    %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc332)
    cir.brcond %23 ^bb8, ^bb12 loc(#loc144)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc333)
  ^bb9:  // pred: ^bb8
    %24 = cir.const #cir.int<0> : !s32i loc(#loc146)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc147)
    %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc148)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc149)
    cir.store %24, %27 : !s32i, !cir.ptr<!s32i> loc(#loc334)
    cir.br ^bb10 loc(#loc139)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc139)
  ^bb11:  // pred: ^bb10
    %28 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    %29 = cir.unary(inc, %28) nsw : !s32i, !s32i loc(#loc151)
    cir.store %29, %0 : !s32i, !cir.ptr<!s32i> loc(#loc335)
    cir.br ^bb7 loc(#loc330)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc139)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc336)
  ^bb14:  // pred: ^bb13
    %30 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc154)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc155)
    %32 = cir.cmp(ge, %30, %31) : !s32i, !cir.bool loc(#loc337)
    cir.brcond %32 ^bb15, ^bb24 loc(#loc338)
  ^bb15:  // pred: ^bb14
    %33 = cir.const #cir.int<1> : !s32i loc(#loc159)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc160)
    %35 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc161)
    %36 = cir.ptr_stride(%34 : !cir.ptr<!s32i>, %35 : !s32i), !cir.ptr<!s32i> loc(#loc162)
    cir.store %33, %36 : !s32i, !cir.ptr<!s32i> loc(#loc339)
    cir.br ^bb16 loc(#loc340)
  ^bb16:  // pred: ^bb15
    %37 = cir.const #cir.int<0> : !s32i loc(#loc165)
    cir.store %37, %0 : !s32i, !cir.ptr<!s32i> loc(#loc341)
    cir.br ^bb17 loc(#loc340)
  ^bb17:  // 2 preds: ^bb16, ^bb21
    %38 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc167)
    %39 = cir.const #cir.int<10> : !s32i loc(#loc168)
    %40 = cir.cmp(lt, %38, %39) : !s32i, !cir.bool loc(#loc342)
    cir.brcond %40 ^bb18, ^bb22 loc(#loc169)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc343)
  ^bb19:  // pred: ^bb18
    %41 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc171)
    %42 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc172)
    %43 = cir.ptr_stride(%41 : !cir.ptr<!s32i>, %42 : !s32i), !cir.ptr<!s32i> loc(#loc173)
    %44 = cir.load %43 : !cir.ptr<!s32i>, !s32i loc(#loc171)
    cir.call @printIntLine(%44) : (!s32i) -> () loc(#loc174)
    cir.br ^bb20 loc(#loc164)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc164)
  ^bb21:  // pred: ^bb20
    %45 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    %46 = cir.unary(inc, %45) nsw : !s32i, !s32i loc(#loc176)
    cir.store %46, %0 : !s32i, !cir.ptr<!s32i> loc(#loc344)
    cir.br ^bb17 loc(#loc340)
  ^bb22:  // pred: ^bb17
    cir.br ^bb23 loc(#loc164)
  ^bb23:  // pred: ^bb22
    cir.br ^bb25 loc(#loc157)
  ^bb24:  // pred: ^bb14
    %47 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc177)
    %48 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc177)
    cir.call @printLine(%48) : (!cir.ptr<!s8i>) -> () loc(#loc178)
    cir.br ^bb25 loc(#loc153)
  ^bb25:  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc153)
  ^bb26:  // pred: ^bb25
    %49 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc179)
    %50 = cir.cast(bitcast, %49 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc179)
    cir.call @free(%50) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc180)
    cir.br ^bb27 loc(#loc125)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc112)
  } loc(#loc317)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc181)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc346)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc347)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc348)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc349)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc192)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc193)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc350)
    cir.br ^bb1 loc(#loc351)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc346)
    cir.store %6, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc346)
    cir.br ^bb2 loc(#loc352)
  ^bb2:  // pred: ^bb1
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc199)
    %8 = cir.const #cir.int<3> : !s32i loc(#loc200)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc200)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc200)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc200)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc200)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc200)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc200)
    %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc200)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc274)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc201)
    %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc202)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc203)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc203)
    %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc353)
    cir.brcond %21 ^bb3, ^bb4 loc(#loc354)
  ^bb3:  // pred: ^bb2
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc207)
    %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc208)
    cir.store %23, %3 : !s32i, !cir.ptr<!s32i> loc(#loc355)
    cir.br ^bb5 loc(#loc205)
  ^bb4:  // pred: ^bb2
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc211)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc211)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc212)
    cir.br ^bb5 loc(#loc198)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc198)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc196)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc356)
  ^bb8:  // pred: ^bb7
    %26 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc215)
    %27 = cir.const #cir.int<10> : !s32i loc(#loc216)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc216)
    %29 = cir.const #cir.int<4> : !u64i loc(#loc357)
    %30 = cir.binop(mul, %28, %29) : !u64i loc(#loc358)
    %31 = cir.call @malloc(%30) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc215)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc359)
    cir.store %32, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc348)
    cir.br ^bb9 loc(#loc360)
  ^bb9:  // pred: ^bb8
    %33 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc221)
    %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc222)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc222)
    %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!s32i>, !cir.bool loc(#loc361)
    cir.brcond %36 ^bb10, ^bb11 loc(#loc362)
  ^bb10:  // pred: ^bb9
    %37 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc224)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc225)
    %39 = cir.unary(minus, %38) nsw : !s32i, !s32i loc(#loc226)
    cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc224)
    cir.br ^bb11 loc(#loc220)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc220)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc363)
  ^bb13:  // pred: ^bb12
    %40 = cir.const #cir.int<0> : !s32i loc(#loc229)
    cir.store %40, %1 : !s32i, !cir.ptr<!s32i> loc(#loc364)
    cir.br ^bb14 loc(#loc363)
  ^bb14:  // 2 preds: ^bb13, ^bb18
    %41 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc231)
    %42 = cir.const #cir.int<10> : !s32i loc(#loc232)
    %43 = cir.cmp(lt, %41, %42) : !s32i, !cir.bool loc(#loc365)
    cir.brcond %43 ^bb15, ^bb19 loc(#loc233)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc366)
  ^bb16:  // pred: ^bb15
    %44 = cir.const #cir.int<0> : !s32i loc(#loc235)
    %45 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc236)
    %46 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc237)
    %47 = cir.ptr_stride(%45 : !cir.ptr<!s32i>, %46 : !s32i), !cir.ptr<!s32i> loc(#loc238)
    cir.store %44, %47 : !s32i, !cir.ptr<!s32i> loc(#loc367)
    cir.br ^bb17 loc(#loc228)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc228)
  ^bb18:  // pred: ^bb17
    %48 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc239)
    %49 = cir.unary(inc, %48) nsw : !s32i, !s32i loc(#loc240)
    cir.store %49, %1 : !s32i, !cir.ptr<!s32i> loc(#loc368)
    cir.br ^bb14 loc(#loc363)
  ^bb19:  // pred: ^bb14
    cir.br ^bb20 loc(#loc228)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc369)
  ^bb21:  // pred: ^bb20
    %50 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc243)
    %51 = cir.const #cir.int<0> : !s32i loc(#loc244)
    %52 = cir.cmp(ge, %50, %51) : !s32i, !cir.bool loc(#loc370)
    cir.brcond %52 ^bb22, ^bb27 loc(#loc245)
  ^bb22:  // pred: ^bb21
    %53 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc246)
    %54 = cir.const #cir.int<10> : !s32i loc(#loc247)
    %55 = cir.cmp(lt, %53, %54) : !s32i, !cir.bool loc(#loc371)
    cir.brcond %55 ^bb23, ^bb24 loc(#loc245)
  ^bb23:  // pred: ^bb22
    %56 = cir.const #true loc(#loc245)
    cir.br ^bb25(%56 : !cir.bool) loc(#loc245)
  ^bb24:  // pred: ^bb22
    %57 = cir.const #false loc(#loc245)
    cir.br ^bb25(%57 : !cir.bool) loc(#loc245)
  ^bb25(%58: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":140:23)):  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc245)
  ^bb26:  // pred: ^bb25
    cir.br ^bb28(%58 : !cir.bool) loc(#loc245)
  ^bb27:  // pred: ^bb21
    %59 = cir.const #false loc(#loc245)
    cir.br ^bb28(%59 : !cir.bool) loc(#loc245)
  ^bb28(%60: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":140:23)):  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc245)
  ^bb29:  // pred: ^bb28
    cir.brcond %60 ^bb30, ^bb39 loc(#loc372)
  ^bb30:  // pred: ^bb29
    %61 = cir.const #cir.int<1> : !s32i loc(#loc252)
    %62 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc253)
    %63 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc254)
    %64 = cir.ptr_stride(%62 : !cir.ptr<!s32i>, %63 : !s32i), !cir.ptr<!s32i> loc(#loc255)
    cir.store %61, %64 : !s32i, !cir.ptr<!s32i> loc(#loc373)
    cir.br ^bb31 loc(#loc374)
  ^bb31:  // pred: ^bb30
    %65 = cir.const #cir.int<0> : !s32i loc(#loc258)
    cir.store %65, %1 : !s32i, !cir.ptr<!s32i> loc(#loc375)
    cir.br ^bb32 loc(#loc374)
  ^bb32:  // 2 preds: ^bb31, ^bb36
    %66 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc260)
    %67 = cir.const #cir.int<10> : !s32i loc(#loc261)
    %68 = cir.cmp(lt, %66, %67) : !s32i, !cir.bool loc(#loc376)
    cir.brcond %68 ^bb33, ^bb37 loc(#loc262)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc377)
  ^bb34:  // pred: ^bb33
    %69 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc264)
    %70 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc265)
    %71 = cir.ptr_stride(%69 : !cir.ptr<!s32i>, %70 : !s32i), !cir.ptr<!s32i> loc(#loc266)
    %72 = cir.load %71 : !cir.ptr<!s32i>, !s32i loc(#loc264)
    cir.call @printIntLine(%72) : (!s32i) -> () loc(#loc267)
    cir.br ^bb35 loc(#loc257)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc257)
  ^bb36:  // pred: ^bb35
    %73 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc268)
    %74 = cir.unary(inc, %73) nsw : !s32i, !s32i loc(#loc269)
    cir.store %74, %1 : !s32i, !cir.ptr<!s32i> loc(#loc378)
    cir.br ^bb32 loc(#loc374)
  ^bb37:  // pred: ^bb32
    cir.br ^bb38 loc(#loc257)
  ^bb38:  // pred: ^bb37
    cir.br ^bb40 loc(#loc250)
  ^bb39:  // pred: ^bb29
    %75 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc181)
    %76 = cir.cast(array_to_ptrdecay, %75 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc181)
    cir.call @printLine(%76) : (!cir.ptr<!s8i>) -> () loc(#loc270)
    cir.br ^bb40 loc(#loc242)
  ^bb40:  // 2 preds: ^bb38, ^bb39
    cir.br ^bb41 loc(#loc242)
  ^bb41:  // pred: ^bb40
    %77 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc271)
    %78 = cir.cast(bitcast, %77 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc271)
    cir.call @free(%78) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc272)
    cir.br ^bb42 loc(#loc214)
  ^bb42:  // pred: ^bb41
    cir.return loc(#loc183)
  } loc(#loc345)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":39:23)
#loc10 = loc("/usr/include/stdlib.h":672:1)
#loc11 = loc("/usr/include/stdlib.h":672:45)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":64:23)
#loc17 = loc("/usr/include/stdlib.h":687:1)
#loc18 = loc("/usr/include/stdlib.h":687:32)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":24:1)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":68:1)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":30:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":30:45)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":43:9)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":43:13)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":44:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":44:54)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":26:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":26:9)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":28:13)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":28:12)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":28:5)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":29:5)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":41:5)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":32:9)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":40:9)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":32:19)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":32:32)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":32:49)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":32:13)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":32:59)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":33:9)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":36:9)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":38:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":35:25)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":35:20)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":35:13)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":35:36)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":39:13)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":42:5)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":67:5)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":44:31)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":44:38)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":44:43)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":44:53)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":45:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":45:39)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":45:13)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":45:23)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":45:29)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":45:30)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":45:36)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":45:35)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":47:9)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":50:9)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":47:18)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":47:14)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":47:21)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":47:25)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":47:23)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":48:9)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":49:25)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":49:13)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":49:20)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":49:21)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":47:30)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":47:29)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":53:9)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":65:9)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":53:13)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":53:21)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":54:9)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":61:9)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":63:9)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":55:28)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":55:13)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":55:20)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":55:24)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":57:13)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":60:13)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":57:21)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":57:17)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":57:24)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":57:28)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":57:26)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":58:13)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":59:30)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":59:37)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":59:38)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":59:17)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":57:33)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":57:32)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":64:13)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":66:14)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":66:9)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":157:1)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":161:1)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":159:5)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":159:13)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":160:5)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":160:13)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":75:1)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":109:1)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":84:9)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":84:13)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":85:9)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":85:54)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":77:5)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":77:9)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":79:13)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":79:12)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":79:5)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":82:12)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":82:5)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":83:5)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":108:5)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":85:31)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":85:38)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":85:43)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":85:53)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":86:9)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":86:39)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":86:13)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":86:23)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":86:29)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":86:30)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":86:36)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":86:35)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":88:9)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":91:9)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":88:18)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":88:14)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":88:21)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":88:25)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":88:23)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":89:9)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":90:25)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":90:13)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":90:20)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":90:21)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":88:30)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":88:29)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":94:9)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":106:9)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":94:13)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":94:21)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":95:9)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":102:9)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":104:9)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":96:28)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":96:13)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":96:20)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":96:24)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":98:13)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":101:13)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":98:21)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":98:17)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":98:24)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":98:28)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":98:26)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":99:13)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":100:30)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":100:37)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":100:38)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":100:17)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":98:33)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":98:32)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":105:23)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":105:13)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":107:14)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":107:9)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":151:23)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":112:1)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":155:1)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":118:9)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":118:45)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":131:9)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":131:13)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":132:9)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":132:54)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":114:5)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":114:9)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":116:13)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":116:12)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":116:5)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":117:5)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":129:5)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":120:9)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":128:9)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":120:19)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":120:32)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":120:49)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":120:13)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":120:59)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":121:9)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":124:9)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":126:9)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":123:25)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":123:20)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":123:13)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":123:36)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":127:23)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":127:13)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":130:5)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":154:5)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":132:31)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":132:38)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":132:43)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":132:53)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":133:9)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":133:39)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":133:13)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":133:23)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":133:29)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":133:30)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":133:36)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":133:35)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":135:9)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":138:9)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":135:18)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":135:14)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":135:21)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":135:25)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":135:23)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":136:9)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":137:25)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":137:13)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":137:20)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":137:21)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":135:30)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":135:29)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":140:9)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":152:9)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":140:13)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":140:21)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":140:26)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":140:34)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":140:36)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":141:9)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":148:9)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":150:9)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":142:28)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":142:13)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":142:20)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":142:24)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":144:13)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":147:13)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":144:21)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":144:17)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":144:24)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":144:28)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":144:26)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":145:13)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":146:30)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":146:37)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":146:38)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":146:17)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":144:33)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":144:32)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":151:13)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":153:14)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c":153:9)
#loc273 = loc(fused[#loc1, #loc2])
#loc274 = loc(fused[#loc3, #loc4])
#loc275 = loc(fused[#loc5, #loc6])
#loc276 = loc(fused[#loc7, #loc8])
#loc277 = loc(fused[#loc10, #loc11])
#loc278 = loc(fused[#loc12, #loc13])
#loc279 = loc(fused[#loc14, #loc15])
#loc280 = loc(fused[#loc17, #loc18])
#loc281 = loc(fused[#loc19, #loc20])
#loc282 = loc(fused[#loc21, #loc22])
#loc283 = loc(fused[#loc23, #loc24])
#loc284 = loc(fused[#loc25, #loc26])
#loc285 = loc(fused[#loc27, #loc28])
#loc286 = loc(fused[#loc31, #loc29])
#loc287 = loc(fused[#loc32, #loc33])
#loc288 = loc(fused[#loc34, #loc35])
#loc289 = loc(fused[#loc39, #loc40])
#loc290 = loc(fused[#loc41, #loc42, #loc43, #loc35])
#loc291 = loc(fused[#loc46, #loc47])
#loc292 = loc(fused[#loc49, #loc50])
#loc293 = loc(fused[#loc53, #loc54])
#loc294 = loc(fused[#loc52, #loc54])
#loc295 = loc(fused[#loc51, #loc26])
#loc296 = loc(fused[#loc55, #loc56])
#loc297 = loc(fused[#loc57, #loc58])
#loc298 = loc(fused[#loc59, #loc56])
#loc299 = loc(fused[#loc63, #loc64])
#loc300 = loc(fused[#loc66, #loc65])
#loc301 = loc(fused[#loc67, #loc68])
#loc302 = loc(fused[#loc70, #loc64])
#loc303 = loc(fused[#loc72, #loc71])
#loc304 = loc(fused[#loc76, #loc75])
#loc305 = loc(fused[#loc77, #loc78])
#loc306 = loc(fused[#loc79, #loc80])
#loc307 = loc(fused[#loc81, #loc82, #loc83, #loc78])
#loc308 = loc(fused[#loc85, #loc84])
#loc309 = loc(fused[#loc88, #loc89])
#loc310 = loc(fused[#loc91, #loc90])
#loc311 = loc(fused[#loc92, #loc93])
#loc312 = loc(fused[#loc95, #loc89])
#loc313 = loc(fused[#loc101, #loc100])
#loc314 = loc(fused[#loc105, #loc106])
#loc315 = loc(fused[#loc107, #loc108])
#loc316 = loc(fused[#loc109, #loc110])
#loc317 = loc(fused[#loc111, #loc112])
#loc318 = loc(fused[#loc113, #loc114])
#loc319 = loc(fused[#loc115, #loc116])
#loc320 = loc(fused[#loc117, #loc118])
#loc321 = loc(fused[#loc121, #loc119])
#loc322 = loc(fused[#loc123, #loc122])
#loc323 = loc(fused[#loc124, #loc125])
#loc324 = loc(fused[#loc128, #loc129])
#loc325 = loc(fused[#loc127, #loc129])
#loc326 = loc(fused[#loc126, #loc116])
#loc327 = loc(fused[#loc130, #loc131])
#loc328 = loc(fused[#loc132, #loc133])
#loc329 = loc(fused[#loc134, #loc131])
#loc330 = loc(fused[#loc138, #loc139])
#loc331 = loc(fused[#loc141, #loc140])
#loc332 = loc(fused[#loc142, #loc143])
#loc333 = loc(fused[#loc145, #loc139])
#loc334 = loc(fused[#loc147, #loc146])
#loc335 = loc(fused[#loc151, #loc150])
#loc336 = loc(fused[#loc152, #loc153])
#loc337 = loc(fused[#loc154, #loc155])
#loc338 = loc(fused[#loc156, #loc157, #loc158, #loc153])
#loc339 = loc(fused[#loc160, #loc159])
#loc340 = loc(fused[#loc163, #loc164])
#loc341 = loc(fused[#loc166, #loc165])
#loc342 = loc(fused[#loc167, #loc168])
#loc343 = loc(fused[#loc170, #loc164])
#loc344 = loc(fused[#loc176, #loc175])
#loc345 = loc(fused[#loc182, #loc183])
#loc346 = loc(fused[#loc184, #loc185])
#loc347 = loc(fused[#loc186, #loc187])
#loc348 = loc(fused[#loc188, #loc189])
#loc349 = loc(fused[#loc190, #loc191])
#loc350 = loc(fused[#loc194, #loc192])
#loc351 = loc(fused[#loc195, #loc196])
#loc352 = loc(fused[#loc197, #loc198])
#loc353 = loc(fused[#loc202, #loc203])
#loc354 = loc(fused[#loc204, #loc205, #loc206, #loc198])
#loc355 = loc(fused[#loc209, #loc210])
#loc356 = loc(fused[#loc213, #loc214])
#loc357 = loc(fused[#loc217, #loc218])
#loc358 = loc(fused[#loc216, #loc218])
#loc359 = loc(fused[#loc215, #loc189])
#loc360 = loc(fused[#loc219, #loc220])
#loc361 = loc(fused[#loc221, #loc222])
#loc362 = loc(fused[#loc223, #loc220])
#loc363 = loc(fused[#loc227, #loc228])
#loc364 = loc(fused[#loc230, #loc229])
#loc365 = loc(fused[#loc231, #loc232])
#loc366 = loc(fused[#loc234, #loc228])
#loc367 = loc(fused[#loc236, #loc235])
#loc368 = loc(fused[#loc240, #loc239])
#loc369 = loc(fused[#loc241, #loc242])
#loc370 = loc(fused[#loc243, #loc244])
#loc371 = loc(fused[#loc246, #loc248])
#loc372 = loc(fused[#loc249, #loc250, #loc251, #loc242])
#loc373 = loc(fused[#loc253, #loc252])
#loc374 = loc(fused[#loc256, #loc257])
#loc375 = loc(fused[#loc259, #loc258])
#loc376 = loc(fused[#loc260, #loc261])
#loc377 = loc(fused[#loc263, #loc257])
#loc378 = loc(fused[#loc269, #loc268])
