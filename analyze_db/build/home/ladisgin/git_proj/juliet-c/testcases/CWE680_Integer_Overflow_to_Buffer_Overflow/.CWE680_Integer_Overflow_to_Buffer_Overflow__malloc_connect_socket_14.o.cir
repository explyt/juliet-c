!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":85:48)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" external @globalFive : !s32i {alignment = 4 : i64} loc(#loc285)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc286)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc287)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc288)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc289)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc290)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc291)
  cir.func private @close(!s32i) -> !s32i loc(#loc292)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc293)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc294)
  cir.func private @printIntLine(!s32i) loc(#loc295)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc296)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc298)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc299)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc300)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc301)
    %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc302)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc303)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc304)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc42)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc43)
    cir.store %8, %6 : !s32i, !cir.ptr<!s32i> loc(#loc305)
    cir.br ^bb1 loc(#loc306)
  ^bb1:  // pred: ^bb0
    %9 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc285)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc47)
    %11 = cir.const #cir.int<5> : !s32i loc(#loc48)
    %12 = cir.cmp(eq, %10, %11) : !s32i, !cir.bool loc(#loc307)
    cir.brcond %12 ^bb2, ^bb34 loc(#loc308)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc309)
  ^bb3:  // pred: ^bb2
    %13 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc33)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc300)
    cir.br ^bb4 loc(#loc310)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc310)
  ^bb5:  // pred: ^bb26
    %15 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc54)
    cir.brcond %16 ^bb6, ^bb27 loc(#loc54)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %17 = cir.const #cir.int<2> : !s32i loc(#loc55)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %19 = cir.const #cir.int<6> : !s32i loc(#loc57)
    %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc58)
    cir.store %20, %2 : !s32i, !cir.ptr<!s32i> loc(#loc311)
    cir.br ^bb7 loc(#loc312)
  ^bb7:  // pred: ^bb6
    %21 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc63)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc64)
    %24 = cir.cmp(eq, %21, %23) : !s32i, !cir.bool loc(#loc313)
    cir.brcond %24 ^bb8, ^bb9 loc(#loc314)
  ^bb8:  // pred: ^bb7
    cir.br ^bb27 loc(#loc66)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc62)
  ^bb10:  // pred: ^bb9
    %25 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc315)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc69)
    %27 = cir.const #cir.int<16> : !u64i loc(#loc316)
    cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc317)
    %28 = cir.const #cir.int<2> : !s32i loc(#loc74)
    %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc74)
    %30 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
    cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc318)
    %31 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
    %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
    %33 = cir.call @inet_addr(%32) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc77)
    %34 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc78)
    %35 = cir.get_member %34[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc79)
    cir.store %33, %35 : !u32i, !cir.ptr<!u32i> loc(#loc319)
    %36 = cir.const #cir.int<27015> : !s32i loc(#loc82)
    %37 = cir.cast(integral, %36 : !s32i), !u16i loc(#loc82)
    %38 = cir.call @htons(%37) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc83)
    %39 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc84)
    cir.store %38, %39 : !u16i, !cir.ptr<!u16i> loc(#loc320)
    cir.br ^bb11 loc(#loc321)
  ^bb11:  // pred: ^bb10
    %40 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc89)
    %41 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc322)
    %42 = cir.const #cir.int<16> : !u64i loc(#loc323)
    %43 = cir.cast(integral, %42 : !u64i), !u32i loc(#loc323)
    %44 = cir.call @connect(%40, %41, %43) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc94)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %46 = cir.unary(minus, %45) : !s32i, !s32i loc(#loc95)
    %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc324)
    cir.brcond %47 ^bb12, ^bb13 loc(#loc325)
  ^bb12:  // pred: ^bb11
    cir.br ^bb27 loc(#loc97)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc88)
  ^bb14:  // pred: ^bb13
    %48 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    %49 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc99)
    %50 = cir.cast(bitcast, %49 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc99)
    %51 = cir.const #cir.int<3> : !s32i loc(#loc100)
    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc100)
    %53 = cir.const #cir.int<4> : !u64i loc(#loc100)
    %54 = cir.binop(mul, %52, %53) : !u64i loc(#loc100)
    %55 = cir.const #cir.int<2> : !s32i loc(#loc100)
    %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc100)
    %57 = cir.binop(add, %54, %56) : !u64i loc(#loc100)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc101)
    %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc101)
    %60 = cir.binop(sub, %57, %59) : !u64i loc(#loc326)
    %61 = cir.const #cir.int<0> : !s32i loc(#loc102)
    %62 = cir.call @recv(%48, %50, %60, %61) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc103)
    %63 = cir.cast(integral, %62 : !s64i), !s32i loc(#loc103)
    cir.store %63, %0 : !s32i, !cir.ptr<!s32i> loc(#loc327)
    cir.br ^bb15 loc(#loc328)
  ^bb15:  // pred: ^bb14
    %64 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc108)
    %65 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc109)
    %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc329)
    cir.brcond %67 ^bb16, ^bb17 loc(#loc110)
  ^bb16:  // pred: ^bb15
    %68 = cir.const #true loc(#loc110)
    cir.br ^bb22(%68 : !cir.bool) loc(#loc110)
  ^bb17:  // pred: ^bb15
    %69 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    %70 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %71 = cir.cmp(eq, %69, %70) : !s32i, !cir.bool loc(#loc330)
    cir.brcond %71 ^bb18, ^bb19 loc(#loc110)
  ^bb18:  // pred: ^bb17
    %72 = cir.const #true loc(#loc110)
    cir.br ^bb20(%72 : !cir.bool) loc(#loc110)
  ^bb19:  // pred: ^bb17
    %73 = cir.const #false loc(#loc110)
    cir.br ^bb20(%73 : !cir.bool) loc(#loc110)
  ^bb20(%74: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":85:48)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc110)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22(%74 : !cir.bool) loc(#loc110)
  ^bb22(%75: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":85:48)):  // 2 preds: ^bb16, ^bb21
    cir.br ^bb23 loc(#loc110)
  ^bb23:  // pred: ^bb22
    cir.brcond %75 ^bb24, ^bb25 loc(#loc331)
  ^bb24:  // pred: ^bb23
    cir.br ^bb27 loc(#loc114)
  ^bb25:  // pred: ^bb23
    cir.br ^bb26 loc(#loc107)
  ^bb26:  // pred: ^bb25
    %76 = cir.const #cir.int<0> : !s32i loc(#loc115)
    %77 = cir.cast(integral, %76 : !s32i), !s8i loc(#loc115)
    %78 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc116)
    %79 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc117)
    %80 = cir.ptr_stride(%79 : !cir.ptr<!s8i>, %78 : !s32i), !cir.ptr<!s8i> loc(#loc117)
    cir.store %77, %80 : !s8i, !cir.ptr<!s8i> loc(#loc332)
    %81 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc118)
    %82 = cir.call @atoi(%81) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc119)
    cir.store %82, %6 : !s32i, !cir.ptr<!s32i> loc(#loc333)
    cir.br ^bb5 loc(#loc53)
  ^bb27:  // 4 preds: ^bb5, ^bb8, ^bb12, ^bb24
    cir.br ^bb28 loc(#loc53)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc334)
  ^bb29:  // pred: ^bb28
    %83 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    %84 = cir.const #cir.int<1> : !s32i loc(#loc125)
    %85 = cir.unary(minus, %84) : !s32i, !s32i loc(#loc125)
    %86 = cir.cmp(ne, %83, %85) : !s32i, !cir.bool loc(#loc335)
    cir.brcond %86 ^bb30, ^bb31 loc(#loc336)
  ^bb30:  // pred: ^bb29
    %87 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %88 = cir.call @close(%87) : (!s32i) -> !s32i loc(#loc128)
    cir.br ^bb31 loc(#loc123)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc123)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc51)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc46)
  ^bb34:  // 2 preds: ^bb1, ^bb33
    cir.br ^bb35 loc(#loc46)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc337)
  ^bb36:  // pred: ^bb35
    %89 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc131)
    %90 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    %91 = cir.cast(integral, %90 : !s32i), !u64i loc(#loc132)
    %92 = cir.const #cir.int<4> : !u64i loc(#loc338)
    %93 = cir.binop(mul, %91, %92) : !u64i loc(#loc339)
    %94 = cir.call @malloc(%93) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc131)
    %95 = cir.cast(bitcast, %94 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc340)
    cir.store %95, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc341)
    cir.br ^bb37 loc(#loc342)
  ^bb37:  // pred: ^bb36
    %96 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc139)
    %97 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc140)
    %98 = cir.cast(bitcast, %97 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc140)
    %99 = cir.cmp(eq, %96, %98) : !cir.ptr<!s32i>, !cir.bool loc(#loc343)
    cir.brcond %99 ^bb38, ^bb39 loc(#loc344)
  ^bb38:  // pred: ^bb37
    %100 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc142)
    %101 = cir.const #cir.int<1> : !s32i loc(#loc143)
    %102 = cir.unary(minus, %101) : !s32i, !s32i loc(#loc144)
    cir.call @exit(%102) : (!s32i) -> () extra(#fn_attr) loc(#loc142)
    cir.br ^bb39 loc(#loc138)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc138)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc345)
  ^bb41:  // pred: ^bb40
    %103 = cir.const #cir.int<0> : !s32i loc(#loc147)
    %104 = cir.cast(integral, %103 : !s32i), !u64i loc(#loc147)
    cir.store %104, %4 : !u64i, !cir.ptr<!u64i> loc(#loc346)
    cir.br ^bb42 loc(#loc345)
  ^bb42:  // 2 preds: ^bb41, ^bb46
    %105 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc149)
    %106 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    %107 = cir.cast(integral, %106 : !s32i), !u64i loc(#loc150)
    %108 = cir.cmp(lt, %105, %107) : !u64i, !cir.bool loc(#loc347)
    cir.brcond %108 ^bb43, ^bb47 loc(#loc151)
  ^bb43:  // pred: ^bb42
    cir.br ^bb44 loc(#loc348)
  ^bb44:  // pred: ^bb43
    %109 = cir.const #cir.int<0> : !s32i loc(#loc153)
    %110 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc154)
    %111 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc155)
    %112 = cir.ptr_stride(%110 : !cir.ptr<!s32i>, %111 : !u64i), !cir.ptr<!s32i> loc(#loc156)
    cir.store %109, %112 : !s32i, !cir.ptr<!s32i> loc(#loc349)
    cir.br ^bb45 loc(#loc146)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc146)
  ^bb46:  // pred: ^bb45
    %113 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc157)
    %114 = cir.unary(inc, %113) : !u64i, !u64i loc(#loc158)
    cir.store %114, %4 : !u64i, !cir.ptr<!u64i> loc(#loc350)
    cir.br ^bb42 loc(#loc345)
  ^bb47:  // pred: ^bb42
    cir.br ^bb48 loc(#loc146)
  ^bb48:  // pred: ^bb47
    %115 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc159)
    %116 = cir.const #cir.int<0> : !s32i loc(#loc160)
    %117 = cir.ptr_stride(%115 : !cir.ptr<!s32i>, %116 : !s32i), !cir.ptr<!s32i> loc(#loc161)
    %118 = cir.load %117 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    cir.call @printIntLine(%118) : (!s32i) -> () loc(#loc162)
    %119 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc163)
    %120 = cir.cast(bitcast, %119 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc163)
    cir.call @free(%120) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc164)
    cir.br ^bb49 loc(#loc130)
  ^bb49:  // pred: ^bb48
    cir.return loc(#loc27)
  } loc(#loc297)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc352)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc167)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc353)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc169)
    cir.return loc(#loc166)
  } loc(#loc351)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc354)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc173)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc356)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc357)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc358)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc182)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc183)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc359)
    cir.br ^bb1 loc(#loc360)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc285)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc187)
    %7 = cir.const #cir.int<5> : !s32i loc(#loc188)
    %8 = cir.cmp(ne, %6, %7) : !s32i, !cir.bool loc(#loc361)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc362)
  ^bb2:  // pred: ^bb1
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc173)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc173)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc192)
    cir.br ^bb4 loc(#loc190)
  ^bb3:  // pred: ^bb1
    %11 = cir.const #cir.int<20> : !s32i loc(#loc193)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc363)
    cir.br ^bb4 loc(#loc186)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc186)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc364)
  ^bb6:  // pred: ^bb5
    %12 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc197)
    %13 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc198)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc198)
    %15 = cir.const #cir.int<4> : !u64i loc(#loc365)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc366)
    %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc197)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc367)
    cir.store %18, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc368)
    cir.br ^bb7 loc(#loc369)
  ^bb7:  // pred: ^bb6
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc205)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc206)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc206)
    %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc370)
    cir.brcond %22 ^bb8, ^bb9 loc(#loc371)
  ^bb8:  // pred: ^bb7
    %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc208)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc209)
    %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc210)
    cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc208)
    cir.br ^bb9 loc(#loc204)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc204)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc372)
  ^bb11:  // pred: ^bb10
    %26 = cir.const #cir.int<0> : !s32i loc(#loc213)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc213)
    cir.store %27, %0 : !u64i, !cir.ptr<!u64i> loc(#loc373)
    cir.br ^bb12 loc(#loc372)
  ^bb12:  // 2 preds: ^bb11, ^bb16
    %28 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc215)
    %29 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc216)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc216)
    %31 = cir.cmp(lt, %28, %30) : !u64i, !cir.bool loc(#loc374)
    cir.brcond %31 ^bb13, ^bb17 loc(#loc217)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc375)
  ^bb14:  // pred: ^bb13
    %32 = cir.const #cir.int<0> : !s32i loc(#loc219)
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc220)
    %34 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc221)
    %35 = cir.ptr_stride(%33 : !cir.ptr<!s32i>, %34 : !u64i), !cir.ptr<!s32i> loc(#loc222)
    cir.store %32, %35 : !s32i, !cir.ptr<!s32i> loc(#loc376)
    cir.br ^bb15 loc(#loc212)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc212)
  ^bb16:  // pred: ^bb15
    %36 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc223)
    %37 = cir.unary(inc, %36) : !u64i, !u64i loc(#loc224)
    cir.store %37, %0 : !u64i, !cir.ptr<!u64i> loc(#loc377)
    cir.br ^bb12 loc(#loc372)
  ^bb17:  // pred: ^bb12
    cir.br ^bb18 loc(#loc212)
  ^bb18:  // pred: ^bb17
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc225)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc226)
    %40 = cir.ptr_stride(%38 : !cir.ptr<!s32i>, %39 : !s32i), !cir.ptr<!s32i> loc(#loc227)
    %41 = cir.load %40 : !cir.ptr<!s32i>, !s32i loc(#loc225)
    cir.call @printIntLine(%41) : (!s32i) -> () loc(#loc228)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc229)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc229)
    cir.call @free(%43) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc230)
    cir.br ^bb19 loc(#loc196)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc175)
  } loc(#loc355)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc379)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc380)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc381)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc239)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc240)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc382)
    cir.br ^bb1 loc(#loc383)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc285)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc244)
    %7 = cir.const #cir.int<5> : !s32i loc(#loc245)
    %8 = cir.cmp(eq, %6, %7) : !s32i, !cir.bool loc(#loc384)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc385)
  ^bb2:  // pred: ^bb1
    %9 = cir.const #cir.int<20> : !s32i loc(#loc247)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc386)
    cir.br ^bb3 loc(#loc243)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc243)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc387)
  ^bb5:  // pred: ^bb4
    %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc251)
    %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc252)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc252)
    %13 = cir.const #cir.int<4> : !u64i loc(#loc388)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc389)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc251)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc390)
    cir.store %16, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc391)
    cir.br ^bb6 loc(#loc392)
  ^bb6:  // pred: ^bb5
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc259)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc260)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc260)
    %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s32i>, !cir.bool loc(#loc393)
    cir.brcond %20 ^bb7, ^bb8 loc(#loc394)
  ^bb7:  // pred: ^bb6
    %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc262)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc263)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc264)
    cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc262)
    cir.br ^bb8 loc(#loc258)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc258)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc395)
  ^bb10:  // pred: ^bb9
    %24 = cir.const #cir.int<0> : !s32i loc(#loc267)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc267)
    cir.store %25, %0 : !u64i, !cir.ptr<!u64i> loc(#loc396)
    cir.br ^bb11 loc(#loc395)
  ^bb11:  // 2 preds: ^bb10, ^bb15
    %26 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc269)
    %27 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc270)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc270)
    %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc397)
    cir.brcond %29 ^bb12, ^bb16 loc(#loc271)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc398)
  ^bb13:  // pred: ^bb12
    %30 = cir.const #cir.int<0> : !s32i loc(#loc273)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc274)
    %32 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc275)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s32i>, %32 : !u64i), !cir.ptr<!s32i> loc(#loc276)
    cir.store %30, %33 : !s32i, !cir.ptr<!s32i> loc(#loc399)
    cir.br ^bb14 loc(#loc266)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc266)
  ^bb15:  // pred: ^bb14
    %34 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc277)
    %35 = cir.unary(inc, %34) : !u64i, !u64i loc(#loc278)
    cir.store %35, %0 : !u64i, !cir.ptr<!u64i> loc(#loc400)
    cir.br ^bb11 loc(#loc395)
  ^bb16:  // pred: ^bb11
    cir.br ^bb17 loc(#loc266)
  ^bb17:  // pred: ^bb16
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc279)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc280)
    %38 = cir.ptr_stride(%36 : !cir.ptr<!s32i>, %37 : !s32i), !cir.ptr<!s32i> loc(#loc281)
    %39 = cir.load %38 : !cir.ptr<!s32i>, !s32i loc(#loc279)
    cir.call @printIntLine(%39) : (!s32i) -> () loc(#loc282)
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc283)
    %41 = cir.cast(bitcast, %40 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc283)
    cir.call @free(%41) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc284)
    cir.br ^bb18 loc(#loc250)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc232)
  } loc(#loc378)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase.h":118:1)
#loc2 = loc("../../testcasesupport/std_testcase.h":118:12)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":76:53)
#loc8 = loc("/usr/include/netinet/in.h":404:1)
#loc9 = loc("/usr/include/netinet/in.h":405:40)
#loc10 = loc("/usr/include/sys/socket.h":126:1)
#loc11 = loc("/usr/include/sys/socket.h":126:75)
#loc12 = loc("/usr/include/sys/socket.h":145:1)
#loc13 = loc("/usr/include/sys/socket.h":145:68)
#loc14 = loc("/usr/include/stdlib.h":105:1)
#loc15 = loc("/usr/include/stdlib.h":106:33)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("/usr/include/stdlib.h":672:1)
#loc19 = loc("/usr/include/stdlib.h":672:45)
#loc20 = loc("/usr/include/stdlib.h":756:1)
#loc21 = loc("/usr/include/stdlib.h":756:70)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc23 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc24 = loc("/usr/include/stdlib.h":687:1)
#loc25 = loc("/usr/include/stdlib.h":687:32)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":43:1)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":121:1)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":55:13)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":55:17)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":56:13)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":56:32)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":57:13)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":57:36)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":58:13)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":58:45)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":108:9)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":108:16)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":109:9)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":109:14)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":45:5)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":45:9)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":47:13)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":47:12)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":47:5)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":48:5)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":106:5)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":48:8)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":48:20)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":49:5)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":50:9)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":105:9)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":59:13)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":94:21)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":94:20)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":69:40)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":69:49)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":69:62)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":69:33)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":69:17)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":69:73)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":70:17)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":73:17)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":70:21)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":70:38)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":71:17)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":72:21)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":74:24)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":74:25)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":74:34)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":74:37)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":74:51)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":74:17)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":74:52)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":75:38)
#loc75 = loc("/usr/include/netinet/in.h":249:5)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":75:17)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":76:43)
#loc78 = loc("/usr/include/netinet/in.h":251:20)
#loc79 = loc("/usr/include/netinet/in.h":33:15)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":76:17)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":76:63)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":77:42)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":77:36)
#loc84 = loc("/usr/include/netinet/in.h":250:15)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":77:17)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":77:50)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":78:17)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":81:17)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":78:29)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":78:62)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":78:63)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":78:72)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":78:86)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":78:21)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":78:92)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":79:17)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":80:21)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":84:35)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":84:50)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":84:63)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":84:81)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":84:84)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":84:30)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":84:17)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":84:85)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":85:17)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":88:17)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":85:21)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":85:35)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":85:51)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":85:65)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":86:17)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":87:21)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":90:43)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":90:29)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":90:17)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":92:29)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":92:24)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":92:17)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":92:40)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":95:13)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":98:13)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":95:17)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":95:34)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":96:13)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":97:30)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":97:17)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":107:5)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":120:5)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":112:28)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":112:35)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":112:42)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":112:52)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":112:53)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":112:9)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":113:9)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":113:43)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":113:13)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":113:27)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":113:33)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":113:34)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":113:40)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":113:39)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":114:9)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":117:9)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":114:18)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":114:14)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":114:21)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":114:33)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":114:23)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":115:9)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":116:29)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":116:13)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":116:24)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":116:25)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":114:40)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":114:39)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":118:22)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":118:33)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":118:34)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":118:9)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":119:14)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":119:9)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":186:1)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":190:1)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":188:5)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":188:14)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":189:5)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":189:14)
#loc171 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc172 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":136:19)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":128:1)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":157:1)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":144:9)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":144:16)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":145:9)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":145:14)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":130:5)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":130:9)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":132:13)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":132:12)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":132:5)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":133:5)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":142:5)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":133:8)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":133:20)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":134:5)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":137:5)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":139:5)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":136:9)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":141:16)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":141:9)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":143:5)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":156:5)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":148:28)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":148:35)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":148:42)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":148:52)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":148:53)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":148:9)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":149:9)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":149:43)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":149:13)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":149:27)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":149:33)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":149:34)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":149:40)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":149:39)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":150:9)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":153:9)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":150:18)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":150:14)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":150:21)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":150:33)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":150:23)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":151:9)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":152:29)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":152:13)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":152:24)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":152:25)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":150:40)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":150:39)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":154:22)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":154:33)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":154:34)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":154:9)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":155:14)
#loc230 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":155:9)
#loc231 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":160:1)
#loc232 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":184:1)
#loc233 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":171:9)
#loc234 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":171:16)
#loc235 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":172:9)
#loc236 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":172:14)
#loc237 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":162:5)
#loc238 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":162:9)
#loc239 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":164:13)
#loc240 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":164:12)
#loc241 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":164:5)
#loc242 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":165:5)
#loc243 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":169:5)
#loc244 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":165:8)
#loc245 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":165:20)
#loc246 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":166:5)
#loc247 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":168:16)
#loc248 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":168:9)
#loc249 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":170:5)
#loc250 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":183:5)
#loc251 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":175:28)
#loc252 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":175:35)
#loc253 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":175:42)
#loc254 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":175:52)
#loc255 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":175:53)
#loc256 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":175:9)
#loc257 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":176:9)
#loc258 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":176:43)
#loc259 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":176:13)
#loc260 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":176:27)
#loc261 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":176:33)
#loc262 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":176:34)
#loc263 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":176:40)
#loc264 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":176:39)
#loc265 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":177:9)
#loc266 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":180:9)
#loc267 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":177:18)
#loc268 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":177:14)
#loc269 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":177:21)
#loc270 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":177:33)
#loc271 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":177:23)
#loc272 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":178:9)
#loc273 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":179:29)
#loc274 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":179:13)
#loc275 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":179:24)
#loc276 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":179:25)
#loc277 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":177:40)
#loc278 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":177:39)
#loc279 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":181:22)
#loc280 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":181:33)
#loc281 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":181:34)
#loc282 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":181:9)
#loc283 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":182:14)
#loc284 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_14.c":182:9)
#loc285 = loc(fused[#loc1, #loc2])
#loc286 = loc(fused[#loc3, #loc4])
#loc287 = loc(fused[#loc5, #loc6])
#loc288 = loc(fused[#loc8, #loc9])
#loc289 = loc(fused[#loc10, #loc11])
#loc290 = loc(fused[#loc12, #loc13])
#loc291 = loc(fused[#loc14, #loc15])
#loc292 = loc(fused[#loc16, #loc17])
#loc293 = loc(fused[#loc18, #loc19])
#loc294 = loc(fused[#loc20, #loc21])
#loc295 = loc(fused[#loc22, #loc23])
#loc296 = loc(fused[#loc24, #loc25])
#loc297 = loc(fused[#loc26, #loc27])
#loc298 = loc(fused[#loc28, #loc29])
#loc299 = loc(fused[#loc30, #loc31])
#loc300 = loc(fused[#loc32, #loc33])
#loc301 = loc(fused[#loc34, #loc35])
#loc302 = loc(fused[#loc36, #loc37])
#loc303 = loc(fused[#loc38, #loc39])
#loc304 = loc(fused[#loc40, #loc41])
#loc305 = loc(fused[#loc44, #loc42])
#loc306 = loc(fused[#loc45, #loc46])
#loc307 = loc(fused[#loc47, #loc48])
#loc308 = loc(fused[#loc49, #loc46])
#loc309 = loc(fused[#loc50, #loc51])
#loc310 = loc(fused[#loc52, #loc53])
#loc311 = loc(fused[#loc59, #loc60])
#loc312 = loc(fused[#loc61, #loc62])
#loc313 = loc(fused[#loc63, #loc64])
#loc314 = loc(fused[#loc65, #loc62])
#loc315 = loc(fused[#loc67, #loc68])
#loc316 = loc(fused[#loc70, #loc71])
#loc317 = loc(fused[#loc72, #loc73])
#loc318 = loc(fused[#loc76, #loc74])
#loc319 = loc(fused[#loc80, #loc81])
#loc320 = loc(fused[#loc85, #loc86])
#loc321 = loc(fused[#loc87, #loc88])
#loc322 = loc(fused[#loc90, #loc91])
#loc323 = loc(fused[#loc92, #loc93])
#loc324 = loc(fused[#loc94, #loc95])
#loc325 = loc(fused[#loc96, #loc88])
#loc326 = loc(fused[#loc100, #loc101])
#loc327 = loc(fused[#loc104, #loc105])
#loc328 = loc(fused[#loc106, #loc107])
#loc329 = loc(fused[#loc108, #loc109])
#loc330 = loc(fused[#loc111, #loc112])
#loc331 = loc(fused[#loc113, #loc107])
#loc332 = loc(fused[#loc117, #loc115])
#loc333 = loc(fused[#loc120, #loc121])
#loc334 = loc(fused[#loc122, #loc123])
#loc335 = loc(fused[#loc124, #loc125])
#loc336 = loc(fused[#loc126, #loc123])
#loc337 = loc(fused[#loc129, #loc130])
#loc338 = loc(fused[#loc133, #loc134])
#loc339 = loc(fused[#loc132, #loc134])
#loc340 = loc(fused[#loc131, #loc135])
#loc341 = loc(fused[#loc136, #loc135])
#loc342 = loc(fused[#loc137, #loc138])
#loc343 = loc(fused[#loc139, #loc140])
#loc344 = loc(fused[#loc141, #loc138])
#loc345 = loc(fused[#loc145, #loc146])
#loc346 = loc(fused[#loc148, #loc147])
#loc347 = loc(fused[#loc149, #loc150])
#loc348 = loc(fused[#loc152, #loc146])
#loc349 = loc(fused[#loc154, #loc153])
#loc350 = loc(fused[#loc158, #loc157])
#loc351 = loc(fused[#loc165, #loc166])
#loc352 = loc(fused[#loc167, #loc168])
#loc353 = loc(fused[#loc169, #loc170])
#loc354 = loc(fused[#loc171, #loc172])
#loc355 = loc(fused[#loc174, #loc175])
#loc356 = loc(fused[#loc176, #loc177])
#loc357 = loc(fused[#loc178, #loc179])
#loc358 = loc(fused[#loc180, #loc181])
#loc359 = loc(fused[#loc184, #loc182])
#loc360 = loc(fused[#loc185, #loc186])
#loc361 = loc(fused[#loc187, #loc188])
#loc362 = loc(fused[#loc189, #loc190, #loc191, #loc186])
#loc363 = loc(fused[#loc194, #loc193])
#loc364 = loc(fused[#loc195, #loc196])
#loc365 = loc(fused[#loc199, #loc200])
#loc366 = loc(fused[#loc198, #loc200])
#loc367 = loc(fused[#loc197, #loc201])
#loc368 = loc(fused[#loc202, #loc201])
#loc369 = loc(fused[#loc203, #loc204])
#loc370 = loc(fused[#loc205, #loc206])
#loc371 = loc(fused[#loc207, #loc204])
#loc372 = loc(fused[#loc211, #loc212])
#loc373 = loc(fused[#loc214, #loc213])
#loc374 = loc(fused[#loc215, #loc216])
#loc375 = loc(fused[#loc218, #loc212])
#loc376 = loc(fused[#loc220, #loc219])
#loc377 = loc(fused[#loc224, #loc223])
#loc378 = loc(fused[#loc231, #loc232])
#loc379 = loc(fused[#loc233, #loc234])
#loc380 = loc(fused[#loc235, #loc236])
#loc381 = loc(fused[#loc237, #loc238])
#loc382 = loc(fused[#loc241, #loc239])
#loc383 = loc(fused[#loc242, #loc243])
#loc384 = loc(fused[#loc244, #loc245])
#loc385 = loc(fused[#loc246, #loc243])
#loc386 = loc(fused[#loc248, #loc247])
#loc387 = loc(fused[#loc249, #loc250])
#loc388 = loc(fused[#loc253, #loc254])
#loc389 = loc(fused[#loc252, #loc254])
#loc390 = loc(fused[#loc251, #loc255])
#loc391 = loc(fused[#loc256, #loc255])
#loc392 = loc(fused[#loc257, #loc258])
#loc393 = loc(fused[#loc259, #loc260])
#loc394 = loc(fused[#loc261, #loc258])
#loc395 = loc(fused[#loc265, #loc266])
#loc396 = loc(fused[#loc268, #loc267])
#loc397 = loc(fused[#loc269, #loc270])
#loc398 = loc(fused[#loc272, #loc266])
#loc399 = loc(fused[#loc274, #loc273])
#loc400 = loc(fused[#loc278, #loc277])
