!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty_CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34_unionType = !cir.struct<union "CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34_unionType" {!cir.ptr<!s8i>, !cir.ptr<!s8i>}>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc115)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc116)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc118)
    %1 = cir.alloca !ty_CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34_unionType, !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc119)
    %2 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc120)
    %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc121)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc15)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc17)
    %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc17)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %9 = cir.ptr_stride(%7 : !cir.ptr<!s8i>, %8 : !s32i), !cir.ptr<!s8i> loc(#loc20)
    cir.store %6, %9 : !s8i, !cir.ptr<!s8i> loc(#loc123)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
    %11 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc22)
    cir.store %10, %11 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc124)
    cir.scope {
      %12 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc126)
      %13 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc28)
      %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
      cir.store %14, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc126)
      cir.scope {
        %15 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc128)
        %16 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc129)
        %17 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc130)
        %18 = cir.const #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc128)
        cir.store %18, %15 : !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>> loc(#loc128)
        %19 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc36)
        %20 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc37)
        %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc36)
        cir.store %21, %17 : !u64i, !cir.ptr<!u64i> loc(#loc131)
        cir.scope {
          %23 = cir.const #cir.int<0> : !s32i loc(#loc42)
          %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc42)
          cir.store %24, %16 : !u64i, !cir.ptr<!u64i> loc(#loc133)
          cir.for : cond {
            %25 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc44)
            %26 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc45)
            %27 = cir.const #cir.int<1> : !s32i loc(#loc46)
            %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc46)
            %29 = cir.binop(add, %26, %28) : !u64i loc(#loc134)
            %30 = cir.cmp(lt, %25, %29) : !u64i, !s32i loc(#loc135)
            %31 = cir.cast(int_to_bool, %30 : !s32i), !cir.bool loc(#loc47)
            cir.condition(%31) loc(#loc47)
          } body {
            cir.scope {
              %25 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc49)
              %26 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc50)
              %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !u64i), !cir.ptr<!s8i> loc(#loc50)
              %28 = cir.load %27 : !cir.ptr<!s8i>, !s8i loc(#loc50)
              %29 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
              %30 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc52)
              %31 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %30 : !u64i), !cir.ptr<!s8i> loc(#loc53)
              cir.store %28, %31 : !s8i, !cir.ptr<!s8i> loc(#loc137)
            } loc(#loc136)
            cir.yield loc(#loc41)
          } step {
            %25 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc55)
            %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc56)
            cir.store %26, %16 : !u64i, !cir.ptr<!u64i> loc(#loc138)
            cir.yield loc(#loc132)
          } loc(#loc132)
        } loc(#loc132)
        %22 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
        cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc58)
      } loc(#loc127)
    } loc(#loc125)
    cir.return loc(#loc6)
  } loc(#loc117)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc140)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc61)
    cir.return loc(#loc60)
  } loc(#loc139)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc142)
    %1 = cir.alloca !ty_CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34_unionType, !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc143)
    %2 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc144)
    %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc145)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc73)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc75)
    %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc75)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc77)
    %9 = cir.ptr_stride(%7 : !cir.ptr<!s8i>, %8 : !s32i), !cir.ptr<!s8i> loc(#loc78)
    cir.store %6, %9 : !s8i, !cir.ptr<!s8i> loc(#loc147)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
    %11 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc22)
    cir.store %10, %11 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc148)
    cir.scope {
      %12 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc150)
      %13 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc28)
      %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
      cir.store %14, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
      cir.scope {
        %15 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc152)
        %16 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc153)
        %17 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc154)
        %18 = cir.const #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc152)
        cir.store %18, %15 : !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>> loc(#loc152)
        %19 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc92)
        %20 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc93)
        %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc92)
        cir.store %21, %17 : !u64i, !cir.ptr<!u64i> loc(#loc155)
        cir.scope {
          %23 = cir.const #cir.int<0> : !s32i loc(#loc98)
          %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc98)
          cir.store %24, %16 : !u64i, !cir.ptr<!u64i> loc(#loc157)
          cir.for : cond {
            %25 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc100)
            %26 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc101)
            %27 = cir.const #cir.int<1> : !s32i loc(#loc102)
            %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc102)
            %29 = cir.binop(add, %26, %28) : !u64i loc(#loc158)
            %30 = cir.cmp(lt, %25, %29) : !u64i, !s32i loc(#loc159)
            %31 = cir.cast(int_to_bool, %30 : !s32i), !cir.bool loc(#loc103)
            cir.condition(%31) loc(#loc103)
          } body {
            cir.scope {
              %25 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc105)
              %26 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc106)
              %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !u64i), !cir.ptr<!s8i> loc(#loc106)
              %28 = cir.load %27 : !cir.ptr<!s8i>, !s8i loc(#loc106)
              %29 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
              %30 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc108)
              %31 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %30 : !u64i), !cir.ptr<!s8i> loc(#loc109)
              cir.store %28, %31 : !s8i, !cir.ptr<!s8i> loc(#loc161)
            } loc(#loc160)
            cir.yield loc(#loc97)
          } step {
            %25 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc111)
            %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc112)
            cir.store %26, %16 : !u64i, !cir.ptr<!u64i> loc(#loc162)
            cir.yield loc(#loc156)
          } loc(#loc156)
        } loc(#loc156)
        %22 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
        cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc114)
      } loc(#loc151)
    } loc(#loc149)
    cir.return loc(#loc64)
  } loc(#loc141)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":34:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":60:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":36:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":36:12)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":37:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":37:79)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":38:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":38:26)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":39:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":39:29)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":42:12)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":42:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":43:15)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":43:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":43:10)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":43:11)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":44:26)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":28:12)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":44:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":45:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":59:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":46:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":46:31)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":29:12)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":47:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":58:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":48:13)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":48:33)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":49:13)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":49:20)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":49:23)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":50:25)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":50:32)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":50:13)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":50:38)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":53:13)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":56:13)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":53:22)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":53:18)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":53:25)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":53:29)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":53:41)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":53:27)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":54:13)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":55:34)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":55:27)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":55:17)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":55:22)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":55:23)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":55:35)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":53:45)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":53:44)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":57:23)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":57:13)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":95:1)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":98:1)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":97:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":97:13)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":67:1)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":93:1)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":69:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":69:12)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":70:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":70:79)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":71:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":71:26)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":72:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":72:29)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":75:12)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":75:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":76:15)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":76:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":76:10)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":76:11)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":77:26)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":77:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":78:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":92:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":79:9)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":79:31)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":80:9)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":91:9)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":81:13)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":81:33)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":82:13)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":82:20)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":82:23)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":83:25)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":83:32)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":83:13)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":83:38)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":86:13)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":89:13)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":86:22)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":86:18)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":86:25)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":86:29)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":86:41)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":86:27)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":87:13)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":88:34)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":88:27)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":88:17)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":88:22)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":88:23)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":88:35)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":86:45)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":86:44)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":90:23)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_34.c":90:13)
#loc115 = loc(fused[#loc1, #loc2])
#loc116 = loc(fused[#loc3, #loc4])
#loc117 = loc(fused[#loc5, #loc6])
#loc118 = loc(fused[#loc7, #loc8])
#loc119 = loc(fused[#loc9, #loc10])
#loc120 = loc(fused[#loc11, #loc12])
#loc121 = loc(fused[#loc13, #loc14])
#loc122 = loc(fused[#loc16, #loc15])
#loc123 = loc(fused[#loc18, #loc17])
#loc124 = loc(fused[#loc23, #loc21])
#loc125 = loc(fused[#loc24, #loc25])
#loc126 = loc(fused[#loc26, #loc27])
#loc127 = loc(fused[#loc29, #loc30])
#loc128 = loc(fused[#loc31, #loc32])
#loc129 = loc(fused[#loc33, #loc34])
#loc130 = loc(fused[#loc33, #loc35])
#loc131 = loc(fused[#loc38, #loc39])
#loc132 = loc(fused[#loc40, #loc41])
#loc133 = loc(fused[#loc43, #loc42])
#loc134 = loc(fused[#loc45, #loc46])
#loc135 = loc(fused[#loc44, #loc46])
#loc136 = loc(fused[#loc48, #loc41])
#loc137 = loc(fused[#loc51, #loc54])
#loc138 = loc(fused[#loc56, #loc55])
#loc139 = loc(fused[#loc59, #loc60])
#loc140 = loc(fused[#loc61, #loc62])
#loc141 = loc(fused[#loc63, #loc64])
#loc142 = loc(fused[#loc65, #loc66])
#loc143 = loc(fused[#loc67, #loc68])
#loc144 = loc(fused[#loc69, #loc70])
#loc145 = loc(fused[#loc71, #loc72])
#loc146 = loc(fused[#loc74, #loc73])
#loc147 = loc(fused[#loc76, #loc75])
#loc148 = loc(fused[#loc80, #loc79])
#loc149 = loc(fused[#loc81, #loc82])
#loc150 = loc(fused[#loc83, #loc84])
#loc151 = loc(fused[#loc85, #loc86])
#loc152 = loc(fused[#loc87, #loc88])
#loc153 = loc(fused[#loc89, #loc90])
#loc154 = loc(fused[#loc89, #loc91])
#loc155 = loc(fused[#loc94, #loc95])
#loc156 = loc(fused[#loc96, #loc97])
#loc157 = loc(fused[#loc99, #loc98])
#loc158 = loc(fused[#loc101, #loc102])
#loc159 = loc(fused[#loc100, #loc102])
#loc160 = loc(fused[#loc104, #loc97])
#loc161 = loc(fused[#loc107, #loc110])
#loc162 = loc(fused[#loc112, #loc111])
