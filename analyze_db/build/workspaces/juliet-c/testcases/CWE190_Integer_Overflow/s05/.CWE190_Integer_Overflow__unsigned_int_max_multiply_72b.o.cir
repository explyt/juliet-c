!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1126:7)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1126:18)
#loc5 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1126:28)
#loc19 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":28:14)
#loc20 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":28:35)
#loc38 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":45:18)
#loc39 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":45:39)
#loc60 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":57:18)
#loc61 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":57:39)
#loc88 = loc(fused[#loc4, #loc5])
#loc92 = loc(fused[#loc19, #loc20])
#loc100 = loc(fused[#loc38, #loc39])
#loc109 = loc(fused[#loc60, #loc61])
!ty_std3A3A_Vector_base3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E3A3A_Vector_impl_data = !cir.record<struct "std::_Vector_base<unsigned int, std::allocator<unsigned int>>::_Vector_impl_data" {!cir.ptr<!u32i>, !cir.ptr<!u32i>, !cir.ptr<!u32i>} #cir.record.decl.ast>
!ty_std3A3A_Vector_base3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E3A3A_Vector_impl = !cir.record<struct "std::_Vector_base<unsigned int, std::allocator<unsigned int>>::_Vector_impl" {!ty_std3A3A_Vector_base3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E3A3A_Vector_impl_data} #cir.record.decl.ast>
!ty_std3A3A_Vector_base3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E = !cir.record<struct "std::_Vector_base<unsigned int, std::allocator<unsigned int>>" {!ty_std3A3A_Vector_base3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E3A3A_Vector_impl} #cir.record.decl.ast>
!ty_std3A3Avector3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E = !cir.record<class "std::vector<unsigned int, std::allocator<unsigned int>>" {!ty_std3A3A_Vector_base3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E}>
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func linkonce_odr @_ZNSt6vectorIjSaIjEEixEm(%arg0: !cir.ptr<!ty_std3A3Avector3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E> loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1126:7), %arg1: !u64i loc(fused[#loc4, #loc5])) -> !cir.ptr<!u32i> extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_std3A3Avector3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E>, !cir.ptr<!cir.ptr<!ty_std3A3Avector3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["__n", init] {alignment = 8 : i64} loc(#loc88)
    %2 = cir.alloca !cir.ptr<!u32i>, !cir.ptr<!cir.ptr<!u32i>>, ["__retval"] {alignment = 8 : i64} loc(#loc2)
    cir.store %arg0, %0 : !cir.ptr<!ty_std3A3Avector3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E>, !cir.ptr<!cir.ptr<!ty_std3A3Avector3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E>> loc(#loc6)
    cir.store %arg1, %1 : !u64i, !cir.ptr<!u64i> loc(#loc6)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_std3A3Avector3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E>>, !cir.ptr<!ty_std3A3Avector3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E> loc(#loc3)
    %4 = cir.base_class_addr(%3 : !cir.ptr<!ty_std3A3Avector3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E> nonnull) [0] -> !cir.ptr<!ty_std3A3A_Vector_base3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E> loc(#loc7)
    %5 = cir.get_member %4[0] {name = "_M_impl"} : !cir.ptr<!ty_std3A3A_Vector_base3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E> -> !cir.ptr<!ty_std3A3A_Vector_base3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E3A3A_Vector_impl> loc(#loc8)
    %6 = cir.base_class_addr(%5 : !cir.ptr<!ty_std3A3A_Vector_base3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E3A3A_Vector_impl> nonnull) [0] -> !cir.ptr<!ty_std3A3A_Vector_base3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E3A3A_Vector_impl_data> loc(#loc7)
    %7 = cir.get_member %6[0] {name = "_M_start"} : !cir.ptr<!ty_std3A3A_Vector_base3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E3A3A_Vector_impl_data> -> !cir.ptr<!cir.ptr<!u32i>> loc(#loc9)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!u32i>>, !cir.ptr<!u32i> loc(#loc10)
    %9 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc11)
    %10 = cir.ptr_stride(%8 : !cir.ptr<!u32i>, %9 : !u64i), !cir.ptr<!u32i> loc(#loc12)
    cir.store %10, %2 : !cir.ptr<!u32i>, !cir.ptr<!cir.ptr<!u32i>> loc(#loc89)
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!u32i>>, !cir.ptr<!u32i> loc(#loc89)
    cir.return %11 : !cir.ptr<!u32i> loc(#loc89)
  } loc(#loc87)
  cir.func private @printUnsignedLine(!u32i) loc(#loc90)
  cir.func @_ZN53CWE190_Integer_Overflow__unsigned_int_max_multiply_727badSinkESt6vectorIjSaIjEE(%arg0: !ty_std3A3Avector3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E loc(fused[#loc19, #loc20])) extra(#fn_attr1) {
    %0 = cir.alloca !ty_std3A3Avector3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E, !cir.ptr<!ty_std3A3Avector3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E>, ["dataVector", init] {alignment = 8 : i64} loc(#loc92)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data", init] {alignment = 4 : i64} loc(#loc93)
    cir.store %arg0, %0 : !ty_std3A3Avector3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E, !cir.ptr<!ty_std3A3Avector3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E> loc(#loc23)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc24)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc24)
    %4 = cir.call @_ZNSt6vectorIjSaIjEEixEm(%0, %3) : (!cir.ptr<!ty_std3A3Avector3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E>, !u64i) -> !cir.ptr<!u32i> extra(#fn_attr2) loc(#loc25)
    %5 = cir.load %4 : !cir.ptr<!u32i>, !u32i loc(#loc25)
    cir.store %5, %1 : !u32i, !cir.ptr<!u32i> loc(#loc93)
    cir.scope {
      %6 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc28)
      %7 = cir.const #cir.int<0> : !s32i loc(#loc29)
      %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc29)
      %9 = cir.cmp(gt, %6, %8) : !u32i, !cir.bool loc(#loc95)
      cir.if %9 {
        %10 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc97)
        %11 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc33)
        %12 = cir.const #cir.int<2> : !s32i loc(#loc32)
        %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc32)
        %14 = cir.binop(mul, %11, %13) : !u32i loc(#loc98)
        cir.store %14, %10 : !u32i, !cir.ptr<!u32i> loc(#loc97)
        %15 = cir.load %10 : !cir.ptr<!u32i>, !u32i loc(#loc34)
        cir.call @printUnsignedLine(%15) : (!u32i) -> () loc(#loc35)
      } loc(#loc96)
    } loc(#loc94)
    cir.return loc(#loc18)
  } loc(#loc91)
  cir.func @_ZN53CWE190_Integer_Overflow__unsigned_int_max_multiply_7211goodG2BSinkESt6vectorIjSaIjEE(%arg0: !ty_std3A3Avector3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E loc(fused[#loc38, #loc39])) extra(#fn_attr1) {
    %0 = cir.alloca !ty_std3A3Avector3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E, !cir.ptr<!ty_std3A3Avector3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E>, ["dataVector", init] {alignment = 8 : i64} loc(#loc100)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data", init] {alignment = 4 : i64} loc(#loc101)
    cir.store %arg0, %0 : !ty_std3A3Avector3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E, !cir.ptr<!ty_std3A3Avector3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E> loc(#loc42)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc43)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc43)
    %4 = cir.call @_ZNSt6vectorIjSaIjEEixEm(%0, %3) : (!cir.ptr<!ty_std3A3Avector3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E>, !u64i) -> !cir.ptr<!u32i> extra(#fn_attr2) loc(#loc44)
    %5 = cir.load %4 : !cir.ptr<!u32i>, !u32i loc(#loc44)
    cir.store %5, %1 : !u32i, !cir.ptr<!u32i> loc(#loc101)
    cir.scope {
      %6 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc47)
      %7 = cir.const #cir.int<0> : !s32i loc(#loc48)
      %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc48)
      %9 = cir.cmp(gt, %6, %8) : !u32i, !cir.bool loc(#loc103)
      cir.if %9 {
        %10 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc105)
        %11 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc52)
        %12 = cir.const #cir.int<2> : !s32i loc(#loc51)
        %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc51)
        %14 = cir.binop(mul, %11, %13) : !u32i loc(#loc106)
        cir.store %14, %10 : !u32i, !cir.ptr<!u32i> loc(#loc105)
        %15 = cir.load %10 : !cir.ptr<!u32i>, !u32i loc(#loc53)
        cir.call @printUnsignedLine(%15) : (!u32i) -> () loc(#loc54)
      } loc(#loc104)
    } loc(#loc102)
    cir.return loc(#loc37)
  } loc(#loc99)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc107)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc57)
  cir.func @_ZN53CWE190_Integer_Overflow__unsigned_int_max_multiply_7211goodB2GSinkESt6vectorIjSaIjEE(%arg0: !ty_std3A3Avector3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E loc(fused[#loc60, #loc61])) extra(#fn_attr1) {
    %0 = cir.alloca !ty_std3A3Avector3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E, !cir.ptr<!ty_std3A3Avector3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E>, ["dataVector", init] {alignment = 8 : i64} loc(#loc109)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data", init] {alignment = 4 : i64} loc(#loc110)
    cir.store %arg0, %0 : !ty_std3A3Avector3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E, !cir.ptr<!ty_std3A3Avector3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E> loc(#loc64)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc65)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc65)
    %4 = cir.call @_ZNSt6vectorIjSaIjEEixEm(%0, %3) : (!cir.ptr<!ty_std3A3Avector3Cunsigned_int2C_std3A3Aallocator3Cunsigned_int3E3E>, !u64i) -> !cir.ptr<!u32i> extra(#fn_attr2) loc(#loc66)
    %5 = cir.load %4 : !cir.ptr<!u32i>, !u32i loc(#loc66)
    cir.store %5, %1 : !u32i, !cir.ptr<!u32i> loc(#loc110)
    cir.scope {
      %6 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc69)
      %7 = cir.const #cir.int<0> : !s32i loc(#loc70)
      %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc70)
      %9 = cir.cmp(gt, %6, %8) : !u32i, !cir.bool loc(#loc112)
      cir.if %9 {
        cir.scope {
          %10 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc74)
          %11 = cir.const #cir.int<2147483647> : !s32i loc(#loc75)
          %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc75)
          %13 = cir.const #cir.int<2> : !u32i loc(#loc75)
          %14 = cir.binop(mul, %12, %13) : !u32i loc(#loc75)
          %15 = cir.const #cir.int<1> : !u32i loc(#loc75)
          %16 = cir.binop(add, %14, %15) : !u32i loc(#loc75)
          %17 = cir.const #cir.int<2> : !s32i loc(#loc76)
          %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc76)
          %19 = cir.binop(div, %16, %18) : !u32i loc(#loc115)
          %20 = cir.cmp(lt, %10, %19) : !u32i, !cir.bool loc(#loc116)
          cir.if %20 {
            %21 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc118)
            %22 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc83)
            %23 = cir.const #cir.int<2> : !s32i loc(#loc82)
            %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc82)
            %25 = cir.binop(mul, %22, %24) : !u32i loc(#loc119)
            cir.store %25, %21 : !u32i, !cir.ptr<!u32i> loc(#loc118)
            %26 = cir.load %21 : !cir.ptr<!u32i>, !u32i loc(#loc84)
            cir.call @printUnsignedLine(%26) : (!u32i) -> () loc(#loc85)
          } else {
            %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc57)
            %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc57)
            cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc86)
          } loc(#loc117)
        } loc(#loc114)
      } loc(#loc113)
    } loc(#loc111)
    cir.return loc(#loc59)
  } loc(#loc108)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1125:7)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1130:7)
#loc6 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1127:7)
#loc7 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:11)
#loc8 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":374:20)
#loc9 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":94:10)
#loc10 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:25)
#loc11 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:36)
#loc12 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:34)
#loc13 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:2)
#loc14 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:39)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":34:1)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":34:47)
#loc17 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":28:1)
#loc18 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":38:1)
#loc21 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":31:5)
#loc22 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":31:37)
#loc23 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":29:1)
#loc24 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":31:36)
#loc25 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":31:25)
#loc26 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":32:5)
#loc27 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":37:5)
#loc28 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":32:8)
#loc29 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":32:15)
#loc30 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":33:5)
#loc31 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":35:9)
#loc32 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":35:38)
#loc33 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":35:31)
#loc34 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":36:27)
#loc35 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":36:9)
#loc36 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":45:1)
#loc37 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":54:1)
#loc40 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":47:5)
#loc41 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":47:37)
#loc42 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":46:1)
#loc43 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":47:36)
#loc44 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":47:25)
#loc45 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":48:5)
#loc46 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":53:5)
#loc47 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":48:8)
#loc48 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":48:15)
#loc49 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":49:5)
#loc50 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":51:9)
#loc51 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":51:38)
#loc52 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":51:31)
#loc53 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":52:27)
#loc54 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":52:9)
#loc55 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc56 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc57 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":70:23)
#loc58 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":57:1)
#loc59 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":73:1)
#loc62 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":59:5)
#loc63 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":59:37)
#loc64 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":58:1)
#loc65 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":59:36)
#loc66 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":59:25)
#loc67 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":60:5)
#loc68 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":72:5)
#loc69 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":60:8)
#loc70 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":60:15)
#loc71 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":61:5)
#loc72 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":63:9)
#loc73 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":71:9)
#loc74 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":63:13)
#loc75 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":63:21)
#loc76 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":63:30)
#loc77 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":63:31)
#loc78 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":64:9)
#loc79 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":67:9)
#loc80 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":69:9)
#loc81 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":65:13)
#loc82 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":65:42)
#loc83 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":65:35)
#loc84 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":66:31)
#loc85 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":66:13)
#loc86 = loc("CWE190_Integer_Overflow__unsigned_int_max_multiply_72b.cpp":70:13)
#loc87 = loc(fused[#loc1, #loc2])
#loc89 = loc(fused[#loc13, #loc14])
#loc90 = loc(fused[#loc15, #loc16])
#loc91 = loc(fused[#loc17, #loc18])
#loc93 = loc(fused[#loc21, #loc22])
#loc94 = loc(fused[#loc26, #loc27])
#loc95 = loc(fused[#loc28, #loc29])
#loc96 = loc(fused[#loc30, #loc27])
#loc97 = loc(fused[#loc31, #loc32])
#loc98 = loc(fused[#loc33, #loc32])
#loc99 = loc(fused[#loc36, #loc37])
#loc101 = loc(fused[#loc40, #loc41])
#loc102 = loc(fused[#loc45, #loc46])
#loc103 = loc(fused[#loc47, #loc48])
#loc104 = loc(fused[#loc49, #loc46])
#loc105 = loc(fused[#loc50, #loc51])
#loc106 = loc(fused[#loc52, #loc51])
#loc107 = loc(fused[#loc55, #loc56])
#loc108 = loc(fused[#loc58, #loc59])
#loc110 = loc(fused[#loc62, #loc63])
#loc111 = loc(fused[#loc67, #loc68])
#loc112 = loc(fused[#loc69, #loc70])
#loc113 = loc(fused[#loc71, #loc68])
#loc114 = loc(fused[#loc72, #loc73])
#loc115 = loc(fused[#loc75, #loc76])
#loc116 = loc(fused[#loc74, #loc77])
#loc117 = loc(fused[#loc78, #loc79, #loc80, #loc73])
#loc118 = loc(fused[#loc81, #loc82])
#loc119 = loc(fused[#loc83, #loc82])
