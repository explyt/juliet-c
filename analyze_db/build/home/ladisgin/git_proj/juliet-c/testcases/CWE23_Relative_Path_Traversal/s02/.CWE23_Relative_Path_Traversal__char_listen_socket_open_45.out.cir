!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc266 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":213:10)
#loc267 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":213:14)
#loc268 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":213:20)
#loc269 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":213:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc388 = loc(fused[#loc266, #loc267])
#loc389 = loc(fused[#loc268, #loc269])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_45L7goodG2BEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc282)
  cir.global "private" constant cir_private @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_453badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc283)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc284)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc285)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc286)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc287)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc288)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc289)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc290)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc291)
  cir.func private @close(!s32i) -> !s32i loc(#loc292)
  cir.global "private" internal dsolocal @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_45L7badDataE = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc293)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc294)
  cir.func internal private @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_45L7badSinkEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc296)
    %1 = cir.get_global @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_45L7badDataE : !cir.ptr<!cir.ptr<!s8i>> loc(#loc293)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc296)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc298)
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
      %5 = cir.const #cir.int<2> : !s32i loc(#loc36)
      %6 = cir.const #cir.int<64> : !s32i loc(#loc37)
      %7 = cir.binop(or, %5, %6) : !s32i loc(#loc299)
      %8 = cir.const #cir.int<256> : !s32i loc(#loc38)
      %9 = cir.const #cir.int<128> : !s32i loc(#loc39)
      %10 = cir.binop(or, %8, %9) : !s32i loc(#loc300)
      %11 = cir.call @open(%4, %7, %10) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc40)
      cir.store %11, %3 : !s32i, !cir.ptr<!s32i> loc(#loc301)
      cir.scope {
        %12 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc45)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc46)
        %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc47)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc303)
        cir.if %15 {
          %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc49)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc50)
        } loc(#loc304)
      } loc(#loc302)
    } loc(#loc297)
    cir.return loc(#loc28)
  } loc(#loc295)
  cir.func @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_453badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc306)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc283)
    %2 = cir.get_global @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_453badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc283)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc283)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc55)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc307)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc309)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc310)
      %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc311)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc312)
      %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc313)
      %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc314)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc66)
      %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc66)
      cir.store %13, %9 : !s32i, !cir.ptr<!s32i> loc(#loc312)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc68)
      %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc68)
      cir.store %15, %10 : !s32i, !cir.ptr<!s32i> loc(#loc313)
      %16 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc71)
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
      %18 = cir.call @strlen(%17) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc71)
      cir.store %18, %11 : !u64i, !cir.ptr<!u64i> loc(#loc314)
      cir.scope {
        cir.do {
          %19 = cir.const #cir.int<2> : !s32i loc(#loc75)
          %20 = cir.const #cir.int<1> : !u32i loc(#loc76)
          %21 = cir.cast(integral, %20 : !u32i), !s32i loc(#loc76)
          %22 = cir.const #cir.int<6> : !u32i loc(#loc77)
          %23 = cir.cast(integral, %22 : !u32i), !s32i loc(#loc77)
          %24 = cir.call @socket(%19, %21, %23) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc78)
          cir.store %24, %9 : !s32i, !cir.ptr<!s32i> loc(#loc316)
          cir.scope {
            %77 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc83)
            %78 = cir.const #cir.int<1> : !s32i loc(#loc84)
            %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc84)
            %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc318)
            cir.if %80 {
              cir.break loc(#loc86)
            } loc(#loc319)
          } loc(#loc317)
          %25 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc320)
          %26 = cir.const #cir.int<0> : !s32i loc(#loc89)
          %27 = cir.const #cir.int<16> : !u64i loc(#loc321)
          cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc322)
          %28 = cir.const #cir.int<2> : !s32i loc(#loc94)
          %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc94)
          %30 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc95)
          cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc323)
          %31 = cir.const #cir.int<0> : !s32i loc(#loc97)
          %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc97)
          %33 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc98)
          %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc99)
          cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc324)
          %35 = cir.const #cir.int<27015> : !s32i loc(#loc101)
          %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc101)
          %37 = cir.call @htons(%36) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc102)
          %38 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc103)
          cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc325)
          cir.scope {
            %77 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc108)
            %78 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc327)
            %79 = cir.const #cir.int<16> : !u64i loc(#loc328)
            %80 = cir.cast(integral, %79 : !u64i), !u32i loc(#loc328)
            %81 = cir.call @bind(%77, %78, %80) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc113)
            %82 = cir.const #cir.int<1> : !s32i loc(#loc114)
            %83 = cir.unary(minus, %82) : !s32i, !s32i loc(#loc114)
            %84 = cir.cmp(eq, %81, %83) : !s32i, !cir.bool loc(#loc329)
            cir.if %84 {
              cir.break loc(#loc116)
            } loc(#loc330)
          } loc(#loc326)
          cir.scope {
            %77 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc119)
            %78 = cir.const #cir.int<5> : !s32i loc(#loc120)
            %79 = cir.call @listen(%77, %78) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc121)
            %80 = cir.const #cir.int<1> : !s32i loc(#loc122)
            %81 = cir.unary(minus, %80) : !s32i, !s32i loc(#loc122)
            %82 = cir.cmp(eq, %79, %81) : !s32i, !cir.bool loc(#loc332)
            cir.if %82 {
              cir.break loc(#loc124)
            } loc(#loc333)
          } loc(#loc331)
          %39 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc125)
          %40 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc126)
          %41 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc127)
          %42 = cir.call @accept(%39, %40, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc128)
          cir.store %42, %10 : !s32i, !cir.ptr<!s32i> loc(#loc334)
          cir.scope {
            %77 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc133)
            %78 = cir.const #cir.int<1> : !s32i loc(#loc134)
            %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc134)
            %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc336)
            cir.if %80 {
              cir.break loc(#loc136)
            } loc(#loc337)
          } loc(#loc335)
          %43 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc137)
          %44 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
          %45 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc139)
          %46 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc140)
          %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc338)
          %48 = cir.const #cir.int<1> : !u64i loc(#loc339)
          %49 = cir.const #cir.int<4096> : !s32i loc(#loc145)
          %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc145)
          %51 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc146)
          %52 = cir.binop(sub, %50, %51) : !u64i loc(#loc340)
          %53 = cir.const #cir.int<1> : !s32i loc(#loc147)
          %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc147)
          %55 = cir.binop(sub, %52, %54) : !u64i loc(#loc341)
          %56 = cir.binop(mul, %48, %55) : !u64i loc(#loc342)
          %57 = cir.const #cir.int<0> : !s32i loc(#loc149)
          %58 = cir.call @recv(%43, %47, %56, %57) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc150)
          %59 = cir.cast(integral, %58 : !s64i), !s32i loc(#loc150)
          cir.store %59, %6 : !s32i, !cir.ptr<!s32i> loc(#loc343)
          cir.scope {
            %77 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc155)
            %78 = cir.const #cir.int<1> : !s32i loc(#loc156)
            %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc156)
            %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc345)
            %81 = cir.ternary(%80, true {
              %82 = cir.const #true loc(#loc157)
              cir.yield %82 : !cir.bool loc(#loc157)
            }, false {
              %82 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc158)
              %83 = cir.const #cir.int<0> : !s32i loc(#loc159)
              %84 = cir.cmp(eq, %82, %83) : !s32i, !cir.bool loc(#loc346)
              %85 = cir.ternary(%84, true {
                %86 = cir.const #true loc(#loc157)
                cir.yield %86 : !cir.bool loc(#loc157)
              }, false {
                %86 = cir.const #false loc(#loc157)
                cir.yield %86 : !cir.bool loc(#loc157)
              }) : (!cir.bool) -> !cir.bool loc(#loc157)
              cir.yield %85 : !cir.bool loc(#loc157)
            }) : (!cir.bool) -> !cir.bool loc(#loc157)
            cir.if %81 {
              cir.break loc(#loc161)
            } loc(#loc347)
          } loc(#loc344)
          %60 = cir.const #cir.int<0> : !s8i loc(#loc162)
          %61 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
          %62 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc164)
          %63 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc165)
          %64 = cir.cast(integral, %63 : !s32i), !u64i loc(#loc165)
          %65 = cir.const #cir.int<1> : !u64i loc(#loc348)
          %66 = cir.binop(div, %64, %65) : !u64i loc(#loc349)
          %67 = cir.binop(add, %62, %66) : !u64i loc(#loc350)
          %68 = cir.ptr_stride(%61 : !cir.ptr<!s8i>, %67 : !u64i), !cir.ptr<!s8i> loc(#loc168)
          cir.store %60, %68 : !s8i, !cir.ptr<!s8i> loc(#loc351)
          %69 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
          %70 = cir.const #cir.int<13> : !s8i loc(#loc170)
          %71 = cir.cast(integral, %70 : !s8i), !s32i loc(#loc170)
          %72 = cir.call @strchr(%69, %71) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc171)
          cir.store %72, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc352)
          cir.scope {
            %77 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
            %78 = cir.cast(ptr_to_bool, %77 : !cir.ptr<!s8i>), !cir.bool loc(#loc176)
            cir.if %78 {
              %79 = cir.const #cir.int<0> : !s8i loc(#loc178)
              %80 = cir.load deref %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
              cir.store %79, %80 : !s8i, !cir.ptr<!s8i> loc(#loc355)
            } loc(#loc354)
          } loc(#loc353)
          %73 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc181)
          %74 = cir.const #cir.int<10> : !s8i loc(#loc182)
          %75 = cir.cast(integral, %74 : !s8i), !s32i loc(#loc182)
          %76 = cir.call @strchr(%73, %75) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc183)
          cir.store %76, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc356)
          cir.scope {
            %77 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc188)
            %78 = cir.cast(ptr_to_bool, %77 : !cir.ptr<!s8i>), !cir.bool loc(#loc188)
            cir.if %78 {
              %79 = cir.const #cir.int<0> : !s8i loc(#loc190)
              %80 = cir.load deref %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc191)
              cir.store %79, %80 : !s8i, !cir.ptr<!s8i> loc(#loc359)
            } loc(#loc358)
          } loc(#loc357)
          cir.yield loc(#loc74)
        } while {
          %19 = cir.const #cir.int<0> : !s32i loc(#loc193)
          %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc193)
          cir.condition(%20) loc(#loc193)
        } loc(#loc315)
      } loc(#loc315)
      cir.scope {
        %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc196)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc197)
        %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc197)
        %22 = cir.cmp(ne, %19, %21) : !s32i, !cir.bool loc(#loc361)
        cir.if %22 {
          %23 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc199)
          %24 = cir.call @close(%23) : (!s32i) -> !s32i loc(#loc200)
        } loc(#loc362)
      } loc(#loc360)
      cir.scope {
        %19 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc203)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc204)
        %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc204)
        %22 = cir.cmp(ne, %19, %21) : !s32i, !cir.bool loc(#loc364)
        cir.if %22 {
          %23 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc206)
          %24 = cir.call @close(%23) : (!s32i) -> !s32i loc(#loc207)
        } loc(#loc365)
      } loc(#loc363)
    } loc(#loc308)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc208)
    %5 = cir.get_global @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_45L7badDataE : !cir.ptr<!cir.ptr<!s8i>> loc(#loc293)
    cir.store %4, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc366)
    cir.call @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_45L7badSinkEv() : () -> () loc(#loc210)
    cir.return loc(#loc52)
  } loc(#loc305)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc367)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc213)
  cir.global "private" internal dsolocal @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_45L11goodG2BDataE = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc368)
  cir.func internal private @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_45L11goodG2BSinkEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc370)
    %1 = cir.get_global @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_45L11goodG2BDataE : !cir.ptr<!cir.ptr<!s8i>> loc(#loc368)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc219)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc370)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc372)
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc224)
      %5 = cir.const #cir.int<2> : !s32i loc(#loc225)
      %6 = cir.const #cir.int<64> : !s32i loc(#loc226)
      %7 = cir.binop(or, %5, %6) : !s32i loc(#loc373)
      %8 = cir.const #cir.int<256> : !s32i loc(#loc227)
      %9 = cir.const #cir.int<128> : !s32i loc(#loc228)
      %10 = cir.binop(or, %8, %9) : !s32i loc(#loc374)
      %11 = cir.call @open(%4, %7, %10) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc229)
      cir.store %11, %3 : !s32i, !cir.ptr<!s32i> loc(#loc375)
      cir.scope {
        %12 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc234)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc235)
        %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc236)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc377)
        cir.if %15 {
          %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc238)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc239)
        } loc(#loc378)
      } loc(#loc376)
    } loc(#loc371)
    cir.return loc(#loc217)
  } loc(#loc369)
  cir.func internal private @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_45L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc380)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc282)
    %2 = cir.get_global @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_45L7goodG2BEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc282)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc282)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc244)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc381)
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc246)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc247)
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc213)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc213)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc246)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc248)
    %10 = cir.get_global @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_45L11goodG2BDataE : !cir.ptr<!cir.ptr<!s8i>> loc(#loc368)
    cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc382)
    cir.call @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_45L11goodG2BSinkEv() : () -> () loc(#loc250)
    cir.return loc(#loc241)
  } loc(#loc379)
  cir.func @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_454goodEv() extra(#fn_attr1) {
    cir.call @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_45L7goodG2BEv() : () -> () loc(#loc253)
    cir.return loc(#loc252)
  } loc(#loc383)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc384)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc385)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc386)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc260)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc261)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc262)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc263)
  cir.func @main(%arg0: !s32i loc(fused[#loc266, #loc267]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc268, #loc269])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc388)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc389)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc265)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc270)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc270)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc271)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc272)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc272)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc273)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc260)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc260)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc274)
    cir.call @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_454goodEv() : () -> () loc(#loc275)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc261)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc261)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc276)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc262)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc262)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc277)
    cir.call @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_453badEv() : () -> () loc(#loc278)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc263)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc263)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc279)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc280)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc390)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc390)
    cir.return %15 : !s32i loc(#loc390)
  } loc(#loc387)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":187:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":187:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":80:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":80:37)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/sys/socket.h":102:1)
#loc8 = loc("/usr/include/sys/socket.h":102:62)
#loc9 = loc("/usr/include/netinet/in.h":404:1)
#loc10 = loc("/usr/include/netinet/in.h":405:40)
#loc11 = loc("/usr/include/sys/socket.h":112:1)
#loc12 = loc("/usr/include/sys/socket.h":113:6)
#loc13 = loc("/usr/include/sys/socket.h":296:1)
#loc14 = loc("/usr/include/sys/socket.h":296:39)
#loc15 = loc("/usr/include/sys/socket.h":306:1)
#loc16 = loc("/usr/include/sys/socket.h":307:38)
#loc17 = loc("/usr/include/sys/socket.h":145:1)
#loc18 = loc("/usr/include/sys/socket.h":145:68)
#loc19 = loc("/usr/include/string.h":226:1)
#loc20 = loc("/usr/include/string.h":227:50)
#loc21 = loc("/usr/include/unistd.h":358:1)
#loc22 = loc("/usr/include/unistd.h":358:27)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":58:1)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":58:15)
#loc25 = loc("/usr/include/fcntl.h":209:1)
#loc26 = loc("/usr/include/fcntl.h":209:56)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":63:1)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":75:1)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":65:5)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":65:19)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":66:5)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":74:5)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":67:9)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":67:13)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":69:25)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":69:31)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":69:38)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":69:47)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":69:55)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":69:20)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":69:9)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":69:63)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":70:9)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":73:9)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":70:13)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":70:26)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":70:25)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":71:9)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":72:19)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":72:13)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":77:1)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":163:1)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":79:5)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":79:12)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":81:12)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":81:5)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":82:5)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":160:5)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":87:9)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":87:13)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":88:9)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":88:28)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":89:9)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":89:15)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":90:9)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":90:31)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":91:9)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":91:31)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":92:9)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":92:37)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":92:26)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":92:33)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":93:9)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":145:17)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":103:35)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":103:44)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":103:57)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":103:28)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":103:13)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":103:68)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":104:13)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":107:13)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":104:17)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":104:33)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":105:13)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":106:17)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":108:20)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":108:21)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":108:30)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":108:33)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":108:47)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":108:13)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":108:48)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":109:34)
#loc95 = loc("/usr/include/netinet/in.h":249:5)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":109:13)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":110:39)
#loc98 = loc("/usr/include/netinet/in.h":251:20)
#loc99 = loc("/usr/include/netinet/in.h":33:15)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":110:13)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":111:38)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":111:32)
#loc103 = loc("/usr/include/netinet/in.h":250:15)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":111:13)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":111:46)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":112:13)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":115:13)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":112:22)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":112:54)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":112:55)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":112:64)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":112:78)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":112:17)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":112:84)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":113:13)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":114:17)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":116:13)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":119:13)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":116:24)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":116:38)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":116:17)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":116:57)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":117:13)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":118:17)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":120:35)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":120:49)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":120:55)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":120:28)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":120:13)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":120:59)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":121:13)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":124:13)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":121:17)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":121:33)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":122:13)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":123:17)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":126:31)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":126:54)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":126:61)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":126:59)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":126:45)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":126:68)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":126:71)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":126:82)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":126:87)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":126:102)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":126:112)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":126:113)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":126:116)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":126:26)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":126:13)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":126:117)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":127:13)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":130:13)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":127:17)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":127:31)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":127:44)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":127:47)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":127:61)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":128:13)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":129:17)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":132:57)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":132:13)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":132:18)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":132:28)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":132:41)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":132:52)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":132:53)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":134:30)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":134:36)
#loc171 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":134:23)
#loc172 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":134:13)
#loc173 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":134:40)
#loc174 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":135:13)
#loc175 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":138:13)
#loc176 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":135:17)
#loc177 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":136:13)
#loc178 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":137:28)
#loc179 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":137:18)
#loc180 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":137:17)
#loc181 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":139:30)
#loc182 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":139:36)
#loc183 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":139:23)
#loc184 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":139:13)
#loc185 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":139:40)
#loc186 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":140:13)
#loc187 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":143:13)
#loc188 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":140:17)
#loc189 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":141:13)
#loc190 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":142:28)
#loc191 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":142:18)
#loc192 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":142:17)
#loc193 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":145:16)
#loc194 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":146:9)
#loc195 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":149:9)
#loc196 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":146:13)
#loc197 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":146:29)
#loc198 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":147:9)
#loc199 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":148:26)
#loc200 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":148:13)
#loc201 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":150:9)
#loc202 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":153:9)
#loc203 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":150:13)
#loc204 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":150:29)
#loc205 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":151:9)
#loc206 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":152:26)
#loc207 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":152:13)
#loc208 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":161:15)
#loc209 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":161:5)
#loc210 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":162:5)
#loc211 = loc("/usr/include/string.h":149:1)
#loc212 = loc("/usr/include/string.h":150:14)
#loc213 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":190:18)
#loc214 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":59:1)
#loc215 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":59:15)
#loc216 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":170:1)
#loc217 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":182:1)
#loc218 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":172:5)
#loc219 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":172:19)
#loc220 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":173:5)
#loc221 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":181:5)
#loc222 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":174:9)
#loc223 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":174:13)
#loc224 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":176:25)
#loc225 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":176:31)
#loc226 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":176:38)
#loc227 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":176:47)
#loc228 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":176:55)
#loc229 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":176:20)
#loc230 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":176:9)
#loc231 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":176:63)
#loc232 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":177:9)
#loc233 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":180:9)
#loc234 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":177:13)
#loc235 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":177:26)
#loc236 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":177:25)
#loc237 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":178:9)
#loc238 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":179:19)
#loc239 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":179:13)
#loc240 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":184:1)
#loc241 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":193:1)
#loc242 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":186:5)
#loc243 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":186:12)
#loc244 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":188:12)
#loc245 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":188:5)
#loc246 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":190:5)
#loc247 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":190:12)
#loc248 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":191:19)
#loc249 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":191:5)
#loc250 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":192:5)
#loc251 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":195:1)
#loc252 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":198:1)
#loc253 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":197:5)
#loc254 = loc("/usr/include/stdlib.h":575:1)
#loc255 = loc("/usr/include/stdlib.h":575:41)
#loc256 = loc("/usr/include/time.h":76:1)
#loc257 = loc("/usr/include/time.h":76:38)
#loc258 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc259 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc260 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":218:15)
#loc261 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":220:15)
#loc262 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":223:15)
#loc263 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":225:15)
#loc264 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":213:1)
#loc265 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":228:1)
#loc270 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":214:1)
#loc271 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":216:27)
#loc272 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":216:22)
#loc273 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":216:5)
#loc274 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":218:5)
#loc275 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":219:5)
#loc276 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":220:5)
#loc277 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":223:5)
#loc278 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":224:5)
#loc279 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":225:5)
#loc280 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":227:12)
#loc281 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_45.cpp":227:5)
#loc282 = loc(fused[#loc1, #loc2])
#loc283 = loc(fused[#loc3, #loc4])
#loc284 = loc(fused[#loc5, #loc6])
#loc285 = loc(fused[#loc7, #loc8])
#loc286 = loc(fused[#loc9, #loc10])
#loc287 = loc(fused[#loc11, #loc12])
#loc288 = loc(fused[#loc13, #loc14])
#loc289 = loc(fused[#loc15, #loc16])
#loc290 = loc(fused[#loc17, #loc18])
#loc291 = loc(fused[#loc19, #loc20])
#loc292 = loc(fused[#loc21, #loc22])
#loc293 = loc(fused[#loc23, #loc24])
#loc294 = loc(fused[#loc25, #loc26])
#loc295 = loc(fused[#loc27, #loc28])
#loc296 = loc(fused[#loc29, #loc30])
#loc297 = loc(fused[#loc31, #loc32])
#loc298 = loc(fused[#loc33, #loc34])
#loc299 = loc(fused[#loc36, #loc37])
#loc300 = loc(fused[#loc38, #loc39])
#loc301 = loc(fused[#loc41, #loc42])
#loc302 = loc(fused[#loc43, #loc44])
#loc303 = loc(fused[#loc45, #loc46])
#loc304 = loc(fused[#loc48, #loc44])
#loc305 = loc(fused[#loc51, #loc52])
#loc306 = loc(fused[#loc53, #loc54])
#loc307 = loc(fused[#loc56, #loc55])
#loc308 = loc(fused[#loc57, #loc58])
#loc309 = loc(fused[#loc59, #loc60])
#loc310 = loc(fused[#loc61, #loc62])
#loc311 = loc(fused[#loc63, #loc64])
#loc312 = loc(fused[#loc65, #loc66])
#loc313 = loc(fused[#loc67, #loc68])
#loc314 = loc(fused[#loc69, #loc70])
#loc315 = loc(fused[#loc73, #loc74])
#loc316 = loc(fused[#loc79, #loc80])
#loc317 = loc(fused[#loc81, #loc82])
#loc318 = loc(fused[#loc83, #loc84])
#loc319 = loc(fused[#loc85, #loc82])
#loc320 = loc(fused[#loc87, #loc88])
#loc321 = loc(fused[#loc90, #loc91])
#loc322 = loc(fused[#loc92, #loc93])
#loc323 = loc(fused[#loc96, #loc94])
#loc324 = loc(fused[#loc100, #loc97])
#loc325 = loc(fused[#loc104, #loc105])
#loc326 = loc(fused[#loc106, #loc107])
#loc327 = loc(fused[#loc109, #loc110])
#loc328 = loc(fused[#loc111, #loc112])
#loc329 = loc(fused[#loc113, #loc114])
#loc330 = loc(fused[#loc115, #loc107])
#loc331 = loc(fused[#loc117, #loc118])
#loc332 = loc(fused[#loc121, #loc122])
#loc333 = loc(fused[#loc123, #loc118])
#loc334 = loc(fused[#loc129, #loc130])
#loc335 = loc(fused[#loc131, #loc132])
#loc336 = loc(fused[#loc133, #loc134])
#loc337 = loc(fused[#loc135, #loc132])
#loc338 = loc(fused[#loc141, #loc142])
#loc339 = loc(fused[#loc143, #loc144])
#loc340 = loc(fused[#loc145, #loc146])
#loc341 = loc(fused[#loc145, #loc147])
#loc342 = loc(fused[#loc143, #loc148])
#loc343 = loc(fused[#loc151, #loc152])
#loc344 = loc(fused[#loc153, #loc154])
#loc345 = loc(fused[#loc155, #loc156])
#loc346 = loc(fused[#loc158, #loc159])
#loc347 = loc(fused[#loc160, #loc154])
#loc348 = loc(fused[#loc166, #loc167])
#loc349 = loc(fused[#loc165, #loc167])
#loc350 = loc(fused[#loc164, #loc167])
#loc351 = loc(fused[#loc163, #loc162])
#loc352 = loc(fused[#loc172, #loc173])
#loc353 = loc(fused[#loc174, #loc175])
#loc354 = loc(fused[#loc177, #loc175])
#loc355 = loc(fused[#loc180, #loc178])
#loc356 = loc(fused[#loc184, #loc185])
#loc357 = loc(fused[#loc186, #loc187])
#loc358 = loc(fused[#loc189, #loc187])
#loc359 = loc(fused[#loc192, #loc190])
#loc360 = loc(fused[#loc194, #loc195])
#loc361 = loc(fused[#loc196, #loc197])
#loc362 = loc(fused[#loc198, #loc195])
#loc363 = loc(fused[#loc201, #loc202])
#loc364 = loc(fused[#loc203, #loc204])
#loc365 = loc(fused[#loc205, #loc202])
#loc366 = loc(fused[#loc209, #loc208])
#loc367 = loc(fused[#loc211, #loc212])
#loc368 = loc(fused[#loc214, #loc215])
#loc369 = loc(fused[#loc216, #loc217])
#loc370 = loc(fused[#loc218, #loc219])
#loc371 = loc(fused[#loc220, #loc221])
#loc372 = loc(fused[#loc222, #loc223])
#loc373 = loc(fused[#loc225, #loc226])
#loc374 = loc(fused[#loc227, #loc228])
#loc375 = loc(fused[#loc230, #loc231])
#loc376 = loc(fused[#loc232, #loc233])
#loc377 = loc(fused[#loc234, #loc235])
#loc378 = loc(fused[#loc237, #loc233])
#loc379 = loc(fused[#loc240, #loc241])
#loc380 = loc(fused[#loc242, #loc243])
#loc381 = loc(fused[#loc245, #loc244])
#loc382 = loc(fused[#loc249, #loc248])
#loc383 = loc(fused[#loc251, #loc252])
#loc384 = loc(fused[#loc254, #loc255])
#loc385 = loc(fused[#loc256, #loc257])
#loc386 = loc(fused[#loc258, #loc259])
#loc387 = loc(fused[#loc264, #loc265])
#loc390 = loc(fused[#loc281, #loc280])
