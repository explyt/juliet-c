!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc63 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":58:33)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":129:10)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":129:14)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":129:20)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":129:32)
#true = #cir.bool<true> : !cir.bool
#loc226 = loc(fused[#loc150, #loc151])
#loc227 = loc(fused[#loc152, #loc153])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_open_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_33L7goodG2BEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc166)
  cir.global "private" constant cir_private @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_333badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc167)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc168)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc169)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc170)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc171)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc13)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc172)
  cir.func private @close(!s32i) -> !s32i loc(#loc173)
  cir.func @_ZN51CWE23_Relative_Path_Traversal__char_console_open_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc175)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc176)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc177)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc178)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc179)
    %5 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc167)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc29)
    %6 = cir.get_global @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_333badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc167)
    cir.copy %6 to %5 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc167)
    %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc30)
    cir.store %7, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc180)
    cir.br ^bb1 loc(#loc181)
  ^bb1:  // pred: ^bb0
    %8 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc34)
    %9 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc34)
    cir.store %10, %0 : !u64i, !cir.ptr<!u64i> loc(#loc175)
    cir.br ^bb2 loc(#loc182)
  ^bb2:  // pred: ^bb1
    %11 = cir.const #cir.int<4096> : !s32i loc(#loc38)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc38)
    %13 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc39)
    %14 = cir.binop(sub, %12, %13) : !u64i loc(#loc183)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc40)
    %17 = cir.cmp(gt, %14, %16) : !u64i, !cir.bool loc(#loc184)
    cir.brcond %17 ^bb3, ^bb21 loc(#loc185)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc186)
  ^bb4:  // pred: ^bb3
    %18 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    %19 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc45)
    %20 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %19 : !u64i), !cir.ptr<!s8i> loc(#loc46)
    %21 = cir.const #cir.int<4096> : !s32i loc(#loc47)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc47)
    %23 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc48)
    %24 = cir.binop(sub, %22, %23) : !u64i loc(#loc187)
    %25 = cir.cast(integral, %24 : !u64i), !s32i loc(#loc187)
    %26 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc170)
    %27 = cir.load %26 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc49)
    %28 = cir.call @fgets(%20, %25, %27) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc50)
    %29 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc51)
    %30 = cir.cmp(ne, %28, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc188)
    cir.brcond %30 ^bb5, ^bb18 loc(#loc189)
  ^bb5:  // pred: ^bb4
    %31 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc55)
    %32 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    %33 = cir.call @strlen(%32) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc55)
    cir.store %33, %0 : !u64i, !cir.ptr<!u64i> loc(#loc190)
    cir.br ^bb6 loc(#loc191)
  ^bb6:  // pred: ^bb5
    %34 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc61)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc62)
    %37 = cir.cmp(gt, %34, %36) : !u64i, !cir.bool loc(#loc192)
    cir.brcond %37 ^bb7, ^bb12 loc(#loc63)
  ^bb7:  // pred: ^bb6
    %38 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    %39 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc65)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc66)
    %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc66)
    %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc193)
    %43 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc67)
    %44 = cir.load %43 : !cir.ptr<!s8i>, !s8i loc(#loc64)
    %45 = cir.cast(integral, %44 : !s8i), !s32i loc(#loc64)
    %46 = cir.const #cir.int<10> : !s8i loc(#loc68)
    %47 = cir.cast(integral, %46 : !s8i), !s32i loc(#loc68)
    %48 = cir.cmp(eq, %45, %47) : !s32i, !cir.bool loc(#loc194)
    cir.brcond %48 ^bb8, ^bb9 loc(#loc63)
  ^bb8:  // pred: ^bb7
    %49 = cir.const #true loc(#loc63)
    cir.br ^bb10(%49 : !cir.bool) loc(#loc63)
  ^bb9:  // pred: ^bb7
    %50 = cir.const #false loc(#loc63)
    cir.br ^bb10(%50 : !cir.bool) loc(#loc63)
  ^bb10(%51: !cir.bool loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":58:33)):  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc63)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13(%51 : !cir.bool) loc(#loc63)
  ^bb12:  // pred: ^bb6
    %52 = cir.const #false loc(#loc63)
    cir.br ^bb13(%52 : !cir.bool) loc(#loc63)
  ^bb13(%53: !cir.bool loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":58:33)):  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc63)
  ^bb14:  // pred: ^bb13
    cir.brcond %53 ^bb15, ^bb16 loc(#loc195)
  ^bb15:  // pred: ^bb14
    %54 = cir.const #cir.int<0> : !s8i loc(#loc70)
    %55 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
    %56 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc72)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc73)
    %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc73)
    %59 = cir.binop(sub, %56, %58) : !u64i loc(#loc196)
    %60 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %59 : !u64i), !cir.ptr<!s8i> loc(#loc74)
    cir.store %54, %60 : !s8i, !cir.ptr<!s8i> loc(#loc197)
    cir.br ^bb16 loc(#loc60)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc60)
  ^bb17:  // pred: ^bb16
    cir.br ^bb19 loc(#loc53)
  ^bb18:  // pred: ^bb4
    %61 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc13)
    %62 = cir.cast(array_to_ptrdecay, %61 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc13)
    cir.call @printLine(%62) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %63 = cir.const #cir.int<0> : !s8i loc(#loc76)
    %64 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
    %65 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc78)
    %66 = cir.ptr_stride(%64 : !cir.ptr<!s8i>, %65 : !u64i), !cir.ptr<!s8i> loc(#loc79)
    cir.store %63, %66 : !s8i, !cir.ptr<!s8i> loc(#loc198)
    cir.br ^bb19 loc(#loc43)
  ^bb19:  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc43)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc37)
  ^bb21:  // 2 preds: ^bb2, ^bb20
    cir.br ^bb22 loc(#loc37)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc33)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc199)
  ^bb24:  // pred: ^bb23
    %67 = cir.load %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc23)
    %68 = cir.load %67 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
    cir.store %68, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc176)
    cir.br ^bb25 loc(#loc200)
  ^bb25:  // pred: ^bb24
    %69 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
    %70 = cir.const #cir.int<2> : !s32i loc(#loc85)
    %71 = cir.const #cir.int<64> : !s32i loc(#loc86)
    %72 = cir.binop(or, %70, %71) : !s32i loc(#loc201)
    %73 = cir.const #cir.int<256> : !s32i loc(#loc87)
    %74 = cir.const #cir.int<128> : !s32i loc(#loc88)
    %75 = cir.binop(or, %73, %74) : !s32i loc(#loc202)
    %76 = cir.call @open(%69, %72, %75) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc89)
    cir.store %76, %2 : !s32i, !cir.ptr<!s32i> loc(#loc203)
    cir.br ^bb26 loc(#loc204)
  ^bb26:  // pred: ^bb25
    %77 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc96)
    %80 = cir.cmp(ne, %77, %79) : !s32i, !cir.bool loc(#loc205)
    cir.brcond %80 ^bb27, ^bb28 loc(#loc206)
  ^bb27:  // pred: ^bb26
    %81 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    %82 = cir.call @close(%81) : (!s32i) -> !s32i loc(#loc99)
    cir.br ^bb28 loc(#loc93)
  ^bb28:  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc93)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc83)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc81)
  ^bb31:  // pred: ^bb30
    cir.return loc(#loc19)
  } loc(#loc174)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc207)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc102)
  cir.func internal private @_ZN51CWE23_Relative_Path_Traversal__char_console_open_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc209)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc210)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc211)
    %3 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc212)
    %4 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc166)
    cir.store %2, %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc112)
    %5 = cir.get_global @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_33L7goodG2BEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc166)
    cir.copy %5 to %4 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc166)
    %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc113)
    cir.store %6, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc213)
    %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc115)
    %8 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
    %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc102)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc102)
    %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc115)
    cir.br ^bb1 loc(#loc214)
  ^bb1:  // pred: ^bb0
    %12 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc106)
    %13 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
    cir.store %13, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc209)
    cir.br ^bb2 loc(#loc215)
  ^bb2:  // pred: ^bb1
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
    %15 = cir.const #cir.int<2> : !s32i loc(#loc122)
    %16 = cir.const #cir.int<64> : !s32i loc(#loc123)
    %17 = cir.binop(or, %15, %16) : !s32i loc(#loc216)
    %18 = cir.const #cir.int<256> : !s32i loc(#loc124)
    %19 = cir.const #cir.int<128> : !s32i loc(#loc125)
    %20 = cir.binop(or, %18, %19) : !s32i loc(#loc217)
    %21 = cir.call @open(%14, %17, %20) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc126)
    cir.store %21, %1 : !s32i, !cir.ptr<!s32i> loc(#loc218)
    cir.br ^bb3 loc(#loc219)
  ^bb3:  // pred: ^bb2
    %22 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc131)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc133)
    %25 = cir.cmp(ne, %22, %24) : !s32i, !cir.bool loc(#loc220)
    cir.brcond %25 ^bb4, ^bb5 loc(#loc221)
  ^bb4:  // pred: ^bb3
    %26 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    %27 = cir.call @close(%26) : (!s32i) -> !s32i loc(#loc136)
    cir.br ^bb5 loc(#loc130)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc130)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc120)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc118)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc104)
  } loc(#loc208)
  cir.func @_ZN51CWE23_Relative_Path_Traversal__char_console_open_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN51CWE23_Relative_Path_Traversal__char_console_open_33L7goodG2BEv() : () -> () loc(#loc139)
    cir.return loc(#loc138)
  } loc(#loc222)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc223)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc224)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc144)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc145)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc146)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc147)
  cir.func @main(%arg0: !s32i loc(fused[#loc150, #loc151]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc152, #loc153])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc226)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc227)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc149)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc154)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc154)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc155)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc156)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc156)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc157)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc144)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc144)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc158)
    cir.call @_ZN51CWE23_Relative_Path_Traversal__char_console_open_334goodEv() : () -> () loc(#loc159)
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc145)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc145)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc160)
    %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc146)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc146)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc161)
    cir.call @_ZN51CWE23_Relative_Path_Traversal__char_console_open_333badEv() : () -> () loc(#loc162)
    %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc147)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc147)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc163)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc164)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc228)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc228)
    cir.return %15 : !s32i loc(#loc228)
  } loc(#loc225)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_open_33.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":94:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":94:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":44:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":44:37)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("/usr/include/stdio.h":149:1)
#loc10 = loc("/usr/include/stdio.h":149:14)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":65:27)
#loc14 = loc("/usr/include/fcntl.h":209:1)
#loc15 = loc("/usr/include/fcntl.h":209:56)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":40:1)
#loc19 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":83:1)
#loc20 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":48:9)
#loc21 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":48:37)
#loc22 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":72:9)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":72:23)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":74:13)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":74:17)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":42:5)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":42:12)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":43:5)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":43:23)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":45:12)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":45:5)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":46:5)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":70:5)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":48:26)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":48:33)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":50:9)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":69:9)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":50:13)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":50:26)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":50:36)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":51:9)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":53:13)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":68:13)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":53:23)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":53:28)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":53:27)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":53:43)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":53:56)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":53:66)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":53:17)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":53:76)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":54:13)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":62:13)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":64:13)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":57:27)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":57:34)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":57:17)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":57:38)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":58:17)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":61:17)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":58:21)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":58:31)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":58:36)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":58:41)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":58:49)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":58:50)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":58:55)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":59:17)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":60:39)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":60:21)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":60:26)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":60:34)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":60:35)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":65:17)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":67:33)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":67:17)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":67:22)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":67:29)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":71:5)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":82:5)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":73:9)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":81:9)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":76:29)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":76:35)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":76:42)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":76:51)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":76:59)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":76:24)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":76:13)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":76:67)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":77:13)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":80:13)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":77:17)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":77:30)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":77:29)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":78:13)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":79:23)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":79:17)
#loc100 = loc("/usr/include/string.h":149:1)
#loc101 = loc("/usr/include/string.h":150:14)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":97:18)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":90:1)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":110:1)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":99:9)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":99:23)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":101:13)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":101:17)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":92:5)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":92:12)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":93:5)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":93:23)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":95:12)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":95:5)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":97:5)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":97:12)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":98:5)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":109:5)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":100:9)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":108:9)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":103:29)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":103:35)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":103:42)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":103:51)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":103:59)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":103:24)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":103:13)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":103:67)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":104:13)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":107:13)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":104:17)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":104:30)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":104:29)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":105:13)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":106:23)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":106:17)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":112:1)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":115:1)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":114:5)
#loc140 = loc("/usr/include/stdlib.h":575:1)
#loc141 = loc("/usr/include/stdlib.h":575:41)
#loc142 = loc("/usr/include/time.h":76:1)
#loc143 = loc("/usr/include/time.h":76:38)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":134:15)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":136:15)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":139:15)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":141:15)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":129:1)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":144:1)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":130:1)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":132:27)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":132:22)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":132:5)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":134:5)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":135:5)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":136:5)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":139:5)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":140:5)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":141:5)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":143:12)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_console_open_33.cpp":143:5)
#loc166 = loc(fused[#loc1, #loc2])
#loc167 = loc(fused[#loc3, #loc4])
#loc168 = loc(fused[#loc5, #loc6])
#loc169 = loc(fused[#loc7, #loc8])
#loc170 = loc(fused[#loc9, #loc10])
#loc171 = loc(fused[#loc11, #loc12])
#loc172 = loc(fused[#loc14, #loc15])
#loc173 = loc(fused[#loc16, #loc17])
#loc174 = loc(fused[#loc18, #loc19])
#loc175 = loc(fused[#loc20, #loc21])
#loc176 = loc(fused[#loc22, #loc23])
#loc177 = loc(fused[#loc24, #loc25])
#loc178 = loc(fused[#loc26, #loc27])
#loc179 = loc(fused[#loc28, #loc29])
#loc180 = loc(fused[#loc31, #loc30])
#loc181 = loc(fused[#loc32, #loc33])
#loc182 = loc(fused[#loc36, #loc37])
#loc183 = loc(fused[#loc38, #loc39])
#loc184 = loc(fused[#loc38, #loc40])
#loc185 = loc(fused[#loc41, #loc37])
#loc186 = loc(fused[#loc42, #loc43])
#loc187 = loc(fused[#loc47, #loc48])
#loc188 = loc(fused[#loc50, #loc51])
#loc189 = loc(fused[#loc52, #loc53, #loc54, #loc43])
#loc190 = loc(fused[#loc57, #loc58])
#loc191 = loc(fused[#loc59, #loc60])
#loc192 = loc(fused[#loc61, #loc62])
#loc193 = loc(fused[#loc65, #loc66])
#loc194 = loc(fused[#loc64, #loc68])
#loc195 = loc(fused[#loc69, #loc60])
#loc196 = loc(fused[#loc72, #loc73])
#loc197 = loc(fused[#loc71, #loc70])
#loc198 = loc(fused[#loc77, #loc76])
#loc199 = loc(fused[#loc80, #loc81])
#loc200 = loc(fused[#loc82, #loc83])
#loc201 = loc(fused[#loc85, #loc86])
#loc202 = loc(fused[#loc87, #loc88])
#loc203 = loc(fused[#loc90, #loc91])
#loc204 = loc(fused[#loc92, #loc93])
#loc205 = loc(fused[#loc94, #loc95])
#loc206 = loc(fused[#loc97, #loc93])
#loc207 = loc(fused[#loc100, #loc101])
#loc208 = loc(fused[#loc103, #loc104])
#loc209 = loc(fused[#loc105, #loc106])
#loc210 = loc(fused[#loc107, #loc108])
#loc211 = loc(fused[#loc109, #loc110])
#loc212 = loc(fused[#loc111, #loc112])
#loc213 = loc(fused[#loc114, #loc113])
#loc214 = loc(fused[#loc117, #loc118])
#loc215 = loc(fused[#loc119, #loc120])
#loc216 = loc(fused[#loc122, #loc123])
#loc217 = loc(fused[#loc124, #loc125])
#loc218 = loc(fused[#loc127, #loc128])
#loc219 = loc(fused[#loc129, #loc130])
#loc220 = loc(fused[#loc131, #loc132])
#loc221 = loc(fused[#loc134, #loc130])
#loc222 = loc(fused[#loc137, #loc138])
#loc223 = loc(fused[#loc140, #loc141])
#loc224 = loc(fused[#loc142, #loc143])
#loc225 = loc(fused[#loc148, #loc149])
#loc228 = loc(fused[#loc165, #loc164])
