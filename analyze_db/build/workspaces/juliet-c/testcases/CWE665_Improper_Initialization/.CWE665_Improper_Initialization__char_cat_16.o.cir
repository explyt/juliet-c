!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_cat_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc77)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc78)
  cir.func no_proto @CWE665_Improper_Initialization__char_cat_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc80)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc81)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc11)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc82)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc15)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc15)
        cir.condition(%4) loc(#loc15)
      } do {
        cir.scope {
          cir.break loc(#loc17)
        } loc(#loc84)
        cir.yield loc(#loc14)
      } loc(#loc83)
    } loc(#loc83)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc86)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc22)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc22)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc23)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc24)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc25)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc24)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc24)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc87)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc28)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc28)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc29)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc30)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc29)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc31)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc31)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc88)
      %18 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc32)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
      %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc34)
      %21 = cir.call @strcat(%19, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc32)
      %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
      cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc36)
    } loc(#loc85)
    cir.return loc(#loc6)
  } loc(#loc79)
  cir.func no_proto @CWE665_Improper_Initialization__char_cat_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc90)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc39)
    cir.return loc(#loc38)
  } loc(#loc89)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc92)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc93)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc94)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc51)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc51)
        cir.condition(%4) loc(#loc51)
      } do {
        cir.scope {
          %3 = cir.const #cir.int<0> : !s32i loc(#loc53)
          %4 = cir.cast(integral, %3 : !s32i), !s8i loc(#loc53)
          %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc55)
          %7 = cir.ptr_stride(%5 : !cir.ptr<!s8i>, %6 : !s32i), !cir.ptr<!s8i> loc(#loc56)
          cir.store %4, %7 : !s8i, !cir.ptr<!s8i> loc(#loc97)
          cir.break loc(#loc57)
        } loc(#loc96)
        cir.yield loc(#loc50)
      } loc(#loc95)
    } loc(#loc95)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc99)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc62)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc62)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc63)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc64)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc65)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc64)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc64)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc100)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc68)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc68)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc69)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc70)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc69)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc71)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc71)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc101)
      %18 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc72)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
      %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc74)
      %21 = cir.call @strcat(%19, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc72)
      %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
      cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    } loc(#loc98)
    cir.return loc(#loc42)
  } loc(#loc91)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_cat_16.c":0:0)
#loc1 = loc("/usr/include/string.h":149:1)
#loc2 = loc("/usr/include/string.h":150:14)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE665_Improper_Initialization__char_cat_16.c":23:1)
#loc6 = loc("CWE665_Improper_Initialization__char_cat_16.c":42:1)
#loc7 = loc("CWE665_Improper_Initialization__char_cat_16.c":25:5)
#loc8 = loc("CWE665_Improper_Initialization__char_cat_16.c":25:12)
#loc9 = loc("CWE665_Improper_Initialization__char_cat_16.c":26:5)
#loc10 = loc("CWE665_Improper_Initialization__char_cat_16.c":26:24)
#loc11 = loc("CWE665_Improper_Initialization__char_cat_16.c":27:12)
#loc12 = loc("CWE665_Improper_Initialization__char_cat_16.c":27:5)
#loc13 = loc("CWE665_Improper_Initialization__char_cat_16.c":28:5)
#loc14 = loc("CWE665_Improper_Initialization__char_cat_16.c":33:5)
#loc15 = loc("CWE665_Improper_Initialization__char_cat_16.c":28:11)
#loc16 = loc("CWE665_Improper_Initialization__char_cat_16.c":29:5)
#loc17 = loc("CWE665_Improper_Initialization__char_cat_16.c":32:9)
#loc18 = loc("CWE665_Improper_Initialization__char_cat_16.c":34:5)
#loc19 = loc("CWE665_Improper_Initialization__char_cat_16.c":41:5)
#loc20 = loc("CWE665_Improper_Initialization__char_cat_16.c":35:9)
#loc21 = loc("CWE665_Improper_Initialization__char_cat_16.c":35:24)
#loc22 = loc("CWE665_Improper_Initialization__char_cat_16.c":36:16)
#loc23 = loc("CWE665_Improper_Initialization__char_cat_16.c":36:24)
#loc24 = loc("CWE665_Improper_Initialization__char_cat_16.c":36:29)
#loc25 = loc("CWE665_Improper_Initialization__char_cat_16.c":36:33)
#loc26 = loc("CWE665_Improper_Initialization__char_cat_16.c":36:9)
#loc27 = loc("CWE665_Improper_Initialization__char_cat_16.c":36:34)
#loc28 = loc("CWE665_Improper_Initialization__char_cat_16.c":37:25)
#loc29 = loc("CWE665_Improper_Initialization__char_cat_16.c":37:16)
#loc30 = loc("CWE665_Improper_Initialization__char_cat_16.c":37:20)
#loc31 = loc("CWE665_Improper_Initialization__char_cat_16.c":37:9)
#loc32 = loc("CWE665_Improper_Initialization__char_cat_16.c":39:9)
#loc33 = loc("CWE665_Improper_Initialization__char_cat_16.c":39:16)
#loc34 = loc("CWE665_Improper_Initialization__char_cat_16.c":39:22)
#loc35 = loc("CWE665_Improper_Initialization__char_cat_16.c":40:19)
#loc36 = loc("CWE665_Improper_Initialization__char_cat_16.c":40:9)
#loc37 = loc("CWE665_Improper_Initialization__char_cat_16.c":70:1)
#loc38 = loc("CWE665_Improper_Initialization__char_cat_16.c":73:1)
#loc39 = loc("CWE665_Improper_Initialization__char_cat_16.c":72:5)
#loc40 = loc("CWE665_Improper_Initialization__char_cat_16.c":72:13)
#loc41 = loc("CWE665_Improper_Initialization__char_cat_16.c":49:1)
#loc42 = loc("CWE665_Improper_Initialization__char_cat_16.c":68:1)
#loc43 = loc("CWE665_Improper_Initialization__char_cat_16.c":51:5)
#loc44 = loc("CWE665_Improper_Initialization__char_cat_16.c":51:12)
#loc45 = loc("CWE665_Improper_Initialization__char_cat_16.c":52:5)
#loc46 = loc("CWE665_Improper_Initialization__char_cat_16.c":52:24)
#loc47 = loc("CWE665_Improper_Initialization__char_cat_16.c":53:12)
#loc48 = loc("CWE665_Improper_Initialization__char_cat_16.c":53:5)
#loc49 = loc("CWE665_Improper_Initialization__char_cat_16.c":54:5)
#loc50 = loc("CWE665_Improper_Initialization__char_cat_16.c":59:5)
#loc51 = loc("CWE665_Improper_Initialization__char_cat_16.c":54:11)
#loc52 = loc("CWE665_Improper_Initialization__char_cat_16.c":55:5)
#loc53 = loc("CWE665_Improper_Initialization__char_cat_16.c":57:19)
#loc54 = loc("CWE665_Improper_Initialization__char_cat_16.c":57:9)
#loc55 = loc("CWE665_Improper_Initialization__char_cat_16.c":57:14)
#loc56 = loc("CWE665_Improper_Initialization__char_cat_16.c":57:15)
#loc57 = loc("CWE665_Improper_Initialization__char_cat_16.c":58:9)
#loc58 = loc("CWE665_Improper_Initialization__char_cat_16.c":60:5)
#loc59 = loc("CWE665_Improper_Initialization__char_cat_16.c":67:5)
#loc60 = loc("CWE665_Improper_Initialization__char_cat_16.c":61:9)
#loc61 = loc("CWE665_Improper_Initialization__char_cat_16.c":61:24)
#loc62 = loc("CWE665_Improper_Initialization__char_cat_16.c":62:16)
#loc63 = loc("CWE665_Improper_Initialization__char_cat_16.c":62:24)
#loc64 = loc("CWE665_Improper_Initialization__char_cat_16.c":62:29)
#loc65 = loc("CWE665_Improper_Initialization__char_cat_16.c":62:33)
#loc66 = loc("CWE665_Improper_Initialization__char_cat_16.c":62:9)
#loc67 = loc("CWE665_Improper_Initialization__char_cat_16.c":62:34)
#loc68 = loc("CWE665_Improper_Initialization__char_cat_16.c":63:25)
#loc69 = loc("CWE665_Improper_Initialization__char_cat_16.c":63:16)
#loc70 = loc("CWE665_Improper_Initialization__char_cat_16.c":63:20)
#loc71 = loc("CWE665_Improper_Initialization__char_cat_16.c":63:9)
#loc72 = loc("CWE665_Improper_Initialization__char_cat_16.c":65:9)
#loc73 = loc("CWE665_Improper_Initialization__char_cat_16.c":65:16)
#loc74 = loc("CWE665_Improper_Initialization__char_cat_16.c":65:22)
#loc75 = loc("CWE665_Improper_Initialization__char_cat_16.c":66:19)
#loc76 = loc("CWE665_Improper_Initialization__char_cat_16.c":66:9)
#loc77 = loc(fused[#loc1, #loc2])
#loc78 = loc(fused[#loc3, #loc4])
#loc79 = loc(fused[#loc5, #loc6])
#loc80 = loc(fused[#loc7, #loc8])
#loc81 = loc(fused[#loc9, #loc10])
#loc82 = loc(fused[#loc12, #loc11])
#loc83 = loc(fused[#loc13, #loc14])
#loc84 = loc(fused[#loc16, #loc14])
#loc85 = loc(fused[#loc18, #loc19])
#loc86 = loc(fused[#loc20, #loc21])
#loc87 = loc(fused[#loc26, #loc27])
#loc88 = loc(fused[#loc31, #loc28])
#loc89 = loc(fused[#loc37, #loc38])
#loc90 = loc(fused[#loc39, #loc40])
#loc91 = loc(fused[#loc41, #loc42])
#loc92 = loc(fused[#loc43, #loc44])
#loc93 = loc(fused[#loc45, #loc46])
#loc94 = loc(fused[#loc48, #loc47])
#loc95 = loc(fused[#loc49, #loc50])
#loc96 = loc(fused[#loc52, #loc50])
#loc97 = loc(fused[#loc54, #loc53])
#loc98 = loc(fused[#loc58, #loc59])
#loc99 = loc(fused[#loc60, #loc61])
#loc100 = loc(fused[#loc66, #loc67])
#loc101 = loc(fused[#loc71, #loc68])
