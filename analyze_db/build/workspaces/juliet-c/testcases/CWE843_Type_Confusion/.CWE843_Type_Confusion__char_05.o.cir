!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE843_Type_Confusion/CWE843_Type_Confusion__char_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc79)
  cir.func private @printIntLine(!s32i) loc(#loc80)
  cir.func no_proto @CWE843_Type_Confusion__char_05_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc82)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc9)
    cir.store %1, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc83)
    cir.scope {
      %5 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc79)
      %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc13)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc13)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charBuffer", init] {alignment = 1 : i64} loc(#loc87)
          %9 = cir.const #cir.int<97> : !s32i loc(#loc18)
          %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc18)
          cir.store %10, %8 : !s8i, !cir.ptr<!s8i> loc(#loc87)
          %11 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc88)
          cir.store %11, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc89)
        } loc(#loc86)
      } loc(#loc85)
    } loc(#loc84)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc22)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc22)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc23)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc24)
    cir.return loc(#loc6)
  } loc(#loc81)
  cir.func no_proto @CWE843_Type_Confusion__char_05_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc91)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc27)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc92)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc29)
    cir.return loc(#loc26)
  } loc(#loc90)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc93)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc94)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc35)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc96)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc40)
    cir.store %1, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc97)
    cir.scope {
      %5 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc93)
      %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc44)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc44)
      cir.if %7 {
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc35)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc35)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc48)
      } else {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intBuffer", init] {alignment = 4 : i64} loc(#loc101)
          %9 = cir.const #cir.int<8> : !s32i loc(#loc52)
          cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc101)
          %10 = cir.cast(bitcast, %8 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc102)
          cir.store %10, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc103)
        } loc(#loc100)
      } loc(#loc99)
    } loc(#loc98)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc56)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc56)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc57)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc58)
    cir.return loc(#loc37)
  } loc(#loc95)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc105)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc63)
    cir.store %1, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc106)
    cir.scope {
      %5 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc79)
      %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc67)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc67)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intBuffer", init] {alignment = 4 : i64} loc(#loc110)
          %9 = cir.const #cir.int<8> : !s32i loc(#loc72)
          cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc110)
          %10 = cir.cast(bitcast, %8 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc111)
          cir.store %10, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc112)
        } loc(#loc109)
      } loc(#loc108)
    } loc(#loc107)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc76)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc76)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc77)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc78)
    cir.return loc(#loc60)
  } loc(#loc104)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE843_Type_Confusion/CWE843_Type_Confusion__char_05.c":0:0)
#loc1 = loc("CWE843_Type_Confusion__char_05.c":23:1)
#loc2 = loc("CWE843_Type_Confusion__char_05.c":23:25)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE843_Type_Confusion__char_05.c":28:1)
#loc6 = loc("CWE843_Type_Confusion__char_05.c":43:1)
#loc7 = loc("CWE843_Type_Confusion__char_05.c":30:5)
#loc8 = loc("CWE843_Type_Confusion__char_05.c":30:12)
#loc9 = loc("CWE843_Type_Confusion__char_05.c":32:12)
#loc10 = loc("CWE843_Type_Confusion__char_05.c":32:5)
#loc11 = loc("CWE843_Type_Confusion__char_05.c":33:5)
#loc12 = loc("CWE843_Type_Confusion__char_05.c":40:5)
#loc13 = loc("CWE843_Type_Confusion__char_05.c":33:8)
#loc14 = loc("CWE843_Type_Confusion__char_05.c":34:5)
#loc15 = loc("CWE843_Type_Confusion__char_05.c":35:9)
#loc16 = loc("CWE843_Type_Confusion__char_05.c":39:9)
#loc17 = loc("CWE843_Type_Confusion__char_05.c":37:13)
#loc18 = loc("CWE843_Type_Confusion__char_05.c":37:31)
#loc19 = loc("CWE843_Type_Confusion__char_05.c":38:20)
#loc20 = loc("CWE843_Type_Confusion__char_05.c":38:21)
#loc21 = loc("CWE843_Type_Confusion__char_05.c":38:13)
#loc22 = loc("CWE843_Type_Confusion__char_05.c":42:26)
#loc23 = loc("CWE843_Type_Confusion__char_05.c":42:18)
#loc24 = loc("CWE843_Type_Confusion__char_05.c":42:5)
#loc25 = loc("CWE843_Type_Confusion__char_05.c":90:1)
#loc26 = loc("CWE843_Type_Confusion__char_05.c":94:1)
#loc27 = loc("CWE843_Type_Confusion__char_05.c":92:5)
#loc28 = loc("CWE843_Type_Confusion__char_05.c":92:14)
#loc29 = loc("CWE843_Type_Confusion__char_05.c":93:5)
#loc30 = loc("CWE843_Type_Confusion__char_05.c":93:14)
#loc31 = loc("CWE843_Type_Confusion__char_05.c":24:1)
#loc32 = loc("CWE843_Type_Confusion__char_05.c":24:26)
#loc33 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc34 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc35 = loc("CWE843_Type_Confusion__char_05.c":58:19)
#loc36 = loc("CWE843_Type_Confusion__char_05.c":50:1)
#loc37 = loc("CWE843_Type_Confusion__char_05.c":70:1)
#loc38 = loc("CWE843_Type_Confusion__char_05.c":52:5)
#loc39 = loc("CWE843_Type_Confusion__char_05.c":52:12)
#loc40 = loc("CWE843_Type_Confusion__char_05.c":54:12)
#loc41 = loc("CWE843_Type_Confusion__char_05.c":54:5)
#loc42 = loc("CWE843_Type_Confusion__char_05.c":55:5)
#loc43 = loc("CWE843_Type_Confusion__char_05.c":67:5)
#loc44 = loc("CWE843_Type_Confusion__char_05.c":55:8)
#loc45 = loc("CWE843_Type_Confusion__char_05.c":56:5)
#loc46 = loc("CWE843_Type_Confusion__char_05.c":59:5)
#loc47 = loc("CWE843_Type_Confusion__char_05.c":61:5)
#loc48 = loc("CWE843_Type_Confusion__char_05.c":58:9)
#loc49 = loc("CWE843_Type_Confusion__char_05.c":62:9)
#loc50 = loc("CWE843_Type_Confusion__char_05.c":66:9)
#loc51 = loc("CWE843_Type_Confusion__char_05.c":64:13)
#loc52 = loc("CWE843_Type_Confusion__char_05.c":64:29)
#loc53 = loc("CWE843_Type_Confusion__char_05.c":65:20)
#loc54 = loc("CWE843_Type_Confusion__char_05.c":65:21)
#loc55 = loc("CWE843_Type_Confusion__char_05.c":65:13)
#loc56 = loc("CWE843_Type_Confusion__char_05.c":69:26)
#loc57 = loc("CWE843_Type_Confusion__char_05.c":69:18)
#loc58 = loc("CWE843_Type_Confusion__char_05.c":69:5)
#loc59 = loc("CWE843_Type_Confusion__char_05.c":73:1)
#loc60 = loc("CWE843_Type_Confusion__char_05.c":88:1)
#loc61 = loc("CWE843_Type_Confusion__char_05.c":75:5)
#loc62 = loc("CWE843_Type_Confusion__char_05.c":75:12)
#loc63 = loc("CWE843_Type_Confusion__char_05.c":77:12)
#loc64 = loc("CWE843_Type_Confusion__char_05.c":77:5)
#loc65 = loc("CWE843_Type_Confusion__char_05.c":78:5)
#loc66 = loc("CWE843_Type_Confusion__char_05.c":85:5)
#loc67 = loc("CWE843_Type_Confusion__char_05.c":78:8)
#loc68 = loc("CWE843_Type_Confusion__char_05.c":79:5)
#loc69 = loc("CWE843_Type_Confusion__char_05.c":80:9)
#loc70 = loc("CWE843_Type_Confusion__char_05.c":84:9)
#loc71 = loc("CWE843_Type_Confusion__char_05.c":82:13)
#loc72 = loc("CWE843_Type_Confusion__char_05.c":82:29)
#loc73 = loc("CWE843_Type_Confusion__char_05.c":83:20)
#loc74 = loc("CWE843_Type_Confusion__char_05.c":83:21)
#loc75 = loc("CWE843_Type_Confusion__char_05.c":83:13)
#loc76 = loc("CWE843_Type_Confusion__char_05.c":87:26)
#loc77 = loc("CWE843_Type_Confusion__char_05.c":87:18)
#loc78 = loc("CWE843_Type_Confusion__char_05.c":87:5)
#loc79 = loc(fused[#loc1, #loc2])
#loc80 = loc(fused[#loc3, #loc4])
#loc81 = loc(fused[#loc5, #loc6])
#loc82 = loc(fused[#loc7, #loc8])
#loc83 = loc(fused[#loc10, #loc9])
#loc84 = loc(fused[#loc11, #loc12])
#loc85 = loc(fused[#loc14, #loc12])
#loc86 = loc(fused[#loc15, #loc16])
#loc87 = loc(fused[#loc17, #loc18])
#loc88 = loc(fused[#loc19, #loc20])
#loc89 = loc(fused[#loc21, #loc20])
#loc90 = loc(fused[#loc25, #loc26])
#loc91 = loc(fused[#loc27, #loc28])
#loc92 = loc(fused[#loc29, #loc30])
#loc93 = loc(fused[#loc31, #loc32])
#loc94 = loc(fused[#loc33, #loc34])
#loc95 = loc(fused[#loc36, #loc37])
#loc96 = loc(fused[#loc38, #loc39])
#loc97 = loc(fused[#loc41, #loc40])
#loc98 = loc(fused[#loc42, #loc43])
#loc99 = loc(fused[#loc45, #loc46, #loc47, #loc43])
#loc100 = loc(fused[#loc49, #loc50])
#loc101 = loc(fused[#loc51, #loc52])
#loc102 = loc(fused[#loc53, #loc54])
#loc103 = loc(fused[#loc55, #loc54])
#loc104 = loc(fused[#loc59, #loc60])
#loc105 = loc(fused[#loc61, #loc62])
#loc106 = loc(fused[#loc64, #loc63])
#loc107 = loc(fused[#loc65, #loc66])
#loc108 = loc(fused[#loc68, #loc66])
#loc109 = loc(fused[#loc69, #loc70])
#loc110 = loc(fused[#loc71, #loc72])
#loc111 = loc(fused[#loc73, #loc74])
#loc112 = loc(fused[#loc75, #loc74])
