!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc137)
  cir.func no_proto @CWE758_Undefined_Behavior__struct_pointer_alloca_use_08_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc140)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc7)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc7)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc143)
          %4 = cir.const #cir.int<8> : !u64i loc(#loc13)
          %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc13)
          %6 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc144)
          %7 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc13)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc13)
          cir.store %8, %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc143)
          %9 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc15)
          %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc16)
          cir.store %10, %6 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc144)
          %11 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc17)
          %12 = cir.get_member %11[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc18)
          %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc19)
          cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc20)
          %14 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc21)
          %15 = cir.get_member %14[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc22)
          %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc23)
          cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc24)
        } loc(#loc142)
      } loc(#loc141)
    } loc(#loc139)
    cir.return loc(#loc4)
  } loc(#loc138)
  cir.func no_proto @CWE758_Undefined_Behavior__struct_pointer_alloca_use_08_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc146)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc27)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc147)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc29)
    cir.return loc(#loc26)
  } loc(#loc145)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc32)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc33)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc149)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    cir.return %2 : !s32i loc(#loc149)
  } loc(#loc148)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc37)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc151)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc152)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc155)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc46)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc46)
      cir.if %2 {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc37)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc37)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc51)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc158)
          %4 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc159)
          %5 = cir.const #cir.int<8> : !u64i loc(#loc57)
          %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc57)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc57)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc57)
          cir.store %8, %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc159)
          %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc58)
          %10 = cir.const #cir.int<8> : !u64i loc(#loc160)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc58)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc161)
          cir.store %12, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc162)
          cir.scope {
            %21 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc65)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc66)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc66)
            %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc164)
            cir.if %24 {
              %25 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc68)
              %26 = cir.const #cir.int<1> : !s32i loc(#loc69)
              %27 = cir.unary(minus, %26) nsw : !s32i, !s32i loc(#loc70)
              cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr1) loc(#loc68)
            } loc(#loc165)
          } loc(#loc163)
          %13 = cir.const #cir.int<5> : !s32i loc(#loc71)
          %14 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc72)
          %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc18)
          cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc166)
          %16 = cir.const #cir.int<6> : !s32i loc(#loc73)
          %17 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc74)
          %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc22)
          cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc167)
          %19 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc75)
          %20 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc76)
          cir.store %19, %20 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc168)
          cir.scope {
            %21 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc170)
            %22 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc81)
            %23 = cir.load %22 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc82)
            cir.store %23, %21 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc170)
            %24 = cir.load %21 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc83)
            %25 = cir.get_member %24[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc18)
            %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc84)
            cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc85)
            %27 = cir.load %21 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc86)
            %28 = cir.get_member %27[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc22)
            %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc87)
            cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc88)
          } loc(#loc169)
        } loc(#loc157)
      } loc(#loc156)
    } loc(#loc154)
    cir.return loc(#loc43)
  } loc(#loc153)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc90)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc91)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc172)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc172)
    cir.return %2 : !s32i loc(#loc172)
  } loc(#loc171)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc175)
      %1 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc97)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc97)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc178)
          %4 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc179)
          %5 = cir.const #cir.int<8> : !u64i loc(#loc105)
          %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc105)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc105)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc105)
          cir.store %8, %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc179)
          %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc106)
          %10 = cir.const #cir.int<8> : !u64i loc(#loc180)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc106)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc181)
          cir.store %12, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc182)
          cir.scope {
            %21 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc113)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc114)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc114)
            %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc184)
            cir.if %24 {
              %25 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc116)
              %26 = cir.const #cir.int<1> : !s32i loc(#loc117)
              %27 = cir.unary(minus, %26) nsw : !s32i, !s32i loc(#loc118)
              cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr1) loc(#loc116)
            } loc(#loc185)
          } loc(#loc183)
          %13 = cir.const #cir.int<5> : !s32i loc(#loc119)
          %14 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc120)
          %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc18)
          cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc186)
          %16 = cir.const #cir.int<6> : !s32i loc(#loc121)
          %17 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc122)
          %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc22)
          cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc187)
          %19 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc123)
          %20 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc124)
          cir.store %19, %20 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc188)
          cir.scope {
            %21 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc190)
            %22 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc129)
            %23 = cir.load %22 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc130)
            cir.store %23, %21 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc190)
            %24 = cir.load %21 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc131)
            %25 = cir.get_member %24[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc18)
            %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc132)
            cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc133)
            %27 = cir.load %21 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc134)
            %28 = cir.get_member %27[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc22)
            %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc135)
            cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc136)
          } loc(#loc189)
        } loc(#loc177)
      } loc(#loc176)
    } loc(#loc174)
    cir.return loc(#loc94)
  } loc(#loc173)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":33:1)
#loc4 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":44:1)
#loc5 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":35:5)
#loc6 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":43:5)
#loc7 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":35:8)
#loc8 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":35:26)
#loc9 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":36:5)
#loc10 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":37:9)
#loc11 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":42:9)
#loc12 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":38:13)
#loc13 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":38:60)
#loc14 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":39:13)
#loc15 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":39:37)
#loc16 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":39:36)
#loc17 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":40:26)
#loc18 = loc("../../testcasesupport/std_testcase.h":98:9)
#loc19 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":40:32)
#loc20 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":40:13)
#loc21 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":41:26)
#loc22 = loc("../../testcasesupport/std_testcase.h":99:9)
#loc23 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":41:32)
#loc24 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":41:13)
#loc25 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":101:1)
#loc26 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":105:1)
#loc27 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":103:5)
#loc28 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":103:11)
#loc29 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":104:5)
#loc30 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":104:11)
#loc31 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":21:1)
#loc32 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":24:1)
#loc33 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":23:12)
#loc34 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":23:5)
#loc35 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc36 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc37 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":56:19)
#loc38 = loc("/usr/include/stdlib.h":672:1)
#loc39 = loc("/usr/include/stdlib.h":672:45)
#loc40 = loc("/usr/include/stdlib.h":756:1)
#loc41 = loc("/usr/include/stdlib.h":756:70)
#loc42 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":51:1)
#loc43 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":76:1)
#loc44 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":53:5)
#loc45 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":75:5)
#loc46 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":53:8)
#loc47 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":53:27)
#loc48 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":54:5)
#loc49 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":57:5)
#loc50 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":59:5)
#loc51 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":56:9)
#loc52 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":60:9)
#loc53 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":74:9)
#loc54 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":61:13)
#loc55 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":61:29)
#loc56 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":62:13)
#loc57 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":62:60)
#loc58 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":64:37)
#loc59 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":64:44)
#loc60 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":64:64)
#loc61 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":64:65)
#loc62 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":64:13)
#loc63 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":65:13)
#loc64 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":65:41)
#loc65 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":65:17)
#loc66 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":65:25)
#loc67 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":65:31)
#loc68 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":65:32)
#loc69 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":65:38)
#loc70 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":65:37)
#loc71 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":66:28)
#loc72 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":66:13)
#loc73 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":67:28)
#loc74 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":67:13)
#loc75 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":68:24)
#loc76 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":68:14)
#loc77 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":68:13)
#loc78 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":69:13)
#loc79 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":73:13)
#loc80 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":70:17)
#loc81 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":70:41)
#loc82 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":70:40)
#loc83 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":71:30)
#loc84 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":71:36)
#loc85 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":71:17)
#loc86 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":72:30)
#loc87 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":72:36)
#loc88 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":72:17)
#loc89 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":26:1)
#loc90 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":29:1)
#loc91 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":28:12)
#loc92 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":28:5)
#loc93 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":79:1)
#loc94 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":99:1)
#loc95 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":81:5)
#loc96 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":98:5)
#loc97 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":81:8)
#loc98 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":81:26)
#loc99 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":82:5)
#loc100 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":83:9)
#loc101 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":97:9)
#loc102 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":84:13)
#loc103 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":84:29)
#loc104 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":85:13)
#loc105 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":85:60)
#loc106 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":87:37)
#loc107 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":87:44)
#loc108 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":87:64)
#loc109 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":87:65)
#loc110 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":87:13)
#loc111 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":88:13)
#loc112 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":88:41)
#loc113 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":88:17)
#loc114 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":88:25)
#loc115 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":88:31)
#loc116 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":88:32)
#loc117 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":88:38)
#loc118 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":88:37)
#loc119 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":89:28)
#loc120 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":89:13)
#loc121 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":90:28)
#loc122 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":90:13)
#loc123 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":91:24)
#loc124 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":91:14)
#loc125 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":91:13)
#loc126 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":92:13)
#loc127 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":96:13)
#loc128 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":93:17)
#loc129 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":93:41)
#loc130 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":93:40)
#loc131 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":94:30)
#loc132 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":94:36)
#loc133 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":94:17)
#loc134 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":95:30)
#loc135 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":95:36)
#loc136 = loc("CWE758_Undefined_Behavior__struct_pointer_alloca_use_08.c":95:17)
#loc137 = loc(fused[#loc1, #loc2])
#loc138 = loc(fused[#loc3, #loc4])
#loc139 = loc(fused[#loc5, #loc6])
#loc140 = loc(fused[#loc7, #loc8])
#loc141 = loc(fused[#loc9, #loc6])
#loc142 = loc(fused[#loc10, #loc11])
#loc143 = loc(fused[#loc12, #loc13])
#loc144 = loc(fused[#loc14, #loc15])
#loc145 = loc(fused[#loc25, #loc26])
#loc146 = loc(fused[#loc27, #loc28])
#loc147 = loc(fused[#loc29, #loc30])
#loc148 = loc(fused[#loc31, #loc32])
#loc149 = loc(fused[#loc34, #loc33])
#loc150 = loc(fused[#loc35, #loc36])
#loc151 = loc(fused[#loc38, #loc39])
#loc152 = loc(fused[#loc40, #loc41])
#loc153 = loc(fused[#loc42, #loc43])
#loc154 = loc(fused[#loc44, #loc45])
#loc155 = loc(fused[#loc46, #loc47])
#loc156 = loc(fused[#loc48, #loc49, #loc50, #loc45])
#loc157 = loc(fused[#loc52, #loc53])
#loc158 = loc(fused[#loc54, #loc55])
#loc159 = loc(fused[#loc56, #loc57])
#loc160 = loc(fused[#loc59, #loc60])
#loc161 = loc(fused[#loc58, #loc61])
#loc162 = loc(fused[#loc62, #loc61])
#loc163 = loc(fused[#loc63, #loc64])
#loc164 = loc(fused[#loc65, #loc66])
#loc165 = loc(fused[#loc67, #loc64])
#loc166 = loc(fused[#loc72, #loc71])
#loc167 = loc(fused[#loc74, #loc73])
#loc168 = loc(fused[#loc77, #loc75])
#loc169 = loc(fused[#loc78, #loc79])
#loc170 = loc(fused[#loc80, #loc81])
#loc171 = loc(fused[#loc89, #loc90])
#loc172 = loc(fused[#loc92, #loc91])
#loc173 = loc(fused[#loc93, #loc94])
#loc174 = loc(fused[#loc95, #loc96])
#loc175 = loc(fused[#loc97, #loc98])
#loc176 = loc(fused[#loc99, #loc96])
#loc177 = loc(fused[#loc100, #loc101])
#loc178 = loc(fused[#loc102, #loc103])
#loc179 = loc(fused[#loc104, #loc105])
#loc180 = loc(fused[#loc107, #loc108])
#loc181 = loc(fused[#loc106, #loc109])
#loc182 = loc(fused[#loc110, #loc109])
#loc183 = loc(fused[#loc111, #loc112])
#loc184 = loc(fused[#loc113, #loc114])
#loc185 = loc(fused[#loc115, #loc112])
#loc186 = loc(fused[#loc120, #loc119])
#loc187 = loc(fused[#loc122, #loc121])
#loc188 = loc(fused[#loc125, #loc123])
#loc189 = loc(fused[#loc126, #loc127])
#loc190 = loc(fused[#loc128, #loc129])
