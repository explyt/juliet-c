!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strdup(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc157)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc158)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc5)
  cir.func private  @_ZdlPvm(!cir.ptr<!void>, !u64i) extra(#fn_attr) loc(#loc159)
  cir.func  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_153badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc161)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc12)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc162)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc16)
      cir.switch (%2 : !s32i) [
      case (equal, 6) {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc165)
          %4 = cir.const #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc165)
          cir.store %4, %3 : !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>> loc(#loc165)
          %5 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc21)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc22)
          %7 = cir.call @strdup(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc21)
          cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc166)
        } loc(#loc164)
        cir.break loc(#loc25)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc5)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc5)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc26)
        cir.break loc(#loc27)
      }
      ] loc(#loc14)
    } loc(#loc163)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc30)
      cir.switch (%2 : !s32i) [
      case (equal, 7) {
        %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
        %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc31)
        %5 = cir.const #cir.int<1> : !u64i loc(#loc32)
        cir.call @_ZdlPvm(%4, %5) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc32)
        cir.break loc(#loc33)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc34)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc34)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc35)
        cir.break loc(#loc36)
      }
      ] loc(#loc28)
    } loc(#loc167)
    cir.return loc(#loc9)
  } loc(#loc160)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc168)
  cir.func internal private  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc170)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc43)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc171)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc47)
      cir.switch (%2 : !s32i) [
      case (equal, 6) {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc174)
          %4 = cir.const #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc174)
          cir.store %4, %3 : !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>> loc(#loc174)
          %5 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc52)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc53)
          %7 = cir.call @strdup(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc52)
          cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc175)
        } loc(#loc173)
        cir.break loc(#loc56)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc57)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc57)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc58)
        cir.break loc(#loc59)
      }
      ] loc(#loc45)
    } loc(#loc172)
    cir.scope {
      %2 = cir.const #cir.int<8> : !s32i loc(#loc62)
      cir.switch (%2 : !s32i) [
      case (equal, 7) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc63)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc63)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc64)
        cir.break loc(#loc65)
      },
      case (default) {
        %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc66)
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc67)
        cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc66)
        cir.break loc(#loc68)
      }
      ] loc(#loc60)
    } loc(#loc176)
    cir.return loc(#loc40)
  } loc(#loc169)
  cir.func internal private  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc178)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc73)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc179)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc77)
      cir.switch (%2 : !s32i) [
      case (equal, 6) {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc182)
          %4 = cir.const #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc182)
          cir.store %4, %3 : !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>> loc(#loc182)
          %5 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc82)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc83)
          %7 = cir.call @strdup(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc82)
          cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc183)
        } loc(#loc181)
        cir.break loc(#loc86)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc87)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc87)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc88)
        cir.break loc(#loc89)
      }
      ] loc(#loc75)
    } loc(#loc180)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc92)
      cir.switch (%2 : !s32i) [
      case (equal, 7) {
        %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc93)
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc94)
        cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc93)
        cir.break loc(#loc95)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc96)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc96)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc97)
        cir.break loc(#loc98)
      }
      ] loc(#loc90)
    } loc(#loc184)
    cir.return loc(#loc70)
  } loc(#loc177)
  cir.func private  @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc185)
  cir.func internal private  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc187)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc105)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc188)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc109)
      cir.switch (%2 : !s32i) [
      case (equal, 6) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc110)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc110)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc111)
        cir.break loc(#loc112)
      },
      case (default) {
        %3 = cir.const #cir.int<1> : !u64i loc(#loc190)
        %4 = cir.call @_Znwm(%3) : (!u64i) -> !cir.ptr<!void> loc(#loc115)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc190)
        cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc191)
        cir.break loc(#loc117)
      }
      ] loc(#loc107)
    } loc(#loc189)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc120)
      cir.switch (%2 : !s32i) [
      case (equal, 7) {
        %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
        %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc121)
        %5 = cir.const #cir.int<1> : !u64i loc(#loc115)
        cir.call @_ZdlPvm(%4, %5) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc115)
        cir.break loc(#loc122)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc123)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc123)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc124)
        cir.break loc(#loc125)
      }
      ] loc(#loc118)
    } loc(#loc192)
    cir.return loc(#loc102)
  } loc(#loc186)
  cir.func internal private  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc194)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc130)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc195)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc134)
      cir.switch (%2 : !s32i) [
      case (equal, 6) {
        %3 = cir.const #cir.int<1> : !u64i loc(#loc197)
        %4 = cir.call @_Znwm(%3) : (!u64i) -> !cir.ptr<!void> loc(#loc137)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc197)
        cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc198)
        cir.break loc(#loc139)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc140)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc140)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc141)
        cir.break loc(#loc142)
      }
      ] loc(#loc132)
    } loc(#loc196)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc145)
      cir.switch (%2 : !s32i) [
      case (equal, 7) {
        %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
        %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc146)
        %5 = cir.const #cir.int<1> : !u64i loc(#loc137)
        cir.call @_ZdlPvm(%4, %5) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc137)
        cir.break loc(#loc147)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc148)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc148)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc149)
        cir.break loc(#loc150)
      }
      ] loc(#loc143)
    } loc(#loc199)
    cir.return loc(#loc127)
  } loc(#loc193)
  cir.func  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_154goodEv() extra(#fn_attr1) {
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15L8goodB2G1Ev() : () -> () loc(#loc153)
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15L8goodB2G2Ev() : () -> () loc(#loc154)
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15L8goodG2B1Ev() : () -> () loc(#loc155)
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15L8goodG2B2Ev() : () -> () loc(#loc156)
    cir.return loc(#loc152)
  } loc(#loc200)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":0:0)
#loc1 = loc("/usr/include/string.h":187:1)
#loc2 = loc("/usr/include/string.h":188:35)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":42:19)
#loc6 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":140:1)
#loc7 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":141:41)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":26:1)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":57:1)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":28:5)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":28:12)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":30:12)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":30:5)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":31:5)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":44:5)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":31:12)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":34:5)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":38:5)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":35:9)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":35:27)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":37:16)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":37:23)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":37:9)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":37:31)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":39:5)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":42:9)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":43:9)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":45:5)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":56:5)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":45:12)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":50:16)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":26:6)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":51:9)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":54:19)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":54:9)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":55:9)
#loc37 = loc("/usr/include/stdlib.h":687:1)
#loc38 = loc("/usr/include/stdlib.h":687:32)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":64:1)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":94:1)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":66:5)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":66:12)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":68:12)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":68:5)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":69:5)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":82:5)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":69:12)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":72:5)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":76:5)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":73:9)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":73:27)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":75:16)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":75:23)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":75:9)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":75:31)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":77:5)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":80:19)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":80:9)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":81:9)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":83:5)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":93:5)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":83:12)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":87:19)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":87:9)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":88:9)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":91:9)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":91:14)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":92:9)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":97:1)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":127:1)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":99:5)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":99:12)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":101:12)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":101:5)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":102:5)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":115:5)
#loc77 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":102:12)
#loc78 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":105:5)
#loc79 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":109:5)
#loc80 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":106:9)
#loc81 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":106:27)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":108:16)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":108:23)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":108:9)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":108:31)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":110:5)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":113:19)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":113:9)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":114:9)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":116:5)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":126:5)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":116:12)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":120:9)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":120:14)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":121:9)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":124:19)
#loc97 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":124:9)
#loc98 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":125:9)
#loc99 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc100 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc101 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":130:1)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":158:1)
#loc103 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":132:5)
#loc104 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":132:12)
#loc105 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":134:12)
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":134:5)
#loc107 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":135:5)
#loc108 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":145:5)
#loc109 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":135:12)
#loc110 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":139:19)
#loc111 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":139:9)
#loc112 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":140:9)
#loc113 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":143:16)
#loc114 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":143:20)
#loc115 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":130:13)
#loc116 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":143:9)
#loc117 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":144:9)
#loc118 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":146:5)
#loc119 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":157:5)
#loc120 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":146:12)
#loc121 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":151:16)
#loc122 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":152:9)
#loc123 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":155:19)
#loc124 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":155:9)
#loc125 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":156:9)
#loc126 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":161:1)
#loc127 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":189:1)
#loc128 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":163:5)
#loc129 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":163:12)
#loc130 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":165:12)
#loc131 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":165:5)
#loc132 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":166:5)
#loc133 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":176:5)
#loc134 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":166:12)
#loc135 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":170:16)
#loc136 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":170:20)
#loc137 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":161:13)
#loc138 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":170:9)
#loc139 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":171:9)
#loc140 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":174:19)
#loc141 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":174:9)
#loc142 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":175:9)
#loc143 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":177:5)
#loc144 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":188:5)
#loc145 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":177:12)
#loc146 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":182:16)
#loc147 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":183:9)
#loc148 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":186:19)
#loc149 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":186:9)
#loc150 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":187:9)
#loc151 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":191:1)
#loc152 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":197:1)
#loc153 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":193:5)
#loc154 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":194:5)
#loc155 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":195:5)
#loc156 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_15.cpp":196:5)
#loc157 = loc(fused[#loc1, #loc2])
#loc158 = loc(fused[#loc3, #loc4])
#loc159 = loc(fused[#loc6, #loc7])
#loc160 = loc(fused[#loc8, #loc9])
#loc161 = loc(fused[#loc10, #loc11])
#loc162 = loc(fused[#loc13, #loc12])
#loc163 = loc(fused[#loc14, #loc15])
#loc164 = loc(fused[#loc17, #loc18])
#loc165 = loc(fused[#loc19, #loc20])
#loc166 = loc(fused[#loc23, #loc24])
#loc167 = loc(fused[#loc28, #loc29])
#loc168 = loc(fused[#loc37, #loc38])
#loc169 = loc(fused[#loc39, #loc40])
#loc170 = loc(fused[#loc41, #loc42])
#loc171 = loc(fused[#loc44, #loc43])
#loc172 = loc(fused[#loc45, #loc46])
#loc173 = loc(fused[#loc48, #loc49])
#loc174 = loc(fused[#loc50, #loc51])
#loc175 = loc(fused[#loc54, #loc55])
#loc176 = loc(fused[#loc60, #loc61])
#loc177 = loc(fused[#loc69, #loc70])
#loc178 = loc(fused[#loc71, #loc72])
#loc179 = loc(fused[#loc74, #loc73])
#loc180 = loc(fused[#loc75, #loc76])
#loc181 = loc(fused[#loc78, #loc79])
#loc182 = loc(fused[#loc80, #loc81])
#loc183 = loc(fused[#loc84, #loc85])
#loc184 = loc(fused[#loc90, #loc91])
#loc185 = loc(fused[#loc99, #loc100])
#loc186 = loc(fused[#loc101, #loc102])
#loc187 = loc(fused[#loc103, #loc104])
#loc188 = loc(fused[#loc106, #loc105])
#loc189 = loc(fused[#loc107, #loc108])
#loc190 = loc(fused[#loc113, #loc114])
#loc191 = loc(fused[#loc116, #loc114])
#loc192 = loc(fused[#loc118, #loc119])
#loc193 = loc(fused[#loc126, #loc127])
#loc194 = loc(fused[#loc128, #loc129])
#loc195 = loc(fused[#loc131, #loc130])
#loc196 = loc(fused[#loc132, #loc133])
#loc197 = loc(fused[#loc135, #loc136])
#loc198 = loc(fused[#loc138, #loc136])
#loc199 = loc(fused[#loc143, #loc144])
#loc200 = loc(fused[#loc151, #loc152])
