!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc86 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":145:10)
#loc87 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":145:14)
#loc88 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":145:20)
#loc89 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":145:32)
#loc265 = loc(fused[#loc86, #loc87])
#loc266 = loc(fused[#loc88, #loc89])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__malloc_char_cpy_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc234)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc235)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc236)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc237)
  cir.func no_proto @CWE124_Buffer_Underwrite__malloc_char_cpy_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc239)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc240)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc242)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc17)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc17)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc245)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc24)
          %7 = cir.const #cir.int<100> : !s32i loc(#loc25)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc25)
          %9 = cir.const #cir.int<1> : !u64i loc(#loc246)
          %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc247)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc24)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc248)
          cir.store %12, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc245)
          cir.scope {
            %31 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
            %32 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc31)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc31)
            %34 = cir.cmp(eq, %31, %33) : !cir.ptr<!s8i>, !cir.bool loc(#loc250)
            cir.if %34 {
              %35 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc33)
              %36 = cir.const #cir.int<1> : !s32i loc(#loc34)
              %37 = cir.unary(minus, %36) : !s32i, !s32i loc(#loc35)
              cir.call @exit(%37) : (!s32i) -> () extra(#fn_attr) loc(#loc33)
            } loc(#loc251)
          } loc(#loc249)
          %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc36)
          %15 = cir.const #cir.int<65> : !s32i loc(#loc37)
          %16 = cir.const #cir.int<100> : !s32i loc(#loc38)
          %17 = cir.const #cir.int<1> : !s32i loc(#loc39)
          %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc38)
          %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc38)
          cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc252)
          %20 = cir.const #cir.int<0> : !s32i loc(#loc42)
          %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc42)
          %22 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
          %23 = cir.const #cir.int<100> : !s32i loc(#loc44)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc45)
          %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc44)
          %26 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc46)
          cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc253)
          %27 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
          %28 = cir.const #cir.int<8> : !s32i loc(#loc48)
          %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc48)
          %30 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc49)
          cir.store %30, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc254)
        } loc(#loc244)
      } loc(#loc243)
    } loc(#loc241)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc256)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc55)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc55)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc56)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc57)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc58)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc57)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc57)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc257)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc61)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc61)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc62)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc63)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc62)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc64)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc64)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc258)
      %17 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc65)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
      %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc67)
      %20 = cir.call @strcpy(%18, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc65)
      %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
      cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    } loc(#loc255)
    cir.return loc(#loc10)
  } loc(#loc238)
  cir.func no_proto @CWE124_Buffer_Underwrite__malloc_char_cpy_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc260)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc72)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc261)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc74)
    cir.return loc(#loc71)
  } loc(#loc259)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc262)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc263)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc80)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc81)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc82)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc83)
  cir.func @main(%arg0: !s32i loc(fused[#loc86, #loc87]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc88, #loc89])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc265)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc266)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc85)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc90)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc90)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc91)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc92)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc92)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc93)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc80)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %8 = cir.get_global @CWE124_Buffer_Underwrite__malloc_char_cpy_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc267)
    cir.call @CWE124_Buffer_Underwrite__malloc_char_cpy_08_good() : () -> () loc(#loc95)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc81)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc82)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    %13 = cir.get_global @CWE124_Buffer_Underwrite__malloc_char_cpy_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc268)
    cir.call @CWE124_Buffer_Underwrite__malloc_char_cpy_08_bad() : () -> () loc(#loc99)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc83)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc102)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc269)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc269)
    cir.return %17 : !s32i loc(#loc269)
  } loc(#loc264)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc105)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc106)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc271)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc271)
    cir.return %2 : !s32i loc(#loc271)
  } loc(#loc270)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc108)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc273)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc113)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc274)
    cir.scope {
      %2 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc276)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc117)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc117)
      cir.if %4 {
        %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc108)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc108)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc122)
      } else {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc279)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc127)
          %7 = cir.const #cir.int<100> : !s32i loc(#loc128)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc128)
          %9 = cir.const #cir.int<1> : !u64i loc(#loc280)
          %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc281)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc127)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc282)
          cir.store %12, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc279)
          cir.scope {
            %28 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
            %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc134)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc134)
            %31 = cir.cmp(eq, %28, %30) : !cir.ptr<!s8i>, !cir.bool loc(#loc284)
            cir.if %31 {
              %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc136)
              %33 = cir.const #cir.int<1> : !s32i loc(#loc137)
              %34 = cir.unary(minus, %33) : !s32i, !s32i loc(#loc138)
              cir.call @exit(%34) : (!s32i) -> () extra(#fn_attr) loc(#loc136)
            } loc(#loc285)
          } loc(#loc283)
          %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc139)
          %15 = cir.const #cir.int<65> : !s32i loc(#loc140)
          %16 = cir.const #cir.int<100> : !s32i loc(#loc141)
          %17 = cir.const #cir.int<1> : !s32i loc(#loc142)
          %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc141)
          %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc141)
          cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc286)
          %20 = cir.const #cir.int<0> : !s32i loc(#loc145)
          %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc145)
          %22 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
          %23 = cir.const #cir.int<100> : !s32i loc(#loc147)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc148)
          %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc147)
          %26 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc149)
          cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc287)
          %27 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
          cir.store %27, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc288)
        } loc(#loc278)
      } loc(#loc277)
    } loc(#loc275)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc290)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc156)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc156)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc157)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc158)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc159)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc158)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc158)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc291)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc162)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc162)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc163)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc164)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc163)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc165)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc165)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc292)
      %17 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc166)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
      %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc168)
      %20 = cir.call @strcpy(%18, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc166)
      %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
      cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc170)
    } loc(#loc289)
    cir.return loc(#loc110)
  } loc(#loc272)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc172)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc173)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc294)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc294)
    cir.return %2 : !s32i loc(#loc294)
  } loc(#loc293)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc296)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc179)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc297)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc299)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc183)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc183)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc302)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc190)
          %7 = cir.const #cir.int<100> : !s32i loc(#loc191)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc191)
          %9 = cir.const #cir.int<1> : !u64i loc(#loc303)
          %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc304)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc190)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc305)
          cir.store %12, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc302)
          cir.scope {
            %28 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc196)
            %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc197)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc197)
            %31 = cir.cmp(eq, %28, %30) : !cir.ptr<!s8i>, !cir.bool loc(#loc307)
            cir.if %31 {
              %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc199)
              %33 = cir.const #cir.int<1> : !s32i loc(#loc200)
              %34 = cir.unary(minus, %33) : !s32i, !s32i loc(#loc201)
              cir.call @exit(%34) : (!s32i) -> () extra(#fn_attr) loc(#loc199)
            } loc(#loc308)
          } loc(#loc306)
          %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc202)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc202)
          %15 = cir.const #cir.int<65> : !s32i loc(#loc203)
          %16 = cir.const #cir.int<100> : !s32i loc(#loc204)
          %17 = cir.const #cir.int<1> : !s32i loc(#loc205)
          %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc204)
          %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc204)
          cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc309)
          %20 = cir.const #cir.int<0> : !s32i loc(#loc208)
          %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc208)
          %22 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc209)
          %23 = cir.const #cir.int<100> : !s32i loc(#loc210)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc211)
          %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc210)
          %26 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc212)
          cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc310)
          %27 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc213)
          cir.store %27, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc311)
        } loc(#loc301)
      } loc(#loc300)
    } loc(#loc298)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc313)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc219)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc219)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc220)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc221)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc222)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc221)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc221)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc314)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc225)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc225)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc226)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc227)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc226)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc228)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc228)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc315)
      %17 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc229)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc230)
      %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc231)
      %20 = cir.call @strcpy(%18, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc229)
      %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc232)
      cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc233)
    } loc(#loc312)
    cir.return loc(#loc176)
  } loc(#loc295)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":37:1)
#loc10 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":62:1)
#loc11 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":39:5)
#loc12 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":39:12)
#loc13 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":40:12)
#loc14 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":40:5)
#loc15 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":41:5)
#loc16 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":51:5)
#loc17 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":41:8)
#loc18 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":41:26)
#loc19 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":42:5)
#loc20 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":43:9)
#loc21 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":50:9)
#loc22 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":44:13)
#loc23 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":44:64)
#loc24 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":44:41)
#loc25 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":44:48)
#loc26 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":44:52)
#loc27 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":44:63)
#loc28 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":45:13)
#loc29 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":45:47)
#loc30 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":45:17)
#loc31 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":45:31)
#loc32 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":45:37)
#loc33 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":45:38)
#loc34 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":45:44)
#loc35 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":45:43)
#loc36 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":46:20)
#loc37 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":46:32)
#loc38 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":46:37)
#loc39 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":46:41)
#loc40 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":46:13)
#loc41 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":46:42)
#loc42 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":47:33)
#loc43 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":47:13)
#loc44 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":47:24)
#loc45 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":47:28)
#loc46 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":47:29)
#loc47 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":49:20)
#loc48 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":49:33)
#loc49 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":49:31)
#loc50 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":49:13)
#loc51 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":52:5)
#loc52 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":61:5)
#loc53 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":53:9)
#loc54 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":53:24)
#loc55 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":54:16)
#loc56 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":54:24)
#loc57 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":54:29)
#loc58 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":54:33)
#loc59 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":54:9)
#loc60 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":54:34)
#loc61 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":55:25)
#loc62 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":55:16)
#loc63 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":55:20)
#loc64 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":55:9)
#loc65 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":57:9)
#loc66 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":57:16)
#loc67 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":57:22)
#loc68 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":58:19)
#loc69 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":58:9)
#loc70 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":129:1)
#loc71 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":133:1)
#loc72 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":131:5)
#loc73 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":131:14)
#loc74 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":132:5)
#loc75 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":132:14)
#loc76 = loc("/usr/include/stdlib.h":575:1)
#loc77 = loc("/usr/include/stdlib.h":575:41)
#loc78 = loc("/usr/include/time.h":76:1)
#loc79 = loc("/usr/include/time.h":76:38)
#loc80 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":150:15)
#loc81 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":152:15)
#loc82 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":155:15)
#loc83 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":157:15)
#loc84 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":145:1)
#loc85 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":160:1)
#loc90 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":146:1)
#loc91 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":148:27)
#loc92 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":148:22)
#loc93 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":148:5)
#loc94 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":150:5)
#loc95 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":151:5)
#loc96 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":151:55)
#loc97 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":152:5)
#loc98 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":155:5)
#loc99 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":156:5)
#loc100 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":156:54)
#loc101 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":157:5)
#loc102 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":159:12)
#loc103 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":159:5)
#loc104 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":25:1)
#loc105 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":28:1)
#loc106 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":27:12)
#loc107 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":27:5)
#loc108 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":76:19)
#loc109 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":69:1)
#loc110 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":99:1)
#loc111 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":71:5)
#loc112 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":71:12)
#loc113 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":72:12)
#loc114 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":72:5)
#loc115 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":73:5)
#loc116 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":88:5)
#loc117 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":73:8)
#loc118 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":73:27)
#loc119 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":74:5)
#loc120 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":77:5)
#loc121 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":79:5)
#loc122 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":76:9)
#loc123 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":80:9)
#loc124 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":87:9)
#loc125 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":81:13)
#loc126 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":81:64)
#loc127 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":81:41)
#loc128 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":81:48)
#loc129 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":81:52)
#loc130 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":81:63)
#loc131 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":82:13)
#loc132 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":82:47)
#loc133 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":82:17)
#loc134 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":82:31)
#loc135 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":82:37)
#loc136 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":82:38)
#loc137 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":82:44)
#loc138 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":82:43)
#loc139 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":83:20)
#loc140 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":83:32)
#loc141 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":83:37)
#loc142 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":83:41)
#loc143 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":83:13)
#loc144 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":83:42)
#loc145 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":84:33)
#loc146 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":84:13)
#loc147 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":84:24)
#loc148 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":84:28)
#loc149 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":84:29)
#loc150 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":86:20)
#loc151 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":86:13)
#loc152 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":89:5)
#loc153 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":98:5)
#loc154 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":90:9)
#loc155 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":90:24)
#loc156 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":91:16)
#loc157 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":91:24)
#loc158 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":91:29)
#loc159 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":91:33)
#loc160 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":91:9)
#loc161 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":91:34)
#loc162 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":92:25)
#loc163 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":92:16)
#loc164 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":92:20)
#loc165 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":92:9)
#loc166 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":94:9)
#loc167 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":94:16)
#loc168 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":94:22)
#loc169 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":95:19)
#loc170 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":95:9)
#loc171 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":30:1)
#loc172 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":33:1)
#loc173 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":32:12)
#loc174 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":32:5)
#loc175 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":102:1)
#loc176 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":127:1)
#loc177 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":104:5)
#loc178 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":104:12)
#loc179 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":105:12)
#loc180 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":105:5)
#loc181 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":106:5)
#loc182 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":116:5)
#loc183 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":106:8)
#loc184 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":106:26)
#loc185 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":107:5)
#loc186 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":108:9)
#loc187 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":115:9)
#loc188 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":109:13)
#loc189 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":109:64)
#loc190 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":109:41)
#loc191 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":109:48)
#loc192 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":109:52)
#loc193 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":109:63)
#loc194 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":110:13)
#loc195 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":110:47)
#loc196 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":110:17)
#loc197 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":110:31)
#loc198 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":110:37)
#loc199 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":110:38)
#loc200 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":110:44)
#loc201 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":110:43)
#loc202 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":111:20)
#loc203 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":111:32)
#loc204 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":111:37)
#loc205 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":111:41)
#loc206 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":111:13)
#loc207 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":111:42)
#loc208 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":112:33)
#loc209 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":112:13)
#loc210 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":112:24)
#loc211 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":112:28)
#loc212 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":112:29)
#loc213 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":114:20)
#loc214 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":114:13)
#loc215 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":117:5)
#loc216 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":126:5)
#loc217 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":118:9)
#loc218 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":118:24)
#loc219 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":119:16)
#loc220 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":119:24)
#loc221 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":119:29)
#loc222 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":119:33)
#loc223 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":119:9)
#loc224 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":119:34)
#loc225 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":120:25)
#loc226 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":120:16)
#loc227 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":120:20)
#loc228 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":120:9)
#loc229 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":122:9)
#loc230 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":122:16)
#loc231 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":122:22)
#loc232 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":123:19)
#loc233 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_08.c":123:9)
#loc234 = loc(fused[#loc1, #loc2])
#loc235 = loc(fused[#loc3, #loc4])
#loc236 = loc(fused[#loc5, #loc6])
#loc237 = loc(fused[#loc7, #loc8])
#loc238 = loc(fused[#loc9, #loc10])
#loc239 = loc(fused[#loc11, #loc12])
#loc240 = loc(fused[#loc14, #loc13])
#loc241 = loc(fused[#loc15, #loc16])
#loc242 = loc(fused[#loc17, #loc18])
#loc243 = loc(fused[#loc19, #loc16])
#loc244 = loc(fused[#loc20, #loc21])
#loc245 = loc(fused[#loc22, #loc23])
#loc246 = loc(fused[#loc26, #loc27])
#loc247 = loc(fused[#loc25, #loc27])
#loc248 = loc(fused[#loc24, #loc23])
#loc249 = loc(fused[#loc28, #loc29])
#loc250 = loc(fused[#loc30, #loc31])
#loc251 = loc(fused[#loc32, #loc29])
#loc252 = loc(fused[#loc40, #loc41])
#loc253 = loc(fused[#loc43, #loc42])
#loc254 = loc(fused[#loc50, #loc48])
#loc255 = loc(fused[#loc51, #loc52])
#loc256 = loc(fused[#loc53, #loc54])
#loc257 = loc(fused[#loc59, #loc60])
#loc258 = loc(fused[#loc64, #loc61])
#loc259 = loc(fused[#loc70, #loc71])
#loc260 = loc(fused[#loc72, #loc73])
#loc261 = loc(fused[#loc74, #loc75])
#loc262 = loc(fused[#loc76, #loc77])
#loc263 = loc(fused[#loc78, #loc79])
#loc264 = loc(fused[#loc84, #loc85])
#loc267 = loc(fused[#loc95, #loc96])
#loc268 = loc(fused[#loc99, #loc100])
#loc269 = loc(fused[#loc103, #loc102])
#loc270 = loc(fused[#loc104, #loc105])
#loc271 = loc(fused[#loc107, #loc106])
#loc272 = loc(fused[#loc109, #loc110])
#loc273 = loc(fused[#loc111, #loc112])
#loc274 = loc(fused[#loc114, #loc113])
#loc275 = loc(fused[#loc115, #loc116])
#loc276 = loc(fused[#loc117, #loc118])
#loc277 = loc(fused[#loc119, #loc120, #loc121, #loc116])
#loc278 = loc(fused[#loc123, #loc124])
#loc279 = loc(fused[#loc125, #loc126])
#loc280 = loc(fused[#loc129, #loc130])
#loc281 = loc(fused[#loc128, #loc130])
#loc282 = loc(fused[#loc127, #loc126])
#loc283 = loc(fused[#loc131, #loc132])
#loc284 = loc(fused[#loc133, #loc134])
#loc285 = loc(fused[#loc135, #loc132])
#loc286 = loc(fused[#loc143, #loc144])
#loc287 = loc(fused[#loc146, #loc145])
#loc288 = loc(fused[#loc151, #loc150])
#loc289 = loc(fused[#loc152, #loc153])
#loc290 = loc(fused[#loc154, #loc155])
#loc291 = loc(fused[#loc160, #loc161])
#loc292 = loc(fused[#loc165, #loc162])
#loc293 = loc(fused[#loc171, #loc172])
#loc294 = loc(fused[#loc174, #loc173])
#loc295 = loc(fused[#loc175, #loc176])
#loc296 = loc(fused[#loc177, #loc178])
#loc297 = loc(fused[#loc180, #loc179])
#loc298 = loc(fused[#loc181, #loc182])
#loc299 = loc(fused[#loc183, #loc184])
#loc300 = loc(fused[#loc185, #loc182])
#loc301 = loc(fused[#loc186, #loc187])
#loc302 = loc(fused[#loc188, #loc189])
#loc303 = loc(fused[#loc192, #loc193])
#loc304 = loc(fused[#loc191, #loc193])
#loc305 = loc(fused[#loc190, #loc189])
#loc306 = loc(fused[#loc194, #loc195])
#loc307 = loc(fused[#loc196, #loc197])
#loc308 = loc(fused[#loc198, #loc195])
#loc309 = loc(fused[#loc206, #loc207])
#loc310 = loc(fused[#loc209, #loc208])
#loc311 = loc(fused[#loc214, #loc213])
#loc312 = loc(fused[#loc215, #loc216])
#loc313 = loc(fused[#loc217, #loc218])
#loc314 = loc(fused[#loc223, #loc224])
#loc315 = loc(fused[#loc228, #loc225])
