!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc26 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":63:25)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":63:32)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":104:48)
#loc202 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":166:30)
#loc203 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":166:37)
#loc252 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":201:30)
#loc253 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":201:37)
#loc312 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":249:10)
#loc313 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":249:14)
#loc314 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":249:20)
#loc315 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":249:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc340 = loc(fused[#loc26, #loc27])
#loc409 = loc(fused[#loc202, #loc203])
#loc428 = loc(fused[#loc252, #loc253])
#loc450 = loc(fused[#loc312, #loc313])
#loc451 = loc(fused[#loc314, #loc315])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const._ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_21L8goodG2B2Ev.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc328)
  cir.global "private" constant cir_private @__const._ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_21L8goodG2B1Ev.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc329)
  cir.global "private" constant cir_private @__const._ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_213badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc330)
  cir.global "private" internal dsolocal @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_21L9badStaticE = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc331)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc332)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc333)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc334)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc15)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc335)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc336)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc337)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc338)
  cir.func internal private @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_21L9badSourceEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc26, #loc27])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc341)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc342)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc343)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc344)
    %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc345)
    %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc340)
    %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc25)
    cir.store %arg0, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc38)
    cir.br ^bb1 loc(#loc346)
  ^bb1:  // pred: ^bb0
    %7 = cir.get_global @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_21L9badStaticE : !cir.ptr<!s32i> loc(#loc331)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc41)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc41)
    cir.brcond %9 ^bb2, ^bb42 loc(#loc347)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc348)
  ^bb3:  // pred: ^bb2
    %10 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc35)
    cir.store %11, %3 : !s32i, !cir.ptr<!s32i> loc(#loc344)
    %12 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc45)
    %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
    %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc45)
    cir.store %14, %4 : !u64i, !cir.ptr<!u64i> loc(#loc345)
    cir.br ^bb4 loc(#loc349)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc349)
  ^bb5:  // pred: ^bb34
    %15 = cir.const #cir.int<0> : !s32i loc(#loc49)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc49)
    cir.brcond %16 ^bb6, ^bb35 loc(#loc49)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %17 = cir.const #cir.int<2> : !s32i loc(#loc50)
    %18 = cir.const #cir.int<1> : !u32i loc(#loc51)
    %19 = cir.cast(integral, %18 : !u32i), !s32i loc(#loc51)
    %20 = cir.const #cir.int<6> : !u32i loc(#loc52)
    %21 = cir.cast(integral, %20 : !u32i), !s32i loc(#loc52)
    %22 = cir.call @socket(%17, %19, %21) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc53)
    cir.store %22, %3 : !s32i, !cir.ptr<!s32i> loc(#loc350)
    cir.br ^bb7 loc(#loc351)
  ^bb7:  // pred: ^bb6
    %23 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc58)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc59)
    %26 = cir.cmp(eq, %23, %25) : !s32i, !cir.bool loc(#loc352)
    cir.brcond %26 ^bb8, ^bb9 loc(#loc353)
  ^bb8:  // pred: ^bb7
    cir.br ^bb35 loc(#loc61)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc57)
  ^bb10:  // pred: ^bb9
    %27 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc354)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc64)
    %29 = cir.const #cir.int<16> : !u64i loc(#loc355)
    cir.libc.memset %29 bytes from %27 set to %28 : !cir.ptr<!void>, !s32i, !u64i loc(#loc356)
    %30 = cir.const #cir.int<2> : !s32i loc(#loc69)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc69)
    %32 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
    cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc357)
    %33 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc15)
    %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc15)
    %35 = cir.call @inet_addr(%34) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc72)
    %36 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc73)
    %37 = cir.get_member %36[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc74)
    cir.store %35, %37 : !u32i, !cir.ptr<!u32i> loc(#loc358)
    %38 = cir.const #cir.int<27015> : !s32i loc(#loc77)
    %39 = cir.cast(integral, %38 : !s32i), !u16i loc(#loc77)
    %40 = cir.call @htons(%39) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc78)
    %41 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc79)
    cir.store %40, %41 : !u16i, !cir.ptr<!u16i> loc(#loc359)
    cir.br ^bb11 loc(#loc360)
  ^bb11:  // pred: ^bb10
    %42 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc84)
    %43 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc361)
    %44 = cir.const #cir.int<16> : !u64i loc(#loc362)
    %45 = cir.cast(integral, %44 : !u64i), !u32i loc(#loc362)
    %46 = cir.call @connect(%42, %43, %45) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc89)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc90)
    %48 = cir.unary(minus, %47) : !s32i, !s32i loc(#loc90)
    %49 = cir.cmp(eq, %46, %48) : !s32i, !cir.bool loc(#loc363)
    cir.brcond %49 ^bb12, ^bb13 loc(#loc364)
  ^bb12:  // pred: ^bb11
    cir.br ^bb35 loc(#loc92)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc83)
  ^bb14:  // pred: ^bb13
    %50 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc93)
    %51 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
    %52 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc95)
    %53 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %52 : !u64i), !cir.ptr<!s8i> loc(#loc96)
    %54 = cir.cast(bitcast, %53 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc365)
    %55 = cir.const #cir.int<1> : !u64i loc(#loc366)
    %56 = cir.const #cir.int<4096> : !s32i loc(#loc101)
    %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc101)
    %58 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc102)
    %59 = cir.binop(sub, %57, %58) : !u64i loc(#loc367)
    %60 = cir.const #cir.int<1> : !s32i loc(#loc103)
    %61 = cir.cast(integral, %60 : !s32i), !u64i loc(#loc103)
    %62 = cir.binop(sub, %59, %61) : !u64i loc(#loc368)
    %63 = cir.binop(mul, %55, %62) : !u64i loc(#loc369)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc105)
    %65 = cir.call @recv(%50, %54, %63, %64) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc106)
    %66 = cir.cast(integral, %65 : !s64i), !s32i loc(#loc106)
    cir.store %66, %0 : !s32i, !cir.ptr<!s32i> loc(#loc370)
    cir.br ^bb15 loc(#loc371)
  ^bb15:  // pred: ^bb14
    %67 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    %68 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %69 = cir.unary(minus, %68) : !s32i, !s32i loc(#loc112)
    %70 = cir.cmp(eq, %67, %69) : !s32i, !cir.bool loc(#loc372)
    cir.brcond %70 ^bb16, ^bb17 loc(#loc113)
  ^bb16:  // pred: ^bb15
    %71 = cir.const #true loc(#loc113)
    cir.br ^bb22(%71 : !cir.bool) loc(#loc113)
  ^bb17:  // pred: ^bb15
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    %73 = cir.const #cir.int<0> : !s32i loc(#loc115)
    %74 = cir.cmp(eq, %72, %73) : !s32i, !cir.bool loc(#loc373)
    cir.brcond %74 ^bb18, ^bb19 loc(#loc113)
  ^bb18:  // pred: ^bb17
    %75 = cir.const #true loc(#loc113)
    cir.br ^bb20(%75 : !cir.bool) loc(#loc113)
  ^bb19:  // pred: ^bb17
    %76 = cir.const #false loc(#loc113)
    cir.br ^bb20(%76 : !cir.bool) loc(#loc113)
  ^bb20(%77: !cir.bool loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":104:48)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc113)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22(%77 : !cir.bool) loc(#loc113)
  ^bb22(%78: !cir.bool loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":104:48)):  // 2 preds: ^bb16, ^bb21
    cir.br ^bb23 loc(#loc113)
  ^bb23:  // pred: ^bb22
    cir.brcond %78 ^bb24, ^bb25 loc(#loc374)
  ^bb24:  // pred: ^bb23
    cir.br ^bb35 loc(#loc117)
  ^bb25:  // pred: ^bb23
    cir.br ^bb26 loc(#loc110)
  ^bb26:  // pred: ^bb25
    %79 = cir.const #cir.int<0> : !s8i loc(#loc118)
    %80 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
    %81 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc120)
    %82 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc121)
    %83 = cir.cast(integral, %82 : !s32i), !u64i loc(#loc121)
    %84 = cir.const #cir.int<1> : !u64i loc(#loc375)
    %85 = cir.binop(div, %83, %84) : !u64i loc(#loc376)
    %86 = cir.binop(add, %81, %85) : !u64i loc(#loc377)
    %87 = cir.ptr_stride(%80 : !cir.ptr<!s8i>, %86 : !u64i), !cir.ptr<!s8i> loc(#loc124)
    cir.store %79, %87 : !s8i, !cir.ptr<!s8i> loc(#loc378)
    %88 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
    %89 = cir.const #cir.int<13> : !s8i loc(#loc126)
    %90 = cir.cast(integral, %89 : !s8i), !s32i loc(#loc126)
    %91 = cir.call @strchr(%88, %90) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc127)
    cir.store %91, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc379)
    cir.br ^bb27 loc(#loc380)
  ^bb27:  // pred: ^bb26
    %92 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
    %93 = cir.cast(ptr_to_bool, %92 : !cir.ptr<!s8i>), !cir.bool loc(#loc132)
    cir.brcond %93 ^bb28, ^bb29 loc(#loc381)
  ^bb28:  // pred: ^bb27
    %94 = cir.const #cir.int<0> : !s8i loc(#loc134)
    %95 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
    cir.store %94, %95 : !s8i, !cir.ptr<!s8i> loc(#loc382)
    cir.br ^bb29 loc(#loc131)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc131)
  ^bb30:  // pred: ^bb29
    %96 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
    %97 = cir.const #cir.int<10> : !s8i loc(#loc138)
    %98 = cir.cast(integral, %97 : !s8i), !s32i loc(#loc138)
    %99 = cir.call @strchr(%96, %98) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc139)
    cir.store %99, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc383)
    cir.br ^bb31 loc(#loc384)
  ^bb31:  // pred: ^bb30
    %100 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
    %101 = cir.cast(ptr_to_bool, %100 : !cir.ptr<!s8i>), !cir.bool loc(#loc144)
    cir.brcond %101 ^bb32, ^bb33 loc(#loc385)
  ^bb32:  // pred: ^bb31
    %102 = cir.const #cir.int<0> : !s8i loc(#loc146)
    %103 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
    cir.store %102, %103 : !s8i, !cir.ptr<!s8i> loc(#loc386)
    cir.br ^bb33 loc(#loc143)
  ^bb33:  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc143)
  ^bb34:  // pred: ^bb33
    cir.br ^bb5 loc(#loc48)
  ^bb35:  // 4 preds: ^bb5, ^bb8, ^bb12, ^bb24
    cir.br ^bb36 loc(#loc48)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc387)
  ^bb37:  // pred: ^bb36
    %104 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc151)
    %105 = cir.const #cir.int<1> : !s32i loc(#loc152)
    %106 = cir.unary(minus, %105) : !s32i, !s32i loc(#loc152)
    %107 = cir.cmp(ne, %104, %106) : !s32i, !cir.bool loc(#loc388)
    cir.brcond %107 ^bb38, ^bb39 loc(#loc389)
  ^bb38:  // pred: ^bb37
    %108 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc154)
    %109 = cir.call @close(%108) : (!s32i) -> !s32i loc(#loc155)
    cir.br ^bb39 loc(#loc150)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc150)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc44)
  ^bb41:  // pred: ^bb40
    cir.br ^bb42 loc(#loc40)
  ^bb42:  // 2 preds: ^bb1, ^bb41
    cir.br ^bb43 loc(#loc40)
  ^bb43:  // pred: ^bb42
    %110 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
    cir.store %110, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc390)
    %111 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc390)
    cir.return %111 : !cir.ptr<!s8i> loc(#loc390)
  } loc(#loc339)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc391)
  cir.func private @close(!s32i) -> !s32i loc(#loc392)
  cir.func @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_213badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc394)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc395)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc330)
    %3 = cir.get_global @__const._ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_213badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc330)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc330)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc168)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc396)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc170)
    %6 = cir.get_global @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_21L9badStaticE : !cir.ptr<!s32i> loc(#loc331)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc397)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
    %8 = cir.call @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_21L9badSourceEPc(%7) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc173)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc398)
    cir.br ^bb1 loc(#loc399)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc178)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc179)
    %11 = cir.const #cir.int<64> : !s32i loc(#loc180)
    %12 = cir.binop(or, %10, %11) : !s32i loc(#loc400)
    %13 = cir.const #cir.int<256> : !s32i loc(#loc181)
    %14 = cir.const #cir.int<128> : !s32i loc(#loc182)
    %15 = cir.binop(or, %13, %14) : !s32i loc(#loc401)
    %16 = cir.call @open(%9, %12, %15) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc183)
    cir.store %16, %0 : !s32i, !cir.ptr<!s32i> loc(#loc402)
    cir.br ^bb2 loc(#loc403)
  ^bb2:  // pred: ^bb1
    %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc188)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc189)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc190)
    %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc404)
    cir.brcond %20 ^bb3, ^bb4 loc(#loc405)
  ^bb3:  // pred: ^bb2
    %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc192)
    %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc193)
    cir.br ^bb4 loc(#loc187)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc187)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc177)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc163)
  } loc(#loc393)
  cir.global "private" internal dsolocal @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_21L14goodG2B1StaticE = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc406)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc196)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc407)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc199)
  cir.func internal private @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_21L14goodG2B1SourceEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc202, #loc203])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc409)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc201)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc204)
    cir.br ^bb1 loc(#loc410)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_21L14goodG2B1StaticE : !cir.ptr<!s32i> loc(#loc406)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc207)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc207)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc411)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc196)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc196)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc211)
    cir.br ^bb4 loc(#loc209)
  ^bb3:  // pred: ^bb1
    %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc212)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc213)
    %9 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc199)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc199)
    %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc212)
    cir.br ^bb4 loc(#loc206)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc206)
  ^bb5:  // pred: ^bb4
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc214)
    cir.store %12, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc412)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc412)
    cir.return %13 : !cir.ptr<!s8i> loc(#loc412)
  } loc(#loc408)
  cir.func internal private @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_21L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc414)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc415)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc329)
    %3 = cir.get_global @__const._ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_21L8goodG2B1Ev.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc329)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc329)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc222)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc416)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc224)
    %6 = cir.get_global @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_21L14goodG2B1StaticE : !cir.ptr<!s32i> loc(#loc406)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc417)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc226)
    %8 = cir.call @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_21L14goodG2B1SourceEPc(%7) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc227)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc418)
    cir.br ^bb1 loc(#loc419)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc232)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc233)
    %11 = cir.const #cir.int<64> : !s32i loc(#loc234)
    %12 = cir.binop(or, %10, %11) : !s32i loc(#loc420)
    %13 = cir.const #cir.int<256> : !s32i loc(#loc235)
    %14 = cir.const #cir.int<128> : !s32i loc(#loc236)
    %15 = cir.binop(or, %13, %14) : !s32i loc(#loc421)
    %16 = cir.call @open(%9, %12, %15) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc237)
    cir.store %16, %0 : !s32i, !cir.ptr<!s32i> loc(#loc422)
    cir.br ^bb2 loc(#loc423)
  ^bb2:  // pred: ^bb1
    %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc242)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc243)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc244)
    %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc424)
    cir.brcond %20 ^bb3, ^bb4 loc(#loc425)
  ^bb3:  // pred: ^bb2
    %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc246)
    %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc247)
    cir.br ^bb4 loc(#loc241)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc241)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc231)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc217)
  } loc(#loc413)
  cir.global "private" internal dsolocal @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_21L14goodG2B2StaticE = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc426)
  cir.func internal private @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_21L14goodG2B2SourceEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc252, #loc253])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc428)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc251)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc254)
    cir.br ^bb1 loc(#loc429)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_21L14goodG2B2StaticE : !cir.ptr<!s32i> loc(#loc426)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc257)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc257)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc430)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc259)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc260)
    %7 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc261)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc261)
    %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc259)
    cir.br ^bb3 loc(#loc256)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc256)
  ^bb4:  // pred: ^bb3
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc262)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc431)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc431)
    cir.return %11 : !cir.ptr<!s8i> loc(#loc431)
  } loc(#loc427)
  cir.func internal private @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_21L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc433)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc434)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc328)
    %3 = cir.get_global @__const._ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_21L8goodG2B2Ev.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc328)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc328)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc270)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc435)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc272)
    %6 = cir.get_global @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_21L14goodG2B2StaticE : !cir.ptr<!s32i> loc(#loc426)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc436)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc274)
    %8 = cir.call @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_21L14goodG2B2SourceEPc(%7) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc275)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc437)
    cir.br ^bb1 loc(#loc438)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc280)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc281)
    %11 = cir.const #cir.int<64> : !s32i loc(#loc282)
    %12 = cir.binop(or, %10, %11) : !s32i loc(#loc439)
    %13 = cir.const #cir.int<256> : !s32i loc(#loc283)
    %14 = cir.const #cir.int<128> : !s32i loc(#loc284)
    %15 = cir.binop(or, %13, %14) : !s32i loc(#loc440)
    %16 = cir.call @open(%9, %12, %15) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc285)
    cir.store %16, %0 : !s32i, !cir.ptr<!s32i> loc(#loc441)
    cir.br ^bb2 loc(#loc442)
  ^bb2:  // pred: ^bb1
    %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc290)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc291)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc292)
    %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc443)
    cir.brcond %20 ^bb3, ^bb4 loc(#loc444)
  ^bb3:  // pred: ^bb2
    %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc294)
    %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc295)
    cir.br ^bb4 loc(#loc289)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc289)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc279)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc265)
  } loc(#loc432)
  cir.func @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_214goodEv() extra(#fn_attr1) {
    cir.call @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_21L8goodG2B1Ev() : () -> () loc(#loc298)
    cir.call @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_21L8goodG2B2Ev() : () -> () loc(#loc299)
    cir.return loc(#loc297)
  } loc(#loc445)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc446)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc447)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc448)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc306)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc307)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc308)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc309)
  cir.func @main(%arg0: !s32i loc(fused[#loc312, #loc313]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc314, #loc315])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc450)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc451)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc311)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc316)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc316)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc317)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc318)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc318)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc319)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc306)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc306)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc320)
    cir.call @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_214goodEv() : () -> () loc(#loc321)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc307)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc307)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc322)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc308)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc308)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc323)
    cir.call @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_213badEv() : () -> () loc(#loc324)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc309)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc309)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc325)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc326)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc452)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc452)
    cir.return %15 : !s32i loc(#loc452)
  } loc(#loc449)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":214:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":214:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":184:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":184:37)
#loc5 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":141:5)
#loc6 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":141:37)
#loc7 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":61:1)
#loc8 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":61:24)
#loc9 = loc("/usr/include/string.h":407:1)
#loc10 = loc("/usr/include/string.h":408:33)
#loc11 = loc("/usr/include/sys/socket.h":102:1)
#loc12 = loc("/usr/include/sys/socket.h":102:62)
#loc13 = loc("/usr/include/arpa/inet.h":34:1)
#loc14 = loc("/usr/include/arpa/inet.h":34:47)
#loc15 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":94:53)
#loc16 = loc("/usr/include/netinet/in.h":404:1)
#loc17 = loc("/usr/include/netinet/in.h":405:40)
#loc18 = loc("/usr/include/sys/socket.h":126:1)
#loc19 = loc("/usr/include/sys/socket.h":126:75)
#loc20 = loc("/usr/include/sys/socket.h":145:1)
#loc21 = loc("/usr/include/sys/socket.h":145:68)
#loc22 = loc("/usr/include/string.h":226:1)
#loc23 = loc("/usr/include/string.h":227:50)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":63:1)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":136:1)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":72:13)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":72:17)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":73:13)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":73:32)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":74:13)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":74:19)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":75:13)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":75:36)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":76:13)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":76:41)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":64:1)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":65:5)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":134:5)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":65:8)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":66:5)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":67:9)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":133:9)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":76:30)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":76:37)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":77:13)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":122:21)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":122:20)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":87:40)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":87:49)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":87:62)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":87:33)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":87:17)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":87:73)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":88:17)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":91:17)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":88:21)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":88:38)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":89:17)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":90:21)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":92:24)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":92:25)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":92:34)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":92:37)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":92:51)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":92:17)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":92:52)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":93:38)
#loc70 = loc("/usr/include/netinet/in.h":249:5)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":93:17)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":94:43)
#loc73 = loc("/usr/include/netinet/in.h":251:20)
#loc74 = loc("/usr/include/netinet/in.h":33:15)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":94:17)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":94:63)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":95:42)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":95:36)
#loc79 = loc("/usr/include/netinet/in.h":250:15)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":95:17)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":95:50)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":96:17)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":99:17)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":96:29)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":96:62)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":96:63)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":96:72)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":96:86)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":96:21)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":96:92)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":97:17)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":98:21)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":103:35)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":103:59)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":103:66)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":103:64)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":103:50)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":103:73)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":103:76)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":103:87)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":103:92)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":103:107)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":103:117)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":103:118)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":103:121)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":103:30)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":103:17)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":103:122)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":104:17)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":107:17)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":104:21)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":104:35)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":104:51)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":104:65)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":105:17)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":106:21)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":109:61)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":109:17)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":109:22)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":109:32)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":109:45)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":109:56)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":109:57)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":111:34)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":111:40)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":111:27)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":111:17)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":111:44)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":112:17)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":115:17)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":112:21)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":113:17)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":114:32)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":114:22)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":114:21)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":116:34)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":116:40)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":116:27)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":116:17)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":116:44)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":117:17)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":120:17)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":117:21)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":118:17)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":119:32)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":119:22)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":119:21)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":123:13)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":126:13)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":123:17)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":123:34)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":124:13)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":125:30)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":125:17)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":135:12)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":135:5)
#loc158 = loc("/usr/include/fcntl.h":209:1)
#loc159 = loc("/usr/include/fcntl.h":209:56)
#loc160 = loc("/usr/include/unistd.h":358:1)
#loc161 = loc("/usr/include/unistd.h":358:27)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":138:1)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":155:1)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":146:9)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":146:13)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":140:5)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":140:12)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":142:12)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":142:5)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":143:17)
#loc171 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":143:5)
#loc172 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":144:22)
#loc173 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":144:12)
#loc174 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":144:5)
#loc175 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":144:26)
#loc176 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":145:5)
#loc177 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":153:5)
#loc178 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":148:25)
#loc179 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":148:31)
#loc180 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":148:38)
#loc181 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":148:47)
#loc182 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":148:55)
#loc183 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":148:20)
#loc184 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":148:9)
#loc185 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":148:63)
#loc186 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":149:9)
#loc187 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":152:9)
#loc188 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":149:13)
#loc189 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":149:26)
#loc190 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":149:25)
#loc191 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":150:9)
#loc192 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":151:19)
#loc193 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":151:13)
#loc194 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":162:1)
#loc195 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":162:29)
#loc196 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":171:19)
#loc197 = loc("/usr/include/string.h":149:1)
#loc198 = loc("/usr/include/string.h":150:14)
#loc199 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":176:22)
#loc200 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":166:1)
#loc201 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":179:1)
#loc204 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":167:1)
#loc205 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":168:5)
#loc206 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":177:5)
#loc207 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":168:8)
#loc208 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":169:5)
#loc209 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":172:5)
#loc210 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":174:5)
#loc211 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":171:9)
#loc212 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":176:9)
#loc213 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":176:16)
#loc214 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":178:12)
#loc215 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":178:5)
#loc216 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":181:1)
#loc217 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":198:1)
#loc218 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":189:9)
#loc219 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":189:13)
#loc220 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":183:5)
#loc221 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":183:12)
#loc222 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":185:12)
#loc223 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":185:5)
#loc224 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":186:22)
#loc225 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":186:5)
#loc226 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":187:27)
#loc227 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":187:12)
#loc228 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":187:5)
#loc229 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":187:31)
#loc230 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":188:5)
#loc231 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":196:5)
#loc232 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":191:25)
#loc233 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":191:31)
#loc234 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":191:38)
#loc235 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":191:47)
#loc236 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":191:55)
#loc237 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":191:20)
#loc238 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":191:9)
#loc239 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":191:63)
#loc240 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":192:9)
#loc241 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":195:9)
#loc242 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":192:13)
#loc243 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":192:26)
#loc244 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":192:25)
#loc245 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":193:9)
#loc246 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":194:19)
#loc247 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":194:13)
#loc248 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":163:1)
#loc249 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":163:29)
#loc250 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":201:1)
#loc251 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":209:1)
#loc254 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":202:1)
#loc255 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":203:5)
#loc256 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":207:5)
#loc257 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":203:8)
#loc258 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":204:5)
#loc259 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":206:9)
#loc260 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":206:16)
#loc261 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":206:22)
#loc262 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":208:12)
#loc263 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":208:5)
#loc264 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":211:1)
#loc265 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":228:1)
#loc266 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":219:9)
#loc267 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":219:13)
#loc268 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":213:5)
#loc269 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":213:12)
#loc270 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":215:12)
#loc271 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":215:5)
#loc272 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":216:22)
#loc273 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":216:5)
#loc274 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":217:27)
#loc275 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":217:12)
#loc276 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":217:5)
#loc277 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":217:31)
#loc278 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":218:5)
#loc279 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":226:5)
#loc280 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":221:25)
#loc281 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":221:31)
#loc282 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":221:38)
#loc283 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":221:47)
#loc284 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":221:55)
#loc285 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":221:20)
#loc286 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":221:9)
#loc287 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":221:63)
#loc288 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":222:9)
#loc289 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":225:9)
#loc290 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":222:13)
#loc291 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":222:26)
#loc292 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":222:25)
#loc293 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":223:9)
#loc294 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":224:19)
#loc295 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":224:13)
#loc296 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":230:1)
#loc297 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":234:1)
#loc298 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":232:5)
#loc299 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":233:5)
#loc300 = loc("/usr/include/stdlib.h":575:1)
#loc301 = loc("/usr/include/stdlib.h":575:41)
#loc302 = loc("/usr/include/time.h":76:1)
#loc303 = loc("/usr/include/time.h":76:38)
#loc304 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc305 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc306 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":254:15)
#loc307 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":256:15)
#loc308 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":259:15)
#loc309 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":261:15)
#loc310 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":249:1)
#loc311 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":264:1)
#loc316 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":250:1)
#loc317 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":252:27)
#loc318 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":252:22)
#loc319 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":252:5)
#loc320 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":254:5)
#loc321 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":255:5)
#loc322 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":256:5)
#loc323 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":259:5)
#loc324 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":260:5)
#loc325 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":261:5)
#loc326 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":263:12)
#loc327 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_21.cpp":263:5)
#loc328 = loc(fused[#loc1, #loc2])
#loc329 = loc(fused[#loc3, #loc4])
#loc330 = loc(fused[#loc5, #loc6])
#loc331 = loc(fused[#loc7, #loc8])
#loc332 = loc(fused[#loc9, #loc10])
#loc333 = loc(fused[#loc11, #loc12])
#loc334 = loc(fused[#loc13, #loc14])
#loc335 = loc(fused[#loc16, #loc17])
#loc336 = loc(fused[#loc18, #loc19])
#loc337 = loc(fused[#loc20, #loc21])
#loc338 = loc(fused[#loc22, #loc23])
#loc339 = loc(fused[#loc24, #loc25])
#loc341 = loc(fused[#loc28, #loc29])
#loc342 = loc(fused[#loc30, #loc31])
#loc343 = loc(fused[#loc32, #loc33])
#loc344 = loc(fused[#loc34, #loc35])
#loc345 = loc(fused[#loc36, #loc37])
#loc346 = loc(fused[#loc39, #loc40])
#loc347 = loc(fused[#loc42, #loc40])
#loc348 = loc(fused[#loc43, #loc44])
#loc349 = loc(fused[#loc47, #loc48])
#loc350 = loc(fused[#loc54, #loc55])
#loc351 = loc(fused[#loc56, #loc57])
#loc352 = loc(fused[#loc58, #loc59])
#loc353 = loc(fused[#loc60, #loc57])
#loc354 = loc(fused[#loc62, #loc63])
#loc355 = loc(fused[#loc65, #loc66])
#loc356 = loc(fused[#loc67, #loc68])
#loc357 = loc(fused[#loc71, #loc69])
#loc358 = loc(fused[#loc75, #loc76])
#loc359 = loc(fused[#loc80, #loc81])
#loc360 = loc(fused[#loc82, #loc83])
#loc361 = loc(fused[#loc85, #loc86])
#loc362 = loc(fused[#loc87, #loc88])
#loc363 = loc(fused[#loc89, #loc90])
#loc364 = loc(fused[#loc91, #loc83])
#loc365 = loc(fused[#loc97, #loc98])
#loc366 = loc(fused[#loc99, #loc100])
#loc367 = loc(fused[#loc101, #loc102])
#loc368 = loc(fused[#loc101, #loc103])
#loc369 = loc(fused[#loc99, #loc104])
#loc370 = loc(fused[#loc107, #loc108])
#loc371 = loc(fused[#loc109, #loc110])
#loc372 = loc(fused[#loc111, #loc112])
#loc373 = loc(fused[#loc114, #loc115])
#loc374 = loc(fused[#loc116, #loc110])
#loc375 = loc(fused[#loc122, #loc123])
#loc376 = loc(fused[#loc121, #loc123])
#loc377 = loc(fused[#loc120, #loc123])
#loc378 = loc(fused[#loc119, #loc118])
#loc379 = loc(fused[#loc128, #loc129])
#loc380 = loc(fused[#loc130, #loc131])
#loc381 = loc(fused[#loc133, #loc131])
#loc382 = loc(fused[#loc136, #loc134])
#loc383 = loc(fused[#loc140, #loc141])
#loc384 = loc(fused[#loc142, #loc143])
#loc385 = loc(fused[#loc145, #loc143])
#loc386 = loc(fused[#loc148, #loc146])
#loc387 = loc(fused[#loc149, #loc150])
#loc388 = loc(fused[#loc151, #loc152])
#loc389 = loc(fused[#loc153, #loc150])
#loc390 = loc(fused[#loc157, #loc156])
#loc391 = loc(fused[#loc158, #loc159])
#loc392 = loc(fused[#loc160, #loc161])
#loc393 = loc(fused[#loc162, #loc163])
#loc394 = loc(fused[#loc164, #loc165])
#loc395 = loc(fused[#loc166, #loc167])
#loc396 = loc(fused[#loc169, #loc168])
#loc397 = loc(fused[#loc171, #loc170])
#loc398 = loc(fused[#loc174, #loc175])
#loc399 = loc(fused[#loc176, #loc177])
#loc400 = loc(fused[#loc179, #loc180])
#loc401 = loc(fused[#loc181, #loc182])
#loc402 = loc(fused[#loc184, #loc185])
#loc403 = loc(fused[#loc186, #loc187])
#loc404 = loc(fused[#loc188, #loc189])
#loc405 = loc(fused[#loc191, #loc187])
#loc406 = loc(fused[#loc194, #loc195])
#loc407 = loc(fused[#loc197, #loc198])
#loc408 = loc(fused[#loc200, #loc201])
#loc410 = loc(fused[#loc205, #loc206])
#loc411 = loc(fused[#loc208, #loc209, #loc210, #loc206])
#loc412 = loc(fused[#loc215, #loc214])
#loc413 = loc(fused[#loc216, #loc217])
#loc414 = loc(fused[#loc218, #loc219])
#loc415 = loc(fused[#loc220, #loc221])
#loc416 = loc(fused[#loc223, #loc222])
#loc417 = loc(fused[#loc225, #loc224])
#loc418 = loc(fused[#loc228, #loc229])
#loc419 = loc(fused[#loc230, #loc231])
#loc420 = loc(fused[#loc233, #loc234])
#loc421 = loc(fused[#loc235, #loc236])
#loc422 = loc(fused[#loc238, #loc239])
#loc423 = loc(fused[#loc240, #loc241])
#loc424 = loc(fused[#loc242, #loc243])
#loc425 = loc(fused[#loc245, #loc241])
#loc426 = loc(fused[#loc248, #loc249])
#loc427 = loc(fused[#loc250, #loc251])
#loc429 = loc(fused[#loc255, #loc256])
#loc430 = loc(fused[#loc258, #loc256])
#loc431 = loc(fused[#loc263, #loc262])
#loc432 = loc(fused[#loc264, #loc265])
#loc433 = loc(fused[#loc266, #loc267])
#loc434 = loc(fused[#loc268, #loc269])
#loc435 = loc(fused[#loc271, #loc270])
#loc436 = loc(fused[#loc273, #loc272])
#loc437 = loc(fused[#loc276, #loc277])
#loc438 = loc(fused[#loc278, #loc279])
#loc439 = loc(fused[#loc281, #loc282])
#loc440 = loc(fused[#loc283, #loc284])
#loc441 = loc(fused[#loc286, #loc287])
#loc442 = loc(fused[#loc288, #loc289])
#loc443 = loc(fused[#loc290, #loc291])
#loc444 = loc(fused[#loc293, #loc289])
#loc445 = loc(fused[#loc296, #loc297])
#loc446 = loc(fused[#loc300, #loc301])
#loc447 = loc(fused[#loc302, #loc303])
#loc448 = loc(fused[#loc304, #loc305])
#loc449 = loc(fused[#loc310, #loc311])
#loc452 = loc(fused[#loc327, #loc326])
