!s64i = !cir.int<s, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_int64_t_61a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @CWE415_Double_Free__malloc_free_int64_t_61b_badSource(!cir.ptr<!s64i>) -> !cir.ptr<!s64i> loc(#loc49)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc50)
  cir.func no_proto @CWE415_Double_Free__malloc_free_int64_t_61_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc52)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc9)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc53)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc11)
    %3 = cir.call @CWE415_Double_Free__malloc_free_int64_t_61b_badSource(%2) : (!cir.ptr<!s64i>) -> !cir.ptr<!s64i> loc(#loc12)
    cir.store %3, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc54)
    %4 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc15)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc16)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc16)
    cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc15)
    cir.return loc(#loc6)
  } loc(#loc51)
  cir.func no_proto @CWE415_Double_Free__malloc_free_int64_t_61_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc56)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc19)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc57)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc21)
    cir.return loc(#loc18)
  } loc(#loc55)
  cir.func private @CWE415_Double_Free__malloc_free_int64_t_61b_goodG2BSource(!cir.ptr<!s64i>) -> !cir.ptr<!s64i> loc(#loc58)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc60)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc29)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc61)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc31)
    %3 = cir.call @CWE415_Double_Free__malloc_free_int64_t_61b_goodG2BSource(%2) : (!cir.ptr<!s64i>) -> !cir.ptr<!s64i> loc(#loc32)
    cir.store %3, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc62)
    %4 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc35)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc36)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc36)
    cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc35)
    cir.return loc(#loc26)
  } loc(#loc59)
  cir.func private @CWE415_Double_Free__malloc_free_int64_t_61b_goodB2GSource(!cir.ptr<!s64i>) -> !cir.ptr<!s64i> loc(#loc63)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc65)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc43)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc66)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc45)
    %3 = cir.call @CWE415_Double_Free__malloc_free_int64_t_61b_goodB2GSource(%2) : (!cir.ptr<!s64i>) -> !cir.ptr<!s64i> loc(#loc46)
    cir.store %3, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc67)
    cir.return loc(#loc40)
  } loc(#loc64)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_int64_t_61a.c":0:0)
#loc1 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":25:1)
#loc2 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":25:79)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":27:1)
#loc6 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":35:1)
#loc7 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":29:5)
#loc8 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":29:15)
#loc9 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":31:12)
#loc10 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":31:5)
#loc11 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":32:66)
#loc12 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":32:12)
#loc13 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":32:5)
#loc14 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":32:70)
#loc15 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":34:5)
#loc16 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":34:10)
#loc17 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":68:1)
#loc18 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":72:1)
#loc19 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":70:5)
#loc20 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":70:13)
#loc21 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":71:5)
#loc22 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":71:13)
#loc23 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":42:1)
#loc24 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":42:83)
#loc25 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":44:1)
#loc26 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":52:1)
#loc27 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":46:5)
#loc28 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":46:15)
#loc29 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":48:12)
#loc30 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":48:5)
#loc31 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":49:70)
#loc32 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":49:12)
#loc33 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":49:5)
#loc34 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":49:74)
#loc35 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":51:5)
#loc36 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":51:10)
#loc37 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":55:1)
#loc38 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":55:83)
#loc39 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":57:1)
#loc40 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":66:1)
#loc41 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":59:5)
#loc42 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":59:15)
#loc43 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":61:12)
#loc44 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":61:5)
#loc45 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":62:70)
#loc46 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":62:12)
#loc47 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":62:5)
#loc48 = loc("CWE415_Double_Free__malloc_free_int64_t_61a.c":62:74)
#loc49 = loc(fused[#loc1, #loc2])
#loc50 = loc(fused[#loc3, #loc4])
#loc51 = loc(fused[#loc5, #loc6])
#loc52 = loc(fused[#loc7, #loc8])
#loc53 = loc(fused[#loc10, #loc9])
#loc54 = loc(fused[#loc13, #loc14])
#loc55 = loc(fused[#loc17, #loc18])
#loc56 = loc(fused[#loc19, #loc20])
#loc57 = loc(fused[#loc21, #loc22])
#loc58 = loc(fused[#loc23, #loc24])
#loc59 = loc(fused[#loc25, #loc26])
#loc60 = loc(fused[#loc27, #loc28])
#loc61 = loc(fused[#loc30, #loc29])
#loc62 = loc(fused[#loc33, #loc34])
#loc63 = loc(fused[#loc37, #loc38])
#loc64 = loc(fused[#loc39, #loc40])
#loc65 = loc(fused[#loc41, #loc42])
#loc66 = loc(fused[#loc44, #loc43])
#loc67 = loc(fused[#loc47, #loc48])
