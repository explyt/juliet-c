!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc14 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":24:21)
#loc15 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":24:25)
#loc64 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":122:10)
#loc65 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":122:14)
#loc66 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":122:20)
#loc67 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":122:32)
#loc85 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":73:25)
#loc86 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":73:29)
#loc130 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":56:25)
#loc131 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":56:29)
#loc153 = loc(fused[#loc14, #loc15])
#loc170 = loc(fused[#loc64, #loc65])
#loc171 = loc(fused[#loc66, #loc67])
#loc176 = loc(fused[#loc85, #loc86])
#loc191 = loc(fused[#loc130, #loc131])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_divide_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc147)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc148)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc149)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc151)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc14, #loc15])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc153)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc16)
    %1 = cir.const #cir.int<100> : !s32i loc(#loc17)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc18)
    %3 = cir.binop(div, %1, %2) : !s32i loc(#loc154)
    cir.call @printIntLine(%3) : (!s32i) -> () loc(#loc19)
    cir.return loc(#loc13)
  } loc(#loc152)
  cir.func no_proto @CWE369_Divide_by_Zero__int_fgets_divide_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc156)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc25)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc157)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc159)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc159)
      cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc159)
      cir.scope {
        %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc33)
        %7 = cir.const #cir.int<3> : !s32i loc(#loc34)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc34)
        %9 = cir.const #cir.int<4> : !u64i loc(#loc34)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc34)
        %11 = cir.const #cir.int<2> : !s32i loc(#loc34)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc34)
        %13 = cir.binop(add, %10, %12) : !u64i loc(#loc34)
        %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc34)
        %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc148)
        %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc35)
        %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc36)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc37)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc37)
        %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc161)
        cir.if %20 {
          %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc41)
          %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc42)
          cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc163)
        } else {
          %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc45)
        } loc(#loc162)
      } loc(#loc160)
    } loc(#loc158)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc46)
    cir.call @badSink(%3) : (!s32i) -> () loc(#loc47)
    cir.return loc(#loc21)
  } loc(#loc155)
  cir.func no_proto @CWE369_Divide_by_Zero__int_fgets_divide_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc165)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc50)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc166)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc52)
    cir.return loc(#loc49)
  } loc(#loc164)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc167)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc168)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc58)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc60)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc61)
  cir.func @main(%arg0: !s32i loc(fused[#loc64, #loc65]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc66, #loc67])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc170)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc171)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc63)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc68)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc68)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc69)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc70)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc70)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc71)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc58)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %8 = cir.get_global @CWE369_Divide_by_Zero__int_fgets_divide_41_good : !cir.ptr<!cir.func<!void ()>> loc(#loc172)
    cir.call @CWE369_Divide_by_Zero__int_fgets_divide_41_good() : () -> () loc(#loc73)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc59)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc60)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %13 = cir.get_global @CWE369_Divide_by_Zero__int_fgets_divide_41_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc173)
    cir.call @CWE369_Divide_by_Zero__int_fgets_divide_41_bad() : () -> () loc(#loc77)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc61)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc80)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc174)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc174)
    cir.return %17 : !s32i loc(#loc174)
  } loc(#loc169)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc82)
  cir.func internal private @goodB2GSink(%arg0: !s32i loc(fused[#loc85, #loc86])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc176)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc87)
    cir.scope {
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc90)
      %2 = cir.const #cir.int<0> : !s32i loc(#loc91)
      %3 = cir.cmp(ne, %1, %2) : !s32i, !cir.bool loc(#loc178)
      cir.if %3 {
        %4 = cir.const #cir.int<100> : !s32i loc(#loc95)
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc96)
        %6 = cir.binop(div, %4, %5) : !s32i loc(#loc180)
        cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc97)
      } else {
        %4 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc82)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc82)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc98)
      } loc(#loc179)
    } loc(#loc177)
    cir.return loc(#loc84)
  } loc(#loc175)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc182)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc103)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc104)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc183)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc185)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc185)
      cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc185)
      cir.scope {
        %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc112)
        %7 = cir.const #cir.int<3> : !s32i loc(#loc113)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc113)
        %9 = cir.const #cir.int<4> : !u64i loc(#loc113)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc113)
        %11 = cir.const #cir.int<2> : !s32i loc(#loc113)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc113)
        %13 = cir.binop(add, %10, %12) : !u64i loc(#loc113)
        %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc113)
        %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc148)
        %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc114)
        %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc115)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc116)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc116)
        %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc187)
        cir.if %20 {
          %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc120)
          %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc121)
          cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc189)
        } else {
          %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc124)
          %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc124)
          cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc125)
        } loc(#loc188)
      } loc(#loc186)
    } loc(#loc184)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    cir.call @goodB2GSink(%3) : (!s32i) -> () loc(#loc127)
    cir.return loc(#loc100)
  } loc(#loc181)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc130, #loc131])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc191)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc132)
    %1 = cir.const #cir.int<100> : !s32i loc(#loc133)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc134)
    %3 = cir.binop(div, %1, %2) : !s32i loc(#loc192)
    cir.call @printIntLine(%3) : (!s32i) -> () loc(#loc135)
    cir.return loc(#loc129)
  } loc(#loc190)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc194)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc140)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc141)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc195)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc143)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc196)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc145)
    cir.call @goodG2BSink(%4) : (!s32i) -> () loc(#loc146)
    cir.return loc(#loc137)
  } loc(#loc193)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_divide_41.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":45:23)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":24:1)
#loc13 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":28:1)
#loc16 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":25:1)
#loc17 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":27:18)
#loc18 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":27:24)
#loc19 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":27:5)
#loc20 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":30:1)
#loc21 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":49:1)
#loc22 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":32:5)
#loc23 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":32:9)
#loc24 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":34:13)
#loc25 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":34:12)
#loc26 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":34:5)
#loc27 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":35:5)
#loc28 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":47:5)
#loc29 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":36:9)
#loc30 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":36:45)
#loc31 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":38:9)
#loc32 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":46:9)
#loc33 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":38:19)
#loc34 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":38:32)
#loc35 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":38:49)
#loc36 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":38:13)
#loc37 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":38:59)
#loc38 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":39:9)
#loc39 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":42:9)
#loc40 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":44:9)
#loc41 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":41:25)
#loc42 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":41:20)
#loc43 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":41:13)
#loc44 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":41:36)
#loc45 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":45:13)
#loc46 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":48:13)
#loc47 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":48:5)
#loc48 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":107:1)
#loc49 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":111:1)
#loc50 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":109:5)
#loc51 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":109:13)
#loc52 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":110:5)
#loc53 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":110:13)
#loc54 = loc("/usr/include/stdlib.h":575:1)
#loc55 = loc("/usr/include/stdlib.h":575:41)
#loc56 = loc("/usr/include/time.h":76:1)
#loc57 = loc("/usr/include/time.h":76:38)
#loc58 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":127:15)
#loc59 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":129:15)
#loc60 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":132:15)
#loc61 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":134:15)
#loc62 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":122:1)
#loc63 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":137:1)
#loc68 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":123:1)
#loc69 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":125:27)
#loc70 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":125:22)
#loc71 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":125:5)
#loc72 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":127:5)
#loc73 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":128:5)
#loc74 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":128:53)
#loc75 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":129:5)
#loc76 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":132:5)
#loc77 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":133:5)
#loc78 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":133:52)
#loc79 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":134:5)
#loc80 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":136:12)
#loc81 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":136:5)
#loc82 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":82:19)
#loc83 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":73:1)
#loc84 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":84:1)
#loc87 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":74:1)
#loc88 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":76:5)
#loc89 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":83:5)
#loc90 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":76:9)
#loc91 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":76:17)
#loc92 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":77:5)
#loc93 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":79:5)
#loc94 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":81:5)
#loc95 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":78:22)
#loc96 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":78:28)
#loc97 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":78:9)
#loc98 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":82:9)
#loc99 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":86:1)
#loc100 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":105:1)
#loc101 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":88:5)
#loc102 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":88:9)
#loc103 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":90:13)
#loc104 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":90:12)
#loc105 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":90:5)
#loc106 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":91:5)
#loc107 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":103:5)
#loc108 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":92:9)
#loc109 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":92:45)
#loc110 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":94:9)
#loc111 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":102:9)
#loc112 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":94:19)
#loc113 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":94:32)
#loc114 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":94:49)
#loc115 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":94:13)
#loc116 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":94:59)
#loc117 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":95:9)
#loc118 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":98:9)
#loc119 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":100:9)
#loc120 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":97:25)
#loc121 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":97:20)
#loc122 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":97:13)
#loc123 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":97:36)
#loc124 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":101:23)
#loc125 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":101:13)
#loc126 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":104:17)
#loc127 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":104:5)
#loc128 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":56:1)
#loc129 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":60:1)
#loc132 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":57:1)
#loc133 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":59:18)
#loc134 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":59:24)
#loc135 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":59:5)
#loc136 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":62:1)
#loc137 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":70:1)
#loc138 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":64:5)
#loc139 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":64:9)
#loc140 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":66:13)
#loc141 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":66:12)
#loc142 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":66:5)
#loc143 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":68:12)
#loc144 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":68:5)
#loc145 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":69:17)
#loc146 = loc("CWE369_Divide_by_Zero__int_fgets_divide_41.c":69:5)
#loc147 = loc(fused[#loc1, #loc2])
#loc148 = loc(fused[#loc3, #loc4])
#loc149 = loc(fused[#loc5, #loc6])
#loc150 = loc(fused[#loc7, #loc8])
#loc151 = loc(fused[#loc10, #loc11])
#loc152 = loc(fused[#loc12, #loc13])
#loc154 = loc(fused[#loc17, #loc18])
#loc155 = loc(fused[#loc20, #loc21])
#loc156 = loc(fused[#loc22, #loc23])
#loc157 = loc(fused[#loc26, #loc24])
#loc158 = loc(fused[#loc27, #loc28])
#loc159 = loc(fused[#loc29, #loc30])
#loc160 = loc(fused[#loc31, #loc32])
#loc161 = loc(fused[#loc36, #loc37])
#loc162 = loc(fused[#loc38, #loc39, #loc40, #loc32])
#loc163 = loc(fused[#loc43, #loc44])
#loc164 = loc(fused[#loc48, #loc49])
#loc165 = loc(fused[#loc50, #loc51])
#loc166 = loc(fused[#loc52, #loc53])
#loc167 = loc(fused[#loc54, #loc55])
#loc168 = loc(fused[#loc56, #loc57])
#loc169 = loc(fused[#loc62, #loc63])
#loc172 = loc(fused[#loc73, #loc74])
#loc173 = loc(fused[#loc77, #loc78])
#loc174 = loc(fused[#loc81, #loc80])
#loc175 = loc(fused[#loc83, #loc84])
#loc177 = loc(fused[#loc88, #loc89])
#loc178 = loc(fused[#loc90, #loc91])
#loc179 = loc(fused[#loc92, #loc93, #loc94, #loc89])
#loc180 = loc(fused[#loc95, #loc96])
#loc181 = loc(fused[#loc99, #loc100])
#loc182 = loc(fused[#loc101, #loc102])
#loc183 = loc(fused[#loc105, #loc103])
#loc184 = loc(fused[#loc106, #loc107])
#loc185 = loc(fused[#loc108, #loc109])
#loc186 = loc(fused[#loc110, #loc111])
#loc187 = loc(fused[#loc115, #loc116])
#loc188 = loc(fused[#loc117, #loc118, #loc119, #loc111])
#loc189 = loc(fused[#loc122, #loc123])
#loc190 = loc(fused[#loc128, #loc129])
#loc192 = loc(fused[#loc133, #loc134])
#loc193 = loc(fused[#loc136, #loc137])
#loc194 = loc(fused[#loc138, #loc139])
#loc195 = loc(fused[#loc142, #loc140])
#loc196 = loc(fused[#loc144, #loc143])
