!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc44 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":110:10)
#loc45 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":110:14)
#loc46 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":110:20)
#loc47 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":110:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i}>
#loc135 = loc(fused[#loc44, #loc45])
#loc136 = loc(fused[#loc46, #loc47])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_alloca_use_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc122)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc123)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc5)
  cir.func no_proto @CWE758_Undefined_Behavior__struct_alloca_use_15_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc10)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc127)
            %2 = cir.const #cir.int<8> : !u64i loc(#loc15)
            %3 = cir.alloca !u8i, !cir.ptr<!u8i>, %2 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc15)
            %4 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc128)
            %5 = cir.cast(bitcast, %3 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc15)
            %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc15)
            cir.store %6, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc127)
            %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc17)
            cir.copy %7 to %4 : !cir.ptr<!ty__twoIntsStruct> loc(#loc128)
            %8 = cir.get_member %4[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc18)
            %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc19)
            cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc20)
            %10 = cir.get_member %4[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc21)
            %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc22)
            cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc23)
          } loc(#loc126)
          cir.break loc(#loc24)
        } loc(#loc11)
        cir.case(default, []) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc5)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc5)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc26)
          cir.break loc(#loc27)
        } loc(#loc25)
        cir.yield loc(#loc8)
      } loc(#loc8)
    } loc(#loc125)
    cir.return loc(#loc7)
  } loc(#loc124)
  cir.func no_proto @CWE758_Undefined_Behavior__struct_alloca_use_15_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc130)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc30)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc131)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc32)
    cir.return loc(#loc29)
  } loc(#loc129)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc132)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc133)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc38)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc39)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc40)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc41)
  cir.func @main(%arg0: !s32i loc(fused[#loc44, #loc45]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc46, #loc47])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc135)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc136)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc43)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc48)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc48)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc49)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc50)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc50)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc51)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc38)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    %8 = cir.get_global @CWE758_Undefined_Behavior__struct_alloca_use_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc137)
    cir.call @CWE758_Undefined_Behavior__struct_alloca_use_15_good() : () -> () loc(#loc53)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc39)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc40)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    %13 = cir.get_global @CWE758_Undefined_Behavior__struct_alloca_use_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc138)
    cir.call @CWE758_Undefined_Behavior__struct_alloca_use_15_bad() : () -> () loc(#loc57)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc41)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc60)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc139)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc139)
    cir.return %17 : !s32i loc(#loc139)
  } loc(#loc134)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc66)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc68)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc68)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc69)
          cir.break loc(#loc70)
        } loc(#loc67)
        cir.case(default, []) {
          cir.scope {
            %1 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc143)
            %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc144)
            %3 = cir.const #cir.int<8> : !u64i loc(#loc77)
            %4 = cir.alloca !u8i, !cir.ptr<!u8i>, %3 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc77)
            %5 = cir.cast(bitcast, %4 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc77)
            %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc77)
            cir.store %6, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc144)
            %7 = cir.const #cir.int<1> : !s32i loc(#loc78)
            %8 = cir.get_member %1[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc18)
            cir.store %7, %8 : !s32i, !cir.ptr<!s32i> loc(#loc145)
            %9 = cir.const #cir.int<2> : !s32i loc(#loc80)
            %10 = cir.get_member %1[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc21)
            cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc146)
            %11 = cir.load deref %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc82)
            cir.copy %1 to %11 : !cir.ptr<!ty__twoIntsStruct> loc(#loc82)
            cir.scope {
              %12 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc148)
              %13 = cir.load deref %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc86)
              cir.copy %13 to %12 : !cir.ptr<!ty__twoIntsStruct> loc(#loc148)
              %14 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc18)
              %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc87)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc88)
              %16 = cir.get_member %12[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc21)
              %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc89)
              cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc90)
            } loc(#loc147)
          } loc(#loc142)
          cir.break loc(#loc91)
        } loc(#loc71)
        cir.yield loc(#loc64)
      } loc(#loc64)
    } loc(#loc141)
    cir.return loc(#loc63)
  } loc(#loc140)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc96)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc152)
            %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc153)
            %3 = cir.const #cir.int<8> : !u64i loc(#loc103)
            %4 = cir.alloca !u8i, !cir.ptr<!u8i>, %3 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc103)
            %5 = cir.cast(bitcast, %4 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc103)
            %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc103)
            cir.store %6, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc153)
            %7 = cir.const #cir.int<1> : !s32i loc(#loc104)
            %8 = cir.get_member %1[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc18)
            cir.store %7, %8 : !s32i, !cir.ptr<!s32i> loc(#loc154)
            %9 = cir.const #cir.int<2> : !s32i loc(#loc106)
            %10 = cir.get_member %1[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc21)
            cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc155)
            %11 = cir.load deref %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc108)
            cir.copy %1 to %11 : !cir.ptr<!ty__twoIntsStruct> loc(#loc108)
            cir.scope {
              %12 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc157)
              %13 = cir.load deref %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc112)
              cir.copy %13 to %12 : !cir.ptr<!ty__twoIntsStruct> loc(#loc157)
              %14 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc18)
              %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc113)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc114)
              %16 = cir.get_member %12[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc21)
              %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc115)
              cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc116)
            } loc(#loc156)
          } loc(#loc151)
          cir.break loc(#loc117)
        } loc(#loc97)
        cir.case(default, []) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc119)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc119)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc120)
          cir.break loc(#loc121)
        } loc(#loc118)
        cir.yield loc(#loc94)
      } loc(#loc94)
    } loc(#loc150)
    cir.return loc(#loc93)
  } loc(#loc149)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_alloca_use_15.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":34:19)
#loc6 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":20:1)
#loc7 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":37:1)
#loc8 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":22:5)
#loc9 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":36:5)
#loc10 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":22:12)
#loc11 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":24:5)
#loc12 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":25:5)
#loc13 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":30:5)
#loc14 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":26:9)
#loc15 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":26:52)
#loc16 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":27:9)
#loc17 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":27:31)
#loc18 = loc("../../testcasesupport/std_testcase.h":98:9)
#loc19 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":28:27)
#loc20 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":28:9)
#loc21 = loc("../../testcasesupport/std_testcase.h":99:9)
#loc22 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":29:27)
#loc23 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":29:9)
#loc24 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":31:5)
#loc25 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":32:5)
#loc26 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":34:9)
#loc27 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":35:9)
#loc28 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":95:1)
#loc29 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":99:1)
#loc30 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":97:5)
#loc31 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":97:11)
#loc32 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":98:5)
#loc33 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":98:11)
#loc34 = loc("/usr/include/stdlib.h":575:1)
#loc35 = loc("/usr/include/stdlib.h":575:41)
#loc36 = loc("/usr/include/time.h":76:1)
#loc37 = loc("/usr/include/time.h":76:38)
#loc38 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":115:15)
#loc39 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":117:15)
#loc40 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":120:15)
#loc41 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":122:15)
#loc42 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":110:1)
#loc43 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":125:1)
#loc48 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":111:1)
#loc49 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":113:27)
#loc50 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":113:22)
#loc51 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":113:5)
#loc52 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":115:5)
#loc53 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":116:5)
#loc54 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":116:58)
#loc55 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":117:5)
#loc56 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":120:5)
#loc57 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":121:5)
#loc58 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":121:57)
#loc59 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":122:5)
#loc60 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":124:12)
#loc61 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":124:5)
#loc62 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":44:1)
#loc63 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":67:1)
#loc64 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":46:5)
#loc65 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":66:5)
#loc66 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":46:12)
#loc67 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":48:5)
#loc68 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":50:19)
#loc69 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":50:9)
#loc70 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":51:9)
#loc71 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":52:5)
#loc72 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":53:5)
#loc73 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":64:5)
#loc74 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":54:9)
#loc75 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":54:23)
#loc76 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":55:9)
#loc77 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":55:52)
#loc78 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":56:23)
#loc79 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":56:9)
#loc80 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":57:23)
#loc81 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":57:9)
#loc82 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":58:10)
#loc83 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":59:9)
#loc84 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":63:9)
#loc85 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":60:13)
#loc86 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":60:35)
#loc87 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":61:31)
#loc88 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":61:13)
#loc89 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":62:31)
#loc90 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":62:13)
#loc91 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":65:5)
#loc92 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":70:1)
#loc93 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":93:1)
#loc94 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":72:5)
#loc95 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":92:5)
#loc96 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":72:12)
#loc97 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":74:5)
#loc98 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":75:5)
#loc99 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":86:5)
#loc100 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":76:9)
#loc101 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":76:23)
#loc102 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":77:9)
#loc103 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":77:52)
#loc104 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":78:23)
#loc105 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":78:9)
#loc106 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":79:23)
#loc107 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":79:9)
#loc108 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":80:10)
#loc109 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":81:9)
#loc110 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":85:9)
#loc111 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":82:13)
#loc112 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":82:35)
#loc113 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":83:31)
#loc114 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":83:13)
#loc115 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":84:31)
#loc116 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":84:13)
#loc117 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":87:5)
#loc118 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":88:5)
#loc119 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":90:19)
#loc120 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":90:9)
#loc121 = loc("CWE758_Undefined_Behavior__struct_alloca_use_15.c":91:9)
#loc122 = loc(fused[#loc1, #loc2])
#loc123 = loc(fused[#loc3, #loc4])
#loc124 = loc(fused[#loc6, #loc7])
#loc125 = loc(fused[#loc8, #loc9])
#loc126 = loc(fused[#loc12, #loc13])
#loc127 = loc(fused[#loc14, #loc15])
#loc128 = loc(fused[#loc16, #loc17])
#loc129 = loc(fused[#loc28, #loc29])
#loc130 = loc(fused[#loc30, #loc31])
#loc131 = loc(fused[#loc32, #loc33])
#loc132 = loc(fused[#loc34, #loc35])
#loc133 = loc(fused[#loc36, #loc37])
#loc134 = loc(fused[#loc42, #loc43])
#loc137 = loc(fused[#loc53, #loc54])
#loc138 = loc(fused[#loc57, #loc58])
#loc139 = loc(fused[#loc61, #loc60])
#loc140 = loc(fused[#loc62, #loc63])
#loc141 = loc(fused[#loc64, #loc65])
#loc142 = loc(fused[#loc72, #loc73])
#loc143 = loc(fused[#loc74, #loc75])
#loc144 = loc(fused[#loc76, #loc77])
#loc145 = loc(fused[#loc79, #loc78])
#loc146 = loc(fused[#loc81, #loc80])
#loc147 = loc(fused[#loc83, #loc84])
#loc148 = loc(fused[#loc85, #loc86])
#loc149 = loc(fused[#loc92, #loc93])
#loc150 = loc(fused[#loc94, #loc95])
#loc151 = loc(fused[#loc98, #loc99])
#loc152 = loc(fused[#loc100, #loc101])
#loc153 = loc(fused[#loc102, #loc103])
#loc154 = loc(fused[#loc105, #loc104])
#loc155 = loc(fused[#loc107, #loc106])
#loc156 = loc(fused[#loc109, #loc110])
#loc157 = loc(fused[#loc111, #loc112])
