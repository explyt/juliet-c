!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45L7badDataE = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc114)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc115)
  cir.func private @printIntLine(!s32i) loc(#loc116)
  cir.func internal private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45L7badSinkEv() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc118)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc119)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc120)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc121)
    %4 = cir.get_global @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45L7badDataE : !cir.ptr<!s32i> loc(#loc114)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc15)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc121)
    cir.br ^bb1 loc(#loc122)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc18)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc18)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc123)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc124)
    cir.store %9, %0 : !u64i, !cir.ptr<!u64i> loc(#loc125)
    %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc22)
    %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc23)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc126)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc126)
    cir.store %13, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc127)
    cir.br ^bb2 loc(#loc128)
  ^bb2:  // pred: ^bb1
    %14 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc29)
    cir.store %15, %1 : !u64i, !cir.ptr<!u64i> loc(#loc129)
    cir.br ^bb3 loc(#loc128)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc31)
    %17 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc32)
    %19 = cir.cmp(lt, %16, %18) : !u64i, !cir.bool loc(#loc130)
    cir.brcond %19 ^bb4, ^bb8 loc(#loc130)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc131)
  ^bb5:  // pred: ^bb4
    %20 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %21 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc35)
    %22 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc36)
    %23 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %22 : !u64i), !cir.ptr<!s32i> loc(#loc37)
    cir.store %20, %23 : !s32i, !cir.ptr<!s32i> loc(#loc132)
    cir.br ^bb6 loc(#loc28)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc28)
  ^bb7:  // pred: ^bb6
    %24 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc38)
    %25 = cir.unary(inc, %24) : !u64i, !u64i loc(#loc39)
    cir.store %25, %1 : !u64i, !cir.ptr<!u64i> loc(#loc133)
    cir.br ^bb3 loc(#loc128)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc28)
  ^bb9:  // pred: ^bb8
    %26 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc40)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !s32i), !cir.ptr<!s32i> loc(#loc42)
    %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc40)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc43)
    %30 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc44)
    cir.delete.array %30 : <!s32i> loc(#loc44)
    cir.br ^bb10 loc(#loc17)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc8)
  } loc(#loc117)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_453badEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc135)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc50)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc136)
    %3 = cir.const #cir.int<2147483647> : !s32i loc(#loc52)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc53)
    %5 = cir.binop(div, %3, %4) : !s32i loc(#loc137)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc54)
    %7 = cir.binop(add, %5, %6) nsw : !s32i loc(#loc137)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    %9 = cir.get_global @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45L7badDataE : !cir.ptr<!s32i> loc(#loc114)
    cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc139)
    cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45L7badSinkEv() : () -> () loc(#loc58)
    cir.return loc(#loc46)
  } loc(#loc134)
  cir.global "private" internal dsolocal @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45L11goodG2BDataE = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc140)
  cir.func internal private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45L11goodG2BSinkEv() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc142)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc143)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc144)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc145)
    %4 = cir.get_global @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45L11goodG2BDataE : !cir.ptr<!s32i> loc(#loc140)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc69)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc145)
    cir.br ^bb1 loc(#loc146)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc72)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc147)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc148)
    cir.store %9, %0 : !u64i, !cir.ptr<!u64i> loc(#loc149)
    %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc76)
    %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc77)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc150)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc150)
    cir.store %13, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc151)
    cir.br ^bb2 loc(#loc152)
  ^bb2:  // pred: ^bb1
    %14 = cir.const #cir.int<0> : !s32i loc(#loc83)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc83)
    cir.store %15, %1 : !u64i, !cir.ptr<!u64i> loc(#loc153)
    cir.br ^bb3 loc(#loc152)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc85)
    %17 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc86)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc86)
    %19 = cir.cmp(lt, %16, %18) : !u64i, !cir.bool loc(#loc154)
    cir.brcond %19 ^bb4, ^bb8 loc(#loc154)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc155)
  ^bb5:  // pred: ^bb4
    %20 = cir.const #cir.int<0> : !s32i loc(#loc88)
    %21 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc89)
    %22 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc90)
    %23 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %22 : !u64i), !cir.ptr<!s32i> loc(#loc91)
    cir.store %20, %23 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    cir.br ^bb6 loc(#loc82)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc82)
  ^bb7:  // pred: ^bb6
    %24 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc92)
    %25 = cir.unary(inc, %24) : !u64i, !u64i loc(#loc93)
    cir.store %25, %1 : !u64i, !cir.ptr<!u64i> loc(#loc157)
    cir.br ^bb3 loc(#loc152)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc82)
  ^bb9:  // pred: ^bb8
    %26 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc94)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc95)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !s32i), !cir.ptr<!s32i> loc(#loc96)
    %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc97)
    %30 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc98)
    cir.delete.array %30 : <!s32i> loc(#loc98)
    cir.br ^bb10 loc(#loc71)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc62)
  } loc(#loc141)
  cir.func internal private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc159)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc103)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc104)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc160)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc106)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc108)
    %5 = cir.get_global @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45L11goodG2BDataE : !cir.ptr<!s32i> loc(#loc140)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc162)
    cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45L11goodG2BSinkEv() : () -> () loc(#loc110)
    cir.return loc(#loc100)
  } loc(#loc158)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_454goodEv() extra(#fn_attr) {
    cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45L7goodG2BEv() : () -> () loc(#loc113)
    cir.return loc(#loc112)
  } loc(#loc163)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":0:0)
#loc1 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":22:1)
#loc2 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":22:12)
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":27:1)
#loc8 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":43:1)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":31:9)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":31:16)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":31:26)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":32:9)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":32:14)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":29:5)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":29:16)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":30:5)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":42:5)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":34:21)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":34:28)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":34:38)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":34:9)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":35:37)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":27:13)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":35:28)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":35:46)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":35:9)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":36:9)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":39:9)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":36:18)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":36:14)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":36:21)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":36:33)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":37:9)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":38:29)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":38:13)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":38:24)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":38:25)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":36:40)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":36:39)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":40:22)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":40:33)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":40:34)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":40:9)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":41:19)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":45:1)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":56:1)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":47:5)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":47:9)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":49:13)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":49:12)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":49:5)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":51:12)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":51:22)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":51:26)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":51:5)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":54:15)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":54:5)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":55:5)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":23:1)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":23:12)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":63:1)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":79:1)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":67:9)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":67:16)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":67:26)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":68:9)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":68:14)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":65:5)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":65:16)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":66:5)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":78:5)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":70:21)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":70:28)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":70:38)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":70:9)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":71:37)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":63:13)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":71:28)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":71:46)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":71:9)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":72:9)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":75:9)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":72:18)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":72:14)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":72:21)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":72:33)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":73:9)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":74:29)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":74:13)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":74:24)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":74:25)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":72:40)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":72:39)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":76:22)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":76:33)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":76:34)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":76:9)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":77:19)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":81:1)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":90:1)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":83:5)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":83:9)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":85:13)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":85:12)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":85:5)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":87:12)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":87:5)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":88:19)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":88:5)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":89:5)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":92:1)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":95:1)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_45.cpp":94:5)
#loc114 = loc(fused[#loc1, #loc2])
#loc115 = loc(fused[#loc3, #loc4])
#loc116 = loc(fused[#loc5, #loc6])
#loc117 = loc(fused[#loc7, #loc8])
#loc118 = loc(fused[#loc9, #loc10])
#loc119 = loc(fused[#loc9, #loc11])
#loc120 = loc(fused[#loc12, #loc13])
#loc121 = loc(fused[#loc14, #loc15])
#loc122 = loc(fused[#loc16, #loc17])
#loc123 = loc(fused[#loc19, #loc20])
#loc124 = loc(fused[#loc18, #loc20])
#loc125 = loc(fused[#loc21, #loc20])
#loc126 = loc(fused[#loc24, #loc25])
#loc127 = loc(fused[#loc26, #loc25])
#loc128 = loc(fused[#loc27, #loc28])
#loc129 = loc(fused[#loc30, #loc29])
#loc130 = loc(fused[#loc31, #loc32])
#loc131 = loc(fused[#loc33, #loc28])
#loc132 = loc(fused[#loc35, #loc34])
#loc133 = loc(fused[#loc39, #loc38])
#loc134 = loc(fused[#loc45, #loc46])
#loc135 = loc(fused[#loc47, #loc48])
#loc136 = loc(fused[#loc51, #loc49])
#loc137 = loc(fused[#loc52, #loc53])
#loc138 = loc(fused[#loc55, #loc54])
#loc139 = loc(fused[#loc57, #loc56])
#loc140 = loc(fused[#loc59, #loc60])
#loc141 = loc(fused[#loc61, #loc62])
#loc142 = loc(fused[#loc63, #loc64])
#loc143 = loc(fused[#loc63, #loc65])
#loc144 = loc(fused[#loc66, #loc67])
#loc145 = loc(fused[#loc68, #loc69])
#loc146 = loc(fused[#loc70, #loc71])
#loc147 = loc(fused[#loc73, #loc74])
#loc148 = loc(fused[#loc72, #loc74])
#loc149 = loc(fused[#loc75, #loc74])
#loc150 = loc(fused[#loc78, #loc79])
#loc151 = loc(fused[#loc80, #loc79])
#loc152 = loc(fused[#loc81, #loc82])
#loc153 = loc(fused[#loc84, #loc83])
#loc154 = loc(fused[#loc85, #loc86])
#loc155 = loc(fused[#loc87, #loc82])
#loc156 = loc(fused[#loc89, #loc88])
#loc157 = loc(fused[#loc93, #loc92])
#loc158 = loc(fused[#loc99, #loc100])
#loc159 = loc(fused[#loc101, #loc102])
#loc160 = loc(fused[#loc105, #loc103])
#loc161 = loc(fused[#loc107, #loc106])
#loc162 = loc(fused[#loc109, #loc108])
#loc163 = loc(fused[#loc111, #loc112])
