!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc6 = loc("../../../testcasesupport/std_testcase.h":96:16)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s03/CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  internal dsolocal @_ZZN55CWE590_Free_Memory_Not_on_Heap__delete_struct_static_123badEvE10dataBuffer = #cir.zero : !ty__twoIntsStruct {alignment = 4 : i64} loc(#loc1)
  cir.func private  @globalReturnsTrueOrFalse() -> !s32i loc(#loc91)
  cir.func private  @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc92)
  cir.func linkonce_odr  @_ZN14_twoIntsStructC2Ev(%arg0: !cir.ptr<!ty__twoIntsStruct> loc("../../../testcasesupport/std_testcase.h":96:16)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["this", init] {alignment = 8 : i64} loc(#loc6)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc6)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc6)
    cir.return loc(#loc6)
  } loc(#loc6)
  cir.func private  @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc93)
  cir.func private  @_ZdlPvm(!cir.ptr<!void>, !u64i) extra(#fn_attr1) loc(#loc94)
  cir.func  @_ZN55CWE590_Free_Memory_Not_on_Heap__delete_struct_static_123badEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc96)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc15)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc97)
    cir.scope {
      %6 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc19)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc99)
      cir.if %7 {
        cir.scope {
          %8 = cir.get_global @_ZZN55CWE590_Free_Memory_Not_on_Heap__delete_struct_static_123badEvE10dataBuffer : !cir.ptr<!ty__twoIntsStruct> loc(#loc1)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc26)
          %10 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc27)
          cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc102)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc29)
          %12 = cir.get_member %8[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc30)
          cir.store %11, %12 : !s32i, !cir.ptr<!s32i> loc(#loc103)
          cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc104)
        } loc(#loc101)
      } else {
        cir.scope {
          %8 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc106)
          %9 = cir.const #cir.int<8> : !u64i loc(#loc107)
          %10 = cir.call @_Znwm(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc106)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc107)
          cir.call @_ZN14_twoIntsStructC2Ev(%11) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr1) loc(#loc37)
          cir.store %11, %8 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc106)
          %12 = cir.const #cir.int<2> : !s32i loc(#loc39)
          %13 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc40)
          %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc27)
          cir.store %12, %14 : !s32i, !cir.ptr<!s32i> loc(#loc108)
          %15 = cir.const #cir.int<2> : !s32i loc(#loc41)
          %16 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc42)
          %17 = cir.get_member %16[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc30)
          cir.store %15, %17 : !s32i, !cir.ptr<!s32i> loc(#loc109)
          %18 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc43)
          cir.store %18, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc110)
        } loc(#loc105)
      } loc(#loc100)
    } loc(#loc98)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc45)
    cir.call @printStructLine(%2) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc46)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc47)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc47)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc48)
    cir.call @_ZdlPvm(%4, %5) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr1) loc(#loc48)
    cir.return loc(#loc12)
  } loc(#loc95)
  cir.func internal private  @_ZN55CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12L7goodG2BEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc112)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc53)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc113)
    cir.scope {
      %6 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc57)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc115)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc118)
          %9 = cir.const #cir.int<8> : !u64i loc(#loc119)
          %10 = cir.call @_Znwm(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc118)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc119)
          cir.call @_ZN14_twoIntsStructC2Ev(%11) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr1) loc(#loc65)
          cir.store %11, %8 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc118)
          %12 = cir.const #cir.int<2> : !s32i loc(#loc67)
          %13 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc68)
          %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc27)
          cir.store %12, %14 : !s32i, !cir.ptr<!s32i> loc(#loc120)
          %15 = cir.const #cir.int<2> : !s32i loc(#loc69)
          %16 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc70)
          %17 = cir.get_member %16[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc30)
          cir.store %15, %17 : !s32i, !cir.ptr<!s32i> loc(#loc121)
          %18 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc71)
          cir.store %18, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc122)
        } loc(#loc117)
      } else {
        cir.scope {
          %8 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc124)
          %9 = cir.const #cir.int<8> : !u64i loc(#loc125)
          %10 = cir.call @_Znwm(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc124)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc125)
          cir.call @_ZN14_twoIntsStructC2Ev(%11) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr1) loc(#loc76)
          cir.store %11, %8 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc124)
          %12 = cir.const #cir.int<2> : !s32i loc(#loc78)
          %13 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc79)
          %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc27)
          cir.store %12, %14 : !s32i, !cir.ptr<!s32i> loc(#loc126)
          %15 = cir.const #cir.int<2> : !s32i loc(#loc80)
          %16 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc81)
          %17 = cir.get_member %16[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc30)
          cir.store %15, %17 : !s32i, !cir.ptr<!s32i> loc(#loc127)
          %18 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc82)
          cir.store %18, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc128)
        } loc(#loc123)
      } loc(#loc116)
    } loc(#loc114)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc84)
    cir.call @printStructLine(%2) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc85)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc86)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc86)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc87)
    cir.call @_ZdlPvm(%4, %5) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr1) loc(#loc87)
    cir.return loc(#loc50)
  } loc(#loc111)
  cir.func  @_ZN55CWE590_Free_Memory_Not_on_Heap__delete_struct_static_124goodEv() extra(#fn_attr2) {
    cir.call @_ZN55CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12L7goodG2BEv() : () -> () loc(#loc90)
    cir.return loc(#loc89)
  } loc(#loc129)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s03/CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":34:34)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc5 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc9 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":140:1)
#loc10 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":141:41)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":26:1)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":53:1)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":28:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":28:21)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":29:12)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":29:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":30:5)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":49:5)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":30:8)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":30:33)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":31:5)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":39:5)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":41:5)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":32:9)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":38:9)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":35:33)
#loc27 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":35:13)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":36:33)
#loc30 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":36:13)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":37:13)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":37:21)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":42:9)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":48:9)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":44:13)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":44:46)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":44:42)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":45:34)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":45:13)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":46:34)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":46:13)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":47:20)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":47:13)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":50:21)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":50:5)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":52:12)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":26:6)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":61:1)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":88:1)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":63:5)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":63:21)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":64:12)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":64:5)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":65:5)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":84:5)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":65:8)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":65:33)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":66:5)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":74:5)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":76:5)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":67:9)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":73:9)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":69:13)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":69:46)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":69:42)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":70:34)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":70:13)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":71:34)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":71:13)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":72:20)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":72:13)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":77:9)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":83:9)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":79:13)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":79:46)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":79:42)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":80:34)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":80:13)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":81:34)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":81:13)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":82:20)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":82:13)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":85:21)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":85:5)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":87:12)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":61:13)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":90:1)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":93:1)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_static_12.cpp":92:5)
#loc91 = loc(fused[#loc2, #loc3])
#loc92 = loc(fused[#loc4, #loc5])
#loc93 = loc(fused[#loc7, #loc8])
#loc94 = loc(fused[#loc9, #loc10])
#loc95 = loc(fused[#loc11, #loc12])
#loc96 = loc(fused[#loc13, #loc14])
#loc97 = loc(fused[#loc16, #loc15])
#loc98 = loc(fused[#loc17, #loc18])
#loc99 = loc(fused[#loc19, #loc20])
#loc100 = loc(fused[#loc21, #loc22, #loc23, #loc18])
#loc101 = loc(fused[#loc24, #loc25])
#loc102 = loc(fused[#loc28, #loc26])
#loc103 = loc(fused[#loc31, #loc29])
#loc104 = loc(fused[#loc32, #loc33])
#loc105 = loc(fused[#loc34, #loc35])
#loc106 = loc(fused[#loc36, #loc37])
#loc107 = loc(fused[#loc38, #loc37])
#loc108 = loc(fused[#loc40, #loc39])
#loc109 = loc(fused[#loc42, #loc41])
#loc110 = loc(fused[#loc44, #loc43])
#loc111 = loc(fused[#loc49, #loc50])
#loc112 = loc(fused[#loc51, #loc52])
#loc113 = loc(fused[#loc54, #loc53])
#loc114 = loc(fused[#loc55, #loc56])
#loc115 = loc(fused[#loc57, #loc58])
#loc116 = loc(fused[#loc59, #loc60, #loc61, #loc56])
#loc117 = loc(fused[#loc62, #loc63])
#loc118 = loc(fused[#loc64, #loc65])
#loc119 = loc(fused[#loc66, #loc65])
#loc120 = loc(fused[#loc68, #loc67])
#loc121 = loc(fused[#loc70, #loc69])
#loc122 = loc(fused[#loc72, #loc71])
#loc123 = loc(fused[#loc73, #loc74])
#loc124 = loc(fused[#loc75, #loc76])
#loc125 = loc(fused[#loc77, #loc76])
#loc126 = loc(fused[#loc79, #loc78])
#loc127 = loc(fused[#loc81, #loc80])
#loc128 = loc(fused[#loc83, #loc82])
#loc129 = loc(fused[#loc88, #loc89])
