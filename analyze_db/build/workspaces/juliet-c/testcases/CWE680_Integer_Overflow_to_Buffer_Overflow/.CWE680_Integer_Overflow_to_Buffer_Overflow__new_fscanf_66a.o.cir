!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @__isoc23_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc45)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_667badSinkEPi(!cir.ptr<!s32i>) loc(#loc47)
  cir.func @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_663badEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc49)
    %1 = cir.alloca !cir.array<!s32i x 5>, !cir.ptr<!cir.array<!s32i x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc50)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc15)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc51)
    %4 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc17)
    %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc46)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc18)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %9 = cir.call @__isoc23_fscanf(%6, %8, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc17)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    %11 = cir.const #cir.int<2> : !s32i loc(#loc20)
    %12 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc21)
    %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc21)
    cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc52)
    %14 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc22)
    cir.call @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_667badSinkEPi(%14) : (!cir.ptr<!s32i>) -> () loc(#loc23)
    cir.return loc(#loc9)
  } loc(#loc48)
  cir.func private @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_6611goodG2BSinkEPi(!cir.ptr<!s32i>) loc(#loc53)
  cir.func internal private @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc55)
    %1 = cir.alloca !cir.array<!s32i x 5>, !cir.ptr<!cir.array<!s32i x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc56)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc33)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc57)
    %4 = cir.const #cir.int<20> : !s32i loc(#loc35)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc58)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc38)
    %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc39)
    %8 = cir.ptr_stride(%7 : !cir.ptr<!s32i>, %6 : !s32i), !cir.ptr<!s32i> loc(#loc39)
    cir.store %5, %8 : !s32i, !cir.ptr<!s32i> loc(#loc59)
    %9 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc40)
    cir.call @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_6611goodG2BSinkEPi(%9) : (!cir.ptr<!s32i>) -> () loc(#loc41)
    cir.return loc(#loc27)
  } loc(#loc54)
  cir.func @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_664goodEv() extra(#fn_attr) {
    cir.call @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66L7goodG2BEv() : () -> () loc(#loc44)
    cir.return loc(#loc43)
  } loc(#loc60)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":442:1)
#loc2 = loc("/usr/include/stdio.h":444:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":34:19)
#loc6 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":25:1)
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":25:29)
#loc8 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":27:1)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":38:1)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":29:5)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":29:9)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":30:5)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":30:20)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":32:13)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":32:12)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":32:5)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":34:5)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":34:12)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":36:20)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":36:15)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":36:5)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":37:13)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":37:5)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":47:1)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":47:33)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":49:1)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":59:1)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":51:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":51:9)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":52:5)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":52:20)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":54:13)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":54:12)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":54:5)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":56:12)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":56:5)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":57:20)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":57:15)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":57:5)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":58:17)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":58:5)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":61:1)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":64:1)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_66a.cpp":63:5)
#loc45 = loc(fused[#loc1, #loc2])
#loc46 = loc(fused[#loc3, #loc4])
#loc47 = loc(fused[#loc6, #loc7])
#loc48 = loc(fused[#loc8, #loc9])
#loc49 = loc(fused[#loc10, #loc11])
#loc50 = loc(fused[#loc12, #loc13])
#loc51 = loc(fused[#loc16, #loc14])
#loc52 = loc(fused[#loc21, #loc19])
#loc53 = loc(fused[#loc24, #loc25])
#loc54 = loc(fused[#loc26, #loc27])
#loc55 = loc(fused[#loc28, #loc29])
#loc56 = loc(fused[#loc30, #loc31])
#loc57 = loc(fused[#loc34, #loc32])
#loc58 = loc(fused[#loc36, #loc35])
#loc59 = loc(fused[#loc39, #loc37])
#loc60 = loc(fused[#loc42, #loc43])
