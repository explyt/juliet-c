!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":24:79)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":24:95)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":47:84)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":47:100)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":66:84)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":66:100)
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc107 = loc(fused[#loc9, #loc10])
#loc122 = loc(fused[#loc44, #loc45])
#loc136 = loc(fused[#loc77, #loc78])
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" external @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_badGlobal : !s32i {alignment = 4 : i64} loc(#loc103)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc104)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc105)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_badSource(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc9, #loc10])) -> !cir.ptr<!ty__twoIntsStruct> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc107)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["__retval"] {alignment = 8 : i64} loc(#loc8)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc11)
    cir.scope {
      %4 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_badGlobal : !cir.ptr<!s32i> loc(#loc103)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc14)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc14)
      cir.if %6 {
        %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc16)
        %8 = cir.const #cir.int<8> : !u64i loc(#loc110)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc16)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc111)
        cir.store %10, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc112)
        cir.scope {
          %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc23)
          %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc24)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc24)
          %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc114)
          cir.if %20 {
            %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc26)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc27)
            %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc28)
            cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc26)
          } loc(#loc115)
        } loc(#loc113)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc29)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
        %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
        cir.store %11, %13 : !s32i, !cir.ptr<!s32i> loc(#loc116)
        %14 = cir.const #cir.int<2> : !s32i loc(#loc32)
        %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc33)
        %16 = cir.get_member %15[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc34)
        cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc117)
      } loc(#loc109)
    } loc(#loc108)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc35)
    cir.store %2, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc118)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc118)
    cir.return %3 : !cir.ptr<!ty__twoIntsStruct> loc(#loc118)
  } loc(#loc106)
  cir.global "private" external @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_goodG2B1Global : !s32i {alignment = 4 : i64} loc(#loc119)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc120)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc41)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_goodG2B1Source(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc44, #loc45])) -> !cir.ptr<!ty__twoIntsStruct> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc122)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["__retval"] {alignment = 8 : i64} loc(#loc43)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc46)
    cir.scope {
      %4 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_goodG2B1Global : !cir.ptr<!s32i> loc(#loc119)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc49)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc49)
      cir.if %6 {
        %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc41)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc41)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc53)
      } else {
        %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc54)
        %8 = cir.const #cir.int<8> : !u64i loc(#loc125)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc54)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc126)
        cir.store %10, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc127)
        cir.scope {
          %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc61)
          %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc62)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc62)
          %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc129)
          cir.if %20 {
            %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc64)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc65)
            %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc66)
            cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc64)
          } loc(#loc130)
        } loc(#loc128)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc67)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc68)
        %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
        cir.store %11, %13 : !s32i, !cir.ptr<!s32i> loc(#loc131)
        %14 = cir.const #cir.int<2> : !s32i loc(#loc69)
        %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc70)
        %16 = cir.get_member %15[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc34)
        cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc132)
      } loc(#loc124)
    } loc(#loc123)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc71)
    cir.store %2, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc133)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc133)
    cir.return %3 : !cir.ptr<!ty__twoIntsStruct> loc(#loc133)
  } loc(#loc121)
  cir.global "private" external @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_goodG2B2Global : !s32i {alignment = 4 : i64} loc(#loc134)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_goodG2B2Source(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc77, #loc78])) -> !cir.ptr<!ty__twoIntsStruct> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc136)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["__retval"] {alignment = 8 : i64} loc(#loc76)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc79)
    cir.scope {
      %4 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_goodG2B2Global : !cir.ptr<!s32i> loc(#loc134)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc82)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc82)
      cir.if %6 {
        %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc84)
        %8 = cir.const #cir.int<8> : !u64i loc(#loc139)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc84)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc140)
        cir.store %10, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc141)
        cir.scope {
          %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc91)
          %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc92)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc92)
          %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc143)
          cir.if %20 {
            %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc94)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc95)
            %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc96)
            cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc94)
          } loc(#loc144)
        } loc(#loc142)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc97)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc98)
        %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
        cir.store %11, %13 : !s32i, !cir.ptr<!s32i> loc(#loc145)
        %14 = cir.const #cir.int<2> : !s32i loc(#loc99)
        %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc100)
        %16 = cir.get_member %15[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc34)
        cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc146)
      } loc(#loc138)
    } loc(#loc137)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc101)
    cir.store %2, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc147)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc147)
    cir.return %3 : !cir.ptr<!ty__twoIntsStruct> loc(#loc147)
  } loc(#loc135)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":22:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":22:12)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":24:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":36:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":25:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":26:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":34:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":26:8)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":27:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":30:33)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":30:40)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":30:51)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":30:52)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":30:9)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":31:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":31:37)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":31:13)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":31:21)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":31:27)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":31:28)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":31:34)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":31:33)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":32:24)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":32:9)
#loc31 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":33:24)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":33:9)
#loc34 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":35:12)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":35:5)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":43:1)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":43:12)
#loc39 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc40 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":52:19)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":47:1)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":63:1)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":48:1)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":49:5)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":61:5)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":49:8)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":50:5)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":53:5)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":55:5)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":52:9)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":57:33)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":57:40)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":57:52)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":57:53)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":57:9)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":58:9)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":58:37)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":58:13)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":58:21)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":58:27)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":58:28)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":58:34)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":58:33)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":59:24)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":59:9)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":60:24)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":60:9)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":62:12)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":62:5)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":44:1)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":44:12)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":66:1)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":77:1)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":67:1)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":68:5)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":75:5)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":68:8)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":69:5)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":71:33)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":71:40)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":71:52)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":71:53)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":71:9)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":72:9)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":72:37)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":72:13)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":72:21)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":72:27)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":72:28)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":72:34)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":72:33)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":73:24)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":73:9)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":74:24)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":74:9)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":76:12)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":76:5)
#loc103 = loc(fused[#loc1, #loc2])
#loc104 = loc(fused[#loc3, #loc4])
#loc105 = loc(fused[#loc5, #loc6])
#loc106 = loc(fused[#loc7, #loc8])
#loc108 = loc(fused[#loc12, #loc13])
#loc109 = loc(fused[#loc15, #loc13])
#loc110 = loc(fused[#loc17, #loc18])
#loc111 = loc(fused[#loc16, #loc19])
#loc112 = loc(fused[#loc20, #loc19])
#loc113 = loc(fused[#loc21, #loc22])
#loc114 = loc(fused[#loc23, #loc24])
#loc115 = loc(fused[#loc25, #loc22])
#loc116 = loc(fused[#loc30, #loc29])
#loc117 = loc(fused[#loc33, #loc32])
#loc118 = loc(fused[#loc36, #loc35])
#loc119 = loc(fused[#loc37, #loc38])
#loc120 = loc(fused[#loc39, #loc40])
#loc121 = loc(fused[#loc42, #loc43])
#loc123 = loc(fused[#loc47, #loc48])
#loc124 = loc(fused[#loc50, #loc51, #loc52, #loc48])
#loc125 = loc(fused[#loc55, #loc56])
#loc126 = loc(fused[#loc54, #loc57])
#loc127 = loc(fused[#loc58, #loc57])
#loc128 = loc(fused[#loc59, #loc60])
#loc129 = loc(fused[#loc61, #loc62])
#loc130 = loc(fused[#loc63, #loc60])
#loc131 = loc(fused[#loc68, #loc67])
#loc132 = loc(fused[#loc70, #loc69])
#loc133 = loc(fused[#loc72, #loc71])
#loc134 = loc(fused[#loc73, #loc74])
#loc135 = loc(fused[#loc75, #loc76])
#loc137 = loc(fused[#loc80, #loc81])
#loc138 = loc(fused[#loc83, #loc81])
#loc139 = loc(fused[#loc85, #loc86])
#loc140 = loc(fused[#loc84, #loc87])
#loc141 = loc(fused[#loc88, #loc87])
#loc142 = loc(fused[#loc89, #loc90])
#loc143 = loc(fused[#loc91, #loc92])
#loc144 = loc(fused[#loc93, #loc90])
#loc145 = loc(fused[#loc98, #loc97])
#loc146 = loc(fused[#loc100, #loc99])
#loc147 = loc(fused[#loc102, #loc101])
