!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":44:21)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":44:25)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":298:10)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":298:14)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":298:20)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":298:32)
#loc218 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":184:25)
#loc219 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":184:29)
#loc377 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":149:25)
#loc378 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":149:29)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc432 = loc(fused[#loc22, #loc23])
#loc498 = loc(fused[#loc197, #loc198])
#loc499 = loc(fused[#loc199, #loc200])
#loc504 = loc(fused[#loc218, #loc219])
#loc565 = loc(fused[#loc377, #loc378])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc422)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc423)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc424)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc425)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc426)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc427)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc428)
  cir.func private @close(!s32i) -> !s32i loc(#loc429)
  cir.func private @printIntLine(!s32i) loc(#loc430)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc19)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc22, #loc23])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc432)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc24)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc434)
      %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc435)
      %3 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc435)
      cir.store %3, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc435)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc33)
        %5 = cir.const #cir.int<0> : !s32i loc(#loc34)
        %6 = cir.cmp(ge, %4, %5) : !s32i, !cir.bool loc(#loc437)
        cir.if %6 {
          %7 = cir.const #cir.int<1> : !s32i loc(#loc38)
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc39)
          %9 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc40)
          %10 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc40)
          cir.store %7, %10 : !s32i, !cir.ptr<!s32i> loc(#loc439)
          cir.scope {
            %11 = cir.const #cir.int<0> : !s32i loc(#loc43)
            cir.store %11, %1 : !s32i, !cir.ptr<!s32i> loc(#loc441)
            cir.for : cond {
              %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc45)
              %13 = cir.const #cir.int<10> : !s32i loc(#loc46)
              %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc442)
              cir.condition(%14) loc(#loc47)
            } body {
              cir.scope {
                %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc49)
                %13 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc50)
                %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc50)
                %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc50)
                cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc51)
              } loc(#loc443)
              cir.yield loc(#loc42)
            } step {
              %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc52)
              %13 = cir.unary(inc, %12) : !s32i, !s32i loc(#loc53)
              cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc444)
              cir.yield loc(#loc440)
            } loc(#loc440)
          } loc(#loc440)
        } else {
          %7 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc19)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc19)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc54)
        } loc(#loc438)
      } loc(#loc436)
    } loc(#loc433)
    cir.return loc(#loc21)
  } loc(#loc431)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc446)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc60)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc447)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc449)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc450)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc451)
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc452)
      %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc453)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc69)
      %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc69)
      cir.store %10, %6 : !s32i, !cir.ptr<!s32i> loc(#loc451)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc71)
      %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc71)
      cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc452)
      cir.scope {
        cir.do {
          %13 = cir.const #cir.int<2> : !s32i loc(#loc76)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc77)
          %15 = cir.const #cir.int<6> : !s32i loc(#loc78)
          %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc79)
          cir.store %16, %6 : !s32i, !cir.ptr<!s32i> loc(#loc455)
          cir.scope {
            %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc84)
            %59 = cir.const #cir.int<1> : !s32i loc(#loc85)
            %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc85)
            %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc457)
            cir.if %61 {
              cir.break loc(#loc87)
            } loc(#loc458)
          } loc(#loc456)
          %17 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc459)
          %18 = cir.const #cir.int<0> : !s32i loc(#loc90)
          %19 = cir.const #cir.int<16> : !u64i loc(#loc460)
          cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc461)
          %20 = cir.const #cir.int<2> : !s32i loc(#loc95)
          %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc95)
          %22 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc96)
          cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc462)
          %23 = cir.const #cir.int<0> : !s32i loc(#loc98)
          %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc98)
          %25 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc99)
          %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc100)
          cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc463)
          %27 = cir.const #cir.int<27015> : !s32i loc(#loc102)
          %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc102)
          %29 = cir.call @htons(%28) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc103)
          %30 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc104)
          cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc464)
          cir.scope {
            %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc109)
            %59 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc466)
            %60 = cir.const #cir.int<16> : !u64i loc(#loc467)
            %61 = cir.cast(integral, %60 : !u64i), !u32i loc(#loc467)
            %62 = cir.call @bind(%58, %59, %61) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc114)
            %63 = cir.const #cir.int<1> : !s32i loc(#loc115)
            %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc115)
            %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc468)
            cir.if %65 {
              cir.break loc(#loc117)
            } loc(#loc469)
          } loc(#loc465)
          cir.scope {
            %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc120)
            %59 = cir.const #cir.int<5> : !s32i loc(#loc121)
            %60 = cir.call @listen(%58, %59) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc122)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc123)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc123)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc471)
            cir.if %63 {
              cir.break loc(#loc125)
            } loc(#loc472)
          } loc(#loc470)
          %31 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc126)
          %32 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc127)
          %33 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc128)
          %34 = cir.call @accept(%31, %32, %33) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc129)
          cir.store %34, %7 : !s32i, !cir.ptr<!s32i> loc(#loc473)
          cir.scope {
            %58 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc134)
            %59 = cir.const #cir.int<1> : !s32i loc(#loc135)
            %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc135)
            %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc475)
            cir.if %61 {
              cir.break loc(#loc137)
            } loc(#loc476)
          } loc(#loc474)
          %35 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc138)
          %36 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc139)
          %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc139)
          %38 = cir.const #cir.int<3> : !s32i loc(#loc140)
          %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc140)
          %40 = cir.const #cir.int<4> : !u64i loc(#loc140)
          %41 = cir.binop(mul, %39, %40) : !u64i loc(#loc140)
          %42 = cir.const #cir.int<2> : !s32i loc(#loc140)
          %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc140)
          %44 = cir.binop(add, %41, %43) : !u64i loc(#loc140)
          %45 = cir.const #cir.int<1> : !s32i loc(#loc141)
          %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc141)
          %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc477)
          %48 = cir.const #cir.int<0> : !s32i loc(#loc142)
          %49 = cir.call @recv(%35, %37, %47, %48) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc143)
          %50 = cir.cast(integral, %49 : !s64i), !s32i loc(#loc143)
          cir.store %50, %4 : !s32i, !cir.ptr<!s32i> loc(#loc478)
          cir.scope {
            %58 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc148)
            %59 = cir.const #cir.int<1> : !s32i loc(#loc149)
            %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc149)
            %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc480)
            %62 = cir.ternary(%61, true {
              %63 = cir.const #true loc(#loc150)
              cir.yield %63 : !cir.bool loc(#loc150)
            }, false {
              %63 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc151)
              %64 = cir.const #cir.int<0> : !s32i loc(#loc152)
              %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc481)
              %66 = cir.ternary(%65, true {
                %67 = cir.const #true loc(#loc150)
                cir.yield %67 : !cir.bool loc(#loc150)
              }, false {
                %67 = cir.const #false loc(#loc150)
                cir.yield %67 : !cir.bool loc(#loc150)
              }) : (!cir.bool) -> !cir.bool loc(#loc150)
              cir.yield %66 : !cir.bool loc(#loc150)
            }) : (!cir.bool) -> !cir.bool loc(#loc150)
            cir.if %62 {
              cir.break loc(#loc154)
            } loc(#loc482)
          } loc(#loc479)
          %51 = cir.const #cir.int<0> : !s32i loc(#loc155)
          %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc155)
          %53 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc156)
          %54 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc157)
          %55 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %53 : !s32i), !cir.ptr<!s8i> loc(#loc157)
          cir.store %52, %55 : !s8i, !cir.ptr<!s8i> loc(#loc483)
          %56 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc158)
          %57 = cir.call @atoi(%56) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc159)
          cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc484)
          cir.yield loc(#loc75)
        } while {
          %13 = cir.const #cir.int<0> : !s32i loc(#loc162)
          %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc162)
          cir.condition(%14) loc(#loc162)
        } loc(#loc454)
      } loc(#loc454)
      cir.scope {
        %13 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc165)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc166)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc166)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc486)
        cir.if %16 {
          %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc168)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc169)
        } loc(#loc487)
      } loc(#loc485)
      cir.scope {
        %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc172)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc173)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc173)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc489)
        cir.if %16 {
          %17 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc175)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc176)
        } loc(#loc490)
      } loc(#loc488)
    } loc(#loc448)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc177)
    cir.call @badSink(%3) : (!s32i) -> () loc(#loc178)
    cir.return loc(#loc56)
  } loc(#loc445)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc492)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc181)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc493)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc183)
    cir.return loc(#loc180)
  } loc(#loc491)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc494)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc495)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc496)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc191)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc192)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc193)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc194)
  cir.func @main(%arg0: !s32i loc(fused[#loc197, #loc198]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc199, #loc200])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc498)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc499)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc196)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc201)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc201)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc202)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc203)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc203)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc204)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc191)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc191)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc205)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41_good : !cir.ptr<!cir.func<!void ()>> loc(#loc500)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41_good() : () -> () loc(#loc206)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc192)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc192)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc208)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc193)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc193)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc209)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc501)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41_bad() : () -> () loc(#loc210)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc194)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc194)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc212)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc213)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc502)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc502)
    cir.return %17 : !s32i loc(#loc502)
  } loc(#loc497)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc215)
  cir.func internal private @goodB2GSink(%arg0: !s32i loc(fused[#loc218, #loc219])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc504)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc220)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc506)
      %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc507)
      %3 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc507)
      cir.store %3, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc507)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc229)
        %5 = cir.const #cir.int<0> : !s32i loc(#loc230)
        %6 = cir.cmp(ge, %4, %5) : !s32i, !cir.bool loc(#loc509)
        %7 = cir.ternary(%6, true {
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc232)
          %9 = cir.const #cir.int<10> : !s32i loc(#loc233)
          %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc510)
          %11 = cir.ternary(%10, true {
            %12 = cir.const #true loc(#loc231)
            cir.yield %12 : !cir.bool loc(#loc231)
          }, false {
            %12 = cir.const #false loc(#loc231)
            cir.yield %12 : !cir.bool loc(#loc231)
          }) : (!cir.bool) -> !cir.bool loc(#loc231)
          cir.yield %11 : !cir.bool loc(#loc231)
        }, false {
          %8 = cir.const #false loc(#loc231)
          cir.yield %8 : !cir.bool loc(#loc231)
        }) : (!cir.bool) -> !cir.bool loc(#loc231)
        cir.if %7 {
          %8 = cir.const #cir.int<1> : !s32i loc(#loc238)
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc239)
          %10 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc240)
          %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc240)
          cir.store %8, %11 : !s32i, !cir.ptr<!s32i> loc(#loc512)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc243)
            cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc514)
            cir.for : cond {
              %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc245)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc246)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc515)
              cir.condition(%15) loc(#loc247)
            } body {
              cir.scope {
                %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc249)
                %14 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc250)
                %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc250)
                %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc250)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc251)
              } loc(#loc516)
              cir.yield loc(#loc242)
            } step {
              %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc252)
              %14 = cir.unary(inc, %13) : !s32i, !s32i loc(#loc253)
              cir.store %14, %1 : !s32i, !cir.ptr<!s32i> loc(#loc517)
              cir.yield loc(#loc513)
            } loc(#loc513)
          } loc(#loc513)
        } else {
          %8 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc215)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc215)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc254)
        } loc(#loc511)
      } loc(#loc508)
    } loc(#loc505)
    cir.return loc(#loc217)
  } loc(#loc503)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc519)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc259)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc260)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc520)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc522)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc523)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc524)
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc525)
      %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc526)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc269)
      %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc269)
      cir.store %10, %6 : !s32i, !cir.ptr<!s32i> loc(#loc524)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc271)
      %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc271)
      cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc525)
      cir.scope {
        cir.do {
          %13 = cir.const #cir.int<2> : !s32i loc(#loc276)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc277)
          %15 = cir.const #cir.int<6> : !s32i loc(#loc278)
          %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc279)
          cir.store %16, %6 : !s32i, !cir.ptr<!s32i> loc(#loc528)
          cir.scope {
            %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc284)
            %59 = cir.const #cir.int<1> : !s32i loc(#loc285)
            %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc285)
            %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc530)
            cir.if %61 {
              cir.break loc(#loc287)
            } loc(#loc531)
          } loc(#loc529)
          %17 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc532)
          %18 = cir.const #cir.int<0> : !s32i loc(#loc290)
          %19 = cir.const #cir.int<16> : !u64i loc(#loc533)
          cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc534)
          %20 = cir.const #cir.int<2> : !s32i loc(#loc295)
          %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc295)
          %22 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc96)
          cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc535)
          %23 = cir.const #cir.int<0> : !s32i loc(#loc297)
          %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc297)
          %25 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc99)
          %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc100)
          cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc536)
          %27 = cir.const #cir.int<27015> : !s32i loc(#loc299)
          %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc299)
          %29 = cir.call @htons(%28) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc300)
          %30 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc104)
          cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc537)
          cir.scope {
            %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc305)
            %59 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc539)
            %60 = cir.const #cir.int<16> : !u64i loc(#loc540)
            %61 = cir.cast(integral, %60 : !u64i), !u32i loc(#loc540)
            %62 = cir.call @bind(%58, %59, %61) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc310)
            %63 = cir.const #cir.int<1> : !s32i loc(#loc311)
            %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc311)
            %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc541)
            cir.if %65 {
              cir.break loc(#loc313)
            } loc(#loc542)
          } loc(#loc538)
          cir.scope {
            %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc316)
            %59 = cir.const #cir.int<5> : !s32i loc(#loc317)
            %60 = cir.call @listen(%58, %59) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc318)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc319)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc319)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc544)
            cir.if %63 {
              cir.break loc(#loc321)
            } loc(#loc545)
          } loc(#loc543)
          %31 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc322)
          %32 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc323)
          %33 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc324)
          %34 = cir.call @accept(%31, %32, %33) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc325)
          cir.store %34, %7 : !s32i, !cir.ptr<!s32i> loc(#loc546)
          cir.scope {
            %58 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc330)
            %59 = cir.const #cir.int<1> : !s32i loc(#loc331)
            %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc331)
            %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc548)
            cir.if %61 {
              cir.break loc(#loc333)
            } loc(#loc549)
          } loc(#loc547)
          %35 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc334)
          %36 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc335)
          %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc335)
          %38 = cir.const #cir.int<3> : !s32i loc(#loc336)
          %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc336)
          %40 = cir.const #cir.int<4> : !u64i loc(#loc336)
          %41 = cir.binop(mul, %39, %40) : !u64i loc(#loc336)
          %42 = cir.const #cir.int<2> : !s32i loc(#loc336)
          %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc336)
          %44 = cir.binop(add, %41, %43) : !u64i loc(#loc336)
          %45 = cir.const #cir.int<1> : !s32i loc(#loc337)
          %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc337)
          %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc550)
          %48 = cir.const #cir.int<0> : !s32i loc(#loc338)
          %49 = cir.call @recv(%35, %37, %47, %48) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc339)
          %50 = cir.cast(integral, %49 : !s64i), !s32i loc(#loc339)
          cir.store %50, %4 : !s32i, !cir.ptr<!s32i> loc(#loc551)
          cir.scope {
            %58 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc344)
            %59 = cir.const #cir.int<1> : !s32i loc(#loc345)
            %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc345)
            %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc553)
            %62 = cir.ternary(%61, true {
              %63 = cir.const #true loc(#loc346)
              cir.yield %63 : !cir.bool loc(#loc346)
            }, false {
              %63 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc347)
              %64 = cir.const #cir.int<0> : !s32i loc(#loc348)
              %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc554)
              %66 = cir.ternary(%65, true {
                %67 = cir.const #true loc(#loc346)
                cir.yield %67 : !cir.bool loc(#loc346)
              }, false {
                %67 = cir.const #false loc(#loc346)
                cir.yield %67 : !cir.bool loc(#loc346)
              }) : (!cir.bool) -> !cir.bool loc(#loc346)
              cir.yield %66 : !cir.bool loc(#loc346)
            }) : (!cir.bool) -> !cir.bool loc(#loc346)
            cir.if %62 {
              cir.break loc(#loc350)
            } loc(#loc555)
          } loc(#loc552)
          %51 = cir.const #cir.int<0> : !s32i loc(#loc351)
          %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc351)
          %53 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc352)
          %54 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc353)
          %55 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %53 : !s32i), !cir.ptr<!s8i> loc(#loc353)
          cir.store %52, %55 : !s8i, !cir.ptr<!s8i> loc(#loc556)
          %56 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc354)
          %57 = cir.call @atoi(%56) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc355)
          cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc557)
          cir.yield loc(#loc275)
        } while {
          %13 = cir.const #cir.int<0> : !s32i loc(#loc358)
          %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc358)
          cir.condition(%14) loc(#loc358)
        } loc(#loc527)
      } loc(#loc527)
      cir.scope {
        %13 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc361)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc362)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc362)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc559)
        cir.if %16 {
          %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc364)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc365)
        } loc(#loc560)
      } loc(#loc558)
      cir.scope {
        %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc368)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc369)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc369)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc562)
        cir.if %16 {
          %17 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc371)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc372)
        } loc(#loc563)
      } loc(#loc561)
    } loc(#loc521)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc373)
    cir.call @goodB2GSink(%3) : (!s32i) -> () loc(#loc374)
    cir.return loc(#loc256)
  } loc(#loc518)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc377, #loc378])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc565)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc379)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc567)
      %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc568)
      %3 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc568)
      cir.store %3, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc568)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc388)
        %5 = cir.const #cir.int<0> : !s32i loc(#loc389)
        %6 = cir.cmp(ge, %4, %5) : !s32i, !cir.bool loc(#loc570)
        cir.if %6 {
          %7 = cir.const #cir.int<1> : !s32i loc(#loc393)
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc394)
          %9 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc395)
          %10 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc395)
          cir.store %7, %10 : !s32i, !cir.ptr<!s32i> loc(#loc572)
          cir.scope {
            %11 = cir.const #cir.int<0> : !s32i loc(#loc398)
            cir.store %11, %1 : !s32i, !cir.ptr<!s32i> loc(#loc574)
            cir.for : cond {
              %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc400)
              %13 = cir.const #cir.int<10> : !s32i loc(#loc401)
              %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc575)
              cir.condition(%14) loc(#loc402)
            } body {
              cir.scope {
                %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc404)
                %13 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc405)
                %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc405)
                %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc405)
                cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc406)
              } loc(#loc576)
              cir.yield loc(#loc397)
            } step {
              %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc407)
              %13 = cir.unary(inc, %12) : !s32i, !s32i loc(#loc408)
              cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc577)
              cir.yield loc(#loc573)
            } loc(#loc573)
          } loc(#loc573)
        } else {
          %7 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc409)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc409)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc410)
        } loc(#loc571)
      } loc(#loc569)
    } loc(#loc566)
    cir.return loc(#loc376)
  } loc(#loc564)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc579)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc415)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc416)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc580)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc418)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc581)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc420)
    cir.call @goodG2BSink(%4) : (!s32i) -> () loc(#loc421)
    cir.return loc(#loc412)
  } loc(#loc578)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":62:23)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":44:1)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":65:1)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":45:1)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":46:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":64:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":47:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":47:13)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":48:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":48:30)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":51:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":63:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":51:13)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":51:21)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":52:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":59:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":61:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":53:28)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":53:20)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":53:13)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":55:13)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":58:13)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":55:21)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":55:17)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":55:24)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":55:28)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":55:26)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":56:13)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":57:37)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":57:30)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":57:17)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":55:33)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":55:32)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":62:13)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":67:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":142:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":69:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":69:9)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":71:13)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":71:12)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":71:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":72:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":140:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":77:9)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":77:13)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":78:9)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":78:28)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":79:9)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":79:31)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":80:9)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":80:31)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":81:9)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":81:41)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":82:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":125:17)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":92:35)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":92:44)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":92:57)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":92:28)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":92:13)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":92:68)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":93:13)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":96:13)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":93:17)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":93:33)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":94:13)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":95:17)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":97:20)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":97:21)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":97:30)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":97:33)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":97:47)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":97:13)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":97:48)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":98:34)
#loc96 = loc("/usr/include/netinet/in.h":249:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":98:13)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":99:39)
#loc99 = loc("/usr/include/netinet/in.h":251:20)
#loc100 = loc("/usr/include/netinet/in.h":33:15)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":99:13)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":100:38)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":100:32)
#loc104 = loc("/usr/include/netinet/in.h":250:15)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":100:13)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":100:46)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":101:13)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":104:13)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":101:22)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":101:54)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":101:55)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":101:64)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":101:78)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":101:17)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":101:84)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":102:13)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":103:17)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":105:13)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":108:13)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":105:24)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":105:38)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":105:17)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":105:57)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":106:13)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":107:17)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":109:35)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":109:49)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":109:55)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":109:28)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":109:13)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":109:59)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":110:13)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":113:13)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":110:17)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":110:33)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":111:13)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":112:17)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":115:31)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":115:45)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":115:58)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":115:76)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":115:79)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":115:26)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":115:13)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":115:80)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":116:13)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":119:13)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":116:17)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":116:31)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":116:44)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":116:47)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":116:61)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":117:13)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":118:17)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":121:39)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":121:25)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":121:13)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":123:25)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":123:20)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":123:13)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":123:36)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":125:16)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":126:9)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":129:9)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":126:13)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":126:29)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":127:9)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":128:26)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":128:13)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":130:9)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":133:9)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":130:13)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":130:29)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":131:9)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":132:26)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":132:13)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":141:13)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":141:5)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":283:1)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":287:1)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":285:5)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":285:13)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":286:5)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":286:13)
#loc185 = loc("/usr/include/stdlib.h":575:1)
#loc186 = loc("/usr/include/stdlib.h":575:41)
#loc187 = loc("/usr/include/time.h":76:1)
#loc188 = loc("/usr/include/time.h":76:38)
#loc189 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc190 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":303:15)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":305:15)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":308:15)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":310:15)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":298:1)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":313:1)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":299:1)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":301:27)
#loc203 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":301:22)
#loc204 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":301:5)
#loc205 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":303:5)
#loc206 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":304:5)
#loc207 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":304:70)
#loc208 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":305:5)
#loc209 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":308:5)
#loc210 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":309:5)
#loc211 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":309:69)
#loc212 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":310:5)
#loc213 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":312:12)
#loc214 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":312:5)
#loc215 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":201:23)
#loc216 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":184:1)
#loc217 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":204:1)
#loc220 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":185:1)
#loc221 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":186:5)
#loc222 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":203:5)
#loc223 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":187:9)
#loc224 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":187:13)
#loc225 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":188:9)
#loc226 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":188:30)
#loc227 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":190:9)
#loc228 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":202:9)
#loc229 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":190:13)
#loc230 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":190:21)
#loc231 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":190:23)
#loc232 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":190:26)
#loc233 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":190:34)
#loc234 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":190:36)
#loc235 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":191:9)
#loc236 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":198:9)
#loc237 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":200:9)
#loc238 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":192:28)
#loc239 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":192:20)
#loc240 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":192:13)
#loc241 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":194:13)
#loc242 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":197:13)
#loc243 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":194:21)
#loc244 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":194:17)
#loc245 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":194:24)
#loc246 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":194:28)
#loc247 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":194:26)
#loc248 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":195:13)
#loc249 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":196:37)
#loc250 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":196:30)
#loc251 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":196:17)
#loc252 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":194:33)
#loc253 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":194:32)
#loc254 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":201:13)
#loc255 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":206:1)
#loc256 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":281:1)
#loc257 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":208:5)
#loc258 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":208:9)
#loc259 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":210:13)
#loc260 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":210:12)
#loc261 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":210:5)
#loc262 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":211:5)
#loc263 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":279:5)
#loc264 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":216:9)
#loc265 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":216:13)
#loc266 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":217:9)
#loc267 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":217:28)
#loc268 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":218:9)
#loc269 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":218:31)
#loc270 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":219:9)
#loc271 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":219:31)
#loc272 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":220:9)
#loc273 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":220:41)
#loc274 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":221:9)
#loc275 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":264:17)
#loc276 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":231:35)
#loc277 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":231:44)
#loc278 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":231:57)
#loc279 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":231:28)
#loc280 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":231:13)
#loc281 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":231:68)
#loc282 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":232:13)
#loc283 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":235:13)
#loc284 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":232:17)
#loc285 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":232:33)
#loc286 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":233:13)
#loc287 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":234:17)
#loc288 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":236:20)
#loc289 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":236:21)
#loc290 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":236:30)
#loc291 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":236:33)
#loc292 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":236:47)
#loc293 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":236:13)
#loc294 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":236:48)
#loc295 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":237:34)
#loc296 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":237:13)
#loc297 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":238:39)
#loc298 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":238:13)
#loc299 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":239:38)
#loc300 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":239:32)
#loc301 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":239:13)
#loc302 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":239:46)
#loc303 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":240:13)
#loc304 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":243:13)
#loc305 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":240:22)
#loc306 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":240:54)
#loc307 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":240:55)
#loc308 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":240:64)
#loc309 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":240:78)
#loc310 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":240:17)
#loc311 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":240:84)
#loc312 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":241:13)
#loc313 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":242:17)
#loc314 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":244:13)
#loc315 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":247:13)
#loc316 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":244:24)
#loc317 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":244:38)
#loc318 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":244:17)
#loc319 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":244:57)
#loc320 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":245:13)
#loc321 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":246:17)
#loc322 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":248:35)
#loc323 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":248:49)
#loc324 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":248:55)
#loc325 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":248:28)
#loc326 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":248:13)
#loc327 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":248:59)
#loc328 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":249:13)
#loc329 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":252:13)
#loc330 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":249:17)
#loc331 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":249:33)
#loc332 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":250:13)
#loc333 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":251:17)
#loc334 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":254:31)
#loc335 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":254:45)
#loc336 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":254:58)
#loc337 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":254:76)
#loc338 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":254:79)
#loc339 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":254:26)
#loc340 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":254:13)
#loc341 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":254:80)
#loc342 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":255:13)
#loc343 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":258:13)
#loc344 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":255:17)
#loc345 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":255:31)
#loc346 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":255:44)
#loc347 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":255:47)
#loc348 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":255:61)
#loc349 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":256:13)
#loc350 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":257:17)
#loc351 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":260:39)
#loc352 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":260:25)
#loc353 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":260:13)
#loc354 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":262:25)
#loc355 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":262:20)
#loc356 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":262:13)
#loc357 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":262:36)
#loc358 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":264:16)
#loc359 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":265:9)
#loc360 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":268:9)
#loc361 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":265:13)
#loc362 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":265:29)
#loc363 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":266:9)
#loc364 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":267:26)
#loc365 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":267:13)
#loc366 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":269:9)
#loc367 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":272:9)
#loc368 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":269:13)
#loc369 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":269:29)
#loc370 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":270:9)
#loc371 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":271:26)
#loc372 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":271:13)
#loc373 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":280:17)
#loc374 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":280:5)
#loc375 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":149:1)
#loc376 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":170:1)
#loc379 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":150:1)
#loc380 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":151:5)
#loc381 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":169:5)
#loc382 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":152:9)
#loc383 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":152:13)
#loc384 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":153:9)
#loc385 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":153:30)
#loc386 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":156:9)
#loc387 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":168:9)
#loc388 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":156:13)
#loc389 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":156:21)
#loc390 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":157:9)
#loc391 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":164:9)
#loc392 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":166:9)
#loc393 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":158:28)
#loc394 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":158:20)
#loc395 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":158:13)
#loc396 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":160:13)
#loc397 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":163:13)
#loc398 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":160:21)
#loc399 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":160:17)
#loc400 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":160:24)
#loc401 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":160:28)
#loc402 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":160:26)
#loc403 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":161:13)
#loc404 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":162:37)
#loc405 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":162:30)
#loc406 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":162:17)
#loc407 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":160:33)
#loc408 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":160:32)
#loc409 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":167:23)
#loc410 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":167:13)
#loc411 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":172:1)
#loc412 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":181:1)
#loc413 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":174:5)
#loc414 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":174:9)
#loc415 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":176:13)
#loc416 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":176:12)
#loc417 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":176:5)
#loc418 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":179:12)
#loc419 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":179:5)
#loc420 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":180:17)
#loc421 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_41.c":180:5)
#loc422 = loc(fused[#loc1, #loc2])
#loc423 = loc(fused[#loc3, #loc4])
#loc424 = loc(fused[#loc5, #loc6])
#loc425 = loc(fused[#loc7, #loc8])
#loc426 = loc(fused[#loc9, #loc10])
#loc427 = loc(fused[#loc11, #loc12])
#loc428 = loc(fused[#loc13, #loc14])
#loc429 = loc(fused[#loc15, #loc16])
#loc430 = loc(fused[#loc17, #loc18])
#loc431 = loc(fused[#loc20, #loc21])
#loc433 = loc(fused[#loc25, #loc26])
#loc434 = loc(fused[#loc27, #loc28])
#loc435 = loc(fused[#loc29, #loc30])
#loc436 = loc(fused[#loc31, #loc32])
#loc437 = loc(fused[#loc33, #loc34])
#loc438 = loc(fused[#loc35, #loc36, #loc37, #loc32])
#loc439 = loc(fused[#loc40, #loc38])
#loc440 = loc(fused[#loc41, #loc42])
#loc441 = loc(fused[#loc44, #loc43])
#loc442 = loc(fused[#loc45, #loc46])
#loc443 = loc(fused[#loc48, #loc42])
#loc444 = loc(fused[#loc53, #loc52])
#loc445 = loc(fused[#loc55, #loc56])
#loc446 = loc(fused[#loc57, #loc58])
#loc447 = loc(fused[#loc61, #loc59])
#loc448 = loc(fused[#loc62, #loc63])
#loc449 = loc(fused[#loc64, #loc65])
#loc450 = loc(fused[#loc66, #loc67])
#loc451 = loc(fused[#loc68, #loc69])
#loc452 = loc(fused[#loc70, #loc71])
#loc453 = loc(fused[#loc72, #loc73])
#loc454 = loc(fused[#loc74, #loc75])
#loc455 = loc(fused[#loc80, #loc81])
#loc456 = loc(fused[#loc82, #loc83])
#loc457 = loc(fused[#loc84, #loc85])
#loc458 = loc(fused[#loc86, #loc83])
#loc459 = loc(fused[#loc88, #loc89])
#loc460 = loc(fused[#loc91, #loc92])
#loc461 = loc(fused[#loc93, #loc94])
#loc462 = loc(fused[#loc97, #loc95])
#loc463 = loc(fused[#loc101, #loc98])
#loc464 = loc(fused[#loc105, #loc106])
#loc465 = loc(fused[#loc107, #loc108])
#loc466 = loc(fused[#loc110, #loc111])
#loc467 = loc(fused[#loc112, #loc113])
#loc468 = loc(fused[#loc114, #loc115])
#loc469 = loc(fused[#loc116, #loc108])
#loc470 = loc(fused[#loc118, #loc119])
#loc471 = loc(fused[#loc122, #loc123])
#loc472 = loc(fused[#loc124, #loc119])
#loc473 = loc(fused[#loc130, #loc131])
#loc474 = loc(fused[#loc132, #loc133])
#loc475 = loc(fused[#loc134, #loc135])
#loc476 = loc(fused[#loc136, #loc133])
#loc477 = loc(fused[#loc140, #loc141])
#loc478 = loc(fused[#loc144, #loc145])
#loc479 = loc(fused[#loc146, #loc147])
#loc480 = loc(fused[#loc148, #loc149])
#loc481 = loc(fused[#loc151, #loc152])
#loc482 = loc(fused[#loc153, #loc147])
#loc483 = loc(fused[#loc157, #loc155])
#loc484 = loc(fused[#loc160, #loc161])
#loc485 = loc(fused[#loc163, #loc164])
#loc486 = loc(fused[#loc165, #loc166])
#loc487 = loc(fused[#loc167, #loc164])
#loc488 = loc(fused[#loc170, #loc171])
#loc489 = loc(fused[#loc172, #loc173])
#loc490 = loc(fused[#loc174, #loc171])
#loc491 = loc(fused[#loc179, #loc180])
#loc492 = loc(fused[#loc181, #loc182])
#loc493 = loc(fused[#loc183, #loc184])
#loc494 = loc(fused[#loc185, #loc186])
#loc495 = loc(fused[#loc187, #loc188])
#loc496 = loc(fused[#loc189, #loc190])
#loc497 = loc(fused[#loc195, #loc196])
#loc500 = loc(fused[#loc206, #loc207])
#loc501 = loc(fused[#loc210, #loc211])
#loc502 = loc(fused[#loc214, #loc213])
#loc503 = loc(fused[#loc216, #loc217])
#loc505 = loc(fused[#loc221, #loc222])
#loc506 = loc(fused[#loc223, #loc224])
#loc507 = loc(fused[#loc225, #loc226])
#loc508 = loc(fused[#loc227, #loc228])
#loc509 = loc(fused[#loc229, #loc230])
#loc510 = loc(fused[#loc232, #loc234])
#loc511 = loc(fused[#loc235, #loc236, #loc237, #loc228])
#loc512 = loc(fused[#loc240, #loc238])
#loc513 = loc(fused[#loc241, #loc242])
#loc514 = loc(fused[#loc244, #loc243])
#loc515 = loc(fused[#loc245, #loc246])
#loc516 = loc(fused[#loc248, #loc242])
#loc517 = loc(fused[#loc253, #loc252])
#loc518 = loc(fused[#loc255, #loc256])
#loc519 = loc(fused[#loc257, #loc258])
#loc520 = loc(fused[#loc261, #loc259])
#loc521 = loc(fused[#loc262, #loc263])
#loc522 = loc(fused[#loc264, #loc265])
#loc523 = loc(fused[#loc266, #loc267])
#loc524 = loc(fused[#loc268, #loc269])
#loc525 = loc(fused[#loc270, #loc271])
#loc526 = loc(fused[#loc272, #loc273])
#loc527 = loc(fused[#loc274, #loc275])
#loc528 = loc(fused[#loc280, #loc281])
#loc529 = loc(fused[#loc282, #loc283])
#loc530 = loc(fused[#loc284, #loc285])
#loc531 = loc(fused[#loc286, #loc283])
#loc532 = loc(fused[#loc288, #loc289])
#loc533 = loc(fused[#loc291, #loc292])
#loc534 = loc(fused[#loc293, #loc294])
#loc535 = loc(fused[#loc296, #loc295])
#loc536 = loc(fused[#loc298, #loc297])
#loc537 = loc(fused[#loc301, #loc302])
#loc538 = loc(fused[#loc303, #loc304])
#loc539 = loc(fused[#loc306, #loc307])
#loc540 = loc(fused[#loc308, #loc309])
#loc541 = loc(fused[#loc310, #loc311])
#loc542 = loc(fused[#loc312, #loc304])
#loc543 = loc(fused[#loc314, #loc315])
#loc544 = loc(fused[#loc318, #loc319])
#loc545 = loc(fused[#loc320, #loc315])
#loc546 = loc(fused[#loc326, #loc327])
#loc547 = loc(fused[#loc328, #loc329])
#loc548 = loc(fused[#loc330, #loc331])
#loc549 = loc(fused[#loc332, #loc329])
#loc550 = loc(fused[#loc336, #loc337])
#loc551 = loc(fused[#loc340, #loc341])
#loc552 = loc(fused[#loc342, #loc343])
#loc553 = loc(fused[#loc344, #loc345])
#loc554 = loc(fused[#loc347, #loc348])
#loc555 = loc(fused[#loc349, #loc343])
#loc556 = loc(fused[#loc353, #loc351])
#loc557 = loc(fused[#loc356, #loc357])
#loc558 = loc(fused[#loc359, #loc360])
#loc559 = loc(fused[#loc361, #loc362])
#loc560 = loc(fused[#loc363, #loc360])
#loc561 = loc(fused[#loc366, #loc367])
#loc562 = loc(fused[#loc368, #loc369])
#loc563 = loc(fused[#loc370, #loc367])
#loc564 = loc(fused[#loc375, #loc376])
#loc566 = loc(fused[#loc380, #loc381])
#loc567 = loc(fused[#loc382, #loc383])
#loc568 = loc(fused[#loc384, #loc385])
#loc569 = loc(fused[#loc386, #loc387])
#loc570 = loc(fused[#loc388, #loc389])
#loc571 = loc(fused[#loc390, #loc391, #loc392, #loc387])
#loc572 = loc(fused[#loc395, #loc393])
#loc573 = loc(fused[#loc396, #loc397])
#loc574 = loc(fused[#loc399, #loc398])
#loc575 = loc(fused[#loc400, #loc401])
#loc576 = loc(fused[#loc403, #loc397])
#loc577 = loc(fused[#loc408, #loc407])
#loc578 = loc(fused[#loc411, #loc412])
#loc579 = loc(fused[#loc413, #loc414])
#loc580 = loc(fused[#loc417, #loc415])
#loc581 = loc(fused[#loc419, #loc418])
