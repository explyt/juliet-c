!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc282)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc283)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc284)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc285)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc286)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc287)
  cir.func private @close(!s32i) -> !s32i loc(#loc288)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc289)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc290)
  cir.func private @printIntLine(!s32i) loc(#loc291)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc292)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc294)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc29)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc295)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc33)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc33)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc299)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc300)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc301)
          %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc302)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc42)
          %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc42)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc301)
          cir.scope {
            cir.do {
              cir.scope {
                %11 = cir.const #cir.int<2> : !s32i loc(#loc49)
                %12 = cir.const #cir.int<1> : !s32i loc(#loc50)
                %13 = cir.const #cir.int<6> : !s32i loc(#loc51)
                %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc52)
                cir.store %14, %7 : !s32i, !cir.ptr<!s32i> loc(#loc305)
                cir.scope {
                  %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc57)
                  %54 = cir.const #cir.int<1> : !s32i loc(#loc58)
                  %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc58)
                  %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc307)
                  cir.if %56 {
                    cir.break loc(#loc60)
                  } loc(#loc308)
                } loc(#loc306)
                %15 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc309)
                %16 = cir.const #cir.int<0> : !s32i loc(#loc63)
                %17 = cir.const #cir.int<16> : !u64i loc(#loc310)
                cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc311)
                %18 = cir.const #cir.int<2> : !s32i loc(#loc68)
                %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc68)
                %20 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
                cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc312)
                %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
                %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
                %23 = cir.call @inet_addr(%22) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc71)
                %24 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc72)
                %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc73)
                cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc313)
                %26 = cir.const #cir.int<27015> : !s32i loc(#loc76)
                %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc76)
                %28 = cir.call @htons(%27) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc77)
                %29 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
                cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc314)
                cir.scope {
                  %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc83)
                  %54 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc316)
                  %55 = cir.const #cir.int<16> : !u64i loc(#loc317)
                  %56 = cir.cast(integral, %55 : !u64i), !u32i loc(#loc317)
                  %57 = cir.call @connect(%53, %54, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc88)
                  %58 = cir.const #cir.int<1> : !s32i loc(#loc89)
                  %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc89)
                  %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc318)
                  cir.if %60 {
                    cir.break loc(#loc91)
                  } loc(#loc319)
                } loc(#loc315)
                %30 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc92)
                %31 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc93)
                %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc93)
                %33 = cir.const #cir.int<3> : !s32i loc(#loc94)
                %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc94)
                %35 = cir.const #cir.int<4> : !u64i loc(#loc94)
                %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc94)
                %37 = cir.const #cir.int<2> : !s32i loc(#loc94)
                %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc94)
                %39 = cir.binop(add, %36, %38) : !u64i loc(#loc94)
                %40 = cir.const #cir.int<1> : !s32i loc(#loc95)
                %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc95)
                %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc320)
                %43 = cir.const #cir.int<0> : !s32i loc(#loc96)
                %44 = cir.call @recv(%30, %32, %42, %43) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc97)
                %45 = cir.cast(integral, %44 : !s64i), !s32i loc(#loc97)
                cir.store %45, %5 : !s32i, !cir.ptr<!s32i> loc(#loc321)
                cir.scope {
                  %53 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc102)
                  %54 = cir.const #cir.int<1> : !s32i loc(#loc103)
                  %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc103)
                  %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc323)
                  %57 = cir.ternary(%56, true {
                    %58 = cir.const #true loc(#loc104)
                    cir.yield %58 : !cir.bool loc(#loc104)
                  }, false {
                    %58 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc105)
                    %59 = cir.const #cir.int<0> : !s32i loc(#loc106)
                    %60 = cir.cmp(eq, %58, %59) : !s32i, !cir.bool loc(#loc324)
                    %61 = cir.ternary(%60, true {
                      %62 = cir.const #true loc(#loc104)
                      cir.yield %62 : !cir.bool loc(#loc104)
                    }, false {
                      %62 = cir.const #false loc(#loc104)
                      cir.yield %62 : !cir.bool loc(#loc104)
                    }) : (!cir.bool) -> !cir.bool loc(#loc104)
                    cir.yield %61 : !cir.bool loc(#loc104)
                  }) : (!cir.bool) -> !cir.bool loc(#loc104)
                  cir.if %57 {
                    cir.break loc(#loc108)
                  } loc(#loc325)
                } loc(#loc322)
                %46 = cir.const #cir.int<0> : !s32i loc(#loc109)
                %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc109)
                %48 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc110)
                %49 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc111)
                %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc111)
                cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc326)
                %51 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc112)
                %52 = cir.call @atoi(%51) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc113)
                cir.store %52, %0 : !s32i, !cir.ptr<!s32i> loc(#loc327)
              } loc(#loc304)
              cir.yield loc(#loc46)
            } while {
              %11 = cir.const #cir.int<0> : !s32i loc(#loc116)
              %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc116)
              cir.condition(%12) loc(#loc116)
            } loc(#loc303)
          } loc(#loc303)
          cir.scope {
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc119)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc120)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc120)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc329)
            cir.if %14 {
              %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc122)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc123)
            } loc(#loc330)
          } loc(#loc328)
        } loc(#loc298)
      } loc(#loc297)
    } loc(#loc296)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc332)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc333)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc130)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc131)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc131)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc334)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc335)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc130)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc336)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc337)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc138)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc139)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc139)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc339)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc141)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc142)
          %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc143)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc141)
        } loc(#loc340)
      } loc(#loc338)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc146)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc146)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc342)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc148)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc149)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc149)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc343)
          cir.condition(%24) loc(#loc150)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc152)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc153)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc154)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc155)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc345)
          } loc(#loc344)
          cir.yield loc(#loc145)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc156)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc157)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc346)
          cir.yield loc(#loc341)
        } loc(#loc341)
      } loc(#loc341)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc158)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc159)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc160)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc158)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc161)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc162)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc163)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc163)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc162)
    } loc(#loc331)
    cir.return loc(#loc25)
  } loc(#loc293)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc348)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc166)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc349)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc168)
    cir.return loc(#loc165)
  } loc(#loc347)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc350)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc172)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc352)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc177)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc178)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc353)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc182)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc182)
      cir.if %4 {
        %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc172)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc172)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc186)
      } else {
        %5 = cir.const #cir.int<20> : !s32i loc(#loc187)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc356)
      } loc(#loc355)
    } loc(#loc354)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc358)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc359)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc195)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc196)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc196)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc360)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc361)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc195)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc362)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc363)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc203)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc204)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc204)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc365)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc206)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc207)
          %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc208)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc206)
        } loc(#loc366)
      } loc(#loc364)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc211)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc211)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc368)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc213)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc214)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc214)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc369)
          cir.condition(%24) loc(#loc215)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc217)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc218)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc219)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc220)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc371)
          } loc(#loc370)
          cir.yield loc(#loc210)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc221)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc222)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc372)
          cir.yield loc(#loc367)
        } loc(#loc367)
      } loc(#loc367)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc223)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc224)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc225)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc223)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc226)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc227)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc228)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc228)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc227)
    } loc(#loc357)
    cir.return loc(#loc174)
  } loc(#loc351)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc374)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc233)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc234)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc375)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc238)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc238)
      cir.if %4 {
        %5 = cir.const #cir.int<20> : !s32i loc(#loc240)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc378)
      } loc(#loc377)
    } loc(#loc376)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc380)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc381)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc248)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc249)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc249)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc382)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc383)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc248)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc384)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc385)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc256)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc257)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc257)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc387)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc259)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc260)
          %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc261)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc259)
        } loc(#loc388)
      } loc(#loc386)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc264)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc264)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc390)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc266)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc267)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc267)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc391)
          cir.condition(%24) loc(#loc268)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc270)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc271)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc272)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc273)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc393)
          } loc(#loc392)
          cir.yield loc(#loc263)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc274)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc275)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc394)
          cir.yield loc(#loc389)
        } loc(#loc389)
      } loc(#loc389)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc276)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc277)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc278)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc276)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc279)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc280)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc281)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc281)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc280)
    } loc(#loc379)
    cir.return loc(#loc230)
  } loc(#loc373)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":83:53)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("/usr/include/stdlib.h":672:1)
#loc17 = loc("/usr/include/stdlib.h":672:45)
#loc18 = loc("/usr/include/stdlib.h":756:1)
#loc19 = loc("/usr/include/stdlib.h":756:70)
#loc20 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc21 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc22 = loc("/usr/include/stdlib.h":687:1)
#loc23 = loc("/usr/include/stdlib.h":687:32)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":50:1)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":128:1)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":52:5)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":52:9)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":54:13)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":54:12)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":54:5)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":55:5)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":113:5)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":55:8)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":56:5)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":57:9)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":112:9)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":62:13)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":62:17)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":63:13)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":63:32)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":64:13)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":64:36)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":65:13)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":65:45)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":66:13)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":101:21)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":67:13)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":100:13)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":76:40)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":76:49)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":76:62)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":76:33)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":76:17)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":76:73)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":77:17)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":80:17)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":77:21)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":77:38)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":78:17)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":79:21)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":81:24)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":81:25)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":81:34)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":81:37)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":81:51)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":81:17)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":81:52)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":82:38)
#loc69 = loc("/usr/include/netinet/in.h":249:5)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":82:17)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":83:43)
#loc72 = loc("/usr/include/netinet/in.h":251:20)
#loc73 = loc("/usr/include/netinet/in.h":33:15)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":83:17)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":83:63)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":84:42)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":84:36)
#loc78 = loc("/usr/include/netinet/in.h":250:15)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":84:17)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":84:50)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":85:17)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":88:17)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":85:29)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":85:62)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":85:63)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":85:72)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":85:86)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":85:21)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":85:92)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":86:17)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":87:21)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":91:35)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":91:50)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":91:63)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":91:81)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":91:84)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":91:30)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":91:17)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":91:85)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":92:17)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":95:17)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":92:21)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":92:35)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":92:48)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":92:51)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":92:65)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":93:17)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":94:21)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":97:43)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":97:29)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":97:17)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":99:29)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":99:24)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":99:17)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":99:40)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":101:20)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":102:13)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":105:13)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":102:17)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":102:34)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":103:13)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":104:30)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":104:17)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":114:5)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":127:5)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":115:9)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":115:16)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":116:9)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":116:14)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":119:28)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":119:35)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":119:42)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":119:52)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":119:53)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":119:9)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":120:9)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":120:43)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":120:13)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":120:27)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":120:33)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":120:34)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":120:40)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":120:39)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":121:9)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":124:9)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":121:18)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":121:14)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":121:21)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":121:33)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":121:23)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":122:9)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":123:29)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":123:13)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":123:24)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":123:25)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":121:40)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":121:39)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":125:22)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":125:33)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":125:34)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":125:9)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":126:9)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":126:14)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":193:1)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":197:1)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":195:5)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":195:14)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":196:5)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":196:14)
#loc170 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc171 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":143:19)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":135:1)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":164:1)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":137:5)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":137:9)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":139:13)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":139:12)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":139:5)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":140:5)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":149:5)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":140:8)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":141:5)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":144:5)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":146:5)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":143:9)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":148:16)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":148:9)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":150:5)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":163:5)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":151:9)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":151:16)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":152:9)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":152:14)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":155:28)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":155:35)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":155:42)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":155:52)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":155:53)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":155:9)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":156:9)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":156:43)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":156:13)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":156:27)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":156:33)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":156:34)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":156:40)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":156:39)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":157:9)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":160:9)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":157:18)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":157:14)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":157:21)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":157:33)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":157:23)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":158:9)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":159:29)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":159:13)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":159:24)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":159:25)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":157:40)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":157:39)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":161:22)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":161:33)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":161:34)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":161:9)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":162:9)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":162:14)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":167:1)
#loc230 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":191:1)
#loc231 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":169:5)
#loc232 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":169:9)
#loc233 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":171:13)
#loc234 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":171:12)
#loc235 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":171:5)
#loc236 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":172:5)
#loc237 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":176:5)
#loc238 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":172:8)
#loc239 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":173:5)
#loc240 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":175:16)
#loc241 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":175:9)
#loc242 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":177:5)
#loc243 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":190:5)
#loc244 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":178:9)
#loc245 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":178:16)
#loc246 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":179:9)
#loc247 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":179:14)
#loc248 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":182:28)
#loc249 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":182:35)
#loc250 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":182:42)
#loc251 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":182:52)
#loc252 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":182:53)
#loc253 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":182:9)
#loc254 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":183:9)
#loc255 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":183:43)
#loc256 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":183:13)
#loc257 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":183:27)
#loc258 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":183:33)
#loc259 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":183:34)
#loc260 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":183:40)
#loc261 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":183:39)
#loc262 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":184:9)
#loc263 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":187:9)
#loc264 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":184:18)
#loc265 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":184:14)
#loc266 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":184:21)
#loc267 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":184:33)
#loc268 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":184:23)
#loc269 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":185:9)
#loc270 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":186:29)
#loc271 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":186:13)
#loc272 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":186:24)
#loc273 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":186:25)
#loc274 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":184:40)
#loc275 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":184:39)
#loc276 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":188:22)
#loc277 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":188:33)
#loc278 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":188:34)
#loc279 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":188:9)
#loc280 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":189:9)
#loc281 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":189:14)
#loc282 = loc(fused[#loc1, #loc2])
#loc283 = loc(fused[#loc3, #loc4])
#loc284 = loc(fused[#loc6, #loc7])
#loc285 = loc(fused[#loc8, #loc9])
#loc286 = loc(fused[#loc10, #loc11])
#loc287 = loc(fused[#loc12, #loc13])
#loc288 = loc(fused[#loc14, #loc15])
#loc289 = loc(fused[#loc16, #loc17])
#loc290 = loc(fused[#loc18, #loc19])
#loc291 = loc(fused[#loc20, #loc21])
#loc292 = loc(fused[#loc22, #loc23])
#loc293 = loc(fused[#loc24, #loc25])
#loc294 = loc(fused[#loc26, #loc27])
#loc295 = loc(fused[#loc30, #loc28])
#loc296 = loc(fused[#loc31, #loc32])
#loc297 = loc(fused[#loc34, #loc32])
#loc298 = loc(fused[#loc35, #loc36])
#loc299 = loc(fused[#loc37, #loc38])
#loc300 = loc(fused[#loc39, #loc40])
#loc301 = loc(fused[#loc41, #loc42])
#loc302 = loc(fused[#loc43, #loc44])
#loc303 = loc(fused[#loc45, #loc46])
#loc304 = loc(fused[#loc47, #loc48])
#loc305 = loc(fused[#loc53, #loc54])
#loc306 = loc(fused[#loc55, #loc56])
#loc307 = loc(fused[#loc57, #loc58])
#loc308 = loc(fused[#loc59, #loc56])
#loc309 = loc(fused[#loc61, #loc62])
#loc310 = loc(fused[#loc64, #loc65])
#loc311 = loc(fused[#loc66, #loc67])
#loc312 = loc(fused[#loc70, #loc68])
#loc313 = loc(fused[#loc74, #loc75])
#loc314 = loc(fused[#loc79, #loc80])
#loc315 = loc(fused[#loc81, #loc82])
#loc316 = loc(fused[#loc84, #loc85])
#loc317 = loc(fused[#loc86, #loc87])
#loc318 = loc(fused[#loc88, #loc89])
#loc319 = loc(fused[#loc90, #loc82])
#loc320 = loc(fused[#loc94, #loc95])
#loc321 = loc(fused[#loc98, #loc99])
#loc322 = loc(fused[#loc100, #loc101])
#loc323 = loc(fused[#loc102, #loc103])
#loc324 = loc(fused[#loc105, #loc106])
#loc325 = loc(fused[#loc107, #loc101])
#loc326 = loc(fused[#loc111, #loc109])
#loc327 = loc(fused[#loc114, #loc115])
#loc328 = loc(fused[#loc117, #loc118])
#loc329 = loc(fused[#loc119, #loc120])
#loc330 = loc(fused[#loc121, #loc118])
#loc331 = loc(fused[#loc124, #loc125])
#loc332 = loc(fused[#loc126, #loc127])
#loc333 = loc(fused[#loc128, #loc129])
#loc334 = loc(fused[#loc132, #loc133])
#loc335 = loc(fused[#loc131, #loc133])
#loc336 = loc(fused[#loc130, #loc134])
#loc337 = loc(fused[#loc135, #loc134])
#loc338 = loc(fused[#loc136, #loc137])
#loc339 = loc(fused[#loc138, #loc139])
#loc340 = loc(fused[#loc140, #loc137])
#loc341 = loc(fused[#loc144, #loc145])
#loc342 = loc(fused[#loc147, #loc146])
#loc343 = loc(fused[#loc148, #loc149])
#loc344 = loc(fused[#loc151, #loc145])
#loc345 = loc(fused[#loc153, #loc152])
#loc346 = loc(fused[#loc157, #loc156])
#loc347 = loc(fused[#loc164, #loc165])
#loc348 = loc(fused[#loc166, #loc167])
#loc349 = loc(fused[#loc168, #loc169])
#loc350 = loc(fused[#loc170, #loc171])
#loc351 = loc(fused[#loc173, #loc174])
#loc352 = loc(fused[#loc175, #loc176])
#loc353 = loc(fused[#loc179, #loc177])
#loc354 = loc(fused[#loc180, #loc181])
#loc355 = loc(fused[#loc183, #loc184, #loc185, #loc181])
#loc356 = loc(fused[#loc188, #loc187])
#loc357 = loc(fused[#loc189, #loc190])
#loc358 = loc(fused[#loc191, #loc192])
#loc359 = loc(fused[#loc193, #loc194])
#loc360 = loc(fused[#loc197, #loc198])
#loc361 = loc(fused[#loc196, #loc198])
#loc362 = loc(fused[#loc195, #loc199])
#loc363 = loc(fused[#loc200, #loc199])
#loc364 = loc(fused[#loc201, #loc202])
#loc365 = loc(fused[#loc203, #loc204])
#loc366 = loc(fused[#loc205, #loc202])
#loc367 = loc(fused[#loc209, #loc210])
#loc368 = loc(fused[#loc212, #loc211])
#loc369 = loc(fused[#loc213, #loc214])
#loc370 = loc(fused[#loc216, #loc210])
#loc371 = loc(fused[#loc218, #loc217])
#loc372 = loc(fused[#loc222, #loc221])
#loc373 = loc(fused[#loc229, #loc230])
#loc374 = loc(fused[#loc231, #loc232])
#loc375 = loc(fused[#loc235, #loc233])
#loc376 = loc(fused[#loc236, #loc237])
#loc377 = loc(fused[#loc239, #loc237])
#loc378 = loc(fused[#loc241, #loc240])
#loc379 = loc(fused[#loc242, #loc243])
#loc380 = loc(fused[#loc244, #loc245])
#loc381 = loc(fused[#loc246, #loc247])
#loc382 = loc(fused[#loc250, #loc251])
#loc383 = loc(fused[#loc249, #loc251])
#loc384 = loc(fused[#loc248, #loc252])
#loc385 = loc(fused[#loc253, #loc252])
#loc386 = loc(fused[#loc254, #loc255])
#loc387 = loc(fused[#loc256, #loc257])
#loc388 = loc(fused[#loc258, #loc255])
#loc389 = loc(fused[#loc262, #loc263])
#loc390 = loc(fused[#loc265, #loc264])
#loc391 = loc(fused[#loc266, #loc267])
#loc392 = loc(fused[#loc269, #loc263])
#loc393 = loc(fused[#loc271, #loc270])
#loc394 = loc(fused[#loc275, #loc274])
