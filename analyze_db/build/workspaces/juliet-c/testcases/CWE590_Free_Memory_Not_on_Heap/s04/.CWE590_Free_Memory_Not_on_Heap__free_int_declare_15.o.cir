!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc174)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printIntLine(!s32i) loc(#loc175)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc176)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_int_declare_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc178)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc179)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc180)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc16)
    cir.store %3, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc181)
    cir.br ^bb1 loc(#loc182)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<6> : !s32i loc(#loc20)
    cir.br ^bb2 loc(#loc18)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb17 [
      6: ^bb4
    ] loc(#loc18)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc21)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc183)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc184)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc185)
  ^bb7:  // pred: ^bb6
    %5 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc28)
    cir.store %6, %1 : !u64i, !cir.ptr<!u64i> loc(#loc186)
    cir.br ^bb8 loc(#loc185)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %7 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc30)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc31)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc31)
    %10 = cir.cmp(lt, %7, %9) : !u64i, !cir.bool loc(#loc187)
    cir.brcond %10 ^bb9, ^bb13 loc(#loc32)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc188)
  ^bb10:  // pred: ^bb9
    %11 = cir.const #cir.int<5> : !s32i loc(#loc34)
    %12 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc35)
    %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc36)
    %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !u64i), !cir.ptr<!s32i> loc(#loc36)
    cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc189)
    cir.br ^bb11 loc(#loc27)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc27)
  ^bb12:  // pred: ^bb11
    %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc37)
    %16 = cir.unary(inc, %15) : !u64i, !u64i loc(#loc38)
    cir.store %16, %1 : !u64i, !cir.ptr<!u64i> loc(#loc190)
    cir.br ^bb8 loc(#loc185)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc27)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc25)
  ^bb15:  // pred: ^bb14
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc39)
    cir.store %17, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc191)
    cir.br ^bb16 loc(#loc23)
  ^bb16:  // pred: ^bb15
    cir.br ^bb18 loc(#loc41)
  ^bb17:  // pred: ^bb2
    %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc3)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc3)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc42)
    cir.br ^bb18 loc(#loc43)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc19)
  ^bb19:  // pred: ^bb18
    %20 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc44)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc45)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc46)
    %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc44)
    cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc47)
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc48)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc48)
    cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc49)
    cir.return loc(#loc9)
  } loc(#loc177)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_int_declare_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc193)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc52)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc194)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc54)
    cir.return loc(#loc51)
  } loc(#loc192)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc195)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc58)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc196)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc198)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc199)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc200)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc69)
    cir.store %3, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc201)
    cir.br ^bb1 loc(#loc202)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<5> : !s32i loc(#loc73)
    cir.br ^bb2 loc(#loc71)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc71)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc74)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc75)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    cir.br ^bb22 loc(#loc77)
  ^bb5:  // pred: ^bb2
    cir.br ^bb6 loc(#loc203)
  ^bb6:  // pred: ^bb5
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc80)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc81)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc81)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc204)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc205)
    %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc80)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc206)
    cir.store %13, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc198)
    cir.br ^bb7 loc(#loc207)
  ^bb7:  // pred: ^bb6
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc86)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc87)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc87)
    %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s32i>, !cir.bool loc(#loc208)
    cir.brcond %17 ^bb8, ^bb9 loc(#loc209)
  ^bb8:  // pred: ^bb7
    %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc58)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc90)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc91)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc90)
    cir.br ^bb9 loc(#loc85)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc85)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc210)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc211)
  ^bb12:  // pred: ^bb11
    %22 = cir.const #cir.int<0> : !s32i loc(#loc96)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc96)
    cir.store %23, %1 : !u64i, !cir.ptr<!u64i> loc(#loc212)
    cir.br ^bb13 loc(#loc211)
  ^bb13:  // 2 preds: ^bb12, ^bb17
    %24 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc98)
    %25 = cir.const #cir.int<100> : !s32i loc(#loc99)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc99)
    %27 = cir.cmp(lt, %24, %26) : !u64i, !cir.bool loc(#loc213)
    cir.brcond %27 ^bb14, ^bb18 loc(#loc100)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc214)
  ^bb15:  // pred: ^bb14
    %28 = cir.const #cir.int<5> : !s32i loc(#loc102)
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc103)
    %30 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc104)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %30 : !u64i), !cir.ptr<!s32i> loc(#loc105)
    cir.store %28, %31 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    cir.br ^bb16 loc(#loc95)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc95)
  ^bb17:  // pred: ^bb16
    %32 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc106)
    %33 = cir.unary(inc, %32) : !u64i, !u64i loc(#loc107)
    cir.store %33, %1 : !u64i, !cir.ptr<!u64i> loc(#loc216)
    cir.br ^bb13 loc(#loc211)
  ^bb18:  // pred: ^bb13
    cir.br ^bb19 loc(#loc95)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc93)
  ^bb20:  // pred: ^bb19
    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc108)
    cir.store %34, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc217)
    cir.br ^bb21 loc(#loc79)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc110)
  ^bb22:  // 2 preds: ^bb4, ^bb21
    cir.br ^bb23 loc(#loc72)
  ^bb23:  // pred: ^bb22
    %35 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc111)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %37 = cir.ptr_stride(%35 : !cir.ptr<!s32i>, %36 : !s32i), !cir.ptr<!s32i> loc(#loc113)
    %38 = cir.load %37 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    cir.call @printIntLine(%38) : (!s32i) -> () loc(#loc114)
    %39 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc115)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc115)
    cir.call @free(%40) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc116)
    cir.return loc(#loc62)
  } loc(#loc197)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc219)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc220)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc221)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc125)
    cir.store %3, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc222)
    cir.br ^bb1 loc(#loc223)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<6> : !s32i loc(#loc129)
    cir.br ^bb2 loc(#loc127)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb21 [
      6: ^bb4
    ] loc(#loc127)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc130)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc224)
  ^bb5:  // pred: ^bb4
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc133)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc134)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc134)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc225)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc226)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc133)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc227)
    cir.store %11, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc219)
    cir.br ^bb6 loc(#loc228)
  ^bb6:  // pred: ^bb5
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc139)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc140)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc140)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s32i>, !cir.bool loc(#loc229)
    cir.brcond %15 ^bb7, ^bb8 loc(#loc230)
  ^bb7:  // pred: ^bb6
    %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc142)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc142)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc143)
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc144)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc145)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc144)
    cir.br ^bb8 loc(#loc138)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc138)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc231)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc232)
  ^bb11:  // pred: ^bb10
    %20 = cir.const #cir.int<0> : !s32i loc(#loc150)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc150)
    cir.store %21, %1 : !u64i, !cir.ptr<!u64i> loc(#loc233)
    cir.br ^bb12 loc(#loc232)
  ^bb12:  // 2 preds: ^bb11, ^bb16
    %22 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc152)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc153)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc153)
    %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc234)
    cir.brcond %25 ^bb13, ^bb17 loc(#loc154)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc235)
  ^bb14:  // pred: ^bb13
    %26 = cir.const #cir.int<5> : !s32i loc(#loc156)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc157)
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc158)
    %29 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %28 : !u64i), !cir.ptr<!s32i> loc(#loc159)
    cir.store %26, %29 : !s32i, !cir.ptr<!s32i> loc(#loc236)
    cir.br ^bb15 loc(#loc149)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc149)
  ^bb16:  // pred: ^bb15
    %30 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc160)
    %31 = cir.unary(inc, %30) : !u64i, !u64i loc(#loc161)
    cir.store %31, %1 : !u64i, !cir.ptr<!u64i> loc(#loc237)
    cir.br ^bb12 loc(#loc232)
  ^bb17:  // pred: ^bb12
    cir.br ^bb18 loc(#loc149)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc147)
  ^bb19:  // pred: ^bb18
    %32 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc162)
    cir.store %32, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc238)
    cir.br ^bb20 loc(#loc132)
  ^bb20:  // pred: ^bb19
    cir.br ^bb22 loc(#loc164)
  ^bb21:  // pred: ^bb2
    %33 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc165)
    %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc165)
    cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc166)
    cir.br ^bb22 loc(#loc167)
  ^bb22:  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc128)
  ^bb23:  // pred: ^bb22
    %35 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc168)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc169)
    %37 = cir.ptr_stride(%35 : !cir.ptr<!s32i>, %36 : !s32i), !cir.ptr<!s32i> loc(#loc170)
    %38 = cir.load %37 : !cir.ptr<!s32i>, !s32i loc(#loc168)
    cir.call @printIntLine(%38) : (!s32i) -> () loc(#loc171)
    %39 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc172)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc172)
    cir.call @free(%40) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc173)
    cir.return loc(#loc118)
  } loc(#loc218)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":45:19)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc6 = loc("/usr/include/stdlib.h":687:1)
#loc7 = loc("/usr/include/stdlib.h":687:32)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":23:1)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":51:1)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":32:9)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":32:27)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":34:13)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":34:20)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":25:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":25:11)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":26:12)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":26:5)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":27:5)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":47:5)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":27:12)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":29:5)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":30:5)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":41:5)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":33:9)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":39:9)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":35:13)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":38:13)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":35:22)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":35:18)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":35:25)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":35:29)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":35:27)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":36:13)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":37:33)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":37:28)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":37:17)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":35:35)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":35:34)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":40:16)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":40:9)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":42:5)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":45:9)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":46:9)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":48:18)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":48:23)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":48:24)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":48:5)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":50:10)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":50:5)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":129:1)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":133:1)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":131:5)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":131:14)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":132:5)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":132:14)
#loc56 = loc("/usr/include/stdlib.h":672:1)
#loc57 = loc("/usr/include/stdlib.h":672:45)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":74:23)
#loc59 = loc("/usr/include/stdlib.h":756:1)
#loc60 = loc("/usr/include/stdlib.h":756:70)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":58:1)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":91:1)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":71:9)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":71:57)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":78:13)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":78:20)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":60:5)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":60:11)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":61:12)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":61:5)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":62:5)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":87:5)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":62:12)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":64:5)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":66:19)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":66:9)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":67:9)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":69:5)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":85:5)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":71:35)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":71:42)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":71:46)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":71:56)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":72:9)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":76:9)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":72:13)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":72:27)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":73:9)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":74:13)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":75:13)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":75:18)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":77:9)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":83:9)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":79:13)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":82:13)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":79:22)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":79:18)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":79:25)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":79:29)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":79:27)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":80:13)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":81:33)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":81:17)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":81:28)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":81:29)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":79:35)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":79:34)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":84:16)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":84:9)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":86:5)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":88:18)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":88:23)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":88:24)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":88:5)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":90:10)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":90:5)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":94:1)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":127:1)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":103:9)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":103:57)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":110:13)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":110:20)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":96:5)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":96:11)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":97:12)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":97:5)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":98:5)
#loc128 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":123:5)
#loc129 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":98:12)
#loc130 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":100:5)
#loc131 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":101:5)
#loc132 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":117:5)
#loc133 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":103:35)
#loc134 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":103:42)
#loc135 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":103:46)
#loc136 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":103:56)
#loc137 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":104:9)
#loc138 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":108:9)
#loc139 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":104:13)
#loc140 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":104:27)
#loc141 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":105:9)
#loc142 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":106:23)
#loc143 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":106:13)
#loc144 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":107:13)
#loc145 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":107:18)
#loc146 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":109:9)
#loc147 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":115:9)
#loc148 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":111:13)
#loc149 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":114:13)
#loc150 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":111:22)
#loc151 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":111:18)
#loc152 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":111:25)
#loc153 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":111:29)
#loc154 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":111:27)
#loc155 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":112:13)
#loc156 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":113:33)
#loc157 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":113:17)
#loc158 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":113:28)
#loc159 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":113:29)
#loc160 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":111:35)
#loc161 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":111:34)
#loc162 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":116:16)
#loc163 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":116:9)
#loc164 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":118:5)
#loc165 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":121:19)
#loc166 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":121:9)
#loc167 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":122:9)
#loc168 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":124:18)
#loc169 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":124:23)
#loc170 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":124:24)
#loc171 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":124:5)
#loc172 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":126:10)
#loc173 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_15.c":126:5)
#loc174 = loc(fused[#loc1, #loc2])
#loc175 = loc(fused[#loc4, #loc5])
#loc176 = loc(fused[#loc6, #loc7])
#loc177 = loc(fused[#loc8, #loc9])
#loc178 = loc(fused[#loc10, #loc11])
#loc179 = loc(fused[#loc12, #loc13])
#loc180 = loc(fused[#loc14, #loc15])
#loc181 = loc(fused[#loc17, #loc16])
#loc182 = loc(fused[#loc18, #loc19])
#loc183 = loc(fused[#loc22, #loc23])
#loc184 = loc(fused[#loc24, #loc25])
#loc185 = loc(fused[#loc26, #loc27])
#loc186 = loc(fused[#loc29, #loc28])
#loc187 = loc(fused[#loc30, #loc31])
#loc188 = loc(fused[#loc33, #loc27])
#loc189 = loc(fused[#loc36, #loc34])
#loc190 = loc(fused[#loc38, #loc37])
#loc191 = loc(fused[#loc40, #loc39])
#loc192 = loc(fused[#loc50, #loc51])
#loc193 = loc(fused[#loc52, #loc53])
#loc194 = loc(fused[#loc54, #loc55])
#loc195 = loc(fused[#loc56, #loc57])
#loc196 = loc(fused[#loc59, #loc60])
#loc197 = loc(fused[#loc61, #loc62])
#loc198 = loc(fused[#loc63, #loc64])
#loc199 = loc(fused[#loc65, #loc66])
#loc200 = loc(fused[#loc67, #loc68])
#loc201 = loc(fused[#loc70, #loc69])
#loc202 = loc(fused[#loc71, #loc72])
#loc203 = loc(fused[#loc78, #loc79])
#loc204 = loc(fused[#loc82, #loc83])
#loc205 = loc(fused[#loc81, #loc83])
#loc206 = loc(fused[#loc80, #loc64])
#loc207 = loc(fused[#loc84, #loc85])
#loc208 = loc(fused[#loc86, #loc87])
#loc209 = loc(fused[#loc88, #loc85])
#loc210 = loc(fused[#loc92, #loc93])
#loc211 = loc(fused[#loc94, #loc95])
#loc212 = loc(fused[#loc97, #loc96])
#loc213 = loc(fused[#loc98, #loc99])
#loc214 = loc(fused[#loc101, #loc95])
#loc215 = loc(fused[#loc103, #loc102])
#loc216 = loc(fused[#loc107, #loc106])
#loc217 = loc(fused[#loc109, #loc108])
#loc218 = loc(fused[#loc117, #loc118])
#loc219 = loc(fused[#loc119, #loc120])
#loc220 = loc(fused[#loc121, #loc122])
#loc221 = loc(fused[#loc123, #loc124])
#loc222 = loc(fused[#loc126, #loc125])
#loc223 = loc(fused[#loc127, #loc128])
#loc224 = loc(fused[#loc131, #loc132])
#loc225 = loc(fused[#loc135, #loc136])
#loc226 = loc(fused[#loc134, #loc136])
#loc227 = loc(fused[#loc133, #loc120])
#loc228 = loc(fused[#loc137, #loc138])
#loc229 = loc(fused[#loc139, #loc140])
#loc230 = loc(fused[#loc141, #loc138])
#loc231 = loc(fused[#loc146, #loc147])
#loc232 = loc(fused[#loc148, #loc149])
#loc233 = loc(fused[#loc151, #loc150])
#loc234 = loc(fused[#loc152, #loc153])
#loc235 = loc(fused[#loc155, #loc149])
#loc236 = loc(fused[#loc157, #loc156])
#loc237 = loc(fused[#loc161, #loc160])
#loc238 = loc(fused[#loc163, #loc162])
