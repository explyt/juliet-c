!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc3 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":25:23)
#loc4 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":25:32)
#loc26 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":48:27)
#loc27 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":48:36)
#loc47 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":67:27)
#loc48 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":67:36)
#loc89 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":109:10)
#loc90 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":109:14)
#loc91 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":109:20)
#loc92 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":109:32)
#loc106 = loc(fused[#loc3, #loc4])
#loc115 = loc(fused[#loc26, #loc27])
#loc123 = loc(fused[#loc47, #loc48])
#loc137 = loc(fused[#loc89, #loc90])
#loc138 = loc(fused[#loc91, #loc92])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int64_t_max_add_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func internal private @_ZN43CWE190_Integer_Overflow__int64_t_max_add_43L9badSourceERl(%arg0: !cir.ptr<!s64i> loc(fused[#loc3, #loc4])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc106)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc5)
    %1 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc6)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc7)
    cir.store %1, %2 : !s64i, !cir.ptr<!s64i> loc(#loc107)
    cir.return loc(#loc2)
  } loc(#loc105)
  cir.func private @printLongLongLine(!s64i) loc(#loc108)
  cir.func @_ZN43CWE190_Integer_Overflow__int64_t_max_add_433badEv() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc110)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc14)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc111)
    cir.call @_ZN43CWE190_Integer_Overflow__int64_t_max_add_43L9badSourceERl(%0) : (!cir.ptr<!s64i>) -> () loc(#loc16)
    cir.scope {
      %2 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc113)
      %3 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc21)
      %4 = cir.const #cir.int<1> : !s32i loc(#loc20)
      %5 = cir.cast(integral, %4 : !s32i), !s64i loc(#loc20)
      %6 = cir.binop(add, %3, %5) nsw : !s64i loc(#loc21)
      cir.store %6, %2 : !s64i, !cir.ptr<!s64i> loc(#loc113)
      %7 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc22)
      cir.call @printLongLongLine(%7) : (!s64i) -> () loc(#loc23)
    } loc(#loc112)
    cir.return loc(#loc11)
  } loc(#loc109)
  cir.func internal private @_ZN43CWE190_Integer_Overflow__int64_t_max_add_43L13goodG2BSourceERl(%arg0: !cir.ptr<!s64i> loc(fused[#loc26, #loc27])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc115)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc28)
    %1 = cir.const #cir.int<2> : !s32i loc(#loc29)
    %2 = cir.cast(integral, %1 : !s32i), !s64i loc(#loc29)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc30)
    cir.store %2, %3 : !s64i, !cir.ptr<!s64i> loc(#loc116)
    cir.return loc(#loc25)
  } loc(#loc114)
  cir.func internal private @_ZN43CWE190_Integer_Overflow__int64_t_max_add_43L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc118)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc35)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc119)
    cir.call @_ZN43CWE190_Integer_Overflow__int64_t_max_add_43L13goodG2BSourceERl(%0) : (!cir.ptr<!s64i>) -> () loc(#loc37)
    cir.scope {
      %2 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc121)
      %3 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc42)
      %4 = cir.const #cir.int<1> : !s32i loc(#loc41)
      %5 = cir.cast(integral, %4 : !s32i), !s64i loc(#loc41)
      %6 = cir.binop(add, %3, %5) nsw : !s64i loc(#loc42)
      cir.store %6, %2 : !s64i, !cir.ptr<!s64i> loc(#loc121)
      %7 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc43)
      cir.call @printLongLongLine(%7) : (!s64i) -> () loc(#loc44)
    } loc(#loc120)
    cir.return loc(#loc32)
  } loc(#loc117)
  cir.func internal private @_ZN43CWE190_Integer_Overflow__int64_t_max_add_43L13goodB2GSourceERl(%arg0: !cir.ptr<!s64i> loc(fused[#loc47, #loc48])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc123)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc49)
    %1 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc50)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc51)
    cir.store %1, %2 : !s64i, !cir.ptr<!s64i> loc(#loc124)
    cir.return loc(#loc46)
  } loc(#loc122)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc52)
  cir.func internal private @_ZN43CWE190_Integer_Overflow__int64_t_max_add_43L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc126)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc57)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc127)
    cir.call @_ZN43CWE190_Integer_Overflow__int64_t_max_add_43L13goodB2GSourceERl(%0) : (!cir.ptr<!s64i>) -> () loc(#loc59)
    cir.scope {
      %2 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc62)
      %3 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc63)
      %4 = cir.cmp(lt, %2, %3) : !s64i, !cir.bool loc(#loc129)
      cir.if %4 {
        %5 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc131)
        %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc69)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc68)
        %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc68)
        %9 = cir.binop(add, %6, %8) nsw : !s64i loc(#loc69)
        cir.store %9, %5 : !s64i, !cir.ptr<!s64i> loc(#loc131)
        %10 = cir.load %5 : !cir.ptr<!s64i>, !s64i loc(#loc70)
        cir.call @printLongLongLine(%10) : (!s64i) -> () loc(#loc71)
      } else {
        %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc52)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc52)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc72)
      } loc(#loc130)
    } loc(#loc128)
    cir.return loc(#loc54)
  } loc(#loc125)
  cir.func @_ZN43CWE190_Integer_Overflow__int64_t_max_add_434goodEv() extra(#fn_attr) {
    cir.call @_ZN43CWE190_Integer_Overflow__int64_t_max_add_43L7goodG2BEv() : () -> () loc(#loc75)
    cir.call @_ZN43CWE190_Integer_Overflow__int64_t_max_add_43L7goodB2GEv() : () -> () loc(#loc76)
    cir.return loc(#loc74)
  } loc(#loc132)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc133)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc134)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc135)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc83)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc84)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc85)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc86)
  cir.func @main(%arg0: !s32i loc(fused[#loc89, #loc90]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc91, #loc92])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc137)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc138)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc88)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc93)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc93)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc94)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc95)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc95)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc96)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc83)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    cir.call @_ZN43CWE190_Integer_Overflow__int64_t_max_add_434goodEv() : () -> () loc(#loc98)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc84)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc85)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    cir.call @_ZN43CWE190_Integer_Overflow__int64_t_max_add_433badEv() : () -> () loc(#loc101)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc86)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc86)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc103)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc139)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc139)
    cir.return %15 : !s32i loc(#loc139)
  } loc(#loc136)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int64_t_max_add_43.cpp":0:0)
#loc1 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":25:1)
#loc2 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":29:1)
#loc5 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":26:1)
#loc6 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":28:12)
#loc7 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":28:5)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc10 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":31:1)
#loc11 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":41:1)
#loc12 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":33:5)
#loc13 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":33:13)
#loc14 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":34:12)
#loc15 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":34:5)
#loc16 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":35:5)
#loc17 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":36:5)
#loc18 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":40:5)
#loc19 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":38:9)
#loc20 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":38:33)
#loc21 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":38:26)
#loc22 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":39:27)
#loc23 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":39:9)
#loc24 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":48:1)
#loc25 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":52:1)
#loc28 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":49:1)
#loc29 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":51:12)
#loc30 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":51:5)
#loc31 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":54:1)
#loc32 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":64:1)
#loc33 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":56:5)
#loc34 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":56:13)
#loc35 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":57:12)
#loc36 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":57:5)
#loc37 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":58:5)
#loc38 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":59:5)
#loc39 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":63:5)
#loc40 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":61:9)
#loc41 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":61:33)
#loc42 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":61:26)
#loc43 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":62:27)
#loc44 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":62:9)
#loc45 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":67:1)
#loc46 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":71:1)
#loc49 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":68:1)
#loc50 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":70:12)
#loc51 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":70:5)
#loc52 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":86:19)
#loc53 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":73:1)
#loc54 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":88:1)
#loc55 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":75:5)
#loc56 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":75:13)
#loc57 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":76:12)
#loc58 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":76:5)
#loc59 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":77:5)
#loc60 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":79:5)
#loc61 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":87:5)
#loc62 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":79:9)
#loc63 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":79:16)
#loc64 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":80:5)
#loc65 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":83:5)
#loc66 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":85:5)
#loc67 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":81:9)
#loc68 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":81:33)
#loc69 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":81:26)
#loc70 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":82:27)
#loc71 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":82:9)
#loc72 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":86:9)
#loc73 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":90:1)
#loc74 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":94:1)
#loc75 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":92:5)
#loc76 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":93:5)
#loc77 = loc("/usr/include/stdlib.h":575:1)
#loc78 = loc("/usr/include/stdlib.h":575:41)
#loc79 = loc("/usr/include/time.h":76:1)
#loc80 = loc("/usr/include/time.h":76:38)
#loc81 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc82 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc83 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":114:15)
#loc84 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":116:15)
#loc85 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":119:15)
#loc86 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":121:15)
#loc87 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":109:1)
#loc88 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":124:1)
#loc93 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":110:1)
#loc94 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":112:27)
#loc95 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":112:22)
#loc96 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":112:5)
#loc97 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":114:5)
#loc98 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":115:5)
#loc99 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":116:5)
#loc100 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":119:5)
#loc101 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":120:5)
#loc102 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":121:5)
#loc103 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":123:12)
#loc104 = loc("CWE190_Integer_Overflow__int64_t_max_add_43.cpp":123:5)
#loc105 = loc(fused[#loc1, #loc2])
#loc107 = loc(fused[#loc7, #loc6])
#loc108 = loc(fused[#loc8, #loc9])
#loc109 = loc(fused[#loc10, #loc11])
#loc110 = loc(fused[#loc12, #loc13])
#loc111 = loc(fused[#loc15, #loc14])
#loc112 = loc(fused[#loc17, #loc18])
#loc113 = loc(fused[#loc19, #loc20])
#loc114 = loc(fused[#loc24, #loc25])
#loc116 = loc(fused[#loc30, #loc29])
#loc117 = loc(fused[#loc31, #loc32])
#loc118 = loc(fused[#loc33, #loc34])
#loc119 = loc(fused[#loc36, #loc35])
#loc120 = loc(fused[#loc38, #loc39])
#loc121 = loc(fused[#loc40, #loc41])
#loc122 = loc(fused[#loc45, #loc46])
#loc124 = loc(fused[#loc51, #loc50])
#loc125 = loc(fused[#loc53, #loc54])
#loc126 = loc(fused[#loc55, #loc56])
#loc127 = loc(fused[#loc58, #loc57])
#loc128 = loc(fused[#loc60, #loc61])
#loc129 = loc(fused[#loc62, #loc63])
#loc130 = loc(fused[#loc64, #loc65, #loc66, #loc61])
#loc131 = loc(fused[#loc67, #loc68])
#loc132 = loc(fused[#loc73, #loc74])
#loc133 = loc(fused[#loc77, #loc78])
#loc134 = loc(fused[#loc79, #loc80])
#loc135 = loc(fused[#loc81, #loc82])
#loc136 = loc(fused[#loc87, #loc88])
#loc139 = loc(fused[#loc104, #loc103])
