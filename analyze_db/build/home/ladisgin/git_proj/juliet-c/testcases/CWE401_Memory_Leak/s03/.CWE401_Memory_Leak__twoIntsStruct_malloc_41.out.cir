!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc9 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":24:21)
#loc10 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":24:37)
#loc66 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":104:10)
#loc67 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":104:14)
#loc68 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":104:20)
#loc69 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":104:32)
#loc88 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":69:25)
#loc89 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":69:41)
#loc129 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":49:25)
#loc130 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":49:41)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc158 = loc(fused[#loc9, #loc10])
#loc178 = loc(fused[#loc66, #loc67])
#loc179 = loc(fused[#loc68, #loc69])
#loc185 = loc(fused[#loc88, #loc89])
#loc199 = loc(fused[#loc129, #loc130])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc154)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc155)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc156)
  cir.func internal private @badSink(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc9, #loc10])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc158)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc11)
    cir.return loc(#loc8)
  } loc(#loc157)
  cir.func no_proto @CWE401_Memory_Leak__twoIntsStruct_malloc_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc160)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc16)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc161)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc18)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc19)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc19)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc162)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc163)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc18)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc164)
    cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc165)
    cir.scope {
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc26)
      %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc27)
      %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc27)
      %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc167)
      cir.if %26 {
        %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc29)
        %28 = cir.const #cir.int<1> : !s32i loc(#loc30)
        %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc31)
        cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc29)
      } loc(#loc168)
    } loc(#loc166)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc32)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc33)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %11 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc35)
    %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
    cir.store %9, %13 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc37)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc38)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc39)
    %17 = cir.ptr_stride(%15 : !cir.ptr<!ty__twoIntsStruct>, %16 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc40)
    %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc41)
    cir.store %14, %18 : !s32i, !cir.ptr<!s32i> loc(#loc170)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc42)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc43)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc44)
    cir.call @printStructLine(%21) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc45)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc46)
    cir.call @badSink(%22) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc47)
    cir.return loc(#loc13)
  } loc(#loc159)
  cir.func no_proto @CWE401_Memory_Leak__twoIntsStruct_malloc_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc172)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc50)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc173)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc52)
    cir.return loc(#loc49)
  } loc(#loc171)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc174)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc175)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc176)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc60)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc61)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc62)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc63)
  cir.func @main(%arg0: !s32i loc(fused[#loc66, #loc67]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc68, #loc69])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc178)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc179)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc65)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc70)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc70)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc71)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc72)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc72)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc73)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc60)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %8 = cir.get_global @CWE401_Memory_Leak__twoIntsStruct_malloc_41_good : !cir.ptr<!cir.func<!void ()>> loc(#loc180)
    cir.call @CWE401_Memory_Leak__twoIntsStruct_malloc_41_good() : () -> () loc(#loc75)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc61)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc62)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %13 = cir.get_global @CWE401_Memory_Leak__twoIntsStruct_malloc_41_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc181)
    cir.call @CWE401_Memory_Leak__twoIntsStruct_malloc_41_bad() : () -> () loc(#loc79)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc63)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc82)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc182)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc182)
    cir.return %17 : !s32i loc(#loc182)
  } loc(#loc177)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc183)
  cir.func internal private @goodB2GSink(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc88, #loc89])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc185)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc90)
    %1 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc91)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc92)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc92)
    cir.call @free(%3) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc91)
    cir.return loc(#loc87)
  } loc(#loc184)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc187)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc97)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc188)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc99)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc100)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc100)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc189)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc190)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc99)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc191)
    cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc192)
    cir.scope {
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc107)
      %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc108)
      %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc108)
      %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc194)
      cir.if %26 {
        %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc110)
        %28 = cir.const #cir.int<1> : !s32i loc(#loc111)
        %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc112)
        cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc110)
      } loc(#loc195)
    } loc(#loc193)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc113)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc114)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc115)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %11 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc116)
    %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
    cir.store %9, %13 : !s32i, !cir.ptr<!s32i> loc(#loc196)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc117)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc118)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc119)
    %17 = cir.ptr_stride(%15 : !cir.ptr<!ty__twoIntsStruct>, %16 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc120)
    %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc41)
    cir.store %14, %18 : !s32i, !cir.ptr<!s32i> loc(#loc197)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc121)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc122)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc123)
    cir.call @printStructLine(%21) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc124)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc125)
    cir.call @goodB2GSink(%22) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc126)
    cir.return loc(#loc94)
  } loc(#loc186)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc129, #loc130])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc199)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc131)
    cir.return loc(#loc128)
  } loc(#loc198)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc201)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc136)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc202)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc138)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc138)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc138)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc138)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc138)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc138)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc138)
    cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc203)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc140)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc141)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc142)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %11 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc143)
    %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
    cir.store %9, %13 : !s32i, !cir.ptr<!s32i> loc(#loc204)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc144)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc145)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc146)
    %17 = cir.ptr_stride(%15 : !cir.ptr<!ty__twoIntsStruct>, %16 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc147)
    %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc41)
    cir.store %14, %18 : !s32i, !cir.ptr<!s32i> loc(#loc205)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc148)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc149)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc150)
    cir.call @printStructLine(%21) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc151)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc152)
    cir.call @goodG2BSink(%22) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc153)
    cir.return loc(#loc133)
  } loc(#loc200)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc7 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":24:1)
#loc8 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":28:1)
#loc11 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":25:1)
#loc12 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":30:1)
#loc13 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":42:1)
#loc14 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":32:5)
#loc15 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":32:21)
#loc16 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":33:12)
#loc17 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":33:5)
#loc18 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":35:29)
#loc19 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":35:36)
#loc20 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":35:40)
#loc21 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":35:60)
#loc22 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":35:61)
#loc23 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":35:5)
#loc24 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":36:5)
#loc25 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":36:33)
#loc26 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":36:9)
#loc27 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":36:17)
#loc28 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":36:23)
#loc29 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":36:24)
#loc30 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":36:30)
#loc31 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":36:29)
#loc32 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":38:22)
#loc33 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":38:5)
#loc34 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":38:10)
#loc35 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":38:11)
#loc36 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc37 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":39:22)
#loc38 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":39:5)
#loc39 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":39:10)
#loc40 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":39:11)
#loc41 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc42 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":40:22)
#loc43 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":40:27)
#loc44 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":40:28)
#loc45 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":40:5)
#loc46 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":41:13)
#loc47 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":41:5)
#loc48 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":89:1)
#loc49 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":93:1)
#loc50 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":91:5)
#loc51 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":91:13)
#loc52 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":92:5)
#loc53 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":92:13)
#loc54 = loc("/usr/include/stdlib.h":575:1)
#loc55 = loc("/usr/include/stdlib.h":575:41)
#loc56 = loc("/usr/include/time.h":76:1)
#loc57 = loc("/usr/include/time.h":76:38)
#loc58 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc59 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc60 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":109:15)
#loc61 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":111:15)
#loc62 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":114:15)
#loc63 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":116:15)
#loc64 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":104:1)
#loc65 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":119:1)
#loc70 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":105:1)
#loc71 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":107:27)
#loc72 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":107:22)
#loc73 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":107:5)
#loc74 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":109:5)
#loc75 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":110:5)
#loc76 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":110:54)
#loc77 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":111:5)
#loc78 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":114:5)
#loc79 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":115:5)
#loc80 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":115:53)
#loc81 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":116:5)
#loc82 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":118:12)
#loc83 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":118:5)
#loc84 = loc("/usr/include/stdlib.h":687:1)
#loc85 = loc("/usr/include/stdlib.h":687:32)
#loc86 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":69:1)
#loc87 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":73:1)
#loc90 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":70:1)
#loc91 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":72:5)
#loc92 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":72:10)
#loc93 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":75:1)
#loc94 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":87:1)
#loc95 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":77:5)
#loc96 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":77:21)
#loc97 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":78:12)
#loc98 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":78:5)
#loc99 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":80:29)
#loc100 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":80:36)
#loc101 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":80:40)
#loc102 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":80:60)
#loc103 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":80:61)
#loc104 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":80:5)
#loc105 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":81:5)
#loc106 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":81:33)
#loc107 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":81:9)
#loc108 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":81:17)
#loc109 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":81:23)
#loc110 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":81:24)
#loc111 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":81:30)
#loc112 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":81:29)
#loc113 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":83:22)
#loc114 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":83:5)
#loc115 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":83:10)
#loc116 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":83:11)
#loc117 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":84:22)
#loc118 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":84:5)
#loc119 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":84:10)
#loc120 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":84:11)
#loc121 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":85:22)
#loc122 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":85:27)
#loc123 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":85:28)
#loc124 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":85:5)
#loc125 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":86:17)
#loc126 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":86:5)
#loc127 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":49:1)
#loc128 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":53:1)
#loc131 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":50:1)
#loc132 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":55:1)
#loc133 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":66:1)
#loc134 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":57:5)
#loc135 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":57:21)
#loc136 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":58:12)
#loc137 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":58:5)
#loc138 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":60:29)
#loc139 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":60:5)
#loc140 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":62:22)
#loc141 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":62:5)
#loc142 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":62:10)
#loc143 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":62:11)
#loc144 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":63:22)
#loc145 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":63:5)
#loc146 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":63:10)
#loc147 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":63:11)
#loc148 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":64:22)
#loc149 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":64:27)
#loc150 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":64:28)
#loc151 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":64:5)
#loc152 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":65:17)
#loc153 = loc("CWE401_Memory_Leak__twoIntsStruct_malloc_41.c":65:5)
#loc154 = loc(fused[#loc1, #loc2])
#loc155 = loc(fused[#loc3, #loc4])
#loc156 = loc(fused[#loc5, #loc6])
#loc157 = loc(fused[#loc7, #loc8])
#loc159 = loc(fused[#loc12, #loc13])
#loc160 = loc(fused[#loc14, #loc15])
#loc161 = loc(fused[#loc17, #loc16])
#loc162 = loc(fused[#loc20, #loc21])
#loc163 = loc(fused[#loc19, #loc21])
#loc164 = loc(fused[#loc18, #loc22])
#loc165 = loc(fused[#loc23, #loc22])
#loc166 = loc(fused[#loc24, #loc25])
#loc167 = loc(fused[#loc26, #loc27])
#loc168 = loc(fused[#loc28, #loc25])
#loc169 = loc(fused[#loc33, #loc32])
#loc170 = loc(fused[#loc38, #loc37])
#loc171 = loc(fused[#loc48, #loc49])
#loc172 = loc(fused[#loc50, #loc51])
#loc173 = loc(fused[#loc52, #loc53])
#loc174 = loc(fused[#loc54, #loc55])
#loc175 = loc(fused[#loc56, #loc57])
#loc176 = loc(fused[#loc58, #loc59])
#loc177 = loc(fused[#loc64, #loc65])
#loc180 = loc(fused[#loc75, #loc76])
#loc181 = loc(fused[#loc79, #loc80])
#loc182 = loc(fused[#loc83, #loc82])
#loc183 = loc(fused[#loc84, #loc85])
#loc184 = loc(fused[#loc86, #loc87])
#loc186 = loc(fused[#loc93, #loc94])
#loc187 = loc(fused[#loc95, #loc96])
#loc188 = loc(fused[#loc98, #loc97])
#loc189 = loc(fused[#loc101, #loc102])
#loc190 = loc(fused[#loc100, #loc102])
#loc191 = loc(fused[#loc99, #loc103])
#loc192 = loc(fused[#loc104, #loc103])
#loc193 = loc(fused[#loc105, #loc106])
#loc194 = loc(fused[#loc107, #loc108])
#loc195 = loc(fused[#loc109, #loc106])
#loc196 = loc(fused[#loc114, #loc113])
#loc197 = loc(fused[#loc118, #loc117])
#loc198 = loc(fused[#loc127, #loc128])
#loc200 = loc(fused[#loc132, #loc133])
#loc201 = loc(fused[#loc134, #loc135])
#loc202 = loc(fused[#loc137, #loc136])
#loc203 = loc(fused[#loc139, #loc138])
#loc204 = loc(fused[#loc141, #loc140])
#loc205 = loc(fused[#loc145, #loc144])
