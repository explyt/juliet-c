!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":81:10)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":81:14)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":81:20)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":81:32)
#loc124 = loc(fused[#loc45, #loc46])
#loc125 = loc(fused[#loc47, #loc48])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64b_badSink(!cir.ptr<!void>) loc(#loc108)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc110)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc7)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc111)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc113)
      %4 = cir.const #cir.int<100> : !s32i loc(#loc12)
      %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc12)
      %6 = cir.const #cir.int<1> : !u64i loc(#loc12)
      %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc12)
      %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
      cir.store %10, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc113)
      %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc13)
      %13 = cir.const #cir.int<65> : !s32i loc(#loc14)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc15)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc16)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc15)
      %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc15)
      cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc114)
      %18 = cir.const #cir.int<0> : !s32i loc(#loc19)
      %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc19)
      %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
      %21 = cir.const #cir.int<100> : !s32i loc(#loc21)
      %22 = cir.const #cir.int<1> : !s32i loc(#loc22)
      %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc21)
      %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc23)
      cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc115)
      %25 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
      cir.store %25, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc116)
    } loc(#loc112)
    %2 = cir.cast(bitcast, %0 : !cir.ptr<!cir.ptr<!s8i>>), !cir.ptr<!void> loc(#loc117)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64b_badSink(%2) : (!cir.ptr<!void>) -> () loc(#loc28)
    cir.return loc(#loc4)
  } loc(#loc109)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc119)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc31)
    cir.return loc(#loc30)
  } loc(#loc118)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc120)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc121)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc122)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc39)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc40)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc41)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc42)
  cir.func @main(%arg0: !s32i loc(fused[#loc45, #loc46]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc47, #loc48])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc124)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc125)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc44)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc49)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc49)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc50)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc51)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc51)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc52)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc39)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    %8 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64_good : !cir.ptr<!cir.func<!void ()>> loc(#loc126)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64_good() : () -> () loc(#loc54)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc40)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc41)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    %13 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc127)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64_bad() : () -> () loc(#loc58)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc42)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc61)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc128)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    cir.return %17 : !s32i loc(#loc128)
  } loc(#loc123)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc129)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc65)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc130)
  cir.func private @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64b_goodG2BSink(!cir.ptr<!void>) loc(#loc131)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc133)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc74)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc134)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc136)
      %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc80)
      %5 = cir.const #cir.int<100> : !s32i loc(#loc81)
      %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc81)
      %7 = cir.const #cir.int<1> : !u64i loc(#loc137)
      %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc138)
      %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc80)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc139)
      cir.store %10, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc136)
      cir.scope {
        %26 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
        %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc87)
        %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc87)
        %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc141)
        cir.if %29 {
          %30 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc65)
          %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc65)
          cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc89)
          %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc90)
          %33 = cir.const #cir.int<1> : !s32i loc(#loc91)
          cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr1) loc(#loc90)
        } loc(#loc142)
      } loc(#loc140)
      %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc92)
      %13 = cir.const #cir.int<65> : !s32i loc(#loc93)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc94)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc95)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc94)
      %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc94)
      cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc143)
      %18 = cir.const #cir.int<0> : !s32i loc(#loc98)
      %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc98)
      %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
      %21 = cir.const #cir.int<100> : !s32i loc(#loc100)
      %22 = cir.const #cir.int<1> : !s32i loc(#loc101)
      %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc100)
      %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc102)
      cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc144)
      %25 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
      cir.store %25, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc145)
    } loc(#loc135)
    %2 = cir.cast(bitcast, %0 : !cir.ptr<!cir.ptr<!s8i>>), !cir.ptr<!void> loc(#loc146)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64b_goodG2BSink(%2) : (!cir.ptr<!void>) -> () loc(#loc107)
    cir.return loc(#loc71)
  } loc(#loc132)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":24:1)
#loc2 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":24:85)
#loc3 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":26:1)
#loc4 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":38:1)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":28:5)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":28:12)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":29:12)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":29:5)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":30:5)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":36:5)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":32:9)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":32:37)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":33:16)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":33:28)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":33:33)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":33:37)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":33:9)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":33:38)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":34:29)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":34:9)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":34:20)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":34:24)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":34:25)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":35:16)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":35:9)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":37:66)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":37:67)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":37:5)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":66:1)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":69:1)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":68:5)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":68:13)
#loc33 = loc("/usr/include/stdlib.h":575:1)
#loc34 = loc("/usr/include/stdlib.h":575:41)
#loc35 = loc("/usr/include/time.h":76:1)
#loc36 = loc("/usr/include/time.h":76:38)
#loc37 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc38 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":86:15)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":88:15)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":91:15)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":93:15)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":81:1)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":96:1)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":82:1)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":84:27)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":84:22)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":84:5)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":86:5)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":87:5)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":87:62)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":88:5)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":91:5)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":92:5)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":92:61)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":93:5)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":95:12)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":95:5)
#loc63 = loc("/usr/include/stdlib.h":672:1)
#loc64 = loc("/usr/include/stdlib.h":672:45)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":56:23)
#loc66 = loc("/usr/include/stdlib.h":756:1)
#loc67 = loc("/usr/include/stdlib.h":756:70)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":45:1)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":45:89)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":47:1)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":64:1)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":49:5)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":49:12)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":50:12)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":50:5)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":51:5)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":62:5)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":53:9)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":53:60)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":53:37)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":53:44)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":53:48)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":53:59)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":54:9)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":58:9)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":54:13)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":54:27)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":55:9)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":56:13)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":57:13)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":57:18)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":59:16)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":59:28)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":59:33)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":59:37)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":59:9)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":59:38)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":60:29)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":60:9)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":60:20)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":60:24)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":60:25)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":61:16)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":61:9)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":63:70)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":63:71)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_64a.c":63:5)
#loc108 = loc(fused[#loc1, #loc2])
#loc109 = loc(fused[#loc3, #loc4])
#loc110 = loc(fused[#loc5, #loc6])
#loc111 = loc(fused[#loc8, #loc7])
#loc112 = loc(fused[#loc9, #loc10])
#loc113 = loc(fused[#loc11, #loc12])
#loc114 = loc(fused[#loc17, #loc18])
#loc115 = loc(fused[#loc20, #loc19])
#loc116 = loc(fused[#loc25, #loc24])
#loc117 = loc(fused[#loc26, #loc27])
#loc118 = loc(fused[#loc29, #loc30])
#loc119 = loc(fused[#loc31, #loc32])
#loc120 = loc(fused[#loc33, #loc34])
#loc121 = loc(fused[#loc35, #loc36])
#loc122 = loc(fused[#loc37, #loc38])
#loc123 = loc(fused[#loc43, #loc44])
#loc126 = loc(fused[#loc54, #loc55])
#loc127 = loc(fused[#loc58, #loc59])
#loc128 = loc(fused[#loc62, #loc61])
#loc129 = loc(fused[#loc63, #loc64])
#loc130 = loc(fused[#loc66, #loc67])
#loc131 = loc(fused[#loc68, #loc69])
#loc132 = loc(fused[#loc70, #loc71])
#loc133 = loc(fused[#loc72, #loc73])
#loc134 = loc(fused[#loc75, #loc74])
#loc135 = loc(fused[#loc76, #loc77])
#loc136 = loc(fused[#loc78, #loc79])
#loc137 = loc(fused[#loc82, #loc83])
#loc138 = loc(fused[#loc81, #loc83])
#loc139 = loc(fused[#loc80, #loc79])
#loc140 = loc(fused[#loc84, #loc85])
#loc141 = loc(fused[#loc86, #loc87])
#loc142 = loc(fused[#loc88, #loc85])
#loc143 = loc(fused[#loc96, #loc97])
#loc144 = loc(fused[#loc99, #loc98])
#loc145 = loc(fused[#loc104, #loc103])
#loc146 = loc(fused[#loc105, #loc106])
