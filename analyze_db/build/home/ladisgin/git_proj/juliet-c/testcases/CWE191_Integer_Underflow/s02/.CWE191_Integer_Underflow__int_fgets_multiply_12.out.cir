!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc103 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":208:10)
#loc104 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":208:14)
#loc105 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":208:20)
#loc106 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":208:32)
#loc309 = loc(fused[#loc103, #loc104])
#loc310 = loc(fused[#loc105, #loc106])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_multiply_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc269)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc270)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc271)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc272)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc273)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc11)
  cir.func private @printIntLine(!s32i) loc(#loc274)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc14)
  cir.func no_proto @CWE191_Integer_Underflow__int_fgets_multiply_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc276)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc277)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc278)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc279)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc25)
    cir.store %4, %3 : !s32i, !cir.ptr<!s32i> loc(#loc280)
    cir.br ^bb1 loc(#loc281)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc282)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc282)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc29)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc29)
    cir.brcond %8 ^bb2, ^bb10 loc(#loc283)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc284)
  ^bb3:  // pred: ^bb2
    %9 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc276)
    cir.store %9, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc276)
    cir.br ^bb4 loc(#loc285)
  ^bb4:  // pred: ^bb3
    %10 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc38)
    %11 = cir.const #cir.int<3> : !s32i loc(#loc39)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc39)
    %13 = cir.const #cir.int<4> : !u64i loc(#loc39)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc39)
    %15 = cir.const #cir.int<2> : !s32i loc(#loc39)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc39)
    %17 = cir.binop(add, %14, %16) : !u64i loc(#loc39)
    %18 = cir.cast(integral, %17 : !u64i), !s32i loc(#loc39)
    %19 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc271)
    %20 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc40)
    %21 = cir.call @fgets(%10, %18, %20) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc41)
    %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc42)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc42)
    %24 = cir.cmp(ne, %21, %23) : !cir.ptr<!s8i>, !cir.bool loc(#loc286)
    cir.brcond %24 ^bb5, ^bb6 loc(#loc287)
  ^bb5:  // pred: ^bb4
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc46)
    %26 = cir.call @atoi(%25) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc47)
    cir.store %26, %3 : !s32i, !cir.ptr<!s32i> loc(#loc288)
    cir.br ^bb7 loc(#loc44)
  ^bb6:  // pred: ^bb4
    %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc11)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc11)
    cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    cir.br ^bb7 loc(#loc37)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc37)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc35)
  ^bb9:  // pred: ^bb8
    cir.br ^bb11 loc(#loc32)
  ^bb10:  // pred: ^bb1
    %29 = cir.const #cir.int<2> : !s32i loc(#loc51)
    %30 = cir.unary(minus, %29) : !s32i, !s32i loc(#loc52)
    cir.store %30, %3 : !s32i, !cir.ptr<!s32i> loc(#loc289)
    cir.br ^bb11 loc(#loc28)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc28)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc290)
  ^bb13:  // pred: ^bb12
    %31 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc291)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc291)
    %33 = cir.call %32() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc56)
    %34 = cir.cast(int_to_bool, %33 : !s32i), !cir.bool loc(#loc56)
    cir.brcond %34 ^bb14, ^bb19 loc(#loc292)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc293)
  ^bb15:  // pred: ^bb14
    %35 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc63)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc64)
    %37 = cir.cmp(lt, %35, %36) : !s32i, !cir.bool loc(#loc294)
    cir.brcond %37 ^bb16, ^bb17 loc(#loc295)
  ^bb16:  // pred: ^bb15
    %38 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc66)
    %39 = cir.const #cir.int<2> : !s32i loc(#loc20)
    %40 = cir.binop(mul, %38, %39) nsw : !s32i loc(#loc66)
    cir.store %40, %1 : !s32i, !cir.ptr<!s32i> loc(#loc277)
    %41 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc67)
    cir.call @printIntLine(%41) : (!s32i) -> () loc(#loc68)
    cir.br ^bb17 loc(#loc62)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc62)
  ^bb18:  // pred: ^bb17
    cir.br ^bb29 loc(#loc59)
  ^bb19:  // pred: ^bb13
    cir.br ^bb20 loc(#loc296)
  ^bb20:  // pred: ^bb19
    %42 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc71)
    %43 = cir.const #cir.int<0> : !s32i loc(#loc72)
    %44 = cir.cmp(lt, %42, %43) : !s32i, !cir.bool loc(#loc297)
    cir.brcond %44 ^bb21, ^bb27 loc(#loc298)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc299)
  ^bb22:  // pred: ^bb21
    %45 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc76)
    %46 = cir.const #cir.int<2147483647> : !s32i loc(#loc77)
    %47 = cir.unary(minus, %46) : !s32i, !s32i loc(#loc77)
    %48 = cir.const #cir.int<1> : !s32i loc(#loc77)
    %49 = cir.binop(sub, %47, %48) nsw : !s32i loc(#loc77)
    %50 = cir.const #cir.int<2> : !s32i loc(#loc78)
    %51 = cir.binop(div, %49, %50) : !s32i loc(#loc300)
    %52 = cir.cmp(gt, %45, %51) : !s32i, !cir.bool loc(#loc301)
    cir.brcond %52 ^bb23, ^bb24 loc(#loc302)
  ^bb23:  // pred: ^bb22
    %53 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    %54 = cir.const #cir.int<2> : !s32i loc(#loc22)
    %55 = cir.binop(mul, %53, %54) nsw : !s32i loc(#loc83)
    cir.store %55, %2 : !s32i, !cir.ptr<!s32i> loc(#loc278)
    %56 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc84)
    cir.call @printIntLine(%56) : (!s32i) -> () loc(#loc85)
    cir.br ^bb25 loc(#loc81)
  ^bb24:  // pred: ^bb22
    %57 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc14)
    %58 = cir.cast(array_to_ptrdecay, %57 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc14)
    cir.call @printLine(%58) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    cir.br ^bb25 loc(#loc75)
  ^bb25:  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc75)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc70)
  ^bb27:  // 2 preds: ^bb20, ^bb26
    cir.br ^bb28 loc(#loc70)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc55)
  ^bb29:  // 2 preds: ^bb18, ^bb28
    cir.br ^bb30 loc(#loc55)
  ^bb30:  // pred: ^bb29
    cir.return loc(#loc16)
  } loc(#loc275)
  cir.func no_proto @CWE191_Integer_Underflow__int_fgets_multiply_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc304)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc89)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc305)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc91)
    cir.return loc(#loc88)
  } loc(#loc303)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc306)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc307)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc97)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc98)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc99)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc100)
  cir.func @main(%arg0: !s32i loc(fused[#loc103, #loc104]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc105, #loc106])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc309)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc310)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc102)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc107)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc107)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc108)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc109)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc109)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc110)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc97)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    %8 = cir.get_global @CWE191_Integer_Underflow__int_fgets_multiply_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc311)
    cir.call @CWE191_Integer_Underflow__int_fgets_multiply_12_good() : () -> () loc(#loc112)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc98)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc98)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc99)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    %13 = cir.get_global @CWE191_Integer_Underflow__int_fgets_multiply_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc312)
    cir.call @CWE191_Integer_Underflow__int_fgets_multiply_12_bad() : () -> () loc(#loc116)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc100)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc119)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc313)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc313)
    cir.return %17 : !s32i loc(#loc313)
  } loc(#loc308)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc315)
    %1 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc316)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc317)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc318)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc319)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc133)
    cir.store %5, %4 : !s32i, !cir.ptr<!s32i> loc(#loc320)
    cir.br ^bb1 loc(#loc321)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc322)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc322)
    %8 = cir.call %7() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc137)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc137)
    cir.brcond %9 ^bb2, ^bb10 loc(#loc323)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc324)
  ^bb3:  // pred: ^bb2
    %10 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc315)
    cir.store %10, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc315)
    cir.br ^bb4 loc(#loc325)
  ^bb4:  // pred: ^bb3
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc146)
    %12 = cir.const #cir.int<3> : !s32i loc(#loc147)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc147)
    %14 = cir.const #cir.int<4> : !u64i loc(#loc147)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc147)
    %16 = cir.const #cir.int<2> : !s32i loc(#loc147)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc147)
    %18 = cir.binop(add, %15, %17) : !u64i loc(#loc147)
    %19 = cir.cast(integral, %18 : !u64i), !s32i loc(#loc147)
    %20 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc271)
    %21 = cir.load %20 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc148)
    %22 = cir.call @fgets(%11, %19, %21) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc149)
    %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc150)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc150)
    %25 = cir.cmp(ne, %22, %24) : !cir.ptr<!s8i>, !cir.bool loc(#loc326)
    cir.brcond %25 ^bb5, ^bb6 loc(#loc327)
  ^bb5:  // pred: ^bb4
    %26 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc154)
    %27 = cir.call @atoi(%26) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc155)
    cir.store %27, %4 : !s32i, !cir.ptr<!s32i> loc(#loc328)
    cir.br ^bb7 loc(#loc152)
  ^bb6:  // pred: ^bb4
    %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc158)
    %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc158)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc159)
    cir.br ^bb7 loc(#loc145)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc145)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc143)
  ^bb9:  // pred: ^bb8
    cir.br ^bb18 loc(#loc140)
  ^bb10:  // pred: ^bb1
    cir.br ^bb11 loc(#loc329)
  ^bb11:  // pred: ^bb10
    %30 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc316)
    cir.store %30, %1 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc316)
    cir.br ^bb12 loc(#loc330)
  ^bb12:  // pred: ^bb11
    %31 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc164)
    %32 = cir.const #cir.int<3> : !s32i loc(#loc165)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc165)
    %34 = cir.const #cir.int<4> : !u64i loc(#loc165)
    %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc165)
    %36 = cir.const #cir.int<2> : !s32i loc(#loc165)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc165)
    %38 = cir.binop(add, %35, %37) : !u64i loc(#loc165)
    %39 = cir.cast(integral, %38 : !u64i), !s32i loc(#loc165)
    %40 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc271)
    %41 = cir.load %40 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc166)
    %42 = cir.call @fgets(%31, %39, %41) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc167)
    %43 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc168)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc168)
    %45 = cir.cmp(ne, %42, %44) : !cir.ptr<!s8i>, !cir.bool loc(#loc331)
    cir.brcond %45 ^bb13, ^bb14 loc(#loc332)
  ^bb13:  // pred: ^bb12
    %46 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc172)
    %47 = cir.call @atoi(%46) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc173)
    cir.store %47, %4 : !s32i, !cir.ptr<!s32i> loc(#loc333)
    cir.br ^bb15 loc(#loc170)
  ^bb14:  // pred: ^bb12
    %48 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc176)
    %49 = cir.cast(array_to_ptrdecay, %48 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc176)
    cir.call @printLine(%49) : (!cir.ptr<!s8i>) -> () loc(#loc177)
    cir.br ^bb15 loc(#loc163)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc163)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc161)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc136)
  ^bb18:  // 2 preds: ^bb9, ^bb17
    cir.br ^bb19 loc(#loc136)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc334)
  ^bb20:  // pred: ^bb19
    %50 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc335)
    %51 = cir.cast(bitcast, %50 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc335)
    %52 = cir.call %51() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc180)
    %53 = cir.cast(int_to_bool, %52 : !s32i), !cir.bool loc(#loc180)
    cir.brcond %53 ^bb21, ^bb31 loc(#loc336)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc337)
  ^bb22:  // pred: ^bb21
    %54 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc187)
    %55 = cir.const #cir.int<0> : !s32i loc(#loc188)
    %56 = cir.cmp(lt, %54, %55) : !s32i, !cir.bool loc(#loc338)
    cir.brcond %56 ^bb23, ^bb29 loc(#loc339)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc340)
  ^bb24:  // pred: ^bb23
    %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc192)
    %58 = cir.const #cir.int<2147483647> : !s32i loc(#loc193)
    %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc193)
    %60 = cir.const #cir.int<1> : !s32i loc(#loc193)
    %61 = cir.binop(sub, %59, %60) nsw : !s32i loc(#loc193)
    %62 = cir.const #cir.int<2> : !s32i loc(#loc194)
    %63 = cir.binop(div, %61, %62) : !s32i loc(#loc341)
    %64 = cir.cmp(gt, %57, %63) : !s32i, !cir.bool loc(#loc342)
    cir.brcond %64 ^bb25, ^bb26 loc(#loc343)
  ^bb25:  // pred: ^bb24
    %65 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc199)
    %66 = cir.const #cir.int<2> : !s32i loc(#loc128)
    %67 = cir.binop(mul, %65, %66) nsw : !s32i loc(#loc199)
    cir.store %67, %2 : !s32i, !cir.ptr<!s32i> loc(#loc317)
    %68 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc200)
    cir.call @printIntLine(%68) : (!s32i) -> () loc(#loc201)
    cir.br ^bb27 loc(#loc197)
  ^bb26:  // pred: ^bb24
    %69 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc202)
    %70 = cir.cast(array_to_ptrdecay, %69 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc202)
    cir.call @printLine(%70) : (!cir.ptr<!s8i>) -> () loc(#loc203)
    cir.br ^bb27 loc(#loc191)
  ^bb27:  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc191)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc186)
  ^bb29:  // 2 preds: ^bb22, ^bb28
    cir.br ^bb30 loc(#loc186)
  ^bb30:  // pred: ^bb29
    cir.br ^bb41 loc(#loc183)
  ^bb31:  // pred: ^bb20
    cir.br ^bb32 loc(#loc344)
  ^bb32:  // pred: ^bb31
    %71 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc206)
    %72 = cir.const #cir.int<0> : !s32i loc(#loc207)
    %73 = cir.cmp(lt, %71, %72) : !s32i, !cir.bool loc(#loc345)
    cir.brcond %73 ^bb33, ^bb39 loc(#loc346)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc347)
  ^bb34:  // pred: ^bb33
    %74 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc211)
    %75 = cir.const #cir.int<2147483647> : !s32i loc(#loc212)
    %76 = cir.unary(minus, %75) : !s32i, !s32i loc(#loc212)
    %77 = cir.const #cir.int<1> : !s32i loc(#loc212)
    %78 = cir.binop(sub, %76, %77) nsw : !s32i loc(#loc212)
    %79 = cir.const #cir.int<2> : !s32i loc(#loc213)
    %80 = cir.binop(div, %78, %79) : !s32i loc(#loc348)
    %81 = cir.cmp(gt, %74, %80) : !s32i, !cir.bool loc(#loc349)
    cir.brcond %81 ^bb35, ^bb36 loc(#loc350)
  ^bb35:  // pred: ^bb34
    %82 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc218)
    %83 = cir.const #cir.int<2> : !s32i loc(#loc130)
    %84 = cir.binop(mul, %82, %83) nsw : !s32i loc(#loc218)
    cir.store %84, %3 : !s32i, !cir.ptr<!s32i> loc(#loc318)
    %85 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc219)
    cir.call @printIntLine(%85) : (!s32i) -> () loc(#loc220)
    cir.br ^bb37 loc(#loc216)
  ^bb36:  // pred: ^bb34
    %86 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc221)
    %87 = cir.cast(array_to_ptrdecay, %86 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc221)
    cir.call @printLine(%87) : (!cir.ptr<!s8i>) -> () loc(#loc222)
    cir.br ^bb37 loc(#loc210)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc210)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc205)
  ^bb39:  // 2 preds: ^bb32, ^bb38
    cir.br ^bb40 loc(#loc205)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc179)
  ^bb41:  // 2 preds: ^bb30, ^bb40
    cir.br ^bb42 loc(#loc179)
  ^bb42:  // pred: ^bb41
    cir.return loc(#loc122)
  } loc(#loc314)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc352)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc353)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc354)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc231)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc355)
    cir.br ^bb1 loc(#loc356)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc357)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc357)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc235)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc235)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc358)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<2> : !s32i loc(#loc240)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc241)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc359)
    cir.br ^bb4 loc(#loc238)
  ^bb3:  // pred: ^bb1
    %10 = cir.const #cir.int<2> : !s32i loc(#loc243)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc244)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc360)
    cir.br ^bb4 loc(#loc234)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc234)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc361)
  ^bb6:  // pred: ^bb5
    %12 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc362)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc362)
    %14 = cir.call %13() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc248)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc248)
    cir.brcond %15 ^bb7, ^bb12 loc(#loc363)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc364)
  ^bb8:  // pred: ^bb7
    %16 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc255)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc256)
    %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc365)
    cir.brcond %18 ^bb9, ^bb10 loc(#loc366)
  ^bb9:  // pred: ^bb8
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc258)
    %20 = cir.const #cir.int<2> : !s32i loc(#loc226)
    %21 = cir.binop(mul, %19, %20) nsw : !s32i loc(#loc258)
    cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc352)
    %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc259)
    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc260)
    cir.br ^bb10 loc(#loc254)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc254)
  ^bb11:  // pred: ^bb10
    cir.br ^bb17 loc(#loc251)
  ^bb12:  // pred: ^bb6
    cir.br ^bb13 loc(#loc367)
  ^bb13:  // pred: ^bb12
    %23 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc263)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc264)
    %25 = cir.cmp(lt, %23, %24) : !s32i, !cir.bool loc(#loc368)
    cir.brcond %25 ^bb14, ^bb15 loc(#loc369)
  ^bb14:  // pred: ^bb13
    %26 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc266)
    %27 = cir.const #cir.int<2> : !s32i loc(#loc228)
    %28 = cir.binop(mul, %26, %27) nsw : !s32i loc(#loc266)
    cir.store %28, %1 : !s32i, !cir.ptr<!s32i> loc(#loc353)
    %29 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc267)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc268)
    cir.br ^bb15 loc(#loc262)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc262)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc247)
  ^bb17:  // 2 preds: ^bb11, ^bb16
    cir.br ^bb18 loc(#loc247)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc224)
  } loc(#loc351)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_multiply_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("/usr/include/stdlib.h":105:1)
#loc8 = loc("/usr/include/stdlib.h":106:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":41:27)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":71:27)
#loc15 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":24:1)
#loc16 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":75:1)
#loc17 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":32:13)
#loc18 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":32:49)
#loc19 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":55:13)
#loc20 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":55:33)
#loc21 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":66:17)
#loc22 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":66:37)
#loc23 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":26:5)
#loc24 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":26:9)
#loc25 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":28:12)
#loc26 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":28:5)
#loc27 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":29:5)
#loc28 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":49:5)
#loc29 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":29:8)
#loc30 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":29:33)
#loc31 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":30:5)
#loc32 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":44:5)
#loc33 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":46:5)
#loc34 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":31:9)
#loc35 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":43:9)
#loc36 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":34:13)
#loc37 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":42:13)
#loc38 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":34:23)
#loc39 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":34:36)
#loc40 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":34:53)
#loc41 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":34:17)
#loc42 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":34:63)
#loc43 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":35:13)
#loc44 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":38:13)
#loc45 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":40:13)
#loc46 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":37:29)
#loc47 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":37:24)
#loc48 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":37:17)
#loc49 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":37:40)
#loc50 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":41:17)
#loc51 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":48:17)
#loc52 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":48:16)
#loc53 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":48:9)
#loc54 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":50:5)
#loc55 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":74:5)
#loc56 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":50:8)
#loc57 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":50:33)
#loc58 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":51:5)
#loc59 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":58:5)
#loc60 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":60:5)
#loc61 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":52:9)
#loc62 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":57:9)
#loc63 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":52:12)
#loc64 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":52:19)
#loc65 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":53:9)
#loc66 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":55:26)
#loc67 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":56:26)
#loc68 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":56:13)
#loc69 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":61:9)
#loc70 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":73:9)
#loc71 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":61:12)
#loc72 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":61:19)
#loc73 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":62:9)
#loc74 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":64:13)
#loc75 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":72:13)
#loc76 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":64:17)
#loc77 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":64:25)
#loc78 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":64:33)
#loc79 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":64:34)
#loc80 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":65:13)
#loc81 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":68:13)
#loc82 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":70:13)
#loc83 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":66:30)
#loc84 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":67:30)
#loc85 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":67:17)
#loc86 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":71:17)
#loc87 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":193:1)
#loc88 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":197:1)
#loc89 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":195:5)
#loc90 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":195:13)
#loc91 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":196:5)
#loc92 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":196:13)
#loc93 = loc("/usr/include/stdlib.h":575:1)
#loc94 = loc("/usr/include/stdlib.h":575:41)
#loc95 = loc("/usr/include/time.h":76:1)
#loc96 = loc("/usr/include/time.h":76:38)
#loc97 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":213:15)
#loc98 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":215:15)
#loc99 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":218:15)
#loc100 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":220:15)
#loc101 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":208:1)
#loc102 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":223:1)
#loc107 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":209:1)
#loc108 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":211:27)
#loc109 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":211:22)
#loc110 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":211:5)
#loc111 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":213:5)
#loc112 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":214:5)
#loc113 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":214:58)
#loc114 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":215:5)
#loc115 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":218:5)
#loc116 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":219:5)
#loc117 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":219:57)
#loc118 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":220:5)
#loc119 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":222:12)
#loc120 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":222:5)
#loc121 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":84:1)
#loc122 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":153:1)
#loc123 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":92:13)
#loc124 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":92:49)
#loc125 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":108:13)
#loc126 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":108:49)
#loc127 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":128:17)
#loc128 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":128:37)
#loc129 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":144:17)
#loc130 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":144:37)
#loc131 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":86:5)
#loc132 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":86:9)
#loc133 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":88:12)
#loc134 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":88:5)
#loc135 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":89:5)
#loc136 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":120:5)
#loc137 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":89:8)
#loc138 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":89:33)
#loc139 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":90:5)
#loc140 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":104:5)
#loc141 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":106:5)
#loc142 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":91:9)
#loc143 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":103:9)
#loc144 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":94:13)
#loc145 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":102:13)
#loc146 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":94:23)
#loc147 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":94:36)
#loc148 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":94:53)
#loc149 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":94:17)
#loc150 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":94:63)
#loc151 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":95:13)
#loc152 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":98:13)
#loc153 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":100:13)
#loc154 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":97:29)
#loc155 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":97:24)
#loc156 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":97:17)
#loc157 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":97:40)
#loc158 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":101:27)
#loc159 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":101:17)
#loc160 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":107:9)
#loc161 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":119:9)
#loc162 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":110:13)
#loc163 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":118:13)
#loc164 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":110:23)
#loc165 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":110:36)
#loc166 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":110:53)
#loc167 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":110:17)
#loc168 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":110:63)
#loc169 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":111:13)
#loc170 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":114:13)
#loc171 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":116:13)
#loc172 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":113:29)
#loc173 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":113:24)
#loc174 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":113:17)
#loc175 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":113:40)
#loc176 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":117:27)
#loc177 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":117:17)
#loc178 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":121:5)
#loc179 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":152:5)
#loc180 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":121:8)
#loc181 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":121:33)
#loc182 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":122:5)
#loc183 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":136:5)
#loc184 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":138:5)
#loc185 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":123:9)
#loc186 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":135:9)
#loc187 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":123:12)
#loc188 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":123:19)
#loc189 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":124:9)
#loc190 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":126:13)
#loc191 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":134:13)
#loc192 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":126:17)
#loc193 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":126:25)
#loc194 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":126:33)
#loc195 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":126:34)
#loc196 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":127:13)
#loc197 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":130:13)
#loc198 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":132:13)
#loc199 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":128:30)
#loc200 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":129:30)
#loc201 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":129:17)
#loc202 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":133:27)
#loc203 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":133:17)
#loc204 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":139:9)
#loc205 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":151:9)
#loc206 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":139:12)
#loc207 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":139:19)
#loc208 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":140:9)
#loc209 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":142:13)
#loc210 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":150:13)
#loc211 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":142:17)
#loc212 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":142:25)
#loc213 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":142:33)
#loc214 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":142:34)
#loc215 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":143:13)
#loc216 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":146:13)
#loc217 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":148:13)
#loc218 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":144:30)
#loc219 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":145:30)
#loc220 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":145:17)
#loc221 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":149:27)
#loc222 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":149:17)
#loc223 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":158:1)
#loc224 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":191:1)
#loc225 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":178:13)
#loc226 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":178:33)
#loc227 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":187:13)
#loc228 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":187:33)
#loc229 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":160:5)
#loc230 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":160:9)
#loc231 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":162:12)
#loc232 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":162:5)
#loc233 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":163:5)
#loc234 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":172:5)
#loc235 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":163:8)
#loc236 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":163:33)
#loc237 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":164:5)
#loc238 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":167:5)
#loc239 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":169:5)
#loc240 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":166:17)
#loc241 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":166:16)
#loc242 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":166:9)
#loc243 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":171:17)
#loc244 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":171:16)
#loc245 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":171:9)
#loc246 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":173:5)
#loc247 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":190:5)
#loc248 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":173:8)
#loc249 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":173:33)
#loc250 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":174:5)
#loc251 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":181:5)
#loc252 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":183:5)
#loc253 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":175:9)
#loc254 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":180:9)
#loc255 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":175:12)
#loc256 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":175:19)
#loc257 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":176:9)
#loc258 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":178:26)
#loc259 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":179:26)
#loc260 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":179:13)
#loc261 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":184:9)
#loc262 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":189:9)
#loc263 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":184:12)
#loc264 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":184:19)
#loc265 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":185:9)
#loc266 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":187:26)
#loc267 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":188:26)
#loc268 = loc("CWE191_Integer_Underflow__int_fgets_multiply_12.c":188:13)
#loc269 = loc(fused[#loc1, #loc2])
#loc270 = loc(fused[#loc3, #loc4])
#loc271 = loc(fused[#loc5, #loc6])
#loc272 = loc(fused[#loc7, #loc8])
#loc273 = loc(fused[#loc9, #loc10])
#loc274 = loc(fused[#loc12, #loc13])
#loc275 = loc(fused[#loc15, #loc16])
#loc276 = loc(fused[#loc17, #loc18])
#loc277 = loc(fused[#loc19, #loc20])
#loc278 = loc(fused[#loc21, #loc22])
#loc279 = loc(fused[#loc23, #loc24])
#loc280 = loc(fused[#loc26, #loc25])
#loc281 = loc(fused[#loc27, #loc28])
#loc282 = loc(fused[#loc29, #loc30])
#loc283 = loc(fused[#loc31, #loc32, #loc33, #loc28])
#loc284 = loc(fused[#loc34, #loc35])
#loc285 = loc(fused[#loc36, #loc37])
#loc286 = loc(fused[#loc41, #loc42])
#loc287 = loc(fused[#loc43, #loc44, #loc45, #loc37])
#loc288 = loc(fused[#loc48, #loc49])
#loc289 = loc(fused[#loc53, #loc51])
#loc290 = loc(fused[#loc54, #loc55])
#loc291 = loc(fused[#loc56, #loc57])
#loc292 = loc(fused[#loc58, #loc59, #loc60, #loc55])
#loc293 = loc(fused[#loc61, #loc62])
#loc294 = loc(fused[#loc63, #loc64])
#loc295 = loc(fused[#loc65, #loc62])
#loc296 = loc(fused[#loc69, #loc70])
#loc297 = loc(fused[#loc71, #loc72])
#loc298 = loc(fused[#loc73, #loc70])
#loc299 = loc(fused[#loc74, #loc75])
#loc300 = loc(fused[#loc77, #loc78])
#loc301 = loc(fused[#loc76, #loc79])
#loc302 = loc(fused[#loc80, #loc81, #loc82, #loc75])
#loc303 = loc(fused[#loc87, #loc88])
#loc304 = loc(fused[#loc89, #loc90])
#loc305 = loc(fused[#loc91, #loc92])
#loc306 = loc(fused[#loc93, #loc94])
#loc307 = loc(fused[#loc95, #loc96])
#loc308 = loc(fused[#loc101, #loc102])
#loc311 = loc(fused[#loc112, #loc113])
#loc312 = loc(fused[#loc116, #loc117])
#loc313 = loc(fused[#loc120, #loc119])
#loc314 = loc(fused[#loc121, #loc122])
#loc315 = loc(fused[#loc123, #loc124])
#loc316 = loc(fused[#loc125, #loc126])
#loc317 = loc(fused[#loc127, #loc128])
#loc318 = loc(fused[#loc129, #loc130])
#loc319 = loc(fused[#loc131, #loc132])
#loc320 = loc(fused[#loc134, #loc133])
#loc321 = loc(fused[#loc135, #loc136])
#loc322 = loc(fused[#loc137, #loc138])
#loc323 = loc(fused[#loc139, #loc140, #loc141, #loc136])
#loc324 = loc(fused[#loc142, #loc143])
#loc325 = loc(fused[#loc144, #loc145])
#loc326 = loc(fused[#loc149, #loc150])
#loc327 = loc(fused[#loc151, #loc152, #loc153, #loc145])
#loc328 = loc(fused[#loc156, #loc157])
#loc329 = loc(fused[#loc160, #loc161])
#loc330 = loc(fused[#loc162, #loc163])
#loc331 = loc(fused[#loc167, #loc168])
#loc332 = loc(fused[#loc169, #loc170, #loc171, #loc163])
#loc333 = loc(fused[#loc174, #loc175])
#loc334 = loc(fused[#loc178, #loc179])
#loc335 = loc(fused[#loc180, #loc181])
#loc336 = loc(fused[#loc182, #loc183, #loc184, #loc179])
#loc337 = loc(fused[#loc185, #loc186])
#loc338 = loc(fused[#loc187, #loc188])
#loc339 = loc(fused[#loc189, #loc186])
#loc340 = loc(fused[#loc190, #loc191])
#loc341 = loc(fused[#loc193, #loc194])
#loc342 = loc(fused[#loc192, #loc195])
#loc343 = loc(fused[#loc196, #loc197, #loc198, #loc191])
#loc344 = loc(fused[#loc204, #loc205])
#loc345 = loc(fused[#loc206, #loc207])
#loc346 = loc(fused[#loc208, #loc205])
#loc347 = loc(fused[#loc209, #loc210])
#loc348 = loc(fused[#loc212, #loc213])
#loc349 = loc(fused[#loc211, #loc214])
#loc350 = loc(fused[#loc215, #loc216, #loc217, #loc210])
#loc351 = loc(fused[#loc223, #loc224])
#loc352 = loc(fused[#loc225, #loc226])
#loc353 = loc(fused[#loc227, #loc228])
#loc354 = loc(fused[#loc229, #loc230])
#loc355 = loc(fused[#loc232, #loc231])
#loc356 = loc(fused[#loc233, #loc234])
#loc357 = loc(fused[#loc235, #loc236])
#loc358 = loc(fused[#loc237, #loc238, #loc239, #loc234])
#loc359 = loc(fused[#loc242, #loc240])
#loc360 = loc(fused[#loc245, #loc243])
#loc361 = loc(fused[#loc246, #loc247])
#loc362 = loc(fused[#loc248, #loc249])
#loc363 = loc(fused[#loc250, #loc251, #loc252, #loc247])
#loc364 = loc(fused[#loc253, #loc254])
#loc365 = loc(fused[#loc255, #loc256])
#loc366 = loc(fused[#loc257, #loc254])
#loc367 = loc(fused[#loc261, #loc262])
#loc368 = loc(fused[#loc263, #loc264])
#loc369 = loc(fused[#loc265, #loc262])
