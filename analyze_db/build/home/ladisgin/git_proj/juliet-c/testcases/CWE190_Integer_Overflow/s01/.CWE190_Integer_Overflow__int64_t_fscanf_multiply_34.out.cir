!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc55 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":113:10)
#loc56 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":113:14)
#loc57 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":113:20)
#loc58 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":113:32)
!ty_CWE190_Integer_Overflow__int64_t_fscanf_multiply_34_unionType = !cir.struct<union "CWE190_Integer_Overflow__int64_t_fscanf_multiply_34_unionType" {!s64i, !s64i}>
#loc160 = loc(fused[#loc55, #loc56])
#loc161 = loc(fused[#loc57, #loc58])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc138)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc139)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc140)
  cir.func private @printLongLongLine(!s64i) loc(#loc141)
  cir.func no_proto @CWE190_Integer_Overflow__int64_t_fscanf_multiply_34_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc143)
    %1 = cir.alloca !ty_CWE190_Integer_Overflow__int64_t_fscanf_multiply_34_unionType, !cir.ptr<!ty_CWE190_Integer_Overflow__int64_t_fscanf_multiply_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc144)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc15)
    cir.store %2, %0 : !s64i, !cir.ptr<!s64i> loc(#loc145)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc17)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc139)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc18)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc140)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc140)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc17)
    %9 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc19)
    %10 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int64_t_fscanf_multiply_34_unionType> -> !cir.ptr<!s64i> loc(#loc20)
    cir.store %9, %10 : !s64i, !cir.ptr<!s64i> loc(#loc146)
    cir.scope {
      %11 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc148)
      %12 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int64_t_fscanf_multiply_34_unionType> -> !cir.ptr<!s64i> loc(#loc26)
      %13 = cir.load %12 : !cir.ptr<!s64i>, !s64i loc(#loc25)
      cir.store %13, %11 : !s64i, !cir.ptr<!s64i> loc(#loc148)
      cir.scope {
        %14 = cir.load %11 : !cir.ptr<!s64i>, !s64i loc(#loc29)
        %15 = cir.const #cir.int<0> : !s32i loc(#loc30)
        %16 = cir.cast(integral, %15 : !s32i), !s64i loc(#loc30)
        %17 = cir.cmp(gt, %14, %16) : !s64i, !cir.bool loc(#loc150)
        cir.if %17 {
          %18 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc152)
          %19 = cir.load %11 : !cir.ptr<!s64i>, !s64i loc(#loc34)
          %20 = cir.const #cir.int<2> : !s32i loc(#loc33)
          %21 = cir.cast(integral, %20 : !s32i), !s64i loc(#loc33)
          %22 = cir.binop(mul, %19, %21) nsw : !s64i loc(#loc34)
          cir.store %22, %18 : !s64i, !cir.ptr<!s64i> loc(#loc152)
          %23 = cir.load %18 : !cir.ptr<!s64i>, !s64i loc(#loc35)
          cir.call @printLongLongLine(%23) : (!s64i) -> () loc(#loc36)
        } loc(#loc151)
      } loc(#loc149)
    } loc(#loc147)
    cir.return loc(#loc10)
  } loc(#loc142)
  cir.func no_proto @CWE190_Integer_Overflow__int64_t_fscanf_multiply_34_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc154)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc39)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc155)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    cir.return loc(#loc38)
  } loc(#loc153)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc156)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc157)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc158)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc52)
  cir.func @main(%arg0: !s32i loc(fused[#loc55, #loc56]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc57, #loc58])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc160)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc161)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc54)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc59)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc59)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc60)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc61)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc61)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc62)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc49)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %8 = cir.get_global @CWE190_Integer_Overflow__int64_t_fscanf_multiply_34_good : !cir.ptr<!cir.func<!void ()>> loc(#loc162)
    cir.call @CWE190_Integer_Overflow__int64_t_fscanf_multiply_34_good() : () -> () loc(#loc64)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc50)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc51)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %13 = cir.get_global @CWE190_Integer_Overflow__int64_t_fscanf_multiply_34_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc163)
    cir.call @CWE190_Integer_Overflow__int64_t_fscanf_multiply_34_bad() : () -> () loc(#loc68)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc52)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc71)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc164)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc164)
    cir.return %17 : !s32i loc(#loc164)
  } loc(#loc159)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc166)
    %1 = cir.alloca !ty_CWE190_Integer_Overflow__int64_t_fscanf_multiply_34_unionType, !cir.ptr<!ty_CWE190_Integer_Overflow__int64_t_fscanf_multiply_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc167)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc79)
    cir.store %2, %0 : !s64i, !cir.ptr<!s64i> loc(#loc168)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc81)
    %4 = cir.cast(integral, %3 : !s32i), !s64i loc(#loc81)
    cir.store %4, %0 : !s64i, !cir.ptr<!s64i> loc(#loc169)
    %5 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc83)
    %6 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int64_t_fscanf_multiply_34_unionType> -> !cir.ptr<!s64i> loc(#loc20)
    cir.store %5, %6 : !s64i, !cir.ptr<!s64i> loc(#loc170)
    cir.scope {
      %7 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc172)
      %8 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int64_t_fscanf_multiply_34_unionType> -> !cir.ptr<!s64i> loc(#loc26)
      %9 = cir.load %8 : !cir.ptr<!s64i>, !s64i loc(#loc88)
      cir.store %9, %7 : !s64i, !cir.ptr<!s64i> loc(#loc172)
      cir.scope {
        %10 = cir.load %7 : !cir.ptr<!s64i>, !s64i loc(#loc91)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc92)
        %12 = cir.cast(integral, %11 : !s32i), !s64i loc(#loc92)
        %13 = cir.cmp(gt, %10, %12) : !s64i, !cir.bool loc(#loc174)
        cir.if %13 {
          %14 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc176)
          %15 = cir.load %7 : !cir.ptr<!s64i>, !s64i loc(#loc96)
          %16 = cir.const #cir.int<2> : !s32i loc(#loc95)
          %17 = cir.cast(integral, %16 : !s32i), !s64i loc(#loc95)
          %18 = cir.binop(mul, %15, %17) nsw : !s64i loc(#loc96)
          cir.store %18, %14 : !s64i, !cir.ptr<!s64i> loc(#loc176)
          %19 = cir.load %14 : !cir.ptr<!s64i>, !s64i loc(#loc97)
          cir.call @printLongLongLine(%19) : (!s64i) -> () loc(#loc98)
        } loc(#loc175)
      } loc(#loc173)
    } loc(#loc171)
    cir.return loc(#loc74)
  } loc(#loc165)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc99)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc178)
    %1 = cir.alloca !ty_CWE190_Integer_Overflow__int64_t_fscanf_multiply_34_unionType, !cir.ptr<!ty_CWE190_Integer_Overflow__int64_t_fscanf_multiply_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc179)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc106)
    cir.store %2, %0 : !s64i, !cir.ptr<!s64i> loc(#loc180)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc108)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc139)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc109)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc181)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc181)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc108)
    %9 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc112)
    %10 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int64_t_fscanf_multiply_34_unionType> -> !cir.ptr<!s64i> loc(#loc20)
    cir.store %9, %10 : !s64i, !cir.ptr<!s64i> loc(#loc182)
    cir.scope {
      %11 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc184)
      %12 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int64_t_fscanf_multiply_34_unionType> -> !cir.ptr<!s64i> loc(#loc26)
      %13 = cir.load %12 : !cir.ptr<!s64i>, !s64i loc(#loc117)
      cir.store %13, %11 : !s64i, !cir.ptr<!s64i> loc(#loc184)
      cir.scope {
        %14 = cir.load %11 : !cir.ptr<!s64i>, !s64i loc(#loc120)
        %15 = cir.const #cir.int<0> : !s32i loc(#loc121)
        %16 = cir.cast(integral, %15 : !s32i), !s64i loc(#loc121)
        %17 = cir.cmp(gt, %14, %16) : !s64i, !cir.bool loc(#loc186)
        cir.if %17 {
          cir.scope {
            %18 = cir.load %11 : !cir.ptr<!s64i>, !s64i loc(#loc125)
            %19 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc126)
            %20 = cir.const #cir.int<2> : !s32i loc(#loc127)
            %21 = cir.cast(integral, %20 : !s32i), !s64i loc(#loc127)
            %22 = cir.binop(div, %19, %21) : !s64i loc(#loc189)
            %23 = cir.cmp(lt, %18, %22) : !s64i, !cir.bool loc(#loc190)
            cir.if %23 {
              %24 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc192)
              %25 = cir.load %11 : !cir.ptr<!s64i>, !s64i loc(#loc134)
              %26 = cir.const #cir.int<2> : !s32i loc(#loc133)
              %27 = cir.cast(integral, %26 : !s32i), !s64i loc(#loc133)
              %28 = cir.binop(mul, %25, %27) nsw : !s64i loc(#loc134)
              cir.store %28, %24 : !s64i, !cir.ptr<!s64i> loc(#loc192)
              %29 = cir.load %24 : !cir.ptr<!s64i>, !s64i loc(#loc135)
              cir.call @printLongLongLine(%29) : (!s64i) -> () loc(#loc136)
            } else {
              %24 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc99)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc99)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc137)
            } loc(#loc191)
          } loc(#loc188)
        } loc(#loc187)
      } loc(#loc185)
    } loc(#loc183)
    cir.return loc(#loc101)
  } loc(#loc177)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":35:20)
#loc6 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":35:24)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc9 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":29:1)
#loc10 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":46:1)
#loc11 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":31:5)
#loc12 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":31:13)
#loc13 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":32:5)
#loc14 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":32:67)
#loc15 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":33:12)
#loc16 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":33:5)
#loc17 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":35:5)
#loc18 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":35:13)
#loc19 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":36:26)
#loc20 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":23:13)
#loc21 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":36:5)
#loc22 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":37:5)
#loc23 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":45:5)
#loc24 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":38:9)
#loc25 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":38:32)
#loc26 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":24:13)
#loc27 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":39:9)
#loc28 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":44:9)
#loc29 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":39:12)
#loc30 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":39:19)
#loc31 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":40:9)
#loc32 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":42:13)
#loc33 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":42:37)
#loc34 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":42:30)
#loc35 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":43:31)
#loc36 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":43:13)
#loc37 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":99:1)
#loc38 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":103:1)
#loc39 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":101:5)
#loc40 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":101:13)
#loc41 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":102:5)
#loc42 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":102:13)
#loc43 = loc("/usr/include/stdlib.h":575:1)
#loc44 = loc("/usr/include/stdlib.h":575:41)
#loc45 = loc("/usr/include/time.h":76:1)
#loc46 = loc("/usr/include/time.h":76:38)
#loc47 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc48 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc49 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":118:15)
#loc50 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":120:15)
#loc51 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":123:15)
#loc52 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":125:15)
#loc53 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":113:1)
#loc54 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":128:1)
#loc59 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":114:1)
#loc60 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":116:27)
#loc61 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":116:22)
#loc62 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":116:5)
#loc63 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":118:5)
#loc64 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":119:5)
#loc65 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":119:62)
#loc66 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":120:5)
#loc67 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":123:5)
#loc68 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":124:5)
#loc69 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":124:61)
#loc70 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":125:5)
#loc71 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":127:12)
#loc72 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":127:5)
#loc73 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":53:1)
#loc74 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":70:1)
#loc75 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":55:5)
#loc76 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":55:13)
#loc77 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":56:5)
#loc78 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":56:67)
#loc79 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":57:12)
#loc80 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":57:5)
#loc81 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":59:12)
#loc82 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":59:5)
#loc83 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":60:26)
#loc84 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":60:5)
#loc85 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":61:5)
#loc86 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":69:5)
#loc87 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":62:9)
#loc88 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":62:32)
#loc89 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":63:9)
#loc90 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":68:9)
#loc91 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":63:12)
#loc92 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":63:19)
#loc93 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":64:9)
#loc94 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":66:13)
#loc95 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":66:37)
#loc96 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":66:30)
#loc97 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":67:31)
#loc98 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":67:13)
#loc99 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":93:27)
#loc100 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":73:1)
#loc101 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":97:1)
#loc102 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":75:5)
#loc103 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":75:13)
#loc104 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":76:5)
#loc105 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":76:67)
#loc106 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":77:12)
#loc107 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":77:5)
#loc108 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":79:5)
#loc109 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":79:13)
#loc110 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":79:20)
#loc111 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":79:24)
#loc112 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":80:26)
#loc113 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":80:5)
#loc114 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":81:5)
#loc115 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":96:5)
#loc116 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":82:9)
#loc117 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":82:32)
#loc118 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":83:9)
#loc119 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":95:9)
#loc120 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":83:12)
#loc121 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":83:19)
#loc122 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":84:9)
#loc123 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":86:13)
#loc124 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":94:13)
#loc125 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":86:17)
#loc126 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":86:25)
#loc127 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":86:35)
#loc128 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":86:36)
#loc129 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":87:13)
#loc130 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":90:13)
#loc131 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":92:13)
#loc132 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":88:17)
#loc133 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":88:41)
#loc134 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":88:34)
#loc135 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":89:35)
#loc136 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":89:17)
#loc137 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":93:17)
#loc138 = loc(fused[#loc1, #loc2])
#loc139 = loc(fused[#loc3, #loc4])
#loc140 = loc(fused[#loc5, #loc6])
#loc141 = loc(fused[#loc7, #loc8])
#loc142 = loc(fused[#loc9, #loc10])
#loc143 = loc(fused[#loc11, #loc12])
#loc144 = loc(fused[#loc13, #loc14])
#loc145 = loc(fused[#loc16, #loc15])
#loc146 = loc(fused[#loc21, #loc19])
#loc147 = loc(fused[#loc22, #loc23])
#loc148 = loc(fused[#loc24, #loc25])
#loc149 = loc(fused[#loc27, #loc28])
#loc150 = loc(fused[#loc29, #loc30])
#loc151 = loc(fused[#loc31, #loc28])
#loc152 = loc(fused[#loc32, #loc33])
#loc153 = loc(fused[#loc37, #loc38])
#loc154 = loc(fused[#loc39, #loc40])
#loc155 = loc(fused[#loc41, #loc42])
#loc156 = loc(fused[#loc43, #loc44])
#loc157 = loc(fused[#loc45, #loc46])
#loc158 = loc(fused[#loc47, #loc48])
#loc159 = loc(fused[#loc53, #loc54])
#loc162 = loc(fused[#loc64, #loc65])
#loc163 = loc(fused[#loc68, #loc69])
#loc164 = loc(fused[#loc72, #loc71])
#loc165 = loc(fused[#loc73, #loc74])
#loc166 = loc(fused[#loc75, #loc76])
#loc167 = loc(fused[#loc77, #loc78])
#loc168 = loc(fused[#loc80, #loc79])
#loc169 = loc(fused[#loc82, #loc81])
#loc170 = loc(fused[#loc84, #loc83])
#loc171 = loc(fused[#loc85, #loc86])
#loc172 = loc(fused[#loc87, #loc88])
#loc173 = loc(fused[#loc89, #loc90])
#loc174 = loc(fused[#loc91, #loc92])
#loc175 = loc(fused[#loc93, #loc90])
#loc176 = loc(fused[#loc94, #loc95])
#loc177 = loc(fused[#loc100, #loc101])
#loc178 = loc(fused[#loc102, #loc103])
#loc179 = loc(fused[#loc104, #loc105])
#loc180 = loc(fused[#loc107, #loc106])
#loc181 = loc(fused[#loc110, #loc111])
#loc182 = loc(fused[#loc113, #loc112])
#loc183 = loc(fused[#loc114, #loc115])
#loc184 = loc(fused[#loc116, #loc117])
#loc185 = loc(fused[#loc118, #loc119])
#loc186 = loc(fused[#loc120, #loc121])
#loc187 = loc(fused[#loc122, #loc119])
#loc188 = loc(fused[#loc123, #loc124])
#loc189 = loc(fused[#loc126, #loc127])
#loc190 = loc(fused[#loc125, #loc128])
#loc191 = loc(fused[#loc129, #loc130, #loc131, #loc124])
#loc192 = loc(fused[#loc132, #loc133])
