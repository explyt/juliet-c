!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_long_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc99)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc100)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc101)
  cir.func no_proto @CWE415_Double_Free__malloc_free_long_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc103)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc104)
    cir.goto "source" loc(#loc105)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc15)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc16)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc17)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc17)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc106)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc107)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc16)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc108)
    cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc109)
    cir.scope {
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc24)
      %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc25)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc25)
      %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s64i>, !cir.bool loc(#loc111)
      cir.if %18 {
        %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc27)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc28)
        %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc29)
        cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc27)
      } loc(#loc112)
    } loc(#loc110)
    %9 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc30)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc31)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc31)
    cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc30)
    cir.goto "sink" loc(#loc113)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc34)
    %12 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc35)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc36)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc36)
    cir.call @free(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc35)
    cir.return loc(#loc8)
  } loc(#loc102)
  cir.func no_proto @CWE415_Double_Free__malloc_free_long_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc115)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc39)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc116)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc41)
    cir.return loc(#loc38)
  } loc(#loc114)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc118)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc47)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc119)
    cir.goto "source" loc(#loc120)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc51)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc52)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc53)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc53)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc121)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc122)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc52)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc123)
    cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc124)
    cir.scope {
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc60)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc61)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc61)
      %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s64i>, !cir.bool loc(#loc126)
      cir.if %15 {
        %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc63)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc64)
        %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc65)
        cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc63)
      } loc(#loc127)
    } loc(#loc125)
    %9 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc66)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc67)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc67)
    cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc66)
    cir.goto "sink" loc(#loc128)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc70)
    cir.return loc(#loc44)
  } loc(#loc117)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc130)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc75)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc131)
    cir.goto "source" loc(#loc132)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc79)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc80)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc81)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc81)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc133)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc134)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc80)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc135)
    cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc136)
    cir.scope {
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc88)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc89)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc89)
      %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s64i>, !cir.bool loc(#loc138)
      cir.if %15 {
        %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc91)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc92)
        %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc93)
        cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc91)
      } loc(#loc139)
    } loc(#loc137)
    cir.goto "sink" loc(#loc140)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc96)
    %9 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc97)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc98)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc98)
    cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc97)
    cir.return loc(#loc72)
  } loc(#loc129)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_long_18.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE415_Double_Free__malloc_free_long_18.c":24:1)
#loc8 = loc("CWE415_Double_Free__malloc_free_long_18.c":39:1)
#loc9 = loc("CWE415_Double_Free__malloc_free_long_18.c":26:5)
#loc10 = loc("CWE415_Double_Free__malloc_free_long_18.c":26:12)
#loc11 = loc("CWE415_Double_Free__malloc_free_long_18.c":28:12)
#loc12 = loc("CWE415_Double_Free__malloc_free_long_18.c":28:5)
#loc13 = loc("CWE415_Double_Free__malloc_free_long_18.c":29:5)
#loc14 = loc("CWE415_Double_Free__malloc_free_long_18.c":29:10)
#loc15 = loc("CWE415_Double_Free__malloc_free_long_18.c":30:1)
#loc16 = loc("CWE415_Double_Free__malloc_free_long_18.c":31:20)
#loc17 = loc("CWE415_Double_Free__malloc_free_long_18.c":31:27)
#loc18 = loc("CWE415_Double_Free__malloc_free_long_18.c":31:31)
#loc19 = loc("CWE415_Double_Free__malloc_free_long_18.c":31:42)
#loc20 = loc("CWE415_Double_Free__malloc_free_long_18.c":31:43)
#loc21 = loc("CWE415_Double_Free__malloc_free_long_18.c":31:5)
#loc22 = loc("CWE415_Double_Free__malloc_free_long_18.c":32:5)
#loc23 = loc("CWE415_Double_Free__malloc_free_long_18.c":32:33)
#loc24 = loc("CWE415_Double_Free__malloc_free_long_18.c":32:9)
#loc25 = loc("CWE415_Double_Free__malloc_free_long_18.c":32:17)
#loc26 = loc("CWE415_Double_Free__malloc_free_long_18.c":32:23)
#loc27 = loc("CWE415_Double_Free__malloc_free_long_18.c":32:24)
#loc28 = loc("CWE415_Double_Free__malloc_free_long_18.c":32:30)
#loc29 = loc("CWE415_Double_Free__malloc_free_long_18.c":32:29)
#loc30 = loc("CWE415_Double_Free__malloc_free_long_18.c":34:5)
#loc31 = loc("CWE415_Double_Free__malloc_free_long_18.c":34:10)
#loc32 = loc("CWE415_Double_Free__malloc_free_long_18.c":35:5)
#loc33 = loc("CWE415_Double_Free__malloc_free_long_18.c":35:10)
#loc34 = loc("CWE415_Double_Free__malloc_free_long_18.c":36:1)
#loc35 = loc("CWE415_Double_Free__malloc_free_long_18.c":38:5)
#loc36 = loc("CWE415_Double_Free__malloc_free_long_18.c":38:10)
#loc37 = loc("CWE415_Double_Free__malloc_free_long_18.c":81:1)
#loc38 = loc("CWE415_Double_Free__malloc_free_long_18.c":85:1)
#loc39 = loc("CWE415_Double_Free__malloc_free_long_18.c":83:5)
#loc40 = loc("CWE415_Double_Free__malloc_free_long_18.c":83:13)
#loc41 = loc("CWE415_Double_Free__malloc_free_long_18.c":84:5)
#loc42 = loc("CWE415_Double_Free__malloc_free_long_18.c":84:13)
#loc43 = loc("CWE415_Double_Free__malloc_free_long_18.c":46:1)
#loc44 = loc("CWE415_Double_Free__malloc_free_long_18.c":62:1)
#loc45 = loc("CWE415_Double_Free__malloc_free_long_18.c":48:5)
#loc46 = loc("CWE415_Double_Free__malloc_free_long_18.c":48:12)
#loc47 = loc("CWE415_Double_Free__malloc_free_long_18.c":50:12)
#loc48 = loc("CWE415_Double_Free__malloc_free_long_18.c":50:5)
#loc49 = loc("CWE415_Double_Free__malloc_free_long_18.c":51:5)
#loc50 = loc("CWE415_Double_Free__malloc_free_long_18.c":51:10)
#loc51 = loc("CWE415_Double_Free__malloc_free_long_18.c":52:1)
#loc52 = loc("CWE415_Double_Free__malloc_free_long_18.c":53:20)
#loc53 = loc("CWE415_Double_Free__malloc_free_long_18.c":53:27)
#loc54 = loc("CWE415_Double_Free__malloc_free_long_18.c":53:31)
#loc55 = loc("CWE415_Double_Free__malloc_free_long_18.c":53:42)
#loc56 = loc("CWE415_Double_Free__malloc_free_long_18.c":53:43)
#loc57 = loc("CWE415_Double_Free__malloc_free_long_18.c":53:5)
#loc58 = loc("CWE415_Double_Free__malloc_free_long_18.c":54:5)
#loc59 = loc("CWE415_Double_Free__malloc_free_long_18.c":54:33)
#loc60 = loc("CWE415_Double_Free__malloc_free_long_18.c":54:9)
#loc61 = loc("CWE415_Double_Free__malloc_free_long_18.c":54:17)
#loc62 = loc("CWE415_Double_Free__malloc_free_long_18.c":54:23)
#loc63 = loc("CWE415_Double_Free__malloc_free_long_18.c":54:24)
#loc64 = loc("CWE415_Double_Free__malloc_free_long_18.c":54:30)
#loc65 = loc("CWE415_Double_Free__malloc_free_long_18.c":54:29)
#loc66 = loc("CWE415_Double_Free__malloc_free_long_18.c":56:5)
#loc67 = loc("CWE415_Double_Free__malloc_free_long_18.c":56:10)
#loc68 = loc("CWE415_Double_Free__malloc_free_long_18.c":57:5)
#loc69 = loc("CWE415_Double_Free__malloc_free_long_18.c":57:10)
#loc70 = loc("CWE415_Double_Free__malloc_free_long_18.c":58:1)
#loc71 = loc("CWE415_Double_Free__malloc_free_long_18.c":65:1)
#loc72 = loc("CWE415_Double_Free__malloc_free_long_18.c":79:1)
#loc73 = loc("CWE415_Double_Free__malloc_free_long_18.c":67:5)
#loc74 = loc("CWE415_Double_Free__malloc_free_long_18.c":67:12)
#loc75 = loc("CWE415_Double_Free__malloc_free_long_18.c":69:12)
#loc76 = loc("CWE415_Double_Free__malloc_free_long_18.c":69:5)
#loc77 = loc("CWE415_Double_Free__malloc_free_long_18.c":70:5)
#loc78 = loc("CWE415_Double_Free__malloc_free_long_18.c":70:10)
#loc79 = loc("CWE415_Double_Free__malloc_free_long_18.c":71:1)
#loc80 = loc("CWE415_Double_Free__malloc_free_long_18.c":72:20)
#loc81 = loc("CWE415_Double_Free__malloc_free_long_18.c":72:27)
#loc82 = loc("CWE415_Double_Free__malloc_free_long_18.c":72:31)
#loc83 = loc("CWE415_Double_Free__malloc_free_long_18.c":72:42)
#loc84 = loc("CWE415_Double_Free__malloc_free_long_18.c":72:43)
#loc85 = loc("CWE415_Double_Free__malloc_free_long_18.c":72:5)
#loc86 = loc("CWE415_Double_Free__malloc_free_long_18.c":73:5)
#loc87 = loc("CWE415_Double_Free__malloc_free_long_18.c":73:33)
#loc88 = loc("CWE415_Double_Free__malloc_free_long_18.c":73:9)
#loc89 = loc("CWE415_Double_Free__malloc_free_long_18.c":73:17)
#loc90 = loc("CWE415_Double_Free__malloc_free_long_18.c":73:23)
#loc91 = loc("CWE415_Double_Free__malloc_free_long_18.c":73:24)
#loc92 = loc("CWE415_Double_Free__malloc_free_long_18.c":73:30)
#loc93 = loc("CWE415_Double_Free__malloc_free_long_18.c":73:29)
#loc94 = loc("CWE415_Double_Free__malloc_free_long_18.c":75:5)
#loc95 = loc("CWE415_Double_Free__malloc_free_long_18.c":75:10)
#loc96 = loc("CWE415_Double_Free__malloc_free_long_18.c":76:1)
#loc97 = loc("CWE415_Double_Free__malloc_free_long_18.c":78:5)
#loc98 = loc("CWE415_Double_Free__malloc_free_long_18.c":78:10)
#loc99 = loc(fused[#loc1, #loc2])
#loc100 = loc(fused[#loc3, #loc4])
#loc101 = loc(fused[#loc5, #loc6])
#loc102 = loc(fused[#loc7, #loc8])
#loc103 = loc(fused[#loc9, #loc10])
#loc104 = loc(fused[#loc12, #loc11])
#loc105 = loc(fused[#loc13, #loc14])
#loc106 = loc(fused[#loc18, #loc19])
#loc107 = loc(fused[#loc17, #loc19])
#loc108 = loc(fused[#loc16, #loc20])
#loc109 = loc(fused[#loc21, #loc20])
#loc110 = loc(fused[#loc22, #loc23])
#loc111 = loc(fused[#loc24, #loc25])
#loc112 = loc(fused[#loc26, #loc23])
#loc113 = loc(fused[#loc32, #loc33])
#loc114 = loc(fused[#loc37, #loc38])
#loc115 = loc(fused[#loc39, #loc40])
#loc116 = loc(fused[#loc41, #loc42])
#loc117 = loc(fused[#loc43, #loc44])
#loc118 = loc(fused[#loc45, #loc46])
#loc119 = loc(fused[#loc48, #loc47])
#loc120 = loc(fused[#loc49, #loc50])
#loc121 = loc(fused[#loc54, #loc55])
#loc122 = loc(fused[#loc53, #loc55])
#loc123 = loc(fused[#loc52, #loc56])
#loc124 = loc(fused[#loc57, #loc56])
#loc125 = loc(fused[#loc58, #loc59])
#loc126 = loc(fused[#loc60, #loc61])
#loc127 = loc(fused[#loc62, #loc59])
#loc128 = loc(fused[#loc68, #loc69])
#loc129 = loc(fused[#loc71, #loc72])
#loc130 = loc(fused[#loc73, #loc74])
#loc131 = loc(fused[#loc76, #loc75])
#loc132 = loc(fused[#loc77, #loc78])
#loc133 = loc(fused[#loc82, #loc83])
#loc134 = loc(fused[#loc81, #loc83])
#loc135 = loc(fused[#loc80, #loc84])
#loc136 = loc(fused[#loc85, #loc84])
#loc137 = loc(fused[#loc86, #loc87])
#loc138 = loc(fused[#loc88, #loc89])
#loc139 = loc(fused[#loc90, #loc87])
#loc140 = loc(fused[#loc94, #loc95])
