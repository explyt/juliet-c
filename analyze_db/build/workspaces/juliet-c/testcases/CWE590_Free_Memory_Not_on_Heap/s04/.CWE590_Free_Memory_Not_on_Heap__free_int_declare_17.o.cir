!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc123)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc124)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_int_declare_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc126)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc127)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc11)
    cir.store %2, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc128)
    cir.scope {
      %10 = cir.const #cir.int<0> : !s32i loc(#loc15)
      cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc130)
      cir.for : cond {
        %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc17)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc18)
        %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc131)
        cir.condition(%13) loc(#loc19)
      } body {
        cir.scope {
          cir.scope {
            %11 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc134)
            cir.scope {
              %13 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc136)
              cir.scope {
                %14 = cir.const #cir.int<0> : !s32i loc(#loc31)
                %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc31)
                cir.store %15, %13 : !u64i, !cir.ptr<!u64i> loc(#loc138)
                cir.for : cond {
                  %16 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc33)
                  %17 = cir.const #cir.int<100> : !s32i loc(#loc34)
                  %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc34)
                  %19 = cir.cmp(lt, %16, %18) : !u64i, !cir.bool loc(#loc139)
                  cir.condition(%19) loc(#loc35)
                } body {
                  cir.scope {
                    %16 = cir.const #cir.int<5> : !s32i loc(#loc37)
                    %17 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc38)
                    %18 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc39)
                    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !u64i), !cir.ptr<!s32i> loc(#loc39)
                    cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc141)
                  } loc(#loc140)
                  cir.yield loc(#loc30)
                } step {
                  %16 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc40)
                  %17 = cir.unary(inc, %16) : !u64i, !u64i loc(#loc41)
                  cir.store %17, %13 : !u64i, !cir.ptr<!u64i> loc(#loc142)
                  cir.yield loc(#loc137)
                } loc(#loc137)
              } loc(#loc137)
            } loc(#loc135)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc42)
            cir.store %12, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc143)
          } loc(#loc133)
        } loc(#loc132)
        cir.yield loc(#loc14)
      } step {
        %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc44)
        %12 = cir.unary(inc, %11) nsw : !s32i, !s32i loc(#loc45)
        cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc144)
        cir.yield loc(#loc129)
      } loc(#loc129)
    } loc(#loc129)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc46)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc47)
    %5 = cir.ptr_stride(%3 : !cir.ptr<!s32i>, %4 : !s32i), !cir.ptr<!s32i> loc(#loc48)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc46)
    cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc49)
    %7 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc50)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc51)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc51)
    cir.call @free(%9) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc50)
    cir.return loc(#loc6)
  } loc(#loc125)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_int_declare_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc146)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc54)
    cir.return loc(#loc53)
  } loc(#loc145)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc147)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc148)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc60)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc149)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc151)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc152)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc69)
    cir.store %2, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc153)
    cir.scope {
      %10 = cir.const #cir.int<0> : !s32i loc(#loc73)
      cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc155)
      cir.for : cond {
        %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc75)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc76)
        %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc156)
        cir.condition(%13) loc(#loc77)
      } body {
        cir.scope {
          cir.scope {
            %11 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc159)
            %12 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc83)
            %13 = cir.const #cir.int<100> : !s32i loc(#loc84)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc84)
            %15 = cir.const #cir.int<4> : !u64i loc(#loc160)
            %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc161)
            %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc83)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc162)
            cir.store %18, %11 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc159)
            cir.scope {
              %20 = cir.load %11 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc89)
              %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc90)
              %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc90)
              %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!s32i>, !cir.bool loc(#loc164)
              cir.if %23 {
                %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc60)
                %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc60)
                cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc92)
                %26 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc93)
                %27 = cir.const #cir.int<1> : !s32i loc(#loc94)
                cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc93)
              } loc(#loc165)
            } loc(#loc163)
            cir.scope {
              %20 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc167)
              cir.scope {
                %21 = cir.const #cir.int<0> : !s32i loc(#loc101)
                %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc101)
                cir.store %22, %20 : !u64i, !cir.ptr<!u64i> loc(#loc169)
                cir.for : cond {
                  %23 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc103)
                  %24 = cir.const #cir.int<100> : !s32i loc(#loc104)
                  %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc104)
                  %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc170)
                  cir.condition(%26) loc(#loc105)
                } body {
                  cir.scope {
                    %23 = cir.const #cir.int<5> : !s32i loc(#loc107)
                    %24 = cir.load %11 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc108)
                    %25 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc109)
                    %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !u64i), !cir.ptr<!s32i> loc(#loc110)
                    cir.store %23, %26 : !s32i, !cir.ptr<!s32i> loc(#loc172)
                  } loc(#loc171)
                  cir.yield loc(#loc100)
                } step {
                  %23 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc111)
                  %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc112)
                  cir.store %24, %20 : !u64i, !cir.ptr<!u64i> loc(#loc173)
                  cir.yield loc(#loc168)
                } loc(#loc168)
              } loc(#loc168)
            } loc(#loc166)
            %19 = cir.load %11 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc113)
            cir.store %19, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc174)
          } loc(#loc158)
        } loc(#loc157)
        cir.yield loc(#loc72)
      } step {
        %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc115)
        %12 = cir.unary(inc, %11) nsw : !s32i, !s32i loc(#loc116)
        cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc175)
        cir.yield loc(#loc154)
      } loc(#loc154)
    } loc(#loc154)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc117)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc118)
    %5 = cir.ptr_stride(%3 : !cir.ptr<!s32i>, %4 : !s32i), !cir.ptr<!s32i> loc(#loc119)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc120)
    %7 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc121)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc122)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc122)
    cir.call @free(%9) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc121)
    cir.return loc(#loc64)
  } loc(#loc150)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":23:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":46:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":25:5)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":25:9)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":26:5)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":26:11)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":27:12)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":27:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":28:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":42:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":28:13)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":28:9)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":28:16)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":28:20)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":28:18)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":29:5)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":30:9)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":41:9)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":32:13)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":32:31)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":33:13)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":39:13)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":34:17)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":34:24)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":35:17)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":38:17)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":35:26)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":35:22)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":35:29)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":35:33)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":35:31)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":36:17)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":37:37)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":37:32)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":37:21)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":35:39)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":35:38)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":40:20)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":40:13)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":28:24)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":28:23)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":43:18)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":43:23)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":43:24)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":43:5)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":45:5)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":45:10)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":83:1)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":86:1)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":85:5)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":85:13)
#loc56 = loc("/usr/include/stdlib.h":672:1)
#loc57 = loc("/usr/include/stdlib.h":672:45)
#loc58 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc59 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":65:27)
#loc61 = loc("/usr/include/stdlib.h":756:1)
#loc62 = loc("/usr/include/stdlib.h":756:70)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":53:1)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":81:1)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":55:5)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":55:9)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":56:5)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":56:11)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":57:12)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":57:5)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":58:5)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":77:5)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":58:13)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":58:9)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":58:16)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":58:20)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":58:18)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":59:5)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":60:9)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":76:9)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":62:13)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":62:61)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":62:39)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":62:46)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":62:50)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":62:60)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":63:13)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":67:13)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":63:17)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":63:31)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":64:13)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":65:17)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":66:17)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":66:22)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":68:13)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":74:13)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":69:17)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":69:24)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":70:17)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":73:17)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":70:26)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":70:22)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":70:29)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":70:33)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":70:31)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":71:17)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":72:37)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":72:21)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":72:32)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":72:33)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":70:39)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":70:38)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":75:20)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":75:13)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":58:24)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":58:23)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":78:18)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":78:23)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":78:24)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":78:5)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":80:5)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_declare_17.c":80:10)
#loc123 = loc(fused[#loc1, #loc2])
#loc124 = loc(fused[#loc3, #loc4])
#loc125 = loc(fused[#loc5, #loc6])
#loc126 = loc(fused[#loc7, #loc8])
#loc127 = loc(fused[#loc9, #loc10])
#loc128 = loc(fused[#loc12, #loc11])
#loc129 = loc(fused[#loc13, #loc14])
#loc130 = loc(fused[#loc16, #loc15])
#loc131 = loc(fused[#loc17, #loc18])
#loc132 = loc(fused[#loc20, #loc14])
#loc133 = loc(fused[#loc21, #loc22])
#loc134 = loc(fused[#loc23, #loc24])
#loc135 = loc(fused[#loc25, #loc26])
#loc136 = loc(fused[#loc27, #loc28])
#loc137 = loc(fused[#loc29, #loc30])
#loc138 = loc(fused[#loc32, #loc31])
#loc139 = loc(fused[#loc33, #loc34])
#loc140 = loc(fused[#loc36, #loc30])
#loc141 = loc(fused[#loc39, #loc37])
#loc142 = loc(fused[#loc41, #loc40])
#loc143 = loc(fused[#loc43, #loc42])
#loc144 = loc(fused[#loc45, #loc44])
#loc145 = loc(fused[#loc52, #loc53])
#loc146 = loc(fused[#loc54, #loc55])
#loc147 = loc(fused[#loc56, #loc57])
#loc148 = loc(fused[#loc58, #loc59])
#loc149 = loc(fused[#loc61, #loc62])
#loc150 = loc(fused[#loc63, #loc64])
#loc151 = loc(fused[#loc65, #loc66])
#loc152 = loc(fused[#loc67, #loc68])
#loc153 = loc(fused[#loc70, #loc69])
#loc154 = loc(fused[#loc71, #loc72])
#loc155 = loc(fused[#loc74, #loc73])
#loc156 = loc(fused[#loc75, #loc76])
#loc157 = loc(fused[#loc78, #loc72])
#loc158 = loc(fused[#loc79, #loc80])
#loc159 = loc(fused[#loc81, #loc82])
#loc160 = loc(fused[#loc85, #loc86])
#loc161 = loc(fused[#loc84, #loc86])
#loc162 = loc(fused[#loc83, #loc82])
#loc163 = loc(fused[#loc87, #loc88])
#loc164 = loc(fused[#loc89, #loc90])
#loc165 = loc(fused[#loc91, #loc88])
#loc166 = loc(fused[#loc95, #loc96])
#loc167 = loc(fused[#loc97, #loc98])
#loc168 = loc(fused[#loc99, #loc100])
#loc169 = loc(fused[#loc102, #loc101])
#loc170 = loc(fused[#loc103, #loc104])
#loc171 = loc(fused[#loc106, #loc100])
#loc172 = loc(fused[#loc108, #loc107])
#loc173 = loc(fused[#loc112, #loc111])
#loc174 = loc(fused[#loc114, #loc113])
#loc175 = loc(fused[#loc116, #loc115])
