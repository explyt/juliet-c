!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc17 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":55:74)
#loc18 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":55:84)
#loc132 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":129:78)
#loc133 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":129:88)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc145 = loc(fused[#loc17, #loc18])
#loc190 = loc(fused[#loc132, #loc133])
!ty__linkedList = !cir.struct<struct "_linkedList" {!cir.ptr<!cir.struct<struct "_linkedList">>, !cir.ptr<!cir.struct<struct "_linkedList">>} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
!ty__badStruct = !cir.struct<struct "_badStruct" {!ty__linkedList}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE123_Write_What_Where_Condition/CWE123_Write_What_Where_Condition__listen_socket_61b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc137)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc138)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc139)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc140)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc141)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc142)
  cir.func private @close(!s32i) -> !s32i loc(#loc143)
  cir.func @CWE123_Write_What_Where_Condition__listen_socket_61b_badSource(%arg0: !ty__badStruct loc(fused[#loc17, #loc18])) -> !ty__badStruct extra(#fn_attr1) {
    %0 = cir.alloca !ty__badStruct, !cir.ptr<!ty__badStruct>, ["data", init] {alignment = 8 : i64} loc(#loc145)
    %1 = cir.alloca !ty__badStruct, !cir.ptr<!ty__badStruct>, ["__retval"] {alignment = 8 : i64} loc(#loc16)
    cir.store %arg0, %0 : !ty__badStruct, !cir.ptr<!ty__badStruct> loc(#loc19)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc147)
      %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc148)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc149)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc150)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc27)
      %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc27)
      cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc149)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc29)
      %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc29)
      cir.store %10, %6 : !s32i, !cir.ptr<!s32i> loc(#loc150)
      cir.scope {
        cir.do {
          %11 = cir.const #cir.int<2> : !s32i loc(#loc32)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc33)
          %13 = cir.const #cir.int<6> : !s32i loc(#loc34)
          %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc35)
          cir.store %14, %5 : !s32i, !cir.ptr<!s32i> loc(#loc152)
          cir.scope {
            %40 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc40)
            %41 = cir.const #cir.int<1> : !s32i loc(#loc41)
            %42 = cir.unary(minus, %41) : !s32i, !s32i loc(#loc41)
            %43 = cir.cmp(eq, %40, %42) : !s32i, !cir.bool loc(#loc154)
            cir.if %43 {
              cir.break loc(#loc43)
            } loc(#loc155)
          } loc(#loc153)
          %15 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc156)
          %16 = cir.const #cir.int<0> : !s32i loc(#loc46)
          %17 = cir.const #cir.int<16> : !u64i loc(#loc157)
          cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc158)
          %18 = cir.const #cir.int<2> : !s32i loc(#loc51)
          %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc51)
          %20 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc52)
          cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc159)
          %21 = cir.const #cir.int<0> : !s32i loc(#loc54)
          %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc54)
          %23 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc55)
          %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc56)
          cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc160)
          %25 = cir.const #cir.int<27015> : !s32i loc(#loc58)
          %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc58)
          %27 = cir.call @htons(%26) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc59)
          %28 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc60)
          cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc161)
          cir.scope {
            %40 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc65)
            %41 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc163)
            %42 = cir.const #cir.int<16> : !u64i loc(#loc164)
            %43 = cir.cast(integral, %42 : !u64i), !u32i loc(#loc164)
            %44 = cir.call @bind(%40, %41, %43) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc70)
            %45 = cir.const #cir.int<1> : !s32i loc(#loc71)
            %46 = cir.unary(minus, %45) : !s32i, !s32i loc(#loc71)
            %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc165)
            cir.if %47 {
              cir.break loc(#loc73)
            } loc(#loc166)
          } loc(#loc162)
          cir.scope {
            %40 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc76)
            %41 = cir.const #cir.int<5> : !s32i loc(#loc77)
            %42 = cir.call @listen(%40, %41) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc78)
            %43 = cir.const #cir.int<1> : !s32i loc(#loc79)
            %44 = cir.unary(minus, %43) : !s32i, !s32i loc(#loc79)
            %45 = cir.cmp(eq, %42, %44) : !s32i, !cir.bool loc(#loc168)
            cir.if %45 {
              cir.break loc(#loc81)
            } loc(#loc169)
          } loc(#loc167)
          %29 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc82)
          %30 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc83)
          %31 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc84)
          %32 = cir.call @accept(%29, %30, %31) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc85)
          cir.store %32, %6 : !s32i, !cir.ptr<!s32i> loc(#loc170)
          cir.scope {
            %40 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc90)
            %41 = cir.const #cir.int<1> : !s32i loc(#loc91)
            %42 = cir.unary(minus, %41) : !s32i, !s32i loc(#loc91)
            %43 = cir.cmp(eq, %40, %42) : !s32i, !cir.bool loc(#loc172)
            cir.if %43 {
              cir.break loc(#loc93)
            } loc(#loc173)
          } loc(#loc171)
          %33 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc94)
          %34 = cir.cast(bitcast, %0 : !cir.ptr<!ty__badStruct>), !cir.ptr<!s8i> loc(#loc174)
          %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc175)
          %36 = cir.const #cir.int<16> : !u64i loc(#loc176)
          %37 = cir.const #cir.int<0> : !s32i loc(#loc100)
          %38 = cir.call @recv(%33, %35, %36, %37) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc101)
          %39 = cir.cast(integral, %38 : !s64i), !s32i loc(#loc101)
          cir.store %39, %3 : !s32i, !cir.ptr<!s32i> loc(#loc177)
          cir.scope {
            %40 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc106)
            %41 = cir.const #cir.int<1> : !s32i loc(#loc107)
            %42 = cir.unary(minus, %41) : !s32i, !s32i loc(#loc107)
            %43 = cir.cmp(eq, %40, %42) : !s32i, !cir.bool loc(#loc179)
            %44 = cir.ternary(%43, true {
              %45 = cir.const #true loc(#loc108)
              cir.yield %45 : !cir.bool loc(#loc108)
            }, false {
              %45 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc109)
              %46 = cir.const #cir.int<0> : !s32i loc(#loc110)
              %47 = cir.cmp(eq, %45, %46) : !s32i, !cir.bool loc(#loc180)
              %48 = cir.ternary(%47, true {
                %49 = cir.const #true loc(#loc108)
                cir.yield %49 : !cir.bool loc(#loc108)
              }, false {
                %49 = cir.const #false loc(#loc108)
                cir.yield %49 : !cir.bool loc(#loc108)
              }) : (!cir.bool) -> !cir.bool loc(#loc108)
              cir.yield %48 : !cir.bool loc(#loc108)
            }) : (!cir.bool) -> !cir.bool loc(#loc108)
            cir.if %44 {
              cir.break loc(#loc112)
            } loc(#loc181)
          } loc(#loc178)
          cir.yield loc(#loc31)
        } while {
          %11 = cir.const #cir.int<0> : !s32i loc(#loc113)
          %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc113)
          cir.condition(%12) loc(#loc113)
        } loc(#loc151)
      } loc(#loc151)
      cir.scope {
        %11 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc116)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc117)
        %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc117)
        %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc183)
        cir.if %14 {
          %15 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc119)
          %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc120)
        } loc(#loc184)
      } loc(#loc182)
      cir.scope {
        %11 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc123)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc124)
        %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc124)
        %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc186)
        cir.if %14 {
          %15 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc126)
          %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc127)
        } loc(#loc187)
      } loc(#loc185)
    } loc(#loc146)
    cir.copy %0 to %1 : !cir.ptr<!ty__badStruct> loc(#loc16)
    %2 = cir.load %1 : !cir.ptr<!ty__badStruct>, !ty__badStruct loc(#loc188)
    cir.return %2 : !ty__badStruct loc(#loc188)
  } loc(#loc144)
  cir.func @CWE123_Write_What_Where_Condition__listen_socket_61b_goodG2BSource(%arg0: !ty__badStruct loc(fused[#loc132, #loc133])) -> !ty__badStruct extra(#fn_attr1) {
    %0 = cir.alloca !ty__badStruct, !cir.ptr<!ty__badStruct>, ["data", init] {alignment = 8 : i64} loc(#loc190)
    %1 = cir.alloca !ty__badStruct, !cir.ptr<!ty__badStruct>, ["__retval"] {alignment = 8 : i64} loc(#loc131)
    cir.store %arg0, %0 : !ty__badStruct, !cir.ptr<!ty__badStruct> loc(#loc134)
    cir.copy %0 to %1 : !cir.ptr<!ty__badStruct> loc(#loc131)
    %2 = cir.load %1 : !cir.ptr<!ty__badStruct>, !ty__badStruct loc(#loc191)
    cir.return %2 : !ty__badStruct loc(#loc191)
  } loc(#loc189)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE123_Write_What_Where_Condition/CWE123_Write_What_Where_Condition__listen_socket_61b.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/unistd.h":358:1)
#loc14 = loc("/usr/include/unistd.h":358:27)
#loc15 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":55:1)
#loc16 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":122:1)
#loc19 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":56:1)
#loc20 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":57:5)
#loc21 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":120:5)
#loc22 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":62:9)
#loc23 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":62:13)
#loc24 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":63:9)
#loc25 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":63:28)
#loc26 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":64:9)
#loc27 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":64:31)
#loc28 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":65:9)
#loc29 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":65:31)
#loc30 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":66:9)
#loc31 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":105:17)
#loc32 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":75:35)
#loc33 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":75:44)
#loc34 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":75:57)
#loc35 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":75:28)
#loc36 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":75:13)
#loc37 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":75:68)
#loc38 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":76:13)
#loc39 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":79:13)
#loc40 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":76:17)
#loc41 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":76:33)
#loc42 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":77:13)
#loc43 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":78:17)
#loc44 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":80:20)
#loc45 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":80:21)
#loc46 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":80:30)
#loc47 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":80:33)
#loc48 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":80:47)
#loc49 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":80:13)
#loc50 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":80:48)
#loc51 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":81:34)
#loc52 = loc("/usr/include/netinet/in.h":249:5)
#loc53 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":81:13)
#loc54 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":82:39)
#loc55 = loc("/usr/include/netinet/in.h":251:20)
#loc56 = loc("/usr/include/netinet/in.h":33:15)
#loc57 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":82:13)
#loc58 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":83:38)
#loc59 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":83:32)
#loc60 = loc("/usr/include/netinet/in.h":250:15)
#loc61 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":83:13)
#loc62 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":83:46)
#loc63 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":84:13)
#loc64 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":87:13)
#loc65 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":84:22)
#loc66 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":84:54)
#loc67 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":84:55)
#loc68 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":84:64)
#loc69 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":84:78)
#loc70 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":84:17)
#loc71 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":84:84)
#loc72 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":85:13)
#loc73 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":86:17)
#loc74 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":88:13)
#loc75 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":91:13)
#loc76 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":88:24)
#loc77 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":88:38)
#loc78 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":88:17)
#loc79 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":88:57)
#loc80 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":89:13)
#loc81 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":90:17)
#loc82 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":92:35)
#loc83 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":92:49)
#loc84 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":92:55)
#loc85 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":92:28)
#loc86 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":92:13)
#loc87 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":92:59)
#loc88 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":93:13)
#loc89 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":96:13)
#loc90 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":93:17)
#loc91 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":93:33)
#loc92 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":94:13)
#loc93 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":95:17)
#loc94 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":99:31)
#loc95 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":99:52)
#loc96 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":99:53)
#loc97 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":99:45)
#loc98 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":99:59)
#loc99 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":99:70)
#loc100 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":99:73)
#loc101 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":99:26)
#loc102 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":99:13)
#loc103 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":99:74)
#loc104 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":100:13)
#loc105 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":103:13)
#loc106 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":100:17)
#loc107 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":100:31)
#loc108 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":100:44)
#loc109 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":100:47)
#loc110 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":100:61)
#loc111 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":101:13)
#loc112 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":102:17)
#loc113 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":105:16)
#loc114 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":106:9)
#loc115 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":109:9)
#loc116 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":106:13)
#loc117 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":106:29)
#loc118 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":107:9)
#loc119 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":108:26)
#loc120 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":108:13)
#loc121 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":110:9)
#loc122 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":113:9)
#loc123 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":110:13)
#loc124 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":110:29)
#loc125 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":111:9)
#loc126 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":112:26)
#loc127 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":112:13)
#loc128 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":121:5)
#loc129 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":121:12)
#loc130 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":129:1)
#loc131 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":134:1)
#loc134 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":130:1)
#loc135 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":133:5)
#loc136 = loc("CWE123_Write_What_Where_Condition__listen_socket_61b.c":133:12)
#loc137 = loc(fused[#loc1, #loc2])
#loc138 = loc(fused[#loc3, #loc4])
#loc139 = loc(fused[#loc5, #loc6])
#loc140 = loc(fused[#loc7, #loc8])
#loc141 = loc(fused[#loc9, #loc10])
#loc142 = loc(fused[#loc11, #loc12])
#loc143 = loc(fused[#loc13, #loc14])
#loc144 = loc(fused[#loc15, #loc16])
#loc146 = loc(fused[#loc20, #loc21])
#loc147 = loc(fused[#loc22, #loc23])
#loc148 = loc(fused[#loc24, #loc25])
#loc149 = loc(fused[#loc26, #loc27])
#loc150 = loc(fused[#loc28, #loc29])
#loc151 = loc(fused[#loc30, #loc31])
#loc152 = loc(fused[#loc36, #loc37])
#loc153 = loc(fused[#loc38, #loc39])
#loc154 = loc(fused[#loc40, #loc41])
#loc155 = loc(fused[#loc42, #loc39])
#loc156 = loc(fused[#loc44, #loc45])
#loc157 = loc(fused[#loc47, #loc48])
#loc158 = loc(fused[#loc49, #loc50])
#loc159 = loc(fused[#loc53, #loc51])
#loc160 = loc(fused[#loc57, #loc54])
#loc161 = loc(fused[#loc61, #loc62])
#loc162 = loc(fused[#loc63, #loc64])
#loc163 = loc(fused[#loc66, #loc67])
#loc164 = loc(fused[#loc68, #loc69])
#loc165 = loc(fused[#loc70, #loc71])
#loc166 = loc(fused[#loc72, #loc64])
#loc167 = loc(fused[#loc74, #loc75])
#loc168 = loc(fused[#loc78, #loc79])
#loc169 = loc(fused[#loc80, #loc75])
#loc170 = loc(fused[#loc86, #loc87])
#loc171 = loc(fused[#loc88, #loc89])
#loc172 = loc(fused[#loc90, #loc91])
#loc173 = loc(fused[#loc92, #loc89])
#loc174 = loc(fused[#loc95, #loc96])
#loc175 = loc(fused[#loc97, #loc96])
#loc176 = loc(fused[#loc98, #loc99])
#loc177 = loc(fused[#loc102, #loc103])
#loc178 = loc(fused[#loc104, #loc105])
#loc179 = loc(fused[#loc106, #loc107])
#loc180 = loc(fused[#loc109, #loc110])
#loc181 = loc(fused[#loc111, #loc105])
#loc182 = loc(fused[#loc114, #loc115])
#loc183 = loc(fused[#loc116, #loc117])
#loc184 = loc(fused[#loc118, #loc115])
#loc185 = loc(fused[#loc121, #loc122])
#loc186 = loc(fused[#loc123, #loc124])
#loc187 = loc(fused[#loc125, #loc122])
#loc188 = loc(fused[#loc128, #loc129])
#loc189 = loc(fused[#loc130, #loc131])
#loc191 = loc(fused[#loc135, #loc136])
