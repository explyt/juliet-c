!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc121 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":110:44)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_execl_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B2.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc225)
  cir.global "private" constant cir_private @__const.goodG2B1.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc226)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_connect_socket_execl_15_bad.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc227)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc228)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc229)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc230)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc13)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc231)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc232)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc233)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc234)
  cir.func private @close(!s32i) -> !s32i loc(#loc235)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc236)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc26)
  cir.func private @execl(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc237)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"/bin/sh\00" : !cir.array<!s8i x 8>> : !cir.array<!s8i x 8> {alignment = 1 : i64} loc(#loc29)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc30)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_execl_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc239)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc240)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc241)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc242)
    %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc243)
    %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc244)
    %6 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc227)
    %7 = cir.get_global @__const.CWE78_OS_Command_Injection__char_connect_socket_execl_15_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc227)
    cir.copy %7 to %6 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc227)
    %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc45)
    cir.store %8, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc245)
    cir.br ^bb1 loc(#loc246)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.int<6> : !s32i loc(#loc49)
    cir.br ^bb2 loc(#loc47)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %9 : !s32i, ^bb44 [
      6: ^bb4
    ] loc(#loc47)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc50)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc247)
  ^bb5:  // pred: ^bb4
    %10 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc40)
    cir.store %11, %3 : !s32i, !cir.ptr<!s32i> loc(#loc242)
    %12 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc53)
    %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
    %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc53)
    cir.store %14, %4 : !u64i, !cir.ptr<!u64i> loc(#loc243)
    cir.br ^bb6 loc(#loc248)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc248)
  ^bb7:  // pred: ^bb36
    %15 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc57)
    cir.brcond %16 ^bb8, ^bb37 loc(#loc57)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    %17 = cir.const #cir.int<2> : !s32i loc(#loc58)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %19 = cir.const #cir.int<6> : !s32i loc(#loc60)
    %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc61)
    cir.store %20, %3 : !s32i, !cir.ptr<!s32i> loc(#loc249)
    cir.br ^bb9 loc(#loc250)
  ^bb9:  // pred: ^bb8
    %21 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc66)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc67)
    %24 = cir.cmp(eq, %21, %23) : !s32i, !cir.bool loc(#loc251)
    cir.brcond %24 ^bb10, ^bb11 loc(#loc252)
  ^bb10:  // pred: ^bb9
    cir.br ^bb37 loc(#loc69)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc65)
  ^bb12:  // pred: ^bb11
    %25 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc253)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc72)
    %27 = cir.const #cir.int<16> : !u64i loc(#loc254)
    cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc255)
    %28 = cir.const #cir.int<2> : !s32i loc(#loc77)
    %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc77)
    %30 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
    cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc256)
    %31 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc13)
    %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc13)
    %33 = cir.call @inet_addr(%32) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc80)
    %34 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc81)
    %35 = cir.get_member %34[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc82)
    cir.store %33, %35 : !u32i, !cir.ptr<!u32i> loc(#loc257)
    %36 = cir.const #cir.int<27015> : !s32i loc(#loc85)
    %37 = cir.cast(integral, %36 : !s32i), !u16i loc(#loc85)
    %38 = cir.call @htons(%37) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc86)
    %39 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc87)
    cir.store %38, %39 : !u16i, !cir.ptr<!u16i> loc(#loc258)
    cir.br ^bb13 loc(#loc259)
  ^bb13:  // pred: ^bb12
    %40 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    %41 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc260)
    %42 = cir.const #cir.int<16> : !u64i loc(#loc261)
    %43 = cir.cast(integral, %42 : !u64i), !u32i loc(#loc261)
    %44 = cir.call @connect(%40, %41, %43) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc97)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %46 = cir.unary(minus, %45) : !s32i, !s32i loc(#loc98)
    %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc262)
    cir.brcond %47 ^bb14, ^bb15 loc(#loc263)
  ^bb14:  // pred: ^bb13
    cir.br ^bb37 loc(#loc100)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc91)
  ^bb16:  // pred: ^bb15
    %48 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc101)
    %49 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
    %50 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc103)
    %51 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %50 : !u64i), !cir.ptr<!s8i> loc(#loc104)
    %52 = cir.cast(bitcast, %51 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc264)
    %53 = cir.const #cir.int<1> : !u64i loc(#loc265)
    %54 = cir.const #cir.int<100> : !s32i loc(#loc109)
    %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc109)
    %56 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc110)
    %57 = cir.binop(sub, %55, %56) : !u64i loc(#loc266)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc111)
    %60 = cir.binop(sub, %57, %59) : !u64i loc(#loc267)
    %61 = cir.binop(mul, %53, %60) : !u64i loc(#loc268)
    %62 = cir.const #cir.int<0> : !s32i loc(#loc113)
    %63 = cir.call @recv(%48, %52, %61, %62) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc114)
    %64 = cir.cast(integral, %63 : !s64i), !s32i loc(#loc114)
    cir.store %64, %0 : !s32i, !cir.ptr<!s32i> loc(#loc269)
    cir.br ^bb17 loc(#loc270)
  ^bb17:  // pred: ^bb16
    %65 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    %66 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %67 = cir.unary(minus, %66) : !s32i, !s32i loc(#loc120)
    %68 = cir.cmp(eq, %65, %67) : !s32i, !cir.bool loc(#loc271)
    cir.brcond %68 ^bb18, ^bb19 loc(#loc121)
  ^bb18:  // pred: ^bb17
    %69 = cir.const #true loc(#loc121)
    cir.br ^bb24(%69 : !cir.bool) loc(#loc121)
  ^bb19:  // pred: ^bb17
    %70 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    %71 = cir.const #cir.int<0> : !s32i loc(#loc123)
    %72 = cir.cmp(eq, %70, %71) : !s32i, !cir.bool loc(#loc272)
    cir.brcond %72 ^bb20, ^bb21 loc(#loc121)
  ^bb20:  // pred: ^bb19
    %73 = cir.const #true loc(#loc121)
    cir.br ^bb22(%73 : !cir.bool) loc(#loc121)
  ^bb21:  // pred: ^bb19
    %74 = cir.const #false loc(#loc121)
    cir.br ^bb22(%74 : !cir.bool) loc(#loc121)
  ^bb22(%75: !cir.bool loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":110:44)):  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc121)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24(%75 : !cir.bool) loc(#loc121)
  ^bb24(%76: !cir.bool loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":110:44)):  // 2 preds: ^bb18, ^bb23
    cir.br ^bb25 loc(#loc121)
  ^bb25:  // pred: ^bb24
    cir.brcond %76 ^bb26, ^bb27 loc(#loc273)
  ^bb26:  // pred: ^bb25
    cir.br ^bb37 loc(#loc125)
  ^bb27:  // pred: ^bb25
    cir.br ^bb28 loc(#loc118)
  ^bb28:  // pred: ^bb27
    %77 = cir.const #cir.int<0> : !s32i loc(#loc126)
    %78 = cir.cast(integral, %77 : !s32i), !s8i loc(#loc126)
    %79 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
    %80 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc128)
    %81 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    %82 = cir.cast(integral, %81 : !s32i), !u64i loc(#loc129)
    %83 = cir.const #cir.int<1> : !u64i loc(#loc274)
    %84 = cir.binop(div, %82, %83) : !u64i loc(#loc275)
    %85 = cir.binop(add, %80, %84) : !u64i loc(#loc276)
    %86 = cir.ptr_stride(%79 : !cir.ptr<!s8i>, %85 : !u64i), !cir.ptr<!s8i> loc(#loc132)
    cir.store %78, %86 : !s8i, !cir.ptr<!s8i> loc(#loc277)
    %87 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
    %88 = cir.const #cir.int<13> : !s32i loc(#loc134)
    %89 = cir.call @strchr(%87, %88) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc135)
    cir.store %89, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc278)
    cir.br ^bb29 loc(#loc279)
  ^bb29:  // pred: ^bb28
    %90 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
    %91 = cir.cast(ptr_to_bool, %90 : !cir.ptr<!s8i>), !cir.bool loc(#loc140)
    cir.brcond %91 ^bb30, ^bb31 loc(#loc280)
  ^bb30:  // pred: ^bb29
    %92 = cir.const #cir.int<0> : !s32i loc(#loc142)
    %93 = cir.cast(integral, %92 : !s32i), !s8i loc(#loc142)
    %94 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
    cir.store %93, %94 : !s8i, !cir.ptr<!s8i> loc(#loc281)
    cir.br ^bb31 loc(#loc139)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc139)
  ^bb32:  // pred: ^bb31
    %95 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
    %96 = cir.const #cir.int<10> : !s32i loc(#loc146)
    %97 = cir.call @strchr(%95, %96) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc147)
    cir.store %97, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc282)
    cir.br ^bb33 loc(#loc283)
  ^bb33:  // pred: ^bb32
    %98 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
    %99 = cir.cast(ptr_to_bool, %98 : !cir.ptr<!s8i>), !cir.bool loc(#loc152)
    cir.brcond %99 ^bb34, ^bb35 loc(#loc284)
  ^bb34:  // pred: ^bb33
    %100 = cir.const #cir.int<0> : !s32i loc(#loc154)
    %101 = cir.cast(integral, %100 : !s32i), !s8i loc(#loc154)
    %102 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
    cir.store %101, %102 : !s8i, !cir.ptr<!s8i> loc(#loc285)
    cir.br ^bb35 loc(#loc151)
  ^bb35:  // 2 preds: ^bb33, ^bb34
    cir.br ^bb36 loc(#loc151)
  ^bb36:  // pred: ^bb35
    cir.br ^bb7 loc(#loc56)
  ^bb37:  // 4 preds: ^bb7, ^bb10, ^bb14, ^bb26
    cir.br ^bb38 loc(#loc56)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc286)
  ^bb39:  // pred: ^bb38
    %103 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    %104 = cir.const #cir.int<1> : !s32i loc(#loc160)
    %105 = cir.unary(minus, %104) : !s32i, !s32i loc(#loc160)
    %106 = cir.cmp(ne, %103, %105) : !s32i, !cir.bool loc(#loc287)
    cir.brcond %106 ^bb40, ^bb41 loc(#loc288)
  ^bb40:  // pred: ^bb39
    %107 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    %108 = cir.call @close(%107) : (!s32i) -> !s32i loc(#loc163)
    cir.br ^bb41 loc(#loc158)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc158)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc52)
  ^bb43:  // pred: ^bb42
    cir.br ^bb45 loc(#loc164)
  ^bb44:  // pred: ^bb2
    %109 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc26)
    %110 = cir.cast(array_to_ptrdecay, %109 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc26)
    cir.call @printLine(%110) : (!cir.ptr<!s8i>) -> () loc(#loc165)
    cir.br ^bb45 loc(#loc166)
  ^bb45:  // 2 preds: ^bb43, ^bb44
    cir.br ^bb46 loc(#loc48)
  ^bb46:  // pred: ^bb45
    %111 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc29)
    %112 = cir.cast(array_to_ptrdecay, %111 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc29)
    %113 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc167)
    %114 = cir.cast(array_to_ptrdecay, %113 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc167)
    %115 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc30)
    %116 = cir.cast(array_to_ptrdecay, %115 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc30)
    %117 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
    %118 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc169)
    %119 = cir.call @execl(%112, %114, %116, %117, %118) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc170)
    cir.return loc(#loc32)
  } loc(#loc238)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_execl_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc290)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc173)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc291)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc175)
    cir.return loc(#loc172)
  } loc(#loc289)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc292)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc179)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc294)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc226)
    %2 = cir.get_global @__const.goodG2B1.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc226)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc226)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc184)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc295)
    cir.br ^bb1 loc(#loc296)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<5> : !s32i loc(#loc188)
    cir.br ^bb2 loc(#loc186)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc186)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc189)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc190)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc190)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc191)
    cir.br ^bb6 loc(#loc192)
  ^bb5:  // pred: ^bb2
    %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc193)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc194)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc179)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc179)
    %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc193)
    cir.br ^bb6 loc(#loc195)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc187)
  ^bb7:  // pred: ^bb6
    %12 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc196)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc196)
    %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc197)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc197)
    %16 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc198)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc198)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc199)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc200)
    %20 = cir.call @execl(%13, %15, %17, %18, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc201)
    cir.return loc(#loc181)
  } loc(#loc293)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc298)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc225)
    %2 = cir.get_global @__const.goodG2B2.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc225)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc225)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc206)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc299)
    cir.br ^bb1 loc(#loc300)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<6> : !s32i loc(#loc210)
    cir.br ^bb2 loc(#loc208)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc208)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc211)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %5 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc212)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc213)
    %7 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc214)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc214)
    %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc212)
    cir.br ^bb6 loc(#loc215)
  ^bb5:  // pred: ^bb2
    %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc216)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc216)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc217)
    cir.br ^bb6 loc(#loc218)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc209)
  ^bb7:  // pred: ^bb6
    %12 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc219)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc219)
    %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc220)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc220)
    %16 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc221)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc221)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc222)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc223)
    %20 = cir.call @execl(%13, %15, %17, %18, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc224)
    cir.return loc(#loc203)
  } loc(#loc297)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":181:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":181:28)
#loc3 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":159:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":159:28)
#loc5 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":68:5)
#loc6 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":68:28)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("/usr/include/sys/socket.h":102:1)
#loc10 = loc("/usr/include/sys/socket.h":102:62)
#loc11 = loc("/usr/include/arpa/inet.h":34:1)
#loc12 = loc("/usr/include/arpa/inet.h":34:47)
#loc13 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":100:49)
#loc14 = loc("/usr/include/netinet/in.h":404:1)
#loc15 = loc("/usr/include/netinet/in.h":405:40)
#loc16 = loc("/usr/include/sys/socket.h":126:1)
#loc17 = loc("/usr/include/sys/socket.h":126:75)
#loc18 = loc("/usr/include/sys/socket.h":145:1)
#loc19 = loc("/usr/include/sys/socket.h":145:68)
#loc20 = loc("/usr/include/string.h":246:1)
#loc21 = loc("/usr/include/string.h":247:33)
#loc22 = loc("/usr/include/unistd.h":358:1)
#loc23 = loc("/usr/include/unistd.h":358:27)
#loc24 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc25 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc26 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":143:19)
#loc27 = loc("/usr/include/unistd.h":594:1)
#loc28 = loc("/usr/include/unistd.h":595:14)
#loc29 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":148:11)
#loc30 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":148:47)
#loc31 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":65:1)
#loc32 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":149:1)
#loc33 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":78:9)
#loc34 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":78:13)
#loc35 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":79:9)
#loc36 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":79:28)
#loc37 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":80:9)
#loc38 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":80:15)
#loc39 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":81:9)
#loc40 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":81:32)
#loc41 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":82:9)
#loc42 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":82:37)
#loc43 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":67:5)
#loc44 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":67:12)
#loc45 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":69:12)
#loc46 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":69:5)
#loc47 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":70:5)
#loc48 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":145:5)
#loc49 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":70:12)
#loc50 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":72:5)
#loc51 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":73:5)
#loc52 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":139:5)
#loc53 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":82:26)
#loc54 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":82:33)
#loc55 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":83:9)
#loc56 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":128:17)
#loc57 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":128:16)
#loc58 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":93:36)
#loc59 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":93:45)
#loc60 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":93:58)
#loc61 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":93:29)
#loc62 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":93:13)
#loc63 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":93:69)
#loc64 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":94:13)
#loc65 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":97:13)
#loc66 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":94:17)
#loc67 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":94:34)
#loc68 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":95:13)
#loc69 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":96:17)
#loc70 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":98:20)
#loc71 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":98:21)
#loc72 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":98:30)
#loc73 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":98:33)
#loc74 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":98:47)
#loc75 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":98:13)
#loc76 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":98:48)
#loc77 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":99:34)
#loc78 = loc("/usr/include/netinet/in.h":249:5)
#loc79 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":99:13)
#loc80 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":100:39)
#loc81 = loc("/usr/include/netinet/in.h":251:20)
#loc82 = loc("/usr/include/netinet/in.h":33:15)
#loc83 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":100:13)
#loc84 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":100:59)
#loc85 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":101:38)
#loc86 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":101:32)
#loc87 = loc("/usr/include/netinet/in.h":250:15)
#loc88 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":101:13)
#loc89 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":101:46)
#loc90 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":102:13)
#loc91 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":105:13)
#loc92 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":102:25)
#loc93 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":102:58)
#loc94 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":102:59)
#loc95 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":102:68)
#loc96 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":102:82)
#loc97 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":102:17)
#loc98 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":102:88)
#loc99 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":103:13)
#loc100 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":104:17)
#loc101 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":109:31)
#loc102 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":109:55)
#loc103 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":109:62)
#loc104 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":109:60)
#loc105 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":109:46)
#loc106 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":109:69)
#loc107 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":109:72)
#loc108 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":109:83)
#loc109 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":109:88)
#loc110 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":109:94)
#loc111 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":109:104)
#loc112 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":109:105)
#loc113 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":109:108)
#loc114 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":109:26)
#loc115 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":109:13)
#loc116 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":109:109)
#loc117 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":110:13)
#loc118 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":113:13)
#loc119 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":110:17)
#loc120 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":110:31)
#loc122 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":110:47)
#loc123 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":110:61)
#loc124 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":111:13)
#loc125 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":112:17)
#loc126 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":115:57)
#loc127 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":115:13)
#loc128 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":115:18)
#loc129 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":115:28)
#loc130 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":115:41)
#loc131 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":115:52)
#loc132 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":115:53)
#loc133 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":117:30)
#loc134 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":117:36)
#loc135 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":117:23)
#loc136 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":117:13)
#loc137 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":117:40)
#loc138 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":118:13)
#loc139 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":121:13)
#loc140 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":118:17)
#loc141 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":119:13)
#loc142 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":120:28)
#loc143 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":120:18)
#loc144 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":120:17)
#loc145 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":122:30)
#loc146 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":122:36)
#loc147 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":122:23)
#loc148 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":122:13)
#loc149 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":122:40)
#loc150 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":123:13)
#loc151 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":126:13)
#loc152 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":123:17)
#loc153 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":124:13)
#loc154 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":125:28)
#loc155 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":125:18)
#loc156 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":125:17)
#loc157 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":129:9)
#loc158 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":132:9)
#loc159 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":129:13)
#loc160 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":129:30)
#loc161 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":130:9)
#loc162 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":131:26)
#loc163 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":131:13)
#loc164 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":140:5)
#loc165 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":143:9)
#loc166 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":144:9)
#loc167 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":148:29)
#loc168 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":148:61)
#loc169 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":148:75)
#loc170 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":148:5)
#loc171 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":199:1)
#loc172 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":203:1)
#loc173 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":201:5)
#loc174 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":201:14)
#loc175 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":202:5)
#loc176 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":202:14)
#loc177 = loc("/usr/include/string.h":149:1)
#loc178 = loc("/usr/include/string.h":150:14)
#loc179 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":169:22)
#loc180 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":156:1)
#loc181 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":175:1)
#loc182 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":158:5)
#loc183 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":158:12)
#loc184 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":160:12)
#loc185 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":160:5)
#loc186 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":161:5)
#loc187 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":171:5)
#loc188 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":161:12)
#loc189 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":163:5)
#loc190 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":165:19)
#loc191 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":165:9)
#loc192 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":166:9)
#loc193 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":169:9)
#loc194 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":169:16)
#loc195 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":170:9)
#loc196 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":174:11)
#loc197 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":174:29)
#loc198 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":174:47)
#loc199 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":174:61)
#loc200 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":174:75)
#loc201 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":174:5)
#loc202 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":178:1)
#loc203 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":197:1)
#loc204 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":180:5)
#loc205 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":180:12)
#loc206 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":182:12)
#loc207 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":182:5)
#loc208 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":183:5)
#loc209 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":193:5)
#loc210 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":183:12)
#loc211 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":185:5)
#loc212 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":187:9)
#loc213 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":187:16)
#loc214 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":187:22)
#loc215 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":188:9)
#loc216 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":191:19)
#loc217 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":191:9)
#loc218 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":192:9)
#loc219 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":196:11)
#loc220 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":196:29)
#loc221 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":196:47)
#loc222 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":196:61)
#loc223 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":196:75)
#loc224 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_15.c":196:5)
#loc225 = loc(fused[#loc1, #loc2])
#loc226 = loc(fused[#loc3, #loc4])
#loc227 = loc(fused[#loc5, #loc6])
#loc228 = loc(fused[#loc7, #loc8])
#loc229 = loc(fused[#loc9, #loc10])
#loc230 = loc(fused[#loc11, #loc12])
#loc231 = loc(fused[#loc14, #loc15])
#loc232 = loc(fused[#loc16, #loc17])
#loc233 = loc(fused[#loc18, #loc19])
#loc234 = loc(fused[#loc20, #loc21])
#loc235 = loc(fused[#loc22, #loc23])
#loc236 = loc(fused[#loc24, #loc25])
#loc237 = loc(fused[#loc27, #loc28])
#loc238 = loc(fused[#loc31, #loc32])
#loc239 = loc(fused[#loc33, #loc34])
#loc240 = loc(fused[#loc35, #loc36])
#loc241 = loc(fused[#loc37, #loc38])
#loc242 = loc(fused[#loc39, #loc40])
#loc243 = loc(fused[#loc41, #loc42])
#loc244 = loc(fused[#loc43, #loc44])
#loc245 = loc(fused[#loc46, #loc45])
#loc246 = loc(fused[#loc47, #loc48])
#loc247 = loc(fused[#loc51, #loc52])
#loc248 = loc(fused[#loc55, #loc56])
#loc249 = loc(fused[#loc62, #loc63])
#loc250 = loc(fused[#loc64, #loc65])
#loc251 = loc(fused[#loc66, #loc67])
#loc252 = loc(fused[#loc68, #loc65])
#loc253 = loc(fused[#loc70, #loc71])
#loc254 = loc(fused[#loc73, #loc74])
#loc255 = loc(fused[#loc75, #loc76])
#loc256 = loc(fused[#loc79, #loc77])
#loc257 = loc(fused[#loc83, #loc84])
#loc258 = loc(fused[#loc88, #loc89])
#loc259 = loc(fused[#loc90, #loc91])
#loc260 = loc(fused[#loc93, #loc94])
#loc261 = loc(fused[#loc95, #loc96])
#loc262 = loc(fused[#loc97, #loc98])
#loc263 = loc(fused[#loc99, #loc91])
#loc264 = loc(fused[#loc105, #loc106])
#loc265 = loc(fused[#loc107, #loc108])
#loc266 = loc(fused[#loc109, #loc110])
#loc267 = loc(fused[#loc109, #loc111])
#loc268 = loc(fused[#loc107, #loc112])
#loc269 = loc(fused[#loc115, #loc116])
#loc270 = loc(fused[#loc117, #loc118])
#loc271 = loc(fused[#loc119, #loc120])
#loc272 = loc(fused[#loc122, #loc123])
#loc273 = loc(fused[#loc124, #loc118])
#loc274 = loc(fused[#loc130, #loc131])
#loc275 = loc(fused[#loc129, #loc131])
#loc276 = loc(fused[#loc128, #loc131])
#loc277 = loc(fused[#loc127, #loc126])
#loc278 = loc(fused[#loc136, #loc137])
#loc279 = loc(fused[#loc138, #loc139])
#loc280 = loc(fused[#loc141, #loc139])
#loc281 = loc(fused[#loc144, #loc142])
#loc282 = loc(fused[#loc148, #loc149])
#loc283 = loc(fused[#loc150, #loc151])
#loc284 = loc(fused[#loc153, #loc151])
#loc285 = loc(fused[#loc156, #loc154])
#loc286 = loc(fused[#loc157, #loc158])
#loc287 = loc(fused[#loc159, #loc160])
#loc288 = loc(fused[#loc161, #loc158])
#loc289 = loc(fused[#loc171, #loc172])
#loc290 = loc(fused[#loc173, #loc174])
#loc291 = loc(fused[#loc175, #loc176])
#loc292 = loc(fused[#loc177, #loc178])
#loc293 = loc(fused[#loc180, #loc181])
#loc294 = loc(fused[#loc182, #loc183])
#loc295 = loc(fused[#loc185, #loc184])
#loc296 = loc(fused[#loc186, #loc187])
#loc297 = loc(fused[#loc202, #loc203])
#loc298 = loc(fused[#loc204, #loc205])
#loc299 = loc(fused[#loc207, #loc206])
#loc300 = loc(fused[#loc208, #loc209])
