!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc5 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":22:21)
#loc6 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":22:27)
#loc41 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":49:25)
#loc42 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":49:31)
#loc69 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":70:25)
#loc70 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":70:31)
#loc102 = loc(fused[#loc5, #loc6])
#loc116 = loc(fused[#loc41, #loc42])
#loc127 = loc(fused[#loc69, #loc70])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_fscanf_postinc_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printIntLine(!s32i) loc(#loc100)
  cir.func internal private  @badSink(%arg0: !s16i loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc102)
    cir.store %arg0, %0 : !s16i, !cir.ptr<!s16i> loc(#loc7)
    cir.scope {
      %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc104)
      %2 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc12)
      %3 = cir.unary(inc, %2) : !s16i, !s16i loc(#loc13)
      cir.store %3, %0 : !s16i, !cir.ptr<!s16i> loc(#loc105)
      %4 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc11)
      cir.store %4, %1 : !s16i, !cir.ptr<!s16i> loc(#loc104)
      %5 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc14)
      %6 = cir.cast(integral, %5 : !s16i), !s32i loc(#loc14)
      cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc15)
    } loc(#loc103)
    cir.return loc(#loc4)
  } loc(#loc101)
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc106)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc107)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%hd\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc20)
  cir.func no_proto  @CWE190_Integer_Overflow__short_fscanf_postinc_44_bad() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc109)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s16i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s16i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc110)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!s16i)>> loc(#loc26)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s16i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s16i)>>> loc(#loc110)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc27)
    %4 = cir.cast(integral, %3 : !s32i), !s16i loc(#loc27)
    cir.store %4, %0 : !s16i, !cir.ptr<!s16i> loc(#loc111)
    %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc29)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc107)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc30)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc20)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc20)
    %10 = cir.call @__isoc99_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s16i>) -> !s32i loc(#loc29)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s16i)>>>, !cir.ptr<!cir.func<!void (!s16i)>> loc(#loc31)
    %12 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc32)
    cir.call %11(%12) : (!cir.ptr<!cir.func<!void (!s16i)>>, !s16i) -> () loc(#loc31)
    cir.return loc(#loc22)
  } loc(#loc108)
  cir.func no_proto  @CWE190_Integer_Overflow__short_fscanf_postinc_44_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc113)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc35)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc114)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc37)
    cir.return loc(#loc34)
  } loc(#loc112)
  cir.func internal private  @goodG2BSink(%arg0: !s16i loc(fused[#loc41, #loc42])) extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc116)
    cir.store %arg0, %0 : !s16i, !cir.ptr<!s16i> loc(#loc43)
    cir.scope {
      %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc118)
      %2 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc48)
      %3 = cir.unary(inc, %2) : !s16i, !s16i loc(#loc49)
      cir.store %3, %0 : !s16i, !cir.ptr<!s16i> loc(#loc119)
      %4 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc47)
      cir.store %4, %1 : !s16i, !cir.ptr<!s16i> loc(#loc118)
      %5 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc50)
      %6 = cir.cast(integral, %5 : !s16i), !s32i loc(#loc50)
      cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc51)
    } loc(#loc117)
    cir.return loc(#loc40)
  } loc(#loc115)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc121)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s16i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s16i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc122)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!s16i)>> loc(#loc57)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s16i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s16i)>>> loc(#loc122)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc58)
    %4 = cir.cast(integral, %3 : !s32i), !s16i loc(#loc58)
    cir.store %4, %0 : !s16i, !cir.ptr<!s16i> loc(#loc123)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc60)
    %6 = cir.cast(integral, %5 : !s32i), !s16i loc(#loc60)
    cir.store %6, %0 : !s16i, !cir.ptr<!s16i> loc(#loc124)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s16i)>>>, !cir.ptr<!cir.func<!void (!s16i)>> loc(#loc62)
    %8 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc63)
    cir.call %7(%8) : (!cir.ptr<!cir.func<!void (!s16i)>>, !s16i) -> () loc(#loc62)
    cir.return loc(#loc53)
  } loc(#loc120)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc125)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc66)
  cir.func internal private  @goodB2GSink(%arg0: !s16i loc(fused[#loc69, #loc70])) extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc127)
    cir.store %arg0, %0 : !s16i, !cir.ptr<!s16i> loc(#loc71)
    cir.scope {
      %1 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc74)
      %2 = cir.cast(integral, %1 : !s16i), !s32i loc(#loc74)
      %3 = cir.const #cir.int<32767> : !s32i loc(#loc75)
      %4 = cir.cmp(lt, %2, %3) : !s32i, !s32i loc(#loc129)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc76)
      cir.if %5 {
        %6 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc131)
        %7 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc82)
        %8 = cir.unary(inc, %7) : !s16i, !s16i loc(#loc83)
        cir.store %8, %0 : !s16i, !cir.ptr<!s16i> loc(#loc132)
        %9 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc81)
        cir.store %9, %6 : !s16i, !cir.ptr<!s16i> loc(#loc131)
        %10 = cir.load %6 : !cir.ptr<!s16i>, !s16i loc(#loc84)
        %11 = cir.cast(integral, %10 : !s16i), !s32i loc(#loc84)
        cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc85)
      } else {
        %6 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc66)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc66)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc86)
      } loc(#loc130)
    } loc(#loc128)
    cir.return loc(#loc68)
  } loc(#loc126)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc134)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s16i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s16i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc135)
    %2 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void (!s16i)>> loc(#loc92)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s16i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s16i)>>> loc(#loc135)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc93)
    %4 = cir.cast(integral, %3 : !s32i), !s16i loc(#loc93)
    cir.store %4, %0 : !s16i, !cir.ptr<!s16i> loc(#loc136)
    %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc95)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc107)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc96)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc97)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc97)
    %10 = cir.call @__isoc99_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s16i>) -> !s32i loc(#loc95)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s16i)>>>, !cir.ptr<!cir.func<!void (!s16i)>> loc(#loc98)
    %12 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc99)
    cir.call %11(%12) : (!cir.ptr<!cir.func<!void (!s16i)>>, !s16i) -> () loc(#loc98)
    cir.return loc(#loc88)
  } loc(#loc133)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_fscanf_postinc_44.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":22:1)
#loc4 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":30:1)
#loc7 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":23:1)
#loc8 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":24:5)
#loc9 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":29:5)
#loc10 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":27:9)
#loc11 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":27:24)
#loc12 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":26:13)
#loc13 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":26:9)
#loc14 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":28:22)
#loc15 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":28:9)
#loc16 = loc("/usr/include/stdio.h":463:1)
#loc17 = loc("/usr/include/stdio.h":465:33)
#loc18 = loc("/usr/include/stdio.h":149:1)
#loc19 = loc("/usr/include/stdio.h":149:14)
#loc20 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":39:20)
#loc21 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":32:1)
#loc22 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":42:1)
#loc23 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":34:5)
#loc24 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":34:11)
#loc25 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":36:5)
#loc26 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":36:31)
#loc27 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":37:12)
#loc28 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":37:5)
#loc29 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":39:5)
#loc30 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":39:13)
#loc31 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":41:5)
#loc32 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":41:13)
#loc33 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":95:1)
#loc34 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":99:1)
#loc35 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":97:5)
#loc36 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":97:13)
#loc37 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":98:5)
#loc38 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":98:13)
#loc39 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":49:1)
#loc40 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":57:1)
#loc43 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":50:1)
#loc44 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":51:5)
#loc45 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":56:5)
#loc46 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":54:9)
#loc47 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":54:24)
#loc48 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":53:13)
#loc49 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":53:9)
#loc50 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":55:22)
#loc51 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":55:9)
#loc52 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":59:1)
#loc53 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":67:1)
#loc54 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":61:5)
#loc55 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":61:11)
#loc56 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":62:5)
#loc57 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":62:31)
#loc58 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":63:12)
#loc59 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":63:5)
#loc60 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":65:12)
#loc61 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":65:5)
#loc62 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":66:5)
#loc63 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":66:13)
#loc64 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc65 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc66 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":81:19)
#loc67 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":70:1)
#loc68 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":83:1)
#loc71 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":71:1)
#loc72 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":73:5)
#loc73 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":82:5)
#loc74 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":73:9)
#loc75 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":73:16)
#loc76 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":73:14)
#loc77 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":74:5)
#loc78 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":78:5)
#loc79 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":80:5)
#loc80 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":76:9)
#loc81 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":76:24)
#loc82 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":75:13)
#loc83 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":75:9)
#loc84 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":77:22)
#loc85 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":77:9)
#loc86 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":81:9)
#loc87 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":85:1)
#loc88 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":93:1)
#loc89 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":87:5)
#loc90 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":87:11)
#loc91 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":88:5)
#loc92 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":88:31)
#loc93 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":89:12)
#loc94 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":89:5)
#loc95 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":91:5)
#loc96 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":91:13)
#loc97 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":91:20)
#loc98 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":92:5)
#loc99 = loc("CWE190_Integer_Overflow__short_fscanf_postinc_44.c":92:13)
#loc100 = loc(fused[#loc1, #loc2])
#loc101 = loc(fused[#loc3, #loc4])
#loc103 = loc(fused[#loc8, #loc9])
#loc104 = loc(fused[#loc10, #loc11])
#loc105 = loc(fused[#loc13, #loc12])
#loc106 = loc(fused[#loc16, #loc17])
#loc107 = loc(fused[#loc18, #loc19])
#loc108 = loc(fused[#loc21, #loc22])
#loc109 = loc(fused[#loc23, #loc24])
#loc110 = loc(fused[#loc25, #loc26])
#loc111 = loc(fused[#loc28, #loc27])
#loc112 = loc(fused[#loc33, #loc34])
#loc113 = loc(fused[#loc35, #loc36])
#loc114 = loc(fused[#loc37, #loc38])
#loc115 = loc(fused[#loc39, #loc40])
#loc117 = loc(fused[#loc44, #loc45])
#loc118 = loc(fused[#loc46, #loc47])
#loc119 = loc(fused[#loc49, #loc48])
#loc120 = loc(fused[#loc52, #loc53])
#loc121 = loc(fused[#loc54, #loc55])
#loc122 = loc(fused[#loc56, #loc57])
#loc123 = loc(fused[#loc59, #loc58])
#loc124 = loc(fused[#loc61, #loc60])
#loc125 = loc(fused[#loc64, #loc65])
#loc126 = loc(fused[#loc67, #loc68])
#loc128 = loc(fused[#loc72, #loc73])
#loc129 = loc(fused[#loc74, #loc75])
#loc130 = loc(fused[#loc77, #loc78, #loc79, #loc73])
#loc131 = loc(fused[#loc80, #loc81])
#loc132 = loc(fused[#loc83, #loc82])
#loc133 = loc(fused[#loc87, #loc88])
#loc134 = loc(fused[#loc89, #loc90])
#loc135 = loc(fused[#loc91, #loc92])
#loc136 = loc(fused[#loc94, #loc93])
