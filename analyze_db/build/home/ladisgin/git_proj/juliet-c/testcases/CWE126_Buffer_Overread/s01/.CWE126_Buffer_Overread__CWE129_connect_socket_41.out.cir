!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc21 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":44:21)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":44:25)
#loc153 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":254:10)
#loc154 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":254:14)
#loc155 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":254:20)
#loc156 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":254:32)
#loc174 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":159:25)
#loc175 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":159:29)
#loc291 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":130:25)
#loc292 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":130:29)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc330 = loc(fused[#loc21, #loc22])
#loc378 = loc(fused[#loc153, #loc154])
#loc379 = loc(fused[#loc155, #loc156])
#loc384 = loc(fused[#loc174, #loc175])
#loc427 = loc(fused[#loc291, #loc292])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_connect_socket_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc321)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc322)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc323)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc324)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc325)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc326)
  cir.func private @close(!s32i) -> !s32i loc(#loc327)
  cir.func private @printIntLine(!s32i) loc(#loc328)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc18)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc21, #loc22])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc330)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc23)
    cir.scope {
      %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc332)
      %2 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc332)
      cir.store %2, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc332)
      cir.scope {
        %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc30)
        %4 = cir.const #cir.int<0> : !s32i loc(#loc31)
        %5 = cir.cmp(ge, %3, %4) : !s32i, !cir.bool loc(#loc334)
        cir.if %5 {
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc35)
          %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc36)
          %8 = cir.ptr_stride(%7 : !cir.ptr<!s32i>, %6 : !s32i), !cir.ptr<!s32i> loc(#loc36)
          %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc36)
          cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc37)
        } else {
          %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc18)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc18)
          cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc38)
        } loc(#loc335)
      } loc(#loc333)
    } loc(#loc331)
    cir.return loc(#loc20)
  } loc(#loc329)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_connect_socket_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc337)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc44)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc338)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc340)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc341)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc342)
      %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc343)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc53)
      %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc53)
      cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc342)
      cir.scope {
        cir.do {
          %10 = cir.const #cir.int<2> : !s32i loc(#loc58)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc59)
          %12 = cir.const #cir.int<6> : !s32i loc(#loc60)
          %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc61)
          cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc345)
          cir.scope {
            %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc66)
            %53 = cir.const #cir.int<1> : !s32i loc(#loc67)
            %54 = cir.unary(minus, %53) : !s32i, !s32i loc(#loc67)
            %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc347)
            cir.if %55 {
              cir.break loc(#loc69)
            } loc(#loc348)
          } loc(#loc346)
          %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc349)
          %15 = cir.const #cir.int<0> : !s32i loc(#loc72)
          %16 = cir.const #cir.int<16> : !u64i loc(#loc350)
          cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc351)
          %17 = cir.const #cir.int<2> : !s32i loc(#loc77)
          %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc77)
          %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
          cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc352)
          %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
          %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc80)
          %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc81)
          %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc82)
          cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc353)
          %25 = cir.const #cir.int<27015> : !s32i loc(#loc85)
          %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc85)
          %27 = cir.call @htons(%26) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc86)
          %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc87)
          cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc354)
          cir.scope {
            %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc92)
            %53 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc356)
            %54 = cir.const #cir.int<16> : !u64i loc(#loc357)
            %55 = cir.cast(integral, %54 : !u64i), !u32i loc(#loc357)
            %56 = cir.call @connect(%52, %53, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc97)
            %57 = cir.const #cir.int<1> : !s32i loc(#loc98)
            %58 = cir.unary(minus, %57) : !s32i, !s32i loc(#loc98)
            %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc358)
            cir.if %59 {
              cir.break loc(#loc100)
            } loc(#loc359)
          } loc(#loc355)
          %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc101)
          %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc102)
          %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc102)
          %32 = cir.const #cir.int<3> : !s32i loc(#loc103)
          %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc103)
          %34 = cir.const #cir.int<4> : !u64i loc(#loc103)
          %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc103)
          %36 = cir.const #cir.int<2> : !s32i loc(#loc103)
          %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc103)
          %38 = cir.binop(add, %35, %37) : !u64i loc(#loc103)
          %39 = cir.const #cir.int<1> : !s32i loc(#loc104)
          %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc104)
          %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc360)
          %42 = cir.const #cir.int<0> : !s32i loc(#loc105)
          %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc106)
          %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc106)
          cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc361)
          cir.scope {
            %52 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc111)
            %53 = cir.const #cir.int<1> : !s32i loc(#loc112)
            %54 = cir.unary(minus, %53) : !s32i, !s32i loc(#loc112)
            %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc363)
            %56 = cir.ternary(%55, true {
              %57 = cir.const #true loc(#loc113)
              cir.yield %57 : !cir.bool loc(#loc113)
            }, false {
              %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc114)
              %58 = cir.const #cir.int<0> : !s32i loc(#loc115)
              %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc364)
              %60 = cir.ternary(%59, true {
                %61 = cir.const #true loc(#loc113)
                cir.yield %61 : !cir.bool loc(#loc113)
              }, false {
                %61 = cir.const #false loc(#loc113)
                cir.yield %61 : !cir.bool loc(#loc113)
              }) : (!cir.bool) -> !cir.bool loc(#loc113)
              cir.yield %60 : !cir.bool loc(#loc113)
            }) : (!cir.bool) -> !cir.bool loc(#loc113)
            cir.if %56 {
              cir.break loc(#loc117)
            } loc(#loc365)
          } loc(#loc362)
          %45 = cir.const #cir.int<0> : !s32i loc(#loc118)
          %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc118)
          %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc119)
          %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc120)
          %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc120)
          cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc366)
          %50 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc121)
          %51 = cir.call @atoi(%50) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc122)
          cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc367)
          cir.yield loc(#loc57)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc125)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc125)
          cir.condition(%11) loc(#loc125)
        } loc(#loc344)
      } loc(#loc344)
      cir.scope {
        %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc128)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc129)
        %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc129)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc369)
        cir.if %13 {
          %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc131)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc132)
        } loc(#loc370)
      } loc(#loc368)
    } loc(#loc339)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    cir.call @badSink(%3) : (!s32i) -> () loc(#loc134)
    cir.return loc(#loc40)
  } loc(#loc336)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_connect_socket_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc372)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc137)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc373)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc139)
    cir.return loc(#loc136)
  } loc(#loc371)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc374)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc375)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc376)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc147)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc148)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc149)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc150)
  cir.func @main(%arg0: !s32i loc(fused[#loc153, #loc154]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc155, #loc156])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc378)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc379)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc152)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc157)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc157)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc158)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc159)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc159)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc160)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc147)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc147)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc161)
    %8 = cir.get_global @CWE126_Buffer_Overread__CWE129_connect_socket_41_good : !cir.ptr<!cir.func<!void ()>> loc(#loc380)
    cir.call @CWE126_Buffer_Overread__CWE129_connect_socket_41_good() : () -> () loc(#loc162)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc148)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc148)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc164)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc149)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc149)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc165)
    %13 = cir.get_global @CWE126_Buffer_Overread__CWE129_connect_socket_41_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc381)
    cir.call @CWE126_Buffer_Overread__CWE129_connect_socket_41_bad() : () -> () loc(#loc166)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc150)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc150)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc168)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc169)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc382)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc382)
    cir.return %17 : !s32i loc(#loc382)
  } loc(#loc377)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc171)
  cir.func internal private @goodB2GSink(%arg0: !s32i loc(fused[#loc174, #loc175])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc384)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc176)
    cir.scope {
      %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc386)
      %2 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc386)
      cir.store %2, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc386)
      cir.scope {
        %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc183)
        %4 = cir.const #cir.int<0> : !s32i loc(#loc184)
        %5 = cir.cmp(ge, %3, %4) : !s32i, !cir.bool loc(#loc388)
        %6 = cir.ternary(%5, true {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc186)
          %8 = cir.const #cir.int<10> : !s32i loc(#loc187)
          %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc389)
          %10 = cir.ternary(%9, true {
            %11 = cir.const #true loc(#loc185)
            cir.yield %11 : !cir.bool loc(#loc185)
          }, false {
            %11 = cir.const #false loc(#loc185)
            cir.yield %11 : !cir.bool loc(#loc185)
          }) : (!cir.bool) -> !cir.bool loc(#loc185)
          cir.yield %10 : !cir.bool loc(#loc185)
        }, false {
          %7 = cir.const #false loc(#loc185)
          cir.yield %7 : !cir.bool loc(#loc185)
        }) : (!cir.bool) -> !cir.bool loc(#loc185)
        cir.if %6 {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc192)
          %8 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc193)
          %9 = cir.ptr_stride(%8 : !cir.ptr<!s32i>, %7 : !s32i), !cir.ptr<!s32i> loc(#loc193)
          %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc193)
          cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc194)
        } else {
          %7 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc171)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc171)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc195)
        } loc(#loc390)
      } loc(#loc387)
    } loc(#loc385)
    cir.return loc(#loc173)
  } loc(#loc383)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc392)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc200)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc201)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc393)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc395)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc396)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc397)
      %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc398)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc210)
      %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc210)
      cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc397)
      cir.scope {
        cir.do {
          %10 = cir.const #cir.int<2> : !s32i loc(#loc215)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc216)
          %12 = cir.const #cir.int<6> : !s32i loc(#loc217)
          %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc218)
          cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc400)
          cir.scope {
            %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc223)
            %53 = cir.const #cir.int<1> : !s32i loc(#loc224)
            %54 = cir.unary(minus, %53) : !s32i, !s32i loc(#loc224)
            %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc402)
            cir.if %55 {
              cir.break loc(#loc226)
            } loc(#loc403)
          } loc(#loc401)
          %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc404)
          %15 = cir.const #cir.int<0> : !s32i loc(#loc229)
          %16 = cir.const #cir.int<16> : !u64i loc(#loc405)
          cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc406)
          %17 = cir.const #cir.int<2> : !s32i loc(#loc234)
          %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc234)
          %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
          cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc407)
          %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc236)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc236)
          %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc237)
          %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc81)
          %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc82)
          cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc408)
          %25 = cir.const #cir.int<27015> : !s32i loc(#loc240)
          %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc240)
          %27 = cir.call @htons(%26) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc241)
          %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc87)
          cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc409)
          cir.scope {
            %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc246)
            %53 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc411)
            %54 = cir.const #cir.int<16> : !u64i loc(#loc412)
            %55 = cir.cast(integral, %54 : !u64i), !u32i loc(#loc412)
            %56 = cir.call @connect(%52, %53, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc251)
            %57 = cir.const #cir.int<1> : !s32i loc(#loc252)
            %58 = cir.unary(minus, %57) : !s32i, !s32i loc(#loc252)
            %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc413)
            cir.if %59 {
              cir.break loc(#loc254)
            } loc(#loc414)
          } loc(#loc410)
          %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc255)
          %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc256)
          %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc256)
          %32 = cir.const #cir.int<3> : !s32i loc(#loc257)
          %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc257)
          %34 = cir.const #cir.int<4> : !u64i loc(#loc257)
          %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc257)
          %36 = cir.const #cir.int<2> : !s32i loc(#loc257)
          %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc257)
          %38 = cir.binop(add, %35, %37) : !u64i loc(#loc257)
          %39 = cir.const #cir.int<1> : !s32i loc(#loc258)
          %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc258)
          %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc415)
          %42 = cir.const #cir.int<0> : !s32i loc(#loc259)
          %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc260)
          %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc260)
          cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc416)
          cir.scope {
            %52 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc265)
            %53 = cir.const #cir.int<1> : !s32i loc(#loc266)
            %54 = cir.unary(minus, %53) : !s32i, !s32i loc(#loc266)
            %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc418)
            %56 = cir.ternary(%55, true {
              %57 = cir.const #true loc(#loc267)
              cir.yield %57 : !cir.bool loc(#loc267)
            }, false {
              %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc268)
              %58 = cir.const #cir.int<0> : !s32i loc(#loc269)
              %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc419)
              %60 = cir.ternary(%59, true {
                %61 = cir.const #true loc(#loc267)
                cir.yield %61 : !cir.bool loc(#loc267)
              }, false {
                %61 = cir.const #false loc(#loc267)
                cir.yield %61 : !cir.bool loc(#loc267)
              }) : (!cir.bool) -> !cir.bool loc(#loc267)
              cir.yield %60 : !cir.bool loc(#loc267)
            }) : (!cir.bool) -> !cir.bool loc(#loc267)
            cir.if %56 {
              cir.break loc(#loc271)
            } loc(#loc420)
          } loc(#loc417)
          %45 = cir.const #cir.int<0> : !s32i loc(#loc272)
          %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc272)
          %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc273)
          %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc274)
          %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc274)
          cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc421)
          %50 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc275)
          %51 = cir.call @atoi(%50) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc276)
          cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc422)
          cir.yield loc(#loc214)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc279)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc279)
          cir.condition(%11) loc(#loc279)
        } loc(#loc399)
      } loc(#loc399)
      cir.scope {
        %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc282)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc283)
        %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc283)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc424)
        cir.if %13 {
          %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc285)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc286)
        } loc(#loc425)
      } loc(#loc423)
    } loc(#loc394)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc287)
    cir.call @goodB2GSink(%3) : (!s32i) -> () loc(#loc288)
    cir.return loc(#loc197)
  } loc(#loc391)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc291, #loc292])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc427)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc293)
    cir.scope {
      %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc429)
      %2 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc429)
      cir.store %2, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc429)
      cir.scope {
        %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc300)
        %4 = cir.const #cir.int<0> : !s32i loc(#loc301)
        %5 = cir.cmp(ge, %3, %4) : !s32i, !cir.bool loc(#loc431)
        cir.if %5 {
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc305)
          %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc306)
          %8 = cir.ptr_stride(%7 : !cir.ptr<!s32i>, %6 : !s32i), !cir.ptr<!s32i> loc(#loc306)
          %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc306)
          cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc307)
        } else {
          %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc308)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc308)
          cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc309)
        } loc(#loc432)
      } loc(#loc430)
    } loc(#loc428)
    cir.return loc(#loc290)
  } loc(#loc426)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc434)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc314)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc315)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc435)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc317)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc436)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc319)
    cir.call @goodG2BSink(%4) : (!s32i) -> () loc(#loc320)
    cir.return loc(#loc311)
  } loc(#loc433)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_connect_socket_41.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":92:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":56:23)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":44:1)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":59:1)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":45:1)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":46:5)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":58:5)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":47:9)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":47:30)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":50:9)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":57:9)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":50:13)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":50:21)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":51:9)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":53:9)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":55:9)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":52:33)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":52:26)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":52:13)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":56:13)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":61:1)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":123:1)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":63:5)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":63:9)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":65:13)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":65:12)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":65:5)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":66:5)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":121:5)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":71:9)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":71:13)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":72:9)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":72:28)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":73:9)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":73:32)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":74:9)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":74:41)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":75:9)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":110:17)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":85:36)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":85:45)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":85:58)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":85:29)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":85:13)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":85:69)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":86:13)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":89:13)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":86:17)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":86:34)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":87:13)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":88:17)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":90:20)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":90:21)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":90:30)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":90:33)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":90:47)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":90:13)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":90:48)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":91:34)
#loc78 = loc("/usr/include/netinet/in.h":249:5)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":91:13)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":92:39)
#loc81 = loc("/usr/include/netinet/in.h":251:20)
#loc82 = loc("/usr/include/netinet/in.h":33:15)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":92:13)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":92:59)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":93:38)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":93:32)
#loc87 = loc("/usr/include/netinet/in.h":250:15)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":93:13)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":93:46)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":94:13)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":97:13)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":94:25)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":94:58)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":94:59)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":94:68)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":94:82)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":94:17)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":94:88)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":95:13)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":96:17)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":100:31)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":100:46)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":100:59)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":100:77)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":100:80)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":100:26)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":100:13)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":100:81)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":101:13)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":104:13)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":101:17)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":101:31)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":101:44)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":101:47)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":101:61)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":102:13)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":103:17)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":106:39)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":106:25)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":106:13)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":108:25)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":108:20)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":108:13)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":108:36)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":110:16)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":111:9)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":114:9)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":111:13)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":111:30)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":112:9)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":113:26)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":113:13)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":122:13)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":122:5)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":239:1)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":243:1)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":241:5)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":241:13)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":242:5)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":242:13)
#loc141 = loc("/usr/include/stdlib.h":575:1)
#loc142 = loc("/usr/include/stdlib.h":575:41)
#loc143 = loc("/usr/include/time.h":76:1)
#loc144 = loc("/usr/include/time.h":76:38)
#loc145 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc146 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":259:15)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":261:15)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":264:15)
#loc150 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":266:15)
#loc151 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":254:1)
#loc152 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":269:1)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":255:1)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":257:27)
#loc159 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":257:22)
#loc160 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":257:5)
#loc161 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":259:5)
#loc162 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":260:5)
#loc163 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":260:59)
#loc164 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":261:5)
#loc165 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":264:5)
#loc166 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":265:5)
#loc167 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":265:58)
#loc168 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":266:5)
#loc169 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":268:12)
#loc170 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":268:5)
#loc171 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":170:23)
#loc172 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":159:1)
#loc173 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":173:1)
#loc176 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":160:1)
#loc177 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":161:5)
#loc178 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":172:5)
#loc179 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":162:9)
#loc180 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":162:30)
#loc181 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":164:9)
#loc182 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":171:9)
#loc183 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":164:13)
#loc184 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":164:21)
#loc185 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":164:23)
#loc186 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":164:26)
#loc187 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":164:34)
#loc188 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":164:36)
#loc189 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":165:9)
#loc190 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":167:9)
#loc191 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":169:9)
#loc192 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":166:33)
#loc193 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":166:26)
#loc194 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":166:13)
#loc195 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":170:13)
#loc196 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":175:1)
#loc197 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":237:1)
#loc198 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":177:5)
#loc199 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":177:9)
#loc200 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":179:13)
#loc201 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":179:12)
#loc202 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":179:5)
#loc203 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":180:5)
#loc204 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":235:5)
#loc205 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":185:9)
#loc206 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":185:13)
#loc207 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":186:9)
#loc208 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":186:28)
#loc209 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":187:9)
#loc210 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":187:32)
#loc211 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":188:9)
#loc212 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":188:41)
#loc213 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":189:9)
#loc214 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":224:17)
#loc215 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":199:36)
#loc216 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":199:45)
#loc217 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":199:58)
#loc218 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":199:29)
#loc219 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":199:13)
#loc220 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":199:69)
#loc221 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":200:13)
#loc222 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":203:13)
#loc223 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":200:17)
#loc224 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":200:34)
#loc225 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":201:13)
#loc226 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":202:17)
#loc227 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":204:20)
#loc228 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":204:21)
#loc229 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":204:30)
#loc230 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":204:33)
#loc231 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":204:47)
#loc232 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":204:13)
#loc233 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":204:48)
#loc234 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":205:34)
#loc235 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":205:13)
#loc236 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":206:49)
#loc237 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":206:39)
#loc238 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":206:13)
#loc239 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":206:59)
#loc240 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":207:38)
#loc241 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":207:32)
#loc242 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":207:13)
#loc243 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":207:46)
#loc244 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":208:13)
#loc245 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":211:13)
#loc246 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":208:25)
#loc247 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":208:58)
#loc248 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":208:59)
#loc249 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":208:68)
#loc250 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":208:82)
#loc251 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":208:17)
#loc252 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":208:88)
#loc253 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":209:13)
#loc254 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":210:17)
#loc255 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":214:31)
#loc256 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":214:46)
#loc257 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":214:59)
#loc258 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":214:77)
#loc259 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":214:80)
#loc260 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":214:26)
#loc261 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":214:13)
#loc262 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":214:81)
#loc263 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":215:13)
#loc264 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":218:13)
#loc265 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":215:17)
#loc266 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":215:31)
#loc267 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":215:44)
#loc268 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":215:47)
#loc269 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":215:61)
#loc270 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":216:13)
#loc271 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":217:17)
#loc272 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":220:39)
#loc273 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":220:25)
#loc274 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":220:13)
#loc275 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":222:25)
#loc276 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":222:20)
#loc277 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":222:13)
#loc278 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":222:36)
#loc279 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":224:16)
#loc280 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":225:9)
#loc281 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":228:9)
#loc282 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":225:13)
#loc283 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":225:30)
#loc284 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":226:9)
#loc285 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":227:26)
#loc286 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":227:13)
#loc287 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":236:17)
#loc288 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":236:5)
#loc289 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":130:1)
#loc290 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":145:1)
#loc293 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":131:1)
#loc294 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":132:5)
#loc295 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":144:5)
#loc296 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":133:9)
#loc297 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":133:30)
#loc298 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":136:9)
#loc299 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":143:9)
#loc300 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":136:13)
#loc301 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":136:21)
#loc302 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":137:9)
#loc303 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":139:9)
#loc304 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":141:9)
#loc305 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":138:33)
#loc306 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":138:26)
#loc307 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":138:13)
#loc308 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":142:23)
#loc309 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":142:13)
#loc310 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":147:1)
#loc311 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":156:1)
#loc312 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":149:5)
#loc313 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":149:9)
#loc314 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":151:13)
#loc315 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":151:12)
#loc316 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":151:5)
#loc317 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":154:12)
#loc318 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":154:5)
#loc319 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":155:17)
#loc320 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":155:5)
#loc321 = loc(fused[#loc1, #loc2])
#loc322 = loc(fused[#loc3, #loc4])
#loc323 = loc(fused[#loc6, #loc7])
#loc324 = loc(fused[#loc8, #loc9])
#loc325 = loc(fused[#loc10, #loc11])
#loc326 = loc(fused[#loc12, #loc13])
#loc327 = loc(fused[#loc14, #loc15])
#loc328 = loc(fused[#loc16, #loc17])
#loc329 = loc(fused[#loc19, #loc20])
#loc331 = loc(fused[#loc24, #loc25])
#loc332 = loc(fused[#loc26, #loc27])
#loc333 = loc(fused[#loc28, #loc29])
#loc334 = loc(fused[#loc30, #loc31])
#loc335 = loc(fused[#loc32, #loc33, #loc34, #loc29])
#loc336 = loc(fused[#loc39, #loc40])
#loc337 = loc(fused[#loc41, #loc42])
#loc338 = loc(fused[#loc45, #loc43])
#loc339 = loc(fused[#loc46, #loc47])
#loc340 = loc(fused[#loc48, #loc49])
#loc341 = loc(fused[#loc50, #loc51])
#loc342 = loc(fused[#loc52, #loc53])
#loc343 = loc(fused[#loc54, #loc55])
#loc344 = loc(fused[#loc56, #loc57])
#loc345 = loc(fused[#loc62, #loc63])
#loc346 = loc(fused[#loc64, #loc65])
#loc347 = loc(fused[#loc66, #loc67])
#loc348 = loc(fused[#loc68, #loc65])
#loc349 = loc(fused[#loc70, #loc71])
#loc350 = loc(fused[#loc73, #loc74])
#loc351 = loc(fused[#loc75, #loc76])
#loc352 = loc(fused[#loc79, #loc77])
#loc353 = loc(fused[#loc83, #loc84])
#loc354 = loc(fused[#loc88, #loc89])
#loc355 = loc(fused[#loc90, #loc91])
#loc356 = loc(fused[#loc93, #loc94])
#loc357 = loc(fused[#loc95, #loc96])
#loc358 = loc(fused[#loc97, #loc98])
#loc359 = loc(fused[#loc99, #loc91])
#loc360 = loc(fused[#loc103, #loc104])
#loc361 = loc(fused[#loc107, #loc108])
#loc362 = loc(fused[#loc109, #loc110])
#loc363 = loc(fused[#loc111, #loc112])
#loc364 = loc(fused[#loc114, #loc115])
#loc365 = loc(fused[#loc116, #loc110])
#loc366 = loc(fused[#loc120, #loc118])
#loc367 = loc(fused[#loc123, #loc124])
#loc368 = loc(fused[#loc126, #loc127])
#loc369 = loc(fused[#loc128, #loc129])
#loc370 = loc(fused[#loc130, #loc127])
#loc371 = loc(fused[#loc135, #loc136])
#loc372 = loc(fused[#loc137, #loc138])
#loc373 = loc(fused[#loc139, #loc140])
#loc374 = loc(fused[#loc141, #loc142])
#loc375 = loc(fused[#loc143, #loc144])
#loc376 = loc(fused[#loc145, #loc146])
#loc377 = loc(fused[#loc151, #loc152])
#loc380 = loc(fused[#loc162, #loc163])
#loc381 = loc(fused[#loc166, #loc167])
#loc382 = loc(fused[#loc170, #loc169])
#loc383 = loc(fused[#loc172, #loc173])
#loc385 = loc(fused[#loc177, #loc178])
#loc386 = loc(fused[#loc179, #loc180])
#loc387 = loc(fused[#loc181, #loc182])
#loc388 = loc(fused[#loc183, #loc184])
#loc389 = loc(fused[#loc186, #loc188])
#loc390 = loc(fused[#loc189, #loc190, #loc191, #loc182])
#loc391 = loc(fused[#loc196, #loc197])
#loc392 = loc(fused[#loc198, #loc199])
#loc393 = loc(fused[#loc202, #loc200])
#loc394 = loc(fused[#loc203, #loc204])
#loc395 = loc(fused[#loc205, #loc206])
#loc396 = loc(fused[#loc207, #loc208])
#loc397 = loc(fused[#loc209, #loc210])
#loc398 = loc(fused[#loc211, #loc212])
#loc399 = loc(fused[#loc213, #loc214])
#loc400 = loc(fused[#loc219, #loc220])
#loc401 = loc(fused[#loc221, #loc222])
#loc402 = loc(fused[#loc223, #loc224])
#loc403 = loc(fused[#loc225, #loc222])
#loc404 = loc(fused[#loc227, #loc228])
#loc405 = loc(fused[#loc230, #loc231])
#loc406 = loc(fused[#loc232, #loc233])
#loc407 = loc(fused[#loc235, #loc234])
#loc408 = loc(fused[#loc238, #loc239])
#loc409 = loc(fused[#loc242, #loc243])
#loc410 = loc(fused[#loc244, #loc245])
#loc411 = loc(fused[#loc247, #loc248])
#loc412 = loc(fused[#loc249, #loc250])
#loc413 = loc(fused[#loc251, #loc252])
#loc414 = loc(fused[#loc253, #loc245])
#loc415 = loc(fused[#loc257, #loc258])
#loc416 = loc(fused[#loc261, #loc262])
#loc417 = loc(fused[#loc263, #loc264])
#loc418 = loc(fused[#loc265, #loc266])
#loc419 = loc(fused[#loc268, #loc269])
#loc420 = loc(fused[#loc270, #loc264])
#loc421 = loc(fused[#loc274, #loc272])
#loc422 = loc(fused[#loc277, #loc278])
#loc423 = loc(fused[#loc280, #loc281])
#loc424 = loc(fused[#loc282, #loc283])
#loc425 = loc(fused[#loc284, #loc281])
#loc426 = loc(fused[#loc289, #loc290])
#loc428 = loc(fused[#loc294, #loc295])
#loc429 = loc(fused[#loc296, #loc297])
#loc430 = loc(fused[#loc298, #loc299])
#loc431 = loc(fused[#loc300, #loc301])
#loc432 = loc(fused[#loc302, #loc303, #loc304, #loc299])
#loc433 = loc(fused[#loc310, #loc311])
#loc434 = loc(fused[#loc312, #loc313])
#loc435 = loc(fused[#loc316, #loc314])
#loc436 = loc(fused[#loc318, #loc317])
