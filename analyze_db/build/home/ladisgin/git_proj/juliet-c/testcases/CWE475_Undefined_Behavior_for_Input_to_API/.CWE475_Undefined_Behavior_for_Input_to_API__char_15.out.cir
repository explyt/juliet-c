!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc54 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":106:10)
#loc55 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":106:14)
#loc56 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":106:20)
#loc57 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":106:32)
#loc156 = loc(fused[#loc54, #loc55])
#loc157 = loc(fused[#loc56, #loc57])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE475_Undefined_Behavior_for_Input_to_API/CWE475_Undefined_Behavior_for_Input_to_API__char_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"abcdefghijklmnopqrstuvwxyz\00" : !cir.array<!s8i x 27>> : !cir.array<!s8i x 27> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc139)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc6)
  cir.func no_proto @CWE475_Undefined_Behavior_for_Input_to_API__char_15_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc11)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc143)
            %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc144)
            %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc143)
            cir.store %3, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc143)
            %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc18)
            cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc144)
            %5 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc19)
            %6 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
            %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 27>> loc(#loc3)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 27>>), !cir.ptr<!s8i> loc(#loc3)
            %9 = cir.call @strcpy(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc19)
            %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
            %11 = cir.const #cir.int<6> : !s32i loc(#loc22)
            %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc23)
            %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc145)
            %14 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
            %15 = cir.const #cir.int<4> : !s32i loc(#loc25)
            %16 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc26)
            %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc146)
            %18 = cir.const #cir.int<10> : !s32i loc(#loc27)
            %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc27)
            %20 = cir.const #cir.int<1> : !u64i loc(#loc147)
            %21 = cir.binop(mul, %19, %20) : !u64i loc(#loc148)
            cir.libc.memcpy %21 bytes from %17 to %13 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc149)
            %22 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
            cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc33)
          } loc(#loc142)
          cir.break loc(#loc34)
        } loc(#loc12)
        cir.case(default, []) {
          %1 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc6)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc6)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc36)
          cir.break loc(#loc37)
        } loc(#loc35)
        cir.yield loc(#loc9)
      } loc(#loc9)
    } loc(#loc141)
    cir.return loc(#loc8)
  } loc(#loc140)
  cir.func no_proto @CWE475_Undefined_Behavior_for_Input_to_API__char_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc151)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc152)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    cir.return loc(#loc39)
  } loc(#loc150)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc153)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc154)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc51)
  cir.func @main(%arg0: !s32i loc(fused[#loc54, #loc55]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc56, #loc57])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc156)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc157)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc53)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc58)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc58)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc59)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc60)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc60)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc61)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc48)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %8 = cir.get_global @CWE475_Undefined_Behavior_for_Input_to_API__char_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc158)
    cir.call @CWE475_Undefined_Behavior_for_Input_to_API__char_15_good() : () -> () loc(#loc63)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc49)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc50)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %13 = cir.get_global @CWE475_Undefined_Behavior_for_Input_to_API__char_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc159)
    cir.call @CWE475_Undefined_Behavior_for_Input_to_API__char_15_bad() : () -> () loc(#loc67)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc51)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc70)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc160)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc160)
    cir.return %17 : !s32i loc(#loc160)
  } loc(#loc155)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc76)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %1 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc78)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc78)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc79)
          cir.break loc(#loc80)
        } loc(#loc77)
        cir.case(default, []) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc164)
            %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc165)
            %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc164)
            cir.store %3, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc164)
            %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc87)
            cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc165)
            %5 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc88)
            %6 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
            %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 27>> loc(#loc90)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 27>>), !cir.ptr<!s8i> loc(#loc90)
            %9 = cir.call @strcpy(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc88)
            %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
            %11 = cir.const #cir.int<6> : !s32i loc(#loc92)
            %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc93)
            %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc166)
            %14 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
            %15 = cir.const #cir.int<4> : !s32i loc(#loc95)
            %16 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc96)
            %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc167)
            %18 = cir.const #cir.int<10> : !s32i loc(#loc97)
            %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc97)
            %20 = cir.const #cir.int<1> : !u64i loc(#loc168)
            %21 = cir.binop(mul, %19, %20) : !u64i loc(#loc169)
            cir.libc.memmove %21 bytes from %17 to %13 : !cir.ptr<!void>, !u64i loc(#loc170)
            %22 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
            cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc103)
          } loc(#loc163)
          cir.break loc(#loc104)
        } loc(#loc81)
        cir.yield loc(#loc74)
      } loc(#loc74)
    } loc(#loc162)
    cir.return loc(#loc73)
  } loc(#loc161)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc109)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc174)
            %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc175)
            %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc174)
            cir.store %3, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc174)
            %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc116)
            cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc175)
            %5 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc117)
            %6 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
            %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 27>> loc(#loc119)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 27>>), !cir.ptr<!s8i> loc(#loc119)
            %9 = cir.call @strcpy(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc117)
            %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
            %11 = cir.const #cir.int<6> : !s32i loc(#loc121)
            %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc122)
            %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc176)
            %14 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
            %15 = cir.const #cir.int<4> : !s32i loc(#loc124)
            %16 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc125)
            %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc177)
            %18 = cir.const #cir.int<10> : !s32i loc(#loc126)
            %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc126)
            %20 = cir.const #cir.int<1> : !u64i loc(#loc178)
            %21 = cir.binop(mul, %19, %20) : !u64i loc(#loc179)
            cir.libc.memmove %21 bytes from %17 to %13 : !cir.ptr<!void>, !u64i loc(#loc180)
            %22 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
            cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc132)
          } loc(#loc173)
          cir.break loc(#loc133)
        } loc(#loc110)
        cir.case(default, []) {
          %1 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc135)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc135)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc136)
          cir.break loc(#loc137)
        } loc(#loc134)
        cir.yield loc(#loc107)
      } loc(#loc107)
    } loc(#loc172)
    cir.return loc(#loc106)
  } loc(#loc171)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE475_Undefined_Behavior_for_Input_to_API/CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":0:0)
#loc1 = loc("/usr/include/string.h":141:1)
#loc2 = loc("/usr/include/string.h":142:14)
#loc3 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":30:22)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":38:19)
#loc7 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":22:1)
#loc8 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":41:1)
#loc9 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":24:5)
#loc10 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":40:5)
#loc11 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":24:12)
#loc12 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":26:5)
#loc13 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":27:5)
#loc14 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":34:5)
#loc15 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":28:9)
#loc16 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":28:32)
#loc17 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":29:9)
#loc18 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":29:23)
#loc19 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":30:9)
#loc20 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":30:16)
#loc21 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":32:16)
#loc22 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":32:23)
#loc23 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":32:21)
#loc24 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":32:26)
#loc25 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":32:33)
#loc26 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":32:31)
#loc27 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":32:36)
#loc28 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":32:39)
#loc29 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":32:50)
#loc30 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":32:9)
#loc31 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":32:51)
#loc32 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":33:19)
#loc33 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":33:9)
#loc34 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":35:5)
#loc35 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":36:5)
#loc36 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":38:9)
#loc37 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":39:9)
#loc38 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":91:1)
#loc39 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":95:1)
#loc40 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":93:5)
#loc41 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":93:11)
#loc42 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":94:5)
#loc43 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":94:11)
#loc44 = loc("/usr/include/stdlib.h":575:1)
#loc45 = loc("/usr/include/stdlib.h":575:41)
#loc46 = loc("/usr/include/time.h":76:1)
#loc47 = loc("/usr/include/time.h":76:38)
#loc48 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":111:15)
#loc49 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":113:15)
#loc50 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":116:15)
#loc51 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":118:15)
#loc52 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":106:1)
#loc53 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":121:1)
#loc58 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":107:1)
#loc59 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":109:27)
#loc60 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":109:22)
#loc61 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":109:5)
#loc62 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":111:5)
#loc63 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":112:5)
#loc64 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":112:62)
#loc65 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":113:5)
#loc66 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":116:5)
#loc67 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":117:5)
#loc68 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":117:61)
#loc69 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":118:5)
#loc70 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":120:12)
#loc71 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":120:5)
#loc72 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":48:1)
#loc73 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":67:1)
#loc74 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":50:5)
#loc75 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":66:5)
#loc76 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":50:12)
#loc77 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":52:5)
#loc78 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":54:19)
#loc79 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":54:9)
#loc80 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":55:9)
#loc81 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":56:5)
#loc82 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":57:5)
#loc83 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":64:5)
#loc84 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":58:9)
#loc85 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":58:32)
#loc86 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":59:9)
#loc87 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":59:23)
#loc88 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":60:9)
#loc89 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":60:16)
#loc90 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":60:22)
#loc91 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":62:17)
#loc92 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":62:24)
#loc93 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":62:22)
#loc94 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":62:27)
#loc95 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":62:34)
#loc96 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":62:32)
#loc97 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":62:37)
#loc98 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":62:40)
#loc99 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":62:51)
#loc100 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":62:9)
#loc101 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":62:52)
#loc102 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":63:19)
#loc103 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":63:9)
#loc104 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":65:5)
#loc105 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":70:1)
#loc106 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":89:1)
#loc107 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":72:5)
#loc108 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":88:5)
#loc109 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":72:12)
#loc110 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":74:5)
#loc111 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":75:5)
#loc112 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":82:5)
#loc113 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":76:9)
#loc114 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":76:32)
#loc115 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":77:9)
#loc116 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":77:23)
#loc117 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":78:9)
#loc118 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":78:16)
#loc119 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":78:22)
#loc120 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":80:17)
#loc121 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":80:24)
#loc122 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":80:22)
#loc123 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":80:27)
#loc124 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":80:34)
#loc125 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":80:32)
#loc126 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":80:37)
#loc127 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":80:40)
#loc128 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":80:51)
#loc129 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":80:9)
#loc130 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":80:52)
#loc131 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":81:19)
#loc132 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":81:9)
#loc133 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":83:5)
#loc134 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":84:5)
#loc135 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":86:19)
#loc136 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":86:9)
#loc137 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_15.c":87:9)
#loc138 = loc(fused[#loc1, #loc2])
#loc139 = loc(fused[#loc4, #loc5])
#loc140 = loc(fused[#loc7, #loc8])
#loc141 = loc(fused[#loc9, #loc10])
#loc142 = loc(fused[#loc13, #loc14])
#loc143 = loc(fused[#loc15, #loc16])
#loc144 = loc(fused[#loc17, #loc18])
#loc145 = loc(fused[#loc21, #loc22])
#loc146 = loc(fused[#loc24, #loc25])
#loc147 = loc(fused[#loc28, #loc29])
#loc148 = loc(fused[#loc27, #loc29])
#loc149 = loc(fused[#loc30, #loc31])
#loc150 = loc(fused[#loc38, #loc39])
#loc151 = loc(fused[#loc40, #loc41])
#loc152 = loc(fused[#loc42, #loc43])
#loc153 = loc(fused[#loc44, #loc45])
#loc154 = loc(fused[#loc46, #loc47])
#loc155 = loc(fused[#loc52, #loc53])
#loc158 = loc(fused[#loc63, #loc64])
#loc159 = loc(fused[#loc67, #loc68])
#loc160 = loc(fused[#loc71, #loc70])
#loc161 = loc(fused[#loc72, #loc73])
#loc162 = loc(fused[#loc74, #loc75])
#loc163 = loc(fused[#loc82, #loc83])
#loc164 = loc(fused[#loc84, #loc85])
#loc165 = loc(fused[#loc86, #loc87])
#loc166 = loc(fused[#loc91, #loc92])
#loc167 = loc(fused[#loc94, #loc95])
#loc168 = loc(fused[#loc98, #loc99])
#loc169 = loc(fused[#loc97, #loc99])
#loc170 = loc(fused[#loc100, #loc101])
#loc171 = loc(fused[#loc105, #loc106])
#loc172 = loc(fused[#loc107, #loc108])
#loc173 = loc(fused[#loc111, #loc112])
#loc174 = loc(fused[#loc113, #loc114])
#loc175 = loc(fused[#loc115, #loc116])
#loc176 = loc(fused[#loc120, #loc121])
#loc177 = loc(fused[#loc123, #loc124])
#loc178 = loc(fused[#loc127, #loc128])
#loc179 = loc(fused[#loc126, #loc128])
#loc180 = loc(fused[#loc129, #loc130])
