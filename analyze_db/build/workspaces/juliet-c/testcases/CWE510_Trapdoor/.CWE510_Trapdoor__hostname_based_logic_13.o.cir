!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE510_Trapdoor/CWE510_Trapdoor__hostname_based_logic_13.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant external @GLOBAL_CONST_FIVE : !s32i {alignment = 4 : i64} loc(#loc406)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc407)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc408)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc409)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc410)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc411)
  cir.func private @getsockname(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i extra(#fn_attr) loc(#loc412)
  cir.func private @getnameinfo(!cir.ptr<!ty_sockaddr>, !u32i, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>, !u32i, !s32i) -> !s32i loc(#loc413)
  cir.func private @strcmp(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc414)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"admin.google.com\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc19)
  cir.func private @send(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc415)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Welcome, admin!\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc22)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Welcome!\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc23)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc416)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Send failed!\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc26)
  cir.func private @close(!s32i) -> !s32i loc(#loc417)
  cir.func no_proto @CWE510_Trapdoor__hostname_based_logic_13_bad() extra(#fn_attr1) {
    %0 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc419)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["acceptService"] {alignment = 4 : i64} loc(#loc420)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptServiceLen", init] {alignment = 4 : i64} loc(#loc421)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc422)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc423)
    %5 = cir.alloca !cir.array<!s8i x 1025>, !cir.ptr<!cir.array<!s8i x 1025>>, ["hostname"] {alignment = 16 : i64} loc(#loc424)
    %6 = cir.alloca !cir.array<!s8i x 32>, !cir.ptr<!cir.array<!s8i x 32>>, ["servInfo"] {alignment = 16 : i64} loc(#loc425)
    cir.br ^bb1 loc(#loc426)
  ^bb1:  // pred: ^bb0
    %7 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc406)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc46)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc47)
    %10 = cir.cmp(eq, %8, %9) : !s32i, !cir.bool loc(#loc427)
    cir.brcond %10 ^bb2, ^bb57 loc(#loc428)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc429)
  ^bb3:  // pred: ^bb2
    %11 = cir.const #cir.int<16> : !u64i loc(#loc430)
    %12 = cir.cast(integral, %11 : !u64i), !s32i loc(#loc430)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc421)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc37)
    cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc422)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc39)
    cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc423)
    cir.br ^bb4 loc(#loc431)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc431)
  ^bb5:  // pred: ^bb45
    %17 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc54)
    cir.brcond %18 ^bb6, ^bb46 loc(#loc54)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc432)
  ^bb7:  // pred: ^bb6
    %19 = cir.const #cir.int<2> : !s32i loc(#loc57)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc58)
    %21 = cir.const #cir.int<6> : !s32i loc(#loc59)
    %22 = cir.call @socket(%19, %20, %21) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc60)
    cir.store %22, %3 : !s32i, !cir.ptr<!s32i> loc(#loc433)
    cir.br ^bb8 loc(#loc434)
  ^bb8:  // pred: ^bb7
    %23 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc66)
    %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc66)
    %26 = cir.cmp(eq, %23, %25) : !s32i, !cir.bool loc(#loc435)
    cir.brcond %26 ^bb9, ^bb10 loc(#loc436)
  ^bb9:  // pred: ^bb8
    cir.br ^bb46 loc(#loc68)
  ^bb10:  // pred: ^bb8
    cir.br ^bb11 loc(#loc64)
  ^bb11:  // pred: ^bb10
    %27 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc437)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc71)
    %29 = cir.const #cir.int<16> : !u64i loc(#loc438)
    cir.libc.memset %29 bytes from %27 set to %28 : !cir.ptr<!void>, !s32i, !u64i loc(#loc439)
    %30 = cir.const #cir.int<2> : !s32i loc(#loc76)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc76)
    %32 = cir.get_member %0[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
    cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc440)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc79)
    %34 = cir.cast(integral, %33 : !s32i), !u32i loc(#loc79)
    %35 = cir.get_member %0[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc80)
    %36 = cir.get_member %35[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc81)
    cir.store %34, %36 : !u32i, !cir.ptr<!u32i> loc(#loc441)
    %37 = cir.const #cir.int<20000> : !s32i loc(#loc83)
    %38 = cir.cast(integral, %37 : !s32i), !u16i loc(#loc83)
    %39 = cir.call @htons(%38) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc84)
    %40 = cir.get_member %0[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
    cir.store %39, %40 : !u16i, !cir.ptr<!u16i> loc(#loc442)
    cir.br ^bb12 loc(#loc443)
  ^bb12:  // pred: ^bb11
    %41 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    %42 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc444)
    %43 = cir.const #cir.int<16> : !u64i loc(#loc445)
    %44 = cir.cast(integral, %43 : !u64i), !u32i loc(#loc445)
    %45 = cir.call @bind(%41, %42, %44) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc95)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %47 = cir.unary(minus, %46) nsw : !s32i, !s32i loc(#loc96)
    %48 = cir.cmp(eq, %45, %47) : !s32i, !cir.bool loc(#loc446)
    cir.brcond %48 ^bb13, ^bb14 loc(#loc447)
  ^bb13:  // pred: ^bb12
    cir.br ^bb46 loc(#loc98)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc89)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc448)
  ^bb16:  // pred: ^bb15
    %49 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc101)
    %50 = cir.const #cir.int<5> : !s32i loc(#loc102)
    %51 = cir.call @listen(%49, %50) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc103)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %53 = cir.unary(minus, %52) nsw : !s32i, !s32i loc(#loc104)
    %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc449)
    cir.brcond %54 ^bb17, ^bb18 loc(#loc450)
  ^bb17:  // pred: ^bb16
    cir.br ^bb46 loc(#loc106)
  ^bb18:  // pred: ^bb16
    cir.br ^bb19 loc(#loc100)
  ^bb19:  // pred: ^bb18
    %55 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %56 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc108)
    %57 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc109)
    %58 = cir.call @accept(%55, %56, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc110)
    cir.store %58, %4 : !s32i, !cir.ptr<!s32i> loc(#loc451)
    cir.br ^bb20 loc(#loc452)
  ^bb20:  // pred: ^bb19
    %59 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc115)
    %60 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc116)
    %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc453)
    cir.brcond %62 ^bb21, ^bb22 loc(#loc454)
  ^bb21:  // pred: ^bb20
    cir.br ^bb46 loc(#loc118)
  ^bb22:  // pred: ^bb20
    cir.br ^bb23 loc(#loc114)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc455)
  ^bb24:  // pred: ^bb23
    %63 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc121)
    %64 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc456)
    %65 = cir.cast(bitcast, %2 : !cir.ptr<!s32i>), !cir.ptr<!u32i> loc(#loc457)
    %66 = cir.call @getsockname(%63, %64, %65) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i extra(#fn_attr) loc(#loc126)
    %67 = cir.const #cir.int<1> : !s32i loc(#loc127)
    %68 = cir.unary(minus, %67) nsw : !s32i, !s32i loc(#loc128)
    %69 = cir.cmp(eq, %66, %68) : !s32i, !cir.bool loc(#loc458)
    cir.brcond %69 ^bb25, ^bb26 loc(#loc459)
  ^bb25:  // pred: ^bb24
    cir.br ^bb46 loc(#loc130)
  ^bb26:  // pred: ^bb24
    cir.br ^bb27 loc(#loc120)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28 loc(#loc460)
  ^bb28:  // pred: ^bb27
    %70 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc461)
    %71 = cir.const #cir.int<16> : !u64i loc(#loc462)
    %72 = cir.cast(integral, %71 : !u64i), !u32i loc(#loc462)
    %73 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 1025>>), !cir.ptr<!s8i> loc(#loc137)
    %74 = cir.const #cir.int<1025> : !s32i loc(#loc138)
    %75 = cir.cast(integral, %74 : !s32i), !u32i loc(#loc138)
    %76 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc139)
    %77 = cir.const #cir.int<32> : !s32i loc(#loc140)
    %78 = cir.cast(integral, %77 : !s32i), !u32i loc(#loc140)
    %79 = cir.const #cir.int<2> : !s32i loc(#loc141)
    %80 = cir.call @getnameinfo(%70, %72, %73, %75, %76, %78, %79) : (!cir.ptr<!ty_sockaddr>, !u32i, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>, !u32i, !s32i) -> !s32i loc(#loc142)
    %81 = cir.const #cir.int<0> : !s32i loc(#loc143)
    %82 = cir.cmp(ne, %80, %81) : !s32i, !cir.bool loc(#loc463)
    cir.brcond %82 ^bb29, ^bb30 loc(#loc464)
  ^bb29:  // pred: ^bb28
    cir.br ^bb46 loc(#loc145)
  ^bb30:  // pred: ^bb28
    cir.br ^bb31 loc(#loc132)
  ^bb31:  // pred: ^bb30
    cir.br ^bb32 loc(#loc465)
  ^bb32:  // pred: ^bb31
    %83 = cir.get_global @strcmp : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i>> loc(#loc148)
    %84 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc19)
    %85 = cir.cast(array_to_ptrdecay, %84 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc19)
    %86 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 1025>>), !cir.ptr<!s8i> loc(#loc149)
    %87 = cir.call @strcmp(%85, %86) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc148)
    %88 = cir.const #cir.int<0> : !s32i loc(#loc150)
    %89 = cir.cmp(eq, %87, %88) : !s32i, !cir.bool loc(#loc466)
    cir.brcond %89 ^bb33, ^bb38 loc(#loc467)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc468)
  ^bb34:  // pred: ^bb33
    %90 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    %91 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc22)
    %92 = cir.cast(array_to_ptrdecay, %91 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc22)
    %93 = cir.cast(bitcast, %92 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc22)
    %94 = cir.const #cir.int<15> : !u64i loc(#loc469)
    %95 = cir.const #cir.int<0> : !s32i loc(#loc159)
    %96 = cir.call @send(%90, %93, %94, %95) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc160)
    %97 = cir.const #cir.int<1> : !s32i loc(#loc161)
    %98 = cir.unary(minus, %97) nsw : !s32i, !s32i loc(#loc161)
    %99 = cir.cast(integral, %98 : !s32i), !s64i loc(#loc161)
    %100 = cir.cmp(eq, %96, %99) : !s64i, !cir.bool loc(#loc470)
    cir.brcond %100 ^bb35, ^bb36 loc(#loc471)
  ^bb35:  // pred: ^bb34
    cir.br ^bb46 loc(#loc163)
  ^bb36:  // pred: ^bb34
    cir.br ^bb37 loc(#loc155)
  ^bb37:  // pred: ^bb36
    cir.br ^bb43 loc(#loc152)
  ^bb38:  // pred: ^bb32
    cir.br ^bb39 loc(#loc472)
  ^bb39:  // pred: ^bb38
    %101 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    %102 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc23)
    %103 = cir.cast(array_to_ptrdecay, %102 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc23)
    %104 = cir.cast(bitcast, %103 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc23)
    %105 = cir.const #cir.int<8> : !u64i loc(#loc473)
    %106 = cir.const #cir.int<0> : !s32i loc(#loc169)
    %107 = cir.call @send(%101, %104, %105, %106) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc170)
    %108 = cir.const #cir.int<1> : !s32i loc(#loc171)
    %109 = cir.unary(minus, %108) nsw : !s32i, !s32i loc(#loc171)
    %110 = cir.cast(integral, %109 : !s32i), !s64i loc(#loc171)
    %111 = cir.cmp(eq, %107, %110) : !s64i, !cir.bool loc(#loc474)
    cir.brcond %111 ^bb40, ^bb41 loc(#loc475)
  ^bb40:  // pred: ^bb39
    %112 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc26)
    %113 = cir.cast(array_to_ptrdecay, %112 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc26)
    cir.call @printLine(%113) : (!cir.ptr<!s8i>) -> () loc(#loc173)
    cir.br ^bb41 loc(#loc165)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc165)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc147)
  ^bb43:  // 2 preds: ^bb37, ^bb42
    cir.br ^bb44 loc(#loc147)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc56)
  ^bb45:  // pred: ^bb44
    cir.br ^bb5 loc(#loc53)
  ^bb46:  // 8 preds: ^bb5, ^bb9, ^bb13, ^bb17, ^bb21, ^bb25, ^bb29, ^bb35
    cir.br ^bb47 loc(#loc53)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc476)
  ^bb48:  // pred: ^bb47
    %114 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc176)
    %115 = cir.const #cir.int<1> : !s32i loc(#loc177)
    %116 = cir.unary(minus, %115) nsw : !s32i, !s32i loc(#loc177)
    %117 = cir.cmp(ne, %114, %116) : !s32i, !cir.bool loc(#loc477)
    cir.brcond %117 ^bb49, ^bb50 loc(#loc478)
  ^bb49:  // pred: ^bb48
    %118 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc179)
    %119 = cir.call @close(%118) : (!s32i) -> !s32i loc(#loc180)
    cir.br ^bb50 loc(#loc175)
  ^bb50:  // 2 preds: ^bb48, ^bb49
    cir.br ^bb51 loc(#loc175)
  ^bb51:  // pred: ^bb50
    cir.br ^bb52 loc(#loc479)
  ^bb52:  // pred: ^bb51
    %120 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc183)
    %121 = cir.const #cir.int<1> : !s32i loc(#loc184)
    %122 = cir.unary(minus, %121) nsw : !s32i, !s32i loc(#loc184)
    %123 = cir.cmp(ne, %120, %122) : !s32i, !cir.bool loc(#loc480)
    cir.brcond %123 ^bb53, ^bb54 loc(#loc481)
  ^bb53:  // pred: ^bb52
    %124 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc186)
    %125 = cir.call @close(%124) : (!s32i) -> !s32i loc(#loc187)
    cir.br ^bb54 loc(#loc182)
  ^bb54:  // 2 preds: ^bb52, ^bb53
    cir.br ^bb55 loc(#loc182)
  ^bb55:  // pred: ^bb54
    cir.br ^bb56 loc(#loc50)
  ^bb56:  // pred: ^bb55
    cir.br ^bb57 loc(#loc45)
  ^bb57:  // 2 preds: ^bb1, ^bb56
    cir.br ^bb58 loc(#loc45)
  ^bb58:  // pred: ^bb57
    cir.return loc(#loc30)
  } loc(#loc418)
  cir.func no_proto @CWE510_Trapdoor__hostname_based_logic_13_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc483)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc190)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc484)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc192)
    cir.return loc(#loc189)
  } loc(#loc482)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc194)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc486)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc487)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc488)
    cir.br ^bb1 loc(#loc489)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc406)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc205)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc206)
    %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc490)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc491)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc194)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc194)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc210)
    cir.br ^bb41 loc(#loc208)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc492)
  ^bb4:  // pred: ^bb3
    %9 = cir.const #cir.int<1> : !s32i loc(#loc200)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc200)
    cir.store %10, %1 : !s32i, !cir.ptr<!s32i> loc(#loc487)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc202)
    %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc202)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc488)
    cir.br ^bb5 loc(#loc493)
  ^bb5:  // pred: ^bb4
    cir.br ^bb7 loc(#loc493)
  ^bb6:  // pred: ^bb29
    %13 = cir.const #cir.int<0> : !s32i loc(#loc215)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc215)
    cir.brcond %14 ^bb7, ^bb30 loc(#loc215)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc494)
  ^bb8:  // pred: ^bb7
    %15 = cir.const #cir.int<2> : !s32i loc(#loc218)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc219)
    %17 = cir.const #cir.int<6> : !s32i loc(#loc220)
    %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc221)
    cir.store %18, %1 : !s32i, !cir.ptr<!s32i> loc(#loc495)
    cir.br ^bb9 loc(#loc496)
  ^bb9:  // pred: ^bb8
    %19 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc226)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc227)
    %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc227)
    %22 = cir.cmp(eq, %19, %21) : !s32i, !cir.bool loc(#loc497)
    cir.brcond %22 ^bb10, ^bb11 loc(#loc498)
  ^bb10:  // pred: ^bb9
    cir.br ^bb30 loc(#loc229)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc225)
  ^bb12:  // pred: ^bb11
    %23 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc499)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc232)
    %25 = cir.const #cir.int<16> : !u64i loc(#loc500)
    cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc501)
    %26 = cir.const #cir.int<2> : !s32i loc(#loc237)
    %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc237)
    %28 = cir.get_member %0[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
    cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc502)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc239)
    %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc239)
    %31 = cir.get_member %0[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc80)
    %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc81)
    cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc503)
    %33 = cir.const #cir.int<20000> : !s32i loc(#loc241)
    %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc241)
    %35 = cir.call @htons(%34) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc242)
    %36 = cir.get_member %0[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
    cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc504)
    cir.br ^bb13 loc(#loc505)
  ^bb13:  // pred: ^bb12
    %37 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc247)
    %38 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc506)
    %39 = cir.const #cir.int<16> : !u64i loc(#loc507)
    %40 = cir.cast(integral, %39 : !u64i), !u32i loc(#loc507)
    %41 = cir.call @bind(%37, %38, %40) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc252)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc253)
    %43 = cir.unary(minus, %42) nsw : !s32i, !s32i loc(#loc253)
    %44 = cir.cmp(eq, %41, %43) : !s32i, !cir.bool loc(#loc508)
    cir.brcond %44 ^bb14, ^bb15 loc(#loc509)
  ^bb14:  // pred: ^bb13
    cir.br ^bb30 loc(#loc255)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc246)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc510)
  ^bb17:  // pred: ^bb16
    %45 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc258)
    %46 = cir.const #cir.int<5> : !s32i loc(#loc259)
    %47 = cir.call @listen(%45, %46) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc260)
    %48 = cir.const #cir.int<1> : !s32i loc(#loc261)
    %49 = cir.unary(minus, %48) nsw : !s32i, !s32i loc(#loc261)
    %50 = cir.cmp(eq, %47, %49) : !s32i, !cir.bool loc(#loc511)
    cir.brcond %50 ^bb18, ^bb19 loc(#loc512)
  ^bb18:  // pred: ^bb17
    cir.br ^bb30 loc(#loc263)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc257)
  ^bb20:  // pred: ^bb19
    %51 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc264)
    %52 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc265)
    %53 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc266)
    %54 = cir.call @accept(%51, %52, %53) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc267)
    cir.store %54, %2 : !s32i, !cir.ptr<!s32i> loc(#loc513)
    cir.br ^bb21 loc(#loc514)
  ^bb21:  // pred: ^bb20
    %55 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc272)
    %56 = cir.const #cir.int<1> : !s32i loc(#loc273)
    %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc273)
    %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc515)
    cir.brcond %58 ^bb22, ^bb23 loc(#loc516)
  ^bb22:  // pred: ^bb21
    cir.br ^bb30 loc(#loc275)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc271)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc517)
  ^bb25:  // pred: ^bb24
    %59 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc278)
    %60 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc279)
    %61 = cir.cast(array_to_ptrdecay, %60 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc279)
    %62 = cir.cast(bitcast, %61 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc279)
    %63 = cir.const #cir.int<8> : !u64i loc(#loc518)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc282)
    %65 = cir.call @send(%59, %62, %63, %64) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc283)
    %66 = cir.const #cir.int<1> : !s32i loc(#loc284)
    %67 = cir.unary(minus, %66) nsw : !s32i, !s32i loc(#loc284)
    %68 = cir.cast(integral, %67 : !s32i), !s64i loc(#loc284)
    %69 = cir.cmp(eq, %65, %68) : !s64i, !cir.bool loc(#loc519)
    cir.brcond %69 ^bb26, ^bb27 loc(#loc520)
  ^bb26:  // pred: ^bb25
    %70 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc286)
    %71 = cir.cast(array_to_ptrdecay, %70 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc286)
    cir.call @printLine(%71) : (!cir.ptr<!s8i>) -> () loc(#loc287)
    cir.br ^bb27 loc(#loc277)
  ^bb27:  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc277)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc217)
  ^bb29:  // pred: ^bb28
    cir.br ^bb6 loc(#loc214)
  ^bb30:  // 5 preds: ^bb6, ^bb10, ^bb14, ^bb18, ^bb22
    cir.br ^bb31 loc(#loc214)
  ^bb31:  // pred: ^bb30
    cir.br ^bb32 loc(#loc521)
  ^bb32:  // pred: ^bb31
    %72 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc290)
    %73 = cir.const #cir.int<1> : !s32i loc(#loc291)
    %74 = cir.unary(minus, %73) nsw : !s32i, !s32i loc(#loc291)
    %75 = cir.cmp(ne, %72, %74) : !s32i, !cir.bool loc(#loc522)
    cir.brcond %75 ^bb33, ^bb34 loc(#loc523)
  ^bb33:  // pred: ^bb32
    %76 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc293)
    %77 = cir.call @close(%76) : (!s32i) -> !s32i loc(#loc294)
    cir.br ^bb34 loc(#loc289)
  ^bb34:  // 2 preds: ^bb32, ^bb33
    cir.br ^bb35 loc(#loc289)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc524)
  ^bb36:  // pred: ^bb35
    %78 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc297)
    %79 = cir.const #cir.int<1> : !s32i loc(#loc298)
    %80 = cir.unary(minus, %79) nsw : !s32i, !s32i loc(#loc298)
    %81 = cir.cmp(ne, %78, %80) : !s32i, !cir.bool loc(#loc525)
    cir.brcond %81 ^bb37, ^bb38 loc(#loc526)
  ^bb37:  // pred: ^bb36
    %82 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc300)
    %83 = cir.call @close(%82) : (!s32i) -> !s32i loc(#loc301)
    cir.br ^bb38 loc(#loc296)
  ^bb38:  // 2 preds: ^bb36, ^bb37
    cir.br ^bb39 loc(#loc296)
  ^bb39:  // pred: ^bb38
    cir.br ^bb40 loc(#loc212)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc204)
  ^bb41:  // 2 preds: ^bb2, ^bb40
    cir.br ^bb42 loc(#loc204)
  ^bb42:  // pred: ^bb41
    cir.return loc(#loc196)
  } loc(#loc485)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc528)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc529)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc530)
    cir.br ^bb1 loc(#loc531)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc406)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc312)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc313)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc532)
    cir.brcond %6 ^bb2, ^bb40 loc(#loc533)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc534)
  ^bb3:  // pred: ^bb2
    %7 = cir.const #cir.int<1> : !s32i loc(#loc307)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc307)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc529)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc309)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc309)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc530)
    cir.br ^bb4 loc(#loc535)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc535)
  ^bb5:  // pred: ^bb28
    %11 = cir.const #cir.int<0> : !s32i loc(#loc319)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc319)
    cir.brcond %12 ^bb6, ^bb29 loc(#loc319)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc536)
  ^bb7:  // pred: ^bb6
    %13 = cir.const #cir.int<2> : !s32i loc(#loc322)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc323)
    %15 = cir.const #cir.int<6> : !s32i loc(#loc324)
    %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc325)
    cir.store %16, %1 : !s32i, !cir.ptr<!s32i> loc(#loc537)
    cir.br ^bb8 loc(#loc538)
  ^bb8:  // pred: ^bb7
    %17 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc330)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc331)
    %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc331)
    %20 = cir.cmp(eq, %17, %19) : !s32i, !cir.bool loc(#loc539)
    cir.brcond %20 ^bb9, ^bb10 loc(#loc540)
  ^bb9:  // pred: ^bb8
    cir.br ^bb29 loc(#loc333)
  ^bb10:  // pred: ^bb8
    cir.br ^bb11 loc(#loc329)
  ^bb11:  // pred: ^bb10
    %21 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc541)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc336)
    %23 = cir.const #cir.int<16> : !u64i loc(#loc542)
    cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc543)
    %24 = cir.const #cir.int<2> : !s32i loc(#loc341)
    %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc341)
    %26 = cir.get_member %0[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
    cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc544)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc343)
    %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc343)
    %29 = cir.get_member %0[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc80)
    %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc81)
    cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc545)
    %31 = cir.const #cir.int<20000> : !s32i loc(#loc345)
    %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc345)
    %33 = cir.call @htons(%32) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc346)
    %34 = cir.get_member %0[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
    cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc546)
    cir.br ^bb12 loc(#loc547)
  ^bb12:  // pred: ^bb11
    %35 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc351)
    %36 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc548)
    %37 = cir.const #cir.int<16> : !u64i loc(#loc549)
    %38 = cir.cast(integral, %37 : !u64i), !u32i loc(#loc549)
    %39 = cir.call @bind(%35, %36, %38) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc356)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc357)
    %41 = cir.unary(minus, %40) nsw : !s32i, !s32i loc(#loc357)
    %42 = cir.cmp(eq, %39, %41) : !s32i, !cir.bool loc(#loc550)
    cir.brcond %42 ^bb13, ^bb14 loc(#loc551)
  ^bb13:  // pred: ^bb12
    cir.br ^bb29 loc(#loc359)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc350)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc552)
  ^bb16:  // pred: ^bb15
    %43 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc362)
    %44 = cir.const #cir.int<5> : !s32i loc(#loc363)
    %45 = cir.call @listen(%43, %44) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc364)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc365)
    %47 = cir.unary(minus, %46) nsw : !s32i, !s32i loc(#loc365)
    %48 = cir.cmp(eq, %45, %47) : !s32i, !cir.bool loc(#loc553)
    cir.brcond %48 ^bb17, ^bb18 loc(#loc554)
  ^bb17:  // pred: ^bb16
    cir.br ^bb29 loc(#loc367)
  ^bb18:  // pred: ^bb16
    cir.br ^bb19 loc(#loc361)
  ^bb19:  // pred: ^bb18
    %49 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc368)
    %50 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc369)
    %51 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc370)
    %52 = cir.call @accept(%49, %50, %51) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc371)
    cir.store %52, %2 : !s32i, !cir.ptr<!s32i> loc(#loc555)
    cir.br ^bb20 loc(#loc556)
  ^bb20:  // pred: ^bb19
    %53 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc376)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc377)
    %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc377)
    %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc557)
    cir.brcond %56 ^bb21, ^bb22 loc(#loc558)
  ^bb21:  // pred: ^bb20
    cir.br ^bb29 loc(#loc379)
  ^bb22:  // pred: ^bb20
    cir.br ^bb23 loc(#loc375)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc559)
  ^bb24:  // pred: ^bb23
    %57 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc382)
    %58 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc383)
    %59 = cir.cast(array_to_ptrdecay, %58 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc383)
    %60 = cir.cast(bitcast, %59 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc383)
    %61 = cir.const #cir.int<8> : !u64i loc(#loc560)
    %62 = cir.const #cir.int<0> : !s32i loc(#loc386)
    %63 = cir.call @send(%57, %60, %61, %62) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc387)
    %64 = cir.const #cir.int<1> : !s32i loc(#loc388)
    %65 = cir.unary(minus, %64) nsw : !s32i, !s32i loc(#loc388)
    %66 = cir.cast(integral, %65 : !s32i), !s64i loc(#loc388)
    %67 = cir.cmp(eq, %63, %66) : !s64i, !cir.bool loc(#loc561)
    cir.brcond %67 ^bb25, ^bb26 loc(#loc562)
  ^bb25:  // pred: ^bb24
    %68 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc390)
    %69 = cir.cast(array_to_ptrdecay, %68 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc390)
    cir.call @printLine(%69) : (!cir.ptr<!s8i>) -> () loc(#loc391)
    cir.br ^bb26 loc(#loc381)
  ^bb26:  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc381)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28 loc(#loc321)
  ^bb28:  // pred: ^bb27
    cir.br ^bb5 loc(#loc318)
  ^bb29:  // 5 preds: ^bb5, ^bb9, ^bb13, ^bb17, ^bb21
    cir.br ^bb30 loc(#loc318)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc563)
  ^bb31:  // pred: ^bb30
    %70 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc394)
    %71 = cir.const #cir.int<1> : !s32i loc(#loc395)
    %72 = cir.unary(minus, %71) nsw : !s32i, !s32i loc(#loc395)
    %73 = cir.cmp(ne, %70, %72) : !s32i, !cir.bool loc(#loc564)
    cir.brcond %73 ^bb32, ^bb33 loc(#loc565)
  ^bb32:  // pred: ^bb31
    %74 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc397)
    %75 = cir.call @close(%74) : (!s32i) -> !s32i loc(#loc398)
    cir.br ^bb33 loc(#loc393)
  ^bb33:  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc393)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc566)
  ^bb35:  // pred: ^bb34
    %76 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc401)
    %77 = cir.const #cir.int<1> : !s32i loc(#loc402)
    %78 = cir.unary(minus, %77) nsw : !s32i, !s32i loc(#loc402)
    %79 = cir.cmp(ne, %76, %78) : !s32i, !cir.bool loc(#loc567)
    cir.brcond %79 ^bb36, ^bb37 loc(#loc568)
  ^bb36:  // pred: ^bb35
    %80 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc404)
    %81 = cir.call @close(%80) : (!s32i) -> !s32i loc(#loc405)
    cir.br ^bb37 loc(#loc400)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc400)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc316)
  ^bb39:  // pred: ^bb38
    cir.br ^bb40 loc(#loc311)
  ^bb40:  // 2 preds: ^bb1, ^bb39
    cir.br ^bb41 loc(#loc311)
  ^bb41:  // pred: ^bb40
    cir.return loc(#loc303)
  } loc(#loc527)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE510_Trapdoor/CWE510_Trapdoor__hostname_based_logic_13.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase.h":111:1)
#loc2 = loc("../../testcasesupport/std_testcase.h":111:18)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/netinet/in.h":402:1)
#loc6 = loc("/usr/include/netinet/in.h":403:40)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":116:1)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":117:33)
#loc15 = loc("/usr/include/netdb.h":675:1)
#loc16 = loc("/usr/include/netdb.h":678:36)
#loc17 = loc("/usr/include/string.h":156:1)
#loc18 = loc("/usr/include/string.h":157:33)
#loc19 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":105:28)
#loc20 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":138:1)
#loc21 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":138:74)
#loc22 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":107:44)
#loc23 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":115:44)
#loc24 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc25 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc26 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":117:35)
#loc27 = loc("/usr/include/unistd.h":358:1)
#loc28 = loc("/usr/include/unistd.h":358:27)
#loc29 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":47:1)
#loc30 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":138:1)
#loc31 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":56:13)
#loc32 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":56:32)
#loc33 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":56:41)
#loc34 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":57:13)
#loc35 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":57:56)
#loc36 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":58:13)
#loc37 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":58:35)
#loc38 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":59:13)
#loc39 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":59:35)
#loc40 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":60:13)
#loc41 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":60:37)
#loc42 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":61:13)
#loc43 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":61:37)
#loc44 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":49:5)
#loc45 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":137:5)
#loc46 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":49:8)
#loc47 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":49:27)
#loc48 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":50:5)
#loc49 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":51:9)
#loc50 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":136:9)
#loc51 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":57:36)
#loc52 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":62:13)
#loc53 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":121:21)
#loc54 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":121:20)
#loc55 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":63:13)
#loc56 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":120:13)
#loc57 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":71:39)
#loc58 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":71:48)
#loc59 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":71:61)
#loc60 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":71:32)
#loc61 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":71:17)
#loc62 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":71:72)
#loc63 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":72:17)
#loc64 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":75:17)
#loc65 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":72:21)
#loc66 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":72:37)
#loc67 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":73:17)
#loc68 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":74:21)
#loc69 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":76:24)
#loc70 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":76:25)
#loc71 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":76:34)
#loc72 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":76:37)
#loc73 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":76:51)
#loc74 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":76:17)
#loc75 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":76:52)
#loc76 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":77:38)
#loc77 = loc("/usr/include/netinet/in.h":249:5)
#loc78 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":77:17)
#loc79 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":78:43)
#loc80 = loc("/usr/include/netinet/in.h":251:20)
#loc81 = loc("/usr/include/netinet/in.h":33:15)
#loc82 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":78:17)
#loc83 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":79:42)
#loc84 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":79:36)
#loc85 = loc("/usr/include/netinet/in.h":250:15)
#loc86 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":79:17)
#loc87 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":79:47)
#loc88 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":80:17)
#loc89 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":83:17)
#loc90 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":80:26)
#loc91 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":80:58)
#loc92 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":80:59)
#loc93 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":80:68)
#loc94 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":80:82)
#loc95 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":80:21)
#loc96 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":80:88)
#loc97 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":81:17)
#loc98 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":82:21)
#loc99 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":84:17)
#loc100 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":87:17)
#loc101 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":84:28)
#loc102 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":84:42)
#loc103 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":84:21)
#loc104 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":84:48)
#loc105 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":85:17)
#loc106 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":86:21)
#loc107 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":88:39)
#loc108 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":88:53)
#loc109 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":88:59)
#loc110 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":88:32)
#loc111 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":88:17)
#loc112 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":88:63)
#loc113 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":89:17)
#loc114 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":92:17)
#loc115 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":89:21)
#loc116 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":89:37)
#loc117 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":90:17)
#loc118 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":91:21)
#loc119 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":93:17)
#loc120 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":96:17)
#loc121 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":93:33)
#loc122 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":93:66)
#loc123 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":93:67)
#loc124 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":93:82)
#loc125 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":93:83)
#loc126 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":93:21)
#loc127 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":93:105)
#loc128 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":93:104)
#loc129 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":94:17)
#loc130 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":95:21)
#loc131 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":97:17)
#loc132 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":103:17)
#loc133 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":97:52)
#loc134 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":97:53)
#loc135 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":98:33)
#loc136 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":98:55)
#loc137 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":99:33)
#loc138 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":100:33)
#loc139 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":100:45)
#loc140 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":100:55)
#loc141 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":100:67)
#loc142 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":97:21)
#loc143 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":100:86)
#loc144 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":101:17)
#loc145 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":102:21)
#loc146 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":105:17)
#loc147 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":119:17)
#loc148 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":105:21)
#loc149 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":105:48)
#loc150 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":105:61)
#loc151 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":106:17)
#loc152 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":112:17)
#loc153 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":114:17)
#loc154 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":107:21)
#loc155 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":111:21)
#loc156 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":107:30)
#loc157 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":107:59)
#loc158 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":107:79)
#loc159 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":107:82)
#loc160 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":107:25)
#loc161 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":107:89)
#loc162 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":108:21)
#loc163 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":110:25)
#loc164 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":115:21)
#loc165 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":118:21)
#loc166 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":115:30)
#loc167 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":115:61)
#loc168 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":115:83)
#loc169 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":115:86)
#loc170 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":115:25)
#loc171 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":115:92)
#loc172 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":116:21)
#loc173 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":117:25)
#loc174 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":122:13)
#loc175 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":125:13)
#loc176 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":122:17)
#loc177 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":122:33)
#loc178 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":123:13)
#loc179 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":124:30)
#loc180 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":124:17)
#loc181 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":126:13)
#loc182 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":129:13)
#loc183 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":126:17)
#loc184 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":126:33)
#loc185 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":127:13)
#loc186 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":128:30)
#loc187 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":128:17)
#loc188 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":287:1)
#loc189 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":291:1)
#loc190 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":289:5)
#loc191 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":289:11)
#loc192 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":290:5)
#loc193 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":290:11)
#loc194 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":150:19)
#loc195 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":145:1)
#loc196 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":216:1)
#loc197 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":159:13)
#loc198 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":159:32)
#loc199 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":160:13)
#loc200 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":160:35)
#loc201 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":161:13)
#loc202 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":161:35)
#loc203 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":147:5)
#loc204 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":215:5)
#loc205 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":147:8)
#loc206 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":147:27)
#loc207 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":148:5)
#loc208 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":151:5)
#loc209 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":153:5)
#loc210 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":150:9)
#loc211 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":154:9)
#loc212 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":214:9)
#loc213 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":162:13)
#loc214 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":199:21)
#loc215 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":199:20)
#loc216 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":163:13)
#loc217 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":198:13)
#loc218 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":171:39)
#loc219 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":171:48)
#loc220 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":171:61)
#loc221 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":171:32)
#loc222 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":171:17)
#loc223 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":171:72)
#loc224 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":172:17)
#loc225 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":175:17)
#loc226 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":172:21)
#loc227 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":172:37)
#loc228 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":173:17)
#loc229 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":174:21)
#loc230 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":176:24)
#loc231 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":176:25)
#loc232 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":176:34)
#loc233 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":176:37)
#loc234 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":176:51)
#loc235 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":176:17)
#loc236 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":176:52)
#loc237 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":177:38)
#loc238 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":177:17)
#loc239 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":178:43)
#loc240 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":178:17)
#loc241 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":179:42)
#loc242 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":179:36)
#loc243 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":179:17)
#loc244 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":179:47)
#loc245 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":180:17)
#loc246 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":183:17)
#loc247 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":180:26)
#loc248 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":180:58)
#loc249 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":180:59)
#loc250 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":180:68)
#loc251 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":180:82)
#loc252 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":180:21)
#loc253 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":180:88)
#loc254 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":181:17)
#loc255 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":182:21)
#loc256 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":184:17)
#loc257 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":187:17)
#loc258 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":184:28)
#loc259 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":184:42)
#loc260 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":184:21)
#loc261 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":184:48)
#loc262 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":185:17)
#loc263 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":186:21)
#loc264 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":188:39)
#loc265 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":188:53)
#loc266 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":188:59)
#loc267 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":188:32)
#loc268 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":188:17)
#loc269 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":188:63)
#loc270 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":189:17)
#loc271 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":192:17)
#loc272 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":189:21)
#loc273 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":189:37)
#loc274 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":190:17)
#loc275 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":191:21)
#loc276 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":194:17)
#loc277 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":197:17)
#loc278 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":194:26)
#loc279 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":194:40)
#loc280 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":194:57)
#loc281 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":194:79)
#loc282 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":194:82)
#loc283 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":194:21)
#loc284 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":194:88)
#loc285 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":195:17)
#loc286 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":196:31)
#loc287 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":196:21)
#loc288 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":200:13)
#loc289 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":203:13)
#loc290 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":200:17)
#loc291 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":200:33)
#loc292 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":201:13)
#loc293 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":202:30)
#loc294 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":202:17)
#loc295 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":204:13)
#loc296 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":207:13)
#loc297 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":204:17)
#loc298 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":204:33)
#loc299 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":205:13)
#loc300 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":206:30)
#loc301 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":206:17)
#loc302 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":219:1)
#loc303 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":285:1)
#loc304 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":228:13)
#loc305 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":228:32)
#loc306 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":229:13)
#loc307 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":229:35)
#loc308 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":230:13)
#loc309 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":230:35)
#loc310 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":221:5)
#loc311 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":284:5)
#loc312 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":221:8)
#loc313 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":221:27)
#loc314 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":222:5)
#loc315 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":223:9)
#loc316 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":283:9)
#loc317 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":231:13)
#loc318 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":268:21)
#loc319 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":268:20)
#loc320 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":232:13)
#loc321 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":267:13)
#loc322 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":240:39)
#loc323 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":240:48)
#loc324 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":240:61)
#loc325 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":240:32)
#loc326 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":240:17)
#loc327 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":240:72)
#loc328 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":241:17)
#loc329 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":244:17)
#loc330 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":241:21)
#loc331 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":241:37)
#loc332 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":242:17)
#loc333 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":243:21)
#loc334 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":245:24)
#loc335 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":245:25)
#loc336 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":245:34)
#loc337 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":245:37)
#loc338 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":245:51)
#loc339 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":245:17)
#loc340 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":245:52)
#loc341 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":246:38)
#loc342 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":246:17)
#loc343 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":247:43)
#loc344 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":247:17)
#loc345 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":248:42)
#loc346 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":248:36)
#loc347 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":248:17)
#loc348 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":248:47)
#loc349 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":249:17)
#loc350 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":252:17)
#loc351 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":249:26)
#loc352 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":249:58)
#loc353 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":249:59)
#loc354 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":249:68)
#loc355 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":249:82)
#loc356 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":249:21)
#loc357 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":249:88)
#loc358 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":250:17)
#loc359 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":251:21)
#loc360 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":253:17)
#loc361 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":256:17)
#loc362 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":253:28)
#loc363 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":253:42)
#loc364 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":253:21)
#loc365 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":253:48)
#loc366 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":254:17)
#loc367 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":255:21)
#loc368 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":257:39)
#loc369 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":257:53)
#loc370 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":257:59)
#loc371 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":257:32)
#loc372 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":257:17)
#loc373 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":257:63)
#loc374 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":258:17)
#loc375 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":261:17)
#loc376 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":258:21)
#loc377 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":258:37)
#loc378 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":259:17)
#loc379 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":260:21)
#loc380 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":263:17)
#loc381 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":266:17)
#loc382 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":263:26)
#loc383 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":263:40)
#loc384 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":263:57)
#loc385 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":263:79)
#loc386 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":263:82)
#loc387 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":263:21)
#loc388 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":263:88)
#loc389 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":264:17)
#loc390 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":265:31)
#loc391 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":265:21)
#loc392 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":269:13)
#loc393 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":272:13)
#loc394 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":269:17)
#loc395 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":269:33)
#loc396 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":270:13)
#loc397 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":271:30)
#loc398 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":271:17)
#loc399 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":273:13)
#loc400 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":276:13)
#loc401 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":273:17)
#loc402 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":273:33)
#loc403 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":274:13)
#loc404 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":275:30)
#loc405 = loc("CWE510_Trapdoor__hostname_based_logic_13.c":275:17)
#loc406 = loc(fused[#loc1, #loc2])
#loc407 = loc(fused[#loc3, #loc4])
#loc408 = loc(fused[#loc5, #loc6])
#loc409 = loc(fused[#loc7, #loc8])
#loc410 = loc(fused[#loc9, #loc10])
#loc411 = loc(fused[#loc11, #loc12])
#loc412 = loc(fused[#loc13, #loc14])
#loc413 = loc(fused[#loc15, #loc16])
#loc414 = loc(fused[#loc17, #loc18])
#loc415 = loc(fused[#loc20, #loc21])
#loc416 = loc(fused[#loc24, #loc25])
#loc417 = loc(fused[#loc27, #loc28])
#loc418 = loc(fused[#loc29, #loc30])
#loc419 = loc(fused[#loc31, #loc32])
#loc420 = loc(fused[#loc31, #loc33])
#loc421 = loc(fused[#loc34, #loc35])
#loc422 = loc(fused[#loc36, #loc37])
#loc423 = loc(fused[#loc38, #loc39])
#loc424 = loc(fused[#loc40, #loc41])
#loc425 = loc(fused[#loc42, #loc43])
#loc426 = loc(fused[#loc44, #loc45])
#loc427 = loc(fused[#loc46, #loc47])
#loc428 = loc(fused[#loc48, #loc45])
#loc429 = loc(fused[#loc49, #loc50])
#loc430 = loc(fused[#loc51, #loc35])
#loc431 = loc(fused[#loc52, #loc53])
#loc432 = loc(fused[#loc55, #loc56])
#loc433 = loc(fused[#loc61, #loc62])
#loc434 = loc(fused[#loc63, #loc64])
#loc435 = loc(fused[#loc65, #loc66])
#loc436 = loc(fused[#loc67, #loc64])
#loc437 = loc(fused[#loc69, #loc70])
#loc438 = loc(fused[#loc72, #loc73])
#loc439 = loc(fused[#loc74, #loc75])
#loc440 = loc(fused[#loc78, #loc76])
#loc441 = loc(fused[#loc82, #loc79])
#loc442 = loc(fused[#loc86, #loc87])
#loc443 = loc(fused[#loc88, #loc89])
#loc444 = loc(fused[#loc91, #loc92])
#loc445 = loc(fused[#loc93, #loc94])
#loc446 = loc(fused[#loc95, #loc96])
#loc447 = loc(fused[#loc97, #loc89])
#loc448 = loc(fused[#loc99, #loc100])
#loc449 = loc(fused[#loc103, #loc104])
#loc450 = loc(fused[#loc105, #loc100])
#loc451 = loc(fused[#loc111, #loc112])
#loc452 = loc(fused[#loc113, #loc114])
#loc453 = loc(fused[#loc115, #loc116])
#loc454 = loc(fused[#loc117, #loc114])
#loc455 = loc(fused[#loc119, #loc120])
#loc456 = loc(fused[#loc122, #loc123])
#loc457 = loc(fused[#loc124, #loc125])
#loc458 = loc(fused[#loc126, #loc127])
#loc459 = loc(fused[#loc129, #loc120])
#loc460 = loc(fused[#loc131, #loc132])
#loc461 = loc(fused[#loc133, #loc134])
#loc462 = loc(fused[#loc135, #loc136])
#loc463 = loc(fused[#loc142, #loc143])
#loc464 = loc(fused[#loc144, #loc132])
#loc465 = loc(fused[#loc146, #loc147])
#loc466 = loc(fused[#loc148, #loc150])
#loc467 = loc(fused[#loc151, #loc152, #loc153, #loc147])
#loc468 = loc(fused[#loc154, #loc155])
#loc469 = loc(fused[#loc157, #loc158])
#loc470 = loc(fused[#loc160, #loc161])
#loc471 = loc(fused[#loc162, #loc155])
#loc472 = loc(fused[#loc164, #loc165])
#loc473 = loc(fused[#loc167, #loc168])
#loc474 = loc(fused[#loc170, #loc171])
#loc475 = loc(fused[#loc172, #loc165])
#loc476 = loc(fused[#loc174, #loc175])
#loc477 = loc(fused[#loc176, #loc177])
#loc478 = loc(fused[#loc178, #loc175])
#loc479 = loc(fused[#loc181, #loc182])
#loc480 = loc(fused[#loc183, #loc184])
#loc481 = loc(fused[#loc185, #loc182])
#loc482 = loc(fused[#loc188, #loc189])
#loc483 = loc(fused[#loc190, #loc191])
#loc484 = loc(fused[#loc192, #loc193])
#loc485 = loc(fused[#loc195, #loc196])
#loc486 = loc(fused[#loc197, #loc198])
#loc487 = loc(fused[#loc199, #loc200])
#loc488 = loc(fused[#loc201, #loc202])
#loc489 = loc(fused[#loc203, #loc204])
#loc490 = loc(fused[#loc205, #loc206])
#loc491 = loc(fused[#loc207, #loc208, #loc209, #loc204])
#loc492 = loc(fused[#loc211, #loc212])
#loc493 = loc(fused[#loc213, #loc214])
#loc494 = loc(fused[#loc216, #loc217])
#loc495 = loc(fused[#loc222, #loc223])
#loc496 = loc(fused[#loc224, #loc225])
#loc497 = loc(fused[#loc226, #loc227])
#loc498 = loc(fused[#loc228, #loc225])
#loc499 = loc(fused[#loc230, #loc231])
#loc500 = loc(fused[#loc233, #loc234])
#loc501 = loc(fused[#loc235, #loc236])
#loc502 = loc(fused[#loc238, #loc237])
#loc503 = loc(fused[#loc240, #loc239])
#loc504 = loc(fused[#loc243, #loc244])
#loc505 = loc(fused[#loc245, #loc246])
#loc506 = loc(fused[#loc248, #loc249])
#loc507 = loc(fused[#loc250, #loc251])
#loc508 = loc(fused[#loc252, #loc253])
#loc509 = loc(fused[#loc254, #loc246])
#loc510 = loc(fused[#loc256, #loc257])
#loc511 = loc(fused[#loc260, #loc261])
#loc512 = loc(fused[#loc262, #loc257])
#loc513 = loc(fused[#loc268, #loc269])
#loc514 = loc(fused[#loc270, #loc271])
#loc515 = loc(fused[#loc272, #loc273])
#loc516 = loc(fused[#loc274, #loc271])
#loc517 = loc(fused[#loc276, #loc277])
#loc518 = loc(fused[#loc280, #loc281])
#loc519 = loc(fused[#loc283, #loc284])
#loc520 = loc(fused[#loc285, #loc277])
#loc521 = loc(fused[#loc288, #loc289])
#loc522 = loc(fused[#loc290, #loc291])
#loc523 = loc(fused[#loc292, #loc289])
#loc524 = loc(fused[#loc295, #loc296])
#loc525 = loc(fused[#loc297, #loc298])
#loc526 = loc(fused[#loc299, #loc296])
#loc527 = loc(fused[#loc302, #loc303])
#loc528 = loc(fused[#loc304, #loc305])
#loc529 = loc(fused[#loc306, #loc307])
#loc530 = loc(fused[#loc308, #loc309])
#loc531 = loc(fused[#loc310, #loc311])
#loc532 = loc(fused[#loc312, #loc313])
#loc533 = loc(fused[#loc314, #loc311])
#loc534 = loc(fused[#loc315, #loc316])
#loc535 = loc(fused[#loc317, #loc318])
#loc536 = loc(fused[#loc320, #loc321])
#loc537 = loc(fused[#loc326, #loc327])
#loc538 = loc(fused[#loc328, #loc329])
#loc539 = loc(fused[#loc330, #loc331])
#loc540 = loc(fused[#loc332, #loc329])
#loc541 = loc(fused[#loc334, #loc335])
#loc542 = loc(fused[#loc337, #loc338])
#loc543 = loc(fused[#loc339, #loc340])
#loc544 = loc(fused[#loc342, #loc341])
#loc545 = loc(fused[#loc344, #loc343])
#loc546 = loc(fused[#loc347, #loc348])
#loc547 = loc(fused[#loc349, #loc350])
#loc548 = loc(fused[#loc352, #loc353])
#loc549 = loc(fused[#loc354, #loc355])
#loc550 = loc(fused[#loc356, #loc357])
#loc551 = loc(fused[#loc358, #loc350])
#loc552 = loc(fused[#loc360, #loc361])
#loc553 = loc(fused[#loc364, #loc365])
#loc554 = loc(fused[#loc366, #loc361])
#loc555 = loc(fused[#loc372, #loc373])
#loc556 = loc(fused[#loc374, #loc375])
#loc557 = loc(fused[#loc376, #loc377])
#loc558 = loc(fused[#loc378, #loc375])
#loc559 = loc(fused[#loc380, #loc381])
#loc560 = loc(fused[#loc384, #loc385])
#loc561 = loc(fused[#loc387, #loc388])
#loc562 = loc(fused[#loc389, #loc381])
#loc563 = loc(fused[#loc392, #loc393])
#loc564 = loc(fused[#loc394, #loc395])
#loc565 = loc(fused[#loc396, #loc393])
#loc566 = loc(fused[#loc399, #loc400])
#loc567 = loc(fused[#loc401, #loc402])
#loc568 = loc(fused[#loc403, #loc400])
