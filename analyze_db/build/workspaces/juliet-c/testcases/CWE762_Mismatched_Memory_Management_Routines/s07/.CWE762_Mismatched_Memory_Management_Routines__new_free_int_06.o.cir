!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc155)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc156)
  cir.func @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_063badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc158)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc9)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc159)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc13)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc14)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc161)
      cir.if %4 {
        %5 = cir.const #cir.int<4> : !u64i loc(#loc163)
        %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc18)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc163)
        cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc164)
      } loc(#loc162)
    } loc(#loc160)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc22)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc23)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc166)
      cir.if %4 {
        %5 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc25)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc26)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc26)
        cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc25)
      } loc(#loc167)
    } loc(#loc165)
    cir.return loc(#loc6)
  } loc(#loc157)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc168)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc29)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc169)
  cir.func internal private @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_06L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc171)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc36)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc172)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc40)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc41)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc174)
      cir.if %4 {
        %5 = cir.const #cir.int<4> : !u64i loc(#loc176)
        %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc45)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc176)
        cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc177)
      } loc(#loc175)
    } loc(#loc173)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc49)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc50)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc179)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc29)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc29)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc54)
      } else {
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc55)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc55)
        cir.call @_ZdlPv(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc45)
      } loc(#loc180)
    } loc(#loc178)
    cir.return loc(#loc33)
  } loc(#loc170)
  cir.func internal private @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_06L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc182)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc60)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc183)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc64)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc65)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc185)
      cir.if %4 {
        %5 = cir.const #cir.int<4> : !u64i loc(#loc187)
        %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc69)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc187)
        cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc188)
      } loc(#loc186)
    } loc(#loc184)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc73)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc74)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc190)
      cir.if %4 {
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc76)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc76)
        cir.call @_ZdlPv(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc69)
      } loc(#loc191)
    } loc(#loc189)
    cir.return loc(#loc57)
  } loc(#loc181)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc192)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc193)
  cir.func internal private @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_06L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc195)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc85)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc196)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc89)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc90)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc198)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc94)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc94)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc95)
      } else {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc96)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc97)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc97)
        %8 = cir.const #cir.int<4> : !u64i loc(#loc200)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc201)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc96)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc202)
        cir.store %11, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc203)
        cir.scope {
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc104)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc105)
          %14 = cir.cmp(eq, %12, %13) : !cir.ptr<!s32i>, !cir.bool loc(#loc205)
          cir.if %14 {
            %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc107)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc108)
            %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc109)
            cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc107)
          } loc(#loc206)
        } loc(#loc204)
      } loc(#loc199)
    } loc(#loc197)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc112)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc113)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc208)
      cir.if %4 {
        %5 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc115)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc116)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc116)
        cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc115)
      } loc(#loc209)
    } loc(#loc207)
    cir.return loc(#loc82)
  } loc(#loc194)
  cir.func internal private @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_06L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc211)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc121)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc212)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc125)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc126)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc214)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc128)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc129)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc129)
        %8 = cir.const #cir.int<4> : !u64i loc(#loc216)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc217)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc128)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc218)
        cir.store %11, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc219)
        cir.scope {
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc136)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc137)
          %14 = cir.cmp(eq, %12, %13) : !cir.ptr<!s32i>, !cir.bool loc(#loc221)
          cir.if %14 {
            %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc139)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc140)
            %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc141)
            cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc139)
          } loc(#loc222)
        } loc(#loc220)
      } loc(#loc215)
    } loc(#loc213)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc144)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc145)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc224)
      cir.if %4 {
        %5 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc147)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc148)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc148)
        cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc147)
      } loc(#loc225)
    } loc(#loc223)
    cir.return loc(#loc118)
  } loc(#loc210)
  cir.func @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_064goodEv() extra(#fn_attr1) {
    cir.call @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_06L8goodB2G1Ev() : () -> () loc(#loc151)
    cir.call @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_06L8goodB2G2Ev() : () -> () loc(#loc152)
    cir.call @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_06L8goodG2B1Ev() : () -> () loc(#loc153)
    cir.call @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_06L8goodG2B2Ev() : () -> () loc(#loc154)
    cir.return loc(#loc150)
  } loc(#loc226)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":30:1)
#loc6 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":46:1)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":32:5)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":32:11)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":34:12)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":34:5)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":35:5)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":39:5)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":35:8)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":35:27)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":36:5)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":38:16)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":38:20)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":30:6)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":38:9)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":40:5)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":45:5)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":40:8)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":40:27)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":41:5)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":44:9)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":44:14)
#loc27 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc28 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":66:19)
#loc30 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc31 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":53:1)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":73:1)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":55:5)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":55:11)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":57:12)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":57:5)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":58:5)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":62:5)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":58:8)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":58:27)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":59:5)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":61:16)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":61:20)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":53:13)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":61:9)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":63:5)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":72:5)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":63:8)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":63:27)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":64:5)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":67:5)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":69:5)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":66:9)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":71:16)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":76:1)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":91:1)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":78:5)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":78:11)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":80:12)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":80:5)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":81:5)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":85:5)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":81:8)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":81:27)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":82:5)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":84:16)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":84:20)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":76:13)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":84:9)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":86:5)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":90:5)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":86:8)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":86:27)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":87:5)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":89:16)
#loc77 = loc("/usr/include/stdlib.h":672:1)
#loc78 = loc("/usr/include/stdlib.h":672:45)
#loc79 = loc("/usr/include/stdlib.h":756:1)
#loc80 = loc("/usr/include/stdlib.h":756:70)
#loc81 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":94:1)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":116:1)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":96:5)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":96:11)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":98:12)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":98:5)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":99:5)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":109:5)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":99:8)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":99:27)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":100:5)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":103:5)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":105:5)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":102:19)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":102:9)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":107:23)
#loc97 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":107:30)
#loc98 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":107:34)
#loc99 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":107:44)
#loc100 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":107:45)
#loc101 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":107:9)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":108:9)
#loc103 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":108:37)
#loc104 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":108:13)
#loc105 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":108:21)
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":108:27)
#loc107 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":108:28)
#loc108 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":108:34)
#loc109 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":108:33)
#loc110 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":110:5)
#loc111 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":115:5)
#loc112 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":110:8)
#loc113 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":110:27)
#loc114 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":111:5)
#loc115 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":114:9)
#loc116 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":114:14)
#loc117 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":119:1)
#loc118 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":136:1)
#loc119 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":121:5)
#loc120 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":121:11)
#loc121 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":123:12)
#loc122 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":123:5)
#loc123 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":124:5)
#loc124 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":129:5)
#loc125 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":124:8)
#loc126 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":124:27)
#loc127 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":125:5)
#loc128 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":127:23)
#loc129 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":127:30)
#loc130 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":127:34)
#loc131 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":127:44)
#loc132 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":127:45)
#loc133 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":127:9)
#loc134 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":128:9)
#loc135 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":128:37)
#loc136 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":128:13)
#loc137 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":128:21)
#loc138 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":128:27)
#loc139 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":128:28)
#loc140 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":128:34)
#loc141 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":128:33)
#loc142 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":130:5)
#loc143 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":135:5)
#loc144 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":130:8)
#loc145 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":130:27)
#loc146 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":131:5)
#loc147 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":134:9)
#loc148 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":134:14)
#loc149 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":138:1)
#loc150 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":144:1)
#loc151 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":140:5)
#loc152 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":141:5)
#loc153 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":142:5)
#loc154 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_06.cpp":143:5)
#loc155 = loc(fused[#loc1, #loc2])
#loc156 = loc(fused[#loc3, #loc4])
#loc157 = loc(fused[#loc5, #loc6])
#loc158 = loc(fused[#loc7, #loc8])
#loc159 = loc(fused[#loc10, #loc9])
#loc160 = loc(fused[#loc11, #loc12])
#loc161 = loc(fused[#loc13, #loc14])
#loc162 = loc(fused[#loc15, #loc12])
#loc163 = loc(fused[#loc16, #loc17])
#loc164 = loc(fused[#loc19, #loc17])
#loc165 = loc(fused[#loc20, #loc21])
#loc166 = loc(fused[#loc22, #loc23])
#loc167 = loc(fused[#loc24, #loc21])
#loc168 = loc(fused[#loc27, #loc28])
#loc169 = loc(fused[#loc30, #loc31])
#loc170 = loc(fused[#loc32, #loc33])
#loc171 = loc(fused[#loc34, #loc35])
#loc172 = loc(fused[#loc37, #loc36])
#loc173 = loc(fused[#loc38, #loc39])
#loc174 = loc(fused[#loc40, #loc41])
#loc175 = loc(fused[#loc42, #loc39])
#loc176 = loc(fused[#loc43, #loc44])
#loc177 = loc(fused[#loc46, #loc44])
#loc178 = loc(fused[#loc47, #loc48])
#loc179 = loc(fused[#loc49, #loc50])
#loc180 = loc(fused[#loc51, #loc52, #loc53, #loc48])
#loc181 = loc(fused[#loc56, #loc57])
#loc182 = loc(fused[#loc58, #loc59])
#loc183 = loc(fused[#loc61, #loc60])
#loc184 = loc(fused[#loc62, #loc63])
#loc185 = loc(fused[#loc64, #loc65])
#loc186 = loc(fused[#loc66, #loc63])
#loc187 = loc(fused[#loc67, #loc68])
#loc188 = loc(fused[#loc70, #loc68])
#loc189 = loc(fused[#loc71, #loc72])
#loc190 = loc(fused[#loc73, #loc74])
#loc191 = loc(fused[#loc75, #loc72])
#loc192 = loc(fused[#loc77, #loc78])
#loc193 = loc(fused[#loc79, #loc80])
#loc194 = loc(fused[#loc81, #loc82])
#loc195 = loc(fused[#loc83, #loc84])
#loc196 = loc(fused[#loc86, #loc85])
#loc197 = loc(fused[#loc87, #loc88])
#loc198 = loc(fused[#loc89, #loc90])
#loc199 = loc(fused[#loc91, #loc92, #loc93, #loc88])
#loc200 = loc(fused[#loc98, #loc99])
#loc201 = loc(fused[#loc97, #loc99])
#loc202 = loc(fused[#loc96, #loc100])
#loc203 = loc(fused[#loc101, #loc100])
#loc204 = loc(fused[#loc102, #loc103])
#loc205 = loc(fused[#loc104, #loc105])
#loc206 = loc(fused[#loc106, #loc103])
#loc207 = loc(fused[#loc110, #loc111])
#loc208 = loc(fused[#loc112, #loc113])
#loc209 = loc(fused[#loc114, #loc111])
#loc210 = loc(fused[#loc117, #loc118])
#loc211 = loc(fused[#loc119, #loc120])
#loc212 = loc(fused[#loc122, #loc121])
#loc213 = loc(fused[#loc123, #loc124])
#loc214 = loc(fused[#loc125, #loc126])
#loc215 = loc(fused[#loc127, #loc124])
#loc216 = loc(fused[#loc130, #loc131])
#loc217 = loc(fused[#loc129, #loc131])
#loc218 = loc(fused[#loc128, #loc132])
#loc219 = loc(fused[#loc133, #loc132])
#loc220 = loc(fused[#loc134, #loc135])
#loc221 = loc(fused[#loc136, #loc137])
#loc222 = loc(fused[#loc138, #loc135])
#loc223 = loc(fused[#loc142, #loc143])
#loc224 = loc(fused[#loc144, #loc145])
#loc225 = loc(fused[#loc146, #loc143])
#loc226 = loc(fused[#loc149, #loc150])
