!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc369)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc370)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc371)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc372)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc373)
  cir.func private @strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc374)
  cir.func private @close(!s32i) -> !s32i loc(#loc375)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc376)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc377)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc378)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc22)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc379)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc380)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc27)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc382)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc32)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc32)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc383)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc36)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc36)
        cir.condition(%4) loc(#loc36)
      } do {
        cir.scope {
          cir.scope {
            %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc387)
            %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc388)
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc389)
            %6 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc390)
            %7 = cir.const #cir.int<1> : !s32i loc(#loc45)
            %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc45)
            cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc389)
            cir.scope {
              cir.do {
                cir.scope {
                  %9 = cir.const #cir.int<2> : !s32i loc(#loc52)
                  %10 = cir.const #cir.int<1> : !s32i loc(#loc53)
                  %11 = cir.const #cir.int<6> : !s32i loc(#loc54)
                  %12 = cir.call @socket(%9, %10, %11) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc55)
                  cir.store %12, %5 : !s32i, !cir.ptr<!s32i> loc(#loc393)
                  cir.scope {
                    %54 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc60)
                    %55 = cir.const #cir.int<1> : !s32i loc(#loc61)
                    %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc61)
                    %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc395)
                    cir.if %57 {
                      cir.break loc(#loc63)
                    } loc(#loc396)
                  } loc(#loc394)
                  %13 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc397)
                  %14 = cir.const #cir.int<0> : !s32i loc(#loc66)
                  %15 = cir.const #cir.int<16> : !u64i loc(#loc398)
                  cir.libc.memset %15 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc399)
                  %16 = cir.const #cir.int<2> : !s32i loc(#loc71)
                  %17 = cir.cast(integral, %16 : !s32i), !u16i loc(#loc71)
                  %18 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
                  cir.store %17, %18 : !u16i, !cir.ptr<!u16i> loc(#loc400)
                  %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
                  %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
                  %21 = cir.call @inet_addr(%20) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc74)
                  %22 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc75)
                  %23 = cir.get_member %22[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc76)
                  cir.store %21, %23 : !u32i, !cir.ptr<!u32i> loc(#loc401)
                  %24 = cir.const #cir.int<27015> : !s32i loc(#loc79)
                  %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc79)
                  %26 = cir.call @htons(%25) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc80)
                  %27 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
                  cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc402)
                  cir.scope {
                    %54 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc86)
                    %55 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc404)
                    %56 = cir.const #cir.int<16> : !u64i loc(#loc405)
                    %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc405)
                    %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc91)
                    %59 = cir.const #cir.int<1> : !s32i loc(#loc92)
                    %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc92)
                    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc406)
                    cir.if %61 {
                      cir.break loc(#loc94)
                    } loc(#loc407)
                  } loc(#loc403)
                  %28 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc95)
                  %29 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc96)
                  %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc96)
                  %31 = cir.const #cir.int<3> : !s32i loc(#loc97)
                  %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc97)
                  %33 = cir.const #cir.int<8> : !u64i loc(#loc97)
                  %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc97)
                  %35 = cir.const #cir.int<2> : !s32i loc(#loc97)
                  %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc97)
                  %37 = cir.binop(add, %34, %36) : !u64i loc(#loc97)
                  %38 = cir.const #cir.int<1> : !s32i loc(#loc98)
                  %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc98)
                  %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc408)
                  %41 = cir.const #cir.int<0> : !s32i loc(#loc99)
                  %42 = cir.call @recv(%28, %30, %40, %41) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc100)
                  %43 = cir.cast(integral, %42 : !s64i), !s32i loc(#loc100)
                  cir.store %43, %3 : !s32i, !cir.ptr<!s32i> loc(#loc409)
                  cir.scope {
                    %54 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc105)
                    %55 = cir.const #cir.int<1> : !s32i loc(#loc106)
                    %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc106)
                    %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc411)
                    %58 = cir.ternary(%57, true {
                      %59 = cir.const #true loc(#loc107)
                      cir.yield %59 : !cir.bool loc(#loc107)
                    }, false {
                      %59 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc108)
                      %60 = cir.const #cir.int<0> : !s32i loc(#loc109)
                      %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc412)
                      %62 = cir.ternary(%61, true {
                        %63 = cir.const #true loc(#loc107)
                        cir.yield %63 : !cir.bool loc(#loc107)
                      }, false {
                        %63 = cir.const #false loc(#loc107)
                        cir.yield %63 : !cir.bool loc(#loc107)
                      }) : (!cir.bool) -> !cir.bool loc(#loc107)
                      cir.yield %62 : !cir.bool loc(#loc107)
                    }) : (!cir.bool) -> !cir.bool loc(#loc107)
                    cir.if %58 {
                      cir.break loc(#loc111)
                    } loc(#loc413)
                  } loc(#loc410)
                  %44 = cir.const #cir.int<0> : !s32i loc(#loc112)
                  %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc112)
                  %46 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc113)
                  %47 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc114)
                  %48 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc114)
                  cir.store %45, %48 : !s8i, !cir.ptr<!s8i> loc(#loc414)
                  %49 = cir.get_global @strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc115)
                  %50 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc116)
                  %51 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
                  %52 = cir.const #cir.int<0> : !s32i loc(#loc118)
                  %53 = cir.call @strtoul(%50, %51, %52) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc115)
                  cir.store %53, %0 : !u64i, !cir.ptr<!u64i> loc(#loc415)
                } loc(#loc392)
                cir.yield loc(#loc49)
              } while {
                %9 = cir.const #cir.int<0> : !s32i loc(#loc121)
                %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc121)
                cir.condition(%10) loc(#loc121)
              } loc(#loc391)
            } loc(#loc391)
            cir.scope {
              %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc124)
              %10 = cir.const #cir.int<1> : !s32i loc(#loc125)
              %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc125)
              %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc417)
              cir.if %12 {
                %13 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc127)
                %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc128)
              } loc(#loc418)
            } loc(#loc416)
          } loc(#loc386)
          cir.break loc(#loc129)
        } loc(#loc385)
        cir.yield loc(#loc35)
      } loc(#loc384)
    } loc(#loc384)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc132)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc132)
        cir.condition(%4) loc(#loc132)
      } do {
        cir.scope {
          cir.scope {
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc422)
            cir.scope {
              %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc140)
              %5 = cir.const #cir.int<5> : !u64i loc(#loc424)
              %6 = cir.cmp(gt, %4, %5) : !u64i, !cir.bool loc(#loc425)
              cir.if %6 {
                %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc146)
                %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc147)
                %9 = cir.const #cir.int<1> : !u64i loc(#loc427)
                %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc428)
                %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc146)
                %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc429)
                cir.store %12, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc430)
                cir.scope {
                  %22 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
                  %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc155)
                  %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc155)
                  %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!s8i>, !cir.bool loc(#loc432)
                  cir.if %25 {
                    %26 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc157)
                    %27 = cir.const #cir.int<1> : !s32i loc(#loc158)
                    %28 = cir.unary(minus, %27) nsw : !s32i, !s32i loc(#loc159)
                    cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc157)
                  } loc(#loc433)
                } loc(#loc431)
                %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc160)
                %14 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
                %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc22)
                %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc22)
                %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc160)
                %18 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
                cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc163)
                %19 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc164)
                %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
                %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc165)
                cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc164)
              } else {
                %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc27)
                %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc27)
                cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc166)
              } loc(#loc426)
            } loc(#loc423)
          } loc(#loc421)
          cir.break loc(#loc167)
        } loc(#loc420)
        cir.yield loc(#loc131)
      } loc(#loc419)
    } loc(#loc419)
    cir.return loc(#loc29)
  } loc(#loc381)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc435)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc170)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc436)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc172)
    cir.return loc(#loc169)
  } loc(#loc434)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc174)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc438)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc179)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc179)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc439)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc183)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc183)
        cir.condition(%4) loc(#loc183)
      } do {
        cir.scope {
          cir.scope {
            %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc443)
            %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc444)
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc445)
            %6 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc446)
            %7 = cir.const #cir.int<1> : !s32i loc(#loc192)
            %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc192)
            cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc445)
            cir.scope {
              cir.do {
                cir.scope {
                  %9 = cir.const #cir.int<2> : !s32i loc(#loc199)
                  %10 = cir.const #cir.int<1> : !s32i loc(#loc200)
                  %11 = cir.const #cir.int<6> : !s32i loc(#loc201)
                  %12 = cir.call @socket(%9, %10, %11) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc202)
                  cir.store %12, %5 : !s32i, !cir.ptr<!s32i> loc(#loc449)
                  cir.scope {
                    %54 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc207)
                    %55 = cir.const #cir.int<1> : !s32i loc(#loc208)
                    %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc208)
                    %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc451)
                    cir.if %57 {
                      cir.break loc(#loc210)
                    } loc(#loc452)
                  } loc(#loc450)
                  %13 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc453)
                  %14 = cir.const #cir.int<0> : !s32i loc(#loc213)
                  %15 = cir.const #cir.int<16> : !u64i loc(#loc454)
                  cir.libc.memset %15 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc455)
                  %16 = cir.const #cir.int<2> : !s32i loc(#loc218)
                  %17 = cir.cast(integral, %16 : !s32i), !u16i loc(#loc218)
                  %18 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
                  cir.store %17, %18 : !u16i, !cir.ptr<!u16i> loc(#loc456)
                  %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc220)
                  %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc220)
                  %21 = cir.call @inet_addr(%20) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc221)
                  %22 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc75)
                  %23 = cir.get_member %22[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc76)
                  cir.store %21, %23 : !u32i, !cir.ptr<!u32i> loc(#loc457)
                  %24 = cir.const #cir.int<27015> : !s32i loc(#loc224)
                  %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc224)
                  %26 = cir.call @htons(%25) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc225)
                  %27 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
                  cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc458)
                  cir.scope {
                    %54 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc230)
                    %55 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc460)
                    %56 = cir.const #cir.int<16> : !u64i loc(#loc461)
                    %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc461)
                    %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc235)
                    %59 = cir.const #cir.int<1> : !s32i loc(#loc236)
                    %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc236)
                    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc462)
                    cir.if %61 {
                      cir.break loc(#loc238)
                    } loc(#loc463)
                  } loc(#loc459)
                  %28 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc239)
                  %29 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc240)
                  %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc240)
                  %31 = cir.const #cir.int<3> : !s32i loc(#loc241)
                  %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc241)
                  %33 = cir.const #cir.int<8> : !u64i loc(#loc241)
                  %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc241)
                  %35 = cir.const #cir.int<2> : !s32i loc(#loc241)
                  %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc241)
                  %37 = cir.binop(add, %34, %36) : !u64i loc(#loc241)
                  %38 = cir.const #cir.int<1> : !s32i loc(#loc242)
                  %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc242)
                  %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc464)
                  %41 = cir.const #cir.int<0> : !s32i loc(#loc243)
                  %42 = cir.call @recv(%28, %30, %40, %41) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc244)
                  %43 = cir.cast(integral, %42 : !s64i), !s32i loc(#loc244)
                  cir.store %43, %3 : !s32i, !cir.ptr<!s32i> loc(#loc465)
                  cir.scope {
                    %54 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc249)
                    %55 = cir.const #cir.int<1> : !s32i loc(#loc250)
                    %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc250)
                    %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc467)
                    %58 = cir.ternary(%57, true {
                      %59 = cir.const #true loc(#loc251)
                      cir.yield %59 : !cir.bool loc(#loc251)
                    }, false {
                      %59 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc252)
                      %60 = cir.const #cir.int<0> : !s32i loc(#loc253)
                      %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc468)
                      %62 = cir.ternary(%61, true {
                        %63 = cir.const #true loc(#loc251)
                        cir.yield %63 : !cir.bool loc(#loc251)
                      }, false {
                        %63 = cir.const #false loc(#loc251)
                        cir.yield %63 : !cir.bool loc(#loc251)
                      }) : (!cir.bool) -> !cir.bool loc(#loc251)
                      cir.yield %62 : !cir.bool loc(#loc251)
                    }) : (!cir.bool) -> !cir.bool loc(#loc251)
                    cir.if %58 {
                      cir.break loc(#loc255)
                    } loc(#loc469)
                  } loc(#loc466)
                  %44 = cir.const #cir.int<0> : !s32i loc(#loc256)
                  %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc256)
                  %46 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc257)
                  %47 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc258)
                  %48 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc258)
                  cir.store %45, %48 : !s8i, !cir.ptr<!s8i> loc(#loc470)
                  %49 = cir.get_global @strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc259)
                  %50 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc260)
                  %51 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc261)
                  %52 = cir.const #cir.int<0> : !s32i loc(#loc262)
                  %53 = cir.call @strtoul(%50, %51, %52) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc259)
                  cir.store %53, %0 : !u64i, !cir.ptr<!u64i> loc(#loc471)
                } loc(#loc448)
                cir.yield loc(#loc196)
              } while {
                %9 = cir.const #cir.int<0> : !s32i loc(#loc265)
                %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc265)
                cir.condition(%10) loc(#loc265)
              } loc(#loc447)
            } loc(#loc447)
            cir.scope {
              %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc268)
              %10 = cir.const #cir.int<1> : !s32i loc(#loc269)
              %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc269)
              %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc473)
              cir.if %12 {
                %13 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc271)
                %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc272)
              } loc(#loc474)
            } loc(#loc472)
          } loc(#loc442)
          cir.break loc(#loc273)
        } loc(#loc441)
        cir.yield loc(#loc182)
      } loc(#loc440)
    } loc(#loc440)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc276)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc276)
        cir.condition(%4) loc(#loc276)
      } do {
        cir.scope {
          cir.scope {
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc478)
            cir.scope {
              %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc284)
              %5 = cir.const #cir.int<5> : !u64i loc(#loc480)
              %6 = cir.cmp(gt, %4, %5) : !u64i, !cir.bool loc(#loc481)
              %7 = cir.ternary(%6, true {
                %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc288)
                %9 = cir.const #cir.int<100> : !s32i loc(#loc289)
                %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc289)
                %11 = cir.cmp(lt, %8, %10) : !u64i, !cir.bool loc(#loc482)
                %12 = cir.ternary(%11, true {
                  %13 = cir.const #true loc(#loc287)
                  cir.yield %13 : !cir.bool loc(#loc287)
                }, false {
                  %13 = cir.const #false loc(#loc287)
                  cir.yield %13 : !cir.bool loc(#loc287)
                }) : (!cir.bool) -> !cir.bool loc(#loc287)
                cir.yield %12 : !cir.bool loc(#loc287)
              }, false {
                %8 = cir.const #false loc(#loc287)
                cir.yield %8 : !cir.bool loc(#loc287)
              }) : (!cir.bool) -> !cir.bool loc(#loc287)
              cir.if %7 {
                %8 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc293)
                %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc294)
                %10 = cir.const #cir.int<1> : !u64i loc(#loc484)
                %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc485)
                %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc293)
                %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc486)
                cir.store %13, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc487)
                cir.scope {
                  %23 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc301)
                  %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc302)
                  %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc302)
                  %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc489)
                  cir.if %26 {
                    %27 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc304)
                    %28 = cir.const #cir.int<1> : !s32i loc(#loc305)
                    %29 = cir.unary(minus, %28) nsw : !s32i, !s32i loc(#loc306)
                    cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc304)
                  } loc(#loc490)
                } loc(#loc488)
                %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc307)
                %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc308)
                %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc309)
                %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc309)
                %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc307)
                %19 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc310)
                cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc311)
                %20 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc312)
                %21 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc313)
                %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc313)
                cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc312)
              } else {
                %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc174)
                %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc174)
                cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc314)
              } loc(#loc483)
            } loc(#loc479)
          } loc(#loc477)
          cir.break loc(#loc315)
        } loc(#loc476)
        cir.yield loc(#loc275)
      } loc(#loc475)
    } loc(#loc475)
    cir.return loc(#loc176)
  } loc(#loc437)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc492)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc320)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc320)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc493)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc324)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc324)
        cir.condition(%4) loc(#loc324)
      } do {
        cir.scope {
          %3 = cir.const #cir.int<20> : !s32i loc(#loc326)
          %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc326)
          cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc496)
          cir.break loc(#loc328)
        } loc(#loc495)
        cir.yield loc(#loc323)
      } loc(#loc494)
    } loc(#loc494)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc331)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc331)
        cir.condition(%4) loc(#loc331)
      } do {
        cir.scope {
          cir.scope {
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc500)
            cir.scope {
              %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc339)
              %5 = cir.const #cir.int<5> : !u64i loc(#loc502)
              %6 = cir.cmp(gt, %4, %5) : !u64i, !cir.bool loc(#loc503)
              cir.if %6 {
                %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc345)
                %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc346)
                %9 = cir.const #cir.int<1> : !u64i loc(#loc505)
                %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc506)
                %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc345)
                %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc507)
                cir.store %12, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc508)
                cir.scope {
                  %22 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc353)
                  %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc354)
                  %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc354)
                  %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!s8i>, !cir.bool loc(#loc510)
                  cir.if %25 {
                    %26 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc356)
                    %27 = cir.const #cir.int<1> : !s32i loc(#loc357)
                    %28 = cir.unary(minus, %27) nsw : !s32i, !s32i loc(#loc358)
                    cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc356)
                  } loc(#loc511)
                } loc(#loc509)
                %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc359)
                %14 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc360)
                %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc361)
                %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc361)
                %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc359)
                %18 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc362)
                cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc363)
                %19 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc364)
                %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc365)
                %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc365)
                cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc364)
              } else {
                %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc366)
                %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc366)
                cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc367)
              } loc(#loc504)
            } loc(#loc501)
          } loc(#loc499)
          cir.break loc(#loc368)
        } loc(#loc498)
        cir.yield loc(#loc330)
      } loc(#loc497)
    } loc(#loc497)
    cir.return loc(#loc317)
  } loc(#loc491)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":83:53)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":181:1)
#loc13 = loc("/usr/include/stdlib.h":183:14)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("/usr/include/stdlib.h":672:1)
#loc17 = loc("/usr/include/stdlib.h":672:45)
#loc18 = loc("/usr/include/stdlib.h":756:1)
#loc19 = loc("/usr/include/stdlib.h":756:70)
#loc20 = loc("/usr/include/string.h":141:1)
#loc21 = loc("/usr/include/string.h":142:14)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":127:34)
#loc23 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc24 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc25 = loc("/usr/include/stdlib.h":687:1)
#loc26 = loc("/usr/include/stdlib.h":687:32)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":133:27)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":50:1)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":138:1)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":52:5)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":52:12)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":54:12)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":54:5)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":55:5)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":114:5)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":55:11)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":56:5)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":57:9)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":112:9)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":62:13)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":62:17)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":63:13)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":63:32)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":64:13)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":64:36)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":65:13)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":65:45)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":66:13)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":101:21)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":67:13)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":100:13)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":76:40)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":76:49)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":76:62)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":76:33)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":76:17)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":76:73)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":77:17)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":80:17)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":77:21)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":77:38)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":78:17)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":79:21)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":81:24)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":81:25)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":81:34)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":81:37)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":81:51)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":81:17)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":81:52)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":82:38)
#loc72 = loc("/usr/include/netinet/in.h":249:5)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":82:17)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":83:43)
#loc75 = loc("/usr/include/netinet/in.h":251:20)
#loc76 = loc("/usr/include/netinet/in.h":33:15)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":83:17)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":83:63)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":84:42)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":84:36)
#loc81 = loc("/usr/include/netinet/in.h":250:15)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":84:17)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":84:50)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":85:17)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":88:17)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":85:29)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":85:62)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":85:63)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":85:72)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":85:86)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":85:21)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":85:92)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":86:17)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":87:21)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":91:35)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":91:50)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":91:63)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":91:81)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":91:84)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":91:30)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":91:17)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":91:85)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":92:17)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":95:17)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":92:21)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":92:35)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":92:48)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":92:51)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":92:65)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":93:17)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":94:21)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":97:43)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":97:29)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":97:17)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":99:24)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":99:32)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":99:45)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":99:51)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":99:17)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":99:52)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":101:20)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":102:13)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":105:13)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":102:17)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":102:34)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":103:13)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":104:30)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":104:17)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":113:9)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":115:5)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":137:5)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":115:11)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":116:5)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":117:9)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":135:9)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":118:13)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":118:20)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":122:13)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":134:13)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":122:17)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":122:24)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":122:43)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":123:13)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":130:13)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":132:13)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":124:36)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":124:43)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":124:48)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":124:59)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":124:60)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":124:17)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":125:17)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":125:49)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":125:21)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":125:33)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":125:39)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":125:40)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":125:46)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":125:45)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":127:17)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":127:24)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":128:27)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":128:17)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":129:17)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":129:22)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":133:17)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":136:9)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":272:1)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":276:1)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":274:5)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":274:13)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":275:5)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":275:13)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":228:27)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":145:1)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":233:1)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":147:5)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":147:12)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":149:12)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":149:5)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":150:5)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":209:5)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":150:11)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":151:5)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":152:9)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":207:9)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":157:13)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":157:17)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":158:13)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":158:32)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":159:13)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":159:36)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":160:13)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":160:45)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":161:13)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":196:21)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":162:13)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":195:13)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":171:40)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":171:49)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":171:62)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":171:33)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":171:17)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":171:73)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":172:17)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":175:17)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":172:21)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":172:38)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":173:17)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":174:21)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":176:24)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":176:25)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":176:34)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":176:37)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":176:51)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":176:17)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":176:52)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":177:38)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":177:17)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":178:53)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":178:43)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":178:17)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":178:63)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":179:42)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":179:36)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":179:17)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":179:50)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":180:17)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":183:17)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":180:29)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":180:62)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":180:63)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":180:72)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":180:86)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":180:21)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":180:92)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":181:17)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":182:21)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":186:35)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":186:50)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":186:63)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":186:81)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":186:84)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":186:30)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":186:17)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":186:85)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":187:17)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":190:17)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":187:21)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":187:35)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":187:48)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":187:51)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":187:65)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":188:17)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":189:21)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":192:43)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":192:29)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":192:17)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":194:24)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":194:32)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":194:45)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":194:51)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":194:17)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":194:52)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":196:20)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":197:13)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":200:13)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":197:17)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":197:34)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":198:13)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":199:30)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":199:17)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":208:9)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":210:5)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":232:5)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":210:11)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":211:5)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":212:9)
#loc279 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":230:9)
#loc280 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":213:13)
#loc281 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":213:20)
#loc282 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":217:13)
#loc283 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":229:13)
#loc284 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":217:17)
#loc285 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":217:24)
#loc286 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":217:43)
#loc287 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":217:45)
#loc288 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":217:48)
#loc289 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":217:55)
#loc290 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":218:13)
#loc291 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":225:13)
#loc292 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":227:13)
#loc293 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":219:36)
#loc294 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":219:43)
#loc295 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":219:48)
#loc296 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":219:59)
#loc297 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":219:60)
#loc298 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":219:17)
#loc299 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":220:17)
#loc300 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":220:49)
#loc301 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":220:21)
#loc302 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":220:33)
#loc303 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":220:39)
#loc304 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":220:40)
#loc305 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":220:46)
#loc306 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":220:45)
#loc307 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":222:17)
#loc308 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":222:24)
#loc309 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":222:34)
#loc310 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":223:27)
#loc311 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":223:17)
#loc312 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":224:17)
#loc313 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":224:22)
#loc314 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":228:17)
#loc315 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":231:9)
#loc316 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":236:1)
#loc317 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":270:1)
#loc318 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":238:5)
#loc319 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":238:12)
#loc320 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":240:12)
#loc321 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":240:5)
#loc322 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":241:5)
#loc323 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":246:5)
#loc324 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":241:11)
#loc325 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":242:5)
#loc326 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":244:16)
#loc327 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":244:9)
#loc328 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":245:9)
#loc329 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":247:5)
#loc330 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":269:5)
#loc331 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":247:11)
#loc332 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":248:5)
#loc333 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":249:9)
#loc334 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":267:9)
#loc335 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":250:13)
#loc336 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":250:20)
#loc337 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":254:13)
#loc338 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":266:13)
#loc339 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":254:17)
#loc340 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":254:24)
#loc341 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":254:43)
#loc342 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":255:13)
#loc343 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":262:13)
#loc344 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":264:13)
#loc345 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":256:36)
#loc346 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":256:43)
#loc347 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":256:48)
#loc348 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":256:59)
#loc349 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":256:60)
#loc350 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":256:17)
#loc351 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":257:17)
#loc352 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":257:49)
#loc353 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":257:21)
#loc354 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":257:33)
#loc355 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":257:39)
#loc356 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":257:40)
#loc357 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":257:46)
#loc358 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":257:45)
#loc359 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":259:17)
#loc360 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":259:24)
#loc361 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":259:34)
#loc362 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":260:27)
#loc363 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":260:17)
#loc364 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":261:17)
#loc365 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":261:22)
#loc366 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":265:27)
#loc367 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":265:17)
#loc368 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_16.c":268:9)
#loc369 = loc(fused[#loc1, #loc2])
#loc370 = loc(fused[#loc3, #loc4])
#loc371 = loc(fused[#loc6, #loc7])
#loc372 = loc(fused[#loc8, #loc9])
#loc373 = loc(fused[#loc10, #loc11])
#loc374 = loc(fused[#loc12, #loc13])
#loc375 = loc(fused[#loc14, #loc15])
#loc376 = loc(fused[#loc16, #loc17])
#loc377 = loc(fused[#loc18, #loc19])
#loc378 = loc(fused[#loc20, #loc21])
#loc379 = loc(fused[#loc23, #loc24])
#loc380 = loc(fused[#loc25, #loc26])
#loc381 = loc(fused[#loc28, #loc29])
#loc382 = loc(fused[#loc30, #loc31])
#loc383 = loc(fused[#loc33, #loc32])
#loc384 = loc(fused[#loc34, #loc35])
#loc385 = loc(fused[#loc37, #loc35])
#loc386 = loc(fused[#loc38, #loc39])
#loc387 = loc(fused[#loc40, #loc41])
#loc388 = loc(fused[#loc42, #loc43])
#loc389 = loc(fused[#loc44, #loc45])
#loc390 = loc(fused[#loc46, #loc47])
#loc391 = loc(fused[#loc48, #loc49])
#loc392 = loc(fused[#loc50, #loc51])
#loc393 = loc(fused[#loc56, #loc57])
#loc394 = loc(fused[#loc58, #loc59])
#loc395 = loc(fused[#loc60, #loc61])
#loc396 = loc(fused[#loc62, #loc59])
#loc397 = loc(fused[#loc64, #loc65])
#loc398 = loc(fused[#loc67, #loc68])
#loc399 = loc(fused[#loc69, #loc70])
#loc400 = loc(fused[#loc73, #loc71])
#loc401 = loc(fused[#loc77, #loc78])
#loc402 = loc(fused[#loc82, #loc83])
#loc403 = loc(fused[#loc84, #loc85])
#loc404 = loc(fused[#loc87, #loc88])
#loc405 = loc(fused[#loc89, #loc90])
#loc406 = loc(fused[#loc91, #loc92])
#loc407 = loc(fused[#loc93, #loc85])
#loc408 = loc(fused[#loc97, #loc98])
#loc409 = loc(fused[#loc101, #loc102])
#loc410 = loc(fused[#loc103, #loc104])
#loc411 = loc(fused[#loc105, #loc106])
#loc412 = loc(fused[#loc108, #loc109])
#loc413 = loc(fused[#loc110, #loc104])
#loc414 = loc(fused[#loc114, #loc112])
#loc415 = loc(fused[#loc119, #loc120])
#loc416 = loc(fused[#loc122, #loc123])
#loc417 = loc(fused[#loc124, #loc125])
#loc418 = loc(fused[#loc126, #loc123])
#loc419 = loc(fused[#loc130, #loc131])
#loc420 = loc(fused[#loc133, #loc131])
#loc421 = loc(fused[#loc134, #loc135])
#loc422 = loc(fused[#loc136, #loc137])
#loc423 = loc(fused[#loc138, #loc139])
#loc424 = loc(fused[#loc141, #loc142])
#loc425 = loc(fused[#loc140, #loc142])
#loc426 = loc(fused[#loc143, #loc144, #loc145, #loc139])
#loc427 = loc(fused[#loc148, #loc149])
#loc428 = loc(fused[#loc147, #loc149])
#loc429 = loc(fused[#loc146, #loc150])
#loc430 = loc(fused[#loc151, #loc150])
#loc431 = loc(fused[#loc152, #loc153])
#loc432 = loc(fused[#loc154, #loc155])
#loc433 = loc(fused[#loc156, #loc153])
#loc434 = loc(fused[#loc168, #loc169])
#loc435 = loc(fused[#loc170, #loc171])
#loc436 = loc(fused[#loc172, #loc173])
#loc437 = loc(fused[#loc175, #loc176])
#loc438 = loc(fused[#loc177, #loc178])
#loc439 = loc(fused[#loc180, #loc179])
#loc440 = loc(fused[#loc181, #loc182])
#loc441 = loc(fused[#loc184, #loc182])
#loc442 = loc(fused[#loc185, #loc186])
#loc443 = loc(fused[#loc187, #loc188])
#loc444 = loc(fused[#loc189, #loc190])
#loc445 = loc(fused[#loc191, #loc192])
#loc446 = loc(fused[#loc193, #loc194])
#loc447 = loc(fused[#loc195, #loc196])
#loc448 = loc(fused[#loc197, #loc198])
#loc449 = loc(fused[#loc203, #loc204])
#loc450 = loc(fused[#loc205, #loc206])
#loc451 = loc(fused[#loc207, #loc208])
#loc452 = loc(fused[#loc209, #loc206])
#loc453 = loc(fused[#loc211, #loc212])
#loc454 = loc(fused[#loc214, #loc215])
#loc455 = loc(fused[#loc216, #loc217])
#loc456 = loc(fused[#loc219, #loc218])
#loc457 = loc(fused[#loc222, #loc223])
#loc458 = loc(fused[#loc226, #loc227])
#loc459 = loc(fused[#loc228, #loc229])
#loc460 = loc(fused[#loc231, #loc232])
#loc461 = loc(fused[#loc233, #loc234])
#loc462 = loc(fused[#loc235, #loc236])
#loc463 = loc(fused[#loc237, #loc229])
#loc464 = loc(fused[#loc241, #loc242])
#loc465 = loc(fused[#loc245, #loc246])
#loc466 = loc(fused[#loc247, #loc248])
#loc467 = loc(fused[#loc249, #loc250])
#loc468 = loc(fused[#loc252, #loc253])
#loc469 = loc(fused[#loc254, #loc248])
#loc470 = loc(fused[#loc258, #loc256])
#loc471 = loc(fused[#loc263, #loc264])
#loc472 = loc(fused[#loc266, #loc267])
#loc473 = loc(fused[#loc268, #loc269])
#loc474 = loc(fused[#loc270, #loc267])
#loc475 = loc(fused[#loc274, #loc275])
#loc476 = loc(fused[#loc277, #loc275])
#loc477 = loc(fused[#loc278, #loc279])
#loc478 = loc(fused[#loc280, #loc281])
#loc479 = loc(fused[#loc282, #loc283])
#loc480 = loc(fused[#loc285, #loc286])
#loc481 = loc(fused[#loc284, #loc286])
#loc482 = loc(fused[#loc288, #loc289])
#loc483 = loc(fused[#loc290, #loc291, #loc292, #loc283])
#loc484 = loc(fused[#loc295, #loc296])
#loc485 = loc(fused[#loc294, #loc296])
#loc486 = loc(fused[#loc293, #loc297])
#loc487 = loc(fused[#loc298, #loc297])
#loc488 = loc(fused[#loc299, #loc300])
#loc489 = loc(fused[#loc301, #loc302])
#loc490 = loc(fused[#loc303, #loc300])
#loc491 = loc(fused[#loc316, #loc317])
#loc492 = loc(fused[#loc318, #loc319])
#loc493 = loc(fused[#loc321, #loc320])
#loc494 = loc(fused[#loc322, #loc323])
#loc495 = loc(fused[#loc325, #loc323])
#loc496 = loc(fused[#loc327, #loc326])
#loc497 = loc(fused[#loc329, #loc330])
#loc498 = loc(fused[#loc332, #loc330])
#loc499 = loc(fused[#loc333, #loc334])
#loc500 = loc(fused[#loc335, #loc336])
#loc501 = loc(fused[#loc337, #loc338])
#loc502 = loc(fused[#loc340, #loc341])
#loc503 = loc(fused[#loc339, #loc341])
#loc504 = loc(fused[#loc342, #loc343, #loc344, #loc338])
#loc505 = loc(fused[#loc347, #loc348])
#loc506 = loc(fused[#loc346, #loc348])
#loc507 = loc(fused[#loc345, #loc349])
#loc508 = loc(fused[#loc350, #loc349])
#loc509 = loc(fused[#loc351, #loc352])
#loc510 = loc(fused[#loc353, #loc354])
#loc511 = loc(fused[#loc355, #loc352])
