!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc216)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"output_bad.txt\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc3)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc217)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc6)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc218)
  cir.func private @fwrite(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc219)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"This is the sentence we are printing to the file. \00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc11)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc220)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_fwrite_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc222)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc223)
    %2 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc224)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc225)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc24)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc226)
    cir.goto "source" loc(#loc227)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc28)
    %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc29)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %8 = cir.binop(and, %6, %7) : !s32i loc(#loc29)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc29)
    %10 = cir.ternary(%9, true {
      %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc29)
      %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc29)
      %24 = cir.const #cir.int<30> : !s32i loc(#loc29)
      %25 = cir.shift(left, %23 : !u32i, %24 : !s32i) -> !u32i loc(#loc29)
      %26 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc29)
      %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc29)
      %28 = cir.const #cir.int<15> : !s32i loc(#loc29)
      %29 = cir.shift(left, %27 : !u32i, %28 : !s32i) -> !u32i loc(#loc29)
      %30 = cir.binop(xor, %25, %29) : !u32i loc(#loc29)
      %31 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc29)
      %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc29)
      %33 = cir.binop(xor, %30, %32) : !u32i loc(#loc29)
      cir.yield %33 : !u32i loc(#loc29)
    }, false {
      %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc29)
      %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc29)
      %24 = cir.const #cir.int<30> : !s32i loc(#loc29)
      %25 = cir.shift(left, %23 : !u32i, %24 : !s32i) -> !u32i loc(#loc29)
      %26 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc29)
      %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc29)
      %28 = cir.const #cir.int<15> : !s32i loc(#loc29)
      %29 = cir.shift(left, %27 : !u32i, %28 : !s32i) -> !u32i loc(#loc29)
      %30 = cir.binop(xor, %25, %29) : !u32i loc(#loc29)
      %31 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc29)
      %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc29)
      %33 = cir.binop(xor, %30, %32) : !u32i loc(#loc29)
      %34 = cir.unary(minus, %33) : !u32i, !u32i loc(#loc29)
      %35 = cir.const #cir.int<1> : !s32i loc(#loc29)
      %36 = cir.cast(integral, %35 : !s32i), !u32i loc(#loc29)
      %37 = cir.binop(sub, %34, %36) : !u32i loc(#loc29)
      cir.yield %37 : !u32i loc(#loc29)
    }) : (!cir.bool) -> !u32i loc(#loc29)
    %11 = cir.cast(integral, %10 : !u32i), !s32i loc(#loc29)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc228)
    cir.goto "sink" loc(#loc229)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc33)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc19)
    cir.store %13, %1 : !u64i, !cir.ptr<!u64i> loc(#loc223)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc21)
    cir.store %14, %2 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc224)
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc3)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc3)
    cir.store %16, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc225)
    %17 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc34)
    %18 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc6)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc6)
    %21 = cir.call @fopen(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc34)
    cir.store %21, %2 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc230)
    cir.scope {
      %22 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc40)
      %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
      %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc41)
      %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc232)
      cir.if %25 {
        %26 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc43)
        %27 = cir.const #cir.int<1> : !s32i loc(#loc44)
        cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc43)
      } loc(#loc233)
    } loc(#loc231)
    cir.scope {
      %22 = cir.const #cir.int<0> : !s32i loc(#loc47)
      %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc47)
      cir.store %23, %1 : !u64i, !cir.ptr<!u64i> loc(#loc235)
      cir.for : cond {
        %24 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc49)
        %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc50)
        %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc50)
        %27 = cir.cmp(lt, %24, %26) : !u64i, !cir.bool loc(#loc236)
        cir.condition(%27) loc(#loc51)
      } body {
        cir.scope {
          cir.scope {
            %24 = cir.const #cir.int<50> : !u64i loc(#loc239)
            %25 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc57)
            %26 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc11)
            %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc11)
            %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc11)
            %29 = cir.const #cir.int<1> : !u64i loc(#loc240)
            %30 = cir.const #cir.int<50> : !u64i loc(#loc241)
            %31 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc62)
            %32 = cir.call @fwrite(%28, %29, %30, %31) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc57)
            %33 = cir.cmp(ne, %24, %32) : !u64i, !cir.bool loc(#loc242)
            cir.if %33 {
              %34 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc65)
              %35 = cir.const #cir.int<1> : !s32i loc(#loc66)
              cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc65)
            } loc(#loc243)
          } loc(#loc238)
        } loc(#loc237)
        cir.yield loc(#loc46)
      } step {
        %24 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc67)
        %25 = cir.unary(inc, %24) : !u64i, !u64i loc(#loc68)
        cir.store %25, %1 : !u64i, !cir.ptr<!u64i> loc(#loc244)
        cir.yield loc(#loc234)
      } loc(#loc234)
    } loc(#loc234)
    cir.scope {
      %22 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc71)
      %23 = cir.cast(ptr_to_bool, %22 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc71)
      cir.if %23 {
        %24 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc73)
        %25 = cir.call @fclose(%24) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc74)
      } loc(#loc246)
    } loc(#loc245)
    cir.return loc(#loc15)
  } loc(#loc221)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_fwrite_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc248)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc77)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc249)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc79)
    cir.return loc(#loc76)
  } loc(#loc247)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"output_good.txt\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc81)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc251)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc252)
    %2 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc253)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc254)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc91)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc92)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc255)
    cir.goto "source" loc(#loc256)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc96)
    %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc97)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %8 = cir.binop(and, %6, %7) : !s32i loc(#loc97)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc97)
    %10 = cir.ternary(%9, true {
      %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc97)
      %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc97)
      %19 = cir.const #cir.int<30> : !s32i loc(#loc97)
      %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc97)
      %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc97)
      %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc97)
      %23 = cir.const #cir.int<15> : !s32i loc(#loc97)
      %24 = cir.shift(left, %22 : !u32i, %23 : !s32i) -> !u32i loc(#loc97)
      %25 = cir.binop(xor, %20, %24) : !u32i loc(#loc97)
      %26 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc97)
      %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc97)
      %28 = cir.binop(xor, %25, %27) : !u32i loc(#loc97)
      cir.yield %28 : !u32i loc(#loc97)
    }, false {
      %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc97)
      %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc97)
      %19 = cir.const #cir.int<30> : !s32i loc(#loc97)
      %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc97)
      %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc97)
      %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc97)
      %23 = cir.const #cir.int<15> : !s32i loc(#loc97)
      %24 = cir.shift(left, %22 : !u32i, %23 : !s32i) -> !u32i loc(#loc97)
      %25 = cir.binop(xor, %20, %24) : !u32i loc(#loc97)
      %26 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc97)
      %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc97)
      %28 = cir.binop(xor, %25, %27) : !u32i loc(#loc97)
      %29 = cir.unary(minus, %28) : !u32i, !u32i loc(#loc97)
      %30 = cir.const #cir.int<1> : !s32i loc(#loc97)
      %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc97)
      %32 = cir.binop(sub, %29, %31) : !u32i loc(#loc97)
      cir.yield %32 : !u32i loc(#loc97)
    }) : (!cir.bool) -> !u32i loc(#loc97)
    %11 = cir.cast(integral, %10 : !u32i), !s32i loc(#loc97)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc257)
    cir.goto "sink" loc(#loc258)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc101)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc87)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc87)
    cir.store %13, %1 : !u64i, !cir.ptr<!u64i> loc(#loc252)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc89)
    cir.store %14, %2 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc253)
    %15 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc81)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc81)
    cir.store %16, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc254)
    cir.scope {
      %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc104)
      %18 = cir.const #cir.int<0> : !s32i loc(#loc105)
      %19 = cir.cmp(gt, %17, %18) : !s32i, !cir.bool loc(#loc260)
      %20 = cir.ternary(%19, true {
        %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc107)
        %22 = cir.const #cir.int<20> : !s32i loc(#loc108)
        %23 = cir.cmp(le, %21, %22) : !s32i, !cir.bool loc(#loc261)
        %24 = cir.ternary(%23, true {
          %25 = cir.const #true loc(#loc106)
          cir.yield %25 : !cir.bool loc(#loc106)
        }, false {
          %25 = cir.const #false loc(#loc106)
          cir.yield %25 : !cir.bool loc(#loc106)
        }) : (!cir.bool) -> !cir.bool loc(#loc106)
        cir.yield %24 : !cir.bool loc(#loc106)
      }, false {
        %21 = cir.const #false loc(#loc106)
        cir.yield %21 : !cir.bool loc(#loc106)
      }) : (!cir.bool) -> !cir.bool loc(#loc106)
      cir.if %20 {
        %21 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc110)
        %22 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
        %23 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc112)
        %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc112)
        %25 = cir.call @fopen(%22, %24) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc110)
        cir.store %25, %2 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc263)
        cir.scope {
          %26 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc117)
          %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc118)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc118)
          %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc265)
          cir.if %29 {
            %30 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc120)
            %31 = cir.const #cir.int<1> : !s32i loc(#loc121)
            cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc120)
          } loc(#loc266)
        } loc(#loc264)
        cir.scope {
          %26 = cir.const #cir.int<0> : !s32i loc(#loc124)
          %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc124)
          cir.store %27, %1 : !u64i, !cir.ptr<!u64i> loc(#loc268)
          cir.for : cond {
            %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc126)
            %29 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc127)
            %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc127)
            %31 = cir.cmp(lt, %28, %30) : !u64i, !cir.bool loc(#loc269)
            cir.condition(%31) loc(#loc128)
          } body {
            cir.scope {
              cir.scope {
                %28 = cir.const #cir.int<50> : !u64i loc(#loc272)
                %29 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc134)
                %30 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc135)
                %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc135)
                %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc135)
                %33 = cir.const #cir.int<1> : !u64i loc(#loc273)
                %34 = cir.const #cir.int<50> : !u64i loc(#loc274)
                %35 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc140)
                %36 = cir.call @fwrite(%32, %33, %34, %35) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc134)
                %37 = cir.cmp(ne, %28, %36) : !u64i, !cir.bool loc(#loc275)
                cir.if %37 {
                  %38 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc142)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc143)
                  cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc142)
                } loc(#loc276)
              } loc(#loc271)
            } loc(#loc270)
            cir.yield loc(#loc123)
          } step {
            %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc144)
            %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc145)
            cir.store %29, %1 : !u64i, !cir.ptr<!u64i> loc(#loc277)
            cir.yield loc(#loc267)
          } loc(#loc267)
        } loc(#loc267)
        cir.scope {
          %26 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc148)
          %27 = cir.cast(ptr_to_bool, %26 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc148)
          cir.if %27 {
            %28 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc150)
            %29 = cir.call @fclose(%28) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc151)
          } loc(#loc279)
        } loc(#loc278)
      } loc(#loc262)
    } loc(#loc259)
    cir.return loc(#loc83)
  } loc(#loc250)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc281)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc282)
    %2 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc283)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc284)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc162)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc163)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc285)
    cir.goto "source" loc(#loc286)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc167)
    %6 = cir.const #cir.int<20> : !s32i loc(#loc168)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc287)
    cir.goto "sink" loc(#loc288)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc172)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc157)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc157)
    cir.store %8, %1 : !u64i, !cir.ptr<!u64i> loc(#loc282)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc159)
    cir.store %9, %2 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc283)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc161)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc161)
    cir.store %11, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc284)
    %12 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc173)
    %13 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc174)
    %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc175)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc175)
    %16 = cir.call @fopen(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc173)
    cir.store %16, %2 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc289)
    cir.scope {
      %17 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc180)
      %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc181)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc181)
      %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc291)
      cir.if %20 {
        %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc183)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc184)
        cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc183)
      } loc(#loc292)
    } loc(#loc290)
    cir.scope {
      %17 = cir.const #cir.int<0> : !s32i loc(#loc187)
      %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc187)
      cir.store %18, %1 : !u64i, !cir.ptr<!u64i> loc(#loc294)
      cir.for : cond {
        %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc189)
        %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc190)
        %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc190)
        %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc295)
        cir.condition(%22) loc(#loc191)
      } body {
        cir.scope {
          cir.scope {
            %19 = cir.const #cir.int<50> : !u64i loc(#loc298)
            %20 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc197)
            %21 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc198)
            %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc198)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc198)
            %24 = cir.const #cir.int<1> : !u64i loc(#loc299)
            %25 = cir.const #cir.int<50> : !u64i loc(#loc300)
            %26 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc203)
            %27 = cir.call @fwrite(%23, %24, %25, %26) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc197)
            %28 = cir.cmp(ne, %19, %27) : !u64i, !cir.bool loc(#loc301)
            cir.if %28 {
              %29 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc206)
              %30 = cir.const #cir.int<1> : !s32i loc(#loc207)
              cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc206)
            } loc(#loc302)
          } loc(#loc297)
        } loc(#loc296)
        cir.yield loc(#loc186)
      } step {
        %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc208)
        %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc209)
        cir.store %20, %1 : !u64i, !cir.ptr<!u64i> loc(#loc303)
        cir.yield loc(#loc293)
      } loc(#loc293)
    } loc(#loc293)
    cir.scope {
      %17 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc212)
      %18 = cir.cast(ptr_to_bool, %17 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc212)
      cir.if %18 {
        %19 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc214)
        %20 = cir.call @fclose(%19) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc215)
      } loc(#loc305)
    } loc(#loc304)
    cir.return loc(#loc153)
  } loc(#loc280)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_18.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":38:32)
#loc4 = loc("/usr/include/stdio.h":264:1)
#loc5 = loc("/usr/include/stdio.h":266:3)
#loc6 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":39:33)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("/usr/include/stdio.h":745:1)
#loc10 = loc("/usr/include/stdio.h":746:43)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":48:44)
#loc12 = loc("/usr/include/stdio.h":184:1)
#loc13 = loc("/usr/include/stdio.h":184:36)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":24:1)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":58:1)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":26:5)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":26:9)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":36:9)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":36:20)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":37:9)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":37:23)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":38:9)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":28:14)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":28:13)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":28:5)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":29:5)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":29:10)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":30:1)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":32:13)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":32:5)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":33:5)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":33:10)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":34:1)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":39:17)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":39:23)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":39:9)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":39:37)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":40:9)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":43:9)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":40:13)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":40:22)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":41:9)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":42:13)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":42:18)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":46:9)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":52:9)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":46:18)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":46:14)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":46:21)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":46:33)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":46:23)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":47:9)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":48:13)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":51:13)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":48:17)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":48:32)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":48:37)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":48:54)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":48:65)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":48:68)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":48:83)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":48:86)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":48:91)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":49:13)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":50:17)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":50:22)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":46:41)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":46:40)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":53:9)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":56:9)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":53:13)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":54:9)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":55:20)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":55:13)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":137:1)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":141:1)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":139:5)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":139:13)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":140:5)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":140:13)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":79:32)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":65:1)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":98:1)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":67:5)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":67:9)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":77:9)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":77:20)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":78:9)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":78:23)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":79:9)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":69:14)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":69:13)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":69:5)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":70:5)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":70:10)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":71:1)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":73:13)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":73:5)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":74:5)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":74:10)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":75:1)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":81:9)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":96:9)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":81:13)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":81:21)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":81:23)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":81:26)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":81:35)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":82:9)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":83:21)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":83:27)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":83:37)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":83:13)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":83:41)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":84:13)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":87:13)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":84:17)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":84:26)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":85:13)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":86:17)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":86:22)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":88:13)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":91:13)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":88:22)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":88:18)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":88:25)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":88:37)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":88:27)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":89:13)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":90:17)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":90:104)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":90:21)
#loc133 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":90:36)
#loc134 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":90:41)
#loc135 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":90:48)
#loc136 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":90:58)
#loc137 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":90:69)
#loc138 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":90:72)
#loc139 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":90:87)
#loc140 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":90:90)
#loc141 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":90:95)
#loc142 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":90:98)
#loc143 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":90:103)
#loc144 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":88:45)
#loc145 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":88:44)
#loc146 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":92:13)
#loc147 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":95:13)
#loc148 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":92:17)
#loc149 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":93:13)
#loc150 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":94:24)
#loc151 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":94:17)
#loc152 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":101:1)
#loc153 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":135:1)
#loc154 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":103:5)
#loc155 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":103:9)
#loc156 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":113:9)
#loc157 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":113:20)
#loc158 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":114:9)
#loc159 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":114:23)
#loc160 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":115:9)
#loc161 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":115:32)
#loc162 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":105:14)
#loc163 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":105:13)
#loc164 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":105:5)
#loc165 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":106:5)
#loc166 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":106:10)
#loc167 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":107:1)
#loc168 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":109:13)
#loc169 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":109:5)
#loc170 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":110:5)
#loc171 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":110:10)
#loc172 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":111:1)
#loc173 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":116:17)
#loc174 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":116:23)
#loc175 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":116:33)
#loc176 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":116:9)
#loc177 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":116:37)
#loc178 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":117:9)
#loc179 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":120:9)
#loc180 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":117:13)
#loc181 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":117:22)
#loc182 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":118:9)
#loc183 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":119:13)
#loc184 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":119:18)
#loc185 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":123:9)
#loc186 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":129:9)
#loc187 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":123:18)
#loc188 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":123:14)
#loc189 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":123:21)
#loc190 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":123:33)
#loc191 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":123:23)
#loc192 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":124:9)
#loc193 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":125:13)
#loc194 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":128:13)
#loc195 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":125:17)
#loc196 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":125:32)
#loc197 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":125:37)
#loc198 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":125:44)
#loc199 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":125:54)
#loc200 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":125:65)
#loc201 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":125:68)
#loc202 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":125:83)
#loc203 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":125:86)
#loc204 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":125:91)
#loc205 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":126:13)
#loc206 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":127:17)
#loc207 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":127:22)
#loc208 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":123:41)
#loc209 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":123:40)
#loc210 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":130:9)
#loc211 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":133:9)
#loc212 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":130:13)
#loc213 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":131:9)
#loc214 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":132:20)
#loc215 = loc("CWE400_Resource_Exhaustion__rand_fwrite_18.c":132:13)
#loc216 = loc(fused[#loc1, #loc2])
#loc217 = loc(fused[#loc4, #loc5])
#loc218 = loc(fused[#loc7, #loc8])
#loc219 = loc(fused[#loc9, #loc10])
#loc220 = loc(fused[#loc12, #loc13])
#loc221 = loc(fused[#loc14, #loc15])
#loc222 = loc(fused[#loc16, #loc17])
#loc223 = loc(fused[#loc18, #loc19])
#loc224 = loc(fused[#loc20, #loc21])
#loc225 = loc(fused[#loc22, #loc3])
#loc226 = loc(fused[#loc25, #loc23])
#loc227 = loc(fused[#loc26, #loc27])
#loc228 = loc(fused[#loc30, #loc29])
#loc229 = loc(fused[#loc31, #loc32])
#loc230 = loc(fused[#loc36, #loc37])
#loc231 = loc(fused[#loc38, #loc39])
#loc232 = loc(fused[#loc40, #loc41])
#loc233 = loc(fused[#loc42, #loc39])
#loc234 = loc(fused[#loc45, #loc46])
#loc235 = loc(fused[#loc48, #loc47])
#loc236 = loc(fused[#loc49, #loc50])
#loc237 = loc(fused[#loc52, #loc46])
#loc238 = loc(fused[#loc53, #loc54])
#loc239 = loc(fused[#loc55, #loc56])
#loc240 = loc(fused[#loc58, #loc59])
#loc241 = loc(fused[#loc60, #loc61])
#loc242 = loc(fused[#loc55, #loc63])
#loc243 = loc(fused[#loc64, #loc54])
#loc244 = loc(fused[#loc68, #loc67])
#loc245 = loc(fused[#loc69, #loc70])
#loc246 = loc(fused[#loc72, #loc70])
#loc247 = loc(fused[#loc75, #loc76])
#loc248 = loc(fused[#loc77, #loc78])
#loc249 = loc(fused[#loc79, #loc80])
#loc250 = loc(fused[#loc82, #loc83])
#loc251 = loc(fused[#loc84, #loc85])
#loc252 = loc(fused[#loc86, #loc87])
#loc253 = loc(fused[#loc88, #loc89])
#loc254 = loc(fused[#loc90, #loc81])
#loc255 = loc(fused[#loc93, #loc91])
#loc256 = loc(fused[#loc94, #loc95])
#loc257 = loc(fused[#loc98, #loc97])
#loc258 = loc(fused[#loc99, #loc100])
#loc259 = loc(fused[#loc102, #loc103])
#loc260 = loc(fused[#loc104, #loc105])
#loc261 = loc(fused[#loc107, #loc108])
#loc262 = loc(fused[#loc109, #loc103])
#loc263 = loc(fused[#loc113, #loc114])
#loc264 = loc(fused[#loc115, #loc116])
#loc265 = loc(fused[#loc117, #loc118])
#loc266 = loc(fused[#loc119, #loc116])
#loc267 = loc(fused[#loc122, #loc123])
#loc268 = loc(fused[#loc125, #loc124])
#loc269 = loc(fused[#loc126, #loc127])
#loc270 = loc(fused[#loc129, #loc123])
#loc271 = loc(fused[#loc130, #loc131])
#loc272 = loc(fused[#loc132, #loc133])
#loc273 = loc(fused[#loc136, #loc137])
#loc274 = loc(fused[#loc138, #loc139])
#loc275 = loc(fused[#loc132, #loc141])
#loc276 = loc(fused[#loc142, #loc131])
#loc277 = loc(fused[#loc145, #loc144])
#loc278 = loc(fused[#loc146, #loc147])
#loc279 = loc(fused[#loc149, #loc147])
#loc280 = loc(fused[#loc152, #loc153])
#loc281 = loc(fused[#loc154, #loc155])
#loc282 = loc(fused[#loc156, #loc157])
#loc283 = loc(fused[#loc158, #loc159])
#loc284 = loc(fused[#loc160, #loc161])
#loc285 = loc(fused[#loc164, #loc162])
#loc286 = loc(fused[#loc165, #loc166])
#loc287 = loc(fused[#loc169, #loc168])
#loc288 = loc(fused[#loc170, #loc171])
#loc289 = loc(fused[#loc176, #loc177])
#loc290 = loc(fused[#loc178, #loc179])
#loc291 = loc(fused[#loc180, #loc181])
#loc292 = loc(fused[#loc182, #loc179])
#loc293 = loc(fused[#loc185, #loc186])
#loc294 = loc(fused[#loc188, #loc187])
#loc295 = loc(fused[#loc189, #loc190])
#loc296 = loc(fused[#loc192, #loc186])
#loc297 = loc(fused[#loc193, #loc194])
#loc298 = loc(fused[#loc195, #loc196])
#loc299 = loc(fused[#loc199, #loc200])
#loc300 = loc(fused[#loc201, #loc202])
#loc301 = loc(fused[#loc195, #loc204])
#loc302 = loc(fused[#loc205, #loc194])
#loc303 = loc(fused[#loc209, #loc208])
#loc304 = loc(fused[#loc210, #loc211])
#loc305 = loc(fused[#loc213, #loc211])
