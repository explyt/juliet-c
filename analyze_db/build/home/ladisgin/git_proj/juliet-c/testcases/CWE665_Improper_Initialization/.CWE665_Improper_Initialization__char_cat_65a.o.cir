!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_cat_65a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @CWE665_Improper_Initialization__char_cat_65b_badSink(!cir.ptr<!s8i>) loc(#loc37)
  cir.func no_proto @CWE665_Improper_Initialization__char_cat_65_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc39)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc40)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc41)
    %3 = cir.get_global @CWE665_Improper_Initialization__char_cat_65b_badSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc8)
    cir.store %3, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc40)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc11)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc42)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc13)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc14)
    cir.call %5(%6) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc13)
    cir.return loc(#loc4)
  } loc(#loc38)
  cir.func no_proto @CWE665_Improper_Initialization__char_cat_65_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc44)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc17)
    cir.return loc(#loc16)
  } loc(#loc43)
  cir.func private @CWE665_Improper_Initialization__char_cat_65b_goodG2BSink(!cir.ptr<!s8i>) loc(#loc45)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc47)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc48)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc49)
    %3 = cir.get_global @CWE665_Improper_Initialization__char_cat_65b_goodG2BSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc26)
    cir.store %3, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc48)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc29)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc50)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc31)
    %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc31)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %9 = cir.ptr_stride(%7 : !cir.ptr<!s8i>, %8 : !s32i), !cir.ptr<!s8i> loc(#loc34)
    cir.store %6, %9 : !s8i, !cir.ptr<!s8i> loc(#loc51)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc35)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    cir.call %10(%11) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc35)
    cir.return loc(#loc22)
  } loc(#loc46)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_cat_65a.c":0:0)
#loc1 = loc("CWE665_Improper_Initialization__char_cat_65a.c":24:1)
#loc2 = loc("CWE665_Improper_Initialization__char_cat_65a.c":24:70)
#loc3 = loc("CWE665_Improper_Initialization__char_cat_65a.c":26:1)
#loc4 = loc("CWE665_Improper_Initialization__char_cat_65a.c":37:1)
#loc5 = loc("CWE665_Improper_Initialization__char_cat_65a.c":28:5)
#loc6 = loc("CWE665_Improper_Initialization__char_cat_65a.c":28:12)
#loc7 = loc("CWE665_Improper_Initialization__char_cat_65a.c":30:5)
#loc8 = loc("CWE665_Improper_Initialization__char_cat_65a.c":30:32)
#loc9 = loc("CWE665_Improper_Initialization__char_cat_65a.c":31:5)
#loc10 = loc("CWE665_Improper_Initialization__char_cat_65a.c":31:24)
#loc11 = loc("CWE665_Improper_Initialization__char_cat_65a.c":32:12)
#loc12 = loc("CWE665_Improper_Initialization__char_cat_65a.c":32:5)
#loc13 = loc("CWE665_Improper_Initialization__char_cat_65a.c":36:5)
#loc14 = loc("CWE665_Improper_Initialization__char_cat_65a.c":36:13)
#loc15 = loc("CWE665_Improper_Initialization__char_cat_65a.c":57:1)
#loc16 = loc("CWE665_Improper_Initialization__char_cat_65a.c":60:1)
#loc17 = loc("CWE665_Improper_Initialization__char_cat_65a.c":59:5)
#loc18 = loc("CWE665_Improper_Initialization__char_cat_65a.c":59:13)
#loc19 = loc("CWE665_Improper_Initialization__char_cat_65a.c":44:1)
#loc20 = loc("CWE665_Improper_Initialization__char_cat_65a.c":44:74)
#loc21 = loc("CWE665_Improper_Initialization__char_cat_65a.c":46:1)
#loc22 = loc("CWE665_Improper_Initialization__char_cat_65a.c":55:1)
#loc23 = loc("CWE665_Improper_Initialization__char_cat_65a.c":48:5)
#loc24 = loc("CWE665_Improper_Initialization__char_cat_65a.c":48:12)
#loc25 = loc("CWE665_Improper_Initialization__char_cat_65a.c":49:5)
#loc26 = loc("CWE665_Improper_Initialization__char_cat_65a.c":49:32)
#loc27 = loc("CWE665_Improper_Initialization__char_cat_65a.c":50:5)
#loc28 = loc("CWE665_Improper_Initialization__char_cat_65a.c":50:24)
#loc29 = loc("CWE665_Improper_Initialization__char_cat_65a.c":51:12)
#loc30 = loc("CWE665_Improper_Initialization__char_cat_65a.c":51:5)
#loc31 = loc("CWE665_Improper_Initialization__char_cat_65a.c":53:15)
#loc32 = loc("CWE665_Improper_Initialization__char_cat_65a.c":53:5)
#loc33 = loc("CWE665_Improper_Initialization__char_cat_65a.c":53:10)
#loc34 = loc("CWE665_Improper_Initialization__char_cat_65a.c":53:11)
#loc35 = loc("CWE665_Improper_Initialization__char_cat_65a.c":54:5)
#loc36 = loc("CWE665_Improper_Initialization__char_cat_65a.c":54:13)
#loc37 = loc(fused[#loc1, #loc2])
#loc38 = loc(fused[#loc3, #loc4])
#loc39 = loc(fused[#loc5, #loc6])
#loc40 = loc(fused[#loc7, #loc8])
#loc41 = loc(fused[#loc9, #loc10])
#loc42 = loc(fused[#loc12, #loc11])
#loc43 = loc(fused[#loc15, #loc16])
#loc44 = loc(fused[#loc17, #loc18])
#loc45 = loc(fused[#loc19, #loc20])
#loc46 = loc(fused[#loc21, #loc22])
#loc47 = loc(fused[#loc23, #loc24])
#loc48 = loc(fused[#loc25, #loc26])
#loc49 = loc(fused[#loc27, #loc28])
#loc50 = loc(fused[#loc30, #loc29])
#loc51 = loc(fused[#loc32, #loc31])
