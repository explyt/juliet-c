!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_cat_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc78)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc79)
  cir.func @_ZN43CWE665_Improper_Initialization__char_cat_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc81)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc82)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc83)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc10)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc13)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc84)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc86)
      %5 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc18)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc86)
      cir.scope {
        %7 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc88)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
        %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc23)
        %10 = cir.const #cir.int<67> : !s8i loc(#loc24)
        %11 = cir.cast(integral, %10 : !s8i), !s32i loc(#loc24)
        %12 = cir.const #cir.int<100> : !s32i loc(#loc25)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc26)
        %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc25)
        %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc25)
        cir.libc.memset %15 bytes from %9 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc89)
        %16 = cir.const #cir.int<0> : !s8i loc(#loc29)
        %17 = cir.const #cir.int<100> : !s32i loc(#loc30)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc31)
        %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc30)
        %20 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc32)
        %21 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc32)
        cir.store %16, %21 : !s8i, !cir.ptr<!s8i> loc(#loc90)
        %22 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc33)
        %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
        %24 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc35)
        %25 = cir.call @strcat(%23, %24) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc33)
        %26 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
        cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc37)
      } loc(#loc87)
    } loc(#loc85)
    cir.return loc(#loc6)
  } loc(#loc80)
  cir.func internal private @_ZN43CWE665_Improper_Initialization__char_cat_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc92)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc93)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc94)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc43)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc46)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc95)
    %4 = cir.const #cir.int<0> : !s8i loc(#loc48)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc50)
    %7 = cir.ptr_stride(%5 : !cir.ptr<!s8i>, %6 : !s32i), !cir.ptr<!s8i> loc(#loc51)
    cir.store %4, %7 : !s8i, !cir.ptr<!s8i> loc(#loc96)
    cir.scope {
      %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc98)
      %9 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc55)
      %10 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
      cir.store %10, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc98)
      cir.scope {
        %11 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc100)
        %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc60)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc60)
        %14 = cir.const #cir.int<67> : !s8i loc(#loc61)
        %15 = cir.cast(integral, %14 : !s8i), !s32i loc(#loc61)
        %16 = cir.const #cir.int<100> : !s32i loc(#loc62)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc63)
        %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc62)
        %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc62)
        cir.libc.memset %19 bytes from %13 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc101)
        %20 = cir.const #cir.int<0> : !s8i loc(#loc66)
        %21 = cir.const #cir.int<100> : !s32i loc(#loc67)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc68)
        %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc67)
        %24 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc69)
        %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc69)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc102)
        %26 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc70)
        %27 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
        %28 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc72)
        %29 = cir.call @strcat(%27, %28) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc70)
        %30 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
        cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc74)
      } loc(#loc99)
    } loc(#loc97)
    cir.return loc(#loc39)
  } loc(#loc91)
  cir.func @_ZN43CWE665_Improper_Initialization__char_cat_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN43CWE665_Improper_Initialization__char_cat_33L7goodG2BEv() : () -> () loc(#loc77)
    cir.return loc(#loc76)
  } loc(#loc103)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_cat_33.cpp":0:0)
#loc1 = loc("/usr/include/string.h":149:1)
#loc2 = loc("/usr/include/string.h":150:14)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":26:1)
#loc6 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":45:1)
#loc7 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":28:5)
#loc8 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":28:12)
#loc9 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":29:5)
#loc10 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":29:23)
#loc11 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":30:5)
#loc12 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":30:24)
#loc13 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":31:12)
#loc14 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":31:5)
#loc15 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":34:5)
#loc16 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":44:5)
#loc17 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":35:9)
#loc18 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":35:23)
#loc19 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":36:9)
#loc20 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":43:9)
#loc21 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":37:13)
#loc22 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":37:28)
#loc23 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":38:20)
#loc24 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":38:28)
#loc25 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":38:33)
#loc26 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":38:37)
#loc27 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":38:13)
#loc28 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":38:38)
#loc29 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":39:29)
#loc30 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":39:20)
#loc31 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":39:24)
#loc32 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":39:13)
#loc33 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":41:13)
#loc34 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":41:20)
#loc35 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":41:26)
#loc36 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":42:23)
#loc37 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":42:13)
#loc38 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":52:1)
#loc39 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":71:1)
#loc40 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":54:5)
#loc41 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":54:12)
#loc42 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":55:5)
#loc43 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":55:23)
#loc44 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":56:5)
#loc45 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":56:24)
#loc46 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":57:12)
#loc47 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":57:5)
#loc48 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":59:15)
#loc49 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":59:5)
#loc50 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":59:10)
#loc51 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":59:11)
#loc52 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":60:5)
#loc53 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":70:5)
#loc54 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":61:9)
#loc55 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":61:23)
#loc56 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":62:9)
#loc57 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":69:9)
#loc58 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":63:13)
#loc59 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":63:28)
#loc60 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":64:20)
#loc61 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":64:28)
#loc62 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":64:33)
#loc63 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":64:37)
#loc64 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":64:13)
#loc65 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":64:38)
#loc66 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":65:29)
#loc67 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":65:20)
#loc68 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":65:24)
#loc69 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":65:13)
#loc70 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":67:13)
#loc71 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":67:20)
#loc72 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":67:26)
#loc73 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":68:23)
#loc74 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":68:13)
#loc75 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":73:1)
#loc76 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":76:1)
#loc77 = loc("CWE665_Improper_Initialization__char_cat_33.cpp":75:5)
#loc78 = loc(fused[#loc1, #loc2])
#loc79 = loc(fused[#loc3, #loc4])
#loc80 = loc(fused[#loc5, #loc6])
#loc81 = loc(fused[#loc7, #loc8])
#loc82 = loc(fused[#loc9, #loc10])
#loc83 = loc(fused[#loc11, #loc12])
#loc84 = loc(fused[#loc14, #loc13])
#loc85 = loc(fused[#loc15, #loc16])
#loc86 = loc(fused[#loc17, #loc18])
#loc87 = loc(fused[#loc19, #loc20])
#loc88 = loc(fused[#loc21, #loc22])
#loc89 = loc(fused[#loc27, #loc28])
#loc90 = loc(fused[#loc32, #loc29])
#loc91 = loc(fused[#loc38, #loc39])
#loc92 = loc(fused[#loc40, #loc41])
#loc93 = loc(fused[#loc42, #loc43])
#loc94 = loc(fused[#loc44, #loc45])
#loc95 = loc(fused[#loc47, #loc46])
#loc96 = loc(fused[#loc49, #loc48])
#loc97 = loc(fused[#loc52, #loc53])
#loc98 = loc(fused[#loc54, #loc55])
#loc99 = loc(fused[#loc56, #loc57])
#loc100 = loc(fused[#loc58, #loc59])
#loc101 = loc(fused[#loc64, #loc65])
#loc102 = loc(fused[#loc69, #loc66])
#loc103 = loc(fused[#loc75, #loc76])
