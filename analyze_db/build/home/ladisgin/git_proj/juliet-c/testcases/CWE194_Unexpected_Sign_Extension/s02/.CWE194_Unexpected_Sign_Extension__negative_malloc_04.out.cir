!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc70 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":130:10)
#loc71 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":130:14)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":130:20)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":130:32)
#loc208 = loc(fused[#loc70, #loc71])
#loc209 = loc(fused[#loc72, #loc73])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__negative_malloc_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc182)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc183)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc184)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc185)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__negative_malloc_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc187)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc13)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc13)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc188)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc17)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc17)
      cir.if %4 {
        %5 = cir.const #cir.int<1> : !s32i loc(#loc19)
        %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc20)
        %7 = cir.cast(integral, %6 : !s32i), !s16i loc(#loc20)
        cir.store %7, %0 : !s16i, !cir.ptr<!s16i> loc(#loc191)
      } loc(#loc190)
    } loc(#loc189)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc24)
      %4 = cir.cast(integral, %3 : !s16i), !s32i loc(#loc24)
      %5 = cir.const #cir.int<100> : !s32i loc(#loc25)
      %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc193)
      cir.if %6 {
        %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc195)
        %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc29)
        %9 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc30)
        %10 = cir.cast(integral, %9 : !s16i), !u64i loc(#loc30)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc29)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc196)
        cir.store %12, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc195)
        cir.scope {
          %33 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc34)
          %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc34)
          %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!s8i>, !cir.bool loc(#loc198)
          cir.if %36 {
            %37 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc36)
            %38 = cir.const #cir.int<1> : !s32i loc(#loc37)
            %39 = cir.unary(minus, %38) : !s32i, !s32i loc(#loc38)
            cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc36)
          } loc(#loc199)
        } loc(#loc197)
        %13 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc39)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc40)
        %16 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc41)
        %17 = cir.cast(integral, %16 : !s16i), !s32i loc(#loc41)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc42)
        %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc41)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc41)
        cir.libc.memset %20 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc200)
        %21 = cir.const #cir.int<0> : !s32i loc(#loc45)
        %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc45)
        %23 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
        %24 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc47)
        %25 = cir.cast(integral, %24 : !s16i), !s32i loc(#loc47)
        %26 = cir.const #cir.int<1> : !s32i loc(#loc48)
        %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc47)
        %28 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc49)
        cir.store %22, %28 : !s8i, !cir.ptr<!s8i> loc(#loc201)
        %29 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
        cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc51)
        %30 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc52)
        %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
        %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc53)
        cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc52)
      } loc(#loc194)
    } loc(#loc192)
    cir.return loc(#loc10)
  } loc(#loc186)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__negative_malloc_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc203)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc56)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc204)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    cir.return loc(#loc55)
  } loc(#loc202)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc205)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc206)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc67)
  cir.func @main(%arg0: !s32i loc(fused[#loc70, #loc71]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc72, #loc73])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc208)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc209)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc69)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc74)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc74)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc75)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc76)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc76)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc77)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc64)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %8 = cir.get_global @CWE194_Unexpected_Sign_Extension__negative_malloc_04_good : !cir.ptr<!cir.func<!void ()>> loc(#loc210)
    cir.call @CWE194_Unexpected_Sign_Extension__negative_malloc_04_good() : () -> () loc(#loc79)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc65)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc66)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %13 = cir.get_global @CWE194_Unexpected_Sign_Extension__negative_malloc_04_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc211)
    cir.call @CWE194_Unexpected_Sign_Extension__negative_malloc_04_bad() : () -> () loc(#loc83)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc67)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc86)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc212)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc212)
    cir.return %17 : !s32i loc(#loc212)
  } loc(#loc207)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc88)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc214)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc93)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc93)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc215)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc97)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc97)
      cir.if %4 {
        %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc88)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc88)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc101)
      } else {
        %5 = cir.const #cir.int<100> : !s32i loc(#loc102)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc103)
        %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc102)
        %8 = cir.cast(integral, %7 : !s32i), !s16i loc(#loc102)
        cir.store %8, %0 : !s16i, !cir.ptr<!s16i> loc(#loc218)
      } loc(#loc217)
    } loc(#loc216)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc107)
      %4 = cir.cast(integral, %3 : !s16i), !s32i loc(#loc107)
      %5 = cir.const #cir.int<100> : !s32i loc(#loc108)
      %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc220)
      cir.if %6 {
        %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc222)
        %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc112)
        %9 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc113)
        %10 = cir.cast(integral, %9 : !s16i), !u64i loc(#loc113)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc112)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc223)
        cir.store %12, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc222)
        cir.scope {
          %33 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc117)
          %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc117)
          %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!s8i>, !cir.bool loc(#loc225)
          cir.if %36 {
            %37 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc119)
            %38 = cir.const #cir.int<1> : !s32i loc(#loc120)
            %39 = cir.unary(minus, %38) : !s32i, !s32i loc(#loc121)
            cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc119)
          } loc(#loc226)
        } loc(#loc224)
        %13 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc122)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc123)
        %16 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc124)
        %17 = cir.cast(integral, %16 : !s16i), !s32i loc(#loc124)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc125)
        %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc124)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc124)
        cir.libc.memset %20 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc227)
        %21 = cir.const #cir.int<0> : !s32i loc(#loc128)
        %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc128)
        %23 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
        %24 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc130)
        %25 = cir.cast(integral, %24 : !s16i), !s32i loc(#loc130)
        %26 = cir.const #cir.int<1> : !s32i loc(#loc131)
        %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc130)
        %28 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc132)
        cir.store %22, %28 : !s8i, !cir.ptr<!s8i> loc(#loc228)
        %29 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
        cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc134)
        %30 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc135)
        %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
        %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc136)
        cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc135)
      } loc(#loc221)
    } loc(#loc219)
    cir.return loc(#loc90)
  } loc(#loc213)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc230)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc141)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc141)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc231)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc145)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc145)
      cir.if %4 {
        %5 = cir.const #cir.int<100> : !s32i loc(#loc147)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc148)
        %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc147)
        %8 = cir.cast(integral, %7 : !s32i), !s16i loc(#loc147)
        cir.store %8, %0 : !s16i, !cir.ptr<!s16i> loc(#loc234)
      } loc(#loc233)
    } loc(#loc232)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc152)
      %4 = cir.cast(integral, %3 : !s16i), !s32i loc(#loc152)
      %5 = cir.const #cir.int<100> : !s32i loc(#loc153)
      %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc236)
      cir.if %6 {
        %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc238)
        %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc157)
        %9 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc158)
        %10 = cir.cast(integral, %9 : !s16i), !u64i loc(#loc158)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc157)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc239)
        cir.store %12, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc238)
        cir.scope {
          %33 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc162)
          %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc162)
          %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!s8i>, !cir.bool loc(#loc241)
          cir.if %36 {
            %37 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc164)
            %38 = cir.const #cir.int<1> : !s32i loc(#loc165)
            %39 = cir.unary(minus, %38) : !s32i, !s32i loc(#loc166)
            cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc164)
          } loc(#loc242)
        } loc(#loc240)
        %13 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc167)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc168)
        %16 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc169)
        %17 = cir.cast(integral, %16 : !s16i), !s32i loc(#loc169)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc170)
        %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc169)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc169)
        cir.libc.memset %20 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc243)
        %21 = cir.const #cir.int<0> : !s32i loc(#loc173)
        %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc173)
        %23 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc174)
        %24 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc175)
        %25 = cir.cast(integral, %24 : !s16i), !s32i loc(#loc175)
        %26 = cir.const #cir.int<1> : !s32i loc(#loc176)
        %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc175)
        %28 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc177)
        cir.store %22, %28 : !s8i, !cir.ptr<!s8i> loc(#loc244)
        %29 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc178)
        cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc179)
        %30 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc180)
        %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc181)
        %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc181)
        cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc180)
      } loc(#loc237)
    } loc(#loc235)
    cir.return loc(#loc138)
  } loc(#loc229)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":28:1)
#loc10 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":51:1)
#loc11 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":30:5)
#loc12 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":30:11)
#loc13 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":32:12)
#loc14 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":32:5)
#loc15 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":33:5)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":37:5)
#loc17 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":33:8)
#loc18 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":34:5)
#loc19 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":36:17)
#loc20 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":36:16)
#loc21 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":36:9)
#loc22 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":39:5)
#loc23 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":50:5)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":39:9)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":39:16)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":40:5)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":43:9)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":43:48)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":43:37)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":43:44)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":44:9)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":44:43)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":44:13)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":44:27)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":44:33)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":44:34)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":44:40)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":44:39)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":46:16)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":46:28)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":46:33)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":46:38)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":46:9)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":46:39)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":47:30)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":47:9)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":47:20)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":47:25)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":47:26)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":48:19)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":48:9)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":49:9)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":49:14)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":114:1)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":118:1)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":116:5)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":116:14)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":117:5)
#loc59 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":117:14)
#loc60 = loc("/usr/include/stdlib.h":575:1)
#loc61 = loc("/usr/include/stdlib.h":575:41)
#loc62 = loc("/usr/include/time.h":76:1)
#loc63 = loc("/usr/include/time.h":76:38)
#loc64 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":135:15)
#loc65 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":137:15)
#loc66 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":140:15)
#loc67 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":142:15)
#loc68 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":130:1)
#loc69 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":145:1)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":131:1)
#loc75 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":133:27)
#loc76 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":133:22)
#loc77 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":133:5)
#loc78 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":135:5)
#loc79 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":136:5)
#loc80 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":136:63)
#loc81 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":137:5)
#loc82 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":140:5)
#loc83 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":141:5)
#loc84 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":141:62)
#loc85 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":142:5)
#loc86 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":144:12)
#loc87 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":144:5)
#loc88 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":66:19)
#loc89 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":58:1)
#loc90 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":86:1)
#loc91 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":60:5)
#loc92 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":60:11)
#loc93 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":62:12)
#loc94 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":62:5)
#loc95 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":63:5)
#loc96 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":72:5)
#loc97 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":63:8)
#loc98 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":64:5)
#loc99 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":67:5)
#loc100 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":69:5)
#loc101 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":66:9)
#loc102 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":71:16)
#loc103 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":71:20)
#loc104 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":71:9)
#loc105 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":74:5)
#loc106 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":85:5)
#loc107 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":74:9)
#loc108 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":74:16)
#loc109 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":75:5)
#loc110 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":78:9)
#loc111 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":78:48)
#loc112 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":78:37)
#loc113 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":78:44)
#loc114 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":79:9)
#loc115 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":79:43)
#loc116 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":79:13)
#loc117 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":79:27)
#loc118 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":79:33)
#loc119 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":79:34)
#loc120 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":79:40)
#loc121 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":79:39)
#loc122 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":81:16)
#loc123 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":81:28)
#loc124 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":81:33)
#loc125 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":81:38)
#loc126 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":81:9)
#loc127 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":81:39)
#loc128 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":82:30)
#loc129 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":82:9)
#loc130 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":82:20)
#loc131 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":82:25)
#loc132 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":82:26)
#loc133 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":83:19)
#loc134 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":83:9)
#loc135 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":84:9)
#loc136 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":84:14)
#loc137 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":89:1)
#loc138 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":112:1)
#loc139 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":91:5)
#loc140 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":91:11)
#loc141 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":93:12)
#loc142 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":93:5)
#loc143 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":94:5)
#loc144 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":98:5)
#loc145 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":94:8)
#loc146 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":95:5)
#loc147 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":97:16)
#loc148 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":97:20)
#loc149 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":97:9)
#loc150 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":100:5)
#loc151 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":111:5)
#loc152 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":100:9)
#loc153 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":100:16)
#loc154 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":101:5)
#loc155 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":104:9)
#loc156 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":104:48)
#loc157 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":104:37)
#loc158 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":104:44)
#loc159 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":105:9)
#loc160 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":105:43)
#loc161 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":105:13)
#loc162 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":105:27)
#loc163 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":105:33)
#loc164 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":105:34)
#loc165 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":105:40)
#loc166 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":105:39)
#loc167 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":107:16)
#loc168 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":107:28)
#loc169 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":107:33)
#loc170 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":107:38)
#loc171 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":107:9)
#loc172 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":107:39)
#loc173 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":108:30)
#loc174 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":108:9)
#loc175 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":108:20)
#loc176 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":108:25)
#loc177 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":108:26)
#loc178 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":109:19)
#loc179 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":109:9)
#loc180 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":110:9)
#loc181 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_04.c":110:14)
#loc182 = loc(fused[#loc1, #loc2])
#loc183 = loc(fused[#loc3, #loc4])
#loc184 = loc(fused[#loc5, #loc6])
#loc185 = loc(fused[#loc7, #loc8])
#loc186 = loc(fused[#loc9, #loc10])
#loc187 = loc(fused[#loc11, #loc12])
#loc188 = loc(fused[#loc14, #loc13])
#loc189 = loc(fused[#loc15, #loc16])
#loc190 = loc(fused[#loc18, #loc16])
#loc191 = loc(fused[#loc21, #loc19])
#loc192 = loc(fused[#loc22, #loc23])
#loc193 = loc(fused[#loc24, #loc25])
#loc194 = loc(fused[#loc26, #loc23])
#loc195 = loc(fused[#loc27, #loc28])
#loc196 = loc(fused[#loc29, #loc28])
#loc197 = loc(fused[#loc31, #loc32])
#loc198 = loc(fused[#loc33, #loc34])
#loc199 = loc(fused[#loc35, #loc32])
#loc200 = loc(fused[#loc43, #loc44])
#loc201 = loc(fused[#loc46, #loc45])
#loc202 = loc(fused[#loc54, #loc55])
#loc203 = loc(fused[#loc56, #loc57])
#loc204 = loc(fused[#loc58, #loc59])
#loc205 = loc(fused[#loc60, #loc61])
#loc206 = loc(fused[#loc62, #loc63])
#loc207 = loc(fused[#loc68, #loc69])
#loc210 = loc(fused[#loc79, #loc80])
#loc211 = loc(fused[#loc83, #loc84])
#loc212 = loc(fused[#loc87, #loc86])
#loc213 = loc(fused[#loc89, #loc90])
#loc214 = loc(fused[#loc91, #loc92])
#loc215 = loc(fused[#loc94, #loc93])
#loc216 = loc(fused[#loc95, #loc96])
#loc217 = loc(fused[#loc98, #loc99, #loc100, #loc96])
#loc218 = loc(fused[#loc104, #loc103])
#loc219 = loc(fused[#loc105, #loc106])
#loc220 = loc(fused[#loc107, #loc108])
#loc221 = loc(fused[#loc109, #loc106])
#loc222 = loc(fused[#loc110, #loc111])
#loc223 = loc(fused[#loc112, #loc111])
#loc224 = loc(fused[#loc114, #loc115])
#loc225 = loc(fused[#loc116, #loc117])
#loc226 = loc(fused[#loc118, #loc115])
#loc227 = loc(fused[#loc126, #loc127])
#loc228 = loc(fused[#loc129, #loc128])
#loc229 = loc(fused[#loc137, #loc138])
#loc230 = loc(fused[#loc139, #loc140])
#loc231 = loc(fused[#loc142, #loc141])
#loc232 = loc(fused[#loc143, #loc144])
#loc233 = loc(fused[#loc146, #loc144])
#loc234 = loc(fused[#loc149, #loc148])
#loc235 = loc(fused[#loc150, #loc151])
#loc236 = loc(fused[#loc152, #loc153])
#loc237 = loc(fused[#loc154, #loc151])
#loc238 = loc(fused[#loc155, #loc156])
#loc239 = loc(fused[#loc157, #loc156])
#loc240 = loc(fused[#loc159, #loc160])
#loc241 = loc(fused[#loc161, #loc162])
#loc242 = loc(fused[#loc163, #loc160])
#loc243 = loc(fused[#loc171, #loc172])
#loc244 = loc(fused[#loc174, #loc173])
