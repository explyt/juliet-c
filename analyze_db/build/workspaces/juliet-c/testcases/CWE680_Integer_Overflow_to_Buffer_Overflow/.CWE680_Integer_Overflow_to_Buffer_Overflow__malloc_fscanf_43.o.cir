!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc8 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":24:23)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":24:28)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":57:27)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":57:32)
#loc129 = loc(fused[#loc8, #loc9])
#loc154 = loc(fused[#loc71, #loc72])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @__isoc23_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc126)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc127)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func internal private @_ZN60CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43L9badSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc8, #loc9])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc129)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc10)
    %1 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc11)
    %2 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc127)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc12)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc13)
    %7 = cir.call @__isoc23_fscanf(%3, %5, %6) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc11)
    cir.return loc(#loc7)
  } loc(#loc128)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc130)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc131)
  cir.func private @printIntLine(!s32i) loc(#loc132)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc133)
  cir.func @_ZN60CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_433badEv() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc135)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc136)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc137)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc31)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    cir.call @_ZN60CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43L9badSourceERi(%2) : (!cir.ptr<!s32i>) -> () loc(#loc33)
    cir.br ^bb1 loc(#loc139)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc36)
    %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc37)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc140)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc141)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc36)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc142)
    cir.store %11, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc143)
    cir.br ^bb2 loc(#loc144)
  ^bb2:  // pred: ^bb1
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc44)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc45)
    %14 = cir.cmp(eq, %12, %13) : !cir.ptr<!s32i>, !cir.bool loc(#loc145)
    cir.brcond %14 ^bb3, ^bb4 loc(#loc146)
  ^bb3:  // pred: ^bb2
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc47)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc49)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr1) loc(#loc47)
    cir.br ^bb4 loc(#loc43)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc43)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc147)
  ^bb6:  // pred: ^bb5
    %18 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc52)
    cir.store %19, %0 : !u64i, !cir.ptr<!u64i> loc(#loc148)
    cir.br ^bb7 loc(#loc147)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %20 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc54)
    %21 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc55)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc55)
    %23 = cir.cmp(lt, %20, %22) : !u64i, !cir.bool loc(#loc149)
    cir.brcond %23 ^bb8, ^bb12 loc(#loc149)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc150)
  ^bb9:  // pred: ^bb8
    %24 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc58)
    %26 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc59)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !u64i), !cir.ptr<!s32i> loc(#loc60)
    cir.store %24, %27 : !s32i, !cir.ptr<!s32i> loc(#loc151)
    cir.br ^bb10 loc(#loc51)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc51)
  ^bb11:  // pred: ^bb10
    %28 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc61)
    %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc62)
    cir.store %29, %0 : !u64i, !cir.ptr<!u64i> loc(#loc152)
    cir.br ^bb7 loc(#loc147)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc51)
  ^bb13:  // pred: ^bb12
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc63)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc64)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %31 : !s32i), !cir.ptr<!s32i> loc(#loc65)
    %33 = cir.load %32 : !cir.ptr<!s32i>, !s32i loc(#loc63)
    cir.call @printIntLine(%33) : (!s32i) -> () loc(#loc66)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc67)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc67)
    cir.call @free(%35) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc68)
    cir.br ^bb14 loc(#loc35)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc23)
  } loc(#loc134)
  cir.func internal private @_ZN60CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43L13goodG2BSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc71, #loc72])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc154)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc73)
    %1 = cir.const #cir.int<20> : !s32i loc(#loc74)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc75)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc155)
    cir.return loc(#loc70)
  } loc(#loc153)
  cir.func internal private @_ZN60CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc157)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc158)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc159)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc84)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc85)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc160)
    cir.call @_ZN60CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43L13goodG2BSourceERi(%2) : (!cir.ptr<!s32i>) -> () loc(#loc87)
    cir.br ^bb1 loc(#loc161)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc90)
    %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc91)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc162)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc163)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc90)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc164)
    cir.store %11, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc165)
    cir.br ^bb2 loc(#loc166)
  ^bb2:  // pred: ^bb1
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc98)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc99)
    %14 = cir.cmp(eq, %12, %13) : !cir.ptr<!s32i>, !cir.bool loc(#loc167)
    cir.brcond %14 ^bb3, ^bb4 loc(#loc168)
  ^bb3:  // pred: ^bb2
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc101)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc103)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr1) loc(#loc101)
    cir.br ^bb4 loc(#loc97)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc97)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc169)
  ^bb6:  // pred: ^bb5
    %18 = cir.const #cir.int<0> : !s32i loc(#loc106)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc106)
    cir.store %19, %0 : !u64i, !cir.ptr<!u64i> loc(#loc170)
    cir.br ^bb7 loc(#loc169)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %20 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc108)
    %21 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc109)
    %23 = cir.cmp(lt, %20, %22) : !u64i, !cir.bool loc(#loc171)
    cir.brcond %23 ^bb8, ^bb12 loc(#loc171)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc172)
  ^bb9:  // pred: ^bb8
    %24 = cir.const #cir.int<0> : !s32i loc(#loc111)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc112)
    %26 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc113)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !u64i), !cir.ptr<!s32i> loc(#loc114)
    cir.store %24, %27 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    cir.br ^bb10 loc(#loc105)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc105)
  ^bb11:  // pred: ^bb10
    %28 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc115)
    %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc116)
    cir.store %29, %0 : !u64i, !cir.ptr<!u64i> loc(#loc174)
    cir.br ^bb7 loc(#loc169)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc105)
  ^bb13:  // pred: ^bb12
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc117)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc118)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %31 : !s32i), !cir.ptr<!s32i> loc(#loc119)
    %33 = cir.load %32 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    cir.call @printIntLine(%33) : (!s32i) -> () loc(#loc120)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc121)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc121)
    cir.call @free(%35) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc122)
    cir.br ^bb14 loc(#loc89)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc77)
  } loc(#loc156)
  cir.func @_ZN60CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_434goodEv() extra(#fn_attr) {
    cir.call @_ZN60CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43L7goodG2BEv() : () -> () loc(#loc125)
    cir.return loc(#loc124)
  } loc(#loc175)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":442:1)
#loc2 = loc("/usr/include/stdio.h":444:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":27:19)
#loc6 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":24:1)
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":28:1)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":25:1)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":27:5)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":27:12)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":27:26)
#loc14 = loc("/usr/include/stdlib.h":672:1)
#loc15 = loc("/usr/include/stdlib.h":672:45)
#loc16 = loc("/usr/include/stdlib.h":756:1)
#loc17 = loc("/usr/include/stdlib.h":756:70)
#loc18 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc19 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc20 = loc("/usr/include/stdlib.h":687:1)
#loc21 = loc("/usr/include/stdlib.h":687:32)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":30:1)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":50:1)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":37:9)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":37:16)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":38:9)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":38:14)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":32:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":32:9)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":34:13)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":34:12)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":34:5)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":35:5)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":36:5)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":49:5)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":41:28)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":41:35)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":41:42)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":41:52)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":41:53)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":41:9)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":42:9)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":42:43)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":42:13)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":42:27)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":42:33)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":42:34)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":42:40)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":42:39)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":43:9)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":46:9)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":43:18)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":43:14)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":43:21)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":43:33)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":44:9)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":45:29)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":45:13)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":45:24)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":45:25)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":43:40)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":43:39)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":47:22)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":47:33)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":47:34)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":47:9)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":48:14)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":48:9)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":57:1)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":61:1)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":58:1)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":60:12)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":60:5)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":63:1)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":83:1)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":70:9)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":70:16)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":71:9)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":71:14)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":65:5)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":65:9)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":67:13)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":67:12)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":67:5)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":68:5)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":69:5)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":82:5)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":74:28)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":74:35)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":74:42)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":74:52)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":74:53)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":74:9)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":75:9)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":75:43)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":75:13)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":75:27)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":75:33)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":75:34)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":75:40)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":75:39)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":76:9)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":79:9)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":76:18)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":76:14)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":76:21)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":76:33)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":77:9)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":78:29)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":78:13)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":78:24)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":78:25)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":76:40)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":76:39)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":80:22)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":80:33)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":80:34)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":80:9)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":81:14)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":81:9)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":85:1)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":88:1)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_43.cpp":87:5)
#loc126 = loc(fused[#loc1, #loc2])
#loc127 = loc(fused[#loc3, #loc4])
#loc128 = loc(fused[#loc6, #loc7])
#loc130 = loc(fused[#loc14, #loc15])
#loc131 = loc(fused[#loc16, #loc17])
#loc132 = loc(fused[#loc18, #loc19])
#loc133 = loc(fused[#loc20, #loc21])
#loc134 = loc(fused[#loc22, #loc23])
#loc135 = loc(fused[#loc24, #loc25])
#loc136 = loc(fused[#loc26, #loc27])
#loc137 = loc(fused[#loc28, #loc29])
#loc138 = loc(fused[#loc32, #loc30])
#loc139 = loc(fused[#loc34, #loc35])
#loc140 = loc(fused[#loc38, #loc39])
#loc141 = loc(fused[#loc37, #loc39])
#loc142 = loc(fused[#loc36, #loc40])
#loc143 = loc(fused[#loc41, #loc40])
#loc144 = loc(fused[#loc42, #loc43])
#loc145 = loc(fused[#loc44, #loc45])
#loc146 = loc(fused[#loc46, #loc43])
#loc147 = loc(fused[#loc50, #loc51])
#loc148 = loc(fused[#loc53, #loc52])
#loc149 = loc(fused[#loc54, #loc55])
#loc150 = loc(fused[#loc56, #loc51])
#loc151 = loc(fused[#loc58, #loc57])
#loc152 = loc(fused[#loc62, #loc61])
#loc153 = loc(fused[#loc69, #loc70])
#loc155 = loc(fused[#loc75, #loc74])
#loc156 = loc(fused[#loc76, #loc77])
#loc157 = loc(fused[#loc78, #loc79])
#loc158 = loc(fused[#loc80, #loc81])
#loc159 = loc(fused[#loc82, #loc83])
#loc160 = loc(fused[#loc86, #loc84])
#loc161 = loc(fused[#loc88, #loc89])
#loc162 = loc(fused[#loc92, #loc93])
#loc163 = loc(fused[#loc91, #loc93])
#loc164 = loc(fused[#loc90, #loc94])
#loc165 = loc(fused[#loc95, #loc94])
#loc166 = loc(fused[#loc96, #loc97])
#loc167 = loc(fused[#loc98, #loc99])
#loc168 = loc(fused[#loc100, #loc97])
#loc169 = loc(fused[#loc104, #loc105])
#loc170 = loc(fused[#loc107, #loc106])
#loc171 = loc(fused[#loc108, #loc109])
#loc172 = loc(fused[#loc110, #loc105])
#loc173 = loc(fused[#loc112, #loc111])
#loc174 = loc(fused[#loc116, #loc115])
#loc175 = loc(fused[#loc123, #loc124])
