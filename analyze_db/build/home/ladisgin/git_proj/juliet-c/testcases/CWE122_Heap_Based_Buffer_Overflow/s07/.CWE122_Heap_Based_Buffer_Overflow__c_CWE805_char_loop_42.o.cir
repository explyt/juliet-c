!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":23:25)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":23:32)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":57:29)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":57:36)
#loc168 = loc(fused[#loc7, #loc8])
#loc199 = loc(fused[#loc91, #loc92])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc165)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc166)
  cir.func internal private @badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc7, #loc8])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc168)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc6)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc9)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc10)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc11)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc11)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc169)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc170)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc10)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc171)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc172)
    cir.br ^bb1 loc(#loc173)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc19)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc19)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc174)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc175)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc21)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc23)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc21)
    cir.br ^bb3 loc(#loc17)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc17)
  ^bb4:  // pred: ^bb3
    %16 = cir.const #cir.int<0> : !s32i loc(#loc24)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc24)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %20 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc27)
    cir.store %17, %20 : !s8i, !cir.ptr<!s8i> loc(#loc176)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
    cir.store %21, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc177)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc177)
    cir.return %22 : !cir.ptr<!s8i> loc(#loc177)
  } loc(#loc167)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc178)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc179)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc181)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc182)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc183)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc42)
    cir.store %3, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc184)
    %4 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    %5 = cir.call @badSource(%4) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc45)
    cir.store %5, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc185)
    cir.br ^bb1 loc(#loc186)
  ^bb1:  // pred: ^bb0
    %6 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc50)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc50)
    %8 = cir.const #cir.int<67> : !s32i loc(#loc51)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc52)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc53)
    %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc52)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc52)
    cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc187)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc56)
    %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc56)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc57)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc58)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc57)
    %18 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc59)
    %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc59)
    cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc188)
    cir.br ^bb2 loc(#loc189)
  ^bb2:  // pred: ^bb1
    %20 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc62)
    cir.store %21, %0 : !u64i, !cir.ptr<!u64i> loc(#loc190)
    cir.br ^bb3 loc(#loc189)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %22 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc64)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc65)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc65)
    %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc191)
    cir.brcond %25 ^bb4, ^bb8 loc(#loc66)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc192)
  ^bb5:  // pred: ^bb4
    %26 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc68)
    %27 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc69)
    %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !u64i), !cir.ptr<!s8i> loc(#loc69)
    %29 = cir.load %28 : !cir.ptr<!s8i>, !s8i loc(#loc69)
    %30 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
    %31 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc71)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %31 : !u64i), !cir.ptr<!s8i> loc(#loc72)
    cir.store %29, %32 : !s8i, !cir.ptr<!s8i> loc(#loc193)
    cir.br ^bb6 loc(#loc61)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc61)
  ^bb7:  // pred: ^bb6
    %33 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc74)
    %34 = cir.unary(inc, %33) : !u64i, !u64i loc(#loc75)
    cir.store %34, %0 : !u64i, !cir.ptr<!u64i> loc(#loc194)
    cir.br ^bb3 loc(#loc189)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc61)
  ^bb9:  // pred: ^bb8
    %35 = cir.const #cir.int<0> : !s32i loc(#loc76)
    %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc76)
    %37 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
    %38 = cir.const #cir.int<100> : !s32i loc(#loc78)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %40 = cir.binop(sub, %38, %39) nsw : !s32i loc(#loc78)
    %41 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %40 : !s32i), !cir.ptr<!s8i> loc(#loc80)
    cir.store %36, %41 : !s8i, !cir.ptr<!s8i> loc(#loc195)
    %42 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %43 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc83)
    cir.call @free(%44) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc84)
    cir.br ^bb10 loc(#loc49)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc35)
  } loc(#loc180)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc197)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc87)
    cir.return loc(#loc86)
  } loc(#loc196)
  cir.func internal private @goodG2BSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc91, #loc92])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc199)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc90)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc93)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc94)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc95)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc95)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc200)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc201)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc94)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc202)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc203)
    cir.br ^bb1 loc(#loc204)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc103)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc103)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc205)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc206)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc105)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc107)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc105)
    cir.br ^bb3 loc(#loc101)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc101)
  ^bb4:  // pred: ^bb3
    %16 = cir.const #cir.int<0> : !s32i loc(#loc108)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc108)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc110)
    %20 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc111)
    cir.store %17, %20 : !s8i, !cir.ptr<!s8i> loc(#loc207)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
    cir.store %21, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc208)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc208)
    cir.return %22 : !cir.ptr<!s8i> loc(#loc208)
  } loc(#loc198)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc210)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc211)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc212)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc122)
    cir.store %3, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc213)
    %4 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
    %5 = cir.call @goodG2BSource(%4) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc125)
    cir.store %5, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc214)
    cir.br ^bb1 loc(#loc215)
  ^bb1:  // pred: ^bb0
    %6 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc130)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc130)
    %8 = cir.const #cir.int<67> : !s32i loc(#loc131)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc132)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc133)
    %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc132)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc132)
    cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc216)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc136)
    %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc136)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc137)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc138)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc137)
    %18 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc139)
    %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc139)
    cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc217)
    cir.br ^bb2 loc(#loc218)
  ^bb2:  // pred: ^bb1
    %20 = cir.const #cir.int<0> : !s32i loc(#loc142)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc142)
    cir.store %21, %0 : !u64i, !cir.ptr<!u64i> loc(#loc219)
    cir.br ^bb3 loc(#loc218)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %22 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc144)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc145)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc145)
    %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc220)
    cir.brcond %25 ^bb4, ^bb8 loc(#loc146)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc221)
  ^bb5:  // pred: ^bb4
    %26 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc148)
    %27 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc149)
    %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !u64i), !cir.ptr<!s8i> loc(#loc149)
    %29 = cir.load %28 : !cir.ptr<!s8i>, !s8i loc(#loc149)
    %30 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
    %31 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc151)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %31 : !u64i), !cir.ptr<!s8i> loc(#loc152)
    cir.store %29, %32 : !s8i, !cir.ptr<!s8i> loc(#loc222)
    cir.br ^bb6 loc(#loc141)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc141)
  ^bb7:  // pred: ^bb6
    %33 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc154)
    %34 = cir.unary(inc, %33) : !u64i, !u64i loc(#loc155)
    cir.store %34, %0 : !u64i, !cir.ptr<!u64i> loc(#loc223)
    cir.br ^bb3 loc(#loc218)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc141)
  ^bb9:  // pred: ^bb8
    %35 = cir.const #cir.int<0> : !s32i loc(#loc156)
    %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc156)
    %37 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
    %38 = cir.const #cir.int<100> : !s32i loc(#loc158)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc159)
    %40 = cir.binop(sub, %38, %39) nsw : !s32i loc(#loc158)
    %41 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %40 : !s32i), !cir.ptr<!s8i> loc(#loc160)
    cir.store %36, %41 : !s8i, !cir.ptr<!s8i> loc(#loc224)
    %42 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
    cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc162)
    %43 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc163)
    cir.call @free(%44) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc164)
    cir.br ^bb10 loc(#loc129)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc115)
  } loc(#loc209)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":23:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":30:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":24:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":26:20)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":26:27)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":26:30)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":26:41)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":26:42)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":26:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":27:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":27:33)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":27:9)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":27:17)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":27:23)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":27:24)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":27:30)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":27:29)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":28:15)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":28:5)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":28:10)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":28:11)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":29:12)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":29:5)
#loc30 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc31 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc32 = loc("/usr/include/stdlib.h":687:1)
#loc33 = loc("/usr/include/stdlib.h":687:32)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":32:1)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":51:1)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":38:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":38:16)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":39:9)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":39:24)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":34:5)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":34:12)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":35:12)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":35:5)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":36:22)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":36:12)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":36:5)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":36:26)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":37:5)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":50:5)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":40:16)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":40:24)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":40:29)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":40:33)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":40:9)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":40:34)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":41:25)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":41:16)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":41:20)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":41:9)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":43:9)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":46:9)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":43:18)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":43:14)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":43:21)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":43:25)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":43:23)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":44:9)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":45:30)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":45:23)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":45:13)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":45:18)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":45:19)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":45:31)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":43:31)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":43:30)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":47:23)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":47:9)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":47:14)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":47:18)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":47:19)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":48:19)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":48:9)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":49:14)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":49:9)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":88:1)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":91:1)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":90:5)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":90:13)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":57:1)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":64:1)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":58:1)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":60:20)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":60:27)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":60:31)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":60:42)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":60:43)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":60:5)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":61:5)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":61:33)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":61:9)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":61:17)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":61:23)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":61:24)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":61:30)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":61:29)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":62:15)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":62:5)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":62:10)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":62:11)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":63:12)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":63:5)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":67:1)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":86:1)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":73:9)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":73:16)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":74:9)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":74:24)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":69:5)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":69:12)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":70:12)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":70:5)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":71:26)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":71:12)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":71:5)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":71:30)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":72:5)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":85:5)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":75:16)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":75:24)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":75:29)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":75:33)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":75:9)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":75:34)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":76:25)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":76:16)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":76:20)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":76:9)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":78:9)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":81:9)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":78:18)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":78:14)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":78:21)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":78:25)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":78:23)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":79:9)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":80:30)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":80:23)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":80:13)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":80:18)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":80:19)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":80:31)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":78:31)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":78:30)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":82:23)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":82:9)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":82:14)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":82:18)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":82:19)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":83:19)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":83:9)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":84:14)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_42.c":84:9)
#loc165 = loc(fused[#loc1, #loc2])
#loc166 = loc(fused[#loc3, #loc4])
#loc167 = loc(fused[#loc5, #loc6])
#loc169 = loc(fused[#loc12, #loc13])
#loc170 = loc(fused[#loc11, #loc13])
#loc171 = loc(fused[#loc10, #loc14])
#loc172 = loc(fused[#loc15, #loc14])
#loc173 = loc(fused[#loc16, #loc17])
#loc174 = loc(fused[#loc18, #loc19])
#loc175 = loc(fused[#loc20, #loc17])
#loc176 = loc(fused[#loc25, #loc24])
#loc177 = loc(fused[#loc29, #loc28])
#loc178 = loc(fused[#loc30, #loc31])
#loc179 = loc(fused[#loc32, #loc33])
#loc180 = loc(fused[#loc34, #loc35])
#loc181 = loc(fused[#loc36, #loc37])
#loc182 = loc(fused[#loc38, #loc39])
#loc183 = loc(fused[#loc40, #loc41])
#loc184 = loc(fused[#loc43, #loc42])
#loc185 = loc(fused[#loc46, #loc47])
#loc186 = loc(fused[#loc48, #loc49])
#loc187 = loc(fused[#loc54, #loc55])
#loc188 = loc(fused[#loc59, #loc56])
#loc189 = loc(fused[#loc60, #loc61])
#loc190 = loc(fused[#loc63, #loc62])
#loc191 = loc(fused[#loc64, #loc65])
#loc192 = loc(fused[#loc67, #loc61])
#loc193 = loc(fused[#loc70, #loc73])
#loc194 = loc(fused[#loc75, #loc74])
#loc195 = loc(fused[#loc77, #loc76])
#loc196 = loc(fused[#loc85, #loc86])
#loc197 = loc(fused[#loc87, #loc88])
#loc198 = loc(fused[#loc89, #loc90])
#loc200 = loc(fused[#loc96, #loc97])
#loc201 = loc(fused[#loc95, #loc97])
#loc202 = loc(fused[#loc94, #loc98])
#loc203 = loc(fused[#loc99, #loc98])
#loc204 = loc(fused[#loc100, #loc101])
#loc205 = loc(fused[#loc102, #loc103])
#loc206 = loc(fused[#loc104, #loc101])
#loc207 = loc(fused[#loc109, #loc108])
#loc208 = loc(fused[#loc113, #loc112])
#loc209 = loc(fused[#loc114, #loc115])
#loc210 = loc(fused[#loc116, #loc117])
#loc211 = loc(fused[#loc118, #loc119])
#loc212 = loc(fused[#loc120, #loc121])
#loc213 = loc(fused[#loc123, #loc122])
#loc214 = loc(fused[#loc126, #loc127])
#loc215 = loc(fused[#loc128, #loc129])
#loc216 = loc(fused[#loc134, #loc135])
#loc217 = loc(fused[#loc139, #loc136])
#loc218 = loc(fused[#loc140, #loc141])
#loc219 = loc(fused[#loc143, #loc142])
#loc220 = loc(fused[#loc144, #loc145])
#loc221 = loc(fused[#loc147, #loc141])
#loc222 = loc(fused[#loc150, #loc153])
#loc223 = loc(fused[#loc155, #loc154])
#loc224 = loc(fused[#loc157, #loc156])
