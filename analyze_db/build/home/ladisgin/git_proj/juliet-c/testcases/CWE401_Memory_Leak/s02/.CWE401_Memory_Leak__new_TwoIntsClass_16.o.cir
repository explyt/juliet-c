!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc3 = loc("../../../testcasesupport/std_testcase.h":61:7)
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_16.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc99)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc3)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc3)
    cir.return loc(#loc3)
  } loc(#loc3)
  cir.func private @printIntLine(!s32i) loc(#loc100)
  cir.func @_ZN39CWE401_Memory_Leak__new_TwoIntsClass_163badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc102)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc10)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc103)
    cir.br ^bb1 loc(#loc104)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc104)
  ^bb2:  // pred: ^bb1
    %2 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc14)
    cir.brcond %3 ^bb3, ^bb4 loc(#loc14)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.int<8> : !u64i loc(#loc105)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc17)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc105)
    cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc16)
    cir.store %6, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc106)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc20)
    %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc21)
    cir.store %7, %9 : !s32i, !cir.ptr<!s32i> loc(#loc107)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc22)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc23)
    %12 = cir.get_member %11[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc24)
    cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc108)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc25)
    %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc21)
    %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc26)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc27)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc28)
    %17 = cir.get_member %16[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc24)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc30)
    cir.br ^bb4 loc(#loc31)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc13)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc109)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc109)
  ^bb7:  // pred: ^bb6
    %19 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc34)
    cir.brcond %20 ^bb8, ^bb9 loc(#loc34)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc35)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc33)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc7)
  } loc(#loc101)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr2) loc(#loc110)
  cir.func internal private @_ZN39CWE401_Memory_Leak__new_TwoIntsClass_16L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc112)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc42)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc113)
    cir.br ^bb1 loc(#loc114)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc114)
  ^bb2:  // pred: ^bb1
    %2 = cir.const #cir.int<1> : !s32i loc(#loc46)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc46)
    cir.brcond %3 ^bb3, ^bb4 loc(#loc46)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.int<8> : !u64i loc(#loc115)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc49)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc115)
    cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc48)
    cir.store %6, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc116)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc52)
    %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc21)
    cir.store %7, %9 : !s32i, !cir.ptr<!s32i> loc(#loc117)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc53)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc54)
    %12 = cir.get_member %11[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc24)
    cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc118)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc55)
    %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc21)
    %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc57)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc58)
    %17 = cir.get_member %16[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc24)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc59)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc60)
    cir.br ^bb4 loc(#loc61)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc45)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc119)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc119)
  ^bb7:  // pred: ^bb6
    %19 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc64)
    cir.brcond %20 ^bb8, ^bb9 loc(#loc64)
  ^bb8:  // pred: ^bb7
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc65)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc65)
    cir.call @_ZdlPv(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr2) loc(#loc49)
    cir.br ^bb9 loc(#loc66)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc63)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc39)
  } loc(#loc111)
  cir.func internal private @_ZN39CWE401_Memory_Leak__new_TwoIntsClass_16L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !ty_TwoIntsClass, !cir.ptr<!ty_TwoIntsClass>, ["dataGoodBuffer"] {alignment = 4 : i64} loc(#loc121)
    %1 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc122)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc73)
    cir.store %2, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc123)
    cir.br ^bb1 loc(#loc124)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc124)
  ^bb2:  // pred: ^bb1
    %3 = cir.const #cir.int<1> : !s32i loc(#loc77)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc77)
    cir.brcond %4 ^bb3, ^bb4 loc(#loc77)
  ^bb3:  // pred: ^bb2
    cir.store %0, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc125)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc80)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc81)
    %7 = cir.get_member %6[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc21)
    cir.store %5, %7 : !s32i, !cir.ptr<!s32i> loc(#loc126)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc82)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc83)
    %10 = cir.get_member %9[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc24)
    cir.store %8, %10 : !s32i, !cir.ptr<!s32i> loc(#loc127)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc84)
    %12 = cir.get_member %11[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc21)
    %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc86)
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc87)
    %15 = cir.get_member %14[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc24)
    %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc89)
    cir.br ^bb4 loc(#loc90)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc76)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc128)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc128)
  ^bb7:  // pred: ^bb6
    %17 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc93)
    cir.brcond %18 ^bb8, ^bb9 loc(#loc93)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc94)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc92)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc68)
  } loc(#loc120)
  cir.func @_ZN39CWE401_Memory_Leak__new_TwoIntsClass_164goodEv() extra(#fn_attr1) {
    cir.call @_ZN39CWE401_Memory_Leak__new_TwoIntsClass_16L7goodB2GEv() : () -> () loc(#loc97)
    cir.call @_ZN39CWE401_Memory_Leak__new_TwoIntsClass_16L7goodG2BEv() : () -> () loc(#loc98)
    cir.return loc(#loc96)
  } loc(#loc129)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc2 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc6 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":28:1)
#loc7 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":49:1)
#loc8 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":30:5)
#loc9 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":30:20)
#loc10 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":31:12)
#loc11 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":31:5)
#loc12 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":32:5)
#loc13 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":42:5)
#loc14 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":32:11)
#loc15 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":35:16)
#loc16 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":35:20)
#loc17 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":28:6)
#loc18 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":35:9)
#loc19 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":37:24)
#loc20 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":37:9)
#loc21 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc22 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":38:24)
#loc23 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":38:9)
#loc24 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc25 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":39:22)
#loc26 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":39:28)
#loc27 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":39:9)
#loc28 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":40:22)
#loc29 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":40:28)
#loc30 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":40:9)
#loc31 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":41:9)
#loc32 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":43:5)
#loc33 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":48:5)
#loc34 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":43:11)
#loc35 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":47:9)
#loc36 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc37 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc38 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":56:1)
#loc39 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":77:1)
#loc40 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":58:5)
#loc41 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":58:20)
#loc42 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":59:12)
#loc43 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":59:5)
#loc44 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":60:5)
#loc45 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":70:5)
#loc46 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":60:11)
#loc47 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":63:16)
#loc48 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":63:20)
#loc49 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":56:13)
#loc50 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":63:9)
#loc51 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":65:24)
#loc52 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":65:9)
#loc53 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":66:24)
#loc54 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":66:9)
#loc55 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":67:22)
#loc56 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":67:28)
#loc57 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":67:9)
#loc58 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":68:22)
#loc59 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":68:28)
#loc60 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":68:9)
#loc61 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":69:9)
#loc62 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":71:5)
#loc63 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":76:5)
#loc64 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":71:11)
#loc65 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":74:16)
#loc66 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":75:9)
#loc67 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":80:1)
#loc68 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":102:1)
#loc69 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":87:9)
#loc70 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":87:22)
#loc71 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":82:5)
#loc72 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":82:20)
#loc73 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":83:12)
#loc74 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":83:5)
#loc75 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":84:5)
#loc76 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":95:5)
#loc77 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":84:11)
#loc78 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":88:9)
#loc79 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":88:17)
#loc80 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":90:24)
#loc81 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":90:9)
#loc82 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":91:24)
#loc83 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":91:9)
#loc84 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":92:22)
#loc85 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":92:28)
#loc86 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":92:9)
#loc87 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":93:22)
#loc88 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":93:28)
#loc89 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":93:9)
#loc90 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":94:9)
#loc91 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":96:5)
#loc92 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":101:5)
#loc93 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":96:11)
#loc94 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":100:9)
#loc95 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":104:1)
#loc96 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":108:1)
#loc97 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":106:5)
#loc98 = loc("CWE401_Memory_Leak__new_TwoIntsClass_16.cpp":107:5)
#loc99 = loc(fused[#loc1, #loc2])
#loc100 = loc(fused[#loc4, #loc5])
#loc101 = loc(fused[#loc6, #loc7])
#loc102 = loc(fused[#loc8, #loc9])
#loc103 = loc(fused[#loc11, #loc10])
#loc104 = loc(fused[#loc12, #loc13])
#loc105 = loc(fused[#loc15, #loc16])
#loc106 = loc(fused[#loc18, #loc16])
#loc107 = loc(fused[#loc20, #loc19])
#loc108 = loc(fused[#loc23, #loc22])
#loc109 = loc(fused[#loc32, #loc33])
#loc110 = loc(fused[#loc36, #loc37])
#loc111 = loc(fused[#loc38, #loc39])
#loc112 = loc(fused[#loc40, #loc41])
#loc113 = loc(fused[#loc43, #loc42])
#loc114 = loc(fused[#loc44, #loc45])
#loc115 = loc(fused[#loc47, #loc48])
#loc116 = loc(fused[#loc50, #loc48])
#loc117 = loc(fused[#loc52, #loc51])
#loc118 = loc(fused[#loc54, #loc53])
#loc119 = loc(fused[#loc62, #loc63])
#loc120 = loc(fused[#loc67, #loc68])
#loc121 = loc(fused[#loc69, #loc70])
#loc122 = loc(fused[#loc71, #loc72])
#loc123 = loc(fused[#loc74, #loc73])
#loc124 = loc(fused[#loc75, #loc76])
#loc125 = loc(fused[#loc78, #loc79])
#loc126 = loc(fused[#loc81, #loc80])
#loc127 = loc(fused[#loc83, #loc82])
#loc128 = loc(fused[#loc91, #loc92])
#loc129 = loc(fused[#loc95, #loc96])
