!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":100:10)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":100:14)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":100:20)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":100:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc168 = loc(fused[#loc65, #loc66])
#loc169 = loc(fused[#loc67, #loc68])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc144)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc145)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc147)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc9)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc148)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc13)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc13)
        cir.condition(%9) loc(#loc13)
      } do {
        cir.scope {
          %8 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc151)
          cir.scope {
            %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc153)
            cir.scope {
              %11 = cir.const #cir.int<0> : !s32i loc(#loc24)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc24)
              cir.store %12, %10 : !u64i, !cir.ptr<!u64i> loc(#loc155)
              cir.for : cond {
                %13 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc26)
                %14 = cir.const #cir.int<100> : !s32i loc(#loc27)
                %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc27)
                %16 = cir.cmp(lt, %13, %15) : !u64i, !cir.bool loc(#loc156)
                cir.condition(%16) loc(#loc28)
              } body {
                cir.scope {
                  %13 = cir.const #cir.int<1> : !s32i loc(#loc30)
                  %14 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc31)
                  %15 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
                  %16 = cir.ptr_stride(%15 : !cir.ptr<!ty__twoIntsStruct>, %14 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
                  %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc33)
                  cir.store %13, %17 : !s32i, !cir.ptr<!s32i> loc(#loc158)
                  %18 = cir.const #cir.int<1> : !s32i loc(#loc34)
                  %19 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc35)
                  %20 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc36)
                  %21 = cir.ptr_stride(%20 : !cir.ptr<!ty__twoIntsStruct>, %19 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc36)
                  %22 = cir.get_member %21[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
                  cir.store %18, %22 : !s32i, !cir.ptr<!s32i> loc(#loc159)
                } loc(#loc157)
                cir.yield loc(#loc23)
              } step {
                %13 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc38)
                %14 = cir.unary(inc, %13) : !u64i, !u64i loc(#loc39)
                cir.store %14, %10 : !u64i, !cir.ptr<!u64i> loc(#loc160)
                cir.yield loc(#loc154)
              } loc(#loc154)
            } loc(#loc154)
          } loc(#loc152)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc40)
          cir.store %9, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc161)
        } loc(#loc150)
        cir.break loc(#loc42)
      } loc(#loc149)
    } loc(#loc149)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc43)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!ty__twoIntsStruct>, %3 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc45)
    cir.call @printStructLine(%4) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc46)
    %5 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc47)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc48)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc48)
    cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc47)
    cir.return loc(#loc6)
  } loc(#loc146)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc163)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc51)
    cir.return loc(#loc50)
  } loc(#loc162)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc164)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc165)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc166)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc60)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc61)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc62)
  cir.func @main(%arg0: !s32i loc(fused[#loc65, #loc66]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc67, #loc68])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc168)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc169)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc64)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc69)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc69)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc70)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc71)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc71)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc72)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc59)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %8 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc170)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16_good() : () -> () loc(#loc74)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc60)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc61)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    %13 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc171)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16_bad() : () -> () loc(#loc78)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc62)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc81)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc172)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc172)
    cir.return %17 : !s32i loc(#loc172)
  } loc(#loc167)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc173)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc85)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc174)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc176)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc92)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc177)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc96)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc96)
        cir.condition(%9) loc(#loc96)
      } do {
        cir.scope {
          %8 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc180)
          %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc101)
          %10 = cir.const #cir.int<100> : !s32i loc(#loc102)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc102)
          %12 = cir.const #cir.int<8> : !u64i loc(#loc181)
          %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc182)
          %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc101)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc183)
          cir.store %15, %8 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc180)
          cir.scope {
            %17 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc107)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc108)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc108)
            %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc185)
            cir.if %20 {
              %21 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc85)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc85)
              cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc110)
              %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc111)
              %24 = cir.const #cir.int<1> : !s32i loc(#loc112)
              cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc111)
            } loc(#loc186)
          } loc(#loc184)
          cir.scope {
            %17 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc188)
            cir.scope {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc119)
              %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc119)
              cir.store %19, %17 : !u64i, !cir.ptr<!u64i> loc(#loc190)
              cir.for : cond {
                %20 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc121)
                %21 = cir.const #cir.int<100> : !s32i loc(#loc122)
                %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc122)
                %23 = cir.cmp(lt, %20, %22) : !u64i, !cir.bool loc(#loc191)
                cir.condition(%23) loc(#loc123)
              } body {
                cir.scope {
                  %20 = cir.const #cir.int<1> : !s32i loc(#loc125)
                  %21 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc126)
                  %22 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc127)
                  %23 = cir.ptr_stride(%21 : !cir.ptr<!ty__twoIntsStruct>, %22 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc128)
                  %24 = cir.get_member %23[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc33)
                  cir.store %20, %24 : !s32i, !cir.ptr<!s32i> loc(#loc193)
                  %25 = cir.const #cir.int<1> : !s32i loc(#loc129)
                  %26 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc130)
                  %27 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc131)
                  %28 = cir.ptr_stride(%26 : !cir.ptr<!ty__twoIntsStruct>, %27 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc132)
                  %29 = cir.get_member %28[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
                  cir.store %25, %29 : !s32i, !cir.ptr<!s32i> loc(#loc194)
                } loc(#loc192)
                cir.yield loc(#loc118)
              } step {
                %20 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc133)
                %21 = cir.unary(inc, %20) : !u64i, !u64i loc(#loc134)
                cir.store %21, %17 : !u64i, !cir.ptr<!u64i> loc(#loc195)
                cir.yield loc(#loc189)
              } loc(#loc189)
            } loc(#loc189)
          } loc(#loc187)
          %16 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc135)
          cir.store %16, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc196)
        } loc(#loc179)
        cir.break loc(#loc137)
      } loc(#loc178)
    } loc(#loc178)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc138)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc139)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!ty__twoIntsStruct>, %3 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc140)
    cir.call @printStructLine(%4) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc141)
    %5 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc142)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc143)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc143)
    cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc142)
    cir.return loc(#loc89)
  } loc(#loc175)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":23:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":47:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":25:5)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":25:21)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":26:12)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":26:5)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":27:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":43:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":27:11)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":29:9)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":41:9)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":31:13)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":31:41)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":32:13)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":39:13)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":33:17)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":33:24)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":34:17)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":38:17)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":34:26)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":34:22)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":34:29)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":34:33)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":34:31)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":35:17)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":36:44)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":36:32)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":36:21)
#loc33 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":37:44)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":37:32)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":37:21)
#loc37 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":34:39)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":34:38)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":40:20)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":40:13)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":42:9)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":44:22)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":44:27)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":44:28)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":44:5)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":46:5)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":46:10)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":85:1)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":88:1)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":87:5)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":87:13)
#loc53 = loc("/usr/include/stdlib.h":575:1)
#loc54 = loc("/usr/include/stdlib.h":575:41)
#loc55 = loc("/usr/include/time.h":76:1)
#loc56 = loc("/usr/include/time.h":76:38)
#loc57 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc58 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":105:15)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":107:15)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":110:15)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":112:15)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":100:1)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":115:1)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":101:1)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":103:27)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":103:22)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":103:5)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":105:5)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":106:5)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":106:65)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":107:5)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":110:5)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":111:5)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":111:64)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":112:5)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":114:12)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":114:5)
#loc83 = loc("/usr/include/stdlib.h":672:1)
#loc84 = loc("/usr/include/stdlib.h":672:45)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":65:27)
#loc86 = loc("/usr/include/stdlib.h":756:1)
#loc87 = loc("/usr/include/stdlib.h":756:70)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":54:1)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":83:1)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":56:5)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":56:21)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":57:12)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":57:5)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":58:5)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":79:5)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":58:11)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":60:9)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":77:9)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":62:13)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":62:91)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":62:59)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":62:66)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":62:70)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":62:90)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":63:13)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":67:13)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":63:17)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":63:31)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":64:13)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":65:17)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":66:17)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":66:22)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":68:13)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":75:13)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":69:17)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":69:24)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":70:17)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":74:17)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":70:26)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":70:22)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":70:29)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":70:33)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":70:31)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":71:17)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":72:44)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":72:21)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":72:32)
#loc128 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":72:33)
#loc129 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":73:44)
#loc130 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":73:21)
#loc131 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":73:32)
#loc132 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":73:33)
#loc133 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":70:39)
#loc134 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":70:38)
#loc135 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":76:20)
#loc136 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":76:13)
#loc137 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":78:9)
#loc138 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":80:22)
#loc139 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":80:27)
#loc140 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":80:28)
#loc141 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":80:5)
#loc142 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":82:5)
#loc143 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_16.c":82:10)
#loc144 = loc(fused[#loc1, #loc2])
#loc145 = loc(fused[#loc3, #loc4])
#loc146 = loc(fused[#loc5, #loc6])
#loc147 = loc(fused[#loc7, #loc8])
#loc148 = loc(fused[#loc10, #loc9])
#loc149 = loc(fused[#loc11, #loc12])
#loc150 = loc(fused[#loc14, #loc15])
#loc151 = loc(fused[#loc16, #loc17])
#loc152 = loc(fused[#loc18, #loc19])
#loc153 = loc(fused[#loc20, #loc21])
#loc154 = loc(fused[#loc22, #loc23])
#loc155 = loc(fused[#loc25, #loc24])
#loc156 = loc(fused[#loc26, #loc27])
#loc157 = loc(fused[#loc29, #loc23])
#loc158 = loc(fused[#loc32, #loc30])
#loc159 = loc(fused[#loc36, #loc34])
#loc160 = loc(fused[#loc39, #loc38])
#loc161 = loc(fused[#loc41, #loc40])
#loc162 = loc(fused[#loc49, #loc50])
#loc163 = loc(fused[#loc51, #loc52])
#loc164 = loc(fused[#loc53, #loc54])
#loc165 = loc(fused[#loc55, #loc56])
#loc166 = loc(fused[#loc57, #loc58])
#loc167 = loc(fused[#loc63, #loc64])
#loc170 = loc(fused[#loc74, #loc75])
#loc171 = loc(fused[#loc78, #loc79])
#loc172 = loc(fused[#loc82, #loc81])
#loc173 = loc(fused[#loc83, #loc84])
#loc174 = loc(fused[#loc86, #loc87])
#loc175 = loc(fused[#loc88, #loc89])
#loc176 = loc(fused[#loc90, #loc91])
#loc177 = loc(fused[#loc93, #loc92])
#loc178 = loc(fused[#loc94, #loc95])
#loc179 = loc(fused[#loc97, #loc98])
#loc180 = loc(fused[#loc99, #loc100])
#loc181 = loc(fused[#loc103, #loc104])
#loc182 = loc(fused[#loc102, #loc104])
#loc183 = loc(fused[#loc101, #loc100])
#loc184 = loc(fused[#loc105, #loc106])
#loc185 = loc(fused[#loc107, #loc108])
#loc186 = loc(fused[#loc109, #loc106])
#loc187 = loc(fused[#loc113, #loc114])
#loc188 = loc(fused[#loc115, #loc116])
#loc189 = loc(fused[#loc117, #loc118])
#loc190 = loc(fused[#loc120, #loc119])
#loc191 = loc(fused[#loc121, #loc122])
#loc192 = loc(fused[#loc124, #loc118])
#loc193 = loc(fused[#loc126, #loc125])
#loc194 = loc(fused[#loc130, #loc129])
#loc195 = loc(fused[#loc134, #loc133])
#loc196 = loc(fused[#loc136, #loc135])
