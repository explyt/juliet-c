!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":90:48)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc230)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc231)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc232)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc233)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc234)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc235)
  cir.func private @close(!s32i) -> !s32i loc(#loc236)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc237)
  cir.func private @printIntLine(!s32i) loc(#loc238)
  cir.func @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_323badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc240)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc241)
    %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc242)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc243)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc244)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc245)
    %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc246)
    %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc247)
    %8 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc248)
    %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc249)
    %10 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc250)
    %11 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc251)
    cir.store %9, %10 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc250)
    cir.store %9, %11 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc251)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc45)
    %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc46)
    cir.store %13, %9 : !s32i, !cir.ptr<!s32i> loc(#loc252)
    cir.br ^bb1 loc(#loc253)
  ^bb1:  // pred: ^bb0
    %14 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc23)
    %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc50)
    cir.store %15, %0 : !s32i, !cir.ptr<!s32i> loc(#loc240)
    cir.br ^bb2 loc(#loc254)
  ^bb2:  // pred: ^bb1
    %16 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc29)
    cir.store %17, %3 : !s32i, !cir.ptr<!s32i> loc(#loc243)
    cir.br ^bb3 loc(#loc255)
  ^bb3:  // pred: ^bb2
    cir.br ^bb5 loc(#loc255)
  ^bb4:  // pred: ^bb27
    %18 = cir.const #cir.int<0> : !s32i loc(#loc55)
    %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc55)
    cir.brcond %19 ^bb5, ^bb28 loc(#loc55)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc256)
  ^bb6:  // pred: ^bb5
    %20 = cir.const #cir.int<2> : !s32i loc(#loc58)
    %21 = cir.const #cir.int<1> : !u32i loc(#loc59)
    %22 = cir.cast(integral, %21 : !u32i), !s32i loc(#loc59)
    %23 = cir.const #cir.int<6> : !u32i loc(#loc60)
    %24 = cir.cast(integral, %23 : !u32i), !s32i loc(#loc60)
    %25 = cir.call @socket(%20, %22, %24) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc61)
    cir.store %25, %3 : !s32i, !cir.ptr<!s32i> loc(#loc257)
    cir.br ^bb7 loc(#loc258)
  ^bb7:  // pred: ^bb6
    %26 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc66)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %28 = cir.unary(minus, %27) nsw : !s32i, !s32i loc(#loc67)
    %29 = cir.cmp(eq, %26, %28) : !s32i, !cir.bool loc(#loc259)
    cir.brcond %29 ^bb8, ^bb9 loc(#loc260)
  ^bb8:  // pred: ^bb7
    cir.br ^bb28 loc(#loc69)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc65)
  ^bb10:  // pred: ^bb9
    %30 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc261)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc72)
    %32 = cir.const #cir.int<16> : !u64i loc(#loc262)
    cir.libc.memset %32 bytes from %30 set to %31 : !cir.ptr<!void>, !s32i, !u64i loc(#loc263)
    %33 = cir.const #cir.int<2> : !s32i loc(#loc77)
    %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc77)
    %35 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
    cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc264)
    %36 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %37 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %38 = cir.call @inet_addr(%37) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc80)
    %39 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc81)
    %40 = cir.get_member %39[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc82)
    cir.store %38, %40 : !u32i, !cir.ptr<!u32i> loc(#loc265)
    %41 = cir.const #cir.int<27015> : !s32i loc(#loc85)
    %42 = cir.cast(integral, %41 : !s32i), !u16i loc(#loc85)
    %43 = cir.call @htons(%42) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc86)
    %44 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc87)
    cir.store %43, %44 : !u16i, !cir.ptr<!u16i> loc(#loc266)
    cir.br ^bb11 loc(#loc267)
  ^bb11:  // pred: ^bb10
    %45 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    %46 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc268)
    %47 = cir.const #cir.int<16> : !u64i loc(#loc269)
    %48 = cir.cast(integral, %47 : !u64i), !u32i loc(#loc269)
    %49 = cir.call @connect(%45, %46, %48) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc97)
    %50 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %51 = cir.unary(minus, %50) nsw : !s32i, !s32i loc(#loc98)
    %52 = cir.cmp(eq, %49, %51) : !s32i, !cir.bool loc(#loc270)
    cir.brcond %52 ^bb12, ^bb13 loc(#loc271)
  ^bb12:  // pred: ^bb11
    cir.br ^bb28 loc(#loc100)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc91)
  ^bb14:  // pred: ^bb13
    %53 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc101)
    %54 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc102)
    %55 = cir.cast(bitcast, %54 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc102)
    %56 = cir.const #cir.int<3> : !s32i loc(#loc103)
    %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc103)
    %58 = cir.const #cir.int<4> : !u64i loc(#loc103)
    %59 = cir.binop(mul, %57, %58) : !u64i loc(#loc103)
    %60 = cir.const #cir.int<2> : !s32i loc(#loc103)
    %61 = cir.cast(integral, %60 : !s32i), !u64i loc(#loc103)
    %62 = cir.binop(add, %59, %61) : !u64i loc(#loc103)
    %63 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %64 = cir.cast(integral, %63 : !s32i), !u64i loc(#loc104)
    %65 = cir.binop(sub, %62, %64) : !u64i loc(#loc272)
    %66 = cir.const #cir.int<0> : !s32i loc(#loc105)
    %67 = cir.call @recv(%53, %55, %65, %66) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc106)
    %68 = cir.cast(integral, %67 : !s64i), !s32i loc(#loc106)
    cir.store %68, %1 : !s32i, !cir.ptr<!s32i> loc(#loc273)
    cir.br ^bb15 loc(#loc274)
  ^bb15:  // pred: ^bb14
    %69 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    %70 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %71 = cir.unary(minus, %70) nsw : !s32i, !s32i loc(#loc112)
    %72 = cir.cmp(eq, %69, %71) : !s32i, !cir.bool loc(#loc275)
    cir.brcond %72 ^bb16, ^bb17 loc(#loc113)
  ^bb16:  // pred: ^bb15
    %73 = cir.const #true loc(#loc113)
    cir.br ^bb22(%73 : !cir.bool) loc(#loc113)
  ^bb17:  // pred: ^bb15
    %74 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    %75 = cir.const #cir.int<0> : !s32i loc(#loc115)
    %76 = cir.cmp(eq, %74, %75) : !s32i, !cir.bool loc(#loc276)
    cir.brcond %76 ^bb18, ^bb19 loc(#loc113)
  ^bb18:  // pred: ^bb17
    %77 = cir.const #true loc(#loc113)
    cir.br ^bb20(%77 : !cir.bool) loc(#loc113)
  ^bb19:  // pred: ^bb17
    %78 = cir.const #false loc(#loc113)
    cir.br ^bb20(%78 : !cir.bool) loc(#loc113)
  ^bb20(%79: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":90:48)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc113)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22(%79 : !cir.bool) loc(#loc113)
  ^bb22(%80: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":90:48)):  // 2 preds: ^bb16, ^bb21
    cir.br ^bb23 loc(#loc113)
  ^bb23:  // pred: ^bb22
    cir.brcond %80 ^bb24, ^bb25 loc(#loc277)
  ^bb24:  // pred: ^bb23
    cir.br ^bb28 loc(#loc117)
  ^bb25:  // pred: ^bb23
    cir.br ^bb26 loc(#loc110)
  ^bb26:  // pred: ^bb25
    %81 = cir.const #cir.int<0> : !s8i loc(#loc118)
    %82 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    %83 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc120)
    %84 = cir.ptr_stride(%83 : !cir.ptr<!s8i>, %82 : !s32i), !cir.ptr<!s8i> loc(#loc120)
    cir.store %81, %84 : !s8i, !cir.ptr<!s8i> loc(#loc278)
    %85 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc121)
    %86 = cir.call @atoi(%85) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc122)
    cir.store %86, %0 : !s32i, !cir.ptr<!s32i> loc(#loc279)
    cir.br ^bb27 loc(#loc57)
  ^bb27:  // pred: ^bb26
    cir.br ^bb4 loc(#loc54)
  ^bb28:  // 4 preds: ^bb4, ^bb8, ^bb12, ^bb24
    cir.br ^bb29 loc(#loc54)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc280)
  ^bb30:  // pred: ^bb29
    %87 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %88 = cir.const #cir.int<1> : !s32i loc(#loc128)
    %89 = cir.unary(minus, %88) nsw : !s32i, !s32i loc(#loc128)
    %90 = cir.cmp(ne, %87, %89) : !s32i, !cir.bool loc(#loc281)
    cir.brcond %90 ^bb31, ^bb32 loc(#loc282)
  ^bb31:  // pred: ^bb30
    %91 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    %92 = cir.call @close(%91) : (!s32i) -> !s32i loc(#loc131)
    cir.br ^bb32 loc(#loc126)
  ^bb32:  // 2 preds: ^bb30, ^bb31
    cir.br ^bb33 loc(#loc126)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc52)
  ^bb34:  // pred: ^bb33
    %93 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    %94 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc133)
    cir.store %93, %94 : !s32i, !cir.ptr<!s32i> loc(#loc283)
    cir.br ^bb35 loc(#loc49)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc284)
  ^bb36:  // pred: ^bb35
    %95 = cir.load deref %11 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc33)
    %96 = cir.load %95 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    cir.store %96, %5 : !s32i, !cir.ptr<!s32i> loc(#loc245)
    cir.br ^bb37 loc(#loc285)
  ^bb37:  // pred: ^bb36
    %97 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc140)
    %98 = cir.cast(integral, %97 : !s32i), !u64i loc(#loc140)
    %99 = cir.const #cir.int<4> : !u64i loc(#loc286)
    %100 = cir.binop(mul, %98, %99) : !u64i loc(#loc287)
    cir.store %100, %6 : !u64i, !cir.ptr<!u64i> loc(#loc288)
    %101 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc144)
    %102 = cir.call @_Znam(%101) : (!u64i) -> !cir.ptr<!void> loc(#loc145)
    %103 = cir.cast(bitcast, %102 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc289)
    %104 = cir.cast(bitcast, %103 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc289)
    cir.store %104, %8 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc290)
    cir.br ^bb38 loc(#loc291)
  ^bb38:  // pred: ^bb37
    %105 = cir.const #cir.int<0> : !s32i loc(#loc151)
    %106 = cir.cast(integral, %105 : !s32i), !u64i loc(#loc151)
    cir.store %106, %7 : !u64i, !cir.ptr<!u64i> loc(#loc292)
    cir.br ^bb39 loc(#loc291)
  ^bb39:  // 2 preds: ^bb38, ^bb43
    %107 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc153)
    %108 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc154)
    %109 = cir.cast(integral, %108 : !s32i), !u64i loc(#loc154)
    %110 = cir.cmp(lt, %107, %109) : !u64i, !cir.bool loc(#loc293)
    cir.brcond %110 ^bb40, ^bb44 loc(#loc293)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc294)
  ^bb41:  // pred: ^bb40
    %111 = cir.const #cir.int<0> : !s32i loc(#loc156)
    %112 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc157)
    %113 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc158)
    %114 = cir.ptr_stride(%112 : !cir.ptr<!s32i>, %113 : !u64i), !cir.ptr<!s32i> loc(#loc159)
    cir.store %111, %114 : !s32i, !cir.ptr<!s32i> loc(#loc295)
    cir.br ^bb42 loc(#loc150)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc150)
  ^bb43:  // pred: ^bb42
    %115 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc160)
    %116 = cir.unary(inc, %115) : !u64i, !u64i loc(#loc161)
    cir.store %116, %7 : !u64i, !cir.ptr<!u64i> loc(#loc296)
    cir.br ^bb39 loc(#loc291)
  ^bb44:  // pred: ^bb39
    cir.br ^bb45 loc(#loc150)
  ^bb45:  // pred: ^bb44
    %117 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc162)
    %118 = cir.const #cir.int<0> : !s32i loc(#loc163)
    %119 = cir.ptr_stride(%117 : !cir.ptr<!s32i>, %118 : !s32i), !cir.ptr<!s32i> loc(#loc164)
    %120 = cir.load %119 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    cir.call @printIntLine(%120) : (!s32i) -> () loc(#loc165)
    %121 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc166)
    cir.delete.array %121 : <!s32i> loc(#loc166)
    cir.br ^bb46 loc(#loc139)
  ^bb46:  // pred: ^bb45
    cir.br ^bb47 loc(#loc136)
  ^bb47:  // pred: ^bb46
    cir.return loc(#loc21)
  } loc(#loc239)
  cir.func internal private @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc298)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc299)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc300)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc301)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc302)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc303)
    %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc304)
    %7 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc305)
    cir.store %5, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc304)
    cir.store %5, %7 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc305)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc184)
    %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc185)
    cir.store %9, %5 : !s32i, !cir.ptr<!s32i> loc(#loc306)
    cir.br ^bb1 loc(#loc307)
  ^bb1:  // pred: ^bb0
    %10 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc170)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc189)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc298)
    %12 = cir.const #cir.int<20> : !s32i loc(#loc190)
    cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc308)
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc192)
    %14 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc193)
    cir.store %13, %14 : !s32i, !cir.ptr<!s32i> loc(#loc309)
    cir.br ^bb2 loc(#loc188)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc310)
  ^bb3:  // pred: ^bb2
    %15 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc172)
    %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc197)
    cir.store %16, %1 : !s32i, !cir.ptr<!s32i> loc(#loc299)
    cir.br ^bb4 loc(#loc311)
  ^bb4:  // pred: ^bb3
    %17 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc200)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc200)
    %19 = cir.const #cir.int<4> : !u64i loc(#loc312)
    %20 = cir.binop(mul, %18, %19) : !u64i loc(#loc313)
    cir.store %20, %2 : !u64i, !cir.ptr<!u64i> loc(#loc314)
    %21 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc204)
    %22 = cir.call @_Znam(%21) : (!u64i) -> !cir.ptr<!void> loc(#loc205)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc315)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc315)
    cir.store %24, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc316)
    cir.br ^bb5 loc(#loc317)
  ^bb5:  // pred: ^bb4
    %25 = cir.const #cir.int<0> : !s32i loc(#loc211)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc211)
    cir.store %26, %3 : !u64i, !cir.ptr<!u64i> loc(#loc318)
    cir.br ^bb6 loc(#loc317)
  ^bb6:  // 2 preds: ^bb5, ^bb10
    %27 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc213)
    %28 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc214)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc214)
    %30 = cir.cmp(lt, %27, %29) : !u64i, !cir.bool loc(#loc319)
    cir.brcond %30 ^bb7, ^bb11 loc(#loc319)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc320)
  ^bb8:  // pred: ^bb7
    %31 = cir.const #cir.int<0> : !s32i loc(#loc216)
    %32 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc217)
    %33 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc218)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!s32i>, %33 : !u64i), !cir.ptr<!s32i> loc(#loc219)
    cir.store %31, %34 : !s32i, !cir.ptr<!s32i> loc(#loc321)
    cir.br ^bb9 loc(#loc210)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc210)
  ^bb10:  // pred: ^bb9
    %35 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc220)
    %36 = cir.unary(inc, %35) : !u64i, !u64i loc(#loc221)
    cir.store %36, %3 : !u64i, !cir.ptr<!u64i> loc(#loc322)
    cir.br ^bb6 loc(#loc317)
  ^bb11:  // pred: ^bb6
    cir.br ^bb12 loc(#loc210)
  ^bb12:  // pred: ^bb11
    %37 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc222)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc223)
    %39 = cir.ptr_stride(%37 : !cir.ptr<!s32i>, %38 : !s32i), !cir.ptr<!s32i> loc(#loc224)
    %40 = cir.load %39 : !cir.ptr<!s32i>, !s32i loc(#loc222)
    cir.call @printIntLine(%40) : (!s32i) -> () loc(#loc225)
    %41 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc226)
    cir.delete.array %41 : <!s32i> loc(#loc226)
    cir.br ^bb13 loc(#loc199)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc196)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc168)
  } loc(#loc297)
  cir.func @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_324goodEv() extra(#fn_attr1) {
    cir.call @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32L7goodG2BEv() : () -> () loc(#loc229)
    cir.return loc(#loc228)
  } loc(#loc323)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":81:53)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc17 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc18 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc19 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":46:1)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":129:1)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":54:9)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":54:21)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":60:13)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":60:17)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":61:13)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":61:32)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":62:13)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":62:36)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":63:13)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":63:45)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":114:9)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":114:21)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":116:13)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":116:20)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":116:30)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":117:13)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":117:18)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":48:5)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":48:9)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":49:5)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":49:22)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":50:5)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":50:22)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":52:13)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":52:12)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":52:5)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":53:5)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":112:5)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":54:20)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":55:9)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":110:9)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":64:13)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":99:21)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":99:20)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":65:13)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":98:13)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":74:40)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":74:49)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":74:62)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":74:33)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":74:17)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":74:73)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":75:17)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":78:17)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":75:21)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":75:38)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":76:17)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":77:21)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":79:24)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":79:25)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":79:34)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":79:37)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":79:51)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":79:17)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":79:52)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":80:38)
#loc78 = loc("/usr/include/netinet/in.h":249:5)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":80:17)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":81:43)
#loc81 = loc("/usr/include/netinet/in.h":251:20)
#loc82 = loc("/usr/include/netinet/in.h":33:15)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":81:17)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":81:63)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":82:42)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":82:36)
#loc87 = loc("/usr/include/netinet/in.h":250:15)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":82:17)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":82:50)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":83:17)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":86:17)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":83:29)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":83:62)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":83:63)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":83:72)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":83:86)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":83:21)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":83:92)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":84:17)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":85:21)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":89:35)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":89:50)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":89:63)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":89:81)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":89:84)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":89:30)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":89:17)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":89:85)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":90:17)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":93:17)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":90:21)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":90:35)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":90:51)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":90:65)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":91:17)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":92:21)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":95:43)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":95:29)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":95:17)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":97:29)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":97:24)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":97:17)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":97:40)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":100:13)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":103:13)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":100:17)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":100:34)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":101:13)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":102:30)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":102:17)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":111:21)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":111:10)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":111:9)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":113:5)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":128:5)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":114:20)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":115:9)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":127:9)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":119:25)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":119:32)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":119:42)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":119:13)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":120:41)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":46:6)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":120:32)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":120:50)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":120:13)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":121:13)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":124:13)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":121:22)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":121:18)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":121:25)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":121:37)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":122:13)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":123:33)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":123:17)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":123:28)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":123:29)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":121:44)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":121:43)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":125:26)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":125:37)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":125:38)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":125:13)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":126:23)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":136:1)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":165:1)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":144:9)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":144:21)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":150:9)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":150:21)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":152:13)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":152:20)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":152:30)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":153:13)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":153:18)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":138:5)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":138:9)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":139:5)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":139:22)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":140:5)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":140:22)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":142:13)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":142:12)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":142:5)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":143:5)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":148:5)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":144:20)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":146:16)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":146:9)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":147:21)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":147:10)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":147:9)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":149:5)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":164:5)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":150:20)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":151:9)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":163:9)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":155:25)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":155:32)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":155:42)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":155:13)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":156:41)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":136:13)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":156:32)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":156:50)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":156:13)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":157:13)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":160:13)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":157:22)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":157:18)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":157:25)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":157:37)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":158:13)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":159:33)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":159:17)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":159:28)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":159:29)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":157:44)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":157:43)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":161:26)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":161:37)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":161:38)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":161:13)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":162:23)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":167:1)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":170:1)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_32.cpp":169:5)
#loc230 = loc(fused[#loc1, #loc2])
#loc231 = loc(fused[#loc3, #loc4])
#loc232 = loc(fused[#loc6, #loc7])
#loc233 = loc(fused[#loc8, #loc9])
#loc234 = loc(fused[#loc10, #loc11])
#loc235 = loc(fused[#loc12, #loc13])
#loc236 = loc(fused[#loc14, #loc15])
#loc237 = loc(fused[#loc16, #loc17])
#loc238 = loc(fused[#loc18, #loc19])
#loc239 = loc(fused[#loc20, #loc21])
#loc240 = loc(fused[#loc22, #loc23])
#loc241 = loc(fused[#loc24, #loc25])
#loc242 = loc(fused[#loc26, #loc27])
#loc243 = loc(fused[#loc28, #loc29])
#loc244 = loc(fused[#loc30, #loc31])
#loc245 = loc(fused[#loc32, #loc33])
#loc246 = loc(fused[#loc34, #loc35])
#loc247 = loc(fused[#loc34, #loc36])
#loc248 = loc(fused[#loc37, #loc38])
#loc249 = loc(fused[#loc39, #loc40])
#loc250 = loc(fused[#loc41, #loc42])
#loc251 = loc(fused[#loc43, #loc44])
#loc252 = loc(fused[#loc47, #loc45])
#loc253 = loc(fused[#loc48, #loc49])
#loc254 = loc(fused[#loc51, #loc52])
#loc255 = loc(fused[#loc53, #loc54])
#loc256 = loc(fused[#loc56, #loc57])
#loc257 = loc(fused[#loc62, #loc63])
#loc258 = loc(fused[#loc64, #loc65])
#loc259 = loc(fused[#loc66, #loc67])
#loc260 = loc(fused[#loc68, #loc65])
#loc261 = loc(fused[#loc70, #loc71])
#loc262 = loc(fused[#loc73, #loc74])
#loc263 = loc(fused[#loc75, #loc76])
#loc264 = loc(fused[#loc79, #loc77])
#loc265 = loc(fused[#loc83, #loc84])
#loc266 = loc(fused[#loc88, #loc89])
#loc267 = loc(fused[#loc90, #loc91])
#loc268 = loc(fused[#loc93, #loc94])
#loc269 = loc(fused[#loc95, #loc96])
#loc270 = loc(fused[#loc97, #loc98])
#loc271 = loc(fused[#loc99, #loc91])
#loc272 = loc(fused[#loc103, #loc104])
#loc273 = loc(fused[#loc107, #loc108])
#loc274 = loc(fused[#loc109, #loc110])
#loc275 = loc(fused[#loc111, #loc112])
#loc276 = loc(fused[#loc114, #loc115])
#loc277 = loc(fused[#loc116, #loc110])
#loc278 = loc(fused[#loc120, #loc118])
#loc279 = loc(fused[#loc123, #loc124])
#loc280 = loc(fused[#loc125, #loc126])
#loc281 = loc(fused[#loc127, #loc128])
#loc282 = loc(fused[#loc129, #loc126])
#loc283 = loc(fused[#loc134, #loc132])
#loc284 = loc(fused[#loc135, #loc136])
#loc285 = loc(fused[#loc138, #loc139])
#loc286 = loc(fused[#loc141, #loc142])
#loc287 = loc(fused[#loc140, #loc142])
#loc288 = loc(fused[#loc143, #loc142])
#loc289 = loc(fused[#loc146, #loc147])
#loc290 = loc(fused[#loc148, #loc147])
#loc291 = loc(fused[#loc149, #loc150])
#loc292 = loc(fused[#loc152, #loc151])
#loc293 = loc(fused[#loc153, #loc154])
#loc294 = loc(fused[#loc155, #loc150])
#loc295 = loc(fused[#loc157, #loc156])
#loc296 = loc(fused[#loc161, #loc160])
#loc297 = loc(fused[#loc167, #loc168])
#loc298 = loc(fused[#loc169, #loc170])
#loc299 = loc(fused[#loc171, #loc172])
#loc300 = loc(fused[#loc173, #loc174])
#loc301 = loc(fused[#loc173, #loc175])
#loc302 = loc(fused[#loc176, #loc177])
#loc303 = loc(fused[#loc178, #loc179])
#loc304 = loc(fused[#loc180, #loc181])
#loc305 = loc(fused[#loc182, #loc183])
#loc306 = loc(fused[#loc186, #loc184])
#loc307 = loc(fused[#loc187, #loc188])
#loc308 = loc(fused[#loc191, #loc190])
#loc309 = loc(fused[#loc194, #loc192])
#loc310 = loc(fused[#loc195, #loc196])
#loc311 = loc(fused[#loc198, #loc199])
#loc312 = loc(fused[#loc201, #loc202])
#loc313 = loc(fused[#loc200, #loc202])
#loc314 = loc(fused[#loc203, #loc202])
#loc315 = loc(fused[#loc206, #loc207])
#loc316 = loc(fused[#loc208, #loc207])
#loc317 = loc(fused[#loc209, #loc210])
#loc318 = loc(fused[#loc212, #loc211])
#loc319 = loc(fused[#loc213, #loc214])
#loc320 = loc(fused[#loc215, #loc210])
#loc321 = loc(fused[#loc217, #loc216])
#loc322 = loc(fused[#loc221, #loc220])
#loc323 = loc(fused[#loc227, #loc228])
