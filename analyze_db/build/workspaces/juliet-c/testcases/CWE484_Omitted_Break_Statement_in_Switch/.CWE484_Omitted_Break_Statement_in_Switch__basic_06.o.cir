!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE484_Omitted_Break_Statement_in_Switch/CWE484_Omitted_Break_Statement_in_Switch__basic_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc110)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc111)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"0\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc5)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"1\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc6)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"2\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc7)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Invalid Number\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc8)
  cir.func no_proto @CWE484_Omitted_Break_Statement_in_Switch__basic_06_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc13)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc14)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc114)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["x", init] {alignment = 4 : i64} loc(#loc117)
          %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc20)
          %5 = cir.const #cir.int<3> : !s32i loc(#loc21)
          %6 = cir.binop(rem, %4, %5) : !s32i loc(#loc118)
          cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc117)
          cir.scope {
            %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc24)
            cir.switch (%7 : !s32i) {
              cir.case(equal, [#cir.int<0> : !s32i]) {
                %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc5)
                %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc5)
                cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc26)
                cir.yield loc(#loc25)
              } loc(#loc25)
              cir.case(equal, [#cir.int<1> : !s32i]) {
                %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc6)
                %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc6)
                cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc28)
                cir.break loc(#loc29)
              } loc(#loc27)
              cir.case(equal, [#cir.int<2> : !s32i]) {
                %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc7)
                %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc7)
                cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc31)
                cir.break loc(#loc32)
              } loc(#loc30)
              cir.case(default, []) {
                %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc8)
                %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc8)
                cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc34)
                cir.break loc(#loc35)
              } loc(#loc33)
              cir.yield loc(#loc22)
            } loc(#loc22)
          } loc(#loc119)
        } loc(#loc116)
      } loc(#loc115)
    } loc(#loc113)
    cir.return loc(#loc10)
  } loc(#loc112)
  cir.func no_proto @CWE484_Omitted_Break_Statement_in_Switch__basic_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc121)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc38)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc122)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc40)
    cir.return loc(#loc37)
  } loc(#loc120)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc42)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc47)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc48)
      %2 = cir.cmp(ne, %0, %1) : !s32i, !cir.bool loc(#loc125)
      cir.if %2 {
        %3 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc42)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc42)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc52)
      } else {
        cir.scope {
          %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["x", init] {alignment = 4 : i64} loc(#loc128)
          %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc57)
          %5 = cir.const #cir.int<3> : !s32i loc(#loc58)
          %6 = cir.binop(rem, %4, %5) : !s32i loc(#loc129)
          cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc128)
          cir.scope {
            %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc61)
            cir.switch (%7 : !s32i) {
              cir.case(equal, [#cir.int<0> : !s32i]) {
                %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc63)
                %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc63)
                cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc64)
                cir.break loc(#loc65)
              } loc(#loc62)
              cir.case(equal, [#cir.int<1> : !s32i]) {
                %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc67)
                %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc67)
                cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc68)
                cir.break loc(#loc69)
              } loc(#loc66)
              cir.case(equal, [#cir.int<2> : !s32i]) {
                %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc71)
                %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc71)
                cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc72)
                cir.break loc(#loc73)
              } loc(#loc70)
              cir.case(default, []) {
                %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc75)
                %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc75)
                cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc76)
                cir.break loc(#loc77)
              } loc(#loc74)
              cir.yield loc(#loc59)
            } loc(#loc59)
          } loc(#loc130)
        } loc(#loc127)
      } loc(#loc126)
    } loc(#loc124)
    cir.return loc(#loc44)
  } loc(#loc123)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc82)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc83)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc133)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["x", init] {alignment = 4 : i64} loc(#loc136)
          %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc89)
          %5 = cir.const #cir.int<3> : !s32i loc(#loc90)
          %6 = cir.binop(rem, %4, %5) : !s32i loc(#loc137)
          cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc136)
          cir.scope {
            %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc93)
            cir.switch (%7 : !s32i) {
              cir.case(equal, [#cir.int<0> : !s32i]) {
                %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc95)
                %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc95)
                cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc96)
                cir.break loc(#loc97)
              } loc(#loc94)
              cir.case(equal, [#cir.int<1> : !s32i]) {
                %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc99)
                %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc99)
                cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc100)
                cir.break loc(#loc101)
              } loc(#loc98)
              cir.case(equal, [#cir.int<2> : !s32i]) {
                %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc103)
                %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc103)
                cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc104)
                cir.break loc(#loc105)
              } loc(#loc102)
              cir.case(default, []) {
                %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc107)
                %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc107)
                cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc108)
                cir.break loc(#loc109)
              } loc(#loc106)
              cir.yield loc(#loc91)
            } loc(#loc91)
          } loc(#loc138)
        } loc(#loc135)
      } loc(#loc134)
    } loc(#loc132)
    cir.return loc(#loc79)
  } loc(#loc131)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE484_Omitted_Break_Statement_in_Switch/CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":35:27)
#loc6 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":37:27)
#loc7 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":40:27)
#loc8 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":43:27)
#loc9 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":25:1)
#loc10 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":48:1)
#loc11 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":27:5)
#loc12 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":47:5)
#loc13 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":27:8)
#loc14 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":27:27)
#loc15 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":28:5)
#loc16 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":29:9)
#loc17 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":46:9)
#loc18 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":30:13)
#loc19 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":30:32)
#loc20 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":30:22)
#loc21 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":30:31)
#loc22 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":32:13)
#loc23 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":45:13)
#loc24 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":32:21)
#loc25 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":34:13)
#loc26 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":35:17)
#loc27 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":36:13)
#loc28 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":37:17)
#loc29 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":38:17)
#loc30 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":39:13)
#loc31 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":40:17)
#loc32 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":41:17)
#loc33 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":42:13)
#loc34 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":43:17)
#loc35 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":44:17)
#loc36 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":115:1)
#loc37 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":119:1)
#loc38 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":117:5)
#loc39 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":117:11)
#loc40 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":118:5)
#loc41 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":118:11)
#loc42 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":60:19)
#loc43 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":55:1)
#loc44 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":85:1)
#loc45 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":57:5)
#loc46 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":84:5)
#loc47 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":57:8)
#loc48 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":57:27)
#loc49 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":58:5)
#loc50 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":61:5)
#loc51 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":63:5)
#loc52 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":60:9)
#loc53 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":64:9)
#loc54 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":83:9)
#loc55 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":65:13)
#loc56 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":65:32)
#loc57 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":65:22)
#loc58 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":65:31)
#loc59 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":68:13)
#loc60 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":82:13)
#loc61 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":68:21)
#loc62 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":70:13)
#loc63 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":71:27)
#loc64 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":71:17)
#loc65 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":72:17)
#loc66 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":73:13)
#loc67 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":74:27)
#loc68 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":74:17)
#loc69 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":75:17)
#loc70 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":76:13)
#loc71 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":77:27)
#loc72 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":77:17)
#loc73 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":78:17)
#loc74 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":79:13)
#loc75 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":80:27)
#loc76 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":80:17)
#loc77 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":81:17)
#loc78 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":88:1)
#loc79 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":113:1)
#loc80 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":90:5)
#loc81 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":112:5)
#loc82 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":90:8)
#loc83 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":90:27)
#loc84 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":91:5)
#loc85 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":92:9)
#loc86 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":111:9)
#loc87 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":93:13)
#loc88 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":93:32)
#loc89 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":93:22)
#loc90 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":93:31)
#loc91 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":96:13)
#loc92 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":110:13)
#loc93 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":96:21)
#loc94 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":98:13)
#loc95 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":99:27)
#loc96 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":99:17)
#loc97 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":100:17)
#loc98 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":101:13)
#loc99 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":102:27)
#loc100 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":102:17)
#loc101 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":103:17)
#loc102 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":104:13)
#loc103 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":105:27)
#loc104 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":105:17)
#loc105 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":106:17)
#loc106 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":107:13)
#loc107 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":108:27)
#loc108 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":108:17)
#loc109 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_06.c":109:17)
#loc110 = loc(fused[#loc1, #loc2])
#loc111 = loc(fused[#loc3, #loc4])
#loc112 = loc(fused[#loc9, #loc10])
#loc113 = loc(fused[#loc11, #loc12])
#loc114 = loc(fused[#loc13, #loc14])
#loc115 = loc(fused[#loc15, #loc12])
#loc116 = loc(fused[#loc16, #loc17])
#loc117 = loc(fused[#loc18, #loc19])
#loc118 = loc(fused[#loc20, #loc21])
#loc119 = loc(fused[#loc22, #loc23])
#loc120 = loc(fused[#loc36, #loc37])
#loc121 = loc(fused[#loc38, #loc39])
#loc122 = loc(fused[#loc40, #loc41])
#loc123 = loc(fused[#loc43, #loc44])
#loc124 = loc(fused[#loc45, #loc46])
#loc125 = loc(fused[#loc47, #loc48])
#loc126 = loc(fused[#loc49, #loc50, #loc51, #loc46])
#loc127 = loc(fused[#loc53, #loc54])
#loc128 = loc(fused[#loc55, #loc56])
#loc129 = loc(fused[#loc57, #loc58])
#loc130 = loc(fused[#loc59, #loc60])
#loc131 = loc(fused[#loc78, #loc79])
#loc132 = loc(fused[#loc80, #loc81])
#loc133 = loc(fused[#loc82, #loc83])
#loc134 = loc(fused[#loc84, #loc81])
#loc135 = loc(fused[#loc85, #loc86])
#loc136 = loc(fused[#loc87, #loc88])
#loc137 = loc(fused[#loc89, #loc90])
#loc138 = loc(fused[#loc91, #loc92])
