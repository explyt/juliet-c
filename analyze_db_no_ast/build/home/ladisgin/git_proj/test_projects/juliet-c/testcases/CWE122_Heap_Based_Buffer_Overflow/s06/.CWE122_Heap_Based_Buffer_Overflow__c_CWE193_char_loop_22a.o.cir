!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global  external dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22_badGlobal = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc157)
  cir.func private  @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22_badSource(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc158)
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc159)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc160)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc161)
  cir.func no_proto  @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc163)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc15)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc164)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %3 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22_badGlobal : !cir.ptr<!s32i> loc(#loc157)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc165)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
    %5 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22_badSource(%4) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc20)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc166)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc168)
      %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc169)
      %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc170)
      %9 = cir.const #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc168)
      cir.store %9, %6 : !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>> loc(#loc168)
      %10 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc30)
      %11 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc31)
      %12 = cir.call @strlen(%11) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc30)
      cir.store %12, %8 : !u64i, !cir.ptr<!u64i> loc(#loc171)
      cir.scope {
        %17 = cir.const #cir.int<0> : !s32i loc(#loc36)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc36)
        cir.store %18, %7 : !u64i, !cir.ptr<!u64i> loc(#loc173)
        cir.for : cond {
          %19 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc38)
          %20 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc39)
          %21 = cir.const #cir.int<1> : !s32i loc(#loc40)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc40)
          %23 = cir.binop(add, %20, %22) : !u64i loc(#loc174)
          %24 = cir.cmp(lt, %19, %23) : !u64i, !s32i loc(#loc175)
          %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc41)
          cir.condition(%25) loc(#loc41)
        } body {
          cir.scope {
            %19 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc43)
            %20 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc44)
            %21 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %19 : !u64i), !cir.ptr<!s8i> loc(#loc44)
            %22 = cir.load %21 : !cir.ptr<!s8i>, !s8i loc(#loc44)
            %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
            %24 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc46)
            %25 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %24 : !u64i), !cir.ptr<!s8i> loc(#loc47)
            cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc177)
          } loc(#loc176)
          cir.yield loc(#loc35)
        } step {
          %19 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc49)
          %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc50)
          cir.store %20, %7 : !u64i, !cir.ptr<!u64i> loc(#loc178)
          cir.yield loc(#loc172)
        } loc(#loc172)
      } loc(#loc172)
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
      cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc52)
      %14 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc53)
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc54)
      cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc53)
    } loc(#loc167)
    cir.return loc(#loc12)
  } loc(#loc162)
  cir.global  external dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22_goodG2B1Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc179)
  cir.global  external dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22_goodG2B2Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc180)
  cir.func no_proto  @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc182)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc61)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc183)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc63)
    cir.return loc(#loc60)
  } loc(#loc181)
  cir.func private  @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22_goodG2B1Source(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc184)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc186)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc71)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc187)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc73)
    %3 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22_goodG2B1Global : !cir.ptr<!s32i> loc(#loc179)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc188)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
    %5 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22_goodG2B1Source(%4) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc76)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc189)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc191)
      %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc192)
      %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc193)
      %9 = cir.const #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc191)
      cir.store %9, %6 : !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>> loc(#loc191)
      %10 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc86)
      %11 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc87)
      %12 = cir.call @strlen(%11) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc86)
      cir.store %12, %8 : !u64i, !cir.ptr<!u64i> loc(#loc194)
      cir.scope {
        %17 = cir.const #cir.int<0> : !s32i loc(#loc92)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc92)
        cir.store %18, %7 : !u64i, !cir.ptr<!u64i> loc(#loc196)
        cir.for : cond {
          %19 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc94)
          %20 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc95)
          %21 = cir.const #cir.int<1> : !s32i loc(#loc96)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc96)
          %23 = cir.binop(add, %20, %22) : !u64i loc(#loc197)
          %24 = cir.cmp(lt, %19, %23) : !u64i, !s32i loc(#loc198)
          %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc97)
          cir.condition(%25) loc(#loc97)
        } body {
          cir.scope {
            %19 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc99)
            %20 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc100)
            %21 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %19 : !u64i), !cir.ptr<!s8i> loc(#loc100)
            %22 = cir.load %21 : !cir.ptr<!s8i>, !s8i loc(#loc100)
            %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
            %24 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc102)
            %25 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %24 : !u64i), !cir.ptr<!s8i> loc(#loc103)
            cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc200)
          } loc(#loc199)
          cir.yield loc(#loc91)
        } step {
          %19 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc105)
          %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc106)
          cir.store %20, %7 : !u64i, !cir.ptr<!u64i> loc(#loc201)
          cir.yield loc(#loc195)
        } loc(#loc195)
      } loc(#loc195)
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
      cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc108)
      %14 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc109)
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc110)
      cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc109)
    } loc(#loc190)
    cir.return loc(#loc68)
  } loc(#loc185)
  cir.func private  @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22_goodG2B2Source(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc202)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc204)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc117)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc205)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %3 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22_goodG2B2Global : !cir.ptr<!s32i> loc(#loc180)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc206)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
    %5 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22_goodG2B2Source(%4) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc122)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc207)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc209)
      %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc210)
      %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc211)
      %9 = cir.const #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc209)
      cir.store %9, %6 : !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>> loc(#loc209)
      %10 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc132)
      %11 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc133)
      %12 = cir.call @strlen(%11) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc132)
      cir.store %12, %8 : !u64i, !cir.ptr<!u64i> loc(#loc212)
      cir.scope {
        %17 = cir.const #cir.int<0> : !s32i loc(#loc138)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc138)
        cir.store %18, %7 : !u64i, !cir.ptr<!u64i> loc(#loc214)
        cir.for : cond {
          %19 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc140)
          %20 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc141)
          %21 = cir.const #cir.int<1> : !s32i loc(#loc142)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc142)
          %23 = cir.binop(add, %20, %22) : !u64i loc(#loc215)
          %24 = cir.cmp(lt, %19, %23) : !u64i, !s32i loc(#loc216)
          %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc143)
          cir.condition(%25) loc(#loc143)
        } body {
          cir.scope {
            %19 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc145)
            %20 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc146)
            %21 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %19 : !u64i), !cir.ptr<!s8i> loc(#loc146)
            %22 = cir.load %21 : !cir.ptr<!s8i>, !s8i loc(#loc146)
            %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
            %24 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc148)
            %25 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %24 : !u64i), !cir.ptr<!s8i> loc(#loc149)
            cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc218)
          } loc(#loc217)
          cir.yield loc(#loc137)
        } step {
          %19 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc151)
          %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc152)
          cir.store %20, %7 : !u64i, !cir.ptr<!u64i> loc(#loc219)
          cir.yield loc(#loc213)
        } loc(#loc213)
      } loc(#loc213)
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
      cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc154)
      %14 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc155)
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc156)
      cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc155)
    } loc(#loc208)
    cir.return loc(#loc114)
  } loc(#loc203)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":29:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":29:74)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":31:1)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":31:86)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":33:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":52:1)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":35:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":35:12)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":36:12)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":36:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":37:74)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":37:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":38:79)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":38:12)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":38:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":38:83)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":39:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":51:5)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":40:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":40:29)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":41:9)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":41:16)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":41:19)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":42:21)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":42:28)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":42:9)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":42:34)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":45:9)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":48:9)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":45:18)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":45:14)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":45:21)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":45:25)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":45:37)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":45:23)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":46:9)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":47:30)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":47:23)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":47:13)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":47:18)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":47:19)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":47:31)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":45:41)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":45:40)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":49:19)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":49:9)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":50:9)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":50:14)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":59:1)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":59:79)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":60:1)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":60:79)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":110:1)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":114:1)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":112:5)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":112:14)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":113:5)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":113:14)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":63:1)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":63:91)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":65:1)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":84:1)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":67:5)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":67:12)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":68:12)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":68:5)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":69:79)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":69:5)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":70:84)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":70:12)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":70:5)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":70:88)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":71:5)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":83:5)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":72:9)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":72:29)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":73:9)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":73:16)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":73:19)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":74:21)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":74:28)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":74:9)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":74:34)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":77:9)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":80:9)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":77:18)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":77:14)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":77:21)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":77:25)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":77:37)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":77:23)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":78:9)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":79:30)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":79:23)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":79:13)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":79:18)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":79:19)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":79:31)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":77:41)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":77:40)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":81:19)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":81:9)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":82:9)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":82:14)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":87:1)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":87:91)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":89:1)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":108:1)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":91:5)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":91:12)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":92:12)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":92:5)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":93:79)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":93:5)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":94:84)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":94:12)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":94:5)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":94:88)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":95:5)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":107:5)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":96:9)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":96:29)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":97:9)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":97:16)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":97:19)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":98:21)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":98:28)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":98:9)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":98:34)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":101:9)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":104:9)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":101:18)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":101:14)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":101:21)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":101:25)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":101:37)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":101:23)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":102:9)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":103:30)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":103:23)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":103:13)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":103:18)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":103:19)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":103:31)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":101:41)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":101:40)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":105:19)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":105:9)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":106:9)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_22a.c":106:14)
#loc157 = loc(fused[#loc1, #loc2])
#loc158 = loc(fused[#loc3, #loc4])
#loc159 = loc(fused[#loc5, #loc6])
#loc160 = loc(fused[#loc7, #loc8])
#loc161 = loc(fused[#loc9, #loc10])
#loc162 = loc(fused[#loc11, #loc12])
#loc163 = loc(fused[#loc13, #loc14])
#loc164 = loc(fused[#loc16, #loc15])
#loc165 = loc(fused[#loc18, #loc17])
#loc166 = loc(fused[#loc21, #loc22])
#loc167 = loc(fused[#loc23, #loc24])
#loc168 = loc(fused[#loc25, #loc26])
#loc169 = loc(fused[#loc27, #loc28])
#loc170 = loc(fused[#loc27, #loc29])
#loc171 = loc(fused[#loc32, #loc33])
#loc172 = loc(fused[#loc34, #loc35])
#loc173 = loc(fused[#loc37, #loc36])
#loc174 = loc(fused[#loc39, #loc40])
#loc175 = loc(fused[#loc38, #loc40])
#loc176 = loc(fused[#loc42, #loc35])
#loc177 = loc(fused[#loc45, #loc48])
#loc178 = loc(fused[#loc50, #loc49])
#loc179 = loc(fused[#loc55, #loc56])
#loc180 = loc(fused[#loc57, #loc58])
#loc181 = loc(fused[#loc59, #loc60])
#loc182 = loc(fused[#loc61, #loc62])
#loc183 = loc(fused[#loc63, #loc64])
#loc184 = loc(fused[#loc65, #loc66])
#loc185 = loc(fused[#loc67, #loc68])
#loc186 = loc(fused[#loc69, #loc70])
#loc187 = loc(fused[#loc72, #loc71])
#loc188 = loc(fused[#loc74, #loc73])
#loc189 = loc(fused[#loc77, #loc78])
#loc190 = loc(fused[#loc79, #loc80])
#loc191 = loc(fused[#loc81, #loc82])
#loc192 = loc(fused[#loc83, #loc84])
#loc193 = loc(fused[#loc83, #loc85])
#loc194 = loc(fused[#loc88, #loc89])
#loc195 = loc(fused[#loc90, #loc91])
#loc196 = loc(fused[#loc93, #loc92])
#loc197 = loc(fused[#loc95, #loc96])
#loc198 = loc(fused[#loc94, #loc96])
#loc199 = loc(fused[#loc98, #loc91])
#loc200 = loc(fused[#loc101, #loc104])
#loc201 = loc(fused[#loc106, #loc105])
#loc202 = loc(fused[#loc111, #loc112])
#loc203 = loc(fused[#loc113, #loc114])
#loc204 = loc(fused[#loc115, #loc116])
#loc205 = loc(fused[#loc118, #loc117])
#loc206 = loc(fused[#loc120, #loc119])
#loc207 = loc(fused[#loc123, #loc124])
#loc208 = loc(fused[#loc125, #loc126])
#loc209 = loc(fused[#loc127, #loc128])
#loc210 = loc(fused[#loc129, #loc130])
#loc211 = loc(fused[#loc129, #loc131])
#loc212 = loc(fused[#loc134, #loc135])
#loc213 = loc(fused[#loc136, #loc137])
#loc214 = loc(fused[#loc139, #loc138])
#loc215 = loc(fused[#loc141, #loc142])
#loc216 = loc(fused[#loc140, #loc142])
#loc217 = loc(fused[#loc144, #loc137])
#loc218 = loc(fused[#loc147, #loc150])
#loc219 = loc(fused[#loc152, #loc151])
