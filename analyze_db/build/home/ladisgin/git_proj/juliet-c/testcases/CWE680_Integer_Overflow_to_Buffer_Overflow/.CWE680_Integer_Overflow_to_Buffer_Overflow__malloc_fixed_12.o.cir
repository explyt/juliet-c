!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc133)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc134)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc135)
  cir.func private @printIntLine(!s32i) loc(#loc136)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc137)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc139)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc140)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc141)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc20)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc142)
    cir.br ^bb1 loc(#loc143)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc144)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc144)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc24)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc24)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc145)
  ^bb2:  // pred: ^bb1
    %9 = cir.const #cir.int<2147483647> : !s32i loc(#loc29)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc30)
    %11 = cir.binop(div, %9, %10) : !s32i loc(#loc146)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc31)
    %13 = cir.binop(add, %11, %12) nsw : !s32i loc(#loc146)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc147)
    cir.br ^bb4 loc(#loc27)
  ^bb3:  // pred: ^bb1
    %14 = cir.const #cir.int<20> : !s32i loc(#loc33)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc148)
    cir.br ^bb4 loc(#loc23)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc23)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc149)
  ^bb6:  // pred: ^bb5
    %15 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc37)
    %16 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc38)
    %18 = cir.const #cir.int<4> : !u64i loc(#loc150)
    %19 = cir.binop(mul, %17, %18) : !u64i loc(#loc151)
    %20 = cir.call @malloc(%19) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc37)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc152)
    cir.store %21, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc153)
    cir.br ^bb7 loc(#loc154)
  ^bb7:  // pred: ^bb6
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc45)
    %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc46)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc46)
    %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!s32i>, !cir.bool loc(#loc155)
    cir.brcond %25 ^bb8, ^bb9 loc(#loc156)
  ^bb8:  // pred: ^bb7
    %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc48)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc50)
    cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc48)
    cir.br ^bb9 loc(#loc44)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc44)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc157)
  ^bb11:  // pred: ^bb10
    %29 = cir.const #cir.int<0> : !s32i loc(#loc53)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc53)
    cir.store %30, %0 : !u64i, !cir.ptr<!u64i> loc(#loc158)
    cir.br ^bb12 loc(#loc157)
  ^bb12:  // 2 preds: ^bb11, ^bb16
    %31 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc55)
    %32 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc56)
    %34 = cir.cmp(lt, %31, %33) : !u64i, !cir.bool loc(#loc159)
    cir.brcond %34 ^bb13, ^bb17 loc(#loc57)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc160)
  ^bb14:  // pred: ^bb13
    %35 = cir.const #cir.int<0> : !s32i loc(#loc59)
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc60)
    %37 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc61)
    %38 = cir.ptr_stride(%36 : !cir.ptr<!s32i>, %37 : !u64i), !cir.ptr<!s32i> loc(#loc62)
    cir.store %35, %38 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    cir.br ^bb15 loc(#loc52)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc52)
  ^bb16:  // pred: ^bb15
    %39 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc63)
    %40 = cir.unary(inc, %39) : !u64i, !u64i loc(#loc64)
    cir.store %40, %0 : !u64i, !cir.ptr<!u64i> loc(#loc162)
    cir.br ^bb12 loc(#loc157)
  ^bb17:  // pred: ^bb12
    cir.br ^bb18 loc(#loc52)
  ^bb18:  // pred: ^bb17
    %41 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc65)
    %42 = cir.const #cir.int<0> : !s32i loc(#loc66)
    %43 = cir.ptr_stride(%41 : !cir.ptr<!s32i>, %42 : !s32i), !cir.ptr<!s32i> loc(#loc67)
    %44 = cir.load %43 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    cir.call @printIntLine(%44) : (!s32i) -> () loc(#loc68)
    %45 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc69)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc69)
    cir.call @free(%46) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc70)
    cir.br ^bb19 loc(#loc36)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc12)
  } loc(#loc138)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc164)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc73)
    cir.return loc(#loc72)
  } loc(#loc163)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc166)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc167)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc168)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc83)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc84)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    cir.br ^bb1 loc(#loc170)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc171)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc171)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc88)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc88)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc172)
  ^bb2:  // pred: ^bb1
    %9 = cir.const #cir.int<20> : !s32i loc(#loc93)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    cir.br ^bb4 loc(#loc91)
  ^bb3:  // pred: ^bb1
    %10 = cir.const #cir.int<20> : !s32i loc(#loc95)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc174)
    cir.br ^bb4 loc(#loc87)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc87)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc175)
  ^bb6:  // pred: ^bb5
    %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc99)
    %12 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc100)
    %14 = cir.const #cir.int<4> : !u64i loc(#loc176)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc177)
    %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc99)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc178)
    cir.store %17, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc179)
    cir.br ^bb7 loc(#loc180)
  ^bb7:  // pred: ^bb6
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc107)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc108)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc108)
    %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s32i>, !cir.bool loc(#loc181)
    cir.brcond %21 ^bb8, ^bb9 loc(#loc182)
  ^bb8:  // pred: ^bb7
    %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc110)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc112)
    cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc110)
    cir.br ^bb9 loc(#loc106)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc106)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc183)
  ^bb11:  // pred: ^bb10
    %25 = cir.const #cir.int<0> : !s32i loc(#loc115)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc115)
    cir.store %26, %0 : !u64i, !cir.ptr<!u64i> loc(#loc184)
    cir.br ^bb12 loc(#loc183)
  ^bb12:  // 2 preds: ^bb11, ^bb16
    %27 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc117)
    %28 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc118)
    %30 = cir.cmp(lt, %27, %29) : !u64i, !cir.bool loc(#loc185)
    cir.brcond %30 ^bb13, ^bb17 loc(#loc119)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc186)
  ^bb14:  // pred: ^bb13
    %31 = cir.const #cir.int<0> : !s32i loc(#loc121)
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc122)
    %33 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc123)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!s32i>, %33 : !u64i), !cir.ptr<!s32i> loc(#loc124)
    cir.store %31, %34 : !s32i, !cir.ptr<!s32i> loc(#loc187)
    cir.br ^bb15 loc(#loc114)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc114)
  ^bb16:  // pred: ^bb15
    %35 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc125)
    %36 = cir.unary(inc, %35) : !u64i, !u64i loc(#loc126)
    cir.store %36, %0 : !u64i, !cir.ptr<!u64i> loc(#loc188)
    cir.br ^bb12 loc(#loc183)
  ^bb17:  // pred: ^bb12
    cir.br ^bb18 loc(#loc114)
  ^bb18:  // pred: ^bb17
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc127)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc128)
    %39 = cir.ptr_stride(%37 : !cir.ptr<!s32i>, %38 : !s32i), !cir.ptr<!s32i> loc(#loc129)
    %40 = cir.load %39 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    cir.call @printIntLine(%40) : (!s32i) -> () loc(#loc130)
    %41 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc131)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc131)
    cir.call @free(%42) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc132)
    cir.br ^bb19 loc(#loc98)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc76)
  } loc(#loc165)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":21:1)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":52:1)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":39:9)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":39:16)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":40:9)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":40:14)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":23:5)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":23:9)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":25:13)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":25:12)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":25:5)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":26:5)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":37:5)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":26:8)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":26:33)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":27:5)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":32:5)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":34:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":29:16)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":29:26)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":29:30)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":29:9)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":36:16)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":36:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":38:5)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":51:5)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":43:28)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":43:35)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":43:42)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":43:52)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":43:53)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":43:9)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":44:9)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":44:43)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":44:13)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":44:27)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":44:33)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":44:34)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":44:40)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":44:39)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":45:9)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":48:9)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":45:18)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":45:14)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":45:21)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":45:33)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":45:23)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":46:9)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":47:29)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":47:13)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":47:24)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":47:25)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":45:40)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":45:39)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":49:22)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":49:33)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":49:34)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":49:9)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":50:14)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":50:9)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":91:1)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":94:1)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":93:5)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":93:13)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":60:1)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":89:1)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":76:9)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":76:16)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":77:9)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":77:14)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":62:5)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":62:9)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":64:13)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":64:12)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":64:5)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":65:5)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":74:5)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":65:8)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":65:33)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":66:5)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":69:5)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":71:5)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":68:16)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":68:9)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":73:16)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":73:9)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":75:5)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":88:5)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":80:28)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":80:35)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":80:42)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":80:52)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":80:53)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":80:9)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":81:9)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":81:43)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":81:13)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":81:27)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":81:33)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":81:34)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":81:40)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":81:39)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":82:9)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":85:9)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":82:18)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":82:14)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":82:21)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":82:33)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":82:23)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":83:9)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":84:29)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":84:13)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":84:24)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":84:25)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":82:40)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":82:39)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":86:22)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":86:33)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":86:34)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":86:9)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":87:14)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_12.c":87:9)
#loc133 = loc(fused[#loc1, #loc2])
#loc134 = loc(fused[#loc3, #loc4])
#loc135 = loc(fused[#loc5, #loc6])
#loc136 = loc(fused[#loc7, #loc8])
#loc137 = loc(fused[#loc9, #loc10])
#loc138 = loc(fused[#loc11, #loc12])
#loc139 = loc(fused[#loc13, #loc14])
#loc140 = loc(fused[#loc15, #loc16])
#loc141 = loc(fused[#loc17, #loc18])
#loc142 = loc(fused[#loc21, #loc19])
#loc143 = loc(fused[#loc22, #loc23])
#loc144 = loc(fused[#loc24, #loc25])
#loc145 = loc(fused[#loc26, #loc27, #loc28, #loc23])
#loc146 = loc(fused[#loc29, #loc30])
#loc147 = loc(fused[#loc32, #loc31])
#loc148 = loc(fused[#loc34, #loc33])
#loc149 = loc(fused[#loc35, #loc36])
#loc150 = loc(fused[#loc39, #loc40])
#loc151 = loc(fused[#loc38, #loc40])
#loc152 = loc(fused[#loc37, #loc41])
#loc153 = loc(fused[#loc42, #loc41])
#loc154 = loc(fused[#loc43, #loc44])
#loc155 = loc(fused[#loc45, #loc46])
#loc156 = loc(fused[#loc47, #loc44])
#loc157 = loc(fused[#loc51, #loc52])
#loc158 = loc(fused[#loc54, #loc53])
#loc159 = loc(fused[#loc55, #loc56])
#loc160 = loc(fused[#loc58, #loc52])
#loc161 = loc(fused[#loc60, #loc59])
#loc162 = loc(fused[#loc64, #loc63])
#loc163 = loc(fused[#loc71, #loc72])
#loc164 = loc(fused[#loc73, #loc74])
#loc165 = loc(fused[#loc75, #loc76])
#loc166 = loc(fused[#loc77, #loc78])
#loc167 = loc(fused[#loc79, #loc80])
#loc168 = loc(fused[#loc81, #loc82])
#loc169 = loc(fused[#loc85, #loc83])
#loc170 = loc(fused[#loc86, #loc87])
#loc171 = loc(fused[#loc88, #loc89])
#loc172 = loc(fused[#loc90, #loc91, #loc92, #loc87])
#loc173 = loc(fused[#loc94, #loc93])
#loc174 = loc(fused[#loc96, #loc95])
#loc175 = loc(fused[#loc97, #loc98])
#loc176 = loc(fused[#loc101, #loc102])
#loc177 = loc(fused[#loc100, #loc102])
#loc178 = loc(fused[#loc99, #loc103])
#loc179 = loc(fused[#loc104, #loc103])
#loc180 = loc(fused[#loc105, #loc106])
#loc181 = loc(fused[#loc107, #loc108])
#loc182 = loc(fused[#loc109, #loc106])
#loc183 = loc(fused[#loc113, #loc114])
#loc184 = loc(fused[#loc116, #loc115])
#loc185 = loc(fused[#loc117, #loc118])
#loc186 = loc(fused[#loc120, #loc114])
#loc187 = loc(fused[#loc122, #loc121])
#loc188 = loc(fused[#loc126, #loc125])
