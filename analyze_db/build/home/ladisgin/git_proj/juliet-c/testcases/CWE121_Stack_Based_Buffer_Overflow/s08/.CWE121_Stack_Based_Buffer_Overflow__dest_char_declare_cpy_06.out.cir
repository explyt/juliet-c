!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":118:10)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":118:14)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":118:20)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":118:32)
#loc178 = loc(fused[#loc59, #loc60])
#loc179 = loc(fused[#loc61, #loc62])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc157)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc158)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc160)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc161)
    %2 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc162)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc163)
    cir.br ^bb1 loc(#loc164)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<5> : !s32i loc(#loc17)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc18)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc165)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc166)
  ^bb2:  // pred: ^bb1
    %7 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc20)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc167)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc22)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc22)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc24)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc25)
    cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc168)
    cir.br ^bb3 loc(#loc16)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc16)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc169)
  ^bb5:  // pred: ^bb4
    %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc28)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc28)
    %15 = cir.const #cir.int<67> : !s32i loc(#loc29)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc30)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc30)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc30)
    cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc170)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc34)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc35)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc35)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc37)
    %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc37)
    cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc171)
    %27 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc38)
    %28 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc40)
    %30 = cir.call @strcpy(%28, %29) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc38)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc42)
    cir.br ^bb6 loc(#loc27)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc6)
  } loc(#loc159)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc173)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc174)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    cir.return loc(#loc44)
  } loc(#loc172)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc175)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc176)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc56)
  cir.func @main(%arg0: !s32i loc(fused[#loc59, #loc60]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc61, #loc62])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc178)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc179)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc58)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc63)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc63)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc64)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc65)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc65)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc66)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc53)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06_good : !cir.ptr<!cir.func<!void ()>> loc(#loc180)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06_good() : () -> () loc(#loc68)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc54)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc55)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc181)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06_bad() : () -> () loc(#loc72)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc56)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc75)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc182)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc182)
    cir.return %17 : !s32i loc(#loc182)
  } loc(#loc177)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc77)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc184)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc185)
    %2 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc186)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc187)
    cir.br ^bb1 loc(#loc188)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<5> : !s32i loc(#loc90)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc91)
    %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc189)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc190)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc77)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    cir.br ^bb4 loc(#loc93)
  ^bb3:  // pred: ^bb1
    %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc96)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc191)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc98)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc98)
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc100)
    %14 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc101)
    cir.store %11, %14 : !s8i, !cir.ptr<!s8i> loc(#loc192)
    cir.br ^bb4 loc(#loc89)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc89)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc193)
  ^bb6:  // pred: ^bb5
    %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc104)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc104)
    %17 = cir.const #cir.int<67> : !s32i loc(#loc105)
    %18 = cir.const #cir.int<100> : !s32i loc(#loc106)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc106)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc106)
    cir.libc.memset %21 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc194)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc110)
    %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc110)
    %24 = cir.const #cir.int<100> : !s32i loc(#loc111)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc111)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc113)
    %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc113)
    cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc195)
    %29 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc114)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
    %31 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc116)
    %32 = cir.call @strcpy(%30, %31) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc114)
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
    cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    cir.br ^bb7 loc(#loc103)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc79)
  } loc(#loc183)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc197)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc198)
    %2 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc199)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc200)
    cir.br ^bb1 loc(#loc201)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<5> : !s32i loc(#loc131)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc132)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc202)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc203)
  ^bb2:  // pred: ^bb1
    %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc134)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc204)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc136)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc136)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc138)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc139)
    cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc205)
    cir.br ^bb3 loc(#loc130)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc130)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc206)
  ^bb5:  // pred: ^bb4
    %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc142)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc142)
    %15 = cir.const #cir.int<67> : !s32i loc(#loc143)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc144)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc145)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc144)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc144)
    cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc207)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc148)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc148)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc149)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc150)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc149)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc151)
    %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc151)
    cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc208)
    %27 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc152)
    %28 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc154)
    %30 = cir.call @strcpy(%28, %29) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc152)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc156)
    cir.br ^bb6 loc(#loc141)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc120)
  } loc(#loc196)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":0:0)
#loc1 = loc("/usr/include/string.h":141:1)
#loc2 = loc("/usr/include/string.h":142:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":27:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":47:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":40:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":40:24)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":29:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":29:12)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":30:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":30:26)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":31:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":31:28)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":32:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":38:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":32:8)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":32:27)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":33:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":36:16)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":36:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":37:19)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":37:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":37:14)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":37:15)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":39:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":46:5)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":41:16)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":41:24)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":41:29)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":41:33)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":41:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":41:34)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":42:25)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":42:16)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":42:20)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":42:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":44:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":44:16)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":44:22)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":45:19)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":45:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":102:1)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":106:1)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":104:5)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":104:14)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":105:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":105:14)
#loc49 = loc("/usr/include/stdlib.h":575:1)
#loc50 = loc("/usr/include/stdlib.h":575:41)
#loc51 = loc("/usr/include/time.h":76:1)
#loc52 = loc("/usr/include/time.h":76:38)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":123:15)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":125:15)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":128:15)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":130:15)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":118:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":133:1)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":119:1)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":121:27)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":121:22)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":121:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":123:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":124:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":124:71)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":125:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":128:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":129:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":129:70)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":130:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":132:12)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":132:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":62:19)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":54:1)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":78:1)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":71:9)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":71:24)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":56:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":56:12)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":57:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":57:26)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":58:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":58:28)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":59:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":69:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":59:8)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":59:27)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":60:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":63:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":65:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":62:9)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":67:16)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":67:9)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":68:19)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":68:9)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":68:14)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":68:15)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":70:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":77:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":72:16)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":72:24)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":72:29)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":72:33)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":72:9)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":72:34)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":73:25)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":73:16)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":73:20)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":73:9)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":75:9)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":75:16)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":75:22)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":76:19)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":76:9)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":81:1)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":100:1)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":93:9)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":93:24)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":83:5)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":83:12)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":84:5)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":84:26)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":85:5)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":85:28)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":86:5)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":91:5)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":86:8)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":86:27)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":87:5)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":89:16)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":89:9)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":90:19)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":90:9)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":90:14)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":90:15)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":92:5)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":99:5)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":94:16)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":94:24)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":94:29)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":94:33)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":94:9)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":94:34)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":95:25)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":95:16)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":95:20)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":95:9)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":97:9)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":97:16)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":97:22)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":98:19)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__dest_char_declare_cpy_06.c":98:9)
#loc157 = loc(fused[#loc1, #loc2])
#loc158 = loc(fused[#loc3, #loc4])
#loc159 = loc(fused[#loc5, #loc6])
#loc160 = loc(fused[#loc7, #loc8])
#loc161 = loc(fused[#loc9, #loc10])
#loc162 = loc(fused[#loc11, #loc12])
#loc163 = loc(fused[#loc13, #loc14])
#loc164 = loc(fused[#loc15, #loc16])
#loc165 = loc(fused[#loc17, #loc18])
#loc166 = loc(fused[#loc19, #loc16])
#loc167 = loc(fused[#loc21, #loc20])
#loc168 = loc(fused[#loc23, #loc22])
#loc169 = loc(fused[#loc26, #loc27])
#loc170 = loc(fused[#loc32, #loc33])
#loc171 = loc(fused[#loc37, #loc34])
#loc172 = loc(fused[#loc43, #loc44])
#loc173 = loc(fused[#loc45, #loc46])
#loc174 = loc(fused[#loc47, #loc48])
#loc175 = loc(fused[#loc49, #loc50])
#loc176 = loc(fused[#loc51, #loc52])
#loc177 = loc(fused[#loc57, #loc58])
#loc180 = loc(fused[#loc68, #loc69])
#loc181 = loc(fused[#loc72, #loc73])
#loc182 = loc(fused[#loc76, #loc75])
#loc183 = loc(fused[#loc78, #loc79])
#loc184 = loc(fused[#loc80, #loc81])
#loc185 = loc(fused[#loc82, #loc83])
#loc186 = loc(fused[#loc84, #loc85])
#loc187 = loc(fused[#loc86, #loc87])
#loc188 = loc(fused[#loc88, #loc89])
#loc189 = loc(fused[#loc90, #loc91])
#loc190 = loc(fused[#loc92, #loc93, #loc94, #loc89])
#loc191 = loc(fused[#loc97, #loc96])
#loc192 = loc(fused[#loc99, #loc98])
#loc193 = loc(fused[#loc102, #loc103])
#loc194 = loc(fused[#loc108, #loc109])
#loc195 = loc(fused[#loc113, #loc110])
#loc196 = loc(fused[#loc119, #loc120])
#loc197 = loc(fused[#loc121, #loc122])
#loc198 = loc(fused[#loc123, #loc124])
#loc199 = loc(fused[#loc125, #loc126])
#loc200 = loc(fused[#loc127, #loc128])
#loc201 = loc(fused[#loc129, #loc130])
#loc202 = loc(fused[#loc131, #loc132])
#loc203 = loc(fused[#loc133, #loc130])
#loc204 = loc(fused[#loc135, #loc134])
#loc205 = loc(fused[#loc137, #loc136])
#loc206 = loc(fused[#loc140, #loc141])
#loc207 = loc(fused[#loc146, #loc147])
#loc208 = loc(fused[#loc151, #loc148])
