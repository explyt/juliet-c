!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc8 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":44:64)
#loc9 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":44:78)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":68:68)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":68:82)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":87:68)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":87:82)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":93:23)
#true = #cir.bool<true> : !cir.bool
#loc87 = loc(fused[#loc8, #loc9])
#loc95 = loc(fused[#loc32, #loc33])
#loc103 = loc(fused[#loc58, #loc59])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_connect_socket_66b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc84)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc85)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc5)
  cir.func @CWE126_Buffer_Overread__CWE129_connect_socket_66b_badSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc8, #loc9])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc88)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc87)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc89)
    cir.store %arg0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc14)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc15)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc16)
    %5 = cir.ptr_stride(%3 : !cir.ptr<!s32i>, %4 : !s32i), !cir.ptr<!s32i> loc(#loc13)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc15)
    cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc89)
    cir.br ^bb1 loc(#loc90)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc88)
    cir.store %7, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc88)
    cir.br ^bb2 loc(#loc91)
  ^bb2:  // pred: ^bb1
    %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc22)
    %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc92)
    cir.brcond %10 ^bb3, ^bb4 loc(#loc93)
  ^bb3:  // pred: ^bb2
    %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc26)
    %12 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc27)
    %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc27)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc27)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc28)
    cir.br ^bb5 loc(#loc24)
  ^bb4:  // pred: ^bb2
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc5)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc5)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc29)
    cir.br ^bb5 loc(#loc20)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc20)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc18)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc7)
  } loc(#loc86)
  cir.func @CWE126_Buffer_Overread__CWE129_connect_socket_66b_goodG2BSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc32, #loc33])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc96)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc95)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc97)
    cir.store %arg0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc38)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc39)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc40)
    %5 = cir.ptr_stride(%3 : !cir.ptr<!s32i>, %4 : !s32i), !cir.ptr<!s32i> loc(#loc37)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc39)
    cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc97)
    cir.br ^bb1 loc(#loc98)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc96)
    cir.store %7, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc96)
    cir.br ^bb2 loc(#loc99)
  ^bb2:  // pred: ^bb1
    %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc45)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc46)
    %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc100)
    cir.brcond %10 ^bb3, ^bb4 loc(#loc101)
  ^bb3:  // pred: ^bb2
    %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc50)
    %12 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc51)
    %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc51)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc51)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc52)
    cir.br ^bb5 loc(#loc48)
  ^bb4:  // pred: ^bb2
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc53)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    cir.br ^bb5 loc(#loc44)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc44)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc42)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc31)
  } loc(#loc94)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc55)
  cir.func @CWE126_Buffer_Overread__CWE129_connect_socket_66b_goodB2GSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc58, #loc59])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc104)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc103)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc105)
    cir.store %arg0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc64)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc65)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc66)
    %5 = cir.ptr_stride(%3 : !cir.ptr<!s32i>, %4 : !s32i), !cir.ptr<!s32i> loc(#loc63)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc105)
    cir.br ^bb1 loc(#loc106)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc104)
    cir.store %7, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc104)
    cir.br ^bb2 loc(#loc107)
  ^bb2:  // pred: ^bb1
    %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc71)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc72)
    %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc108)
    cir.brcond %10 ^bb3, ^bb8 loc(#loc73)
  ^bb3:  // pred: ^bb2
    %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc74)
    %12 = cir.const #cir.int<10> : !s32i loc(#loc75)
    %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc109)
    cir.brcond %13 ^bb4, ^bb5 loc(#loc73)
  ^bb4:  // pred: ^bb3
    %14 = cir.const #true loc(#loc73)
    cir.br ^bb6(%14 : !cir.bool) loc(#loc73)
  ^bb5:  // pred: ^bb3
    %15 = cir.const #false loc(#loc73)
    cir.br ^bb6(%15 : !cir.bool) loc(#loc73)
  ^bb6(%16: !cir.bool loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":93:23)):  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc73)
  ^bb7:  // pred: ^bb6
    cir.br ^bb9(%16 : !cir.bool) loc(#loc73)
  ^bb8:  // pred: ^bb2
    %17 = cir.const #false loc(#loc73)
    cir.br ^bb9(%17 : !cir.bool) loc(#loc73)
  ^bb9(%18: !cir.bool loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":93:23)):  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc73)
  ^bb10:  // pred: ^bb9
    cir.brcond %18 ^bb11, ^bb12 loc(#loc110)
  ^bb11:  // pred: ^bb10
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc80)
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc81)
    %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc81)
    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc81)
    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc82)
    cir.br ^bb13 loc(#loc78)
  ^bb12:  // pred: ^bb10
    %23 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc55)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    cir.br ^bb13 loc(#loc70)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc70)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc68)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc57)
  } loc(#loc102)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":58:23)
#loc6 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":44:1)
#loc7 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":61:1)
#loc10 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":49:9)
#loc11 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":49:30)
#loc12 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":47:5)
#loc13 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":47:27)
#loc14 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":45:1)
#loc15 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":47:16)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":47:26)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":48:5)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":60:5)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":52:9)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":59:9)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":52:13)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":52:21)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":53:9)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":55:9)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":57:9)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":54:33)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":54:26)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":54:13)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":58:13)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":68:1)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":84:1)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":72:9)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":72:30)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":70:5)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":70:27)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":69:1)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":70:16)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":70:26)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":71:5)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":83:5)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":75:9)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":82:9)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":75:13)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":75:21)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":76:9)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":78:9)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":80:9)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":77:33)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":77:26)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":77:13)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":81:23)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":81:13)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":99:23)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":87:1)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":102:1)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":91:9)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":91:30)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":89:5)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":89:27)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":88:1)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":89:16)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":89:26)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":90:5)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":101:5)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":93:9)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":100:9)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":93:13)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":93:21)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":93:26)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":93:34)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":93:36)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":94:9)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":96:9)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":98:9)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":95:33)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":95:26)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":95:13)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_66b.c":99:13)
#loc84 = loc(fused[#loc1, #loc2])
#loc85 = loc(fused[#loc3, #loc4])
#loc86 = loc(fused[#loc6, #loc7])
#loc88 = loc(fused[#loc10, #loc11])
#loc89 = loc(fused[#loc12, #loc13])
#loc90 = loc(fused[#loc17, #loc18])
#loc91 = loc(fused[#loc19, #loc20])
#loc92 = loc(fused[#loc21, #loc22])
#loc93 = loc(fused[#loc23, #loc24, #loc25, #loc20])
#loc94 = loc(fused[#loc30, #loc31])
#loc96 = loc(fused[#loc34, #loc35])
#loc97 = loc(fused[#loc36, #loc37])
#loc98 = loc(fused[#loc41, #loc42])
#loc99 = loc(fused[#loc43, #loc44])
#loc100 = loc(fused[#loc45, #loc46])
#loc101 = loc(fused[#loc47, #loc48, #loc49, #loc44])
#loc102 = loc(fused[#loc56, #loc57])
#loc104 = loc(fused[#loc60, #loc61])
#loc105 = loc(fused[#loc62, #loc63])
#loc106 = loc(fused[#loc67, #loc68])
#loc107 = loc(fused[#loc69, #loc70])
#loc108 = loc(fused[#loc71, #loc72])
#loc109 = loc(fused[#loc74, #loc76])
#loc110 = loc(fused[#loc77, #loc78, #loc79, #loc70])
