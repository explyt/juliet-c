!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc12 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":59:71)
#loc13 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":59:78)
#loc133 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":114:44)
#loc180 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":151:75)
#loc181 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":151:82)
#loc215 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":190:10)
#loc216 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":190:14)
#loc217 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":190:20)
#loc218 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":190:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc251 = loc(fused[#loc12, #loc13])
#loc317 = loc(fused[#loc180, #loc181])
#loc330 = loc(fused[#loc215, #loc216])
#loc331 = loc(fused[#loc217, #loc218])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_popen_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc246)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_connect_socket_popen_41_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc247)
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc248)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc7)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc249)
  cir.func @CWE78_OS_Command_Injection__char_connect_socket_popen_41_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc12, #loc13])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc252)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc251)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc16)
    cir.br ^bb1 loc(#loc253)
  ^bb1:  // pred: ^bb0
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc7)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc7)
    %5 = cir.call @popen(%2, %4) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc20)
    cir.store %5, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc254)
    cir.br ^bb2 loc(#loc255)
  ^bb2:  // pred: ^bb1
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc25)
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc26)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc26)
    %9 = cir.cmp(ne, %6, %8) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc256)
    cir.brcond %9 ^bb3, ^bb4 loc(#loc257)
  ^bb3:  // pred: ^bb2
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
    %11 = cir.call @pclose(%10) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc29)
    cir.br ^bb4 loc(#loc24)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc24)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc18)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc11)
  } loc(#loc250)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc258)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc259)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr1) loc(#loc260)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc36)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr1) loc(#loc261)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc262)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc263)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc264)
  cir.func private @close(!s32i) -> !s32i loc(#loc265)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_popen_41_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc267)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc268)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc269)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc270)
    %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc271)
    %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc272)
    %6 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc247)
    %7 = cir.get_global @__const.CWE78_OS_Command_Injection__char_connect_socket_popen_41_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc247)
    cir.copy %7 to %6 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc247)
    %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc61)
    cir.store %8, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc273)
    cir.br ^bb1 loc(#loc274)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc56)
    cir.store %10, %3 : !s32i, !cir.ptr<!s32i> loc(#loc270)
    %11 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc65)
    %12 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
    %13 = cir.call @strlen(%12) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc65)
    cir.store %13, %4 : !u64i, !cir.ptr<!u64i> loc(#loc271)
    cir.br ^bb2 loc(#loc275)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc275)
  ^bb3:  // pred: ^bb32
    %14 = cir.const #cir.int<0> : !s32i loc(#loc69)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc69)
    cir.brcond %15 ^bb4, ^bb33 loc(#loc69)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %16 = cir.const #cir.int<2> : !s32i loc(#loc70)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc71)
    %18 = cir.const #cir.int<6> : !s32i loc(#loc72)
    %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc73)
    cir.store %19, %3 : !s32i, !cir.ptr<!s32i> loc(#loc276)
    cir.br ^bb5 loc(#loc277)
  ^bb5:  // pred: ^bb4
    %20 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc78)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc79)
    %23 = cir.cmp(eq, %20, %22) : !s32i, !cir.bool loc(#loc278)
    cir.brcond %23 ^bb6, ^bb7 loc(#loc279)
  ^bb6:  // pred: ^bb5
    cir.br ^bb33 loc(#loc81)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc77)
  ^bb8:  // pred: ^bb7
    %24 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc280)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc84)
    %26 = cir.const #cir.int<16> : !u64i loc(#loc281)
    cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc282)
    %27 = cir.const #cir.int<2> : !s32i loc(#loc89)
    %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc89)
    %29 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc90)
    cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc283)
    %30 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc36)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc36)
    %32 = cir.call @inet_addr(%31) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr1) loc(#loc92)
    %33 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc93)
    %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc94)
    cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc284)
    %35 = cir.const #cir.int<27015> : !s32i loc(#loc97)
    %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc97)
    %37 = cir.call @htons(%36) : (!u16i) -> !u16i extra(#fn_attr1) loc(#loc98)
    %38 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc99)
    cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc285)
    cir.br ^bb9 loc(#loc286)
  ^bb9:  // pred: ^bb8
    %39 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    %40 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc287)
    %41 = cir.const #cir.int<16> : !u64i loc(#loc288)
    %42 = cir.cast(integral, %41 : !u64i), !u32i loc(#loc288)
    %43 = cir.call @connect(%39, %40, %42) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc109)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %45 = cir.unary(minus, %44) : !s32i, !s32i loc(#loc110)
    %46 = cir.cmp(eq, %43, %45) : !s32i, !cir.bool loc(#loc289)
    cir.brcond %46 ^bb10, ^bb11 loc(#loc290)
  ^bb10:  // pred: ^bb9
    cir.br ^bb33 loc(#loc112)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc103)
  ^bb12:  // pred: ^bb11
    %47 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    %48 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
    %49 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc115)
    %50 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %49 : !u64i), !cir.ptr<!s8i> loc(#loc116)
    %51 = cir.cast(bitcast, %50 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc291)
    %52 = cir.const #cir.int<1> : !u64i loc(#loc292)
    %53 = cir.const #cir.int<100> : !s32i loc(#loc121)
    %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc121)
    %55 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc122)
    %56 = cir.binop(sub, %54, %55) : !u64i loc(#loc293)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc123)
    %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc123)
    %59 = cir.binop(sub, %56, %58) : !u64i loc(#loc294)
    %60 = cir.binop(mul, %52, %59) : !u64i loc(#loc295)
    %61 = cir.const #cir.int<0> : !s32i loc(#loc125)
    %62 = cir.call @recv(%47, %51, %60, %61) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc126)
    %63 = cir.cast(integral, %62 : !s64i), !s32i loc(#loc126)
    cir.store %63, %0 : !s32i, !cir.ptr<!s32i> loc(#loc296)
    cir.br ^bb13 loc(#loc297)
  ^bb13:  // pred: ^bb12
    %64 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc131)
    %65 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc132)
    %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc298)
    cir.brcond %67 ^bb14, ^bb15 loc(#loc133)
  ^bb14:  // pred: ^bb13
    %68 = cir.const #true loc(#loc133)
    cir.br ^bb20(%68 : !cir.bool) loc(#loc133)
  ^bb15:  // pred: ^bb13
    %69 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc134)
    %70 = cir.const #cir.int<0> : !s32i loc(#loc135)
    %71 = cir.cmp(eq, %69, %70) : !s32i, !cir.bool loc(#loc299)
    cir.brcond %71 ^bb16, ^bb17 loc(#loc133)
  ^bb16:  // pred: ^bb15
    %72 = cir.const #true loc(#loc133)
    cir.br ^bb18(%72 : !cir.bool) loc(#loc133)
  ^bb17:  // pred: ^bb15
    %73 = cir.const #false loc(#loc133)
    cir.br ^bb18(%73 : !cir.bool) loc(#loc133)
  ^bb18(%74: !cir.bool loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":114:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc133)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%74 : !cir.bool) loc(#loc133)
  ^bb20(%75: !cir.bool loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":114:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc133)
  ^bb21:  // pred: ^bb20
    cir.brcond %75 ^bb22, ^bb23 loc(#loc300)
  ^bb22:  // pred: ^bb21
    cir.br ^bb33 loc(#loc137)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc130)
  ^bb24:  // pred: ^bb23
    %76 = cir.const #cir.int<0> : !s32i loc(#loc138)
    %77 = cir.cast(integral, %76 : !s32i), !s8i loc(#loc138)
    %78 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
    %79 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc140)
    %80 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc141)
    %81 = cir.cast(integral, %80 : !s32i), !u64i loc(#loc141)
    %82 = cir.const #cir.int<1> : !u64i loc(#loc301)
    %83 = cir.binop(div, %81, %82) : !u64i loc(#loc302)
    %84 = cir.binop(add, %79, %83) : !u64i loc(#loc303)
    %85 = cir.ptr_stride(%78 : !cir.ptr<!s8i>, %84 : !u64i), !cir.ptr<!s8i> loc(#loc144)
    cir.store %77, %85 : !s8i, !cir.ptr<!s8i> loc(#loc304)
    %86 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
    %87 = cir.const #cir.int<13> : !s32i loc(#loc146)
    %88 = cir.call @strchr(%86, %87) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc147)
    cir.store %88, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc305)
    cir.br ^bb25 loc(#loc306)
  ^bb25:  // pred: ^bb24
    %89 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
    %90 = cir.cast(ptr_to_bool, %89 : !cir.ptr<!s8i>), !cir.bool loc(#loc152)
    cir.brcond %90 ^bb26, ^bb27 loc(#loc307)
  ^bb26:  // pred: ^bb25
    %91 = cir.const #cir.int<0> : !s32i loc(#loc154)
    %92 = cir.cast(integral, %91 : !s32i), !s8i loc(#loc154)
    %93 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
    cir.store %92, %93 : !s8i, !cir.ptr<!s8i> loc(#loc308)
    cir.br ^bb27 loc(#loc151)
  ^bb27:  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc151)
  ^bb28:  // pred: ^bb27
    %94 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
    %95 = cir.const #cir.int<10> : !s32i loc(#loc158)
    %96 = cir.call @strchr(%94, %95) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc159)
    cir.store %96, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc309)
    cir.br ^bb29 loc(#loc310)
  ^bb29:  // pred: ^bb28
    %97 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
    %98 = cir.cast(ptr_to_bool, %97 : !cir.ptr<!s8i>), !cir.bool loc(#loc164)
    cir.brcond %98 ^bb30, ^bb31 loc(#loc311)
  ^bb30:  // pred: ^bb29
    %99 = cir.const #cir.int<0> : !s32i loc(#loc166)
    %100 = cir.cast(integral, %99 : !s32i), !s8i loc(#loc166)
    %101 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
    cir.store %100, %101 : !s8i, !cir.ptr<!s8i> loc(#loc312)
    cir.br ^bb31 loc(#loc163)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc163)
  ^bb32:  // pred: ^bb31
    cir.br ^bb3 loc(#loc68)
  ^bb33:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb34 loc(#loc68)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc313)
  ^bb35:  // pred: ^bb34
    %102 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc171)
    %103 = cir.const #cir.int<1> : !s32i loc(#loc172)
    %104 = cir.unary(minus, %103) : !s32i, !s32i loc(#loc172)
    %105 = cir.cmp(ne, %102, %104) : !s32i, !cir.bool loc(#loc314)
    cir.brcond %105 ^bb36, ^bb37 loc(#loc315)
  ^bb36:  // pred: ^bb35
    %106 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc174)
    %107 = cir.call @close(%106) : (!s32i) -> !s32i loc(#loc175)
    cir.br ^bb37 loc(#loc170)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc170)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc64)
  ^bb39:  // pred: ^bb38
    %108 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
    cir.call @CWE78_OS_Command_Injection__char_connect_socket_popen_41_badSink(%108) : (!cir.ptr<!s8i>) -> () loc(#loc177)
    cir.return loc(#loc48)
  } loc(#loc266)
  cir.func @CWE78_OS_Command_Injection__char_connect_socket_popen_41_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc180, #loc181])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc318)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc317)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc184)
    cir.br ^bb1 loc(#loc319)
  ^bb1:  // pred: ^bb0
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc187)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc188)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc188)
    %5 = cir.call @popen(%2, %4) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc189)
    cir.store %5, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc320)
    cir.br ^bb2 loc(#loc321)
  ^bb2:  // pred: ^bb1
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc194)
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc195)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc195)
    %9 = cir.cmp(ne, %6, %8) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc322)
    cir.brcond %9 ^bb3, ^bb4 loc(#loc323)
  ^bb3:  // pred: ^bb2
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc197)
    %11 = cir.call @pclose(%10) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc198)
    cir.br ^bb4 loc(#loc193)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc193)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc186)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc179)
  } loc(#loc316)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_popen_41_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc325)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc201)
    cir.return loc(#loc200)
  } loc(#loc324)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc326)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc327)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc328)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc209)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc210)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc211)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc212)
  cir.func @main(%arg0: !s32i loc(fused[#loc215, #loc216]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc217, #loc218])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc330)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc331)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc214)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc219)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc219)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc220)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc221)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc221)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc222)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc209)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc209)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc223)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_connect_socket_popen_41_good : !cir.ptr<!cir.func<!void ()>> loc(#loc332)
    cir.call @CWE78_OS_Command_Injection__char_connect_socket_popen_41_good() : () -> () loc(#loc224)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc210)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc210)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc226)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc211)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc211)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc227)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_connect_socket_popen_41_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc333)
    cir.call @CWE78_OS_Command_Injection__char_connect_socket_popen_41_bad() : () -> () loc(#loc228)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc212)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc212)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc230)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc231)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc334)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc334)
    cir.return %17 : !s32i loc(#loc334)
  } loc(#loc329)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc335)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc235)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc337)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc246)
    %2 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc246)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc246)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc240)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc338)
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc242)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc243)
    %6 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc235)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc235)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc242)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc244)
    cir.call @CWE78_OS_Command_Injection__char_connect_socket_popen_41_goodG2BSink(%9) : (!cir.ptr<!s8i>) -> () loc(#loc245)
    cir.return loc(#loc237)
  } loc(#loc336)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":168:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":168:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":75:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":75:26)
#loc5 = loc("/usr/include/stdio.h":893:1)
#loc6 = loc("/usr/include/stdio.h":894:3)
#loc7 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":64:28)
#loc8 = loc("/usr/include/stdio.h":887:1)
#loc9 = loc("/usr/include/stdio.h":887:36)
#loc10 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":59:1)
#loc11 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":70:1)
#loc14 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":62:9)
#loc15 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":62:15)
#loc16 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":60:1)
#loc17 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":61:5)
#loc18 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":69:5)
#loc19 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":64:22)
#loc20 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":64:16)
#loc21 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":64:9)
#loc22 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":64:31)
#loc23 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":65:9)
#loc24 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":68:9)
#loc25 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":65:13)
#loc26 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":65:21)
#loc27 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":66:9)
#loc28 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":67:20)
#loc29 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":67:13)
#loc30 = loc("/usr/include/string.h":407:1)
#loc31 = loc("/usr/include/string.h":408:33)
#loc32 = loc("/usr/include/sys/socket.h":102:1)
#loc33 = loc("/usr/include/sys/socket.h":102:62)
#loc34 = loc("/usr/include/arpa/inet.h":34:1)
#loc35 = loc("/usr/include/arpa/inet.h":34:47)
#loc36 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":104:49)
#loc37 = loc("/usr/include/netinet/in.h":404:1)
#loc38 = loc("/usr/include/netinet/in.h":405:40)
#loc39 = loc("/usr/include/sys/socket.h":126:1)
#loc40 = loc("/usr/include/sys/socket.h":126:75)
#loc41 = loc("/usr/include/sys/socket.h":145:1)
#loc42 = loc("/usr/include/sys/socket.h":145:68)
#loc43 = loc("/usr/include/string.h":246:1)
#loc44 = loc("/usr/include/string.h":247:33)
#loc45 = loc("/usr/include/unistd.h":358:1)
#loc46 = loc("/usr/include/unistd.h":358:27)
#loc47 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":72:1)
#loc48 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":145:1)
#loc49 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":82:9)
#loc50 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":82:13)
#loc51 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":83:9)
#loc52 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":83:28)
#loc53 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":84:9)
#loc54 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":84:15)
#loc55 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":85:9)
#loc56 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":85:32)
#loc57 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":86:9)
#loc58 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":86:37)
#loc59 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":74:5)
#loc60 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":74:12)
#loc61 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":76:12)
#loc62 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":76:5)
#loc63 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":77:5)
#loc64 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":143:5)
#loc65 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":86:26)
#loc66 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":86:33)
#loc67 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":87:9)
#loc68 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":132:17)
#loc69 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":132:16)
#loc70 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":97:36)
#loc71 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":97:45)
#loc72 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":97:58)
#loc73 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":97:29)
#loc74 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":97:13)
#loc75 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":97:69)
#loc76 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":98:13)
#loc77 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":101:13)
#loc78 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":98:17)
#loc79 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":98:34)
#loc80 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":99:13)
#loc81 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":100:17)
#loc82 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":102:20)
#loc83 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":102:21)
#loc84 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":102:30)
#loc85 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":102:33)
#loc86 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":102:47)
#loc87 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":102:13)
#loc88 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":102:48)
#loc89 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":103:34)
#loc90 = loc("/usr/include/netinet/in.h":249:5)
#loc91 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":103:13)
#loc92 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":104:39)
#loc93 = loc("/usr/include/netinet/in.h":251:20)
#loc94 = loc("/usr/include/netinet/in.h":33:15)
#loc95 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":104:13)
#loc96 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":104:59)
#loc97 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":105:38)
#loc98 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":105:32)
#loc99 = loc("/usr/include/netinet/in.h":250:15)
#loc100 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":105:13)
#loc101 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":105:46)
#loc102 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":106:13)
#loc103 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":109:13)
#loc104 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":106:25)
#loc105 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":106:58)
#loc106 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":106:59)
#loc107 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":106:68)
#loc108 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":106:82)
#loc109 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":106:17)
#loc110 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":106:88)
#loc111 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":107:13)
#loc112 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":108:17)
#loc113 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":113:31)
#loc114 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":113:55)
#loc115 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":113:62)
#loc116 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":113:60)
#loc117 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":113:46)
#loc118 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":113:69)
#loc119 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":113:72)
#loc120 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":113:83)
#loc121 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":113:88)
#loc122 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":113:94)
#loc123 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":113:104)
#loc124 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":113:105)
#loc125 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":113:108)
#loc126 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":113:26)
#loc127 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":113:13)
#loc128 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":113:109)
#loc129 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":114:13)
#loc130 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":117:13)
#loc131 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":114:17)
#loc132 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":114:31)
#loc134 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":114:47)
#loc135 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":114:61)
#loc136 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":115:13)
#loc137 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":116:17)
#loc138 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":119:57)
#loc139 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":119:13)
#loc140 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":119:18)
#loc141 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":119:28)
#loc142 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":119:41)
#loc143 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":119:52)
#loc144 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":119:53)
#loc145 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":121:30)
#loc146 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":121:36)
#loc147 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":121:23)
#loc148 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":121:13)
#loc149 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":121:40)
#loc150 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":122:13)
#loc151 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":125:13)
#loc152 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":122:17)
#loc153 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":123:13)
#loc154 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":124:28)
#loc155 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":124:18)
#loc156 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":124:17)
#loc157 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":126:30)
#loc158 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":126:36)
#loc159 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":126:23)
#loc160 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":126:13)
#loc161 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":126:40)
#loc162 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":127:13)
#loc163 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":130:13)
#loc164 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":127:17)
#loc165 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":128:13)
#loc166 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":129:28)
#loc167 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":129:18)
#loc168 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":129:17)
#loc169 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":133:9)
#loc170 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":136:9)
#loc171 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":133:13)
#loc172 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":133:30)
#loc173 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":134:9)
#loc174 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":135:26)
#loc175 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":135:13)
#loc176 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":144:70)
#loc177 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":144:5)
#loc178 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":151:1)
#loc179 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":162:1)
#loc182 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":154:9)
#loc183 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":154:15)
#loc184 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":152:1)
#loc185 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":153:5)
#loc186 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":161:5)
#loc187 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":156:22)
#loc188 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":156:28)
#loc189 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":156:16)
#loc190 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":156:9)
#loc191 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":156:31)
#loc192 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":157:9)
#loc193 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":160:9)
#loc194 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":157:13)
#loc195 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":157:21)
#loc196 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":158:9)
#loc197 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":159:20)
#loc198 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":159:13)
#loc199 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":175:1)
#loc200 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":178:1)
#loc201 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":177:5)
#loc202 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":177:13)
#loc203 = loc("/usr/include/stdlib.h":575:1)
#loc204 = loc("/usr/include/stdlib.h":575:41)
#loc205 = loc("/usr/include/time.h":76:1)
#loc206 = loc("/usr/include/time.h":76:38)
#loc207 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc208 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc209 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":195:15)
#loc210 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":197:15)
#loc211 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":200:15)
#loc212 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":202:15)
#loc213 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":190:1)
#loc214 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":205:1)
#loc219 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":191:1)
#loc220 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":193:27)
#loc221 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":193:22)
#loc222 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":193:5)
#loc223 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":195:5)
#loc224 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":196:5)
#loc225 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":196:67)
#loc226 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":197:5)
#loc227 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":200:5)
#loc228 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":201:5)
#loc229 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":201:66)
#loc230 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":202:5)
#loc231 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":204:12)
#loc232 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":204:5)
#loc233 = loc("/usr/include/string.h":149:1)
#loc234 = loc("/usr/include/string.h":150:14)
#loc235 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":171:18)
#loc236 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":165:1)
#loc237 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":173:1)
#loc238 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":167:5)
#loc239 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":167:12)
#loc240 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":169:12)
#loc241 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":169:5)
#loc242 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":171:5)
#loc243 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":171:12)
#loc244 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":172:74)
#loc245 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_41.c":172:5)
#loc246 = loc(fused[#loc1, #loc2])
#loc247 = loc(fused[#loc3, #loc4])
#loc248 = loc(fused[#loc5, #loc6])
#loc249 = loc(fused[#loc8, #loc9])
#loc250 = loc(fused[#loc10, #loc11])
#loc252 = loc(fused[#loc14, #loc15])
#loc253 = loc(fused[#loc17, #loc18])
#loc254 = loc(fused[#loc21, #loc22])
#loc255 = loc(fused[#loc23, #loc24])
#loc256 = loc(fused[#loc25, #loc26])
#loc257 = loc(fused[#loc27, #loc24])
#loc258 = loc(fused[#loc30, #loc31])
#loc259 = loc(fused[#loc32, #loc33])
#loc260 = loc(fused[#loc34, #loc35])
#loc261 = loc(fused[#loc37, #loc38])
#loc262 = loc(fused[#loc39, #loc40])
#loc263 = loc(fused[#loc41, #loc42])
#loc264 = loc(fused[#loc43, #loc44])
#loc265 = loc(fused[#loc45, #loc46])
#loc266 = loc(fused[#loc47, #loc48])
#loc267 = loc(fused[#loc49, #loc50])
#loc268 = loc(fused[#loc51, #loc52])
#loc269 = loc(fused[#loc53, #loc54])
#loc270 = loc(fused[#loc55, #loc56])
#loc271 = loc(fused[#loc57, #loc58])
#loc272 = loc(fused[#loc59, #loc60])
#loc273 = loc(fused[#loc62, #loc61])
#loc274 = loc(fused[#loc63, #loc64])
#loc275 = loc(fused[#loc67, #loc68])
#loc276 = loc(fused[#loc74, #loc75])
#loc277 = loc(fused[#loc76, #loc77])
#loc278 = loc(fused[#loc78, #loc79])
#loc279 = loc(fused[#loc80, #loc77])
#loc280 = loc(fused[#loc82, #loc83])
#loc281 = loc(fused[#loc85, #loc86])
#loc282 = loc(fused[#loc87, #loc88])
#loc283 = loc(fused[#loc91, #loc89])
#loc284 = loc(fused[#loc95, #loc96])
#loc285 = loc(fused[#loc100, #loc101])
#loc286 = loc(fused[#loc102, #loc103])
#loc287 = loc(fused[#loc105, #loc106])
#loc288 = loc(fused[#loc107, #loc108])
#loc289 = loc(fused[#loc109, #loc110])
#loc290 = loc(fused[#loc111, #loc103])
#loc291 = loc(fused[#loc117, #loc118])
#loc292 = loc(fused[#loc119, #loc120])
#loc293 = loc(fused[#loc121, #loc122])
#loc294 = loc(fused[#loc121, #loc123])
#loc295 = loc(fused[#loc119, #loc124])
#loc296 = loc(fused[#loc127, #loc128])
#loc297 = loc(fused[#loc129, #loc130])
#loc298 = loc(fused[#loc131, #loc132])
#loc299 = loc(fused[#loc134, #loc135])
#loc300 = loc(fused[#loc136, #loc130])
#loc301 = loc(fused[#loc142, #loc143])
#loc302 = loc(fused[#loc141, #loc143])
#loc303 = loc(fused[#loc140, #loc143])
#loc304 = loc(fused[#loc139, #loc138])
#loc305 = loc(fused[#loc148, #loc149])
#loc306 = loc(fused[#loc150, #loc151])
#loc307 = loc(fused[#loc153, #loc151])
#loc308 = loc(fused[#loc156, #loc154])
#loc309 = loc(fused[#loc160, #loc161])
#loc310 = loc(fused[#loc162, #loc163])
#loc311 = loc(fused[#loc165, #loc163])
#loc312 = loc(fused[#loc168, #loc166])
#loc313 = loc(fused[#loc169, #loc170])
#loc314 = loc(fused[#loc171, #loc172])
#loc315 = loc(fused[#loc173, #loc170])
#loc316 = loc(fused[#loc178, #loc179])
#loc318 = loc(fused[#loc182, #loc183])
#loc319 = loc(fused[#loc185, #loc186])
#loc320 = loc(fused[#loc190, #loc191])
#loc321 = loc(fused[#loc192, #loc193])
#loc322 = loc(fused[#loc194, #loc195])
#loc323 = loc(fused[#loc196, #loc193])
#loc324 = loc(fused[#loc199, #loc200])
#loc325 = loc(fused[#loc201, #loc202])
#loc326 = loc(fused[#loc203, #loc204])
#loc327 = loc(fused[#loc205, #loc206])
#loc328 = loc(fused[#loc207, #loc208])
#loc329 = loc(fused[#loc213, #loc214])
#loc332 = loc(fused[#loc224, #loc225])
#loc333 = loc(fused[#loc228, #loc229])
#loc334 = loc(fused[#loc232, #loc231])
#loc335 = loc(fused[#loc233, #loc234])
#loc336 = loc(fused[#loc236, #loc237])
#loc337 = loc(fused[#loc238, #loc239])
#loc338 = loc(fused[#loc241, #loc240])
