!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":88:10)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":88:14)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":88:20)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":88:32)
#loc131 = loc(fused[#loc49, #loc50])
#loc132 = loc(fused[#loc51, #loc52])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc115)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc116)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_declare_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc118)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc119)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc11)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
    cir.br ^bb1 loc(#loc121)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc121)
  ^bb2:  // pred: ^bb1
    %3 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc15)
    cir.brcond %4 ^bb3, ^bb6 loc(#loc15)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc122)
  ^bb4:  // pred: ^bb3
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc18)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
    %7 = cir.const #cir.int<65> : !s32i loc(#loc19)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc20)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc20)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc20)
    cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc123)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc24)
    %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc24)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc25)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc25)
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc27)
    %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc27)
    cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc124)
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc28)
    cir.store %19, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
    cir.br ^bb5 loc(#loc17)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc30)
  ^bb6:  // 2 preds: ^bb2, ^bb5
    cir.br ^bb7 loc(#loc14)
  ^bb7:  // pred: ^bb6
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc32)
    %21 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc33)
    cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc34)
    cir.return loc(#loc6)
  } loc(#loc117)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_declare_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc127)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc37)
    cir.return loc(#loc36)
  } loc(#loc126)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc128)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc129)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc43)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc44)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc46)
  cir.func @main(%arg0: !s32i loc(fused[#loc49, #loc50]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc51, #loc52])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc131)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc132)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc48)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc53)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc53)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc54)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc55)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc55)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc56)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc43)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    %8 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_declare_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc133)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_declare_16_good() : () -> () loc(#loc58)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc44)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc45)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %13 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_declare_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc134)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_declare_16_bad() : () -> () loc(#loc62)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc46)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc65)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc135)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    cir.return %17 : !s32i loc(#loc135)
  } loc(#loc130)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc136)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc69)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc137)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc139)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc140)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc78)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc141)
    cir.br ^bb1 loc(#loc142)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc142)
  ^bb2:  // pred: ^bb1
    %3 = cir.const #cir.int<1> : !s32i loc(#loc82)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc82)
    cir.brcond %4 ^bb3, ^bb10 loc(#loc82)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc143)
  ^bb4:  // pred: ^bb3
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc85)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc86)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc86)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc144)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc145)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc85)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc146)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc139)
    cir.br ^bb5 loc(#loc147)
  ^bb5:  // pred: ^bb4
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc92)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc92)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc148)
    cir.brcond %15 ^bb6, ^bb7 loc(#loc149)
  ^bb6:  // pred: ^bb5
    %16 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc69)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc95)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc96)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc95)
    cir.br ^bb7 loc(#loc90)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc90)
  ^bb8:  // pred: ^bb7
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc97)
    %22 = cir.const #cir.int<65> : !s32i loc(#loc98)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc99)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc99)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc99)
    cir.libc.memset %26 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc150)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc103)
    %28 = cir.cast(integral, %27 : !s32i), !s8i loc(#loc103)
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
    %30 = cir.const #cir.int<100> : !s32i loc(#loc105)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc105)
    %33 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc107)
    cir.store %28, %33 : !s8i, !cir.ptr<!s8i> loc(#loc151)
    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
    cir.store %34, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
    cir.br ^bb9 loc(#loc84)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc110)
  ^bb10:  // 2 preds: ^bb2, ^bb9
    cir.br ^bb11 loc(#loc81)
  ^bb11:  // pred: ^bb10
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc113)
    cir.call @free(%37) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc114)
    cir.return loc(#loc73)
  } loc(#loc138)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":23:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":41:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":31:13)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":31:32)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":25:5)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":25:12)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":26:12)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":26:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":27:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":37:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":27:11)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":29:9)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":35:9)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":32:20)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":32:32)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":32:37)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":32:41)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":32:13)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":32:42)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":33:33)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":33:24)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":33:28)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":33:13)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":34:20)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":34:13)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":36:9)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":38:15)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":38:5)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":40:10)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":40:5)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":73:1)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":76:1)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":75:5)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":75:13)
#loc39 = loc("/usr/include/stdlib.h":575:1)
#loc40 = loc("/usr/include/stdlib.h":575:41)
#loc41 = loc("/usr/include/time.h":76:1)
#loc42 = loc("/usr/include/time.h":76:38)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":93:15)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":95:15)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":98:15)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":100:15)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":88:1)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":103:1)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":89:1)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":91:27)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":91:22)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":91:5)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":93:5)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":94:5)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":94:63)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":95:5)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":98:5)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":99:5)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":99:62)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":100:5)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":102:12)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":102:5)
#loc67 = loc("/usr/include/stdlib.h":672:1)
#loc68 = loc("/usr/include/stdlib.h":672:45)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":59:27)
#loc70 = loc("/usr/include/stdlib.h":756:1)
#loc71 = loc("/usr/include/stdlib.h":756:70)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":48:1)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":71:1)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":56:13)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":56:64)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":50:5)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":50:12)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":51:12)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":51:5)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":52:5)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":67:5)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":52:11)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":54:9)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":65:9)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":56:41)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":56:48)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":56:52)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":56:63)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":57:13)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":61:13)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":57:17)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":57:31)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":58:13)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":59:17)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":60:17)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":60:22)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":62:20)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":62:32)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":62:37)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":62:41)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":62:13)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":62:42)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":63:33)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":63:13)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":63:24)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":63:28)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":63:29)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":64:20)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":64:13)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":66:9)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":68:15)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":68:5)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":70:10)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_16.c":70:5)
#loc115 = loc(fused[#loc1, #loc2])
#loc116 = loc(fused[#loc3, #loc4])
#loc117 = loc(fused[#loc5, #loc6])
#loc118 = loc(fused[#loc7, #loc8])
#loc119 = loc(fused[#loc9, #loc10])
#loc120 = loc(fused[#loc12, #loc11])
#loc121 = loc(fused[#loc13, #loc14])
#loc122 = loc(fused[#loc16, #loc17])
#loc123 = loc(fused[#loc22, #loc23])
#loc124 = loc(fused[#loc27, #loc24])
#loc125 = loc(fused[#loc29, #loc28])
#loc126 = loc(fused[#loc35, #loc36])
#loc127 = loc(fused[#loc37, #loc38])
#loc128 = loc(fused[#loc39, #loc40])
#loc129 = loc(fused[#loc41, #loc42])
#loc130 = loc(fused[#loc47, #loc48])
#loc133 = loc(fused[#loc58, #loc59])
#loc134 = loc(fused[#loc62, #loc63])
#loc135 = loc(fused[#loc66, #loc65])
#loc136 = loc(fused[#loc67, #loc68])
#loc137 = loc(fused[#loc70, #loc71])
#loc138 = loc(fused[#loc72, #loc73])
#loc139 = loc(fused[#loc74, #loc75])
#loc140 = loc(fused[#loc76, #loc77])
#loc141 = loc(fused[#loc79, #loc78])
#loc142 = loc(fused[#loc80, #loc81])
#loc143 = loc(fused[#loc83, #loc84])
#loc144 = loc(fused[#loc87, #loc88])
#loc145 = loc(fused[#loc86, #loc88])
#loc146 = loc(fused[#loc85, #loc75])
#loc147 = loc(fused[#loc89, #loc90])
#loc148 = loc(fused[#loc91, #loc92])
#loc149 = loc(fused[#loc93, #loc90])
#loc150 = loc(fused[#loc101, #loc102])
#loc151 = loc(fused[#loc104, #loc103])
#loc152 = loc(fused[#loc109, #loc108])
