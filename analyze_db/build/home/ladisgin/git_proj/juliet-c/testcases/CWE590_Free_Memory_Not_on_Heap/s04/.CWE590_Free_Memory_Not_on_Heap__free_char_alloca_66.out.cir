!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":86:10)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":86:14)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":86:20)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":86:32)
#loc133 = loc(fused[#loc49, #loc50])
#loc134 = loc(fused[#loc51, #loc52])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66b_badSink(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc116)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc118)
    %1 = cir.alloca !cir.array<!cir.ptr<!s8i> x 5>, !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc119)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc9)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
    cir.scope {
      %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc122)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc14)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc14)
      %11 = cir.const #cir.int<1> : !u64i loc(#loc14)
      %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc14)
      %13 = cir.alloca !u8i, !cir.ptr<!u8i>, %12 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc14)
      cir.store %15, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
      %16 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc15)
      %18 = cir.const #cir.int<65> : !s32i loc(#loc16)
      %19 = cir.const #cir.int<100> : !s32i loc(#loc17)
      %20 = cir.const #cir.int<1> : !s32i loc(#loc18)
      %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc17)
      %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc17)
      cir.libc.memset %22 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc123)
      %23 = cir.const #cir.int<0> : !s32i loc(#loc21)
      %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc21)
      %25 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
      %26 = cir.const #cir.int<100> : !s32i loc(#loc23)
      %27 = cir.const #cir.int<1> : !s32i loc(#loc24)
      %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc23)
      %29 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc25)
      cir.store %24, %29 : !s8i, !cir.ptr<!s8i> loc(#loc124)
      %30 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
      cir.store %30, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
    } loc(#loc121)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc29)
    %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc30)
    %6 = cir.ptr_stride(%5 : !cir.ptr<!cir.ptr<!s8i>>, %4 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc30)
    cir.store %3, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc126)
    %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc31)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66b_badSink(%7) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc32)
    cir.return loc(#loc4)
  } loc(#loc117)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc128)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc35)
    cir.return loc(#loc34)
  } loc(#loc127)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc129)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc130)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc131)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc43)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc44)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc46)
  cir.func @main(%arg0: !s32i loc(fused[#loc49, #loc50]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc51, #loc52])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc133)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc134)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc48)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc53)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc53)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc54)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc55)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc55)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc56)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc43)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    %8 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66_good : !cir.ptr<!cir.func<!void ()>> loc(#loc135)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66_good() : () -> () loc(#loc58)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc44)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc45)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %13 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc136)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66_bad() : () -> () loc(#loc62)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc46)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc65)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc137)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    cir.return %17 : !s32i loc(#loc137)
  } loc(#loc132)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc69)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc139)
  cir.func private @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66b_goodG2BSink(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc140)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc142)
    %1 = cir.alloca !cir.array<!cir.ptr<!s8i> x 5>, !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc143)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc80)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc144)
    cir.scope {
      %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc146)
      %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc86)
      %10 = cir.const #cir.int<100> : !s32i loc(#loc87)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc87)
      %12 = cir.const #cir.int<1> : !u64i loc(#loc147)
      %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc148)
      %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc86)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc149)
      cir.store %15, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
      cir.scope {
        %31 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
        %32 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc93)
        %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc93)
        %34 = cir.cmp(eq, %31, %33) : !cir.ptr<!s8i>, !cir.bool loc(#loc151)
        cir.if %34 {
          %35 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc69)
          %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc69)
          cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc95)
          %37 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc96)
          %38 = cir.const #cir.int<1> : !s32i loc(#loc97)
          cir.call @exit(%38) : (!s32i) -> () extra(#fn_attr1) loc(#loc96)
        } loc(#loc152)
      } loc(#loc150)
      %16 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc98)
      %18 = cir.const #cir.int<65> : !s32i loc(#loc99)
      %19 = cir.const #cir.int<100> : !s32i loc(#loc100)
      %20 = cir.const #cir.int<1> : !s32i loc(#loc101)
      %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc100)
      %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc100)
      cir.libc.memset %22 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc153)
      %23 = cir.const #cir.int<0> : !s32i loc(#loc104)
      %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc104)
      %25 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
      %26 = cir.const #cir.int<100> : !s32i loc(#loc106)
      %27 = cir.const #cir.int<1> : !s32i loc(#loc107)
      %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc106)
      %29 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc108)
      cir.store %24, %29 : !s8i, !cir.ptr<!s8i> loc(#loc154)
      %30 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
      cir.store %30, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc155)
    } loc(#loc145)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc112)
    %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc113)
    %6 = cir.ptr_stride(%5 : !cir.ptr<!cir.ptr<!s8i>>, %4 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc113)
    cir.store %3, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc156)
    %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc114)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66b_goodG2BSink(%7) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc115)
    cir.return loc(#loc75)
  } loc(#loc141)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":24:1)
#loc2 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":24:85)
#loc3 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":26:1)
#loc4 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":41:1)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":28:5)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":28:12)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":29:5)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":29:23)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":30:12)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":30:5)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":31:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":37:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":33:9)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":33:37)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":34:16)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":34:28)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":34:33)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":34:37)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":34:9)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":34:38)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":35:29)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":35:9)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":35:20)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":35:24)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":35:25)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":36:16)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":36:9)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":39:20)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":39:15)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":39:5)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":40:66)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":40:5)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":71:1)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":74:1)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":73:5)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":73:13)
#loc37 = loc("/usr/include/stdlib.h":575:1)
#loc38 = loc("/usr/include/stdlib.h":575:41)
#loc39 = loc("/usr/include/time.h":76:1)
#loc40 = loc("/usr/include/time.h":76:38)
#loc41 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc42 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":91:15)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":93:15)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":96:15)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":98:15)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":86:1)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":101:1)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":87:1)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":89:27)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":89:22)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":89:5)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":91:5)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":92:5)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":92:62)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":93:5)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":96:5)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":97:5)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":97:61)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":98:5)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":100:12)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":100:5)
#loc67 = loc("/usr/include/stdlib.h":672:1)
#loc68 = loc("/usr/include/stdlib.h":672:45)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":60:23)
#loc70 = loc("/usr/include/stdlib.h":756:1)
#loc71 = loc("/usr/include/stdlib.h":756:70)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":48:1)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":48:89)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":50:1)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":69:1)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":52:5)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":52:12)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":53:5)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":53:23)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":54:12)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":54:5)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":55:5)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":66:5)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":57:9)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":57:60)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":57:37)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":57:44)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":57:48)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":57:59)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":58:9)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":62:9)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":58:13)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":58:27)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":59:9)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":60:13)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":61:13)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":61:18)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":63:16)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":63:28)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":63:33)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":63:37)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":63:9)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":63:38)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":64:29)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":64:9)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":64:20)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":64:24)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":64:25)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":65:16)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":65:9)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":67:20)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":67:15)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":67:5)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":68:70)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_66a.c":68:5)
#loc116 = loc(fused[#loc1, #loc2])
#loc117 = loc(fused[#loc3, #loc4])
#loc118 = loc(fused[#loc5, #loc6])
#loc119 = loc(fused[#loc7, #loc8])
#loc120 = loc(fused[#loc10, #loc9])
#loc121 = loc(fused[#loc11, #loc12])
#loc122 = loc(fused[#loc13, #loc14])
#loc123 = loc(fused[#loc19, #loc20])
#loc124 = loc(fused[#loc22, #loc21])
#loc125 = loc(fused[#loc27, #loc26])
#loc126 = loc(fused[#loc30, #loc28])
#loc127 = loc(fused[#loc33, #loc34])
#loc128 = loc(fused[#loc35, #loc36])
#loc129 = loc(fused[#loc37, #loc38])
#loc130 = loc(fused[#loc39, #loc40])
#loc131 = loc(fused[#loc41, #loc42])
#loc132 = loc(fused[#loc47, #loc48])
#loc135 = loc(fused[#loc58, #loc59])
#loc136 = loc(fused[#loc62, #loc63])
#loc137 = loc(fused[#loc66, #loc65])
#loc138 = loc(fused[#loc67, #loc68])
#loc139 = loc(fused[#loc70, #loc71])
#loc140 = loc(fused[#loc72, #loc73])
#loc141 = loc(fused[#loc74, #loc75])
#loc142 = loc(fused[#loc76, #loc77])
#loc143 = loc(fused[#loc78, #loc79])
#loc144 = loc(fused[#loc81, #loc80])
#loc145 = loc(fused[#loc82, #loc83])
#loc146 = loc(fused[#loc84, #loc85])
#loc147 = loc(fused[#loc88, #loc89])
#loc148 = loc(fused[#loc87, #loc89])
#loc149 = loc(fused[#loc86, #loc85])
#loc150 = loc(fused[#loc90, #loc91])
#loc151 = loc(fused[#loc92, #loc93])
#loc152 = loc(fused[#loc94, #loc91])
#loc153 = loc(fused[#loc102, #loc103])
#loc154 = loc(fused[#loc105, #loc104])
#loc155 = loc(fused[#loc110, #loc109])
#loc156 = loc(fused[#loc113, #loc111])
