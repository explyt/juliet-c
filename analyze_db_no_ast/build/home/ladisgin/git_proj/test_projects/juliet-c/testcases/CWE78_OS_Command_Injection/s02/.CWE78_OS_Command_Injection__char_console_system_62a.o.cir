!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_system_62a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @_ZN50CWE78_OS_Command_Injection__char_console_system_629badSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc52)
  cir.func private  @system(!cir.ptr<!s8i>) -> !s32i loc(#loc53)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc54)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc7)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc55)
  cir.func  @_ZN50CWE78_OS_Command_Injection__char_console_system_623badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc57)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc58)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc58)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc58)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc16)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc59)
    cir.call @_ZN50CWE78_OS_Command_Injection__char_console_system_629badSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc18)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
      %5 = cir.call @system(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc22)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc23)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc61)
      cir.if %7 {
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc7)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc7)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc25)
        %10 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc26)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc27)
        cir.call @exit(%11) : (!s32i) -> () extra(#fn_attr) loc(#loc26)
      } loc(#loc62)
    } loc(#loc60)
    cir.return loc(#loc11)
  } loc(#loc56)
  cir.func private  @_ZN50CWE78_OS_Command_Injection__char_console_system_6213goodG2BSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc63)
  cir.func internal private  @_ZN50CWE78_OS_Command_Injection__char_console_system_62L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc65)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc66)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc66)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc66)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc67)
    cir.call @_ZN50CWE78_OS_Command_Injection__char_console_system_6213goodG2BSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc38)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
      %5 = cir.call @system(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc42)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc43)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc69)
      cir.if %7 {
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc45)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc45)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc46)
        %10 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc47)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc48)
        cir.call @exit(%11) : (!s32i) -> () extra(#fn_attr) loc(#loc47)
      } loc(#loc70)
    } loc(#loc68)
    cir.return loc(#loc31)
  } loc(#loc64)
  cir.func  @_ZN50CWE78_OS_Command_Injection__char_console_system_624goodEv() extra(#fn_attr1) {
    cir.call @_ZN50CWE78_OS_Command_Injection__char_console_system_62L7goodG2BEv() : () -> () loc(#loc51)
    cir.return loc(#loc50)
  } loc(#loc71)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_system_62a.cpp":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":40:1)
#loc2 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":40:28)
#loc3 = loc("/usr/include/stdlib.h":923:1)
#loc4 = loc("/usr/include/stdlib.h":923:41)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":51:19)
#loc8 = loc("/usr/include/stdlib.h":756:1)
#loc9 = loc("/usr/include/stdlib.h":756:70)
#loc10 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":42:1)
#loc11 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":54:1)
#loc12 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":44:5)
#loc13 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":44:12)
#loc14 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":45:5)
#loc15 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":45:26)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":46:12)
#loc17 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":46:5)
#loc18 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":47:5)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":49:5)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":53:5)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":49:16)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":49:9)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":49:25)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":50:5)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":51:9)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":52:9)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":52:14)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":61:1)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":61:32)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":63:1)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":75:1)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":65:5)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":65:12)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":66:5)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":66:26)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":67:12)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":67:5)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":68:5)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":70:5)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":74:5)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":70:16)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":70:9)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":70:25)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":71:5)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":72:19)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":72:9)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":73:9)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":73:14)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":77:1)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":80:1)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_system_62a.cpp":79:5)
#loc52 = loc(fused[#loc1, #loc2])
#loc53 = loc(fused[#loc3, #loc4])
#loc54 = loc(fused[#loc5, #loc6])
#loc55 = loc(fused[#loc8, #loc9])
#loc56 = loc(fused[#loc10, #loc11])
#loc57 = loc(fused[#loc12, #loc13])
#loc58 = loc(fused[#loc14, #loc15])
#loc59 = loc(fused[#loc17, #loc16])
#loc60 = loc(fused[#loc19, #loc20])
#loc61 = loc(fused[#loc22, #loc23])
#loc62 = loc(fused[#loc24, #loc20])
#loc63 = loc(fused[#loc28, #loc29])
#loc64 = loc(fused[#loc30, #loc31])
#loc65 = loc(fused[#loc32, #loc33])
#loc66 = loc(fused[#loc34, #loc35])
#loc67 = loc(fused[#loc37, #loc36])
#loc68 = loc(fused[#loc39, #loc40])
#loc69 = loc(fused[#loc42, #loc43])
#loc70 = loc(fused[#loc44, #loc40])
#loc71 = loc(fused[#loc49, #loc50])
