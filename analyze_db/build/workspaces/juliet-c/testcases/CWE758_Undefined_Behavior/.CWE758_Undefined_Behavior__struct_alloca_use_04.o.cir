!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i}>
module @"/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_alloca_use_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @printIntLine(!s32i) loc(#loc83)
  cir.func no_proto @CWE758_Undefined_Behavior__struct_alloca_use_04_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc7)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc7)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc88)
          %3 = cir.const #cir.int<8> : !u64i loc(#loc12)
          %4 = cir.alloca !u8i, !cir.ptr<!u8i>, %3 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
          %5 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc89)
          %6 = cir.cast(bitcast, %4 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc12)
          cir.store %7, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc88)
          %8 = cir.load deref %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc14)
          cir.copy %8 to %5 : !cir.ptr<!ty__twoIntsStruct> loc(#loc89)
          %9 = cir.get_member %5[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc15)
          %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc16)
          cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc17)
          %11 = cir.get_member %5[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc18)
          %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc19)
          cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc20)
        } loc(#loc87)
      } loc(#loc86)
    } loc(#loc85)
    cir.return loc(#loc4)
  } loc(#loc84)
  cir.func no_proto @CWE758_Undefined_Behavior__struct_alloca_use_04_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc91)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc23)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc92)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc25)
    cir.return loc(#loc22)
  } loc(#loc90)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc93)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc29)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<0> : !s32i loc(#loc34)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc34)
      cir.if %1 {
        %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc29)
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc29)
        cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc38)
      } else {
        cir.scope {
          %2 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc98)
          %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc99)
          %4 = cir.const #cir.int<8> : !u64i loc(#loc44)
          %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc44)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc44)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc44)
          cir.store %7, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc99)
          %8 = cir.const #cir.int<1> : !s32i loc(#loc45)
          %9 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc15)
          cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc100)
          %10 = cir.const #cir.int<2> : !s32i loc(#loc47)
          %11 = cir.get_member %2[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc18)
          cir.store %10, %11 : !s32i, !cir.ptr<!s32i> loc(#loc101)
          %12 = cir.load deref %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc49)
          cir.copy %2 to %12 : !cir.ptr<!ty__twoIntsStruct> loc(#loc49)
          cir.scope {
            %13 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc103)
            %14 = cir.load deref %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc53)
            cir.copy %14 to %13 : !cir.ptr<!ty__twoIntsStruct> loc(#loc103)
            %15 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc15)
            %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc54)
            cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc55)
            %17 = cir.get_member %13[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc18)
            %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc56)
            cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc57)
          } loc(#loc102)
        } loc(#loc97)
      } loc(#loc96)
    } loc(#loc95)
    cir.return loc(#loc31)
  } loc(#loc94)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc62)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc62)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc108)
          %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc109)
          %4 = cir.const #cir.int<8> : !u64i loc(#loc69)
          %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc69)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc69)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc69)
          cir.store %7, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc109)
          %8 = cir.const #cir.int<1> : !s32i loc(#loc70)
          %9 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc15)
          cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc110)
          %10 = cir.const #cir.int<2> : !s32i loc(#loc72)
          %11 = cir.get_member %2[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc18)
          cir.store %10, %11 : !s32i, !cir.ptr<!s32i> loc(#loc111)
          %12 = cir.load deref %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc74)
          cir.copy %2 to %12 : !cir.ptr<!ty__twoIntsStruct> loc(#loc74)
          cir.scope {
            %13 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc113)
            %14 = cir.load deref %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc78)
            cir.copy %14 to %13 : !cir.ptr<!ty__twoIntsStruct> loc(#loc113)
            %15 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc15)
            %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc79)
            cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc80)
            %17 = cir.get_member %13[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc18)
            %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc81)
            cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc82)
          } loc(#loc112)
        } loc(#loc107)
      } loc(#loc106)
    } loc(#loc105)
    cir.return loc(#loc59)
  } loc(#loc104)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_alloca_use_04.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":26:1)
#loc4 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":37:1)
#loc5 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":28:5)
#loc6 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":36:5)
#loc7 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":28:8)
#loc8 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":29:5)
#loc9 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":30:9)
#loc10 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":35:9)
#loc11 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":31:13)
#loc12 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":31:56)
#loc13 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":32:13)
#loc14 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":32:35)
#loc15 = loc("../../testcasesupport/std_testcase.h":98:9)
#loc16 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":33:31)
#loc17 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":33:13)
#loc18 = loc("../../testcasesupport/std_testcase.h":99:9)
#loc19 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":34:31)
#loc20 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":34:13)
#loc21 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":88:1)
#loc22 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":92:1)
#loc23 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":90:5)
#loc24 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":90:11)
#loc25 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":91:5)
#loc26 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":91:11)
#loc27 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc28 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc29 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":49:19)
#loc30 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":44:1)
#loc31 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":66:1)
#loc32 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":46:5)
#loc33 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":65:5)
#loc34 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":46:8)
#loc35 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":47:5)
#loc36 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":50:5)
#loc37 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":52:5)
#loc38 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":49:9)
#loc39 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":53:9)
#loc40 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":64:9)
#loc41 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":54:13)
#loc42 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":54:27)
#loc43 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":55:13)
#loc44 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":55:56)
#loc45 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":56:27)
#loc46 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":56:13)
#loc47 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":57:27)
#loc48 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":57:13)
#loc49 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":58:14)
#loc50 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":59:13)
#loc51 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":63:13)
#loc52 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":60:17)
#loc53 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":60:39)
#loc54 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":61:35)
#loc55 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":61:17)
#loc56 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":62:35)
#loc57 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":62:17)
#loc58 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":69:1)
#loc59 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":86:1)
#loc60 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":71:5)
#loc61 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":85:5)
#loc62 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":71:8)
#loc63 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":72:5)
#loc64 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":73:9)
#loc65 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":84:9)
#loc66 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":74:13)
#loc67 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":74:27)
#loc68 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":75:13)
#loc69 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":75:56)
#loc70 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":76:27)
#loc71 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":76:13)
#loc72 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":77:27)
#loc73 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":77:13)
#loc74 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":78:14)
#loc75 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":79:13)
#loc76 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":83:13)
#loc77 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":80:17)
#loc78 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":80:39)
#loc79 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":81:35)
#loc80 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":81:17)
#loc81 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":82:35)
#loc82 = loc("CWE758_Undefined_Behavior__struct_alloca_use_04.c":82:17)
#loc83 = loc(fused[#loc1, #loc2])
#loc84 = loc(fused[#loc3, #loc4])
#loc85 = loc(fused[#loc5, #loc6])
#loc86 = loc(fused[#loc8, #loc6])
#loc87 = loc(fused[#loc9, #loc10])
#loc88 = loc(fused[#loc11, #loc12])
#loc89 = loc(fused[#loc13, #loc14])
#loc90 = loc(fused[#loc21, #loc22])
#loc91 = loc(fused[#loc23, #loc24])
#loc92 = loc(fused[#loc25, #loc26])
#loc93 = loc(fused[#loc27, #loc28])
#loc94 = loc(fused[#loc30, #loc31])
#loc95 = loc(fused[#loc32, #loc33])
#loc96 = loc(fused[#loc35, #loc36, #loc37, #loc33])
#loc97 = loc(fused[#loc39, #loc40])
#loc98 = loc(fused[#loc41, #loc42])
#loc99 = loc(fused[#loc43, #loc44])
#loc100 = loc(fused[#loc46, #loc45])
#loc101 = loc(fused[#loc48, #loc47])
#loc102 = loc(fused[#loc50, #loc51])
#loc103 = loc(fused[#loc52, #loc53])
#loc104 = loc(fused[#loc58, #loc59])
#loc105 = loc(fused[#loc60, #loc61])
#loc106 = loc(fused[#loc63, #loc61])
#loc107 = loc(fused[#loc64, #loc65])
#loc108 = loc(fused[#loc66, #loc67])
#loc109 = loc(fused[#loc68, #loc69])
#loc110 = loc(fused[#loc71, #loc70])
#loc111 = loc(fused[#loc73, #loc72])
#loc112 = loc(fused[#loc75, #loc76])
#loc113 = loc(fused[#loc77, #loc78])
