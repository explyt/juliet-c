!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc10 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":22:21)
#loc11 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":22:34)
#loc41 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":64:25)
#loc42 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":64:38)
#loc71 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":45:25)
#loc72 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":45:38)
#loc95 = loc(fused[#loc10, #loc11])
#loc107 = loc(fused[#loc41, #loc42])
#loc117 = loc(fused[#loc71, #loc72])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc91)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc92)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%u\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private  @printUnsignedLine(!u32i) loc(#loc93)
  cir.func internal private  @badSink(%arg0: !u32i loc(fused[#loc10, #loc11])) extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data", init] {alignment = 4 : i64} loc(#loc95)
    cir.store %arg0, %0 : !u32i, !cir.ptr<!u32i> loc(#loc12)
    cir.scope {
      %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc97)
      %2 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc17)
      %3 = cir.const #cir.int<1> : !s32i loc(#loc16)
      %4 = cir.cast(integral, %3 : !s32i), !u32i loc(#loc16)
      %5 = cir.binop(add, %2, %4) : !u32i loc(#loc98)
      cir.store %5, %1 : !u32i, !cir.ptr<!u32i> loc(#loc97)
      %6 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc18)
      cir.call @printUnsignedLine(%6) : (!u32i) -> () loc(#loc19)
    } loc(#loc96)
    cir.return loc(#loc9)
  } loc(#loc94)
  cir.func no_proto  @CWE190_Integer_Overflow__unsigned_int_fscanf_add_41_bad() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc100)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc24)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc24)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc101)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc26)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc92)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc27)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u32i>) -> !s32i loc(#loc26)
    %9 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc28)
    cir.call @badSink(%9) : (!u32i) -> () loc(#loc29)
    cir.return loc(#loc21)
  } loc(#loc99)
  cir.func no_proto  @CWE190_Integer_Overflow__unsigned_int_fscanf_add_41_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc103)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc32)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc104)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc34)
    cir.return loc(#loc31)
  } loc(#loc102)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc105)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc38)
  cir.func internal private  @goodB2GSink(%arg0: !u32i loc(fused[#loc41, #loc42])) extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data", init] {alignment = 4 : i64} loc(#loc107)
    cir.store %arg0, %0 : !u32i, !cir.ptr<!u32i> loc(#loc43)
    cir.scope {
      %1 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc46)
      %2 = cir.const #cir.int<2147483647> : !s32i loc(#loc47)
      %3 = cir.cast(integral, %2 : !s32i), !u32i loc(#loc47)
      %4 = cir.const #cir.int<2> : !u32i loc(#loc47)
      %5 = cir.binop(mul, %3, %4) : !u32i loc(#loc47)
      %6 = cir.const #cir.int<1> : !u32i loc(#loc47)
      %7 = cir.binop(add, %5, %6) : !u32i loc(#loc47)
      %8 = cir.cmp(lt, %1, %7) : !u32i, !s32i loc(#loc109)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc48)
      cir.if %9 {
        %10 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc111)
        %11 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc54)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc53)
        %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc53)
        %14 = cir.binop(add, %11, %13) : !u32i loc(#loc112)
        cir.store %14, %10 : !u32i, !cir.ptr<!u32i> loc(#loc111)
        %15 = cir.load %10 : !cir.ptr<!u32i>, !u32i loc(#loc55)
        cir.call @printUnsignedLine(%15) : (!u32i) -> () loc(#loc56)
      } else {
        %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc38)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc38)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc57)
      } loc(#loc110)
    } loc(#loc108)
    cir.return loc(#loc40)
  } loc(#loc106)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc114)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc62)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc115)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc64)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc92)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc65)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc66)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc66)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u32i>) -> !s32i loc(#loc64)
    %9 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc67)
    cir.call @goodB2GSink(%9) : (!u32i) -> () loc(#loc68)
    cir.return loc(#loc59)
  } loc(#loc113)
  cir.func internal private  @goodG2BSink(%arg0: !u32i loc(fused[#loc71, #loc72])) extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data", init] {alignment = 4 : i64} loc(#loc117)
    cir.store %arg0, %0 : !u32i, !cir.ptr<!u32i> loc(#loc73)
    cir.scope {
      %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc119)
      %2 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc78)
      %3 = cir.const #cir.int<1> : !s32i loc(#loc77)
      %4 = cir.cast(integral, %3 : !s32i), !u32i loc(#loc77)
      %5 = cir.binop(add, %2, %4) : !u32i loc(#loc120)
      cir.store %5, %1 : !u32i, !cir.ptr<!u32i> loc(#loc119)
      %6 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc79)
      cir.call @printUnsignedLine(%6) : (!u32i) -> () loc(#loc80)
    } loc(#loc118)
    cir.return loc(#loc70)
  } loc(#loc116)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc122)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc85)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc85)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc123)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc87)
    %4 = cir.cast(integral, %3 : !s32i), !u32i loc(#loc87)
    cir.store %4, %0 : !u32i, !cir.ptr<!u32i> loc(#loc124)
    %5 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc89)
    cir.call @goodG2BSink(%5) : (!u32i) -> () loc(#loc90)
    cir.return loc(#loc82)
  } loc(#loc121)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":36:20)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":34:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":34:47)
#loc8 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":22:1)
#loc9 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":29:1)
#loc12 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":23:1)
#loc13 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":24:5)
#loc14 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":28:5)
#loc15 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":26:9)
#loc16 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":26:38)
#loc17 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":26:31)
#loc18 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":27:27)
#loc19 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":27:9)
#loc20 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":31:1)
#loc21 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":38:1)
#loc22 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":33:5)
#loc23 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":33:18)
#loc24 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":34:12)
#loc25 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":34:5)
#loc26 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":36:5)
#loc27 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":36:13)
#loc28 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":37:13)
#loc29 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":37:5)
#loc30 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":87:1)
#loc31 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":91:1)
#loc32 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":89:5)
#loc33 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":89:13)
#loc34 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":90:5)
#loc35 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":90:13)
#loc36 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc37 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc38 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":74:19)
#loc39 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":64:1)
#loc40 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":76:1)
#loc43 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":65:1)
#loc44 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":67:5)
#loc45 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":75:5)
#loc46 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":67:9)
#loc47 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":67:16)
#loc48 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":67:14)
#loc49 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":68:5)
#loc50 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":71:5)
#loc51 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":73:5)
#loc52 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":69:9)
#loc53 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":69:38)
#loc54 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":69:31)
#loc55 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":70:27)
#loc56 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":70:9)
#loc57 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":74:9)
#loc58 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":78:1)
#loc59 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":85:1)
#loc60 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":80:5)
#loc61 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":80:18)
#loc62 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":81:12)
#loc63 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":81:5)
#loc64 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":83:5)
#loc65 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":83:13)
#loc66 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":83:20)
#loc67 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":84:17)
#loc68 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":84:5)
#loc69 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":45:1)
#loc70 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":52:1)
#loc73 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":46:1)
#loc74 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":47:5)
#loc75 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":51:5)
#loc76 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":49:9)
#loc77 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":49:38)
#loc78 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":49:31)
#loc79 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":50:27)
#loc80 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":50:9)
#loc81 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":54:1)
#loc82 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":61:1)
#loc83 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":56:5)
#loc84 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":56:18)
#loc85 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":57:12)
#loc86 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":57:5)
#loc87 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":59:12)
#loc88 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":59:5)
#loc89 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":60:17)
#loc90 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_41.c":60:5)
#loc91 = loc(fused[#loc1, #loc2])
#loc92 = loc(fused[#loc3, #loc4])
#loc93 = loc(fused[#loc6, #loc7])
#loc94 = loc(fused[#loc8, #loc9])
#loc96 = loc(fused[#loc13, #loc14])
#loc97 = loc(fused[#loc15, #loc16])
#loc98 = loc(fused[#loc17, #loc16])
#loc99 = loc(fused[#loc20, #loc21])
#loc100 = loc(fused[#loc22, #loc23])
#loc101 = loc(fused[#loc25, #loc24])
#loc102 = loc(fused[#loc30, #loc31])
#loc103 = loc(fused[#loc32, #loc33])
#loc104 = loc(fused[#loc34, #loc35])
#loc105 = loc(fused[#loc36, #loc37])
#loc106 = loc(fused[#loc39, #loc40])
#loc108 = loc(fused[#loc44, #loc45])
#loc109 = loc(fused[#loc46, #loc47])
#loc110 = loc(fused[#loc49, #loc50, #loc51, #loc45])
#loc111 = loc(fused[#loc52, #loc53])
#loc112 = loc(fused[#loc54, #loc53])
#loc113 = loc(fused[#loc58, #loc59])
#loc114 = loc(fused[#loc60, #loc61])
#loc115 = loc(fused[#loc63, #loc62])
#loc116 = loc(fused[#loc69, #loc70])
#loc118 = loc(fused[#loc74, #loc75])
#loc119 = loc(fused[#loc76, #loc77])
#loc120 = loc(fused[#loc78, #loc77])
#loc121 = loc(fused[#loc81, #loc82])
#loc122 = loc(fused[#loc83, #loc84])
#loc123 = loc(fused[#loc86, #loc85])
#loc124 = loc(fused[#loc88, #loc87])
