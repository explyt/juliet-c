!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc137)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc138)
  cir.func private @printIntLine(!s32i) loc(#loc139)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc140)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc142)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc143)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc144)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc145)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc20)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc146)
    cir.br ^bb1 loc(#loc147)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<0> : !s32i loc(#loc24)
    cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc148)
    cir.br ^bb2 loc(#loc147)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %7 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc26)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc149)
    cir.brcond %9 ^bb3, ^bb7 loc(#loc28)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc150)
  ^bb4:  // pred: ^bb3
    %10 = cir.const #cir.int<2147483647> : !s32i loc(#loc30)
    %11 = cir.const #cir.int<2> : !s32i loc(#loc31)
    %12 = cir.binop(div, %10, %11) : !s32i loc(#loc151)
    %13 = cir.const #cir.int<2> : !s32i loc(#loc32)
    %14 = cir.binop(add, %12, %13) nsw : !s32i loc(#loc151)
    cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    cir.br ^bb5 loc(#loc23)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc23)
  ^bb6:  // pred: ^bb5
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    %16 = cir.unary(inc, %15) nsw : !s32i, !s32i loc(#loc35)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc153)
    cir.br ^bb2 loc(#loc147)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc23)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc154)
  ^bb9:  // pred: ^bb8
    %17 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc38)
    %18 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc39)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc39)
    %20 = cir.const #cir.int<4> : !u64i loc(#loc155)
    %21 = cir.binop(mul, %19, %20) : !u64i loc(#loc156)
    %22 = cir.call @malloc(%21) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc38)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc157)
    cir.store %23, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc158)
    cir.br ^bb10 loc(#loc159)
  ^bb10:  // pred: ^bb9
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc46)
    %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc47)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc47)
    %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s32i>, !cir.bool loc(#loc160)
    cir.brcond %27 ^bb11, ^bb12 loc(#loc161)
  ^bb11:  // pred: ^bb10
    %28 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc49)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %30 = cir.unary(minus, %29) nsw : !s32i, !s32i loc(#loc51)
    cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc49)
    cir.br ^bb12 loc(#loc45)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc45)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc162)
  ^bb14:  // pred: ^bb13
    %31 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc54)
    cir.store %32, %0 : !u64i, !cir.ptr<!u64i> loc(#loc163)
    cir.br ^bb15 loc(#loc162)
  ^bb15:  // 2 preds: ^bb14, ^bb19
    %33 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc56)
    %34 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc57)
    %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc57)
    %36 = cir.cmp(lt, %33, %35) : !u64i, !cir.bool loc(#loc164)
    cir.brcond %36 ^bb16, ^bb20 loc(#loc58)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc165)
  ^bb17:  // pred: ^bb16
    %37 = cir.const #cir.int<0> : !s32i loc(#loc60)
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc61)
    %39 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc62)
    %40 = cir.ptr_stride(%38 : !cir.ptr<!s32i>, %39 : !u64i), !cir.ptr<!s32i> loc(#loc63)
    cir.store %37, %40 : !s32i, !cir.ptr<!s32i> loc(#loc166)
    cir.br ^bb18 loc(#loc53)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc53)
  ^bb19:  // pred: ^bb18
    %41 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc64)
    %42 = cir.unary(inc, %41) : !u64i, !u64i loc(#loc65)
    cir.store %42, %0 : !u64i, !cir.ptr<!u64i> loc(#loc167)
    cir.br ^bb15 loc(#loc162)
  ^bb20:  // pred: ^bb15
    cir.br ^bb21 loc(#loc53)
  ^bb21:  // pred: ^bb20
    %43 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc66)
    %44 = cir.const #cir.int<0> : !s32i loc(#loc67)
    %45 = cir.ptr_stride(%43 : !cir.ptr<!s32i>, %44 : !s32i), !cir.ptr<!s32i> loc(#loc68)
    %46 = cir.load %45 : !cir.ptr<!s32i>, !s32i loc(#loc66)
    cir.call @printIntLine(%46) : (!s32i) -> () loc(#loc69)
    %47 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc70)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc70)
    cir.call @free(%48) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc71)
    cir.br ^bb22 loc(#loc37)
  ^bb22:  // pred: ^bb21
    cir.return loc(#loc10)
  } loc(#loc141)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc169)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc74)
    cir.return loc(#loc73)
  } loc(#loc168)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc171)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc172)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc173)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc174)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc87)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc175)
    cir.br ^bb1 loc(#loc176)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<0> : !s32i loc(#loc91)
    cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    cir.br ^bb2 loc(#loc176)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %7 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc93)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc178)
    cir.brcond %9 ^bb3, ^bb7 loc(#loc95)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc179)
  ^bb4:  // pred: ^bb3
    %10 = cir.const #cir.int<20> : !s32i loc(#loc97)
    cir.store %10, %3 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    cir.br ^bb5 loc(#loc90)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc90)
  ^bb6:  // pred: ^bb5
    %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %12 = cir.unary(inc, %11) nsw : !s32i, !s32i loc(#loc100)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc181)
    cir.br ^bb2 loc(#loc176)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc90)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc182)
  ^bb9:  // pred: ^bb8
    %13 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc103)
    %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc104)
    %16 = cir.const #cir.int<4> : !u64i loc(#loc183)
    %17 = cir.binop(mul, %15, %16) : !u64i loc(#loc184)
    %18 = cir.call @malloc(%17) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc103)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc185)
    cir.store %19, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc186)
    cir.br ^bb10 loc(#loc187)
  ^bb10:  // pred: ^bb9
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc111)
    %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc112)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc112)
    %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!s32i>, !cir.bool loc(#loc188)
    cir.brcond %23 ^bb11, ^bb12 loc(#loc189)
  ^bb11:  // pred: ^bb10
    %24 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc114)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %26 = cir.unary(minus, %25) nsw : !s32i, !s32i loc(#loc116)
    cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc114)
    cir.br ^bb12 loc(#loc110)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc110)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc190)
  ^bb14:  // pred: ^bb13
    %27 = cir.const #cir.int<0> : !s32i loc(#loc119)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc119)
    cir.store %28, %0 : !u64i, !cir.ptr<!u64i> loc(#loc191)
    cir.br ^bb15 loc(#loc190)
  ^bb15:  // 2 preds: ^bb14, ^bb19
    %29 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc121)
    %30 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc122)
    %32 = cir.cmp(lt, %29, %31) : !u64i, !cir.bool loc(#loc192)
    cir.brcond %32 ^bb16, ^bb20 loc(#loc123)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc193)
  ^bb17:  // pred: ^bb16
    %33 = cir.const #cir.int<0> : !s32i loc(#loc125)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc126)
    %35 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc127)
    %36 = cir.ptr_stride(%34 : !cir.ptr<!s32i>, %35 : !u64i), !cir.ptr<!s32i> loc(#loc128)
    cir.store %33, %36 : !s32i, !cir.ptr<!s32i> loc(#loc194)
    cir.br ^bb18 loc(#loc118)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc118)
  ^bb19:  // pred: ^bb18
    %37 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc129)
    %38 = cir.unary(inc, %37) : !u64i, !u64i loc(#loc130)
    cir.store %38, %0 : !u64i, !cir.ptr<!u64i> loc(#loc195)
    cir.br ^bb15 loc(#loc190)
  ^bb20:  // pred: ^bb15
    cir.br ^bb21 loc(#loc118)
  ^bb21:  // pred: ^bb20
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc131)
    %40 = cir.const #cir.int<0> : !s32i loc(#loc132)
    %41 = cir.ptr_stride(%39 : !cir.ptr<!s32i>, %40 : !s32i), !cir.ptr<!s32i> loc(#loc133)
    %42 = cir.load %41 : !cir.ptr<!s32i>, !s32i loc(#loc131)
    cir.call @printIntLine(%42) : (!s32i) -> () loc(#loc134)
    %43 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc135)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc135)
    cir.call @free(%44) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc136)
    cir.br ^bb22 loc(#loc102)
  ^bb22:  // pred: ^bb21
    cir.return loc(#loc77)
  } loc(#loc170)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":21:1)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":48:1)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":35:9)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":35:16)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":36:9)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":36:14)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":23:5)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":23:9)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":24:5)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":24:9)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":26:13)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":26:12)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":26:5)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":27:5)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":33:5)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":27:13)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":27:9)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":27:16)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":27:20)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":27:18)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":28:5)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":30:16)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":30:26)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":30:30)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":30:9)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":27:24)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":27:23)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":34:5)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":47:5)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":39:28)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":39:35)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":39:42)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":39:52)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":39:53)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":39:9)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":40:9)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":40:43)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":40:13)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":40:27)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":40:33)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":40:34)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":40:40)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":40:39)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":41:9)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":44:9)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":41:18)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":41:14)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":41:21)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":41:33)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":41:23)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":42:9)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":43:29)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":43:13)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":43:24)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":43:25)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":41:40)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":41:39)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":45:22)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":45:33)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":45:34)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":45:9)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":46:14)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":46:9)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":82:1)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":85:1)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":84:5)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":84:13)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":55:1)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":80:1)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":67:9)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":67:16)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":68:9)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":68:14)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":57:5)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":57:9)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":58:5)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":58:9)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":60:13)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":60:12)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":60:5)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":61:5)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":65:5)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":61:13)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":61:9)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":61:16)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":61:20)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":61:18)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":62:5)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":64:16)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":64:9)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":61:24)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":61:23)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":66:5)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":79:5)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":71:28)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":71:35)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":71:42)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":71:52)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":71:53)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":71:9)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":72:9)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":72:43)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":72:13)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":72:27)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":72:33)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":72:34)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":72:40)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":72:39)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":73:9)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":76:9)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":73:18)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":73:14)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":73:21)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":73:33)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":73:23)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":74:9)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":75:29)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":75:13)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":75:24)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":75:25)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":73:40)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":73:39)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":77:22)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":77:33)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":77:34)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":77:9)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":78:14)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_17.c":78:9)
#loc137 = loc(fused[#loc1, #loc2])
#loc138 = loc(fused[#loc3, #loc4])
#loc139 = loc(fused[#loc5, #loc6])
#loc140 = loc(fused[#loc7, #loc8])
#loc141 = loc(fused[#loc9, #loc10])
#loc142 = loc(fused[#loc11, #loc12])
#loc143 = loc(fused[#loc13, #loc14])
#loc144 = loc(fused[#loc15, #loc16])
#loc145 = loc(fused[#loc17, #loc18])
#loc146 = loc(fused[#loc21, #loc19])
#loc147 = loc(fused[#loc22, #loc23])
#loc148 = loc(fused[#loc25, #loc24])
#loc149 = loc(fused[#loc26, #loc27])
#loc150 = loc(fused[#loc29, #loc23])
#loc151 = loc(fused[#loc30, #loc31])
#loc152 = loc(fused[#loc33, #loc32])
#loc153 = loc(fused[#loc35, #loc34])
#loc154 = loc(fused[#loc36, #loc37])
#loc155 = loc(fused[#loc40, #loc41])
#loc156 = loc(fused[#loc39, #loc41])
#loc157 = loc(fused[#loc38, #loc42])
#loc158 = loc(fused[#loc43, #loc42])
#loc159 = loc(fused[#loc44, #loc45])
#loc160 = loc(fused[#loc46, #loc47])
#loc161 = loc(fused[#loc48, #loc45])
#loc162 = loc(fused[#loc52, #loc53])
#loc163 = loc(fused[#loc55, #loc54])
#loc164 = loc(fused[#loc56, #loc57])
#loc165 = loc(fused[#loc59, #loc53])
#loc166 = loc(fused[#loc61, #loc60])
#loc167 = loc(fused[#loc65, #loc64])
#loc168 = loc(fused[#loc72, #loc73])
#loc169 = loc(fused[#loc74, #loc75])
#loc170 = loc(fused[#loc76, #loc77])
#loc171 = loc(fused[#loc78, #loc79])
#loc172 = loc(fused[#loc80, #loc81])
#loc173 = loc(fused[#loc82, #loc83])
#loc174 = loc(fused[#loc84, #loc85])
#loc175 = loc(fused[#loc88, #loc86])
#loc176 = loc(fused[#loc89, #loc90])
#loc177 = loc(fused[#loc92, #loc91])
#loc178 = loc(fused[#loc93, #loc94])
#loc179 = loc(fused[#loc96, #loc90])
#loc180 = loc(fused[#loc98, #loc97])
#loc181 = loc(fused[#loc100, #loc99])
#loc182 = loc(fused[#loc101, #loc102])
#loc183 = loc(fused[#loc105, #loc106])
#loc184 = loc(fused[#loc104, #loc106])
#loc185 = loc(fused[#loc103, #loc107])
#loc186 = loc(fused[#loc108, #loc107])
#loc187 = loc(fused[#loc109, #loc110])
#loc188 = loc(fused[#loc111, #loc112])
#loc189 = loc(fused[#loc113, #loc110])
#loc190 = loc(fused[#loc117, #loc118])
#loc191 = loc(fused[#loc120, #loc119])
#loc192 = loc(fused[#loc121, #loc122])
#loc193 = loc(fused[#loc124, #loc118])
#loc194 = loc(fused[#loc126, #loc125])
#loc195 = loc(fused[#loc130, #loc129])
