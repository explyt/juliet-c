!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc469)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc470)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc471)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc472)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc10)
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc473)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc13)
  cir.func private @printIntLine(!s32i) loc(#loc474)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_console_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc476)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc477)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc477)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc477)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc22)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc478)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc26)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc481)
            %6 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc32)
            %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
            %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc32)
            cir.store %8, %5 : !u64i, !cir.ptr<!u64i> loc(#loc481)
            cir.scope {
              %9 = cir.const #cir.int<100> : !s32i loc(#loc36)
              %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc36)
              %11 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc37)
              %12 = cir.binop(sub, %10, %11) : !u64i loc(#loc483)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc38)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc38)
              %15 = cir.cmp(gt, %12, %14) : !u64i, !cir.bool loc(#loc484)
              cir.if %15 {
                cir.scope {
                  %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
                  %17 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc43)
                  %18 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %17 : !u64i), !cir.ptr<!s8i> loc(#loc44)
                  %19 = cir.const #cir.int<100> : !s32i loc(#loc45)
                  %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc45)
                  %21 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc46)
                  %22 = cir.binop(sub, %20, %21) : !u64i loc(#loc487)
                  %23 = cir.cast(integral, %22 : !u64i), !s32i loc(#loc487)
                  %24 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc471)
                  %25 = cir.load %24 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc47)
                  %26 = cir.call @fgets(%18, %23, %25) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc48)
                  %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc49)
                  %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc49)
                  %29 = cir.cmp(ne, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc488)
                  cir.if %29 {
                    %30 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc53)
                    %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
                    %32 = cir.call @strlen(%31) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc53)
                    cir.store %32, %5 : !u64i, !cir.ptr<!u64i> loc(#loc490)
                    cir.scope {
                      %33 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc59)
                      %34 = cir.const #cir.int<0> : !s32i loc(#loc60)
                      %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc60)
                      %36 = cir.cmp(gt, %33, %35) : !u64i, !cir.bool loc(#loc492)
                      %37 = cir.ternary(%36, true {
                        %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
                        %39 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc63)
                        %40 = cir.const #cir.int<1> : !s32i loc(#loc64)
                        %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc64)
                        %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc493)
                        %43 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc65)
                        %44 = cir.load %43 : !cir.ptr<!s8i>, !s8i loc(#loc62)
                        %45 = cir.cast(integral, %44 : !s8i), !s32i loc(#loc62)
                        %46 = cir.const #cir.int<10> : !s32i loc(#loc66)
                        %47 = cir.cmp(eq, %45, %46) : !s32i, !cir.bool loc(#loc494)
                        %48 = cir.ternary(%47, true {
                          %49 = cir.const #true loc(#loc61)
                          cir.yield %49 : !cir.bool loc(#loc61)
                        }, false {
                          %49 = cir.const #false loc(#loc61)
                          cir.yield %49 : !cir.bool loc(#loc61)
                        }) : (!cir.bool) -> !cir.bool loc(#loc61)
                        cir.yield %48 : !cir.bool loc(#loc61)
                      }, false {
                        %38 = cir.const #false loc(#loc61)
                        cir.yield %38 : !cir.bool loc(#loc61)
                      }) : (!cir.bool) -> !cir.bool loc(#loc61)
                      cir.if %37 {
                        %38 = cir.const #cir.int<0> : !s32i loc(#loc68)
                        %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc68)
                        %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
                        %41 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc70)
                        %42 = cir.const #cir.int<1> : !s32i loc(#loc71)
                        %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc71)
                        %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc496)
                        %45 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc72)
                        cir.store %39, %45 : !s8i, !cir.ptr<!s8i> loc(#loc497)
                      } loc(#loc495)
                    } loc(#loc491)
                  } else {
                    %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
                    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
                    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc73)
                    %32 = cir.const #cir.int<0> : !s32i loc(#loc74)
                    %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc74)
                    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
                    %35 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc76)
                    %36 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc77)
                    cir.store %33, %36 : !s8i, !cir.ptr<!s8i> loc(#loc498)
                  } loc(#loc489)
                } loc(#loc486)
              } loc(#loc485)
            } loc(#loc482)
          } loc(#loc480)
          cir.break loc(#loc78)
        } loc(#loc27)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc10)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc10)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc80)
          cir.break loc(#loc81)
        } loc(#loc79)
        cir.yield loc(#loc24)
      } loc(#loc24)
    } loc(#loc479)
    cir.scope {
      %4 = cir.const #cir.int<7> : !s32i loc(#loc84)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc501)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc502)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc503)
            cir.scope {
              %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc94)
              %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
              %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc13)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc13)
              %12 = cir.call @__isoc99_sscanf(%9, %11, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc94)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc96)
              %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc505)
              cir.if %14 {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc98)
                cir.store %15, %7 : !s32i, !cir.ptr<!s32i> loc(#loc507)
                cir.scope {
                  %17 = cir.const #cir.int<0> : !s32i loc(#loc102)
                  cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc509)
                  cir.for : cond {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc104)
                    %19 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc105)
                    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc510)
                    cir.condition(%20) loc(#loc106)
                  } body {
                    cir.scope {
                      %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc108)
                      %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc109)
                      cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc512)
                    } loc(#loc511)
                    cir.yield loc(#loc101)
                  } step {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc110)
                    %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc111)
                    cir.store %19, %5 : !s32i, !cir.ptr<!s32i> loc(#loc513)
                    cir.yield loc(#loc508)
                  } loc(#loc508)
                } loc(#loc508)
                %16 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc112)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc113)
              } loc(#loc506)
            } loc(#loc504)
          } loc(#loc500)
          cir.break loc(#loc114)
        } loc(#loc85)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc116)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc116)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc117)
          cir.break loc(#loc118)
        } loc(#loc115)
        cir.yield loc(#loc82)
      } loc(#loc82)
    } loc(#loc499)
    cir.return loc(#loc17)
  } loc(#loc475)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_console_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc515)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc121)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc516)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc123)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc517)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc125)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc518)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc127)
    cir.return loc(#loc120)
  } loc(#loc514)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc520)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc521)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc521)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc521)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc135)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc522)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc139)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc525)
            %6 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc145)
            %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
            %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc145)
            cir.store %8, %5 : !u64i, !cir.ptr<!u64i> loc(#loc525)
            cir.scope {
              %9 = cir.const #cir.int<100> : !s32i loc(#loc149)
              %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc149)
              %11 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc150)
              %12 = cir.binop(sub, %10, %11) : !u64i loc(#loc527)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc151)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc151)
              %15 = cir.cmp(gt, %12, %14) : !u64i, !cir.bool loc(#loc528)
              cir.if %15 {
                cir.scope {
                  %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
                  %17 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc156)
                  %18 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %17 : !u64i), !cir.ptr<!s8i> loc(#loc157)
                  %19 = cir.const #cir.int<100> : !s32i loc(#loc158)
                  %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc158)
                  %21 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc159)
                  %22 = cir.binop(sub, %20, %21) : !u64i loc(#loc531)
                  %23 = cir.cast(integral, %22 : !u64i), !s32i loc(#loc531)
                  %24 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc471)
                  %25 = cir.load %24 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc160)
                  %26 = cir.call @fgets(%18, %23, %25) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc161)
                  %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc162)
                  %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc162)
                  %29 = cir.cmp(ne, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc532)
                  cir.if %29 {
                    %30 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc166)
                    %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
                    %32 = cir.call @strlen(%31) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc166)
                    cir.store %32, %5 : !u64i, !cir.ptr<!u64i> loc(#loc534)
                    cir.scope {
                      %33 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc172)
                      %34 = cir.const #cir.int<0> : !s32i loc(#loc173)
                      %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc173)
                      %36 = cir.cmp(gt, %33, %35) : !u64i, !cir.bool loc(#loc536)
                      %37 = cir.ternary(%36, true {
                        %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc175)
                        %39 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc176)
                        %40 = cir.const #cir.int<1> : !s32i loc(#loc177)
                        %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc177)
                        %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc537)
                        %43 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc178)
                        %44 = cir.load %43 : !cir.ptr<!s8i>, !s8i loc(#loc175)
                        %45 = cir.cast(integral, %44 : !s8i), !s32i loc(#loc175)
                        %46 = cir.const #cir.int<10> : !s32i loc(#loc179)
                        %47 = cir.cmp(eq, %45, %46) : !s32i, !cir.bool loc(#loc538)
                        %48 = cir.ternary(%47, true {
                          %49 = cir.const #true loc(#loc174)
                          cir.yield %49 : !cir.bool loc(#loc174)
                        }, false {
                          %49 = cir.const #false loc(#loc174)
                          cir.yield %49 : !cir.bool loc(#loc174)
                        }) : (!cir.bool) -> !cir.bool loc(#loc174)
                        cir.yield %48 : !cir.bool loc(#loc174)
                      }, false {
                        %38 = cir.const #false loc(#loc174)
                        cir.yield %38 : !cir.bool loc(#loc174)
                      }) : (!cir.bool) -> !cir.bool loc(#loc174)
                      cir.if %37 {
                        %38 = cir.const #cir.int<0> : !s32i loc(#loc181)
                        %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc181)
                        %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc182)
                        %41 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc183)
                        %42 = cir.const #cir.int<1> : !s32i loc(#loc184)
                        %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc184)
                        %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc540)
                        %45 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc185)
                        cir.store %39, %45 : !s8i, !cir.ptr<!s8i> loc(#loc541)
                      } loc(#loc539)
                    } loc(#loc535)
                  } else {
                    %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc186)
                    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc186)
                    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc187)
                    %32 = cir.const #cir.int<0> : !s32i loc(#loc188)
                    %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc188)
                    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc189)
                    %35 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc190)
                    %36 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc191)
                    cir.store %33, %36 : !s8i, !cir.ptr<!s8i> loc(#loc542)
                  } loc(#loc533)
                } loc(#loc530)
              } loc(#loc529)
            } loc(#loc526)
          } loc(#loc524)
          cir.break loc(#loc192)
        } loc(#loc140)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc194)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc194)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc195)
          cir.break loc(#loc196)
        } loc(#loc193)
        cir.yield loc(#loc137)
      } loc(#loc137)
    } loc(#loc523)
    cir.scope {
      %4 = cir.const #cir.int<8> : !s32i loc(#loc199)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc201)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc201)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc202)
          cir.break loc(#loc203)
        } loc(#loc200)
        cir.case(default, []) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc545)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc546)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc547)
            cir.scope {
              %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc213)
              %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc214)
              %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc215)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc215)
              %12 = cir.call @__isoc99_sscanf(%9, %11, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc213)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc216)
              %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc549)
              cir.if %14 {
                cir.scope {
                  %15 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc220)
                  %16 = cir.const #cir.int<10000> : !s32i loc(#loc221)
                  %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc552)
                  cir.if %17 {
                    %18 = cir.const #cir.int<0> : !s32i loc(#loc223)
                    cir.store %18, %7 : !s32i, !cir.ptr<!s32i> loc(#loc554)
                    cir.scope {
                      %20 = cir.const #cir.int<0> : !s32i loc(#loc227)
                      cir.store %20, %5 : !s32i, !cir.ptr<!s32i> loc(#loc556)
                      cir.for : cond {
                        %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc229)
                        %22 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc230)
                        %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc557)
                        cir.condition(%23) loc(#loc231)
                      } body {
                        cir.scope {
                          %21 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc233)
                          %22 = cir.unary(inc, %21) nsw : !s32i, !s32i loc(#loc234)
                          cir.store %22, %7 : !s32i, !cir.ptr<!s32i> loc(#loc559)
                        } loc(#loc558)
                        cir.yield loc(#loc226)
                      } step {
                        %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc235)
                        %22 = cir.unary(inc, %21) nsw : !s32i, !s32i loc(#loc236)
                        cir.store %22, %5 : !s32i, !cir.ptr<!s32i> loc(#loc560)
                        cir.yield loc(#loc555)
                      } loc(#loc555)
                    } loc(#loc555)
                    %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc237)
                    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc238)
                  } loc(#loc553)
                } loc(#loc551)
              } loc(#loc550)
            } loc(#loc548)
          } loc(#loc544)
          cir.break loc(#loc239)
        } loc(#loc204)
        cir.yield loc(#loc197)
      } loc(#loc197)
    } loc(#loc543)
    cir.return loc(#loc130)
  } loc(#loc519)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc562)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc563)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc563)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc563)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc246)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc564)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc250)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc567)
            %6 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc256)
            %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc257)
            %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc256)
            cir.store %8, %5 : !u64i, !cir.ptr<!u64i> loc(#loc567)
            cir.scope {
              %9 = cir.const #cir.int<100> : !s32i loc(#loc260)
              %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc260)
              %11 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc261)
              %12 = cir.binop(sub, %10, %11) : !u64i loc(#loc569)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc262)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc262)
              %15 = cir.cmp(gt, %12, %14) : !u64i, !cir.bool loc(#loc570)
              cir.if %15 {
                cir.scope {
                  %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc266)
                  %17 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc267)
                  %18 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %17 : !u64i), !cir.ptr<!s8i> loc(#loc268)
                  %19 = cir.const #cir.int<100> : !s32i loc(#loc269)
                  %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc269)
                  %21 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc270)
                  %22 = cir.binop(sub, %20, %21) : !u64i loc(#loc573)
                  %23 = cir.cast(integral, %22 : !u64i), !s32i loc(#loc573)
                  %24 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc471)
                  %25 = cir.load %24 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc271)
                  %26 = cir.call @fgets(%18, %23, %25) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc272)
                  %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc273)
                  %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc273)
                  %29 = cir.cmp(ne, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc574)
                  cir.if %29 {
                    %30 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc277)
                    %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc278)
                    %32 = cir.call @strlen(%31) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc277)
                    cir.store %32, %5 : !u64i, !cir.ptr<!u64i> loc(#loc576)
                    cir.scope {
                      %33 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc283)
                      %34 = cir.const #cir.int<0> : !s32i loc(#loc284)
                      %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc284)
                      %36 = cir.cmp(gt, %33, %35) : !u64i, !cir.bool loc(#loc578)
                      %37 = cir.ternary(%36, true {
                        %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc286)
                        %39 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc287)
                        %40 = cir.const #cir.int<1> : !s32i loc(#loc288)
                        %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc288)
                        %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc579)
                        %43 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc289)
                        %44 = cir.load %43 : !cir.ptr<!s8i>, !s8i loc(#loc286)
                        %45 = cir.cast(integral, %44 : !s8i), !s32i loc(#loc286)
                        %46 = cir.const #cir.int<10> : !s32i loc(#loc290)
                        %47 = cir.cmp(eq, %45, %46) : !s32i, !cir.bool loc(#loc580)
                        %48 = cir.ternary(%47, true {
                          %49 = cir.const #true loc(#loc285)
                          cir.yield %49 : !cir.bool loc(#loc285)
                        }, false {
                          %49 = cir.const #false loc(#loc285)
                          cir.yield %49 : !cir.bool loc(#loc285)
                        }) : (!cir.bool) -> !cir.bool loc(#loc285)
                        cir.yield %48 : !cir.bool loc(#loc285)
                      }, false {
                        %38 = cir.const #false loc(#loc285)
                        cir.yield %38 : !cir.bool loc(#loc285)
                      }) : (!cir.bool) -> !cir.bool loc(#loc285)
                      cir.if %37 {
                        %38 = cir.const #cir.int<0> : !s32i loc(#loc292)
                        %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc292)
                        %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc293)
                        %41 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc294)
                        %42 = cir.const #cir.int<1> : !s32i loc(#loc295)
                        %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc295)
                        %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc582)
                        %45 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc296)
                        cir.store %39, %45 : !s8i, !cir.ptr<!s8i> loc(#loc583)
                      } loc(#loc581)
                    } loc(#loc577)
                  } else {
                    %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc297)
                    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc297)
                    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc298)
                    %32 = cir.const #cir.int<0> : !s32i loc(#loc299)
                    %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc299)
                    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc300)
                    %35 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc301)
                    %36 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc302)
                    cir.store %33, %36 : !s8i, !cir.ptr<!s8i> loc(#loc584)
                  } loc(#loc575)
                } loc(#loc572)
              } loc(#loc571)
            } loc(#loc568)
          } loc(#loc566)
          cir.break loc(#loc303)
        } loc(#loc251)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc305)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc305)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc306)
          cir.break loc(#loc307)
        } loc(#loc304)
        cir.yield loc(#loc248)
      } loc(#loc248)
    } loc(#loc565)
    cir.scope {
      %4 = cir.const #cir.int<7> : !s32i loc(#loc310)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc587)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc588)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc589)
            cir.scope {
              %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc320)
              %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc321)
              %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc322)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc322)
              %12 = cir.call @__isoc99_sscanf(%9, %11, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc320)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc323)
              %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc591)
              cir.if %14 {
                cir.scope {
                  %15 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc327)
                  %16 = cir.const #cir.int<10000> : !s32i loc(#loc328)
                  %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc594)
                  cir.if %17 {
                    %18 = cir.const #cir.int<0> : !s32i loc(#loc330)
                    cir.store %18, %7 : !s32i, !cir.ptr<!s32i> loc(#loc596)
                    cir.scope {
                      %20 = cir.const #cir.int<0> : !s32i loc(#loc334)
                      cir.store %20, %5 : !s32i, !cir.ptr<!s32i> loc(#loc598)
                      cir.for : cond {
                        %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc336)
                        %22 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc337)
                        %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc599)
                        cir.condition(%23) loc(#loc338)
                      } body {
                        cir.scope {
                          %21 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc340)
                          %22 = cir.unary(inc, %21) nsw : !s32i, !s32i loc(#loc341)
                          cir.store %22, %7 : !s32i, !cir.ptr<!s32i> loc(#loc601)
                        } loc(#loc600)
                        cir.yield loc(#loc333)
                      } step {
                        %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc342)
                        %22 = cir.unary(inc, %21) nsw : !s32i, !s32i loc(#loc343)
                        cir.store %22, %5 : !s32i, !cir.ptr<!s32i> loc(#loc602)
                        cir.yield loc(#loc597)
                      } loc(#loc597)
                    } loc(#loc597)
                    %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc344)
                    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc345)
                  } loc(#loc595)
                } loc(#loc593)
              } loc(#loc592)
            } loc(#loc590)
          } loc(#loc586)
          cir.break loc(#loc346)
        } loc(#loc311)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc348)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc348)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc349)
          cir.break loc(#loc350)
        } loc(#loc347)
        cir.yield loc(#loc308)
      } loc(#loc308)
    } loc(#loc585)
    cir.return loc(#loc241)
  } loc(#loc561)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc603)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc353)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc605)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc606)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc606)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc606)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc360)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc607)
    cir.scope {
      %4 = cir.const #cir.int<5> : !s32i loc(#loc364)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc366)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc366)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc367)
          cir.break loc(#loc368)
        } loc(#loc365)
        cir.case(default, []) {
          %5 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc370)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc371)
          %7 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc353)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc353)
          %9 = cir.call @strcpy(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc370)
          cir.break loc(#loc372)
        } loc(#loc369)
        cir.yield loc(#loc362)
      } loc(#loc362)
    } loc(#loc608)
    cir.scope {
      %4 = cir.const #cir.int<7> : !s32i loc(#loc375)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc611)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc612)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc613)
            cir.scope {
              %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc385)
              %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc386)
              %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc387)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc387)
              %12 = cir.call @__isoc99_sscanf(%9, %11, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc385)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc388)
              %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc615)
              cir.if %14 {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc390)
                cir.store %15, %7 : !s32i, !cir.ptr<!s32i> loc(#loc617)
                cir.scope {
                  %17 = cir.const #cir.int<0> : !s32i loc(#loc394)
                  cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc619)
                  cir.for : cond {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc396)
                    %19 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc397)
                    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc620)
                    cir.condition(%20) loc(#loc398)
                  } body {
                    cir.scope {
                      %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc400)
                      %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc401)
                      cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc622)
                    } loc(#loc621)
                    cir.yield loc(#loc393)
                  } step {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc402)
                    %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc403)
                    cir.store %19, %5 : !s32i, !cir.ptr<!s32i> loc(#loc623)
                    cir.yield loc(#loc618)
                  } loc(#loc618)
                } loc(#loc618)
                %16 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc404)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc405)
              } loc(#loc616)
            } loc(#loc614)
          } loc(#loc610)
          cir.break loc(#loc406)
        } loc(#loc376)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc408)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc408)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc409)
          cir.break loc(#loc410)
        } loc(#loc407)
        cir.yield loc(#loc373)
      } loc(#loc373)
    } loc(#loc609)
    cir.return loc(#loc355)
  } loc(#loc604)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc625)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc626)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc626)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc626)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc417)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc627)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc421)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %5 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc423)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc424)
          %7 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc425)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc425)
          %9 = cir.call @strcpy(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc423)
          cir.break loc(#loc426)
        } loc(#loc422)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc428)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc428)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc429)
          cir.break loc(#loc430)
        } loc(#loc427)
        cir.yield loc(#loc419)
      } loc(#loc419)
    } loc(#loc628)
    cir.scope {
      %4 = cir.const #cir.int<7> : !s32i loc(#loc433)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc631)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc632)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc633)
            cir.scope {
              %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc443)
              %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc444)
              %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc445)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc445)
              %12 = cir.call @__isoc99_sscanf(%9, %11, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc443)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc446)
              %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc635)
              cir.if %14 {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc448)
                cir.store %15, %7 : !s32i, !cir.ptr<!s32i> loc(#loc637)
                cir.scope {
                  %17 = cir.const #cir.int<0> : !s32i loc(#loc452)
                  cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc639)
                  cir.for : cond {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc454)
                    %19 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc455)
                    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc640)
                    cir.condition(%20) loc(#loc456)
                  } body {
                    cir.scope {
                      %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc458)
                      %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc459)
                      cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc642)
                    } loc(#loc641)
                    cir.yield loc(#loc451)
                  } step {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc460)
                    %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc461)
                    cir.store %19, %5 : !s32i, !cir.ptr<!s32i> loc(#loc643)
                    cir.yield loc(#loc638)
                  } loc(#loc638)
                } loc(#loc638)
                %16 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc462)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc463)
              } loc(#loc636)
            } loc(#loc634)
          } loc(#loc630)
          cir.break loc(#loc464)
        } loc(#loc434)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc466)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc466)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc467)
          cir.break loc(#loc468)
        } loc(#loc465)
        cir.yield loc(#loc431)
      } loc(#loc431)
    } loc(#loc629)
    cir.return loc(#loc412)
  } loc(#loc624)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_15.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":55:27)
#loc10 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":64:19)
#loc11 = loc("/usr/include/stdio.h":468:1)
#loc12 = loc("/usr/include/stdio.h":468:12)
#loc13 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":72:26)
#loc14 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc15 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc16 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":28:1)
#loc17 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":90:1)
#loc18 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":30:5)
#loc19 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":30:12)
#loc20 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":31:5)
#loc21 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":31:28)
#loc22 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":32:12)
#loc23 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":32:5)
#loc24 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":33:5)
#loc25 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":66:5)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":33:12)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":35:5)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":36:5)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":60:5)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":38:9)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":38:37)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":38:26)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":38:33)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":40:9)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":59:9)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":40:13)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":40:17)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":40:27)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":41:9)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":43:13)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":58:13)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":43:23)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":43:28)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":43:27)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":43:43)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":43:47)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":43:57)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":43:17)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":43:67)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":44:13)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":52:13)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":54:13)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":47:27)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":47:34)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":47:17)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":47:38)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":48:17)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":51:17)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":48:21)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":48:31)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":48:33)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":48:36)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":48:41)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":48:49)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":48:50)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":48:55)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":49:17)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":50:39)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":50:21)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":50:26)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":50:34)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":50:35)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":55:17)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":57:33)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":57:17)
#loc76 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":57:22)
#loc77 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":57:29)
#loc78 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":61:5)
#loc79 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":62:5)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":64:9)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":65:9)
#loc82 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":67:5)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":89:5)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":67:12)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":69:5)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":70:5)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":83:5)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":71:9)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":71:13)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":71:16)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":71:19)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":72:9)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":82:9)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":72:13)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":72:20)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":72:39)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":73:9)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":75:27)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":75:13)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":76:13)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":80:13)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":76:22)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":76:18)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":76:25)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":76:29)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":76:27)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":77:13)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":79:28)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":79:17)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":76:33)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":76:32)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":81:26)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":81:13)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":84:5)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":85:5)
#loc116 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":87:19)
#loc117 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":87:9)
#loc118 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":88:9)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":316:1)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":322:1)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":318:5)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":318:14)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":319:5)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":319:14)
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":320:5)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":320:14)
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":321:5)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":321:14)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":97:1)
#loc130 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":162:1)
#loc131 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":99:5)
#loc132 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":99:12)
#loc133 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":100:5)
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":100:28)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":101:12)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":101:5)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":102:5)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":135:5)
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":102:12)
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":104:5)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":105:5)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":129:5)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":107:9)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":107:37)
#loc145 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":107:26)
#loc146 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":107:33)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":109:9)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":128:9)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":109:13)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":109:17)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":109:27)
#loc152 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":110:9)
#loc153 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":112:13)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":127:13)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":112:23)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":112:28)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":112:27)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":112:43)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":112:47)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":112:57)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":112:17)
#loc162 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":112:67)
#loc163 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":113:13)
#loc164 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":121:13)
#loc165 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":123:13)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":116:27)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":116:34)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":116:17)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":116:38)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":117:17)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":120:17)
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":117:21)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":117:31)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":117:33)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":117:36)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":117:41)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":117:49)
#loc178 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":117:50)
#loc179 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":117:55)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":118:17)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":119:39)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":119:21)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":119:26)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":119:34)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":119:35)
#loc186 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":124:27)
#loc187 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":124:17)
#loc188 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":126:33)
#loc189 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":126:17)
#loc190 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":126:22)
#loc191 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":126:29)
#loc192 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":130:5)
#loc193 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":131:5)
#loc194 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":133:19)
#loc195 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":133:9)
#loc196 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":134:9)
#loc197 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":136:5)
#loc198 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":161:5)
#loc199 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":136:12)
#loc200 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":138:5)
#loc201 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":140:19)
#loc202 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":140:9)
#loc203 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":141:9)
#loc204 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":142:5)
#loc205 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":143:5)
#loc206 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":159:5)
#loc207 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":144:9)
#loc208 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":144:13)
#loc209 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":144:16)
#loc210 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":144:19)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":145:9)
#loc212 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":158:9)
#loc213 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":145:13)
#loc214 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":145:20)
#loc215 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":145:26)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":145:39)
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":146:9)
#loc218 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":148:13)
#loc219 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":157:13)
#loc220 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":148:17)
#loc221 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":148:21)
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":149:13)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":150:31)
#loc224 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":150:17)
#loc225 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":151:17)
#loc226 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":155:17)
#loc227 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":151:26)
#loc228 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":151:22)
#loc229 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":151:29)
#loc230 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":151:33)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":151:31)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":152:17)
#loc233 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":154:32)
#loc234 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":154:21)
#loc235 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":151:37)
#loc236 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":151:36)
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":156:30)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":156:17)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":160:5)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":165:1)
#loc241 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":230:1)
#loc242 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":167:5)
#loc243 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":167:12)
#loc244 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":168:5)
#loc245 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":168:28)
#loc246 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":169:12)
#loc247 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":169:5)
#loc248 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":170:5)
#loc249 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":203:5)
#loc250 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":170:12)
#loc251 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":172:5)
#loc252 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":173:5)
#loc253 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":197:5)
#loc254 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":175:9)
#loc255 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":175:37)
#loc256 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":175:26)
#loc257 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":175:33)
#loc258 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":177:9)
#loc259 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":196:9)
#loc260 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":177:13)
#loc261 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":177:17)
#loc262 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":177:27)
#loc263 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":178:9)
#loc264 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":180:13)
#loc265 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":195:13)
#loc266 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":180:23)
#loc267 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":180:28)
#loc268 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":180:27)
#loc269 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":180:43)
#loc270 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":180:47)
#loc271 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":180:57)
#loc272 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":180:17)
#loc273 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":180:67)
#loc274 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":181:13)
#loc275 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":189:13)
#loc276 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":191:13)
#loc277 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":184:27)
#loc278 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":184:34)
#loc279 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":184:17)
#loc280 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":184:38)
#loc281 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":185:17)
#loc282 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":188:17)
#loc283 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":185:21)
#loc284 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":185:31)
#loc285 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":185:33)
#loc286 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":185:36)
#loc287 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":185:41)
#loc288 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":185:49)
#loc289 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":185:50)
#loc290 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":185:55)
#loc291 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":186:17)
#loc292 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":187:39)
#loc293 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":187:21)
#loc294 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":187:26)
#loc295 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":187:34)
#loc296 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":187:35)
#loc297 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":192:27)
#loc298 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":192:17)
#loc299 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":194:33)
#loc300 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":194:17)
#loc301 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":194:22)
#loc302 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":194:29)
#loc303 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":198:5)
#loc304 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":199:5)
#loc305 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":201:19)
#loc306 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":201:9)
#loc307 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":202:9)
#loc308 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":204:5)
#loc309 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":229:5)
#loc310 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":204:12)
#loc311 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":206:5)
#loc312 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":207:5)
#loc313 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":223:5)
#loc314 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":208:9)
#loc315 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":208:13)
#loc316 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":208:16)
#loc317 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":208:19)
#loc318 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":209:9)
#loc319 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":222:9)
#loc320 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":209:13)
#loc321 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":209:20)
#loc322 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":209:26)
#loc323 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":209:39)
#loc324 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":210:9)
#loc325 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":212:13)
#loc326 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":221:13)
#loc327 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":212:17)
#loc328 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":212:21)
#loc329 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":213:13)
#loc330 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":214:31)
#loc331 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":214:17)
#loc332 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":215:17)
#loc333 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":219:17)
#loc334 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":215:26)
#loc335 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":215:22)
#loc336 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":215:29)
#loc337 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":215:33)
#loc338 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":215:31)
#loc339 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":216:17)
#loc340 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":218:32)
#loc341 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":218:21)
#loc342 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":215:37)
#loc343 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":215:36)
#loc344 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":220:30)
#loc345 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":220:17)
#loc346 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":224:5)
#loc347 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":225:5)
#loc348 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":227:19)
#loc349 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":227:9)
#loc350 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":228:9)
#loc351 = loc("/usr/include/string.h":141:1)
#loc352 = loc("/usr/include/string.h":142:14)
#loc353 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":246:22)
#loc354 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":233:1)
#loc355 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":272:1)
#loc356 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":235:5)
#loc357 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":235:12)
#loc358 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":236:5)
#loc359 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":236:28)
#loc360 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":237:12)
#loc361 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":237:5)
#loc362 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":238:5)
#loc363 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":248:5)
#loc364 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":238:12)
#loc365 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":240:5)
#loc366 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":242:19)
#loc367 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":242:9)
#loc368 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":243:9)
#loc369 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":244:5)
#loc370 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":246:9)
#loc371 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":246:16)
#loc372 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":247:9)
#loc373 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":249:5)
#loc374 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":271:5)
#loc375 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":249:12)
#loc376 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":251:5)
#loc377 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":252:5)
#loc378 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":265:5)
#loc379 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":253:9)
#loc380 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":253:13)
#loc381 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":253:16)
#loc382 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":253:19)
#loc383 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":254:9)
#loc384 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":264:9)
#loc385 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":254:13)
#loc386 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":254:20)
#loc387 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":254:26)
#loc388 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":254:39)
#loc389 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":255:9)
#loc390 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":257:27)
#loc391 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":257:13)
#loc392 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":258:13)
#loc393 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":262:13)
#loc394 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":258:22)
#loc395 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":258:18)
#loc396 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":258:25)
#loc397 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":258:29)
#loc398 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":258:27)
#loc399 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":259:13)
#loc400 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":261:28)
#loc401 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":261:17)
#loc402 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":258:33)
#loc403 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":258:32)
#loc404 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":263:26)
#loc405 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":263:13)
#loc406 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":266:5)
#loc407 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":267:5)
#loc408 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":269:19)
#loc409 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":269:9)
#loc410 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":270:9)
#loc411 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":275:1)
#loc412 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":314:1)
#loc413 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":277:5)
#loc414 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":277:12)
#loc415 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":278:5)
#loc416 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":278:28)
#loc417 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":279:12)
#loc418 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":279:5)
#loc419 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":280:5)
#loc420 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":290:5)
#loc421 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":280:12)
#loc422 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":282:5)
#loc423 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":284:9)
#loc424 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":284:16)
#loc425 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":284:22)
#loc426 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":285:9)
#loc427 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":286:5)
#loc428 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":288:19)
#loc429 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":288:9)
#loc430 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":289:9)
#loc431 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":291:5)
#loc432 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":313:5)
#loc433 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":291:12)
#loc434 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":293:5)
#loc435 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":294:5)
#loc436 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":307:5)
#loc437 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":295:9)
#loc438 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":295:13)
#loc439 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":295:16)
#loc440 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":295:19)
#loc441 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":296:9)
#loc442 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":306:9)
#loc443 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":296:13)
#loc444 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":296:20)
#loc445 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":296:26)
#loc446 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":296:39)
#loc447 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":297:9)
#loc448 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":299:27)
#loc449 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":299:13)
#loc450 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":300:13)
#loc451 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":304:13)
#loc452 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":300:22)
#loc453 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":300:18)
#loc454 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":300:25)
#loc455 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":300:29)
#loc456 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":300:27)
#loc457 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":301:13)
#loc458 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":303:28)
#loc459 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":303:17)
#loc460 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":300:33)
#loc461 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":300:32)
#loc462 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":305:26)
#loc463 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":305:13)
#loc464 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":308:5)
#loc465 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":309:5)
#loc466 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":311:19)
#loc467 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":311:9)
#loc468 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":312:9)
#loc469 = loc(fused[#loc1, #loc2])
#loc470 = loc(fused[#loc3, #loc4])
#loc471 = loc(fused[#loc5, #loc6])
#loc472 = loc(fused[#loc7, #loc8])
#loc473 = loc(fused[#loc11, #loc12])
#loc474 = loc(fused[#loc14, #loc15])
#loc475 = loc(fused[#loc16, #loc17])
#loc476 = loc(fused[#loc18, #loc19])
#loc477 = loc(fused[#loc20, #loc21])
#loc478 = loc(fused[#loc23, #loc22])
#loc479 = loc(fused[#loc24, #loc25])
#loc480 = loc(fused[#loc28, #loc29])
#loc481 = loc(fused[#loc30, #loc31])
#loc482 = loc(fused[#loc34, #loc35])
#loc483 = loc(fused[#loc36, #loc37])
#loc484 = loc(fused[#loc36, #loc38])
#loc485 = loc(fused[#loc39, #loc35])
#loc486 = loc(fused[#loc40, #loc41])
#loc487 = loc(fused[#loc45, #loc46])
#loc488 = loc(fused[#loc48, #loc49])
#loc489 = loc(fused[#loc50, #loc51, #loc52, #loc41])
#loc490 = loc(fused[#loc55, #loc56])
#loc491 = loc(fused[#loc57, #loc58])
#loc492 = loc(fused[#loc59, #loc60])
#loc493 = loc(fused[#loc63, #loc64])
#loc494 = loc(fused[#loc62, #loc66])
#loc495 = loc(fused[#loc67, #loc58])
#loc496 = loc(fused[#loc70, #loc71])
#loc497 = loc(fused[#loc69, #loc68])
#loc498 = loc(fused[#loc75, #loc74])
#loc499 = loc(fused[#loc82, #loc83])
#loc500 = loc(fused[#loc86, #loc87])
#loc501 = loc(fused[#loc88, #loc89])
#loc502 = loc(fused[#loc88, #loc90])
#loc503 = loc(fused[#loc88, #loc91])
#loc504 = loc(fused[#loc92, #loc93])
#loc505 = loc(fused[#loc94, #loc96])
#loc506 = loc(fused[#loc97, #loc93])
#loc507 = loc(fused[#loc99, #loc98])
#loc508 = loc(fused[#loc100, #loc101])
#loc509 = loc(fused[#loc103, #loc102])
#loc510 = loc(fused[#loc104, #loc105])
#loc511 = loc(fused[#loc107, #loc101])
#loc512 = loc(fused[#loc109, #loc108])
#loc513 = loc(fused[#loc111, #loc110])
#loc514 = loc(fused[#loc119, #loc120])
#loc515 = loc(fused[#loc121, #loc122])
#loc516 = loc(fused[#loc123, #loc124])
#loc517 = loc(fused[#loc125, #loc126])
#loc518 = loc(fused[#loc127, #loc128])
#loc519 = loc(fused[#loc129, #loc130])
#loc520 = loc(fused[#loc131, #loc132])
#loc521 = loc(fused[#loc133, #loc134])
#loc522 = loc(fused[#loc136, #loc135])
#loc523 = loc(fused[#loc137, #loc138])
#loc524 = loc(fused[#loc141, #loc142])
#loc525 = loc(fused[#loc143, #loc144])
#loc526 = loc(fused[#loc147, #loc148])
#loc527 = loc(fused[#loc149, #loc150])
#loc528 = loc(fused[#loc149, #loc151])
#loc529 = loc(fused[#loc152, #loc148])
#loc530 = loc(fused[#loc153, #loc154])
#loc531 = loc(fused[#loc158, #loc159])
#loc532 = loc(fused[#loc161, #loc162])
#loc533 = loc(fused[#loc163, #loc164, #loc165, #loc154])
#loc534 = loc(fused[#loc168, #loc169])
#loc535 = loc(fused[#loc170, #loc171])
#loc536 = loc(fused[#loc172, #loc173])
#loc537 = loc(fused[#loc176, #loc177])
#loc538 = loc(fused[#loc175, #loc179])
#loc539 = loc(fused[#loc180, #loc171])
#loc540 = loc(fused[#loc183, #loc184])
#loc541 = loc(fused[#loc182, #loc181])
#loc542 = loc(fused[#loc189, #loc188])
#loc543 = loc(fused[#loc197, #loc198])
#loc544 = loc(fused[#loc205, #loc206])
#loc545 = loc(fused[#loc207, #loc208])
#loc546 = loc(fused[#loc207, #loc209])
#loc547 = loc(fused[#loc207, #loc210])
#loc548 = loc(fused[#loc211, #loc212])
#loc549 = loc(fused[#loc213, #loc216])
#loc550 = loc(fused[#loc217, #loc212])
#loc551 = loc(fused[#loc218, #loc219])
#loc552 = loc(fused[#loc220, #loc221])
#loc553 = loc(fused[#loc222, #loc219])
#loc554 = loc(fused[#loc224, #loc223])
#loc555 = loc(fused[#loc225, #loc226])
#loc556 = loc(fused[#loc228, #loc227])
#loc557 = loc(fused[#loc229, #loc230])
#loc558 = loc(fused[#loc232, #loc226])
#loc559 = loc(fused[#loc234, #loc233])
#loc560 = loc(fused[#loc236, #loc235])
#loc561 = loc(fused[#loc240, #loc241])
#loc562 = loc(fused[#loc242, #loc243])
#loc563 = loc(fused[#loc244, #loc245])
#loc564 = loc(fused[#loc247, #loc246])
#loc565 = loc(fused[#loc248, #loc249])
#loc566 = loc(fused[#loc252, #loc253])
#loc567 = loc(fused[#loc254, #loc255])
#loc568 = loc(fused[#loc258, #loc259])
#loc569 = loc(fused[#loc260, #loc261])
#loc570 = loc(fused[#loc260, #loc262])
#loc571 = loc(fused[#loc263, #loc259])
#loc572 = loc(fused[#loc264, #loc265])
#loc573 = loc(fused[#loc269, #loc270])
#loc574 = loc(fused[#loc272, #loc273])
#loc575 = loc(fused[#loc274, #loc275, #loc276, #loc265])
#loc576 = loc(fused[#loc279, #loc280])
#loc577 = loc(fused[#loc281, #loc282])
#loc578 = loc(fused[#loc283, #loc284])
#loc579 = loc(fused[#loc287, #loc288])
#loc580 = loc(fused[#loc286, #loc290])
#loc581 = loc(fused[#loc291, #loc282])
#loc582 = loc(fused[#loc294, #loc295])
#loc583 = loc(fused[#loc293, #loc292])
#loc584 = loc(fused[#loc300, #loc299])
#loc585 = loc(fused[#loc308, #loc309])
#loc586 = loc(fused[#loc312, #loc313])
#loc587 = loc(fused[#loc314, #loc315])
#loc588 = loc(fused[#loc314, #loc316])
#loc589 = loc(fused[#loc314, #loc317])
#loc590 = loc(fused[#loc318, #loc319])
#loc591 = loc(fused[#loc320, #loc323])
#loc592 = loc(fused[#loc324, #loc319])
#loc593 = loc(fused[#loc325, #loc326])
#loc594 = loc(fused[#loc327, #loc328])
#loc595 = loc(fused[#loc329, #loc326])
#loc596 = loc(fused[#loc331, #loc330])
#loc597 = loc(fused[#loc332, #loc333])
#loc598 = loc(fused[#loc335, #loc334])
#loc599 = loc(fused[#loc336, #loc337])
#loc600 = loc(fused[#loc339, #loc333])
#loc601 = loc(fused[#loc341, #loc340])
#loc602 = loc(fused[#loc343, #loc342])
#loc603 = loc(fused[#loc351, #loc352])
#loc604 = loc(fused[#loc354, #loc355])
#loc605 = loc(fused[#loc356, #loc357])
#loc606 = loc(fused[#loc358, #loc359])
#loc607 = loc(fused[#loc361, #loc360])
#loc608 = loc(fused[#loc362, #loc363])
#loc609 = loc(fused[#loc373, #loc374])
#loc610 = loc(fused[#loc377, #loc378])
#loc611 = loc(fused[#loc379, #loc380])
#loc612 = loc(fused[#loc379, #loc381])
#loc613 = loc(fused[#loc379, #loc382])
#loc614 = loc(fused[#loc383, #loc384])
#loc615 = loc(fused[#loc385, #loc388])
#loc616 = loc(fused[#loc389, #loc384])
#loc617 = loc(fused[#loc391, #loc390])
#loc618 = loc(fused[#loc392, #loc393])
#loc619 = loc(fused[#loc395, #loc394])
#loc620 = loc(fused[#loc396, #loc397])
#loc621 = loc(fused[#loc399, #loc393])
#loc622 = loc(fused[#loc401, #loc400])
#loc623 = loc(fused[#loc403, #loc402])
#loc624 = loc(fused[#loc411, #loc412])
#loc625 = loc(fused[#loc413, #loc414])
#loc626 = loc(fused[#loc415, #loc416])
#loc627 = loc(fused[#loc418, #loc417])
#loc628 = loc(fused[#loc419, #loc420])
#loc629 = loc(fused[#loc431, #loc432])
#loc630 = loc(fused[#loc435, #loc436])
#loc631 = loc(fused[#loc437, #loc438])
#loc632 = loc(fused[#loc437, #loc439])
#loc633 = loc(fused[#loc437, #loc440])
#loc634 = loc(fused[#loc441, #loc442])
#loc635 = loc(fused[#loc443, #loc446])
#loc636 = loc(fused[#loc447, #loc442])
#loc637 = loc(fused[#loc449, #loc448])
#loc638 = loc(fused[#loc450, #loc451])
#loc639 = loc(fused[#loc453, #loc452])
#loc640 = loc(fused[#loc454, #loc455])
#loc641 = loc(fused[#loc457, #loc451])
#loc642 = loc(fused[#loc459, #loc458])
#loc643 = loc(fused[#loc461, #loc460])
