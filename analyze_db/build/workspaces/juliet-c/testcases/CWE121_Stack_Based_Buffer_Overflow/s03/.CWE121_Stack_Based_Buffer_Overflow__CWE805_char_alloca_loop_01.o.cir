!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc113)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01_bad() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc115)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc116)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc117)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc118)
    %4 = cir.const #cir.int<50> : !s32i loc(#loc12)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc12)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc12)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc12)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc119)
    %10 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %11, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc118)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc14)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc14)
    %14 = cir.const #cir.int<1> : !u64i loc(#loc14)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc14)
    %16 = cir.alloca !u8i, !cir.ptr<!u8i>, %15 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc14)
    cir.store %18, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc119)
    %19 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
    cir.store %19, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc17)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc17)
    %22 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc20)
    cir.store %21, %24 : !s8i, !cir.ptr<!s8i> loc(#loc121)
    cir.br ^bb1 loc(#loc122)
  ^bb1:  // pred: ^bb0
    %25 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc23)
    %27 = cir.const #cir.int<67> : !s32i loc(#loc24)
    %28 = cir.const #cir.int<100> : !s32i loc(#loc25)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc25)
    %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc25)
    cir.libc.memset %31 bytes from %26 set to %27 : !cir.ptr<!void>, !s32i, !u64i loc(#loc123)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc29)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc30)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc30)
    %37 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc32)
    %38 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %36 : !s32i), !cir.ptr<!s8i> loc(#loc32)
    cir.store %33, %38 : !s8i, !cir.ptr<!s8i> loc(#loc124)
    cir.br ^bb2 loc(#loc125)
  ^bb2:  // pred: ^bb1
    %39 = cir.const #cir.int<0> : !s32i loc(#loc35)
    %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc35)
    cir.store %40, %0 : !u64i, !cir.ptr<!u64i> loc(#loc126)
    cir.br ^bb3 loc(#loc125)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %41 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc37)
    %42 = cir.const #cir.int<100> : !s32i loc(#loc38)
    %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc38)
    %44 = cir.cmp(lt, %41, %43) : !u64i, !cir.bool loc(#loc127)
    cir.brcond %44 ^bb4, ^bb8 loc(#loc39)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc128)
  ^bb5:  // pred: ^bb4
    %45 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc41)
    %46 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc42)
    %47 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc42)
    %48 = cir.load %47 : !cir.ptr<!s8i>, !s8i loc(#loc42)
    %49 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
    %50 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc44)
    %51 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %50 : !u64i), !cir.ptr<!s8i> loc(#loc45)
    cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc129)
    cir.br ^bb6 loc(#loc34)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc34)
  ^bb7:  // pred: ^bb6
    %52 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc47)
    %53 = cir.unary(inc, %52) : !u64i, !u64i loc(#loc48)
    cir.store %53, %0 : !u64i, !cir.ptr<!u64i> loc(#loc130)
    cir.br ^bb3 loc(#loc125)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc34)
  ^bb9:  // pred: ^bb8
    %54 = cir.const #cir.int<0> : !s32i loc(#loc49)
    %55 = cir.cast(integral, %54 : !s32i), !s8i loc(#loc49)
    %56 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
    %57 = cir.const #cir.int<100> : !s32i loc(#loc51)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc52)
    %59 = cir.binop(sub, %57, %58) nsw : !s32i loc(#loc51)
    %60 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %59 : !s32i), !cir.ptr<!s8i> loc(#loc53)
    cir.store %55, %60 : !s8i, !cir.ptr<!s8i> loc(#loc131)
    %61 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%61) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    cir.br ^bb10 loc(#loc22)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc4)
  } loc(#loc114)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc133)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc58)
    cir.return loc(#loc57)
  } loc(#loc132)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc135)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc136)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc137)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc138)
    %4 = cir.const #cir.int<50> : !s32i loc(#loc69)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc69)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc69)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc69)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc69)
    %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc139)
    %10 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc69)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc69)
    cir.store %11, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc138)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc71)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc71)
    %14 = cir.const #cir.int<1> : !u64i loc(#loc71)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc71)
    %16 = cir.alloca !u8i, !cir.ptr<!u8i>, %15 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc71)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc71)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc71)
    cir.store %18, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc139)
    %19 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
    cir.store %19, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc140)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc74)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc74)
    %22 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc76)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc77)
    cir.store %21, %24 : !s8i, !cir.ptr<!s8i> loc(#loc141)
    cir.br ^bb1 loc(#loc142)
  ^bb1:  // pred: ^bb0
    %25 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc80)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc80)
    %27 = cir.const #cir.int<67> : !s32i loc(#loc81)
    %28 = cir.const #cir.int<100> : !s32i loc(#loc82)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc83)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc82)
    %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc82)
    cir.libc.memset %31 bytes from %26 set to %27 : !cir.ptr<!void>, !s32i, !u64i loc(#loc143)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc86)
    %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc86)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc87)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc87)
    %37 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc89)
    %38 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %36 : !s32i), !cir.ptr<!s8i> loc(#loc89)
    cir.store %33, %38 : !s8i, !cir.ptr<!s8i> loc(#loc144)
    cir.br ^bb2 loc(#loc145)
  ^bb2:  // pred: ^bb1
    %39 = cir.const #cir.int<0> : !s32i loc(#loc92)
    %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc92)
    cir.store %40, %0 : !u64i, !cir.ptr<!u64i> loc(#loc146)
    cir.br ^bb3 loc(#loc145)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %41 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc94)
    %42 = cir.const #cir.int<100> : !s32i loc(#loc95)
    %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc95)
    %44 = cir.cmp(lt, %41, %43) : !u64i, !cir.bool loc(#loc147)
    cir.brcond %44 ^bb4, ^bb8 loc(#loc96)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc148)
  ^bb5:  // pred: ^bb4
    %45 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc98)
    %46 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc99)
    %47 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc99)
    %48 = cir.load %47 : !cir.ptr<!s8i>, !s8i loc(#loc99)
    %49 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
    %50 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc101)
    %51 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %50 : !u64i), !cir.ptr<!s8i> loc(#loc102)
    cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc149)
    cir.br ^bb6 loc(#loc91)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc91)
  ^bb7:  // pred: ^bb6
    %52 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc104)
    %53 = cir.unary(inc, %52) : !u64i, !u64i loc(#loc105)
    cir.store %53, %0 : !u64i, !cir.ptr<!u64i> loc(#loc150)
    cir.br ^bb3 loc(#loc145)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc91)
  ^bb9:  // pred: ^bb8
    %54 = cir.const #cir.int<0> : !s32i loc(#loc106)
    %55 = cir.cast(integral, %54 : !s32i), !s8i loc(#loc106)
    %56 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    %57 = cir.const #cir.int<100> : !s32i loc(#loc108)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %59 = cir.binop(sub, %57, %58) nsw : !s32i loc(#loc108)
    %60 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %59 : !s32i), !cir.ptr<!s8i> loc(#loc110)
    cir.store %55, %60 : !s8i, !cir.ptr<!s8i> loc(#loc151)
    %61 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
    cir.call @printLine(%61) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    cir.br ^bb10 loc(#loc79)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc61)
  } loc(#loc134)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":23:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":45:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":33:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":33:16)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":34:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":34:24)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":25:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":25:12)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":26:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":26:36)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":27:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":27:37)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":30:12)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":30:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":31:15)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":31:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":31:10)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":31:11)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":32:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":44:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":35:16)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":35:24)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":35:29)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":35:33)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":35:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":35:34)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":36:25)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":36:16)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":36:20)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":36:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":38:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":41:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":38:18)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":38:14)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":38:21)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":38:25)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":38:23)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":39:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":40:30)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":40:23)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":40:13)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":40:18)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":40:19)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":40:31)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":38:31)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":38:30)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":42:23)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":42:9)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":42:14)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":42:18)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":42:19)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":43:19)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":43:9)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":75:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":78:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":77:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":77:13)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":52:1)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":73:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":61:9)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":61:16)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":62:9)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":62:24)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":54:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":54:12)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":55:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":55:36)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":56:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":56:37)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":58:12)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":58:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":59:15)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":59:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":59:10)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":59:11)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":60:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":72:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":63:16)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":63:24)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":63:29)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":63:33)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":63:9)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":63:34)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":64:25)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":64:16)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":64:20)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":64:9)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":66:9)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":69:9)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":66:18)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":66:14)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":66:21)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":66:25)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":66:23)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":67:9)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":68:30)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":68:23)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":68:13)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":68:18)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":68:19)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":68:31)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":66:31)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":66:30)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":70:23)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":70:9)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":70:14)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":70:18)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":70:19)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":71:19)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_01.c":71:9)
#loc113 = loc(fused[#loc1, #loc2])
#loc114 = loc(fused[#loc3, #loc4])
#loc115 = loc(fused[#loc5, #loc6])
#loc116 = loc(fused[#loc7, #loc8])
#loc117 = loc(fused[#loc9, #loc10])
#loc118 = loc(fused[#loc11, #loc12])
#loc119 = loc(fused[#loc13, #loc14])
#loc120 = loc(fused[#loc16, #loc15])
#loc121 = loc(fused[#loc18, #loc17])
#loc122 = loc(fused[#loc21, #loc22])
#loc123 = loc(fused[#loc27, #loc28])
#loc124 = loc(fused[#loc32, #loc29])
#loc125 = loc(fused[#loc33, #loc34])
#loc126 = loc(fused[#loc36, #loc35])
#loc127 = loc(fused[#loc37, #loc38])
#loc128 = loc(fused[#loc40, #loc34])
#loc129 = loc(fused[#loc43, #loc46])
#loc130 = loc(fused[#loc48, #loc47])
#loc131 = loc(fused[#loc50, #loc49])
#loc132 = loc(fused[#loc56, #loc57])
#loc133 = loc(fused[#loc58, #loc59])
#loc134 = loc(fused[#loc60, #loc61])
#loc135 = loc(fused[#loc62, #loc63])
#loc136 = loc(fused[#loc64, #loc65])
#loc137 = loc(fused[#loc66, #loc67])
#loc138 = loc(fused[#loc68, #loc69])
#loc139 = loc(fused[#loc70, #loc71])
#loc140 = loc(fused[#loc73, #loc72])
#loc141 = loc(fused[#loc75, #loc74])
#loc142 = loc(fused[#loc78, #loc79])
#loc143 = loc(fused[#loc84, #loc85])
#loc144 = loc(fused[#loc89, #loc86])
#loc145 = loc(fused[#loc90, #loc91])
#loc146 = loc(fused[#loc93, #loc92])
#loc147 = loc(fused[#loc94, #loc95])
#loc148 = loc(fused[#loc97, #loc91])
#loc149 = loc(fused[#loc100, #loc103])
#loc150 = loc(fused[#loc105, #loc104])
#loc151 = loc(fused[#loc107, #loc106])
