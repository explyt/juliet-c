!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":131:10)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":131:14)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":131:20)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":131:32)
#loc193 = loc(fused[#loc51, #loc52])
#loc194 = loc(fused[#loc53, #loc54])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @CWE590_Free_Memory_Not_on_Heap__free_char_static_08_bad.dataBuffer = #cir.zero : !cir.array<!s8i x 100> {alignment = 16 : i64} loc(#loc1)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc175)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc176)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_static_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc178)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc10)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc179)
    cir.scope {
      %6 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc181)
      %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc14)
      %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc14)
      cir.if %8 {
        cir.scope {
          %9 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_static_08_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc1)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc19)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc19)
          %12 = cir.const #cir.int<65> : !s32i loc(#loc20)
          %13 = cir.const #cir.int<100> : !s32i loc(#loc21)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc22)
          %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc21)
          %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc21)
          cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc184)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc25)
          %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc25)
          %19 = cir.const #cir.int<100> : !s32i loc(#loc26)
          %20 = cir.const #cir.int<1> : !s32i loc(#loc27)
          %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc26)
          %22 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc28)
          %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc28)
          cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc185)
          %24 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc29)
          cir.store %24, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc186)
        } loc(#loc183)
      } loc(#loc182)
    } loc(#loc180)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc32)
    %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc33)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc34)
    cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc33)
    cir.return loc(#loc7)
  } loc(#loc177)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_static_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc188)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc37)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc189)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc39)
    cir.return loc(#loc36)
  } loc(#loc187)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc190)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc191)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc48)
  cir.func @main(%arg0: !s32i loc(fused[#loc51, #loc52]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc53, #loc54])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc193)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc194)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc50)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc55)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc55)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc56)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc57)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc57)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc58)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc45)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %8 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_static_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc195)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_static_08_good() : () -> () loc(#loc60)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc46)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc47)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %13 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_static_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc196)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_static_08_bad() : () -> () loc(#loc64)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc48)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc67)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc197)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc197)
    cir.return %17 : !s32i loc(#loc197)
  } loc(#loc192)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc70)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc71)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc199)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc199)
    cir.return %2 : !s32i loc(#loc199)
  } loc(#loc198)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc73)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc200)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc76)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc201)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc203)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc83)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc204)
    cir.scope {
      %6 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc206)
      %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc87)
      %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc87)
      cir.if %8 {
        %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc73)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc73)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc92)
      } else {
        cir.scope {
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc209)
          %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc97)
          %11 = cir.const #cir.int<100> : !s32i loc(#loc98)
          %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc98)
          %13 = cir.const #cir.int<1> : !u64i loc(#loc210)
          %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc211)
          %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc97)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc212)
          cir.store %16, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc209)
          cir.scope {
            %32 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
            %33 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc104)
            %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc104)
            %35 = cir.cmp(eq, %32, %34) : !cir.ptr<!s8i>, !cir.bool loc(#loc214)
            cir.if %35 {
              %36 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc76)
              %37 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc76)
              cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc106)
              %38 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc107)
              %39 = cir.const #cir.int<1> : !s32i loc(#loc108)
              cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc107)
            } loc(#loc215)
          } loc(#loc213)
          %17 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc109)
          %19 = cir.const #cir.int<65> : !s32i loc(#loc110)
          %20 = cir.const #cir.int<100> : !s32i loc(#loc111)
          %21 = cir.const #cir.int<1> : !s32i loc(#loc112)
          %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc111)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc111)
          cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc216)
          %24 = cir.const #cir.int<0> : !s32i loc(#loc115)
          %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc115)
          %26 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
          %27 = cir.const #cir.int<100> : !s32i loc(#loc117)
          %28 = cir.const #cir.int<1> : !s32i loc(#loc118)
          %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc117)
          %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc119)
          cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc217)
          %31 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
          cir.store %31, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc218)
        } loc(#loc208)
      } loc(#loc207)
    } loc(#loc205)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
    cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc123)
    %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc124)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc125)
    cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc124)
    cir.return loc(#loc80)
  } loc(#loc202)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc127)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc128)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc220)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc220)
    cir.return %2 : !s32i loc(#loc220)
  } loc(#loc219)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc222)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc134)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc223)
    cir.scope {
      %6 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc225)
      %7 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc138)
      %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc138)
      cir.if %8 {
        cir.scope {
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc228)
          %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc145)
          %11 = cir.const #cir.int<100> : !s32i loc(#loc146)
          %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc146)
          %13 = cir.const #cir.int<1> : !u64i loc(#loc229)
          %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc230)
          %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc145)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc231)
          cir.store %16, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc228)
          cir.scope {
            %32 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
            %33 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc152)
            %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc152)
            %35 = cir.cmp(eq, %32, %34) : !cir.ptr<!s8i>, !cir.bool loc(#loc233)
            cir.if %35 {
              %36 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc154)
              %37 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc154)
              cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc155)
              %38 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc156)
              %39 = cir.const #cir.int<1> : !s32i loc(#loc157)
              cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc156)
            } loc(#loc234)
          } loc(#loc232)
          %17 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc158)
          %19 = cir.const #cir.int<65> : !s32i loc(#loc159)
          %20 = cir.const #cir.int<100> : !s32i loc(#loc160)
          %21 = cir.const #cir.int<1> : !s32i loc(#loc161)
          %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc160)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc160)
          cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc235)
          %24 = cir.const #cir.int<0> : !s32i loc(#loc164)
          %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc164)
          %26 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
          %27 = cir.const #cir.int<100> : !s32i loc(#loc166)
          %28 = cir.const #cir.int<1> : !s32i loc(#loc167)
          %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc166)
          %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc168)
          cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc236)
          %31 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
          cir.store %31, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc237)
        } loc(#loc227)
      } loc(#loc226)
    } loc(#loc224)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc171)
    cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc172)
    %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc173)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc174)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc174)
    cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc173)
    cir.return loc(#loc131)
  } loc(#loc221)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":45:25)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc4 = loc("/usr/include/stdlib.h":687:1)
#loc5 = loc("/usr/include/stdlib.h":687:32)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":37:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":54:1)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":39:5)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":39:12)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":40:12)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":40:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":41:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":50:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":41:8)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":41:26)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":42:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":43:9)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":49:9)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":46:20)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":46:32)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":46:37)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":46:41)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":46:13)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":46:42)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":47:33)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":47:24)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":47:28)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":47:13)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":48:20)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":48:13)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":51:15)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":51:5)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":53:5)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":53:10)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":115:1)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":119:1)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":117:5)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":117:14)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":118:5)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":118:14)
#loc41 = loc("/usr/include/stdlib.h":575:1)
#loc42 = loc("/usr/include/stdlib.h":575:41)
#loc43 = loc("/usr/include/time.h":76:1)
#loc44 = loc("/usr/include/time.h":76:38)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":136:15)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":138:15)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":141:15)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":143:15)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":131:1)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":146:1)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":132:1)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":134:27)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":134:22)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":134:5)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":136:5)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":137:5)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":137:62)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":138:5)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":141:5)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":142:5)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":142:61)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":143:5)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":145:12)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":145:5)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":25:1)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":28:1)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":27:12)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":27:5)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":68:19)
#loc74 = loc("/usr/include/stdlib.h":672:1)
#loc75 = loc("/usr/include/stdlib.h":672:45)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":77:27)
#loc77 = loc("/usr/include/stdlib.h":756:1)
#loc78 = loc("/usr/include/stdlib.h":756:70)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":61:1)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":88:1)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":63:5)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":63:12)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":64:12)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":64:5)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":65:5)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":84:5)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":65:8)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":65:27)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":66:5)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":69:5)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":71:5)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":68:9)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":72:9)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":83:9)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":74:13)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":74:64)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":74:41)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":74:48)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":74:52)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":74:63)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":75:13)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":79:13)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":75:17)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":75:31)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":76:13)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":77:17)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":78:17)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":78:22)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":80:20)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":80:32)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":80:37)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":80:41)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":80:13)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":80:42)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":81:33)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":81:13)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":81:24)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":81:28)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":81:29)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":82:20)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":82:13)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":85:15)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":85:5)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":87:5)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":87:10)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":30:1)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":33:1)
#loc128 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":32:12)
#loc129 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":32:5)
#loc130 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":91:1)
#loc131 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":113:1)
#loc132 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":93:5)
#loc133 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":93:12)
#loc134 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":94:12)
#loc135 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":94:5)
#loc136 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":95:5)
#loc137 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":109:5)
#loc138 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":95:8)
#loc139 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":95:26)
#loc140 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":96:5)
#loc141 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":97:9)
#loc142 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":108:9)
#loc143 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":99:13)
#loc144 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":99:64)
#loc145 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":99:41)
#loc146 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":99:48)
#loc147 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":99:52)
#loc148 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":99:63)
#loc149 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":100:13)
#loc150 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":104:13)
#loc151 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":100:17)
#loc152 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":100:31)
#loc153 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":101:13)
#loc154 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":102:27)
#loc155 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":102:17)
#loc156 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":103:17)
#loc157 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":103:22)
#loc158 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":105:20)
#loc159 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":105:32)
#loc160 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":105:37)
#loc161 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":105:41)
#loc162 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":105:13)
#loc163 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":105:42)
#loc164 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":106:33)
#loc165 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":106:13)
#loc166 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":106:24)
#loc167 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":106:28)
#loc168 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":106:29)
#loc169 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":107:20)
#loc170 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":107:13)
#loc171 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":110:15)
#loc172 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":110:5)
#loc173 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":112:5)
#loc174 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_08.c":112:10)
#loc175 = loc(fused[#loc2, #loc3])
#loc176 = loc(fused[#loc4, #loc5])
#loc177 = loc(fused[#loc6, #loc7])
#loc178 = loc(fused[#loc8, #loc9])
#loc179 = loc(fused[#loc11, #loc10])
#loc180 = loc(fused[#loc12, #loc13])
#loc181 = loc(fused[#loc14, #loc15])
#loc182 = loc(fused[#loc16, #loc13])
#loc183 = loc(fused[#loc17, #loc18])
#loc184 = loc(fused[#loc23, #loc24])
#loc185 = loc(fused[#loc28, #loc25])
#loc186 = loc(fused[#loc30, #loc29])
#loc187 = loc(fused[#loc35, #loc36])
#loc188 = loc(fused[#loc37, #loc38])
#loc189 = loc(fused[#loc39, #loc40])
#loc190 = loc(fused[#loc41, #loc42])
#loc191 = loc(fused[#loc43, #loc44])
#loc192 = loc(fused[#loc49, #loc50])
#loc195 = loc(fused[#loc60, #loc61])
#loc196 = loc(fused[#loc64, #loc65])
#loc197 = loc(fused[#loc68, #loc67])
#loc198 = loc(fused[#loc69, #loc70])
#loc199 = loc(fused[#loc72, #loc71])
#loc200 = loc(fused[#loc74, #loc75])
#loc201 = loc(fused[#loc77, #loc78])
#loc202 = loc(fused[#loc79, #loc80])
#loc203 = loc(fused[#loc81, #loc82])
#loc204 = loc(fused[#loc84, #loc83])
#loc205 = loc(fused[#loc85, #loc86])
#loc206 = loc(fused[#loc87, #loc88])
#loc207 = loc(fused[#loc89, #loc90, #loc91, #loc86])
#loc208 = loc(fused[#loc93, #loc94])
#loc209 = loc(fused[#loc95, #loc96])
#loc210 = loc(fused[#loc99, #loc100])
#loc211 = loc(fused[#loc98, #loc100])
#loc212 = loc(fused[#loc97, #loc96])
#loc213 = loc(fused[#loc101, #loc102])
#loc214 = loc(fused[#loc103, #loc104])
#loc215 = loc(fused[#loc105, #loc102])
#loc216 = loc(fused[#loc113, #loc114])
#loc217 = loc(fused[#loc116, #loc115])
#loc218 = loc(fused[#loc121, #loc120])
#loc219 = loc(fused[#loc126, #loc127])
#loc220 = loc(fused[#loc129, #loc128])
#loc221 = loc(fused[#loc130, #loc131])
#loc222 = loc(fused[#loc132, #loc133])
#loc223 = loc(fused[#loc135, #loc134])
#loc224 = loc(fused[#loc136, #loc137])
#loc225 = loc(fused[#loc138, #loc139])
#loc226 = loc(fused[#loc140, #loc137])
#loc227 = loc(fused[#loc141, #loc142])
#loc228 = loc(fused[#loc143, #loc144])
#loc229 = loc(fused[#loc147, #loc148])
#loc230 = loc(fused[#loc146, #loc148])
#loc231 = loc(fused[#loc145, #loc144])
#loc232 = loc(fused[#loc149, #loc150])
#loc233 = loc(fused[#loc151, #loc152])
#loc234 = loc(fused[#loc153, #loc150])
#loc235 = loc(fused[#loc162, #loc163])
#loc236 = loc(fused[#loc165, #loc164])
#loc237 = loc(fused[#loc170, #loc169])
