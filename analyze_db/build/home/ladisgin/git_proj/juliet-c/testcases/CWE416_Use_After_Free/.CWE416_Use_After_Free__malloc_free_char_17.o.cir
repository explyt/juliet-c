!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_char_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc184)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc185)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc186)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc187)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_char_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc189)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc190)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc191)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc16)
    cir.store %3, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc192)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc20)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc194)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc22)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc23)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc195)
        cir.condition(%7) loc(#loc24)
      } body {
        cir.scope {
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc26)
          %6 = cir.const #cir.int<100> : !s32i loc(#loc27)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc27)
          %8 = cir.const #cir.int<1> : !u64i loc(#loc197)
          %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc198)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc26)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc199)
          cir.store %11, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc200)
          cir.scope {
            %29 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
            %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc35)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc35)
            %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!s8i>, !cir.bool loc(#loc202)
            cir.if %32 {
              %33 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc37)
              %34 = cir.const #cir.int<1> : !s32i loc(#loc38)
              %35 = cir.unary(minus, %34) : !s32i, !s32i loc(#loc39)
              cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc37)
            } loc(#loc203)
          } loc(#loc201)
          %12 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc40)
          %14 = cir.const #cir.int<65> : !s32i loc(#loc41)
          %15 = cir.const #cir.int<100> : !s32i loc(#loc42)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc43)
          %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc42)
          %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc42)
          cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc204)
          %19 = cir.const #cir.int<0> : !s32i loc(#loc46)
          %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc46)
          %21 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
          %22 = cir.const #cir.int<100> : !s32i loc(#loc48)
          %23 = cir.const #cir.int<1> : !s32i loc(#loc49)
          %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc48)
          %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc50)
          cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc205)
          %26 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc51)
          %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc52)
          cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc51)
        } loc(#loc196)
        cir.yield loc(#loc19)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc53)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc54)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc206)
        cir.yield loc(#loc193)
      } loc(#loc193)
    } loc(#loc193)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc57)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc208)
      cir.for : cond {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc59)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc60)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc209)
        cir.condition(%7) loc(#loc61)
      } body {
        cir.scope {
          %5 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc64)
        } loc(#loc210)
        cir.yield loc(#loc56)
      } step {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc65)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc66)
        cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc211)
        cir.yield loc(#loc207)
      } loc(#loc207)
    } loc(#loc207)
    cir.return loc(#loc10)
  } loc(#loc188)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_char_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc213)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc69)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc214)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc71)
    cir.return loc(#loc68)
  } loc(#loc212)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc216)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc217)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc218)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc80)
    cir.store %3, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc219)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc84)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc221)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc86)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc87)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc222)
        cir.condition(%7) loc(#loc88)
      } body {
        cir.scope {
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc90)
          %6 = cir.const #cir.int<100> : !s32i loc(#loc91)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc91)
          %8 = cir.const #cir.int<1> : !u64i loc(#loc224)
          %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc225)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc90)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc226)
          cir.store %11, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc227)
          cir.scope {
            %29 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
            %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc99)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc99)
            %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!s8i>, !cir.bool loc(#loc229)
            cir.if %32 {
              %33 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc101)
              %34 = cir.const #cir.int<1> : !s32i loc(#loc102)
              %35 = cir.unary(minus, %34) : !s32i, !s32i loc(#loc103)
              cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc101)
            } loc(#loc230)
          } loc(#loc228)
          %12 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc104)
          %14 = cir.const #cir.int<65> : !s32i loc(#loc105)
          %15 = cir.const #cir.int<100> : !s32i loc(#loc106)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc107)
          %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc106)
          %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc106)
          cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc231)
          %19 = cir.const #cir.int<0> : !s32i loc(#loc110)
          %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc110)
          %21 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
          %22 = cir.const #cir.int<100> : !s32i loc(#loc112)
          %23 = cir.const #cir.int<1> : !s32i loc(#loc113)
          %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc112)
          %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc114)
          cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc232)
          %26 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc115)
          %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc116)
          cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc115)
        } loc(#loc223)
        cir.yield loc(#loc83)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc117)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc118)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc233)
        cir.yield loc(#loc220)
      } loc(#loc220)
    } loc(#loc220)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc121)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc235)
      cir.for : cond {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc123)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc124)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc236)
        cir.condition(%7) loc(#loc125)
      } body {
        cir.yield loc(#loc120)
      } step {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc126)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc127)
        cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc237)
        cir.yield loc(#loc234)
      } loc(#loc234)
    } loc(#loc234)
    cir.return loc(#loc74)
  } loc(#loc215)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc239)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc240)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc241)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc135)
    cir.store %3, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc242)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc139)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc244)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc141)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc142)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc245)
        cir.condition(%7) loc(#loc143)
      } body {
        cir.scope {
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc145)
          %6 = cir.const #cir.int<100> : !s32i loc(#loc146)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc146)
          %8 = cir.const #cir.int<1> : !u64i loc(#loc247)
          %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc248)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc145)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc249)
          cir.store %11, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc250)
          cir.scope {
            %26 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
            %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc154)
            %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc154)
            %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc252)
            cir.if %29 {
              %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc156)
              %31 = cir.const #cir.int<1> : !s32i loc(#loc157)
              %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc158)
              cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc156)
            } loc(#loc253)
          } loc(#loc251)
          %12 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc159)
          %14 = cir.const #cir.int<65> : !s32i loc(#loc160)
          %15 = cir.const #cir.int<100> : !s32i loc(#loc161)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc162)
          %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc161)
          %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc161)
          cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc254)
          %19 = cir.const #cir.int<0> : !s32i loc(#loc165)
          %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc165)
          %21 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
          %22 = cir.const #cir.int<100> : !s32i loc(#loc167)
          %23 = cir.const #cir.int<1> : !s32i loc(#loc168)
          %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc167)
          %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc169)
          cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc255)
        } loc(#loc246)
        cir.yield loc(#loc138)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc170)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc171)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc256)
        cir.yield loc(#loc243)
      } loc(#loc243)
    } loc(#loc243)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc174)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc258)
      cir.for : cond {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc176)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc177)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc259)
        cir.condition(%7) loc(#loc178)
      } body {
        cir.scope {
          %5 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc180)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc181)
        } loc(#loc260)
        cir.yield loc(#loc173)
      } step {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc182)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc183)
        cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc261)
        cir.yield loc(#loc257)
      } loc(#loc257)
    } loc(#loc257)
    cir.return loc(#loc129)
  } loc(#loc238)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_char_17.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":24:1)
#loc10 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":45:1)
#loc11 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":26:5)
#loc12 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":26:9)
#loc13 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":26:11)
#loc14 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":27:5)
#loc15 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":27:12)
#loc16 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":29:12)
#loc17 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":29:5)
#loc18 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":30:5)
#loc19 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":38:5)
#loc20 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":30:13)
#loc21 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":30:9)
#loc22 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":30:16)
#loc23 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":30:20)
#loc24 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":30:18)
#loc25 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":31:5)
#loc26 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":32:24)
#loc27 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":32:31)
#loc28 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":32:35)
#loc29 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":32:46)
#loc30 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":32:47)
#loc31 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":32:9)
#loc32 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":33:9)
#loc33 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":33:37)
#loc34 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":33:13)
#loc35 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":33:21)
#loc36 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":33:27)
#loc37 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":33:28)
#loc38 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":33:34)
#loc39 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":33:33)
#loc40 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":34:16)
#loc41 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":34:22)
#loc42 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":34:27)
#loc43 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":34:31)
#loc44 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":34:9)
#loc45 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":34:32)
#loc46 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":35:23)
#loc47 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":35:9)
#loc48 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":35:14)
#loc49 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":35:18)
#loc50 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":35:19)
#loc51 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":37:9)
#loc52 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":37:14)
#loc53 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":30:24)
#loc54 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":30:23)
#loc55 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":39:5)
#loc56 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":44:5)
#loc57 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":39:13)
#loc58 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":39:9)
#loc59 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":39:16)
#loc60 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":39:20)
#loc61 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":39:18)
#loc62 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":40:5)
#loc63 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":42:19)
#loc64 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":42:9)
#loc65 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":39:24)
#loc66 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":39:23)
#loc67 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":99:1)
#loc68 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":103:1)
#loc69 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":101:5)
#loc70 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":101:13)
#loc71 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":102:5)
#loc72 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":102:13)
#loc73 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":52:1)
#loc74 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":74:1)
#loc75 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":54:5)
#loc76 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":54:9)
#loc77 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":54:11)
#loc78 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":55:5)
#loc79 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":55:12)
#loc80 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":57:12)
#loc81 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":57:5)
#loc82 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":58:5)
#loc83 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":66:5)
#loc84 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":58:13)
#loc85 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":58:9)
#loc86 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":58:16)
#loc87 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":58:20)
#loc88 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":58:18)
#loc89 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":59:5)
#loc90 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":60:24)
#loc91 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":60:31)
#loc92 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":60:35)
#loc93 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":60:46)
#loc94 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":60:47)
#loc95 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":60:9)
#loc96 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":61:9)
#loc97 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":61:37)
#loc98 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":61:13)
#loc99 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":61:21)
#loc100 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":61:27)
#loc101 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":61:28)
#loc102 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":61:34)
#loc103 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":61:33)
#loc104 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":62:16)
#loc105 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":62:22)
#loc106 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":62:27)
#loc107 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":62:31)
#loc108 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":62:9)
#loc109 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":62:32)
#loc110 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":63:23)
#loc111 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":63:9)
#loc112 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":63:14)
#loc113 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":63:18)
#loc114 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":63:19)
#loc115 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":65:9)
#loc116 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":65:14)
#loc117 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":58:24)
#loc118 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":58:23)
#loc119 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":67:5)
#loc120 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":73:5)
#loc121 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":67:13)
#loc122 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":67:9)
#loc123 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":67:16)
#loc124 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":67:20)
#loc125 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":67:18)
#loc126 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":67:24)
#loc127 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":67:23)
#loc128 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":77:1)
#loc129 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":97:1)
#loc130 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":79:5)
#loc131 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":79:9)
#loc132 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":79:11)
#loc133 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":80:5)
#loc134 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":80:12)
#loc135 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":82:12)
#loc136 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":82:5)
#loc137 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":83:5)
#loc138 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":90:5)
#loc139 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":83:13)
#loc140 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":83:9)
#loc141 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":83:16)
#loc142 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":83:20)
#loc143 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":83:18)
#loc144 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":84:5)
#loc145 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":85:24)
#loc146 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":85:31)
#loc147 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":85:35)
#loc148 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":85:46)
#loc149 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":85:47)
#loc150 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":85:9)
#loc151 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":86:9)
#loc152 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":86:37)
#loc153 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":86:13)
#loc154 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":86:21)
#loc155 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":86:27)
#loc156 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":86:28)
#loc157 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":86:34)
#loc158 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":86:33)
#loc159 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":87:16)
#loc160 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":87:22)
#loc161 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":87:27)
#loc162 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":87:31)
#loc163 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":87:9)
#loc164 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":87:32)
#loc165 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":88:23)
#loc166 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":88:9)
#loc167 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":88:14)
#loc168 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":88:18)
#loc169 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":88:19)
#loc170 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":83:24)
#loc171 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":83:23)
#loc172 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":91:5)
#loc173 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":96:5)
#loc174 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":91:13)
#loc175 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":91:9)
#loc176 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":91:16)
#loc177 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":91:20)
#loc178 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":91:18)
#loc179 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":92:5)
#loc180 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":94:19)
#loc181 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":94:9)
#loc182 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":91:24)
#loc183 = loc("CWE416_Use_After_Free__malloc_free_char_17.c":91:23)
#loc184 = loc(fused[#loc1, #loc2])
#loc185 = loc(fused[#loc3, #loc4])
#loc186 = loc(fused[#loc5, #loc6])
#loc187 = loc(fused[#loc7, #loc8])
#loc188 = loc(fused[#loc9, #loc10])
#loc189 = loc(fused[#loc11, #loc12])
#loc190 = loc(fused[#loc11, #loc13])
#loc191 = loc(fused[#loc14, #loc15])
#loc192 = loc(fused[#loc17, #loc16])
#loc193 = loc(fused[#loc18, #loc19])
#loc194 = loc(fused[#loc21, #loc20])
#loc195 = loc(fused[#loc22, #loc23])
#loc196 = loc(fused[#loc25, #loc19])
#loc197 = loc(fused[#loc28, #loc29])
#loc198 = loc(fused[#loc27, #loc29])
#loc199 = loc(fused[#loc26, #loc30])
#loc200 = loc(fused[#loc31, #loc30])
#loc201 = loc(fused[#loc32, #loc33])
#loc202 = loc(fused[#loc34, #loc35])
#loc203 = loc(fused[#loc36, #loc33])
#loc204 = loc(fused[#loc44, #loc45])
#loc205 = loc(fused[#loc47, #loc46])
#loc206 = loc(fused[#loc54, #loc53])
#loc207 = loc(fused[#loc55, #loc56])
#loc208 = loc(fused[#loc58, #loc57])
#loc209 = loc(fused[#loc59, #loc60])
#loc210 = loc(fused[#loc62, #loc56])
#loc211 = loc(fused[#loc66, #loc65])
#loc212 = loc(fused[#loc67, #loc68])
#loc213 = loc(fused[#loc69, #loc70])
#loc214 = loc(fused[#loc71, #loc72])
#loc215 = loc(fused[#loc73, #loc74])
#loc216 = loc(fused[#loc75, #loc76])
#loc217 = loc(fused[#loc75, #loc77])
#loc218 = loc(fused[#loc78, #loc79])
#loc219 = loc(fused[#loc81, #loc80])
#loc220 = loc(fused[#loc82, #loc83])
#loc221 = loc(fused[#loc85, #loc84])
#loc222 = loc(fused[#loc86, #loc87])
#loc223 = loc(fused[#loc89, #loc83])
#loc224 = loc(fused[#loc92, #loc93])
#loc225 = loc(fused[#loc91, #loc93])
#loc226 = loc(fused[#loc90, #loc94])
#loc227 = loc(fused[#loc95, #loc94])
#loc228 = loc(fused[#loc96, #loc97])
#loc229 = loc(fused[#loc98, #loc99])
#loc230 = loc(fused[#loc100, #loc97])
#loc231 = loc(fused[#loc108, #loc109])
#loc232 = loc(fused[#loc111, #loc110])
#loc233 = loc(fused[#loc118, #loc117])
#loc234 = loc(fused[#loc119, #loc120])
#loc235 = loc(fused[#loc122, #loc121])
#loc236 = loc(fused[#loc123, #loc124])
#loc237 = loc(fused[#loc127, #loc126])
#loc238 = loc(fused[#loc128, #loc129])
#loc239 = loc(fused[#loc130, #loc131])
#loc240 = loc(fused[#loc130, #loc132])
#loc241 = loc(fused[#loc133, #loc134])
#loc242 = loc(fused[#loc136, #loc135])
#loc243 = loc(fused[#loc137, #loc138])
#loc244 = loc(fused[#loc140, #loc139])
#loc245 = loc(fused[#loc141, #loc142])
#loc246 = loc(fused[#loc144, #loc138])
#loc247 = loc(fused[#loc147, #loc148])
#loc248 = loc(fused[#loc146, #loc148])
#loc249 = loc(fused[#loc145, #loc149])
#loc250 = loc(fused[#loc150, #loc149])
#loc251 = loc(fused[#loc151, #loc152])
#loc252 = loc(fused[#loc153, #loc154])
#loc253 = loc(fused[#loc155, #loc152])
#loc254 = loc(fused[#loc163, #loc164])
#loc255 = loc(fused[#loc166, #loc165])
#loc256 = loc(fused[#loc171, #loc170])
#loc257 = loc(fused[#loc172, #loc173])
#loc258 = loc(fused[#loc175, #loc174])
#loc259 = loc(fused[#loc176, #loc177])
#loc260 = loc(fused[#loc179, #loc173])
#loc261 = loc(fused[#loc183, #loc182])
