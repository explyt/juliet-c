!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":31:25)
#loc6 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":31:32)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":69:29)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":69:36)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":103:29)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":103:36)
#true = #cir.bool<true> : !cir.bool
#loc152 = loc(fused[#loc5, #loc6])
#loc171 = loc(fused[#loc56, #loc57])
#loc187 = loc(fused[#loc100, #loc101])
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc150)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42L9badSourceEm(%arg0: !u64i loc(fused[#loc5, #loc6])) -> !u64i extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc152)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["__retval"] {alignment = 8 : i64} loc(#loc4)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc7)
    %2 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc8)
    cir.store %3, %0 : !u64i, !cir.ptr<!u64i> loc(#loc153)
    %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc11)
    cir.store %4, %1 : !u64i, !cir.ptr<!u64i> loc(#loc154)
    %5 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc154)
    cir.return %5 : !u64i loc(#loc154)
  } loc(#loc151)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc155)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc156)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc17)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc157)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc20)
  cir.func @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_423badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc159)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc25)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc25)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc160)
    %3 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc27)
    %4 = cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42L9badSourceEm(%3) : (!u64i) -> !u64i loc(#loc28)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc161)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc163)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc37)
        %7 = cir.const #cir.int<5> : !u64i loc(#loc165)
        %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc166)
        cir.if %8 {
          %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc43)
          %10 = cir.call @_Znam(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc44)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc168)
          cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc169)
          %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc48)
          %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
          %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc17)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc17)
          %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc48)
          %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
          cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc51)
          %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
          cir.delete.array %18 : <!s8i> loc(#loc52)
        } else {
          %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc20)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc20)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc53)
        } loc(#loc167)
      } loc(#loc164)
    } loc(#loc162)
    cir.return loc(#loc22)
  } loc(#loc158)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42L13goodG2BSourceEm(%arg0: !u64i loc(fused[#loc56, #loc57])) -> !u64i extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc171)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["__retval"] {alignment = 8 : i64} loc(#loc55)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc58)
    %2 = cir.const #cir.int<20> : !s32i loc(#loc59)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc59)
    cir.store %3, %0 : !u64i, !cir.ptr<!u64i> loc(#loc172)
    %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc61)
    cir.store %4, %1 : !u64i, !cir.ptr<!u64i> loc(#loc173)
    %5 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc173)
    cir.return %5 : !u64i loc(#loc173)
  } loc(#loc170)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc175)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc67)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc67)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc176)
    %3 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc69)
    %4 = cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42L13goodG2BSourceEm(%3) : (!u64i) -> !u64i loc(#loc70)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc177)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc179)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc79)
        %7 = cir.const #cir.int<5> : !u64i loc(#loc181)
        %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc182)
        cir.if %8 {
          %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc85)
          %10 = cir.call @_Znam(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc86)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc184)
          cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc185)
          %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc90)
          %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
          %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc92)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc92)
          %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc90)
          %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
          cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc94)
          %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
          cir.delete.array %18 : <!s8i> loc(#loc95)
        } else {
          %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc96)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc96)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc97)
        } loc(#loc183)
      } loc(#loc180)
    } loc(#loc178)
    cir.return loc(#loc64)
  } loc(#loc174)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42L13goodB2GSourceEm(%arg0: !u64i loc(fused[#loc100, #loc101])) -> !u64i extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc187)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["__retval"] {alignment = 8 : i64} loc(#loc99)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc102)
    %2 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc103)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc103)
    cir.store %3, %0 : !u64i, !cir.ptr<!u64i> loc(#loc188)
    %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc106)
    cir.store %4, %1 : !u64i, !cir.ptr<!u64i> loc(#loc189)
    %5 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc189)
    cir.return %5 : !u64i loc(#loc189)
  } loc(#loc186)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc108)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc191)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc113)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc113)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc192)
    %3 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc115)
    %4 = cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42L13goodB2GSourceEm(%3) : (!u64i) -> !u64i loc(#loc116)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc193)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc195)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc125)
        %7 = cir.const #cir.int<5> : !u64i loc(#loc197)
        %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc198)
        %9 = cir.ternary(%8, true {
          %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc129)
          %11 = cir.const #cir.int<100> : !s32i loc(#loc130)
          %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc130)
          %13 = cir.cmp(lt, %10, %12) : !u64i, !cir.bool loc(#loc199)
          %14 = cir.ternary(%13, true {
            %15 = cir.const #true loc(#loc128)
            cir.yield %15 : !cir.bool loc(#loc128)
          }, false {
            %15 = cir.const #false loc(#loc128)
            cir.yield %15 : !cir.bool loc(#loc128)
          }) : (!cir.bool) -> !cir.bool loc(#loc128)
          cir.yield %14 : !cir.bool loc(#loc128)
        }, false {
          %10 = cir.const #false loc(#loc128)
          cir.yield %10 : !cir.bool loc(#loc128)
        }) : (!cir.bool) -> !cir.bool loc(#loc128)
        cir.if %9 {
          %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc134)
          %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc135)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc201)
          cir.store %12, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc202)
          %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc139)
          %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
          %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc141)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc141)
          %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc139)
          %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc143)
          %19 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
          cir.delete.array %19 : <!s8i> loc(#loc144)
        } else {
          %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc108)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc108)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc145)
        } loc(#loc200)
      } loc(#loc196)
    } loc(#loc194)
    cir.return loc(#loc110)
  } loc(#loc190)
  cir.func @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_424goodEv() extra(#fn_attr1) {
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42L7goodG2BEv() : () -> () loc(#loc148)
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42L7goodB2GEv() : () -> () loc(#loc149)
    cir.return loc(#loc147)
  } loc(#loc203)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":31:1)
#loc4 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":36:1)
#loc7 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":32:1)
#loc8 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":34:12)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":34:5)
#loc10 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":34:17)
#loc11 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":35:12)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":35:5)
#loc13 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc14 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc15 = loc("/usr/include/string.h":141:1)
#loc16 = loc("/usr/include/string.h":142:14)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":53:30)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":59:23)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":38:1)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":62:1)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":40:5)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":40:12)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":42:12)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":42:5)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":43:22)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":43:12)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":43:5)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":43:26)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":44:5)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":61:5)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":45:9)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":45:16)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":49:9)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":60:9)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":49:13)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":49:20)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":49:39)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":50:9)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":56:9)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":58:9)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":51:33)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":38:6)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":51:24)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":51:37)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":51:13)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":53:13)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":53:20)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":54:23)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":54:13)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":55:23)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":59:13)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":69:1)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":74:1)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":70:1)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":72:12)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":72:5)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":73:12)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":73:5)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":76:1)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":100:1)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":78:5)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":78:12)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":80:12)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":80:5)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":81:26)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":81:12)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":81:5)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":81:30)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":82:5)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":99:5)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":83:9)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":83:16)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":87:9)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":98:9)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":87:13)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":87:20)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":87:39)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":88:9)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":94:9)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":96:9)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":89:33)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":76:13)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":89:24)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":89:37)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":89:13)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":91:13)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":91:20)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":91:30)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":92:23)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":92:13)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":93:23)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":97:23)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":97:13)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":103:1)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":108:1)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":104:1)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":106:12)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":106:5)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":106:17)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":107:12)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":107:5)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":131:23)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":110:1)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":134:1)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":112:5)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":112:12)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":114:12)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":114:5)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":115:26)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":115:12)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":115:5)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":115:30)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":116:5)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":133:5)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":117:9)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":117:16)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":121:9)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":132:9)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":121:13)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":121:20)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":121:39)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":121:41)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":121:44)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":121:51)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":122:9)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":128:9)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":130:9)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":123:33)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":110:13)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":123:24)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":123:37)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":123:13)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":125:13)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":125:20)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":125:30)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":126:23)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":126:13)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":127:23)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":131:13)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":136:1)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":140:1)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":138:5)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_42.cpp":139:5)
#loc150 = loc(fused[#loc1, #loc2])
#loc151 = loc(fused[#loc3, #loc4])
#loc153 = loc(fused[#loc9, #loc10])
#loc154 = loc(fused[#loc12, #loc11])
#loc155 = loc(fused[#loc13, #loc14])
#loc156 = loc(fused[#loc15, #loc16])
#loc157 = loc(fused[#loc18, #loc19])
#loc158 = loc(fused[#loc21, #loc22])
#loc159 = loc(fused[#loc23, #loc24])
#loc160 = loc(fused[#loc26, #loc25])
#loc161 = loc(fused[#loc29, #loc30])
#loc162 = loc(fused[#loc31, #loc32])
#loc163 = loc(fused[#loc33, #loc34])
#loc164 = loc(fused[#loc35, #loc36])
#loc165 = loc(fused[#loc38, #loc39])
#loc166 = loc(fused[#loc37, #loc39])
#loc167 = loc(fused[#loc40, #loc41, #loc42, #loc36])
#loc168 = loc(fused[#loc45, #loc46])
#loc169 = loc(fused[#loc47, #loc46])
#loc170 = loc(fused[#loc54, #loc55])
#loc172 = loc(fused[#loc60, #loc59])
#loc173 = loc(fused[#loc62, #loc61])
#loc174 = loc(fused[#loc63, #loc64])
#loc175 = loc(fused[#loc65, #loc66])
#loc176 = loc(fused[#loc68, #loc67])
#loc177 = loc(fused[#loc71, #loc72])
#loc178 = loc(fused[#loc73, #loc74])
#loc179 = loc(fused[#loc75, #loc76])
#loc180 = loc(fused[#loc77, #loc78])
#loc181 = loc(fused[#loc80, #loc81])
#loc182 = loc(fused[#loc79, #loc81])
#loc183 = loc(fused[#loc82, #loc83, #loc84, #loc78])
#loc184 = loc(fused[#loc87, #loc88])
#loc185 = loc(fused[#loc89, #loc88])
#loc186 = loc(fused[#loc98, #loc99])
#loc188 = loc(fused[#loc104, #loc105])
#loc189 = loc(fused[#loc107, #loc106])
#loc190 = loc(fused[#loc109, #loc110])
#loc191 = loc(fused[#loc111, #loc112])
#loc192 = loc(fused[#loc114, #loc113])
#loc193 = loc(fused[#loc117, #loc118])
#loc194 = loc(fused[#loc119, #loc120])
#loc195 = loc(fused[#loc121, #loc122])
#loc196 = loc(fused[#loc123, #loc124])
#loc197 = loc(fused[#loc126, #loc127])
#loc198 = loc(fused[#loc125, #loc127])
#loc199 = loc(fused[#loc129, #loc130])
#loc200 = loc(fused[#loc131, #loc132, #loc133, #loc124])
#loc201 = loc(fused[#loc136, #loc137])
#loc202 = loc(fused[#loc138, #loc137])
#loc203 = loc(fused[#loc146, #loc147])
