!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":81:41)
#true = #cir.bool<true> : !cir.bool
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc159)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc160)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc161)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc162)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc163)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc164)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc14)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc166)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc167)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc21)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc21)
    cir.store %3, %0 : !u64i, !cir.ptr<!u64i> loc(#loc168)
    cir.br ^bb1 loc(#loc169)
  ^bb1:  // pred: ^bb0
    %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc25)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc25)
    cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc170)
    cir.br ^bb2 loc(#loc171)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc172)
  ^bb3:  // pred: ^bb2
    %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc32)
    %7 = cir.const #cir.int<5> : !u64i loc(#loc173)
    %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc174)
    cir.brcond %8 ^bb4, ^bb9 loc(#loc175)
  ^bb4:  // pred: ^bb3
    %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc38)
    %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc39)
    %11 = cir.const #cir.int<1> : !u64i loc(#loc176)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc177)
    %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc38)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc178)
    cir.store %14, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc179)
    cir.br ^bb5 loc(#loc180)
  ^bb5:  // pred: ^bb4
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc47)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc47)
    %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc181)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc182)
  ^bb6:  // pred: ^bb5
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc49)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc51)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc49)
    cir.br ^bb7 loc(#loc45)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc45)
  ^bb8:  // pred: ^bb7
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
    %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc9)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc9)
    %25 = cir.call @strcpy(%22, %24) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc53)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc56)
    cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc57)
    cir.br ^bb10 loc(#loc36)
  ^bb9:  // pred: ^bb3
    %29 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc14)
    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc14)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    cir.br ^bb10 loc(#loc31)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc31)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc16)
  } loc(#loc165)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc184)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc61)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc185)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc63)
    cir.return loc(#loc60)
  } loc(#loc183)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc65)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc187)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc188)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc72)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc72)
    cir.store %3, %0 : !u64i, !cir.ptr<!u64i> loc(#loc189)
    cir.br ^bb1 loc(#loc190)
  ^bb1:  // pred: ^bb0
    %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc76)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc76)
    cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc191)
    cir.br ^bb2 loc(#loc192)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc193)
  ^bb3:  // pred: ^bb2
    %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc83)
    %7 = cir.const #cir.int<5> : !u64i loc(#loc194)
    %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc195)
    cir.brcond %8 ^bb4, ^bb9 loc(#loc86)
  ^bb4:  // pred: ^bb3
    %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc87)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc88)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc88)
    %12 = cir.cmp(lt, %9, %11) : !u64i, !cir.bool loc(#loc196)
    cir.brcond %12 ^bb5, ^bb6 loc(#loc86)
  ^bb5:  // pred: ^bb4
    %13 = cir.const #true loc(#loc86)
    cir.br ^bb7(%13 : !cir.bool) loc(#loc86)
  ^bb6:  // pred: ^bb4
    %14 = cir.const #false loc(#loc86)
    cir.br ^bb7(%14 : !cir.bool) loc(#loc86)
  ^bb7(%15: !cir.bool loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":81:41)):  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc86)
  ^bb8:  // pred: ^bb7
    cir.br ^bb10(%15 : !cir.bool) loc(#loc86)
  ^bb9:  // pred: ^bb3
    %16 = cir.const #false loc(#loc86)
    cir.br ^bb10(%16 : !cir.bool) loc(#loc86)
  ^bb10(%17: !cir.bool loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":81:41)):  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc86)
  ^bb11:  // pred: ^bb10
    cir.brcond %17 ^bb12, ^bb17 loc(#loc197)
  ^bb12:  // pred: ^bb11
    %18 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc92)
    %19 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc93)
    %20 = cir.const #cir.int<1> : !u64i loc(#loc198)
    %21 = cir.binop(mul, %19, %20) : !u64i loc(#loc199)
    %22 = cir.call @malloc(%21) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc92)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc200)
    cir.store %23, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc201)
    cir.br ^bb13 loc(#loc202)
  ^bb13:  // pred: ^bb12
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
    %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc101)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc101)
    %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc203)
    cir.brcond %27 ^bb14, ^bb15 loc(#loc204)
  ^bb14:  // pred: ^bb13
    %28 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc103)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %30 = cir.unary(minus, %29) nsw : !s32i, !s32i loc(#loc105)
    cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc103)
    cir.br ^bb15 loc(#loc99)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc99)
  ^bb16:  // pred: ^bb15
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
    %32 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc107)
    %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc107)
    %34 = cir.call @strcpy(%31, %33) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc108)
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc110)
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc111)
    cir.call @free(%37) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc112)
    cir.br ^bb18 loc(#loc90)
  ^bb17:  // pred: ^bb11
    %38 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc65)
    %39 = cir.cast(array_to_ptrdecay, %38 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%39) : (!cir.ptr<!s8i>) -> () loc(#loc113)
    cir.br ^bb18 loc(#loc82)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc82)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc67)
  } loc(#loc186)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc206)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc207)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc120)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc120)
    cir.store %3, %0 : !u64i, !cir.ptr<!u64i> loc(#loc208)
    cir.br ^bb1 loc(#loc209)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<20> : !s32i loc(#loc124)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc124)
    cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc210)
    cir.br ^bb2 loc(#loc211)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc212)
  ^bb3:  // pred: ^bb2
    %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc130)
    %7 = cir.const #cir.int<5> : !u64i loc(#loc213)
    %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc214)
    cir.brcond %8 ^bb4, ^bb9 loc(#loc215)
  ^bb4:  // pred: ^bb3
    %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc136)
    %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc137)
    %11 = cir.const #cir.int<1> : !u64i loc(#loc216)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc217)
    %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc136)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc218)
    cir.store %14, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc219)
    cir.br ^bb5 loc(#loc220)
  ^bb5:  // pred: ^bb4
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc145)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc145)
    %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc221)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc222)
  ^bb6:  // pred: ^bb5
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc147)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc148)
    %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc149)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc147)
    cir.br ^bb7 loc(#loc143)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc143)
  ^bb8:  // pred: ^bb7
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
    %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc151)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc151)
    %25 = cir.call @strcpy(%22, %24) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc152)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc154)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc155)
    cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc156)
    cir.br ^bb10 loc(#loc134)
  ^bb9:  // pred: ^bb3
    %29 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc157)
    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc157)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc158)
    cir.br ^bb10 loc(#loc129)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc129)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc115)
  } loc(#loc205)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/string.h":141:1)
#loc8 = loc("/usr/include/string.h":142:14)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":49:30)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("/usr/include/stdlib.h":687:1)
#loc13 = loc("/usr/include/stdlib.h":687:32)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":55:23)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":28:1)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":58:1)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":30:5)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":30:12)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":40:9)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":40:16)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":32:12)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":32:5)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":33:5)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":33:10)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":36:12)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":36:5)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":36:17)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":37:5)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":37:10)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":44:9)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":56:9)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":44:13)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":44:20)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":44:39)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":45:9)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":52:9)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":54:9)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":46:32)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":46:39)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":46:44)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":46:55)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":46:56)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":46:13)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":47:13)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":47:45)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":47:17)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":47:29)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":47:35)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":47:36)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":47:42)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":47:41)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":49:20)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":49:13)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":50:23)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":50:13)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":51:18)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":51:13)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":55:13)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":130:1)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":134:1)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":132:5)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":132:13)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":133:5)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":133:13)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":92:23)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":65:1)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":95:1)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":67:5)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":67:12)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":77:9)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":77:16)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":69:12)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":69:5)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":70:5)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":70:10)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":73:12)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":73:5)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":73:17)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":74:5)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":74:10)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":81:9)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":93:9)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":81:13)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":81:20)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":81:39)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":81:44)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":81:51)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":82:9)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":89:9)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":91:9)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":83:32)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":83:39)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":83:44)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":83:55)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":83:56)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":83:13)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":84:13)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":84:45)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":84:17)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":84:29)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":84:35)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":84:36)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":84:42)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":84:41)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":86:20)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":86:30)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":86:13)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":87:23)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":87:13)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":88:18)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":88:13)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":92:13)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":98:1)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":128:1)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":100:5)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":100:12)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":110:9)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":110:16)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":102:12)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":102:5)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":103:5)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":103:10)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":106:12)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":106:5)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":107:5)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":107:10)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":114:9)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":126:9)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":114:13)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":114:20)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":114:39)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":115:9)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":122:9)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":124:9)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":116:32)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":116:39)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":116:44)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":116:55)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":116:56)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":116:13)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":117:13)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":117:45)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":117:17)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":117:29)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":117:35)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":117:36)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":117:42)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":117:41)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":119:20)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":119:30)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":119:13)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":120:23)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":120:13)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":121:18)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":121:13)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":125:23)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_18.c":125:13)
#loc159 = loc(fused[#loc1, #loc2])
#loc160 = loc(fused[#loc3, #loc4])
#loc161 = loc(fused[#loc5, #loc6])
#loc162 = loc(fused[#loc7, #loc8])
#loc163 = loc(fused[#loc10, #loc11])
#loc164 = loc(fused[#loc12, #loc13])
#loc165 = loc(fused[#loc15, #loc16])
#loc166 = loc(fused[#loc17, #loc18])
#loc167 = loc(fused[#loc19, #loc20])
#loc168 = loc(fused[#loc22, #loc21])
#loc169 = loc(fused[#loc23, #loc24])
#loc170 = loc(fused[#loc26, #loc27])
#loc171 = loc(fused[#loc28, #loc29])
#loc172 = loc(fused[#loc30, #loc31])
#loc173 = loc(fused[#loc33, #loc34])
#loc174 = loc(fused[#loc32, #loc34])
#loc175 = loc(fused[#loc35, #loc36, #loc37, #loc31])
#loc176 = loc(fused[#loc40, #loc41])
#loc177 = loc(fused[#loc39, #loc41])
#loc178 = loc(fused[#loc38, #loc42])
#loc179 = loc(fused[#loc43, #loc42])
#loc180 = loc(fused[#loc44, #loc45])
#loc181 = loc(fused[#loc46, #loc47])
#loc182 = loc(fused[#loc48, #loc45])
#loc183 = loc(fused[#loc59, #loc60])
#loc184 = loc(fused[#loc61, #loc62])
#loc185 = loc(fused[#loc63, #loc64])
#loc186 = loc(fused[#loc66, #loc67])
#loc187 = loc(fused[#loc68, #loc69])
#loc188 = loc(fused[#loc70, #loc71])
#loc189 = loc(fused[#loc73, #loc72])
#loc190 = loc(fused[#loc74, #loc75])
#loc191 = loc(fused[#loc77, #loc78])
#loc192 = loc(fused[#loc79, #loc80])
#loc193 = loc(fused[#loc81, #loc82])
#loc194 = loc(fused[#loc84, #loc85])
#loc195 = loc(fused[#loc83, #loc85])
#loc196 = loc(fused[#loc87, #loc88])
#loc197 = loc(fused[#loc89, #loc90, #loc91, #loc82])
#loc198 = loc(fused[#loc94, #loc95])
#loc199 = loc(fused[#loc93, #loc95])
#loc200 = loc(fused[#loc92, #loc96])
#loc201 = loc(fused[#loc97, #loc96])
#loc202 = loc(fused[#loc98, #loc99])
#loc203 = loc(fused[#loc100, #loc101])
#loc204 = loc(fused[#loc102, #loc99])
#loc205 = loc(fused[#loc114, #loc115])
#loc206 = loc(fused[#loc116, #loc117])
#loc207 = loc(fused[#loc118, #loc119])
#loc208 = loc(fused[#loc121, #loc120])
#loc209 = loc(fused[#loc122, #loc123])
#loc210 = loc(fused[#loc125, #loc124])
#loc211 = loc(fused[#loc126, #loc127])
#loc212 = loc(fused[#loc128, #loc129])
#loc213 = loc(fused[#loc131, #loc132])
#loc214 = loc(fused[#loc130, #loc132])
#loc215 = loc(fused[#loc133, #loc134, #loc135, #loc129])
#loc216 = loc(fused[#loc138, #loc139])
#loc217 = loc(fused[#loc137, #loc139])
#loc218 = loc(fused[#loc136, #loc140])
#loc219 = loc(fused[#loc141, #loc140])
#loc220 = loc(fused[#loc142, #loc143])
#loc221 = loc(fused[#loc144, #loc145])
#loc222 = loc(fused[#loc146, #loc143])
