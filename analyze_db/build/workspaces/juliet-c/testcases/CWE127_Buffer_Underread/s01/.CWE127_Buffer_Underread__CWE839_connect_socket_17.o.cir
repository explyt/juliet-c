!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_connect_socket_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc345)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc346)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc347)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc348)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc349)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc350)
  cir.func private @close(!s32i) -> !s32i loc(#loc351)
  cir.func private @printIntLine(!s32i) loc(#loc352)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc353)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is too big.\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc20)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_connect_socket_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc355)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc356)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc357)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc29)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc358)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc33)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc360)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc35)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc36)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc361)
        cir.condition(%8) loc(#loc37)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc364)
            %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc365)
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc366)
            %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc367)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc46)
            %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc46)
            cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc366)
            cir.scope {
              cir.do {
                cir.scope {
                  %12 = cir.const #cir.int<2> : !s32i loc(#loc53)
                  %13 = cir.const #cir.int<1> : !s32i loc(#loc54)
                  %14 = cir.const #cir.int<6> : !s32i loc(#loc55)
                  %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc56)
                  cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc370)
                  cir.scope {
                    %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc61)
                    %55 = cir.const #cir.int<1> : !s32i loc(#loc62)
                    %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc62)
                    %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc372)
                    cir.if %57 {
                      cir.break loc(#loc64)
                    } loc(#loc373)
                  } loc(#loc371)
                  %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc374)
                  %17 = cir.const #cir.int<0> : !s32i loc(#loc67)
                  %18 = cir.const #cir.int<16> : !u64i loc(#loc375)
                  cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc376)
                  %19 = cir.const #cir.int<2> : !s32i loc(#loc72)
                  %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc72)
                  %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
                  cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc377)
                  %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
                  %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
                  %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc75)
                  %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
                  %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
                  cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc378)
                  %27 = cir.const #cir.int<27015> : !s32i loc(#loc80)
                  %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc80)
                  %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc81)
                  %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
                  cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc379)
                  cir.scope {
                    %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc87)
                    %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc381)
                    %56 = cir.const #cir.int<16> : !u64i loc(#loc382)
                    %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc382)
                    %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc92)
                    %59 = cir.const #cir.int<1> : !s32i loc(#loc93)
                    %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc93)
                    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc383)
                    cir.if %61 {
                      cir.break loc(#loc95)
                    } loc(#loc384)
                  } loc(#loc380)
                  %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc96)
                  %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc97)
                  %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc97)
                  %34 = cir.const #cir.int<3> : !s32i loc(#loc98)
                  %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc98)
                  %36 = cir.const #cir.int<4> : !u64i loc(#loc98)
                  %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc98)
                  %38 = cir.const #cir.int<2> : !s32i loc(#loc98)
                  %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc98)
                  %40 = cir.binop(add, %37, %39) : !u64i loc(#loc98)
                  %41 = cir.const #cir.int<1> : !s32i loc(#loc99)
                  %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc99)
                  %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc385)
                  %44 = cir.const #cir.int<0> : !s32i loc(#loc100)
                  %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc101)
                  %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc101)
                  cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc386)
                  cir.scope {
                    %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc106)
                    %55 = cir.const #cir.int<1> : !s32i loc(#loc107)
                    %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc107)
                    %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc388)
                    %58 = cir.ternary(%57, true {
                      %59 = cir.const #true loc(#loc108)
                      cir.yield %59 : !cir.bool loc(#loc108)
                    }, false {
                      %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc109)
                      %60 = cir.const #cir.int<0> : !s32i loc(#loc110)
                      %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc389)
                      %62 = cir.ternary(%61, true {
                        %63 = cir.const #true loc(#loc108)
                        cir.yield %63 : !cir.bool loc(#loc108)
                      }, false {
                        %63 = cir.const #false loc(#loc108)
                        cir.yield %63 : !cir.bool loc(#loc108)
                      }) : (!cir.bool) -> !cir.bool loc(#loc108)
                      cir.yield %62 : !cir.bool loc(#loc108)
                    }) : (!cir.bool) -> !cir.bool loc(#loc108)
                    cir.if %58 {
                      cir.break loc(#loc112)
                    } loc(#loc390)
                  } loc(#loc387)
                  %47 = cir.const #cir.int<0> : !s32i loc(#loc113)
                  %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc113)
                  %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc114)
                  %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc115)
                  %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc115)
                  cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc391)
                  %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc116)
                  %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc117)
                  cir.store %53, %2 : !s32i, !cir.ptr<!s32i> loc(#loc392)
                } loc(#loc369)
                cir.yield loc(#loc50)
              } while {
                %12 = cir.const #cir.int<0> : !s32i loc(#loc120)
                %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc120)
                cir.condition(%13) loc(#loc120)
              } loc(#loc368)
            } loc(#loc368)
            cir.scope {
              %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc123)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc124)
              %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc124)
              %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc394)
              cir.if %15 {
                %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc126)
                %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc127)
              } loc(#loc395)
            } loc(#loc393)
          } loc(#loc363)
        } loc(#loc362)
        cir.yield loc(#loc32)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc128)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc129)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc396)
        cir.yield loc(#loc359)
      } loc(#loc359)
    } loc(#loc359)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc132)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc398)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc134)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc135)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc399)
        cir.condition(%8) loc(#loc136)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc402)
            %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc402)
            cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc402)
            cir.scope {
              %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc144)
              %9 = cir.const #cir.int<10> : !s32i loc(#loc145)
              %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc404)
              cir.if %10 {
                %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc149)
                %12 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc150)
                %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc150)
                %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc150)
                cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc151)
              } else {
                %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc20)
                %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc20)
                cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc152)
              } loc(#loc405)
            } loc(#loc403)
          } loc(#loc401)
        } loc(#loc400)
        cir.yield loc(#loc131)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc153)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc154)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc406)
        cir.yield loc(#loc397)
      } loc(#loc397)
    } loc(#loc397)
    cir.return loc(#loc22)
  } loc(#loc354)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_connect_socket_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc408)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc157)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc409)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc159)
    cir.return loc(#loc156)
  } loc(#loc407)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc161)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc411)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc412)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc413)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc169)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc170)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc414)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc174)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc416)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc176)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc177)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc417)
        cir.condition(%8) loc(#loc178)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc420)
            %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc421)
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc422)
            %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc423)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc187)
            %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc187)
            cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc422)
            cir.scope {
              cir.do {
                cir.scope {
                  %12 = cir.const #cir.int<2> : !s32i loc(#loc194)
                  %13 = cir.const #cir.int<1> : !s32i loc(#loc195)
                  %14 = cir.const #cir.int<6> : !s32i loc(#loc196)
                  %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc197)
                  cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc426)
                  cir.scope {
                    %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc202)
                    %55 = cir.const #cir.int<1> : !s32i loc(#loc203)
                    %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc203)
                    %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc428)
                    cir.if %57 {
                      cir.break loc(#loc205)
                    } loc(#loc429)
                  } loc(#loc427)
                  %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc430)
                  %17 = cir.const #cir.int<0> : !s32i loc(#loc208)
                  %18 = cir.const #cir.int<16> : !u64i loc(#loc431)
                  cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc432)
                  %19 = cir.const #cir.int<2> : !s32i loc(#loc213)
                  %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc213)
                  %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
                  cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc433)
                  %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc215)
                  %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc215)
                  %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc216)
                  %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
                  %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
                  cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc434)
                  %27 = cir.const #cir.int<27015> : !s32i loc(#loc219)
                  %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc219)
                  %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc220)
                  %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
                  cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc435)
                  cir.scope {
                    %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc225)
                    %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc437)
                    %56 = cir.const #cir.int<16> : !u64i loc(#loc438)
                    %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc438)
                    %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc230)
                    %59 = cir.const #cir.int<1> : !s32i loc(#loc231)
                    %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc231)
                    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc439)
                    cir.if %61 {
                      cir.break loc(#loc233)
                    } loc(#loc440)
                  } loc(#loc436)
                  %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc234)
                  %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc235)
                  %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc235)
                  %34 = cir.const #cir.int<3> : !s32i loc(#loc236)
                  %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc236)
                  %36 = cir.const #cir.int<4> : !u64i loc(#loc236)
                  %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc236)
                  %38 = cir.const #cir.int<2> : !s32i loc(#loc236)
                  %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc236)
                  %40 = cir.binop(add, %37, %39) : !u64i loc(#loc236)
                  %41 = cir.const #cir.int<1> : !s32i loc(#loc237)
                  %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc237)
                  %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc441)
                  %44 = cir.const #cir.int<0> : !s32i loc(#loc238)
                  %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc239)
                  %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc239)
                  cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc442)
                  cir.scope {
                    %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc244)
                    %55 = cir.const #cir.int<1> : !s32i loc(#loc245)
                    %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc245)
                    %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc444)
                    %58 = cir.ternary(%57, true {
                      %59 = cir.const #true loc(#loc246)
                      cir.yield %59 : !cir.bool loc(#loc246)
                    }, false {
                      %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc247)
                      %60 = cir.const #cir.int<0> : !s32i loc(#loc248)
                      %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc445)
                      %62 = cir.ternary(%61, true {
                        %63 = cir.const #true loc(#loc246)
                        cir.yield %63 : !cir.bool loc(#loc246)
                      }, false {
                        %63 = cir.const #false loc(#loc246)
                        cir.yield %63 : !cir.bool loc(#loc246)
                      }) : (!cir.bool) -> !cir.bool loc(#loc246)
                      cir.yield %62 : !cir.bool loc(#loc246)
                    }) : (!cir.bool) -> !cir.bool loc(#loc246)
                    cir.if %58 {
                      cir.break loc(#loc250)
                    } loc(#loc446)
                  } loc(#loc443)
                  %47 = cir.const #cir.int<0> : !s32i loc(#loc251)
                  %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc251)
                  %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc252)
                  %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc253)
                  %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc253)
                  cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc447)
                  %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc254)
                  %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc255)
                  cir.store %53, %2 : !s32i, !cir.ptr<!s32i> loc(#loc448)
                } loc(#loc425)
                cir.yield loc(#loc191)
              } while {
                %12 = cir.const #cir.int<0> : !s32i loc(#loc258)
                %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc258)
                cir.condition(%13) loc(#loc258)
              } loc(#loc424)
            } loc(#loc424)
            cir.scope {
              %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc261)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc262)
              %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc262)
              %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc450)
              cir.if %15 {
                %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc264)
                %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc265)
              } loc(#loc451)
            } loc(#loc449)
          } loc(#loc419)
        } loc(#loc418)
        cir.yield loc(#loc173)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc266)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc267)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc452)
        cir.yield loc(#loc415)
      } loc(#loc415)
    } loc(#loc415)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc270)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc454)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc272)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc273)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc455)
        cir.condition(%8) loc(#loc274)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc458)
            %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc458)
            cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc458)
            cir.scope {
              %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc282)
              %9 = cir.const #cir.int<0> : !s32i loc(#loc283)
              %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc460)
              %11 = cir.ternary(%10, true {
                %12 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc285)
                %13 = cir.const #cir.int<10> : !s32i loc(#loc286)
                %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc461)
                %15 = cir.ternary(%14, true {
                  %16 = cir.const #true loc(#loc284)
                  cir.yield %16 : !cir.bool loc(#loc284)
                }, false {
                  %16 = cir.const #false loc(#loc284)
                  cir.yield %16 : !cir.bool loc(#loc284)
                }) : (!cir.bool) -> !cir.bool loc(#loc284)
                cir.yield %15 : !cir.bool loc(#loc284)
              }, false {
                %12 = cir.const #false loc(#loc284)
                cir.yield %12 : !cir.bool loc(#loc284)
              }) : (!cir.bool) -> !cir.bool loc(#loc284)
              cir.if %11 {
                %12 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc291)
                %13 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc292)
                %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc292)
                %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc292)
                cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc293)
              } else {
                %12 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc161)
                %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc161)
                cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc294)
              } loc(#loc462)
            } loc(#loc459)
          } loc(#loc457)
        } loc(#loc456)
        cir.yield loc(#loc269)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc295)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc296)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc463)
        cir.yield loc(#loc453)
      } loc(#loc453)
    } loc(#loc453)
    cir.return loc(#loc163)
  } loc(#loc410)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc465)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc466)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc467)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc304)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc305)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc468)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc309)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc470)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc311)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc312)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc471)
        cir.condition(%8) loc(#loc313)
      } body {
        cir.scope {
          %6 = cir.const #cir.int<7> : !s32i loc(#loc315)
          cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc473)
        } loc(#loc472)
        cir.yield loc(#loc308)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc317)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc318)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc474)
        cir.yield loc(#loc469)
      } loc(#loc469)
    } loc(#loc469)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc321)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc476)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc323)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc324)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc477)
        cir.condition(%8) loc(#loc325)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc480)
            %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc480)
            cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc480)
            cir.scope {
              %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc333)
              %9 = cir.const #cir.int<10> : !s32i loc(#loc334)
              %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc482)
              cir.if %10 {
                %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc338)
                %12 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc339)
                %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc339)
                %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc339)
                cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc340)
              } else {
                %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc341)
                %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc341)
                cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc342)
              } loc(#loc483)
            } loc(#loc481)
          } loc(#loc479)
        } loc(#loc478)
        cir.yield loc(#loc320)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc343)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc344)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc484)
        cir.yield loc(#loc475)
      } loc(#loc475)
    } loc(#loc475)
    cir.return loc(#loc298)
  } loc(#loc464)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_connect_socket_17.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":78:53)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":121:27)
#loc21 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":44:1)
#loc22 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":125:1)
#loc23 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":46:5)
#loc24 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":46:9)
#loc25 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":46:11)
#loc26 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":47:5)
#loc27 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":47:9)
#loc28 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":49:13)
#loc29 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":49:12)
#loc30 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":49:5)
#loc31 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":50:5)
#loc32 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":108:5)
#loc33 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":50:13)
#loc34 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":50:9)
#loc35 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":50:16)
#loc36 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":50:20)
#loc37 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":50:18)
#loc38 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":51:5)
#loc39 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":52:9)
#loc40 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":107:9)
#loc41 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":57:13)
#loc42 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":57:17)
#loc43 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":58:13)
#loc44 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":58:32)
#loc45 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":59:13)
#loc46 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":59:36)
#loc47 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":60:13)
#loc48 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":60:45)
#loc49 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":61:13)
#loc50 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":96:21)
#loc51 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":62:13)
#loc52 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":95:13)
#loc53 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":71:40)
#loc54 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":71:49)
#loc55 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":71:62)
#loc56 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":71:33)
#loc57 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":71:17)
#loc58 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":71:73)
#loc59 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":72:17)
#loc60 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":75:17)
#loc61 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":72:21)
#loc62 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":72:38)
#loc63 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":73:17)
#loc64 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":74:21)
#loc65 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":76:24)
#loc66 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":76:25)
#loc67 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":76:34)
#loc68 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":76:37)
#loc69 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":76:51)
#loc70 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":76:17)
#loc71 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":76:52)
#loc72 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":77:38)
#loc73 = loc("/usr/include/netinet/in.h":249:5)
#loc74 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":77:17)
#loc75 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":78:43)
#loc76 = loc("/usr/include/netinet/in.h":251:20)
#loc77 = loc("/usr/include/netinet/in.h":33:15)
#loc78 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":78:17)
#loc79 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":78:63)
#loc80 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":79:42)
#loc81 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":79:36)
#loc82 = loc("/usr/include/netinet/in.h":250:15)
#loc83 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":79:17)
#loc84 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":79:50)
#loc85 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":80:17)
#loc86 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":83:17)
#loc87 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":80:29)
#loc88 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":80:62)
#loc89 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":80:63)
#loc90 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":80:72)
#loc91 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":80:86)
#loc92 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":80:21)
#loc93 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":80:92)
#loc94 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":81:17)
#loc95 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":82:21)
#loc96 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":86:35)
#loc97 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":86:50)
#loc98 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":86:63)
#loc99 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":86:81)
#loc100 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":86:84)
#loc101 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":86:30)
#loc102 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":86:17)
#loc103 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":86:85)
#loc104 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":87:17)
#loc105 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":90:17)
#loc106 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":87:21)
#loc107 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":87:35)
#loc108 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":87:48)
#loc109 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":87:51)
#loc110 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":87:65)
#loc111 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":88:17)
#loc112 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":89:21)
#loc113 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":92:43)
#loc114 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":92:29)
#loc115 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":92:17)
#loc116 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":94:29)
#loc117 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":94:24)
#loc118 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":94:17)
#loc119 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":94:40)
#loc120 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":96:20)
#loc121 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":97:13)
#loc122 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":100:13)
#loc123 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":97:17)
#loc124 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":97:34)
#loc125 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":98:13)
#loc126 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":99:30)
#loc127 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":99:17)
#loc128 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":50:24)
#loc129 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":50:23)
#loc130 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":109:5)
#loc131 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":124:5)
#loc132 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":109:13)
#loc133 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":109:9)
#loc134 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":109:16)
#loc135 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":109:20)
#loc136 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":109:18)
#loc137 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":110:5)
#loc138 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":111:9)
#loc139 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":123:9)
#loc140 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":112:13)
#loc141 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":112:34)
#loc142 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":115:13)
#loc143 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":122:13)
#loc144 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":115:17)
#loc145 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":115:24)
#loc146 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":116:13)
#loc147 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":118:13)
#loc148 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":120:13)
#loc149 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":117:37)
#loc150 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":117:30)
#loc151 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":117:17)
#loc152 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":121:17)
#loc153 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":109:24)
#loc154 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":109:23)
#loc155 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":245:1)
#loc156 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":249:1)
#loc157 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":247:5)
#loc158 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":247:13)
#loc159 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":248:5)
#loc160 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":248:13)
#loc161 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":208:27)
#loc162 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":132:1)
#loc163 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":212:1)
#loc164 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":134:5)
#loc165 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":134:9)
#loc166 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":134:11)
#loc167 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":135:5)
#loc168 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":135:9)
#loc169 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":137:13)
#loc170 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":137:12)
#loc171 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":137:5)
#loc172 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":138:5)
#loc173 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":196:5)
#loc174 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":138:13)
#loc175 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":138:9)
#loc176 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":138:16)
#loc177 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":138:20)
#loc178 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":138:18)
#loc179 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":139:5)
#loc180 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":140:9)
#loc181 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":195:9)
#loc182 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":145:13)
#loc183 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":145:17)
#loc184 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":146:13)
#loc185 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":146:32)
#loc186 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":147:13)
#loc187 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":147:36)
#loc188 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":148:13)
#loc189 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":148:45)
#loc190 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":149:13)
#loc191 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":184:21)
#loc192 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":150:13)
#loc193 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":183:13)
#loc194 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":159:40)
#loc195 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":159:49)
#loc196 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":159:62)
#loc197 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":159:33)
#loc198 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":159:17)
#loc199 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":159:73)
#loc200 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":160:17)
#loc201 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":163:17)
#loc202 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":160:21)
#loc203 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":160:38)
#loc204 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":161:17)
#loc205 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":162:21)
#loc206 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":164:24)
#loc207 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":164:25)
#loc208 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":164:34)
#loc209 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":164:37)
#loc210 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":164:51)
#loc211 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":164:17)
#loc212 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":164:52)
#loc213 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":165:38)
#loc214 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":165:17)
#loc215 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":166:53)
#loc216 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":166:43)
#loc217 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":166:17)
#loc218 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":166:63)
#loc219 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":167:42)
#loc220 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":167:36)
#loc221 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":167:17)
#loc222 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":167:50)
#loc223 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":168:17)
#loc224 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":171:17)
#loc225 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":168:29)
#loc226 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":168:62)
#loc227 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":168:63)
#loc228 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":168:72)
#loc229 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":168:86)
#loc230 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":168:21)
#loc231 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":168:92)
#loc232 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":169:17)
#loc233 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":170:21)
#loc234 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":174:35)
#loc235 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":174:50)
#loc236 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":174:63)
#loc237 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":174:81)
#loc238 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":174:84)
#loc239 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":174:30)
#loc240 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":174:17)
#loc241 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":174:85)
#loc242 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":175:17)
#loc243 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":178:17)
#loc244 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":175:21)
#loc245 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":175:35)
#loc246 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":175:48)
#loc247 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":175:51)
#loc248 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":175:65)
#loc249 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":176:17)
#loc250 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":177:21)
#loc251 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":180:43)
#loc252 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":180:29)
#loc253 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":180:17)
#loc254 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":182:29)
#loc255 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":182:24)
#loc256 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":182:17)
#loc257 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":182:40)
#loc258 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":184:20)
#loc259 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":185:13)
#loc260 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":188:13)
#loc261 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":185:17)
#loc262 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":185:34)
#loc263 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":186:13)
#loc264 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":187:30)
#loc265 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":187:17)
#loc266 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":138:24)
#loc267 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":138:23)
#loc268 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":197:5)
#loc269 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":211:5)
#loc270 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":197:13)
#loc271 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":197:9)
#loc272 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":197:16)
#loc273 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":197:20)
#loc274 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":197:18)
#loc275 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":198:5)
#loc276 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":199:9)
#loc277 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":210:9)
#loc278 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":200:13)
#loc279 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":200:34)
#loc280 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":202:13)
#loc281 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":209:13)
#loc282 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":202:17)
#loc283 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":202:25)
#loc284 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":202:27)
#loc285 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":202:30)
#loc286 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":202:38)
#loc287 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":202:40)
#loc288 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":203:13)
#loc289 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":205:13)
#loc290 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":207:13)
#loc291 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":204:37)
#loc292 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":204:30)
#loc293 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":204:17)
#loc294 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":208:17)
#loc295 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":197:24)
#loc296 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":197:23)
#loc297 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":215:1)
#loc298 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":243:1)
#loc299 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":217:5)
#loc300 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":217:9)
#loc301 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":217:11)
#loc302 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":218:5)
#loc303 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":218:9)
#loc304 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":220:13)
#loc305 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":220:12)
#loc306 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":220:5)
#loc307 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":221:5)
#loc308 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":226:5)
#loc309 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":221:13)
#loc310 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":221:9)
#loc311 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":221:16)
#loc312 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":221:20)
#loc313 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":221:18)
#loc314 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":222:5)
#loc315 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":225:16)
#loc316 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":225:9)
#loc317 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":221:24)
#loc318 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":221:23)
#loc319 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":227:5)
#loc320 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":242:5)
#loc321 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":227:13)
#loc322 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":227:9)
#loc323 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":227:16)
#loc324 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":227:20)
#loc325 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":227:18)
#loc326 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":228:5)
#loc327 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":229:9)
#loc328 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":241:9)
#loc329 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":230:13)
#loc330 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":230:34)
#loc331 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":233:13)
#loc332 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":240:13)
#loc333 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":233:17)
#loc334 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":233:24)
#loc335 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":234:13)
#loc336 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":236:13)
#loc337 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":238:13)
#loc338 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":235:37)
#loc339 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":235:30)
#loc340 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":235:17)
#loc341 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":239:27)
#loc342 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":239:17)
#loc343 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":227:24)
#loc344 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_17.c":227:23)
#loc345 = loc(fused[#loc1, #loc2])
#loc346 = loc(fused[#loc3, #loc4])
#loc347 = loc(fused[#loc6, #loc7])
#loc348 = loc(fused[#loc8, #loc9])
#loc349 = loc(fused[#loc10, #loc11])
#loc350 = loc(fused[#loc12, #loc13])
#loc351 = loc(fused[#loc14, #loc15])
#loc352 = loc(fused[#loc16, #loc17])
#loc353 = loc(fused[#loc18, #loc19])
#loc354 = loc(fused[#loc21, #loc22])
#loc355 = loc(fused[#loc23, #loc24])
#loc356 = loc(fused[#loc23, #loc25])
#loc357 = loc(fused[#loc26, #loc27])
#loc358 = loc(fused[#loc30, #loc28])
#loc359 = loc(fused[#loc31, #loc32])
#loc360 = loc(fused[#loc34, #loc33])
#loc361 = loc(fused[#loc35, #loc36])
#loc362 = loc(fused[#loc38, #loc32])
#loc363 = loc(fused[#loc39, #loc40])
#loc364 = loc(fused[#loc41, #loc42])
#loc365 = loc(fused[#loc43, #loc44])
#loc366 = loc(fused[#loc45, #loc46])
#loc367 = loc(fused[#loc47, #loc48])
#loc368 = loc(fused[#loc49, #loc50])
#loc369 = loc(fused[#loc51, #loc52])
#loc370 = loc(fused[#loc57, #loc58])
#loc371 = loc(fused[#loc59, #loc60])
#loc372 = loc(fused[#loc61, #loc62])
#loc373 = loc(fused[#loc63, #loc60])
#loc374 = loc(fused[#loc65, #loc66])
#loc375 = loc(fused[#loc68, #loc69])
#loc376 = loc(fused[#loc70, #loc71])
#loc377 = loc(fused[#loc74, #loc72])
#loc378 = loc(fused[#loc78, #loc79])
#loc379 = loc(fused[#loc83, #loc84])
#loc380 = loc(fused[#loc85, #loc86])
#loc381 = loc(fused[#loc88, #loc89])
#loc382 = loc(fused[#loc90, #loc91])
#loc383 = loc(fused[#loc92, #loc93])
#loc384 = loc(fused[#loc94, #loc86])
#loc385 = loc(fused[#loc98, #loc99])
#loc386 = loc(fused[#loc102, #loc103])
#loc387 = loc(fused[#loc104, #loc105])
#loc388 = loc(fused[#loc106, #loc107])
#loc389 = loc(fused[#loc109, #loc110])
#loc390 = loc(fused[#loc111, #loc105])
#loc391 = loc(fused[#loc115, #loc113])
#loc392 = loc(fused[#loc118, #loc119])
#loc393 = loc(fused[#loc121, #loc122])
#loc394 = loc(fused[#loc123, #loc124])
#loc395 = loc(fused[#loc125, #loc122])
#loc396 = loc(fused[#loc129, #loc128])
#loc397 = loc(fused[#loc130, #loc131])
#loc398 = loc(fused[#loc133, #loc132])
#loc399 = loc(fused[#loc134, #loc135])
#loc400 = loc(fused[#loc137, #loc131])
#loc401 = loc(fused[#loc138, #loc139])
#loc402 = loc(fused[#loc140, #loc141])
#loc403 = loc(fused[#loc142, #loc143])
#loc404 = loc(fused[#loc144, #loc145])
#loc405 = loc(fused[#loc146, #loc147, #loc148, #loc143])
#loc406 = loc(fused[#loc154, #loc153])
#loc407 = loc(fused[#loc155, #loc156])
#loc408 = loc(fused[#loc157, #loc158])
#loc409 = loc(fused[#loc159, #loc160])
#loc410 = loc(fused[#loc162, #loc163])
#loc411 = loc(fused[#loc164, #loc165])
#loc412 = loc(fused[#loc164, #loc166])
#loc413 = loc(fused[#loc167, #loc168])
#loc414 = loc(fused[#loc171, #loc169])
#loc415 = loc(fused[#loc172, #loc173])
#loc416 = loc(fused[#loc175, #loc174])
#loc417 = loc(fused[#loc176, #loc177])
#loc418 = loc(fused[#loc179, #loc173])
#loc419 = loc(fused[#loc180, #loc181])
#loc420 = loc(fused[#loc182, #loc183])
#loc421 = loc(fused[#loc184, #loc185])
#loc422 = loc(fused[#loc186, #loc187])
#loc423 = loc(fused[#loc188, #loc189])
#loc424 = loc(fused[#loc190, #loc191])
#loc425 = loc(fused[#loc192, #loc193])
#loc426 = loc(fused[#loc198, #loc199])
#loc427 = loc(fused[#loc200, #loc201])
#loc428 = loc(fused[#loc202, #loc203])
#loc429 = loc(fused[#loc204, #loc201])
#loc430 = loc(fused[#loc206, #loc207])
#loc431 = loc(fused[#loc209, #loc210])
#loc432 = loc(fused[#loc211, #loc212])
#loc433 = loc(fused[#loc214, #loc213])
#loc434 = loc(fused[#loc217, #loc218])
#loc435 = loc(fused[#loc221, #loc222])
#loc436 = loc(fused[#loc223, #loc224])
#loc437 = loc(fused[#loc226, #loc227])
#loc438 = loc(fused[#loc228, #loc229])
#loc439 = loc(fused[#loc230, #loc231])
#loc440 = loc(fused[#loc232, #loc224])
#loc441 = loc(fused[#loc236, #loc237])
#loc442 = loc(fused[#loc240, #loc241])
#loc443 = loc(fused[#loc242, #loc243])
#loc444 = loc(fused[#loc244, #loc245])
#loc445 = loc(fused[#loc247, #loc248])
#loc446 = loc(fused[#loc249, #loc243])
#loc447 = loc(fused[#loc253, #loc251])
#loc448 = loc(fused[#loc256, #loc257])
#loc449 = loc(fused[#loc259, #loc260])
#loc450 = loc(fused[#loc261, #loc262])
#loc451 = loc(fused[#loc263, #loc260])
#loc452 = loc(fused[#loc267, #loc266])
#loc453 = loc(fused[#loc268, #loc269])
#loc454 = loc(fused[#loc271, #loc270])
#loc455 = loc(fused[#loc272, #loc273])
#loc456 = loc(fused[#loc275, #loc269])
#loc457 = loc(fused[#loc276, #loc277])
#loc458 = loc(fused[#loc278, #loc279])
#loc459 = loc(fused[#loc280, #loc281])
#loc460 = loc(fused[#loc282, #loc283])
#loc461 = loc(fused[#loc285, #loc287])
#loc462 = loc(fused[#loc288, #loc289, #loc290, #loc281])
#loc463 = loc(fused[#loc296, #loc295])
#loc464 = loc(fused[#loc297, #loc298])
#loc465 = loc(fused[#loc299, #loc300])
#loc466 = loc(fused[#loc299, #loc301])
#loc467 = loc(fused[#loc302, #loc303])
#loc468 = loc(fused[#loc306, #loc304])
#loc469 = loc(fused[#loc307, #loc308])
#loc470 = loc(fused[#loc310, #loc309])
#loc471 = loc(fused[#loc311, #loc312])
#loc472 = loc(fused[#loc314, #loc308])
#loc473 = loc(fused[#loc316, #loc315])
#loc474 = loc(fused[#loc318, #loc317])
#loc475 = loc(fused[#loc319, #loc320])
#loc476 = loc(fused[#loc322, #loc321])
#loc477 = loc(fused[#loc323, #loc324])
#loc478 = loc(fused[#loc326, #loc320])
#loc479 = loc(fused[#loc327, #loc328])
#loc480 = loc(fused[#loc329, #loc330])
#loc481 = loc(fused[#loc331, #loc332])
#loc482 = loc(fused[#loc333, #loc334])
#loc483 = loc(fused[#loc335, #loc336, #loc337, #loc332])
#loc484 = loc(fused[#loc344, #loc343])
