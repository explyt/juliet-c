!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc204 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":463:10)
#loc205 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":463:14)
#loc206 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":463:20)
#loc207 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":463:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc746 = loc(fused[#loc204, #loc205])
#loc747 = loc(fused[#loc206, #loc207])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc664)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc665)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc666)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc667)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc668)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc669)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc670)
  cir.func private @close(!s32i) -> !s32i loc(#loc671)
  cir.func private @printIntLine(!s32i) loc(#loc672)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc673)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc21)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_listen_socket_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc675)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc27)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc676)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc678)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc31)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc31)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc681)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc682)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc683)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc684)
          %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc685)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc41)
          %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc41)
          cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc683)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc43)
          %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc43)
          cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc684)
          cir.scope {
            cir.do {
              %15 = cir.const #cir.int<2> : !s32i loc(#loc48)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc49)
              %17 = cir.const #cir.int<6> : !s32i loc(#loc50)
              %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc51)
              cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc687)
              cir.scope {
                %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc56)
                %61 = cir.const #cir.int<1> : !s32i loc(#loc57)
                %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc57)
                %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc689)
                cir.if %63 {
                  cir.break loc(#loc59)
                } loc(#loc690)
              } loc(#loc688)
              %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc691)
              %20 = cir.const #cir.int<0> : !s32i loc(#loc62)
              %21 = cir.const #cir.int<16> : !u64i loc(#loc692)
              cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc693)
              %22 = cir.const #cir.int<2> : !s32i loc(#loc67)
              %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc67)
              %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
              cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc694)
              %25 = cir.const #cir.int<0> : !s32i loc(#loc70)
              %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc70)
              %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
              %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
              cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc695)
              %29 = cir.const #cir.int<27015> : !s32i loc(#loc74)
              %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc74)
              %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc75)
              %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
              cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc696)
              cir.scope {
                %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc81)
                %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc698)
                %62 = cir.const #cir.int<16> : !u64i loc(#loc699)
                %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc699)
                %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc86)
                %65 = cir.const #cir.int<1> : !s32i loc(#loc87)
                %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc87)
                %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc700)
                cir.if %67 {
                  cir.break loc(#loc89)
                } loc(#loc701)
              } loc(#loc697)
              cir.scope {
                %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc92)
                %61 = cir.const #cir.int<5> : !s32i loc(#loc93)
                %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc94)
                %63 = cir.const #cir.int<1> : !s32i loc(#loc95)
                %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc95)
                %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc703)
                cir.if %65 {
                  cir.break loc(#loc97)
                } loc(#loc704)
              } loc(#loc702)
              %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc98)
              %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc99)
              %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc100)
              %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc101)
              cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc705)
              cir.scope {
                %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc106)
                %61 = cir.const #cir.int<1> : !s32i loc(#loc107)
                %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc107)
                %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc707)
                cir.if %63 {
                  cir.break loc(#loc109)
                } loc(#loc708)
              } loc(#loc706)
              %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc110)
              %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc111)
              %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc111)
              %40 = cir.const #cir.int<3> : !s32i loc(#loc112)
              %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc112)
              %42 = cir.const #cir.int<4> : !u64i loc(#loc112)
              %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc112)
              %44 = cir.const #cir.int<2> : !s32i loc(#loc112)
              %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc112)
              %46 = cir.binop(add, %43, %45) : !u64i loc(#loc112)
              %47 = cir.const #cir.int<1> : !s32i loc(#loc113)
              %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc113)
              %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc709)
              %50 = cir.const #cir.int<0> : !s32i loc(#loc114)
              %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc115)
              %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc115)
              cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc710)
              cir.scope {
                %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc120)
                %61 = cir.const #cir.int<1> : !s32i loc(#loc121)
                %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc121)
                %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc712)
                %64 = cir.ternary(%63, true {
                  %65 = cir.const #true loc(#loc122)
                  cir.yield %65 : !cir.bool loc(#loc122)
                }, false {
                  %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc123)
                  %66 = cir.const #cir.int<0> : !s32i loc(#loc124)
                  %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc713)
                  %68 = cir.ternary(%67, true {
                    %69 = cir.const #true loc(#loc122)
                    cir.yield %69 : !cir.bool loc(#loc122)
                  }, false {
                    %69 = cir.const #false loc(#loc122)
                    cir.yield %69 : !cir.bool loc(#loc122)
                  }) : (!cir.bool) -> !cir.bool loc(#loc122)
                  cir.yield %68 : !cir.bool loc(#loc122)
                }) : (!cir.bool) -> !cir.bool loc(#loc122)
                cir.if %64 {
                  cir.break loc(#loc126)
                } loc(#loc714)
              } loc(#loc711)
              %53 = cir.const #cir.int<0> : !s32i loc(#loc127)
              %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc127)
              %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc128)
              %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc129)
              %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc129)
              cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc715)
              %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc130)
              %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc131)
              cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc716)
              cir.yield loc(#loc47)
            } while {
              %15 = cir.const #cir.int<0> : !s32i loc(#loc134)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc134)
              cir.condition(%16) loc(#loc134)
            } loc(#loc686)
          } loc(#loc686)
          cir.scope {
            %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc137)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc138)
            %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc138)
            %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc718)
            cir.if %18 {
              %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc140)
              %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc141)
            } loc(#loc719)
          } loc(#loc717)
          cir.scope {
            %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc144)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc145)
            %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc145)
            %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc721)
            cir.if %18 {
              %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc147)
              %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc148)
            } loc(#loc722)
          } loc(#loc720)
        } loc(#loc680)
      } loc(#loc679)
    } loc(#loc677)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc724)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc151)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc151)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc727)
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc728)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc728)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc728)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc162)
            %10 = cir.const #cir.int<10> : !s32i loc(#loc163)
            %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc730)
            cir.if %11 {
              %12 = cir.const #cir.int<1> : !s32i loc(#loc167)
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc168)
              %14 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc169)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc169)
              cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc732)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc172)
                cir.store %16, %6 : !s32i, !cir.ptr<!s32i> loc(#loc734)
                cir.for : cond {
                  %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc174)
                  %18 = cir.const #cir.int<10> : !s32i loc(#loc175)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc735)
                  cir.condition(%19) loc(#loc176)
                } body {
                  cir.scope {
                    %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc178)
                    %18 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc179)
                    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc179)
                    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc179)
                    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc180)
                  } loc(#loc736)
                  cir.yield loc(#loc171)
                } step {
                  %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc181)
                  %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc182)
                  cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc737)
                  cir.yield loc(#loc733)
                } loc(#loc733)
              } loc(#loc733)
            } else {
              %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc21)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc21)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc183)
            } loc(#loc731)
          } loc(#loc729)
        } loc(#loc726)
      } loc(#loc725)
    } loc(#loc723)
    cir.return loc(#loc23)
  } loc(#loc674)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_listen_socket_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc739)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc186)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc740)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc188)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc741)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc190)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc742)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc192)
    cir.return loc(#loc185)
  } loc(#loc738)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc743)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc744)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc198)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc199)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc200)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc201)
  cir.func @main(%arg0: !s32i loc(fused[#loc204, #loc205]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc206, #loc207])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc746)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc747)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc203)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc208)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc208)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc209)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc210)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc210)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc211)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc198)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc198)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc212)
    %8 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_listen_socket_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc748)
    cir.call @CWE124_Buffer_Underwrite__CWE839_listen_socket_08_good() : () -> () loc(#loc213)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc199)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc199)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc215)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc200)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc200)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc216)
    %13 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_listen_socket_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc749)
    cir.call @CWE124_Buffer_Underwrite__CWE839_listen_socket_08_bad() : () -> () loc(#loc217)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc201)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc201)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc219)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc220)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc750)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc750)
    cir.return %17 : !s32i loc(#loc750)
  } loc(#loc745)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc223)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc224)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc752)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc752)
    cir.return %2 : !s32i loc(#loc752)
  } loc(#loc751)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc226)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc227)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc754)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc232)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc233)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc755)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc757)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc237)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc237)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc760)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc761)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc762)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc763)
          %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc764)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc247)
          %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc247)
          cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc762)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc249)
          %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc249)
          cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc763)
          cir.scope {
            cir.do {
              %15 = cir.const #cir.int<2> : !s32i loc(#loc254)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc255)
              %17 = cir.const #cir.int<6> : !s32i loc(#loc256)
              %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc257)
              cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc766)
              cir.scope {
                %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc262)
                %61 = cir.const #cir.int<1> : !s32i loc(#loc263)
                %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc263)
                %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc768)
                cir.if %63 {
                  cir.break loc(#loc265)
                } loc(#loc769)
              } loc(#loc767)
              %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc770)
              %20 = cir.const #cir.int<0> : !s32i loc(#loc268)
              %21 = cir.const #cir.int<16> : !u64i loc(#loc771)
              cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc772)
              %22 = cir.const #cir.int<2> : !s32i loc(#loc273)
              %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc273)
              %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
              cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc773)
              %25 = cir.const #cir.int<0> : !s32i loc(#loc275)
              %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc275)
              %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
              %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
              cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc774)
              %29 = cir.const #cir.int<27015> : !s32i loc(#loc277)
              %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc277)
              %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc278)
              %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
              cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc775)
              cir.scope {
                %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc283)
                %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc777)
                %62 = cir.const #cir.int<16> : !u64i loc(#loc778)
                %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc778)
                %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc288)
                %65 = cir.const #cir.int<1> : !s32i loc(#loc289)
                %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc289)
                %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc779)
                cir.if %67 {
                  cir.break loc(#loc291)
                } loc(#loc780)
              } loc(#loc776)
              cir.scope {
                %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc294)
                %61 = cir.const #cir.int<5> : !s32i loc(#loc295)
                %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc296)
                %63 = cir.const #cir.int<1> : !s32i loc(#loc297)
                %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc297)
                %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc782)
                cir.if %65 {
                  cir.break loc(#loc299)
                } loc(#loc783)
              } loc(#loc781)
              %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc300)
              %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc301)
              %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc302)
              %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc303)
              cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc784)
              cir.scope {
                %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc308)
                %61 = cir.const #cir.int<1> : !s32i loc(#loc309)
                %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc309)
                %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc786)
                cir.if %63 {
                  cir.break loc(#loc311)
                } loc(#loc787)
              } loc(#loc785)
              %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc312)
              %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc313)
              %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc313)
              %40 = cir.const #cir.int<3> : !s32i loc(#loc314)
              %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc314)
              %42 = cir.const #cir.int<4> : !u64i loc(#loc314)
              %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc314)
              %44 = cir.const #cir.int<2> : !s32i loc(#loc314)
              %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc314)
              %46 = cir.binop(add, %43, %45) : !u64i loc(#loc314)
              %47 = cir.const #cir.int<1> : !s32i loc(#loc315)
              %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc315)
              %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc788)
              %50 = cir.const #cir.int<0> : !s32i loc(#loc316)
              %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc317)
              %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc317)
              cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc789)
              cir.scope {
                %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc322)
                %61 = cir.const #cir.int<1> : !s32i loc(#loc323)
                %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc323)
                %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc791)
                %64 = cir.ternary(%63, true {
                  %65 = cir.const #true loc(#loc324)
                  cir.yield %65 : !cir.bool loc(#loc324)
                }, false {
                  %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc325)
                  %66 = cir.const #cir.int<0> : !s32i loc(#loc326)
                  %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc792)
                  %68 = cir.ternary(%67, true {
                    %69 = cir.const #true loc(#loc324)
                    cir.yield %69 : !cir.bool loc(#loc324)
                  }, false {
                    %69 = cir.const #false loc(#loc324)
                    cir.yield %69 : !cir.bool loc(#loc324)
                  }) : (!cir.bool) -> !cir.bool loc(#loc324)
                  cir.yield %68 : !cir.bool loc(#loc324)
                }) : (!cir.bool) -> !cir.bool loc(#loc324)
                cir.if %64 {
                  cir.break loc(#loc328)
                } loc(#loc793)
              } loc(#loc790)
              %53 = cir.const #cir.int<0> : !s32i loc(#loc329)
              %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc329)
              %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc330)
              %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc331)
              %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc331)
              cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc794)
              %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc332)
              %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc333)
              cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc795)
              cir.yield loc(#loc253)
            } while {
              %15 = cir.const #cir.int<0> : !s32i loc(#loc336)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc336)
              cir.condition(%16) loc(#loc336)
            } loc(#loc765)
          } loc(#loc765)
          cir.scope {
            %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc339)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc340)
            %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc340)
            %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc797)
            cir.if %18 {
              %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc342)
              %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc343)
            } loc(#loc798)
          } loc(#loc796)
          cir.scope {
            %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc346)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc347)
            %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc347)
            %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc800)
            cir.if %18 {
              %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc349)
              %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc350)
            } loc(#loc801)
          } loc(#loc799)
        } loc(#loc759)
      } loc(#loc758)
    } loc(#loc756)
    cir.scope {
      %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc803)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc353)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc353)
      cir.if %5 {
        %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc226)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc226)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc358)
      } else {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc806)
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc807)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc807)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc807)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc367)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc368)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc809)
            %12 = cir.ternary(%11, true {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc370)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc371)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc810)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc369)
                cir.yield %17 : !cir.bool loc(#loc369)
              }, false {
                %17 = cir.const #false loc(#loc369)
                cir.yield %17 : !cir.bool loc(#loc369)
              }) : (!cir.bool) -> !cir.bool loc(#loc369)
              cir.yield %16 : !cir.bool loc(#loc369)
            }, false {
              %13 = cir.const #false loc(#loc369)
              cir.yield %13 : !cir.bool loc(#loc369)
            }) : (!cir.bool) -> !cir.bool loc(#loc369)
            cir.if %12 {
              %13 = cir.const #cir.int<1> : !s32i loc(#loc376)
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc377)
              %15 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc378)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc378)
              cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc812)
              cir.scope {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc381)
                cir.store %17, %6 : !s32i, !cir.ptr<!s32i> loc(#loc814)
                cir.for : cond {
                  %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc383)
                  %19 = cir.const #cir.int<10> : !s32i loc(#loc384)
                  %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc815)
                  cir.condition(%20) loc(#loc385)
                } body {
                  cir.scope {
                    %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc387)
                    %19 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc388)
                    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc388)
                    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc388)
                    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc389)
                  } loc(#loc816)
                  cir.yield loc(#loc380)
                } step {
                  %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc390)
                  %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc391)
                  cir.store %19, %6 : !s32i, !cir.ptr<!s32i> loc(#loc817)
                  cir.yield loc(#loc813)
                } loc(#loc813)
              } loc(#loc813)
            } else {
              %13 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc227)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc227)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc392)
            } loc(#loc811)
          } loc(#loc808)
        } loc(#loc805)
      } loc(#loc804)
    } loc(#loc802)
    cir.return loc(#loc229)
  } loc(#loc753)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc394)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc395)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc819)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc819)
    cir.return %2 : !s32i loc(#loc819)
  } loc(#loc818)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc821)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc401)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc402)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc822)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc824)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc406)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc406)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc827)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc828)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc829)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc830)
          %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc831)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc416)
          %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc416)
          cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc829)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc418)
          %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc418)
          cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc830)
          cir.scope {
            cir.do {
              %15 = cir.const #cir.int<2> : !s32i loc(#loc423)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc424)
              %17 = cir.const #cir.int<6> : !s32i loc(#loc425)
              %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc426)
              cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc833)
              cir.scope {
                %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc431)
                %61 = cir.const #cir.int<1> : !s32i loc(#loc432)
                %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc432)
                %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc835)
                cir.if %63 {
                  cir.break loc(#loc434)
                } loc(#loc836)
              } loc(#loc834)
              %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc837)
              %20 = cir.const #cir.int<0> : !s32i loc(#loc437)
              %21 = cir.const #cir.int<16> : !u64i loc(#loc838)
              cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc839)
              %22 = cir.const #cir.int<2> : !s32i loc(#loc442)
              %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc442)
              %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
              cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc840)
              %25 = cir.const #cir.int<0> : !s32i loc(#loc444)
              %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc444)
              %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
              %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
              cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc841)
              %29 = cir.const #cir.int<27015> : !s32i loc(#loc446)
              %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc446)
              %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc447)
              %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
              cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc842)
              cir.scope {
                %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc452)
                %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc844)
                %62 = cir.const #cir.int<16> : !u64i loc(#loc845)
                %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc845)
                %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc457)
                %65 = cir.const #cir.int<1> : !s32i loc(#loc458)
                %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc458)
                %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc846)
                cir.if %67 {
                  cir.break loc(#loc460)
                } loc(#loc847)
              } loc(#loc843)
              cir.scope {
                %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc463)
                %61 = cir.const #cir.int<5> : !s32i loc(#loc464)
                %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc465)
                %63 = cir.const #cir.int<1> : !s32i loc(#loc466)
                %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc466)
                %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc849)
                cir.if %65 {
                  cir.break loc(#loc468)
                } loc(#loc850)
              } loc(#loc848)
              %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc469)
              %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc470)
              %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc471)
              %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc472)
              cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc851)
              cir.scope {
                %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc477)
                %61 = cir.const #cir.int<1> : !s32i loc(#loc478)
                %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc478)
                %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc853)
                cir.if %63 {
                  cir.break loc(#loc480)
                } loc(#loc854)
              } loc(#loc852)
              %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc481)
              %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc482)
              %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc482)
              %40 = cir.const #cir.int<3> : !s32i loc(#loc483)
              %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc483)
              %42 = cir.const #cir.int<4> : !u64i loc(#loc483)
              %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc483)
              %44 = cir.const #cir.int<2> : !s32i loc(#loc483)
              %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc483)
              %46 = cir.binop(add, %43, %45) : !u64i loc(#loc483)
              %47 = cir.const #cir.int<1> : !s32i loc(#loc484)
              %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc484)
              %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc855)
              %50 = cir.const #cir.int<0> : !s32i loc(#loc485)
              %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc486)
              %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc486)
              cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc856)
              cir.scope {
                %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc491)
                %61 = cir.const #cir.int<1> : !s32i loc(#loc492)
                %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc492)
                %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc858)
                %64 = cir.ternary(%63, true {
                  %65 = cir.const #true loc(#loc493)
                  cir.yield %65 : !cir.bool loc(#loc493)
                }, false {
                  %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc494)
                  %66 = cir.const #cir.int<0> : !s32i loc(#loc495)
                  %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc859)
                  %68 = cir.ternary(%67, true {
                    %69 = cir.const #true loc(#loc493)
                    cir.yield %69 : !cir.bool loc(#loc493)
                  }, false {
                    %69 = cir.const #false loc(#loc493)
                    cir.yield %69 : !cir.bool loc(#loc493)
                  }) : (!cir.bool) -> !cir.bool loc(#loc493)
                  cir.yield %68 : !cir.bool loc(#loc493)
                }) : (!cir.bool) -> !cir.bool loc(#loc493)
                cir.if %64 {
                  cir.break loc(#loc497)
                } loc(#loc860)
              } loc(#loc857)
              %53 = cir.const #cir.int<0> : !s32i loc(#loc498)
              %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc498)
              %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc499)
              %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc500)
              %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc500)
              cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc861)
              %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc501)
              %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc502)
              cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc862)
              cir.yield loc(#loc422)
            } while {
              %15 = cir.const #cir.int<0> : !s32i loc(#loc505)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc505)
              cir.condition(%16) loc(#loc505)
            } loc(#loc832)
          } loc(#loc832)
          cir.scope {
            %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc508)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc509)
            %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc509)
            %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc864)
            cir.if %18 {
              %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc511)
              %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc512)
            } loc(#loc865)
          } loc(#loc863)
          cir.scope {
            %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc515)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc516)
            %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc516)
            %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc867)
            cir.if %18 {
              %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc518)
              %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc519)
            } loc(#loc868)
          } loc(#loc866)
        } loc(#loc826)
      } loc(#loc825)
    } loc(#loc823)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc870)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc522)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc522)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc873)
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc874)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc874)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc874)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc533)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc534)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc876)
            %12 = cir.ternary(%11, true {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc536)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc537)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc877)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc535)
                cir.yield %17 : !cir.bool loc(#loc535)
              }, false {
                %17 = cir.const #false loc(#loc535)
                cir.yield %17 : !cir.bool loc(#loc535)
              }) : (!cir.bool) -> !cir.bool loc(#loc535)
              cir.yield %16 : !cir.bool loc(#loc535)
            }, false {
              %13 = cir.const #false loc(#loc535)
              cir.yield %13 : !cir.bool loc(#loc535)
            }) : (!cir.bool) -> !cir.bool loc(#loc535)
            cir.if %12 {
              %13 = cir.const #cir.int<1> : !s32i loc(#loc542)
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc543)
              %15 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc544)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc544)
              cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc879)
              cir.scope {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc547)
                cir.store %17, %6 : !s32i, !cir.ptr<!s32i> loc(#loc881)
                cir.for : cond {
                  %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc549)
                  %19 = cir.const #cir.int<10> : !s32i loc(#loc550)
                  %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc882)
                  cir.condition(%20) loc(#loc551)
                } body {
                  cir.scope {
                    %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc553)
                    %19 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc554)
                    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc554)
                    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc554)
                    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc555)
                  } loc(#loc883)
                  cir.yield loc(#loc546)
                } step {
                  %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc556)
                  %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc557)
                  cir.store %19, %6 : !s32i, !cir.ptr<!s32i> loc(#loc884)
                  cir.yield loc(#loc880)
                } loc(#loc880)
              } loc(#loc880)
            } else {
              %13 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc558)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc558)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc559)
            } loc(#loc878)
          } loc(#loc875)
        } loc(#loc872)
      } loc(#loc871)
    } loc(#loc869)
    cir.return loc(#loc398)
  } loc(#loc820)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc886)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc564)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc565)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc887)
    cir.scope {
      %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc889)
      %4 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc569)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc569)
      cir.if %5 {
        %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc574)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc574)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc575)
      } else {
        %6 = cir.const #cir.int<7> : !s32i loc(#loc576)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc891)
      } loc(#loc890)
    } loc(#loc888)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc893)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc580)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc580)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc896)
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc897)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc897)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc897)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc591)
            %10 = cir.const #cir.int<10> : !s32i loc(#loc592)
            %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc899)
            cir.if %11 {
              %12 = cir.const #cir.int<1> : !s32i loc(#loc596)
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc597)
              %14 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc598)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc598)
              cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc901)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc601)
                cir.store %16, %6 : !s32i, !cir.ptr<!s32i> loc(#loc903)
                cir.for : cond {
                  %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc603)
                  %18 = cir.const #cir.int<10> : !s32i loc(#loc604)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc904)
                  cir.condition(%19) loc(#loc605)
                } body {
                  cir.scope {
                    %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc607)
                    %18 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc608)
                    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc608)
                    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc608)
                    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc609)
                  } loc(#loc905)
                  cir.yield loc(#loc600)
                } step {
                  %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc610)
                  %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc611)
                  cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc906)
                  cir.yield loc(#loc902)
                } loc(#loc902)
              } loc(#loc902)
            } else {
              %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc612)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc612)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc613)
            } loc(#loc900)
          } loc(#loc898)
        } loc(#loc895)
      } loc(#loc894)
    } loc(#loc892)
    cir.return loc(#loc561)
  } loc(#loc885)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc908)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc618)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc619)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc909)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc911)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc623)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc623)
      cir.if %5 {
        %6 = cir.const #cir.int<7> : !s32i loc(#loc626)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc913)
      } loc(#loc912)
    } loc(#loc910)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc915)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc630)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc630)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc918)
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc919)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc919)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc919)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc641)
            %10 = cir.const #cir.int<10> : !s32i loc(#loc642)
            %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc921)
            cir.if %11 {
              %12 = cir.const #cir.int<1> : !s32i loc(#loc646)
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc647)
              %14 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc648)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc648)
              cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc923)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc651)
                cir.store %16, %6 : !s32i, !cir.ptr<!s32i> loc(#loc925)
                cir.for : cond {
                  %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc653)
                  %18 = cir.const #cir.int<10> : !s32i loc(#loc654)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc926)
                  cir.condition(%19) loc(#loc655)
                } body {
                  cir.scope {
                    %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc657)
                    %18 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc658)
                    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc658)
                    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc658)
                    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc659)
                  } loc(#loc927)
                  cir.yield loc(#loc650)
                } step {
                  %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc660)
                  %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc661)
                  cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc928)
                  cir.yield loc(#loc924)
                } loc(#loc924)
              } loc(#loc924)
            } else {
              %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc662)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc662)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc663)
            } loc(#loc922)
          } loc(#loc920)
        } loc(#loc917)
      } loc(#loc916)
    } loc(#loc914)
    cir.return loc(#loc615)
  } loc(#loc907)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":152:27)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":57:1)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":156:1)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":59:5)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":59:9)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":61:13)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":61:12)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":61:5)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":62:5)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":133:5)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":62:8)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":62:26)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":63:5)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":64:9)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":132:9)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":69:13)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":69:17)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":70:13)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":70:32)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":71:13)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":71:35)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":72:13)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":72:35)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":73:13)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":73:45)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":74:13)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":117:21)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":84:39)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":84:48)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":84:61)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":84:32)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":84:17)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":84:72)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":85:17)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":88:17)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":85:21)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":85:37)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":86:17)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":87:21)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":89:24)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":89:25)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":89:34)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":89:37)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":89:51)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":89:17)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":89:52)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":90:38)
#loc68 = loc("/usr/include/netinet/in.h":249:5)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":90:17)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":91:43)
#loc71 = loc("/usr/include/netinet/in.h":251:20)
#loc72 = loc("/usr/include/netinet/in.h":33:15)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":91:17)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":92:42)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":92:36)
#loc76 = loc("/usr/include/netinet/in.h":250:15)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":92:17)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":92:50)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":93:17)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":96:17)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":93:26)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":93:58)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":93:59)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":93:68)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":93:82)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":93:21)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":93:88)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":94:17)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":95:21)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":97:17)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":100:17)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":97:28)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":97:42)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":97:21)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":97:61)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":98:17)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":99:21)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":101:39)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":101:53)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":101:59)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":101:32)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":101:17)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":101:63)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":102:17)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":105:17)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":102:21)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":102:37)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":103:17)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":104:21)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":107:35)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":107:49)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":107:62)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":107:80)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":107:83)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":107:30)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":107:17)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":107:84)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":108:17)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":111:17)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":108:21)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":108:35)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":108:48)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":108:51)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":108:65)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":109:17)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":110:21)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":113:43)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":113:29)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":113:17)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":115:29)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":115:24)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":115:17)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":115:40)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":117:20)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":118:13)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":121:13)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":118:17)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":118:33)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":119:13)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":120:30)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":120:17)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":122:13)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":125:13)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":122:17)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":122:33)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":123:13)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":124:30)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":124:17)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":134:5)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":155:5)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":134:8)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":134:26)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":135:5)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":136:9)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":154:9)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":137:13)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":137:17)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":138:13)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":138:34)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":141:13)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":153:13)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":141:17)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":141:24)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":142:13)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":149:13)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":151:13)
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":143:32)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":143:24)
#loc169 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":143:17)
#loc170 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":145:17)
#loc171 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":148:17)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":145:25)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":145:21)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":145:28)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":145:32)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":145:30)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":146:17)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":147:41)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":147:34)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":147:21)
#loc181 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":145:37)
#loc182 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":145:36)
#loc183 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":152:17)
#loc184 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":446:1)
#loc185 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":452:1)
#loc186 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":448:5)
#loc187 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":448:14)
#loc188 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":449:5)
#loc189 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":449:14)
#loc190 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":450:5)
#loc191 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":450:14)
#loc192 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":451:5)
#loc193 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":451:14)
#loc194 = loc("/usr/include/stdlib.h":575:1)
#loc195 = loc("/usr/include/stdlib.h":575:41)
#loc196 = loc("/usr/include/time.h":76:1)
#loc197 = loc("/usr/include/time.h":76:38)
#loc198 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":468:15)
#loc199 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":470:15)
#loc200 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":473:15)
#loc201 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":475:15)
#loc202 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":463:1)
#loc203 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":478:1)
#loc208 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":464:1)
#loc209 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":466:27)
#loc210 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":466:22)
#loc211 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":466:5)
#loc212 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":468:5)
#loc213 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":469:5)
#loc214 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":469:60)
#loc215 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":470:5)
#loc216 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":473:5)
#loc217 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":474:5)
#loc218 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":474:59)
#loc219 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":475:5)
#loc220 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":477:12)
#loc221 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":477:5)
#loc222 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":45:1)
#loc223 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":48:1)
#loc224 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":47:12)
#loc225 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":47:5)
#loc226 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":243:19)
#loc227 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":262:27)
#loc228 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":163:1)
#loc229 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":266:1)
#loc230 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":165:5)
#loc231 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":165:9)
#loc232 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":167:13)
#loc233 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":167:12)
#loc234 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":167:5)
#loc235 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":168:5)
#loc236 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":239:5)
#loc237 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":168:8)
#loc238 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":168:26)
#loc239 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":169:5)
#loc240 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":170:9)
#loc241 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":238:9)
#loc242 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":175:13)
#loc243 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":175:17)
#loc244 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":176:13)
#loc245 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":176:32)
#loc246 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":177:13)
#loc247 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":177:35)
#loc248 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":178:13)
#loc249 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":178:35)
#loc250 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":179:13)
#loc251 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":179:45)
#loc252 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":180:13)
#loc253 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":223:21)
#loc254 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":190:39)
#loc255 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":190:48)
#loc256 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":190:61)
#loc257 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":190:32)
#loc258 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":190:17)
#loc259 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":190:72)
#loc260 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":191:17)
#loc261 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":194:17)
#loc262 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":191:21)
#loc263 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":191:37)
#loc264 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":192:17)
#loc265 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":193:21)
#loc266 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":195:24)
#loc267 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":195:25)
#loc268 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":195:34)
#loc269 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":195:37)
#loc270 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":195:51)
#loc271 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":195:17)
#loc272 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":195:52)
#loc273 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":196:38)
#loc274 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":196:17)
#loc275 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":197:43)
#loc276 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":197:17)
#loc277 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":198:42)
#loc278 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":198:36)
#loc279 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":198:17)
#loc280 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":198:50)
#loc281 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":199:17)
#loc282 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":202:17)
#loc283 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":199:26)
#loc284 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":199:58)
#loc285 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":199:59)
#loc286 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":199:68)
#loc287 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":199:82)
#loc288 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":199:21)
#loc289 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":199:88)
#loc290 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":200:17)
#loc291 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":201:21)
#loc292 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":203:17)
#loc293 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":206:17)
#loc294 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":203:28)
#loc295 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":203:42)
#loc296 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":203:21)
#loc297 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":203:61)
#loc298 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":204:17)
#loc299 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":205:21)
#loc300 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":207:39)
#loc301 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":207:53)
#loc302 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":207:59)
#loc303 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":207:32)
#loc304 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":207:17)
#loc305 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":207:63)
#loc306 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":208:17)
#loc307 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":211:17)
#loc308 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":208:21)
#loc309 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":208:37)
#loc310 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":209:17)
#loc311 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":210:21)
#loc312 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":213:35)
#loc313 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":213:49)
#loc314 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":213:62)
#loc315 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":213:80)
#loc316 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":213:83)
#loc317 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":213:30)
#loc318 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":213:17)
#loc319 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":213:84)
#loc320 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":214:17)
#loc321 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":217:17)
#loc322 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":214:21)
#loc323 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":214:35)
#loc324 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":214:48)
#loc325 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":214:51)
#loc326 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":214:65)
#loc327 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":215:17)
#loc328 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":216:21)
#loc329 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":219:43)
#loc330 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":219:29)
#loc331 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":219:17)
#loc332 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":221:29)
#loc333 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":221:24)
#loc334 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":221:17)
#loc335 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":221:40)
#loc336 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":223:20)
#loc337 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":224:13)
#loc338 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":227:13)
#loc339 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":224:17)
#loc340 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":224:33)
#loc341 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":225:13)
#loc342 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":226:30)
#loc343 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":226:17)
#loc344 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":228:13)
#loc345 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":231:13)
#loc346 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":228:17)
#loc347 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":228:33)
#loc348 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":229:13)
#loc349 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":230:30)
#loc350 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":230:17)
#loc351 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":240:5)
#loc352 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":265:5)
#loc353 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":240:8)
#loc354 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":240:27)
#loc355 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":241:5)
#loc356 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":244:5)
#loc357 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":246:5)
#loc358 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":243:9)
#loc359 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":247:9)
#loc360 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":264:9)
#loc361 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":248:13)
#loc362 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":248:17)
#loc363 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":249:13)
#loc364 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":249:34)
#loc365 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":251:13)
#loc366 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":263:13)
#loc367 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":251:17)
#loc368 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":251:25)
#loc369 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":251:27)
#loc370 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":251:30)
#loc371 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":251:38)
#loc372 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":251:40)
#loc373 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":252:13)
#loc374 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":259:13)
#loc375 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":261:13)
#loc376 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":253:32)
#loc377 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":253:24)
#loc378 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":253:17)
#loc379 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":255:17)
#loc380 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":258:17)
#loc381 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":255:25)
#loc382 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":255:21)
#loc383 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":255:28)
#loc384 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":255:32)
#loc385 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":255:30)
#loc386 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":256:17)
#loc387 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":257:41)
#loc388 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":257:34)
#loc389 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":257:21)
#loc390 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":255:37)
#loc391 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":255:36)
#loc392 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":262:17)
#loc393 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":50:1)
#loc394 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":53:1)
#loc395 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":52:12)
#loc396 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":52:5)
#loc397 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":269:1)
#loc398 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":367:1)
#loc399 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":271:5)
#loc400 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":271:9)
#loc401 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":273:13)
#loc402 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":273:12)
#loc403 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":273:5)
#loc404 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":274:5)
#loc405 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":345:5)
#loc406 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":274:8)
#loc407 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":274:26)
#loc408 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":275:5)
#loc409 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":276:9)
#loc410 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":344:9)
#loc411 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":281:13)
#loc412 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":281:17)
#loc413 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":282:13)
#loc414 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":282:32)
#loc415 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":283:13)
#loc416 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":283:35)
#loc417 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":284:13)
#loc418 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":284:35)
#loc419 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":285:13)
#loc420 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":285:45)
#loc421 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":286:13)
#loc422 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":329:21)
#loc423 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":296:39)
#loc424 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":296:48)
#loc425 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":296:61)
#loc426 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":296:32)
#loc427 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":296:17)
#loc428 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":296:72)
#loc429 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":297:17)
#loc430 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":300:17)
#loc431 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":297:21)
#loc432 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":297:37)
#loc433 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":298:17)
#loc434 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":299:21)
#loc435 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":301:24)
#loc436 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":301:25)
#loc437 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":301:34)
#loc438 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":301:37)
#loc439 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":301:51)
#loc440 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":301:17)
#loc441 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":301:52)
#loc442 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":302:38)
#loc443 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":302:17)
#loc444 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":303:43)
#loc445 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":303:17)
#loc446 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":304:42)
#loc447 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":304:36)
#loc448 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":304:17)
#loc449 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":304:50)
#loc450 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":305:17)
#loc451 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":308:17)
#loc452 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":305:26)
#loc453 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":305:58)
#loc454 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":305:59)
#loc455 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":305:68)
#loc456 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":305:82)
#loc457 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":305:21)
#loc458 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":305:88)
#loc459 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":306:17)
#loc460 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":307:21)
#loc461 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":309:17)
#loc462 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":312:17)
#loc463 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":309:28)
#loc464 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":309:42)
#loc465 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":309:21)
#loc466 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":309:61)
#loc467 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":310:17)
#loc468 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":311:21)
#loc469 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":313:39)
#loc470 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":313:53)
#loc471 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":313:59)
#loc472 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":313:32)
#loc473 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":313:17)
#loc474 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":313:63)
#loc475 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":314:17)
#loc476 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":317:17)
#loc477 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":314:21)
#loc478 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":314:37)
#loc479 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":315:17)
#loc480 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":316:21)
#loc481 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":319:35)
#loc482 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":319:49)
#loc483 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":319:62)
#loc484 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":319:80)
#loc485 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":319:83)
#loc486 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":319:30)
#loc487 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":319:17)
#loc488 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":319:84)
#loc489 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":320:17)
#loc490 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":323:17)
#loc491 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":320:21)
#loc492 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":320:35)
#loc493 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":320:48)
#loc494 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":320:51)
#loc495 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":320:65)
#loc496 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":321:17)
#loc497 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":322:21)
#loc498 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":325:43)
#loc499 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":325:29)
#loc500 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":325:17)
#loc501 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":327:29)
#loc502 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":327:24)
#loc503 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":327:17)
#loc504 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":327:40)
#loc505 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":329:20)
#loc506 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":330:13)
#loc507 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":333:13)
#loc508 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":330:17)
#loc509 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":330:33)
#loc510 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":331:13)
#loc511 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":332:30)
#loc512 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":332:17)
#loc513 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":334:13)
#loc514 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":337:13)
#loc515 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":334:17)
#loc516 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":334:33)
#loc517 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":335:13)
#loc518 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":336:30)
#loc519 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":336:17)
#loc520 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":346:5)
#loc521 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":366:5)
#loc522 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":346:8)
#loc523 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":346:26)
#loc524 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":347:5)
#loc525 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":348:9)
#loc526 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":365:9)
#loc527 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":349:13)
#loc528 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":349:17)
#loc529 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":350:13)
#loc530 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":350:34)
#loc531 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":352:13)
#loc532 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":364:13)
#loc533 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":352:17)
#loc534 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":352:25)
#loc535 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":352:27)
#loc536 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":352:30)
#loc537 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":352:38)
#loc538 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":352:40)
#loc539 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":353:13)
#loc540 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":360:13)
#loc541 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":362:13)
#loc542 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":354:32)
#loc543 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":354:24)
#loc544 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":354:17)
#loc545 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":356:17)
#loc546 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":359:17)
#loc547 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":356:25)
#loc548 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":356:21)
#loc549 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":356:28)
#loc550 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":356:32)
#loc551 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":356:30)
#loc552 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":357:17)
#loc553 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":358:41)
#loc554 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":358:34)
#loc555 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":358:21)
#loc556 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":356:37)
#loc557 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":356:36)
#loc558 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":363:27)
#loc559 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":363:17)
#loc560 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":370:1)
#loc561 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":408:1)
#loc562 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":372:5)
#loc563 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":372:9)
#loc564 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":374:13)
#loc565 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":374:12)
#loc566 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":374:5)
#loc567 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":375:5)
#loc568 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":385:5)
#loc569 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":375:8)
#loc570 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":375:27)
#loc571 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":376:5)
#loc572 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":379:5)
#loc573 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":381:5)
#loc574 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":378:19)
#loc575 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":378:9)
#loc576 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":384:16)
#loc577 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":384:9)
#loc578 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":386:5)
#loc579 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":407:5)
#loc580 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":386:8)
#loc581 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":386:26)
#loc582 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":387:5)
#loc583 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":388:9)
#loc584 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":406:9)
#loc585 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":389:13)
#loc586 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":389:17)
#loc587 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":390:13)
#loc588 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":390:34)
#loc589 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":393:13)
#loc590 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":405:13)
#loc591 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":393:17)
#loc592 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":393:24)
#loc593 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":394:13)
#loc594 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":401:13)
#loc595 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":403:13)
#loc596 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":395:32)
#loc597 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":395:24)
#loc598 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":395:17)
#loc599 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":397:17)
#loc600 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":400:17)
#loc601 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":397:25)
#loc602 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":397:21)
#loc603 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":397:28)
#loc604 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":397:32)
#loc605 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":397:30)
#loc606 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":398:17)
#loc607 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":399:41)
#loc608 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":399:34)
#loc609 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":399:21)
#loc610 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":397:37)
#loc611 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":397:36)
#loc612 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":404:27)
#loc613 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":404:17)
#loc614 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":411:1)
#loc615 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":444:1)
#loc616 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":413:5)
#loc617 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":413:9)
#loc618 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":415:13)
#loc619 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":415:12)
#loc620 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":415:5)
#loc621 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":416:5)
#loc622 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":421:5)
#loc623 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":416:8)
#loc624 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":416:26)
#loc625 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":417:5)
#loc626 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":420:16)
#loc627 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":420:9)
#loc628 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":422:5)
#loc629 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":443:5)
#loc630 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":422:8)
#loc631 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":422:26)
#loc632 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":423:5)
#loc633 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":424:9)
#loc634 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":442:9)
#loc635 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":425:13)
#loc636 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":425:17)
#loc637 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":426:13)
#loc638 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":426:34)
#loc639 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":429:13)
#loc640 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":441:13)
#loc641 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":429:17)
#loc642 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":429:24)
#loc643 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":430:13)
#loc644 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":437:13)
#loc645 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":439:13)
#loc646 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":431:32)
#loc647 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":431:24)
#loc648 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":431:17)
#loc649 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":433:17)
#loc650 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":436:17)
#loc651 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":433:25)
#loc652 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":433:21)
#loc653 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":433:28)
#loc654 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":433:32)
#loc655 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":433:30)
#loc656 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":434:17)
#loc657 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":435:41)
#loc658 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":435:34)
#loc659 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":435:21)
#loc660 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":433:37)
#loc661 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":433:36)
#loc662 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":440:27)
#loc663 = loc("CWE124_Buffer_Underwrite__CWE839_listen_socket_08.c":440:17)
#loc664 = loc(fused[#loc1, #loc2])
#loc665 = loc(fused[#loc3, #loc4])
#loc666 = loc(fused[#loc5, #loc6])
#loc667 = loc(fused[#loc7, #loc8])
#loc668 = loc(fused[#loc9, #loc10])
#loc669 = loc(fused[#loc11, #loc12])
#loc670 = loc(fused[#loc13, #loc14])
#loc671 = loc(fused[#loc15, #loc16])
#loc672 = loc(fused[#loc17, #loc18])
#loc673 = loc(fused[#loc19, #loc20])
#loc674 = loc(fused[#loc22, #loc23])
#loc675 = loc(fused[#loc24, #loc25])
#loc676 = loc(fused[#loc28, #loc26])
#loc677 = loc(fused[#loc29, #loc30])
#loc678 = loc(fused[#loc31, #loc32])
#loc679 = loc(fused[#loc33, #loc30])
#loc680 = loc(fused[#loc34, #loc35])
#loc681 = loc(fused[#loc36, #loc37])
#loc682 = loc(fused[#loc38, #loc39])
#loc683 = loc(fused[#loc40, #loc41])
#loc684 = loc(fused[#loc42, #loc43])
#loc685 = loc(fused[#loc44, #loc45])
#loc686 = loc(fused[#loc46, #loc47])
#loc687 = loc(fused[#loc52, #loc53])
#loc688 = loc(fused[#loc54, #loc55])
#loc689 = loc(fused[#loc56, #loc57])
#loc690 = loc(fused[#loc58, #loc55])
#loc691 = loc(fused[#loc60, #loc61])
#loc692 = loc(fused[#loc63, #loc64])
#loc693 = loc(fused[#loc65, #loc66])
#loc694 = loc(fused[#loc69, #loc67])
#loc695 = loc(fused[#loc73, #loc70])
#loc696 = loc(fused[#loc77, #loc78])
#loc697 = loc(fused[#loc79, #loc80])
#loc698 = loc(fused[#loc82, #loc83])
#loc699 = loc(fused[#loc84, #loc85])
#loc700 = loc(fused[#loc86, #loc87])
#loc701 = loc(fused[#loc88, #loc80])
#loc702 = loc(fused[#loc90, #loc91])
#loc703 = loc(fused[#loc94, #loc95])
#loc704 = loc(fused[#loc96, #loc91])
#loc705 = loc(fused[#loc102, #loc103])
#loc706 = loc(fused[#loc104, #loc105])
#loc707 = loc(fused[#loc106, #loc107])
#loc708 = loc(fused[#loc108, #loc105])
#loc709 = loc(fused[#loc112, #loc113])
#loc710 = loc(fused[#loc116, #loc117])
#loc711 = loc(fused[#loc118, #loc119])
#loc712 = loc(fused[#loc120, #loc121])
#loc713 = loc(fused[#loc123, #loc124])
#loc714 = loc(fused[#loc125, #loc119])
#loc715 = loc(fused[#loc129, #loc127])
#loc716 = loc(fused[#loc132, #loc133])
#loc717 = loc(fused[#loc135, #loc136])
#loc718 = loc(fused[#loc137, #loc138])
#loc719 = loc(fused[#loc139, #loc136])
#loc720 = loc(fused[#loc142, #loc143])
#loc721 = loc(fused[#loc144, #loc145])
#loc722 = loc(fused[#loc146, #loc143])
#loc723 = loc(fused[#loc149, #loc150])
#loc724 = loc(fused[#loc151, #loc152])
#loc725 = loc(fused[#loc153, #loc150])
#loc726 = loc(fused[#loc154, #loc155])
#loc727 = loc(fused[#loc156, #loc157])
#loc728 = loc(fused[#loc158, #loc159])
#loc729 = loc(fused[#loc160, #loc161])
#loc730 = loc(fused[#loc162, #loc163])
#loc731 = loc(fused[#loc164, #loc165, #loc166, #loc161])
#loc732 = loc(fused[#loc169, #loc167])
#loc733 = loc(fused[#loc170, #loc171])
#loc734 = loc(fused[#loc173, #loc172])
#loc735 = loc(fused[#loc174, #loc175])
#loc736 = loc(fused[#loc177, #loc171])
#loc737 = loc(fused[#loc182, #loc181])
#loc738 = loc(fused[#loc184, #loc185])
#loc739 = loc(fused[#loc186, #loc187])
#loc740 = loc(fused[#loc188, #loc189])
#loc741 = loc(fused[#loc190, #loc191])
#loc742 = loc(fused[#loc192, #loc193])
#loc743 = loc(fused[#loc194, #loc195])
#loc744 = loc(fused[#loc196, #loc197])
#loc745 = loc(fused[#loc202, #loc203])
#loc748 = loc(fused[#loc213, #loc214])
#loc749 = loc(fused[#loc217, #loc218])
#loc750 = loc(fused[#loc221, #loc220])
#loc751 = loc(fused[#loc222, #loc223])
#loc752 = loc(fused[#loc225, #loc224])
#loc753 = loc(fused[#loc228, #loc229])
#loc754 = loc(fused[#loc230, #loc231])
#loc755 = loc(fused[#loc234, #loc232])
#loc756 = loc(fused[#loc235, #loc236])
#loc757 = loc(fused[#loc237, #loc238])
#loc758 = loc(fused[#loc239, #loc236])
#loc759 = loc(fused[#loc240, #loc241])
#loc760 = loc(fused[#loc242, #loc243])
#loc761 = loc(fused[#loc244, #loc245])
#loc762 = loc(fused[#loc246, #loc247])
#loc763 = loc(fused[#loc248, #loc249])
#loc764 = loc(fused[#loc250, #loc251])
#loc765 = loc(fused[#loc252, #loc253])
#loc766 = loc(fused[#loc258, #loc259])
#loc767 = loc(fused[#loc260, #loc261])
#loc768 = loc(fused[#loc262, #loc263])
#loc769 = loc(fused[#loc264, #loc261])
#loc770 = loc(fused[#loc266, #loc267])
#loc771 = loc(fused[#loc269, #loc270])
#loc772 = loc(fused[#loc271, #loc272])
#loc773 = loc(fused[#loc274, #loc273])
#loc774 = loc(fused[#loc276, #loc275])
#loc775 = loc(fused[#loc279, #loc280])
#loc776 = loc(fused[#loc281, #loc282])
#loc777 = loc(fused[#loc284, #loc285])
#loc778 = loc(fused[#loc286, #loc287])
#loc779 = loc(fused[#loc288, #loc289])
#loc780 = loc(fused[#loc290, #loc282])
#loc781 = loc(fused[#loc292, #loc293])
#loc782 = loc(fused[#loc296, #loc297])
#loc783 = loc(fused[#loc298, #loc293])
#loc784 = loc(fused[#loc304, #loc305])
#loc785 = loc(fused[#loc306, #loc307])
#loc786 = loc(fused[#loc308, #loc309])
#loc787 = loc(fused[#loc310, #loc307])
#loc788 = loc(fused[#loc314, #loc315])
#loc789 = loc(fused[#loc318, #loc319])
#loc790 = loc(fused[#loc320, #loc321])
#loc791 = loc(fused[#loc322, #loc323])
#loc792 = loc(fused[#loc325, #loc326])
#loc793 = loc(fused[#loc327, #loc321])
#loc794 = loc(fused[#loc331, #loc329])
#loc795 = loc(fused[#loc334, #loc335])
#loc796 = loc(fused[#loc337, #loc338])
#loc797 = loc(fused[#loc339, #loc340])
#loc798 = loc(fused[#loc341, #loc338])
#loc799 = loc(fused[#loc344, #loc345])
#loc800 = loc(fused[#loc346, #loc347])
#loc801 = loc(fused[#loc348, #loc345])
#loc802 = loc(fused[#loc351, #loc352])
#loc803 = loc(fused[#loc353, #loc354])
#loc804 = loc(fused[#loc355, #loc356, #loc357, #loc352])
#loc805 = loc(fused[#loc359, #loc360])
#loc806 = loc(fused[#loc361, #loc362])
#loc807 = loc(fused[#loc363, #loc364])
#loc808 = loc(fused[#loc365, #loc366])
#loc809 = loc(fused[#loc367, #loc368])
#loc810 = loc(fused[#loc370, #loc372])
#loc811 = loc(fused[#loc373, #loc374, #loc375, #loc366])
#loc812 = loc(fused[#loc378, #loc376])
#loc813 = loc(fused[#loc379, #loc380])
#loc814 = loc(fused[#loc382, #loc381])
#loc815 = loc(fused[#loc383, #loc384])
#loc816 = loc(fused[#loc386, #loc380])
#loc817 = loc(fused[#loc391, #loc390])
#loc818 = loc(fused[#loc393, #loc394])
#loc819 = loc(fused[#loc396, #loc395])
#loc820 = loc(fused[#loc397, #loc398])
#loc821 = loc(fused[#loc399, #loc400])
#loc822 = loc(fused[#loc403, #loc401])
#loc823 = loc(fused[#loc404, #loc405])
#loc824 = loc(fused[#loc406, #loc407])
#loc825 = loc(fused[#loc408, #loc405])
#loc826 = loc(fused[#loc409, #loc410])
#loc827 = loc(fused[#loc411, #loc412])
#loc828 = loc(fused[#loc413, #loc414])
#loc829 = loc(fused[#loc415, #loc416])
#loc830 = loc(fused[#loc417, #loc418])
#loc831 = loc(fused[#loc419, #loc420])
#loc832 = loc(fused[#loc421, #loc422])
#loc833 = loc(fused[#loc427, #loc428])
#loc834 = loc(fused[#loc429, #loc430])
#loc835 = loc(fused[#loc431, #loc432])
#loc836 = loc(fused[#loc433, #loc430])
#loc837 = loc(fused[#loc435, #loc436])
#loc838 = loc(fused[#loc438, #loc439])
#loc839 = loc(fused[#loc440, #loc441])
#loc840 = loc(fused[#loc443, #loc442])
#loc841 = loc(fused[#loc445, #loc444])
#loc842 = loc(fused[#loc448, #loc449])
#loc843 = loc(fused[#loc450, #loc451])
#loc844 = loc(fused[#loc453, #loc454])
#loc845 = loc(fused[#loc455, #loc456])
#loc846 = loc(fused[#loc457, #loc458])
#loc847 = loc(fused[#loc459, #loc451])
#loc848 = loc(fused[#loc461, #loc462])
#loc849 = loc(fused[#loc465, #loc466])
#loc850 = loc(fused[#loc467, #loc462])
#loc851 = loc(fused[#loc473, #loc474])
#loc852 = loc(fused[#loc475, #loc476])
#loc853 = loc(fused[#loc477, #loc478])
#loc854 = loc(fused[#loc479, #loc476])
#loc855 = loc(fused[#loc483, #loc484])
#loc856 = loc(fused[#loc487, #loc488])
#loc857 = loc(fused[#loc489, #loc490])
#loc858 = loc(fused[#loc491, #loc492])
#loc859 = loc(fused[#loc494, #loc495])
#loc860 = loc(fused[#loc496, #loc490])
#loc861 = loc(fused[#loc500, #loc498])
#loc862 = loc(fused[#loc503, #loc504])
#loc863 = loc(fused[#loc506, #loc507])
#loc864 = loc(fused[#loc508, #loc509])
#loc865 = loc(fused[#loc510, #loc507])
#loc866 = loc(fused[#loc513, #loc514])
#loc867 = loc(fused[#loc515, #loc516])
#loc868 = loc(fused[#loc517, #loc514])
#loc869 = loc(fused[#loc520, #loc521])
#loc870 = loc(fused[#loc522, #loc523])
#loc871 = loc(fused[#loc524, #loc521])
#loc872 = loc(fused[#loc525, #loc526])
#loc873 = loc(fused[#loc527, #loc528])
#loc874 = loc(fused[#loc529, #loc530])
#loc875 = loc(fused[#loc531, #loc532])
#loc876 = loc(fused[#loc533, #loc534])
#loc877 = loc(fused[#loc536, #loc538])
#loc878 = loc(fused[#loc539, #loc540, #loc541, #loc532])
#loc879 = loc(fused[#loc544, #loc542])
#loc880 = loc(fused[#loc545, #loc546])
#loc881 = loc(fused[#loc548, #loc547])
#loc882 = loc(fused[#loc549, #loc550])
#loc883 = loc(fused[#loc552, #loc546])
#loc884 = loc(fused[#loc557, #loc556])
#loc885 = loc(fused[#loc560, #loc561])
#loc886 = loc(fused[#loc562, #loc563])
#loc887 = loc(fused[#loc566, #loc564])
#loc888 = loc(fused[#loc567, #loc568])
#loc889 = loc(fused[#loc569, #loc570])
#loc890 = loc(fused[#loc571, #loc572, #loc573, #loc568])
#loc891 = loc(fused[#loc577, #loc576])
#loc892 = loc(fused[#loc578, #loc579])
#loc893 = loc(fused[#loc580, #loc581])
#loc894 = loc(fused[#loc582, #loc579])
#loc895 = loc(fused[#loc583, #loc584])
#loc896 = loc(fused[#loc585, #loc586])
#loc897 = loc(fused[#loc587, #loc588])
#loc898 = loc(fused[#loc589, #loc590])
#loc899 = loc(fused[#loc591, #loc592])
#loc900 = loc(fused[#loc593, #loc594, #loc595, #loc590])
#loc901 = loc(fused[#loc598, #loc596])
#loc902 = loc(fused[#loc599, #loc600])
#loc903 = loc(fused[#loc602, #loc601])
#loc904 = loc(fused[#loc603, #loc604])
#loc905 = loc(fused[#loc606, #loc600])
#loc906 = loc(fused[#loc611, #loc610])
#loc907 = loc(fused[#loc614, #loc615])
#loc908 = loc(fused[#loc616, #loc617])
#loc909 = loc(fused[#loc620, #loc618])
#loc910 = loc(fused[#loc621, #loc622])
#loc911 = loc(fused[#loc623, #loc624])
#loc912 = loc(fused[#loc625, #loc622])
#loc913 = loc(fused[#loc627, #loc626])
#loc914 = loc(fused[#loc628, #loc629])
#loc915 = loc(fused[#loc630, #loc631])
#loc916 = loc(fused[#loc632, #loc629])
#loc917 = loc(fused[#loc633, #loc634])
#loc918 = loc(fused[#loc635, #loc636])
#loc919 = loc(fused[#loc637, #loc638])
#loc920 = loc(fused[#loc639, #loc640])
#loc921 = loc(fused[#loc641, #loc642])
#loc922 = loc(fused[#loc643, #loc644, #loc645, #loc640])
#loc923 = loc(fused[#loc648, #loc646])
#loc924 = loc(fused[#loc649, #loc650])
#loc925 = loc(fused[#loc652, #loc651])
#loc926 = loc(fused[#loc653, #loc654])
#loc927 = loc(fused[#loc656, #loc650])
#loc928 = loc(fused[#loc661, #loc660])
