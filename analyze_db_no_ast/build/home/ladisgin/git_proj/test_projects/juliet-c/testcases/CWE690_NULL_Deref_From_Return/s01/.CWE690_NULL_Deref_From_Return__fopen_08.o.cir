!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__fopen_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc91)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc3)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc4)
  cir.func private  @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc92)
  cir.func no_proto  @CWE690_NULL_Deref_From_Return__fopen_08_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc94)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc95)
    %2 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc13)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc3)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc3)
    %5 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc4)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc4)
    %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc13)
    cir.store %7, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc96)
    cir.scope {
      %8 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc98)
      %9 = cir.call %8() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc18)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc18)
      cir.if %10 {
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc21)
        %12 = cir.call @fclose(%11) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc22)
      } loc(#loc99)
    } loc(#loc97)
    cir.return loc(#loc8)
  } loc(#loc93)
  cir.func no_proto  @CWE690_NULL_Deref_From_Return__fopen_08_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc101)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc25)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc102)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc27)
    cir.return loc(#loc24)
  } loc(#loc100)
  cir.func no_proto internal private  @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc30)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc31)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc104)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    cir.return %2 : !s32i loc(#loc104)
  } loc(#loc103)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc105)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc35)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc107)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc40)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc108)
    %2 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc42)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc43)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc43)
    %5 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc44)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc44)
    %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc42)
    cir.store %7, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc109)
    cir.scope {
      %8 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc111)
      %9 = cir.call %8() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc49)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc49)
      cir.if %10 {
        %11 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc35)
        %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc35)
        cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc54)
      } else {
        cir.scope {
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc57)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc58)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc58)
          %14 = cir.cmp(ne, %11, %13) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc114)
          %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc59)
          cir.if %15 {
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc61)
            %17 = cir.call @fclose(%16) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc62)
          } loc(#loc115)
        } loc(#loc113)
      } loc(#loc112)
    } loc(#loc110)
    cir.return loc(#loc37)
  } loc(#loc106)
  cir.func no_proto internal private  @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc64)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc65)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc117)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    cir.return %2 : !s32i loc(#loc117)
  } loc(#loc116)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc119)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc71)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc120)
    %2 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc73)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc74)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc74)
    %5 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc75)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc75)
    %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc73)
    cir.store %7, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc121)
    cir.scope {
      %8 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc123)
      %9 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc80)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc80)
      cir.if %10 {
        cir.scope {
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc85)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc86)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc86)
          %14 = cir.cmp(ne, %11, %13) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc126)
          %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc87)
          cir.if %15 {
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc89)
            %17 = cir.call @fclose(%16) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc90)
          } loc(#loc127)
        } loc(#loc125)
      } loc(#loc124)
    } loc(#loc122)
    cir.return loc(#loc68)
  } loc(#loc118)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__fopen_08.c":0:0)
#loc1 = loc("/usr/include/stdio.h":264:1)
#loc2 = loc("/usr/include/stdio.h":266:3)
#loc3 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":40:18)
#loc4 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":40:30)
#loc5 = loc("/usr/include/stdio.h":184:1)
#loc6 = loc("/usr/include/stdio.h":184:36)
#loc7 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":34:1)
#loc8 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":46:1)
#loc9 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":36:5)
#loc10 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":36:12)
#loc11 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":38:12)
#loc12 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":38:5)
#loc13 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":40:12)
#loc14 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":40:5)
#loc15 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":40:34)
#loc16 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":41:5)
#loc17 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":45:5)
#loc18 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":41:8)
#loc19 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":41:26)
#loc20 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":42:5)
#loc21 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":44:16)
#loc22 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":44:9)
#loc23 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":93:1)
#loc24 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":97:1)
#loc25 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":95:5)
#loc26 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":95:14)
#loc27 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":96:5)
#loc28 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":96:14)
#loc29 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":22:1)
#loc30 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":25:1)
#loc31 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":24:12)
#loc32 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":24:5)
#loc33 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc34 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc35 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":63:19)
#loc36 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":53:1)
#loc37 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":73:1)
#loc38 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":55:5)
#loc39 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":55:12)
#loc40 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":57:12)
#loc41 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":57:5)
#loc42 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":59:12)
#loc43 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":59:18)
#loc44 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":59:30)
#loc45 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":59:5)
#loc46 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":59:34)
#loc47 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":60:5)
#loc48 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":72:5)
#loc49 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":60:8)
#loc50 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":60:27)
#loc51 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":61:5)
#loc52 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":64:5)
#loc53 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":66:5)
#loc54 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":63:9)
#loc55 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":68:9)
#loc56 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":71:9)
#loc57 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":68:13)
#loc58 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":68:21)
#loc59 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":68:18)
#loc60 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":69:9)
#loc61 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":70:20)
#loc62 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":70:13)
#loc63 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":27:1)
#loc64 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":30:1)
#loc65 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":29:12)
#loc66 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":29:5)
#loc67 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":76:1)
#loc68 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":91:1)
#loc69 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":78:5)
#loc70 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":78:12)
#loc71 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":80:12)
#loc72 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":80:5)
#loc73 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":82:12)
#loc74 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":82:18)
#loc75 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":82:30)
#loc76 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":82:5)
#loc77 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":82:34)
#loc78 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":83:5)
#loc79 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":90:5)
#loc80 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":83:8)
#loc81 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":83:26)
#loc82 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":84:5)
#loc83 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":86:9)
#loc84 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":89:9)
#loc85 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":86:13)
#loc86 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":86:21)
#loc87 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":86:18)
#loc88 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":87:9)
#loc89 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":88:20)
#loc90 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":88:13)
#loc91 = loc(fused[#loc1, #loc2])
#loc92 = loc(fused[#loc5, #loc6])
#loc93 = loc(fused[#loc7, #loc8])
#loc94 = loc(fused[#loc9, #loc10])
#loc95 = loc(fused[#loc12, #loc11])
#loc96 = loc(fused[#loc14, #loc15])
#loc97 = loc(fused[#loc16, #loc17])
#loc98 = loc(fused[#loc18, #loc19])
#loc99 = loc(fused[#loc20, #loc17])
#loc100 = loc(fused[#loc23, #loc24])
#loc101 = loc(fused[#loc25, #loc26])
#loc102 = loc(fused[#loc27, #loc28])
#loc103 = loc(fused[#loc29, #loc30])
#loc104 = loc(fused[#loc32, #loc31])
#loc105 = loc(fused[#loc33, #loc34])
#loc106 = loc(fused[#loc36, #loc37])
#loc107 = loc(fused[#loc38, #loc39])
#loc108 = loc(fused[#loc41, #loc40])
#loc109 = loc(fused[#loc45, #loc46])
#loc110 = loc(fused[#loc47, #loc48])
#loc111 = loc(fused[#loc49, #loc50])
#loc112 = loc(fused[#loc51, #loc52, #loc53, #loc48])
#loc113 = loc(fused[#loc55, #loc56])
#loc114 = loc(fused[#loc57, #loc58])
#loc115 = loc(fused[#loc60, #loc56])
#loc116 = loc(fused[#loc63, #loc64])
#loc117 = loc(fused[#loc66, #loc65])
#loc118 = loc(fused[#loc67, #loc68])
#loc119 = loc(fused[#loc69, #loc70])
#loc120 = loc(fused[#loc72, #loc71])
#loc121 = loc(fused[#loc76, #loc77])
#loc122 = loc(fused[#loc78, #loc79])
#loc123 = loc(fused[#loc80, #loc81])
#loc124 = loc(fused[#loc82, #loc79])
#loc125 = loc(fused[#loc83, #loc84])
#loc126 = loc(fused[#loc85, #loc86])
#loc127 = loc(fused[#loc88, #loc84])
