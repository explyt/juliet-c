!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE685_Function_Call_With_Incorrect_Number_of_Arguments/CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc72)
  cir.func private @sprintf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc73)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s %s\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc5)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"AAA\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc6)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc74)
  cir.func no_proto @CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc76)
    cir.br ^bb1 loc(#loc77)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc78)
    %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc78)
    %3 = cir.call %2() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc15)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc15)
    cir.brcond %4 ^bb2, ^bb5 loc(#loc79)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc80)
  ^bb3:  // pred: ^bb2
    %5 = cir.get_global @sprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc20)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc21)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc5)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc5)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc6)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc6)
    %11 = cir.call @sprintf(%6, %8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc20)
    %12 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc22)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc23)
    cir.br ^bb4 loc(#loc19)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc14)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc14)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc10)
  } loc(#loc75)
  cir.func no_proto @CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc82)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc26)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc83)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc28)
    cir.return loc(#loc25)
  } loc(#loc81)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc84)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc32)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc86)
    cir.br ^bb1 loc(#loc87)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc88)
    %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc88)
    %3 = cir.call %2() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc39)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc39)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc89)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc32)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc32)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc44)
    cir.br ^bb6 loc(#loc42)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc90)
  ^bb4:  // pred: ^bb3
    %7 = cir.get_global @sprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc47)
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc48)
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc49)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc49)
    %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc50)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc50)
    %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc51)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc51)
    %15 = cir.call @sprintf(%8, %10, %12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc47)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    cir.br ^bb5 loc(#loc46)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc38)
  ^bb6:  // 2 preds: ^bb2, ^bb5
    cir.br ^bb7 loc(#loc38)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc34)
  } loc(#loc85)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc92)
    cir.br ^bb1 loc(#loc93)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc94)
    %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc94)
    %3 = cir.call %2() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc60)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc60)
    cir.brcond %4 ^bb2, ^bb5 loc(#loc95)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc96)
  ^bb3:  // pred: ^bb2
    %5 = cir.get_global @sprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc65)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc66)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc67)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc67)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc68)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc68)
    %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc69)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc69)
    %13 = cir.call @sprintf(%6, %8, %10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc65)
    %14 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    cir.br ^bb4 loc(#loc64)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc59)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc59)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc55)
  } loc(#loc91)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE685_Function_Call_With_Incorrect_Number_of_Arguments/CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/stdio.h":365:1)
#loc4 = loc("/usr/include/stdio.h":366:45)
#loc5 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":30:27)
#loc6 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":30:36)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":23:1)
#loc10 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":34:1)
#loc11 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":28:13)
#loc12 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":28:32)
#loc13 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":25:5)
#loc14 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":33:5)
#loc15 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":25:8)
#loc16 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":25:26)
#loc17 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":26:5)
#loc18 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":27:9)
#loc19 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":32:9)
#loc20 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":30:13)
#loc21 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":30:21)
#loc22 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":31:23)
#loc23 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":31:13)
#loc24 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":73:1)
#loc25 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":77:1)
#loc26 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":75:5)
#loc27 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":75:11)
#loc28 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":76:5)
#loc29 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":76:11)
#loc30 = loc("../../testcasesupport/std_testcase_io.h":50:1)
#loc31 = loc("../../testcasesupport/std_testcase_io.h":50:24)
#loc32 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":46:19)
#loc33 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":41:1)
#loc34 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":57:1)
#loc35 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":51:13)
#loc36 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":51:32)
#loc37 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":43:5)
#loc38 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":56:5)
#loc39 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":43:8)
#loc40 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":43:27)
#loc41 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":44:5)
#loc42 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":47:5)
#loc43 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":49:5)
#loc44 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":46:9)
#loc45 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":50:9)
#loc46 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":55:9)
#loc47 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":53:13)
#loc48 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":53:21)
#loc49 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":53:27)
#loc50 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":53:36)
#loc51 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":53:51)
#loc52 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":54:23)
#loc53 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":54:13)
#loc54 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":60:1)
#loc55 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":71:1)
#loc56 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":65:13)
#loc57 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":65:32)
#loc58 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":62:5)
#loc59 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":70:5)
#loc60 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":62:8)
#loc61 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":62:26)
#loc62 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":63:5)
#loc63 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":64:9)
#loc64 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":69:9)
#loc65 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":67:13)
#loc66 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":67:21)
#loc67 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":67:27)
#loc68 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":67:36)
#loc69 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":67:51)
#loc70 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":68:23)
#loc71 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_11.c":68:13)
#loc72 = loc(fused[#loc1, #loc2])
#loc73 = loc(fused[#loc3, #loc4])
#loc74 = loc(fused[#loc7, #loc8])
#loc75 = loc(fused[#loc9, #loc10])
#loc76 = loc(fused[#loc11, #loc12])
#loc77 = loc(fused[#loc13, #loc14])
#loc78 = loc(fused[#loc15, #loc16])
#loc79 = loc(fused[#loc17, #loc14])
#loc80 = loc(fused[#loc18, #loc19])
#loc81 = loc(fused[#loc24, #loc25])
#loc82 = loc(fused[#loc26, #loc27])
#loc83 = loc(fused[#loc28, #loc29])
#loc84 = loc(fused[#loc30, #loc31])
#loc85 = loc(fused[#loc33, #loc34])
#loc86 = loc(fused[#loc35, #loc36])
#loc87 = loc(fused[#loc37, #loc38])
#loc88 = loc(fused[#loc39, #loc40])
#loc89 = loc(fused[#loc41, #loc42, #loc43, #loc38])
#loc90 = loc(fused[#loc45, #loc46])
#loc91 = loc(fused[#loc54, #loc55])
#loc92 = loc(fused[#loc56, #loc57])
#loc93 = loc(fused[#loc58, #loc59])
#loc94 = loc(fused[#loc60, #loc61])
#loc95 = loc(fused[#loc62, #loc59])
#loc96 = loc(fused[#loc63, #loc64])
