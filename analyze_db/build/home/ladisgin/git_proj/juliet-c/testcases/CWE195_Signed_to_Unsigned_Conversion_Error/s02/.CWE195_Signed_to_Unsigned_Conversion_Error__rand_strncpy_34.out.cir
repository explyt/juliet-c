!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc70 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":102:10)
#loc71 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":102:14)
#loc72 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":102:20)
#loc73 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":102:32)
!ty_CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34_unionType = !cir.struct<union "CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34_unionType" {!s32i, !s32i}>
#loc161 = loc(fused[#loc70, #loc71])
#loc162 = loc(fused[#loc72, #loc73])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc136)
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc137)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc138)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc140)
    %1 = cir.alloca !ty_CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34_unionType, !cir.ptr<!ty_CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc141)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc13)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc14)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc142)
    %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc16)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %6 = cir.binop(and, %4, %5) : !s32i loc(#loc16)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc16)
    %8 = cir.ternary(%7, true {
      %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc16)
      %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc16)
      %14 = cir.const #cir.int<30> : !s32i loc(#loc16)
      %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc16)
      %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc16)
      %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc16)
      %18 = cir.const #cir.int<15> : !s32i loc(#loc16)
      %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc16)
      %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc16)
      %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc16)
      %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc16)
      %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc16)
      cir.yield %23 : !u32i loc(#loc16)
    }, false {
      %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc16)
      %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc16)
      %14 = cir.const #cir.int<30> : !s32i loc(#loc16)
      %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc16)
      %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc16)
      %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc16)
      %18 = cir.const #cir.int<15> : !s32i loc(#loc16)
      %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc16)
      %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc16)
      %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc16)
      %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc16)
      %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc16)
      %24 = cir.unary(minus, %23) : !u32i, !u32i loc(#loc16)
      %25 = cir.const #cir.int<1> : !s32i loc(#loc16)
      %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc16)
      %27 = cir.binop(sub, %24, %26) : !u32i loc(#loc16)
      cir.yield %27 : !u32i loc(#loc16)
    }) : (!cir.bool) -> !u32i loc(#loc16)
    %9 = cir.cast(integral, %8 : !u32i), !s32i loc(#loc16)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc143)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc18)
    %11 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34_unionType> -> !cir.ptr<!s32i> loc(#loc19)
    cir.store %10, %11 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    cir.scope {
      %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc146)
      %13 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34_unionType> -> !cir.ptr<!s32i> loc(#loc25)
      %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc24)
      cir.store %14, %12 : !s32i, !cir.ptr<!s32i> loc(#loc146)
      cir.scope {
        %15 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc148)
        %16 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc149)
        %17 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc149)
        cir.store %17, %16 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc149)
        %18 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc32)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc32)
        %20 = cir.const #cir.int<65> : !s32i loc(#loc33)
        %21 = cir.const #cir.int<100> : !s32i loc(#loc34)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc35)
        %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc34)
        %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc34)
        cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc150)
        %25 = cir.const #cir.int<0> : !s32i loc(#loc38)
        %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc38)
        %27 = cir.const #cir.int<100> : !s32i loc(#loc39)
        %28 = cir.const #cir.int<1> : !s32i loc(#loc40)
        %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc39)
        %30 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc41)
        %31 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc41)
        cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc151)
        cir.scope {
          %33 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc44)
          %34 = cir.const #cir.int<100> : !s32i loc(#loc45)
          %35 = cir.cmp(lt, %33, %34) : !s32i, !cir.bool loc(#loc153)
          cir.if %35 {
            %36 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc47)
            %37 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc48)
            %38 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc49)
            %39 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc50)
            %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc50)
            %41 = cir.call @strncpy(%37, %38, %40) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc47)
            %42 = cir.const #cir.int<0> : !s32i loc(#loc51)
            %43 = cir.cast(integral, %42 : !s32i), !s8i loc(#loc51)
            %44 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc52)
            %45 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc53)
            %46 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc53)
            cir.store %43, %46 : !s8i, !cir.ptr<!s8i> loc(#loc155)
          } loc(#loc154)
        } loc(#loc152)
        %32 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc54)
        cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc55)
      } loc(#loc147)
    } loc(#loc145)
    cir.return loc(#loc8)
  } loc(#loc139)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc157)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    cir.return loc(#loc57)
  } loc(#loc156)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc158)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc159)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc67)
  cir.func @main(%arg0: !s32i loc(fused[#loc70, #loc71]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc72, #loc73])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc161)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc162)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc69)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc74)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc74)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc75)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc76)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc76)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc77)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc64)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %8 = cir.get_global @CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34_good : !cir.ptr<!cir.func<!void ()>> loc(#loc163)
    cir.call @CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34_good() : () -> () loc(#loc79)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc65)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc66)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %13 = cir.get_global @CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc164)
    cir.call @CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34_bad() : () -> () loc(#loc83)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc67)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc86)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc165)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc165)
    cir.return %17 : !s32i loc(#loc165)
  } loc(#loc160)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc167)
    %1 = cir.alloca !ty_CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34_unionType, !cir.ptr<!ty_CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc168)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc95)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc97)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %6 = cir.binop(sub, %4, %5) nsw : !s32i loc(#loc97)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc170)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    %8 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34_unionType> -> !cir.ptr<!s32i> loc(#loc19)
    cir.store %7, %8 : !s32i, !cir.ptr<!s32i> loc(#loc171)
    cir.scope {
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc173)
      %10 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34_unionType> -> !cir.ptr<!s32i> loc(#loc25)
      %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc105)
      cir.store %11, %9 : !s32i, !cir.ptr<!s32i> loc(#loc173)
      cir.scope {
        %12 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc175)
        %13 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc176)
        %14 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc176)
        cir.store %14, %13 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc176)
        %15 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc112)
        %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc112)
        %17 = cir.const #cir.int<65> : !s32i loc(#loc113)
        %18 = cir.const #cir.int<100> : !s32i loc(#loc114)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc115)
        %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc114)
        %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc114)
        cir.libc.memset %21 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc177)
        %22 = cir.const #cir.int<0> : !s32i loc(#loc118)
        %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc118)
        %24 = cir.const #cir.int<100> : !s32i loc(#loc119)
        %25 = cir.const #cir.int<1> : !s32i loc(#loc120)
        %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc119)
        %27 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc121)
        %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc121)
        cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc178)
        cir.scope {
          %30 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc124)
          %31 = cir.const #cir.int<100> : !s32i loc(#loc125)
          %32 = cir.cmp(lt, %30, %31) : !s32i, !cir.bool loc(#loc180)
          cir.if %32 {
            %33 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc127)
            %34 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc128)
            %35 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc129)
            %36 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc130)
            %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc130)
            %38 = cir.call @strncpy(%34, %35, %37) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc127)
            %39 = cir.const #cir.int<0> : !s32i loc(#loc131)
            %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc131)
            %41 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc132)
            %42 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc133)
            %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !s32i), !cir.ptr<!s8i> loc(#loc133)
            cir.store %40, %43 : !s8i, !cir.ptr<!s8i> loc(#loc182)
          } loc(#loc181)
        } loc(#loc179)
        %29 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc134)
        cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc135)
      } loc(#loc174)
    } loc(#loc172)
    cir.return loc(#loc89)
  } loc(#loc166)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("/usr/include/string.h":144:1)
#loc4 = loc("/usr/include/string.h":146:14)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":27:1)
#loc8 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":53:1)
#loc9 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":29:5)
#loc10 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":29:9)
#loc11 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":30:5)
#loc12 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":30:75)
#loc13 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":32:13)
#loc14 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":32:12)
#loc15 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":32:5)
#loc16 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":34:12)
#loc17 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":34:5)
#loc18 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":35:26)
#loc19 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":21:9)
#loc20 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":35:5)
#loc21 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":36:5)
#loc22 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":52:5)
#loc23 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":37:9)
#loc24 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":37:28)
#loc25 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":22:9)
#loc26 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":38:9)
#loc27 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":51:9)
#loc28 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":39:13)
#loc29 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":39:28)
#loc30 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":40:13)
#loc31 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":40:30)
#loc32 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":41:20)
#loc33 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":41:28)
#loc34 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":41:33)
#loc35 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":41:37)
#loc36 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":41:13)
#loc37 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":41:38)
#loc38 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":42:29)
#loc39 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":42:20)
#loc40 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":42:24)
#loc41 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":42:13)
#loc42 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":43:13)
#loc43 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":49:13)
#loc44 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":43:17)
#loc45 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":43:24)
#loc46 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":44:13)
#loc47 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":47:17)
#loc48 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":47:25)
#loc49 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":47:31)
#loc50 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":47:39)
#loc51 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":48:30)
#loc52 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":48:22)
#loc53 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":48:17)
#loc54 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":50:23)
#loc55 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":50:13)
#loc56 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":88:1)
#loc57 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":91:1)
#loc58 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":90:5)
#loc59 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":90:13)
#loc60 = loc("/usr/include/stdlib.h":575:1)
#loc61 = loc("/usr/include/stdlib.h":575:41)
#loc62 = loc("/usr/include/time.h":76:1)
#loc63 = loc("/usr/include/time.h":76:38)
#loc64 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":107:15)
#loc65 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":109:15)
#loc66 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":112:15)
#loc67 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":114:15)
#loc68 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":102:1)
#loc69 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":117:1)
#loc74 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":103:1)
#loc75 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":105:27)
#loc76 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":105:22)
#loc77 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":105:5)
#loc78 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":107:5)
#loc79 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":108:5)
#loc80 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":108:70)
#loc81 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":109:5)
#loc82 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":112:5)
#loc83 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":113:5)
#loc84 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":113:69)
#loc85 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":114:5)
#loc86 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":116:12)
#loc87 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":116:5)
#loc88 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":60:1)
#loc89 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":86:1)
#loc90 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":62:5)
#loc91 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":62:9)
#loc92 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":63:5)
#loc93 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":63:75)
#loc94 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":65:13)
#loc95 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":65:12)
#loc96 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":65:5)
#loc97 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":67:12)
#loc98 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":67:16)
#loc99 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":67:5)
#loc100 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":68:26)
#loc101 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":68:5)
#loc102 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":69:5)
#loc103 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":85:5)
#loc104 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":70:9)
#loc105 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":70:28)
#loc106 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":71:9)
#loc107 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":84:9)
#loc108 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":72:13)
#loc109 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":72:28)
#loc110 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":73:13)
#loc111 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":73:30)
#loc112 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":74:20)
#loc113 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":74:28)
#loc114 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":74:33)
#loc115 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":74:37)
#loc116 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":74:13)
#loc117 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":74:38)
#loc118 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":75:29)
#loc119 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":75:20)
#loc120 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":75:24)
#loc121 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":75:13)
#loc122 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":76:13)
#loc123 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":82:13)
#loc124 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":76:17)
#loc125 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":76:24)
#loc126 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":77:13)
#loc127 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":80:17)
#loc128 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":80:25)
#loc129 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":80:31)
#loc130 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":80:39)
#loc131 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":81:30)
#loc132 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":81:22)
#loc133 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":81:17)
#loc134 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":83:23)
#loc135 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_strncpy_34.c":83:13)
#loc136 = loc(fused[#loc1, #loc2])
#loc137 = loc(fused[#loc3, #loc4])
#loc138 = loc(fused[#loc5, #loc6])
#loc139 = loc(fused[#loc7, #loc8])
#loc140 = loc(fused[#loc9, #loc10])
#loc141 = loc(fused[#loc11, #loc12])
#loc142 = loc(fused[#loc15, #loc13])
#loc143 = loc(fused[#loc17, #loc16])
#loc144 = loc(fused[#loc20, #loc18])
#loc145 = loc(fused[#loc21, #loc22])
#loc146 = loc(fused[#loc23, #loc24])
#loc147 = loc(fused[#loc26, #loc27])
#loc148 = loc(fused[#loc28, #loc29])
#loc149 = loc(fused[#loc30, #loc31])
#loc150 = loc(fused[#loc36, #loc37])
#loc151 = loc(fused[#loc41, #loc38])
#loc152 = loc(fused[#loc42, #loc43])
#loc153 = loc(fused[#loc44, #loc45])
#loc154 = loc(fused[#loc46, #loc43])
#loc155 = loc(fused[#loc53, #loc51])
#loc156 = loc(fused[#loc56, #loc57])
#loc157 = loc(fused[#loc58, #loc59])
#loc158 = loc(fused[#loc60, #loc61])
#loc159 = loc(fused[#loc62, #loc63])
#loc160 = loc(fused[#loc68, #loc69])
#loc163 = loc(fused[#loc79, #loc80])
#loc164 = loc(fused[#loc83, #loc84])
#loc165 = loc(fused[#loc87, #loc86])
#loc166 = loc(fused[#loc88, #loc89])
#loc167 = loc(fused[#loc90, #loc91])
#loc168 = loc(fused[#loc92, #loc93])
#loc169 = loc(fused[#loc96, #loc94])
#loc170 = loc(fused[#loc99, #loc98])
#loc171 = loc(fused[#loc101, #loc100])
#loc172 = loc(fused[#loc102, #loc103])
#loc173 = loc(fused[#loc104, #loc105])
#loc174 = loc(fused[#loc106, #loc107])
#loc175 = loc(fused[#loc108, #loc109])
#loc176 = loc(fused[#loc110, #loc111])
#loc177 = loc(fused[#loc116, #loc117])
#loc178 = loc(fused[#loc121, #loc118])
#loc179 = loc(fused[#loc122, #loc123])
#loc180 = loc(fused[#loc124, #loc125])
#loc181 = loc(fused[#loc126, #loc123])
#loc182 = loc(fused[#loc133, #loc131])
