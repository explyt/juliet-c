!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc161)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc162)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc163)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc164)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc165)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc166)
  cir.func private @printIntLine(!s32i) loc(#loc167)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc168)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc170)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc171)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc172)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc173)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc174)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc31)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc175)
    cir.br ^bb1 loc(#loc176)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<0> : !s32i loc(#loc35)
    cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    cir.br ^bb2 loc(#loc176)
  ^bb2:  // 2 preds: ^bb1, ^bb13
    %8 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc178)
    cir.brcond %10 ^bb3, ^bb14 loc(#loc39)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc179)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc180)
  ^bb5:  // pred: ^bb4
    %11 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc170)
    cir.store %11, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc170)
    cir.br ^bb6 loc(#loc181)
  ^bb6:  // pred: ^bb5
    %12 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc45)
    %13 = cir.const #cir.int<3> : !s32i loc(#loc46)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc46)
    %15 = cir.const #cir.int<4> : !u64i loc(#loc46)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc46)
    %17 = cir.const #cir.int<2> : !s32i loc(#loc46)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc46)
    %19 = cir.binop(add, %16, %18) : !u64i loc(#loc46)
    %20 = cir.cast(integral, %19 : !u64i), !s32i loc(#loc46)
    %21 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc162)
    %22 = cir.load %21 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc47)
    %23 = cir.call @fgets(%12, %20, %22) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc48)
    %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc49)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc49)
    %26 = cir.cmp(ne, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc182)
    cir.brcond %26 ^bb7, ^bb8 loc(#loc183)
  ^bb7:  // pred: ^bb6
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc53)
    %28 = cir.call @atoi(%27) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc54)
    cir.store %28, %4 : !s32i, !cir.ptr<!s32i> loc(#loc184)
    cir.br ^bb9 loc(#loc51)
  ^bb8:  // pred: ^bb6
    %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    cir.br ^bb9 loc(#loc44)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc44)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc42)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc34)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc34)
  ^bb13:  // pred: ^bb12
    %31 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc58)
    %32 = cir.unary(inc, %31) : !s32i, !s32i loc(#loc59)
    cir.store %32, %3 : !s32i, !cir.ptr<!s32i> loc(#loc185)
    cir.br ^bb2 loc(#loc176)
  ^bb14:  // pred: ^bb2
    cir.br ^bb15 loc(#loc34)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc186)
  ^bb16:  // pred: ^bb15
    %33 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc62)
    %34 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc63)
    %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc63)
    %36 = cir.const #cir.int<4> : !u64i loc(#loc187)
    %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc188)
    %38 = cir.call @malloc(%37) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc62)
    %39 = cir.cast(bitcast, %38 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc189)
    cir.store %39, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc190)
    cir.br ^bb17 loc(#loc191)
  ^bb17:  // pred: ^bb16
    %40 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc70)
    %41 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc71)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc71)
    %43 = cir.cmp(eq, %40, %42) : !cir.ptr<!s32i>, !cir.bool loc(#loc192)
    cir.brcond %43 ^bb18, ^bb19 loc(#loc193)
  ^bb18:  // pred: ^bb17
    %44 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc73)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc74)
    %46 = cir.unary(minus, %45) : !s32i, !s32i loc(#loc75)
    cir.call @exit(%46) : (!s32i) -> () extra(#fn_attr) loc(#loc73)
    cir.br ^bb19 loc(#loc69)
  ^bb19:  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc69)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc194)
  ^bb21:  // pred: ^bb20
    %47 = cir.const #cir.int<0> : !s32i loc(#loc78)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc78)
    cir.store %48, %1 : !u64i, !cir.ptr<!u64i> loc(#loc195)
    cir.br ^bb22 loc(#loc194)
  ^bb22:  // 2 preds: ^bb21, ^bb26
    %49 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc80)
    %50 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc81)
    %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc81)
    %52 = cir.cmp(lt, %49, %51) : !u64i, !cir.bool loc(#loc196)
    cir.brcond %52 ^bb23, ^bb27 loc(#loc82)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc197)
  ^bb24:  // pred: ^bb23
    %53 = cir.const #cir.int<0> : !s32i loc(#loc84)
    %54 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc85)
    %55 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc86)
    %56 = cir.ptr_stride(%54 : !cir.ptr<!s32i>, %55 : !u64i), !cir.ptr<!s32i> loc(#loc87)
    cir.store %53, %56 : !s32i, !cir.ptr<!s32i> loc(#loc198)
    cir.br ^bb25 loc(#loc77)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc77)
  ^bb26:  // pred: ^bb25
    %57 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc88)
    %58 = cir.unary(inc, %57) : !u64i, !u64i loc(#loc89)
    cir.store %58, %1 : !u64i, !cir.ptr<!u64i> loc(#loc199)
    cir.br ^bb22 loc(#loc194)
  ^bb27:  // pred: ^bb22
    cir.br ^bb28 loc(#loc77)
  ^bb28:  // pred: ^bb27
    %59 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc90)
    %60 = cir.const #cir.int<0> : !s32i loc(#loc91)
    %61 = cir.ptr_stride(%59 : !cir.ptr<!s32i>, %60 : !s32i), !cir.ptr<!s32i> loc(#loc92)
    %62 = cir.load %61 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    cir.call @printIntLine(%62) : (!s32i) -> () loc(#loc93)
    %63 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc94)
    %64 = cir.cast(bitcast, %63 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc94)
    cir.call @free(%64) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc95)
    cir.br ^bb29 loc(#loc61)
  ^bb29:  // pred: ^bb28
    cir.return loc(#loc19)
  } loc(#loc169)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc201)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc98)
    cir.return loc(#loc97)
  } loc(#loc200)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc203)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc204)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc205)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc206)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc111)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc207)
    cir.br ^bb1 loc(#loc208)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<0> : !s32i loc(#loc115)
    cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc209)
    cir.br ^bb2 loc(#loc208)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %7 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc118)
    %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc210)
    cir.brcond %9 ^bb3, ^bb7 loc(#loc119)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc211)
  ^bb4:  // pred: ^bb3
    %10 = cir.const #cir.int<20> : !s32i loc(#loc121)
    cir.store %10, %3 : !s32i, !cir.ptr<!s32i> loc(#loc212)
    cir.br ^bb5 loc(#loc114)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc114)
  ^bb6:  // pred: ^bb5
    %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    %12 = cir.unary(inc, %11) : !s32i, !s32i loc(#loc124)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc213)
    cir.br ^bb2 loc(#loc208)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc114)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc214)
  ^bb9:  // pred: ^bb8
    %13 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc127)
    %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc128)
    %16 = cir.const #cir.int<4> : !u64i loc(#loc215)
    %17 = cir.binop(mul, %15, %16) : !u64i loc(#loc216)
    %18 = cir.call @malloc(%17) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc127)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc217)
    cir.store %19, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc218)
    cir.br ^bb10 loc(#loc219)
  ^bb10:  // pred: ^bb9
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc135)
    %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc136)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc136)
    %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!s32i>, !cir.bool loc(#loc220)
    cir.brcond %23 ^bb11, ^bb12 loc(#loc221)
  ^bb11:  // pred: ^bb10
    %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc138)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc139)
    %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc140)
    cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc138)
    cir.br ^bb12 loc(#loc134)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc134)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc222)
  ^bb14:  // pred: ^bb13
    %27 = cir.const #cir.int<0> : !s32i loc(#loc143)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc143)
    cir.store %28, %0 : !u64i, !cir.ptr<!u64i> loc(#loc223)
    cir.br ^bb15 loc(#loc222)
  ^bb15:  // 2 preds: ^bb14, ^bb19
    %29 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc145)
    %30 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc146)
    %32 = cir.cmp(lt, %29, %31) : !u64i, !cir.bool loc(#loc224)
    cir.brcond %32 ^bb16, ^bb20 loc(#loc147)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc225)
  ^bb17:  // pred: ^bb16
    %33 = cir.const #cir.int<0> : !s32i loc(#loc149)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc150)
    %35 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc151)
    %36 = cir.ptr_stride(%34 : !cir.ptr<!s32i>, %35 : !u64i), !cir.ptr<!s32i> loc(#loc152)
    cir.store %33, %36 : !s32i, !cir.ptr<!s32i> loc(#loc226)
    cir.br ^bb18 loc(#loc142)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc142)
  ^bb19:  // pred: ^bb18
    %37 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc153)
    %38 = cir.unary(inc, %37) : !u64i, !u64i loc(#loc154)
    cir.store %38, %0 : !u64i, !cir.ptr<!u64i> loc(#loc227)
    cir.br ^bb15 loc(#loc222)
  ^bb20:  // pred: ^bb15
    cir.br ^bb21 loc(#loc142)
  ^bb21:  // pred: ^bb20
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc155)
    %40 = cir.const #cir.int<0> : !s32i loc(#loc156)
    %41 = cir.ptr_stride(%39 : !cir.ptr<!s32i>, %40 : !s32i), !cir.ptr<!s32i> loc(#loc157)
    %42 = cir.load %41 : !cir.ptr<!s32i>, !s32i loc(#loc155)
    cir.call @printIntLine(%42) : (!s32i) -> () loc(#loc158)
    %43 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc159)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc159)
    cir.call @free(%44) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc160)
    cir.br ^bb22 loc(#loc126)
  ^bb22:  // pred: ^bb21
    cir.return loc(#loc101)
  } loc(#loc202)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":41:27)
#loc10 = loc("/usr/include/stdlib.h":672:1)
#loc11 = loc("/usr/include/stdlib.h":672:45)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc15 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc16 = loc("/usr/include/stdlib.h":687:1)
#loc17 = loc("/usr/include/stdlib.h":687:32)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":23:1)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":59:1)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":32:13)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":32:49)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":46:9)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":46:16)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":47:9)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":47:14)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":25:5)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":25:9)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":26:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":26:9)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":28:13)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":28:12)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":28:5)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":29:5)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":44:5)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":29:13)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":29:9)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":29:16)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":29:20)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":29:18)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":30:5)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":31:9)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":43:9)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":34:13)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":42:13)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":34:23)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":34:36)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":34:53)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":34:17)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":34:63)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":35:13)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":38:13)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":40:13)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":37:29)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":37:24)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":37:17)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":37:40)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":41:17)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":29:24)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":29:23)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":45:5)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":58:5)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":50:28)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":50:35)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":50:42)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":50:52)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":50:53)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":50:9)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":51:9)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":51:43)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":51:13)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":51:27)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":51:33)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":51:34)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":51:40)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":51:39)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":52:9)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":55:9)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":52:18)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":52:14)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":52:21)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":52:33)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":52:23)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":53:9)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":54:29)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":54:13)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":54:24)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":54:25)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":52:40)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":52:39)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":56:22)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":56:33)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":56:34)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":56:9)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":57:14)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":57:9)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":93:1)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":96:1)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":95:5)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":95:13)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":66:1)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":91:1)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":78:9)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":78:16)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":79:9)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":79:14)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":68:5)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":68:9)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":69:5)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":69:9)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":71:13)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":71:12)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":71:5)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":72:5)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":76:5)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":72:13)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":72:9)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":72:16)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":72:20)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":72:18)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":73:5)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":75:16)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":75:9)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":72:24)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":72:23)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":77:5)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":90:5)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":82:28)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":82:35)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":82:42)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":82:52)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":82:53)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":82:9)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":83:9)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":83:43)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":83:13)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":83:27)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":83:33)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":83:34)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":83:40)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":83:39)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":84:9)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":87:9)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":84:18)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":84:14)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":84:21)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":84:33)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":84:23)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":85:9)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":86:29)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":86:13)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":86:24)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":86:25)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":84:40)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":84:39)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":88:22)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":88:33)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":88:34)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":88:9)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":89:14)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_17.c":89:9)
#loc161 = loc(fused[#loc1, #loc2])
#loc162 = loc(fused[#loc3, #loc4])
#loc163 = loc(fused[#loc5, #loc6])
#loc164 = loc(fused[#loc7, #loc8])
#loc165 = loc(fused[#loc10, #loc11])
#loc166 = loc(fused[#loc12, #loc13])
#loc167 = loc(fused[#loc14, #loc15])
#loc168 = loc(fused[#loc16, #loc17])
#loc169 = loc(fused[#loc18, #loc19])
#loc170 = loc(fused[#loc20, #loc21])
#loc171 = loc(fused[#loc22, #loc23])
#loc172 = loc(fused[#loc24, #loc25])
#loc173 = loc(fused[#loc26, #loc27])
#loc174 = loc(fused[#loc28, #loc29])
#loc175 = loc(fused[#loc32, #loc30])
#loc176 = loc(fused[#loc33, #loc34])
#loc177 = loc(fused[#loc36, #loc35])
#loc178 = loc(fused[#loc37, #loc38])
#loc179 = loc(fused[#loc40, #loc34])
#loc180 = loc(fused[#loc41, #loc42])
#loc181 = loc(fused[#loc43, #loc44])
#loc182 = loc(fused[#loc48, #loc49])
#loc183 = loc(fused[#loc50, #loc51, #loc52, #loc44])
#loc184 = loc(fused[#loc55, #loc56])
#loc185 = loc(fused[#loc59, #loc58])
#loc186 = loc(fused[#loc60, #loc61])
#loc187 = loc(fused[#loc64, #loc65])
#loc188 = loc(fused[#loc63, #loc65])
#loc189 = loc(fused[#loc62, #loc66])
#loc190 = loc(fused[#loc67, #loc66])
#loc191 = loc(fused[#loc68, #loc69])
#loc192 = loc(fused[#loc70, #loc71])
#loc193 = loc(fused[#loc72, #loc69])
#loc194 = loc(fused[#loc76, #loc77])
#loc195 = loc(fused[#loc79, #loc78])
#loc196 = loc(fused[#loc80, #loc81])
#loc197 = loc(fused[#loc83, #loc77])
#loc198 = loc(fused[#loc85, #loc84])
#loc199 = loc(fused[#loc89, #loc88])
#loc200 = loc(fused[#loc96, #loc97])
#loc201 = loc(fused[#loc98, #loc99])
#loc202 = loc(fused[#loc100, #loc101])
#loc203 = loc(fused[#loc102, #loc103])
#loc204 = loc(fused[#loc104, #loc105])
#loc205 = loc(fused[#loc106, #loc107])
#loc206 = loc(fused[#loc108, #loc109])
#loc207 = loc(fused[#loc112, #loc110])
#loc208 = loc(fused[#loc113, #loc114])
#loc209 = loc(fused[#loc116, #loc115])
#loc210 = loc(fused[#loc117, #loc118])
#loc211 = loc(fused[#loc120, #loc114])
#loc212 = loc(fused[#loc122, #loc121])
#loc213 = loc(fused[#loc124, #loc123])
#loc214 = loc(fused[#loc125, #loc126])
#loc215 = loc(fused[#loc129, #loc130])
#loc216 = loc(fused[#loc128, #loc130])
#loc217 = loc(fused[#loc127, #loc131])
#loc218 = loc(fused[#loc132, #loc131])
#loc219 = loc(fused[#loc133, #loc134])
#loc220 = loc(fused[#loc135, #loc136])
#loc221 = loc(fused[#loc137, #loc134])
#loc222 = loc(fused[#loc141, #loc142])
#loc223 = loc(fused[#loc144, #loc143])
#loc224 = loc(fused[#loc145, #loc146])
#loc225 = loc(fused[#loc148, #loc142])
#loc226 = loc(fused[#loc150, #loc149])
#loc227 = loc(fused[#loc154, #loc153])
