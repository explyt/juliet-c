!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc39 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":105:10)
#loc40 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":105:14)
#loc41 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":105:20)
#loc42 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":105:32)
#loc127 = loc(fused[#loc39, #loc40])
#loc128 = loc(fused[#loc41, #loc42])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc115)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc3)
  cir.func no_proto @CWE758_Undefined_Behavior__char_pointer_alloca_use_15_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc8)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc119)
            %2 = cir.const #cir.int<8> : !u64i loc(#loc13)
            %3 = cir.alloca !u8i, !cir.ptr<!u8i>, %2 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc13)
            %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc120)
            %5 = cir.cast(bitcast, %3 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc13)
            %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc13)
            cir.store %6, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc119)
            %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc15)
            %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc16)
            cir.store %8, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
            %9 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc18)
          } loc(#loc118)
          cir.break loc(#loc19)
        } loc(#loc9)
        cir.case(default, []) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc3)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc3)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc21)
          cir.break loc(#loc22)
        } loc(#loc20)
        cir.yield loc(#loc6)
      } loc(#loc6)
    } loc(#loc117)
    cir.return loc(#loc5)
  } loc(#loc116)
  cir.func no_proto @CWE758_Undefined_Behavior__char_pointer_alloca_use_15_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc122)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc25)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc123)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc27)
    cir.return loc(#loc24)
  } loc(#loc121)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc124)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc125)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc33)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc34)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc35)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc36)
  cir.func @main(%arg0: !s32i loc(fused[#loc39, #loc40]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc41, #loc42])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc127)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc128)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc38)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc43)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc43)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc44)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc45)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc45)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc46)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc33)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc33)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc47)
    %8 = cir.get_global @CWE758_Undefined_Behavior__char_pointer_alloca_use_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc129)
    cir.call @CWE758_Undefined_Behavior__char_pointer_alloca_use_15_good() : () -> () loc(#loc48)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc34)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc35)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc35)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    %13 = cir.get_global @CWE758_Undefined_Behavior__char_pointer_alloca_use_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc130)
    cir.call @CWE758_Undefined_Behavior__char_pointer_alloca_use_15_bad() : () -> () loc(#loc52)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc36)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc55)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc131)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc131)
    cir.return %17 : !s32i loc(#loc131)
  } loc(#loc126)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc57)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc62)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc64)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc64)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc65)
          cir.break loc(#loc66)
        } loc(#loc63)
        cir.case(default, []) {
          cir.scope {
            %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc135)
            %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc136)
            %3 = cir.const #cir.int<8> : !u64i loc(#loc73)
            %4 = cir.alloca !u8i, !cir.ptr<!u8i>, %3 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc73)
            %5 = cir.cast(bitcast, %4 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc73)
            %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc73)
            cir.store %6, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc136)
            %7 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc57)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc57)
            cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc137)
            %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
            %10 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc76)
            cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc138)
            cir.scope {
              %11 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc140)
              %12 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc81)
              %13 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
              cir.store %13, %11 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc140)
              %14 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc84)
            } loc(#loc139)
          } loc(#loc134)
          cir.break loc(#loc85)
        } loc(#loc67)
        cir.yield loc(#loc60)
      } loc(#loc60)
    } loc(#loc133)
    cir.return loc(#loc59)
  } loc(#loc132)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc90)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc144)
            %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc145)
            %3 = cir.const #cir.int<8> : !u64i loc(#loc97)
            %4 = cir.alloca !u8i, !cir.ptr<!u8i>, %3 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc97)
            %5 = cir.cast(bitcast, %4 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc97)
            %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc97)
            cir.store %6, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc145)
            %7 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc98)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc98)
            cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
            %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
            %10 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc101)
            cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
            cir.scope {
              %11 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc149)
              %12 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc106)
              %13 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
              cir.store %13, %11 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc149)
              %14 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc109)
            } loc(#loc148)
          } loc(#loc143)
          cir.break loc(#loc110)
        } loc(#loc91)
        cir.case(default, []) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc112)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc112)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc113)
          cir.break loc(#loc114)
        } loc(#loc111)
        cir.yield loc(#loc88)
      } loc(#loc88)
    } loc(#loc142)
    cir.return loc(#loc87)
  } loc(#loc141)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":33:19)
#loc4 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":20:1)
#loc5 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":36:1)
#loc6 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":22:5)
#loc7 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":35:5)
#loc8 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":22:12)
#loc9 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":24:5)
#loc10 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":25:5)
#loc11 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":29:5)
#loc12 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":26:9)
#loc13 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":26:38)
#loc14 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":27:9)
#loc15 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":27:24)
#loc16 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":27:23)
#loc17 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":28:19)
#loc18 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":28:9)
#loc19 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":30:5)
#loc20 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":31:5)
#loc21 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":33:9)
#loc22 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":34:9)
#loc23 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":90:1)
#loc24 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":94:1)
#loc25 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":92:5)
#loc26 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":92:11)
#loc27 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":93:5)
#loc28 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":93:11)
#loc29 = loc("/usr/include/stdlib.h":575:1)
#loc30 = loc("/usr/include/stdlib.h":575:41)
#loc31 = loc("/usr/include/time.h":76:1)
#loc32 = loc("/usr/include/time.h":76:38)
#loc33 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":110:15)
#loc34 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":112:15)
#loc35 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":115:15)
#loc36 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":117:15)
#loc37 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":105:1)
#loc38 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":120:1)
#loc43 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":106:1)
#loc44 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":108:27)
#loc45 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":108:22)
#loc46 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":108:5)
#loc47 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":110:5)
#loc48 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":111:5)
#loc49 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":111:64)
#loc50 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":112:5)
#loc51 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":115:5)
#loc52 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":116:5)
#loc53 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":116:63)
#loc54 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":117:5)
#loc55 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":119:12)
#loc56 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":119:5)
#loc57 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":55:16)
#loc58 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":43:1)
#loc59 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":64:1)
#loc60 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":45:5)
#loc61 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":63:5)
#loc62 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":45:12)
#loc63 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":47:5)
#loc64 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":49:19)
#loc65 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":49:9)
#loc66 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":50:9)
#loc67 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":51:5)
#loc68 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":52:5)
#loc69 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":61:5)
#loc70 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":53:9)
#loc71 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":53:16)
#loc72 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":54:9)
#loc73 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":54:38)
#loc74 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":55:9)
#loc75 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":56:20)
#loc76 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":56:10)
#loc77 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":56:9)
#loc78 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":57:9)
#loc79 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":60:9)
#loc80 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":58:13)
#loc81 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":58:28)
#loc82 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":58:27)
#loc83 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":59:23)
#loc84 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":59:13)
#loc85 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":62:5)
#loc86 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":67:1)
#loc87 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":88:1)
#loc88 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":69:5)
#loc89 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":87:5)
#loc90 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":69:12)
#loc91 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":71:5)
#loc92 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":72:5)
#loc93 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":81:5)
#loc94 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":73:9)
#loc95 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":73:16)
#loc96 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":74:9)
#loc97 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":74:38)
#loc98 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":75:16)
#loc99 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":75:9)
#loc100 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":76:20)
#loc101 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":76:10)
#loc102 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":76:9)
#loc103 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":77:9)
#loc104 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":80:9)
#loc105 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":78:13)
#loc106 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":78:28)
#loc107 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":78:27)
#loc108 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":79:23)
#loc109 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":79:13)
#loc110 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":82:5)
#loc111 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":83:5)
#loc112 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":85:19)
#loc113 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":85:9)
#loc114 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_15.c":86:9)
#loc115 = loc(fused[#loc1, #loc2])
#loc116 = loc(fused[#loc4, #loc5])
#loc117 = loc(fused[#loc6, #loc7])
#loc118 = loc(fused[#loc10, #loc11])
#loc119 = loc(fused[#loc12, #loc13])
#loc120 = loc(fused[#loc14, #loc15])
#loc121 = loc(fused[#loc23, #loc24])
#loc122 = loc(fused[#loc25, #loc26])
#loc123 = loc(fused[#loc27, #loc28])
#loc124 = loc(fused[#loc29, #loc30])
#loc125 = loc(fused[#loc31, #loc32])
#loc126 = loc(fused[#loc37, #loc38])
#loc129 = loc(fused[#loc48, #loc49])
#loc130 = loc(fused[#loc52, #loc53])
#loc131 = loc(fused[#loc56, #loc55])
#loc132 = loc(fused[#loc58, #loc59])
#loc133 = loc(fused[#loc60, #loc61])
#loc134 = loc(fused[#loc68, #loc69])
#loc135 = loc(fused[#loc70, #loc71])
#loc136 = loc(fused[#loc72, #loc73])
#loc137 = loc(fused[#loc74, #loc57])
#loc138 = loc(fused[#loc77, #loc75])
#loc139 = loc(fused[#loc78, #loc79])
#loc140 = loc(fused[#loc80, #loc81])
#loc141 = loc(fused[#loc86, #loc87])
#loc142 = loc(fused[#loc88, #loc89])
#loc143 = loc(fused[#loc92, #loc93])
#loc144 = loc(fused[#loc94, #loc95])
#loc145 = loc(fused[#loc96, #loc97])
#loc146 = loc(fused[#loc99, #loc98])
#loc147 = loc(fused[#loc102, #loc100])
#loc148 = loc(fused[#loc103, #loc104])
#loc149 = loc(fused[#loc105, #loc106])
