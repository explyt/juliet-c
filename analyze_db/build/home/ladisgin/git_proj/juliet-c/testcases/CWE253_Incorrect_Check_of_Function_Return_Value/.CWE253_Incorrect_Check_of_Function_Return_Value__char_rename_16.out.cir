!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":81:10)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":81:14)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":81:20)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":81:32)
#loc79 = loc(fused[#loc34, #loc35])
#loc80 = loc(fused[#loc36, #loc37])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rename(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"oldbadfilename.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"newbadfilename.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc4)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"rename failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16_bad() extra(#fn_attr1) {
    cir.br ^bb1 loc(#loc70)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc70)
  ^bb2:  // pred: ^bb1
    %0 = cir.const #cir.int<1> : !s32i loc(#loc12)
    %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc12)
    cir.brcond %1 ^bb3, ^bb8 loc(#loc12)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc71)
  ^bb4:  // pred: ^bb3
    %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc3)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc3)
    %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc4)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc4)
    %6 = cir.call @rename(%3, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc15)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc16)
    %8 = cir.cmp(eq, %6, %7) : !s32i, !cir.bool loc(#loc72)
    cir.brcond %8 ^bb5, ^bb6 loc(#loc73)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc7)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc18)
    cir.br ^bb6 loc(#loc14)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc14)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc19)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc11)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc9)
  } loc(#loc69)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc75)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc22)
    cir.return loc(#loc21)
  } loc(#loc74)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc76)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc77)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc28)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc29)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc30)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc31)
  cir.func @main(%arg0: !s32i loc(fused[#loc34, #loc35]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc36, #loc37])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc79)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc80)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc33)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc38)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc38)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc39)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc40)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc40)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc41)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc28)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc28)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc42)
    %8 = cir.get_global @CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc81)
    cir.call @CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16_good() : () -> () loc(#loc43)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc29)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc29)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc30)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc30)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    %13 = cir.get_global @CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc82)
    cir.call @CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16_bad() : () -> () loc(#loc47)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc31)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc31)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc50)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc83)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    cir.return %17 : !s32i loc(#loc83)
  } loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"oldgoodfilename.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.8" = #cir.const_array<"newgoodfilename.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc53)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.br ^bb1 loc(#loc85)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc85)
  ^bb2:  // pred: ^bb1
    %0 = cir.const #cir.int<1> : !s32i loc(#loc58)
    %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc58)
    cir.brcond %1 ^bb3, ^bb8 loc(#loc58)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc86)
  ^bb4:  // pred: ^bb3
    %2 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc52)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc52)
    %4 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc53)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc53)
    %6 = cir.call @rename(%3, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc61)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %8 = cir.cmp(ne, %6, %7) : !s32i, !cir.bool loc(#loc87)
    cir.brcond %8 ^bb5, ^bb6 loc(#loc88)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc64)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    cir.br ^bb6 loc(#loc60)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc60)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc66)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc57)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc55)
  } loc(#loc84)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":160:1)
#loc2 = loc("/usr/include/stdio.h":160:58)
#loc3 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":41:20)
#loc4 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":41:39)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":43:23)
#loc8 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":35:1)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":47:1)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":37:5)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":46:5)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":37:11)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":41:9)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":44:9)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":41:13)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":41:61)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":42:9)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":43:13)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":45:9)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":67:1)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":70:1)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":69:5)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":69:11)
#loc24 = loc("/usr/include/stdlib.h":575:1)
#loc25 = loc("/usr/include/stdlib.h":575:41)
#loc26 = loc("/usr/include/time.h":76:1)
#loc27 = loc("/usr/include/time.h":76:38)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":86:15)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":88:15)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":91:15)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":93:15)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":81:1)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":96:1)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":82:1)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":84:27)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":84:22)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":84:5)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":86:5)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":87:5)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":87:74)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":88:5)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":91:5)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":92:5)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":92:73)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":93:5)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":95:12)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":95:5)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":59:20)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":59:40)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":54:1)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":65:1)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":56:5)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":64:5)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":56:11)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":59:9)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":62:9)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":59:13)
#loc62 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":59:63)
#loc63 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":60:9)
#loc64 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":61:23)
#loc65 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":61:13)
#loc66 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":63:9)
#loc67 = loc(fused[#loc1, #loc2])
#loc68 = loc(fused[#loc5, #loc6])
#loc69 = loc(fused[#loc8, #loc9])
#loc70 = loc(fused[#loc10, #loc11])
#loc71 = loc(fused[#loc13, #loc14])
#loc72 = loc(fused[#loc15, #loc16])
#loc73 = loc(fused[#loc17, #loc14])
#loc74 = loc(fused[#loc20, #loc21])
#loc75 = loc(fused[#loc22, #loc23])
#loc76 = loc(fused[#loc24, #loc25])
#loc77 = loc(fused[#loc26, #loc27])
#loc78 = loc(fused[#loc32, #loc33])
#loc81 = loc(fused[#loc43, #loc44])
#loc82 = loc(fused[#loc47, #loc48])
#loc83 = loc(fused[#loc51, #loc50])
#loc84 = loc(fused[#loc54, #loc55])
#loc85 = loc(fused[#loc56, #loc57])
#loc86 = loc(fused[#loc59, #loc60])
#loc87 = loc(fused[#loc61, #loc62])
#loc88 = loc(fused[#loc63, #loc60])
