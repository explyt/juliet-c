!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__CWE135_61b_badSource(!cir.ptr<!void>) -> !cir.ptr<!void> loc(#loc144)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc145)
  cir.func private @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc146)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc147)
  cir.func private @wcscpy(!cir.ptr<!s32i>, !cir.ptr<!s32i>) -> !cir.ptr<!s32i> extra(#fn_attr) loc(#loc148)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc149)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc150)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__CWE135_61_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc152)
    %1 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dest", init] {alignment = 8 : i64} loc(#loc153)
    %2 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc154)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc23)
    cir.store %3, %2 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc155)
    %4 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc25)
    %5 = cir.call @CWE122_Heap_Based_Buffer_Overflow__CWE135_61b_badSource(%4) : (!cir.ptr<!void>) -> !cir.ptr<!void> loc(#loc26)
    cir.store %5, %2 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc156)
    cir.br ^bb1 loc(#loc157)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc31)
    %7 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc32)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc32)
    %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc31)
    cir.store %9, %0 : !u64i, !cir.ptr<!u64i> loc(#loc152)
    %10 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc33)
    %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc34)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc35)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc158)
    %15 = cir.const #cir.int<4> : !u64i loc(#loc159)
    %16 = cir.call @calloc(%14, %15) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc33)
    cir.store %16, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc153)
    cir.br ^bb2 loc(#loc160)
  ^bb2:  // pred: ^bb1
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc40)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
    %19 = cir.cmp(eq, %17, %18) : !cir.ptr<!void>, !cir.bool loc(#loc161)
    cir.brcond %19 ^bb3, ^bb4 loc(#loc162)
  ^bb3:  // pred: ^bb2
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc43)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc45)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc43)
    cir.br ^bb4 loc(#loc39)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc39)
  ^bb5:  // pred: ^bb4
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc46)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc46)
    %25 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc47)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc47)
    %27 = cir.call @wcscpy(%24, %26) : (!cir.ptr<!s32i>, !cir.ptr<!s32i>) -> !cir.ptr<!s32i> extra(#fn_attr) loc(#loc48)
    %28 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc49)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc51)
    cir.call @free(%30) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc52)
    cir.br ^bb6 loc(#loc30)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc16)
  } loc(#loc151)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__CWE135_61_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc164)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc55)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc165)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc57)
    cir.return loc(#loc54)
  } loc(#loc163)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__CWE135_61b_goodG2BSource(!cir.ptr<!void>) -> !cir.ptr<!void> loc(#loc166)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc167)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc169)
    %1 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dest", init] {alignment = 8 : i64} loc(#loc170)
    %2 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc171)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc71)
    cir.store %3, %2 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc172)
    %4 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc73)
    %5 = cir.call @CWE122_Heap_Based_Buffer_Overflow__CWE135_61b_goodG2BSource(%4) : (!cir.ptr<!void>) -> !cir.ptr<!void> loc(#loc74)
    cir.store %5, %2 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc173)
    cir.br ^bb1 loc(#loc174)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc79)
    %7 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc80)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc80)
    %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc79)
    cir.store %9, %0 : !u64i, !cir.ptr<!u64i> loc(#loc169)
    %10 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc81)
    %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc82)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc83)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc83)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc175)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc84)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc84)
    %17 = cir.call @calloc(%14, %16) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc81)
    cir.store %17, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc170)
    cir.br ^bb2 loc(#loc176)
  ^bb2:  // pred: ^bb1
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc87)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc88)
    %20 = cir.cmp(eq, %18, %19) : !cir.ptr<!void>, !cir.bool loc(#loc177)
    cir.brcond %20 ^bb3, ^bb4 loc(#loc178)
  ^bb3:  // pred: ^bb2
    %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc90)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc91)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc92)
    cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc90)
    cir.br ^bb4 loc(#loc86)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc86)
  ^bb5:  // pred: ^bb4
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc93)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc93)
    %26 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc94)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc94)
    %28 = cir.call @strcpy(%25, %27) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc95)
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc96)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc96)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc98)
    cir.call @free(%31) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc99)
    cir.br ^bb6 loc(#loc78)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc64)
  } loc(#loc168)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__CWE135_61b_goodB2GSource(!cir.ptr<!void>) -> !cir.ptr<!void> loc(#loc179)
  cir.func private @wcslen(!cir.ptr<!s32i>) -> !u64i extra(#fn_attr) loc(#loc180)
  cir.func private @printWLine(!cir.ptr<!s32i>) loc(#loc181)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc183)
    %1 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dest", init] {alignment = 8 : i64} loc(#loc184)
    %2 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc185)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc114)
    cir.store %3, %2 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc186)
    %4 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc116)
    %5 = cir.call @CWE122_Heap_Based_Buffer_Overflow__CWE135_61b_goodB2GSource(%4) : (!cir.ptr<!void>) -> !cir.ptr<!void> loc(#loc117)
    cir.store %5, %2 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc187)
    cir.br ^bb1 loc(#loc188)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @wcslen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s32i>)>> loc(#loc122)
    %7 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc123)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc123)
    %9 = cir.call @wcslen(%8) : (!cir.ptr<!s32i>) -> !u64i extra(#fn_attr) loc(#loc122)
    cir.store %9, %0 : !u64i, !cir.ptr<!u64i> loc(#loc183)
    %10 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc124)
    %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc125)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc126)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc126)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc189)
    %15 = cir.const #cir.int<4> : !u64i loc(#loc190)
    %16 = cir.call @calloc(%14, %15) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc124)
    cir.store %16, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc184)
    cir.br ^bb2 loc(#loc191)
  ^bb2:  // pred: ^bb1
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc131)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc132)
    %19 = cir.cmp(eq, %17, %18) : !cir.ptr<!void>, !cir.bool loc(#loc192)
    cir.brcond %19 ^bb3, ^bb4 loc(#loc193)
  ^bb3:  // pred: ^bb2
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc134)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc135)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc136)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc134)
    cir.br ^bb4 loc(#loc130)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc130)
  ^bb5:  // pred: ^bb4
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc137)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc137)
    %25 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc138)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc138)
    %27 = cir.call @wcscpy(%24, %26) : (!cir.ptr<!s32i>, !cir.ptr<!s32i>) -> !cir.ptr<!s32i> extra(#fn_attr) loc(#loc139)
    %28 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc140)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc140)
    cir.call @printWLine(%29) : (!cir.ptr<!s32i>) -> () loc(#loc141)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc142)
    cir.call @free(%30) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc143)
    cir.br ^bb6 loc(#loc121)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc107)
  } loc(#loc182)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":25:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":25:75)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("/usr/include/stdlib.h":675:1)
#loc6 = loc("/usr/include/stdlib.h":676:14)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("/usr/include/wchar.h":98:1)
#loc10 = loc("/usr/include/wchar.h":100:14)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("/usr/include/stdlib.h":687:1)
#loc14 = loc("/usr/include/stdlib.h":687:32)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":27:1)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":41:1)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":34:9)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":34:45)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":35:9)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":35:64)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":29:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":29:12)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":30:12)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":30:5)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":31:68)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":31:12)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":31:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":31:72)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":32:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":40:5)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":34:26)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":34:41)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":35:31)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":35:38)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":35:46)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":35:49)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":35:63)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":36:9)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":36:37)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":36:13)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":36:21)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":36:27)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":36:28)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":36:34)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":36:33)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":37:22)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":37:28)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":37:15)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":38:27)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":38:9)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":39:14)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":39:9)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":85:1)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":89:1)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":87:5)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":87:13)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":88:5)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":88:13)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":48:1)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":48:79)
#loc61 = loc("/usr/include/string.h":141:1)
#loc62 = loc("/usr/include/string.h":142:14)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":50:1)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":64:1)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":57:9)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":57:45)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":58:9)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":58:50)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":52:5)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":52:12)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":53:12)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":53:5)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":54:72)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":54:12)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":54:5)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":54:76)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":55:5)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":63:5)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":57:26)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":57:41)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":58:31)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":58:38)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":58:46)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":58:49)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":59:9)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":59:37)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":59:13)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":59:21)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":59:27)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":59:28)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":59:34)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":59:33)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":60:22)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":60:28)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":60:15)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":61:27)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":61:9)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":62:14)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":62:9)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":67:1)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":67:79)
#loc102 = loc("/usr/include/wchar.h":247:1)
#loc103 = loc("/usr/include/wchar.h":247:51)
#loc104 = loc("../../../testcasesupport/std_testcase_io.h":16:1)
#loc105 = loc("../../../testcasesupport/std_testcase_io.h":16:37)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":69:1)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":83:1)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":76:9)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":76:48)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":77:9)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":77:64)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":71:5)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":71:12)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":72:12)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":72:5)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":73:72)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":73:12)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":73:5)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":73:76)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":74:5)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":82:5)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":76:26)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":76:44)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":77:31)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":77:38)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":77:46)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":77:49)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":77:63)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":78:9)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":78:37)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":78:13)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":78:21)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":78:27)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":78:28)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":78:34)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":78:33)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":79:22)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":79:28)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":79:15)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":80:31)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":80:9)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":81:14)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_61a.c":81:9)
#loc144 = loc(fused[#loc1, #loc2])
#loc145 = loc(fused[#loc3, #loc4])
#loc146 = loc(fused[#loc5, #loc6])
#loc147 = loc(fused[#loc7, #loc8])
#loc148 = loc(fused[#loc9, #loc10])
#loc149 = loc(fused[#loc11, #loc12])
#loc150 = loc(fused[#loc13, #loc14])
#loc151 = loc(fused[#loc15, #loc16])
#loc152 = loc(fused[#loc17, #loc18])
#loc153 = loc(fused[#loc19, #loc20])
#loc154 = loc(fused[#loc21, #loc22])
#loc155 = loc(fused[#loc24, #loc23])
#loc156 = loc(fused[#loc27, #loc28])
#loc157 = loc(fused[#loc29, #loc30])
#loc158 = loc(fused[#loc34, #loc35])
#loc159 = loc(fused[#loc36, #loc37])
#loc160 = loc(fused[#loc38, #loc39])
#loc161 = loc(fused[#loc40, #loc41])
#loc162 = loc(fused[#loc42, #loc39])
#loc163 = loc(fused[#loc53, #loc54])
#loc164 = loc(fused[#loc55, #loc56])
#loc165 = loc(fused[#loc57, #loc58])
#loc166 = loc(fused[#loc59, #loc60])
#loc167 = loc(fused[#loc61, #loc62])
#loc168 = loc(fused[#loc63, #loc64])
#loc169 = loc(fused[#loc65, #loc66])
#loc170 = loc(fused[#loc67, #loc68])
#loc171 = loc(fused[#loc69, #loc70])
#loc172 = loc(fused[#loc72, #loc71])
#loc173 = loc(fused[#loc75, #loc76])
#loc174 = loc(fused[#loc77, #loc78])
#loc175 = loc(fused[#loc82, #loc83])
#loc176 = loc(fused[#loc85, #loc86])
#loc177 = loc(fused[#loc87, #loc88])
#loc178 = loc(fused[#loc89, #loc86])
#loc179 = loc(fused[#loc100, #loc101])
#loc180 = loc(fused[#loc102, #loc103])
#loc181 = loc(fused[#loc104, #loc105])
#loc182 = loc(fused[#loc106, #loc107])
#loc183 = loc(fused[#loc108, #loc109])
#loc184 = loc(fused[#loc110, #loc111])
#loc185 = loc(fused[#loc112, #loc113])
#loc186 = loc(fused[#loc115, #loc114])
#loc187 = loc(fused[#loc118, #loc119])
#loc188 = loc(fused[#loc120, #loc121])
#loc189 = loc(fused[#loc125, #loc126])
#loc190 = loc(fused[#loc127, #loc128])
#loc191 = loc(fused[#loc129, #loc130])
#loc192 = loc(fused[#loc131, #loc132])
#loc193 = loc(fused[#loc133, #loc130])
