!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc18 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":46:24)
#loc19 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":46:30)
#loc89 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":83:44)
#loc138 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":146:28)
#loc139 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":146:34)
#loc206 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":183:44)
#loc257 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":125:28)
#loc258 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":125:34)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc290 = loc(fused[#loc18, #loc19])
#loc335 = loc(fused[#loc138, #loc139])
#loc379 = loc(fused[#loc257, #loc258])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc282)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc283)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc284)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc285)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc286)
  cir.func private @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc287)
  cir.func private @close(!s32i) -> !s32i loc(#loc288)
  cir.func internal private @badSource(%arg0: !cir.float loc(fused[#loc18, #loc19])) -> !cir.float extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc291)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc292)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc293)
    %3 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc294)
    %4 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc290)
    %5 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["__retval"] {alignment = 4 : i64} loc(#loc17)
    cir.store %arg0, %4 : !cir.float, !cir.ptr<!cir.float> loc(#loc28)
    cir.br ^bb1 loc(#loc295)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc25)
    cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc293)
    cir.br ^bb2 loc(#loc296)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc296)
  ^bb3:  // pred: ^bb24
    %8 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc33)
    cir.brcond %9 ^bb4, ^bb25 loc(#loc33)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %10 = cir.const #cir.int<2> : !s32i loc(#loc34)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %12 = cir.const #cir.int<6> : !s32i loc(#loc36)
    %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc37)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc297)
    cir.br ^bb5 loc(#loc298)
  ^bb5:  // pred: ^bb4
    %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc42)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc43)
    %17 = cir.cmp(eq, %14, %16) : !s32i, !cir.bool loc(#loc299)
    cir.brcond %17 ^bb6, ^bb7 loc(#loc300)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc45)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc41)
  ^bb8:  // pred: ^bb7
    %18 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc301)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc48)
    %20 = cir.const #cir.int<16> : !u64i loc(#loc302)
    cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc303)
    %21 = cir.const #cir.int<2> : !s32i loc(#loc53)
    %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc53)
    %23 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc54)
    cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc304)
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %26 = cir.call @inet_addr(%25) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc56)
    %27 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc57)
    %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc58)
    cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc305)
    %29 = cir.const #cir.int<27015> : !s32i loc(#loc61)
    %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc61)
    %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc62)
    %32 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc63)
    cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc306)
    cir.br ^bb9 loc(#loc307)
  ^bb9:  // pred: ^bb8
    %33 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc68)
    %34 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc308)
    %35 = cir.const #cir.int<16> : !u64i loc(#loc309)
    %36 = cir.cast(integral, %35 : !u64i), !u32i loc(#loc309)
    %37 = cir.call @connect(%33, %34, %36) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc73)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc74)
    %39 = cir.unary(minus, %38) : !s32i, !s32i loc(#loc74)
    %40 = cir.cmp(eq, %37, %39) : !s32i, !cir.bool loc(#loc310)
    cir.brcond %40 ^bb10, ^bb11 loc(#loc311)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc76)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc67)
  ^bb12:  // pred: ^bb11
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc77)
    %42 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc78)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc78)
    %44 = cir.const #cir.int<20> : !s32i loc(#loc79)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc80)
    %46 = cir.binop(sub, %44, %45) nsw : !s32i loc(#loc79)
    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc79)
    %48 = cir.const #cir.int<0> : !s32i loc(#loc81)
    %49 = cir.call @recv(%41, %43, %47, %48) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc82)
    %50 = cir.cast(integral, %49 : !s64i), !s32i loc(#loc82)
    cir.store %50, %0 : !s32i, !cir.ptr<!s32i> loc(#loc312)
    cir.br ^bb13 loc(#loc313)
  ^bb13:  // pred: ^bb12
    %51 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc87)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc88)
    %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc314)
    cir.brcond %54 ^bb14, ^bb15 loc(#loc89)
  ^bb14:  // pred: ^bb13
    %55 = cir.const #true loc(#loc89)
    cir.br ^bb20(%55 : !cir.bool) loc(#loc89)
  ^bb15:  // pred: ^bb13
    %56 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    %57 = cir.const #cir.int<0> : !s32i loc(#loc91)
    %58 = cir.cmp(eq, %56, %57) : !s32i, !cir.bool loc(#loc315)
    cir.brcond %58 ^bb16, ^bb17 loc(#loc89)
  ^bb16:  // pred: ^bb15
    %59 = cir.const #true loc(#loc89)
    cir.br ^bb18(%59 : !cir.bool) loc(#loc89)
  ^bb17:  // pred: ^bb15
    %60 = cir.const #false loc(#loc89)
    cir.br ^bb18(%60 : !cir.bool) loc(#loc89)
  ^bb18(%61: !cir.bool loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":83:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc89)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%61 : !cir.bool) loc(#loc89)
  ^bb20(%62: !cir.bool loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":83:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc89)
  ^bb21:  // pred: ^bb20
    cir.brcond %62 ^bb22, ^bb23 loc(#loc316)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc93)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc86)
  ^bb24:  // pred: ^bb23
    %63 = cir.const #cir.int<0> : !s32i loc(#loc94)
    %64 = cir.cast(integral, %63 : !s32i), !s8i loc(#loc94)
    %65 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %66 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc96)
    %67 = cir.ptr_stride(%66 : !cir.ptr<!s8i>, %65 : !s32i), !cir.ptr<!s8i> loc(#loc96)
    cir.store %64, %67 : !s8i, !cir.ptr<!s8i> loc(#loc317)
    %68 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc97)
    %69 = cir.call @atof(%68) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc98)
    %70 = cir.cast(floating, %69 : !cir.double), !cir.float loc(#loc98)
    cir.store %70, %4 : !cir.float, !cir.ptr<!cir.float> loc(#loc318)
    cir.br ^bb3 loc(#loc32)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc32)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc319)
  ^bb27:  // pred: ^bb26
    %71 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %72 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc104)
    %74 = cir.cmp(ne, %71, %73) : !s32i, !cir.bool loc(#loc320)
    cir.brcond %74 ^bb28, ^bb29 loc(#loc321)
  ^bb28:  // pred: ^bb27
    %75 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    %76 = cir.call @close(%75) : (!s32i) -> !s32i loc(#loc107)
    cir.br ^bb29 loc(#loc102)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc102)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc30)
  ^bb31:  // pred: ^bb30
    %77 = cir.load %4 : !cir.ptr<!cir.float>, !cir.float loc(#loc108)
    cir.store %77, %5 : !cir.float, !cir.ptr<!cir.float> loc(#loc322)
    %78 = cir.load %5 : !cir.ptr<!cir.float>, !cir.float loc(#loc322)
    cir.return %78 : !cir.float loc(#loc322)
  } loc(#loc289)
  cir.func private @printIntLine(!s32i) loc(#loc323)
  cir.func no_proto @CWE369_Divide_by_Zero__float_connect_socket_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc325)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc326)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc118)
    cir.store %2, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc327)
    %3 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc120)
    %4 = cir.call @badSource(%3) : (!cir.float) -> !cir.float loc(#loc121)
    cir.store %4, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc328)
    cir.br ^bb1 loc(#loc329)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc126)
    %6 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc127)
    %7 = cir.cast(floating, %6 : !cir.float), !cir.double loc(#loc127)
    %8 = cir.binop(div, %5, %7) : !cir.double loc(#loc330)
    %9 = cir.cast(float_to_int, %8 : !cir.double), !s32i loc(#loc330)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc325)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc129)
    cir.br ^bb2 loc(#loc125)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc113)
  } loc(#loc324)
  cir.func no_proto @CWE369_Divide_by_Zero__float_connect_socket_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc332)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc132)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc333)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc134)
    cir.return loc(#loc131)
  } loc(#loc331)
  cir.func internal private @goodB2GSource(%arg0: !cir.float loc(fused[#loc138, #loc139])) -> !cir.float extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc336)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc337)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc338)
    %3 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc339)
    %4 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc335)
    %5 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["__retval"] {alignment = 4 : i64} loc(#loc137)
    cir.store %arg0, %4 : !cir.float, !cir.ptr<!cir.float> loc(#loc148)
    cir.br ^bb1 loc(#loc340)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<1> : !s32i loc(#loc145)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc145)
    cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc338)
    cir.br ^bb2 loc(#loc341)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc341)
  ^bb3:  // pred: ^bb24
    %8 = cir.const #cir.int<0> : !s32i loc(#loc153)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc153)
    cir.brcond %9 ^bb4, ^bb25 loc(#loc153)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %10 = cir.const #cir.int<2> : !s32i loc(#loc154)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc155)
    %12 = cir.const #cir.int<6> : !s32i loc(#loc156)
    %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc157)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc342)
    cir.br ^bb5 loc(#loc343)
  ^bb5:  // pred: ^bb4
    %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc163)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc163)
    %17 = cir.cmp(eq, %14, %16) : !s32i, !cir.bool loc(#loc344)
    cir.brcond %17 ^bb6, ^bb7 loc(#loc345)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc165)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc161)
  ^bb8:  // pred: ^bb7
    %18 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc346)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc168)
    %20 = cir.const #cir.int<16> : !u64i loc(#loc347)
    cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc348)
    %21 = cir.const #cir.int<2> : !s32i loc(#loc173)
    %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc173)
    %23 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc54)
    cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc349)
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc175)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc175)
    %26 = cir.call @inet_addr(%25) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc176)
    %27 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc57)
    %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc58)
    cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc350)
    %29 = cir.const #cir.int<27015> : !s32i loc(#loc179)
    %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc179)
    %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc180)
    %32 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc63)
    cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc351)
    cir.br ^bb9 loc(#loc352)
  ^bb9:  // pred: ^bb8
    %33 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc185)
    %34 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc353)
    %35 = cir.const #cir.int<16> : !u64i loc(#loc354)
    %36 = cir.cast(integral, %35 : !u64i), !u32i loc(#loc354)
    %37 = cir.call @connect(%33, %34, %36) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc190)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc191)
    %39 = cir.unary(minus, %38) : !s32i, !s32i loc(#loc191)
    %40 = cir.cmp(eq, %37, %39) : !s32i, !cir.bool loc(#loc355)
    cir.brcond %40 ^bb10, ^bb11 loc(#loc356)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc193)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc184)
  ^bb12:  // pred: ^bb11
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc194)
    %42 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc195)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc195)
    %44 = cir.const #cir.int<20> : !s32i loc(#loc196)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc197)
    %46 = cir.binop(sub, %44, %45) nsw : !s32i loc(#loc196)
    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc196)
    %48 = cir.const #cir.int<0> : !s32i loc(#loc198)
    %49 = cir.call @recv(%41, %43, %47, %48) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc199)
    %50 = cir.cast(integral, %49 : !s64i), !s32i loc(#loc199)
    cir.store %50, %0 : !s32i, !cir.ptr<!s32i> loc(#loc357)
    cir.br ^bb13 loc(#loc358)
  ^bb13:  // pred: ^bb12
    %51 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc204)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc205)
    %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc205)
    %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc359)
    cir.brcond %54 ^bb14, ^bb15 loc(#loc206)
  ^bb14:  // pred: ^bb13
    %55 = cir.const #true loc(#loc206)
    cir.br ^bb20(%55 : !cir.bool) loc(#loc206)
  ^bb15:  // pred: ^bb13
    %56 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc207)
    %57 = cir.const #cir.int<0> : !s32i loc(#loc208)
    %58 = cir.cmp(eq, %56, %57) : !s32i, !cir.bool loc(#loc360)
    cir.brcond %58 ^bb16, ^bb17 loc(#loc206)
  ^bb16:  // pred: ^bb15
    %59 = cir.const #true loc(#loc206)
    cir.br ^bb18(%59 : !cir.bool) loc(#loc206)
  ^bb17:  // pred: ^bb15
    %60 = cir.const #false loc(#loc206)
    cir.br ^bb18(%60 : !cir.bool) loc(#loc206)
  ^bb18(%61: !cir.bool loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":183:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc206)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%61 : !cir.bool) loc(#loc206)
  ^bb20(%62: !cir.bool loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":183:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc206)
  ^bb21:  // pred: ^bb20
    cir.brcond %62 ^bb22, ^bb23 loc(#loc361)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc210)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc203)
  ^bb24:  // pred: ^bb23
    %63 = cir.const #cir.int<0> : !s32i loc(#loc211)
    %64 = cir.cast(integral, %63 : !s32i), !s8i loc(#loc211)
    %65 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc212)
    %66 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc213)
    %67 = cir.ptr_stride(%66 : !cir.ptr<!s8i>, %65 : !s32i), !cir.ptr<!s8i> loc(#loc213)
    cir.store %64, %67 : !s8i, !cir.ptr<!s8i> loc(#loc362)
    %68 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc214)
    %69 = cir.call @atof(%68) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc215)
    %70 = cir.cast(floating, %69 : !cir.double), !cir.float loc(#loc215)
    cir.store %70, %4 : !cir.float, !cir.ptr<!cir.float> loc(#loc363)
    cir.br ^bb3 loc(#loc152)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc152)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc364)
  ^bb27:  // pred: ^bb26
    %71 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc220)
    %72 = cir.const #cir.int<1> : !s32i loc(#loc221)
    %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc221)
    %74 = cir.cmp(ne, %71, %73) : !s32i, !cir.bool loc(#loc365)
    cir.brcond %74 ^bb28, ^bb29 loc(#loc366)
  ^bb28:  // pred: ^bb27
    %75 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc223)
    %76 = cir.call @close(%75) : (!s32i) -> !s32i loc(#loc224)
    cir.br ^bb29 loc(#loc219)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc219)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc150)
  ^bb31:  // pred: ^bb30
    %77 = cir.load %4 : !cir.ptr<!cir.float>, !cir.float loc(#loc225)
    cir.store %77, %5 : !cir.float, !cir.ptr<!cir.float> loc(#loc367)
    %78 = cir.load %5 : !cir.ptr<!cir.float>, !cir.float loc(#loc367)
    cir.return %78 : !cir.float loc(#loc367)
  } loc(#loc334)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc368)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc229)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc370)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc371)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc236)
    cir.store %2, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc372)
    %3 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc238)
    %4 = cir.call @goodB2GSource(%3) : (!cir.float) -> !cir.float loc(#loc239)
    cir.store %4, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc373)
    cir.br ^bb1 loc(#loc374)
  ^bb1:  // pred: ^bb0
    %5 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc244)
    %6 = cir.cast(floating, %5 : !cir.float), !cir.double loc(#loc244)
    %7 = cir.fabs %6 : !cir.double loc(#loc244)
    %8 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc245)
    %9 = cir.cmp(gt, %7, %8) : !cir.double, !cir.bool loc(#loc375)
    cir.brcond %9 ^bb2, ^bb3 loc(#loc376)
  ^bb2:  // pred: ^bb1
    %10 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc250)
    %11 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc251)
    %12 = cir.cast(floating, %11 : !cir.float), !cir.double loc(#loc251)
    %13 = cir.binop(div, %10, %12) : !cir.double loc(#loc377)
    %14 = cir.cast(float_to_int, %13 : !cir.double), !s32i loc(#loc377)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc370)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc252)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc253)
    cir.br ^bb4 loc(#loc248)
  ^bb3:  // pred: ^bb1
    %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc229)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc229)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc254)
    cir.br ^bb4 loc(#loc243)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc243)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc231)
  } loc(#loc369)
  cir.func internal private @goodG2BSource(%arg0: !cir.float loc(fused[#loc257, #loc258])) -> !cir.float extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc379)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["__retval"] {alignment = 4 : i64} loc(#loc256)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc259)
    %2 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc260)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc380)
    %3 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc262)
    cir.store %3, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc381)
    %4 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc381)
    cir.return %4 : !cir.float loc(#loc381)
  } loc(#loc378)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc383)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc384)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc270)
    cir.store %2, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc385)
    %3 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc272)
    %4 = cir.call @goodG2BSource(%3) : (!cir.float) -> !cir.float loc(#loc273)
    cir.store %4, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc386)
    cir.br ^bb1 loc(#loc387)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc278)
    %6 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc279)
    %7 = cir.cast(floating, %6 : !cir.float), !cir.double loc(#loc279)
    %8 = cir.binop(div, %5, %7) : !cir.double loc(#loc388)
    %9 = cir.cast(float_to_int, %8 : !cir.double), !s32i loc(#loc388)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc383)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc280)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc281)
    cir.br ^bb2 loc(#loc277)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc265)
  } loc(#loc382)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_42.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":73:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":102:1)
#loc13 = loc("/usr/include/stdlib.h":103:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":46:1)
#loc17 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":105:1)
#loc20 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":53:9)
#loc21 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":53:13)
#loc22 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":54:9)
#loc23 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":54:28)
#loc24 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":55:9)
#loc25 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":55:32)
#loc26 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":56:9)
#loc27 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":56:41)
#loc28 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":47:1)
#loc29 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":48:5)
#loc30 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":103:5)
#loc31 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":57:9)
#loc32 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":92:17)
#loc33 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":92:16)
#loc34 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":66:36)
#loc35 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":66:45)
#loc36 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":66:58)
#loc37 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":66:29)
#loc38 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":66:13)
#loc39 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":66:69)
#loc40 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":67:13)
#loc41 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":70:13)
#loc42 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":67:17)
#loc43 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":67:34)
#loc44 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":68:13)
#loc45 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":69:17)
#loc46 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":71:20)
#loc47 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":71:21)
#loc48 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":71:30)
#loc49 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":71:33)
#loc50 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":71:47)
#loc51 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":71:13)
#loc52 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":71:48)
#loc53 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":72:34)
#loc54 = loc("/usr/include/netinet/in.h":249:5)
#loc55 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":72:13)
#loc56 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":73:39)
#loc57 = loc("/usr/include/netinet/in.h":251:20)
#loc58 = loc("/usr/include/netinet/in.h":33:15)
#loc59 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":73:13)
#loc60 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":73:59)
#loc61 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":74:38)
#loc62 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":74:32)
#loc63 = loc("/usr/include/netinet/in.h":250:15)
#loc64 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":74:13)
#loc65 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":74:46)
#loc66 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":75:13)
#loc67 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":78:13)
#loc68 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":75:25)
#loc69 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":75:58)
#loc70 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":75:59)
#loc71 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":75:68)
#loc72 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":75:82)
#loc73 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":75:17)
#loc74 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":75:88)
#loc75 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":76:13)
#loc76 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":77:17)
#loc77 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":82:31)
#loc78 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":82:46)
#loc79 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":82:59)
#loc80 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":82:77)
#loc81 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":82:80)
#loc82 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":82:26)
#loc83 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":82:13)
#loc84 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":82:81)
#loc85 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":83:13)
#loc86 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":86:13)
#loc87 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":83:17)
#loc88 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":83:31)
#loc90 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":83:47)
#loc91 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":83:61)
#loc92 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":84:13)
#loc93 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":85:17)
#loc94 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":88:39)
#loc95 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":88:25)
#loc96 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":88:13)
#loc97 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":90:32)
#loc98 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":90:27)
#loc99 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":90:13)
#loc100 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":90:43)
#loc101 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":93:9)
#loc102 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":96:9)
#loc103 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":93:13)
#loc104 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":93:30)
#loc105 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":94:9)
#loc106 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":95:26)
#loc107 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":95:13)
#loc108 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":104:12)
#loc109 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":104:5)
#loc110 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc111 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc112 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":107:1)
#loc113 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":118:1)
#loc114 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":115:9)
#loc115 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":115:40)
#loc116 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":109:5)
#loc117 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":109:11)
#loc118 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":111:12)
#loc119 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":111:5)
#loc120 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":112:22)
#loc121 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":112:12)
#loc122 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":112:5)
#loc123 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":112:26)
#loc124 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":113:5)
#loc125 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":117:5)
#loc126 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":115:28)
#loc127 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":115:36)
#loc128 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":116:22)
#loc129 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":116:9)
#loc130 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":225:1)
#loc131 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":229:1)
#loc132 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":227:5)
#loc133 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":227:13)
#loc134 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":228:5)
#loc135 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":228:13)
#loc136 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":146:1)
#loc137 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":205:1)
#loc140 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":153:9)
#loc141 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":153:13)
#loc142 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":154:9)
#loc143 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":154:28)
#loc144 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":155:9)
#loc145 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":155:32)
#loc146 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":156:9)
#loc147 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":156:41)
#loc148 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":147:1)
#loc149 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":148:5)
#loc150 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":203:5)
#loc151 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":157:9)
#loc152 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":192:17)
#loc153 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":192:16)
#loc154 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":166:36)
#loc155 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":166:45)
#loc156 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":166:58)
#loc157 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":166:29)
#loc158 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":166:13)
#loc159 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":166:69)
#loc160 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":167:13)
#loc161 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":170:13)
#loc162 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":167:17)
#loc163 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":167:34)
#loc164 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":168:13)
#loc165 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":169:17)
#loc166 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":171:20)
#loc167 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":171:21)
#loc168 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":171:30)
#loc169 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":171:33)
#loc170 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":171:47)
#loc171 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":171:13)
#loc172 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":171:48)
#loc173 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":172:34)
#loc174 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":172:13)
#loc175 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":173:49)
#loc176 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":173:39)
#loc177 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":173:13)
#loc178 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":173:59)
#loc179 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":174:38)
#loc180 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":174:32)
#loc181 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":174:13)
#loc182 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":174:46)
#loc183 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":175:13)
#loc184 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":178:13)
#loc185 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":175:25)
#loc186 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":175:58)
#loc187 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":175:59)
#loc188 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":175:68)
#loc189 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":175:82)
#loc190 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":175:17)
#loc191 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":175:88)
#loc192 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":176:13)
#loc193 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":177:17)
#loc194 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":182:31)
#loc195 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":182:46)
#loc196 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":182:59)
#loc197 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":182:77)
#loc198 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":182:80)
#loc199 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":182:26)
#loc200 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":182:13)
#loc201 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":182:81)
#loc202 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":183:13)
#loc203 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":186:13)
#loc204 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":183:17)
#loc205 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":183:31)
#loc207 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":183:47)
#loc208 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":183:61)
#loc209 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":184:13)
#loc210 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":185:17)
#loc211 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":188:39)
#loc212 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":188:25)
#loc213 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":188:13)
#loc214 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":190:32)
#loc215 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":190:27)
#loc216 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":190:13)
#loc217 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":190:43)
#loc218 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":193:9)
#loc219 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":196:9)
#loc220 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":193:13)
#loc221 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":193:30)
#loc222 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":194:9)
#loc223 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":195:26)
#loc224 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":195:13)
#loc225 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":204:12)
#loc226 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":204:5)
#loc227 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc228 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc229 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":221:19)
#loc230 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":207:1)
#loc231 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":223:1)
#loc232 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":216:9)
#loc233 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":216:40)
#loc234 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":209:5)
#loc235 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":209:11)
#loc236 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":211:12)
#loc237 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":211:5)
#loc238 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":212:26)
#loc239 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":212:12)
#loc240 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":212:5)
#loc241 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":212:30)
#loc242 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":214:5)
#loc243 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":222:5)
#loc244 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":214:13)
#loc245 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":214:21)
#loc246 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":214:8)
#loc247 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":215:5)
#loc248 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":218:5)
#loc249 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":220:5)
#loc250 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":216:28)
#loc251 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":216:36)
#loc252 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":217:22)
#loc253 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":217:9)
#loc254 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":221:9)
#loc255 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":125:1)
#loc256 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":130:1)
#loc259 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":126:1)
#loc260 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":128:12)
#loc261 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":128:5)
#loc262 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":129:12)
#loc263 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":129:5)
#loc264 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":132:1)
#loc265 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":143:1)
#loc266 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":140:9)
#loc267 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":140:40)
#loc268 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":134:5)
#loc269 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":134:11)
#loc270 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":136:12)
#loc271 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":136:5)
#loc272 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":137:26)
#loc273 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":137:12)
#loc274 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":137:5)
#loc275 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":137:30)
#loc276 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":138:5)
#loc277 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":142:5)
#loc278 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":140:28)
#loc279 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":140:36)
#loc280 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":141:22)
#loc281 = loc("CWE369_Divide_by_Zero__float_connect_socket_42.c":141:9)
#loc282 = loc(fused[#loc1, #loc2])
#loc283 = loc(fused[#loc3, #loc4])
#loc284 = loc(fused[#loc6, #loc7])
#loc285 = loc(fused[#loc8, #loc9])
#loc286 = loc(fused[#loc10, #loc11])
#loc287 = loc(fused[#loc12, #loc13])
#loc288 = loc(fused[#loc14, #loc15])
#loc289 = loc(fused[#loc16, #loc17])
#loc291 = loc(fused[#loc20, #loc21])
#loc292 = loc(fused[#loc22, #loc23])
#loc293 = loc(fused[#loc24, #loc25])
#loc294 = loc(fused[#loc26, #loc27])
#loc295 = loc(fused[#loc29, #loc30])
#loc296 = loc(fused[#loc31, #loc32])
#loc297 = loc(fused[#loc38, #loc39])
#loc298 = loc(fused[#loc40, #loc41])
#loc299 = loc(fused[#loc42, #loc43])
#loc300 = loc(fused[#loc44, #loc41])
#loc301 = loc(fused[#loc46, #loc47])
#loc302 = loc(fused[#loc49, #loc50])
#loc303 = loc(fused[#loc51, #loc52])
#loc304 = loc(fused[#loc55, #loc53])
#loc305 = loc(fused[#loc59, #loc60])
#loc306 = loc(fused[#loc64, #loc65])
#loc307 = loc(fused[#loc66, #loc67])
#loc308 = loc(fused[#loc69, #loc70])
#loc309 = loc(fused[#loc71, #loc72])
#loc310 = loc(fused[#loc73, #loc74])
#loc311 = loc(fused[#loc75, #loc67])
#loc312 = loc(fused[#loc83, #loc84])
#loc313 = loc(fused[#loc85, #loc86])
#loc314 = loc(fused[#loc87, #loc88])
#loc315 = loc(fused[#loc90, #loc91])
#loc316 = loc(fused[#loc92, #loc86])
#loc317 = loc(fused[#loc96, #loc94])
#loc318 = loc(fused[#loc99, #loc100])
#loc319 = loc(fused[#loc101, #loc102])
#loc320 = loc(fused[#loc103, #loc104])
#loc321 = loc(fused[#loc105, #loc102])
#loc322 = loc(fused[#loc109, #loc108])
#loc323 = loc(fused[#loc110, #loc111])
#loc324 = loc(fused[#loc112, #loc113])
#loc325 = loc(fused[#loc114, #loc115])
#loc326 = loc(fused[#loc116, #loc117])
#loc327 = loc(fused[#loc119, #loc118])
#loc328 = loc(fused[#loc122, #loc123])
#loc329 = loc(fused[#loc124, #loc125])
#loc330 = loc(fused[#loc126, #loc127])
#loc331 = loc(fused[#loc130, #loc131])
#loc332 = loc(fused[#loc132, #loc133])
#loc333 = loc(fused[#loc134, #loc135])
#loc334 = loc(fused[#loc136, #loc137])
#loc336 = loc(fused[#loc140, #loc141])
#loc337 = loc(fused[#loc142, #loc143])
#loc338 = loc(fused[#loc144, #loc145])
#loc339 = loc(fused[#loc146, #loc147])
#loc340 = loc(fused[#loc149, #loc150])
#loc341 = loc(fused[#loc151, #loc152])
#loc342 = loc(fused[#loc158, #loc159])
#loc343 = loc(fused[#loc160, #loc161])
#loc344 = loc(fused[#loc162, #loc163])
#loc345 = loc(fused[#loc164, #loc161])
#loc346 = loc(fused[#loc166, #loc167])
#loc347 = loc(fused[#loc169, #loc170])
#loc348 = loc(fused[#loc171, #loc172])
#loc349 = loc(fused[#loc174, #loc173])
#loc350 = loc(fused[#loc177, #loc178])
#loc351 = loc(fused[#loc181, #loc182])
#loc352 = loc(fused[#loc183, #loc184])
#loc353 = loc(fused[#loc186, #loc187])
#loc354 = loc(fused[#loc188, #loc189])
#loc355 = loc(fused[#loc190, #loc191])
#loc356 = loc(fused[#loc192, #loc184])
#loc357 = loc(fused[#loc200, #loc201])
#loc358 = loc(fused[#loc202, #loc203])
#loc359 = loc(fused[#loc204, #loc205])
#loc360 = loc(fused[#loc207, #loc208])
#loc361 = loc(fused[#loc209, #loc203])
#loc362 = loc(fused[#loc213, #loc211])
#loc363 = loc(fused[#loc216, #loc217])
#loc364 = loc(fused[#loc218, #loc219])
#loc365 = loc(fused[#loc220, #loc221])
#loc366 = loc(fused[#loc222, #loc219])
#loc367 = loc(fused[#loc226, #loc225])
#loc368 = loc(fused[#loc227, #loc228])
#loc369 = loc(fused[#loc230, #loc231])
#loc370 = loc(fused[#loc232, #loc233])
#loc371 = loc(fused[#loc234, #loc235])
#loc372 = loc(fused[#loc237, #loc236])
#loc373 = loc(fused[#loc240, #loc241])
#loc374 = loc(fused[#loc242, #loc243])
#loc375 = loc(fused[#loc246, #loc245])
#loc376 = loc(fused[#loc247, #loc248, #loc249, #loc243])
#loc377 = loc(fused[#loc250, #loc251])
#loc378 = loc(fused[#loc255, #loc256])
#loc380 = loc(fused[#loc261, #loc260])
#loc381 = loc(fused[#loc263, #loc262])
#loc382 = loc(fused[#loc264, #loc265])
#loc383 = loc(fused[#loc266, #loc267])
#loc384 = loc(fused[#loc268, #loc269])
#loc385 = loc(fused[#loc271, #loc270])
#loc386 = loc(fused[#loc274, #loc275])
#loc387 = loc(fused[#loc276, #loc277])
#loc388 = loc(fused[#loc278, #loc279])
