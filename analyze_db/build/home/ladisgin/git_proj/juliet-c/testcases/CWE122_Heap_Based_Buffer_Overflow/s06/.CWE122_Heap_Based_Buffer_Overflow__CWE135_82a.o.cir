!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc9 = loc("./CWE122_Heap_Based_Buffer_Overflow__CWE135_82.h":34:7)
#loc56 = loc("./CWE122_Heap_Based_Buffer_Overflow__CWE135_82.h":44:7)
#loc102 = loc("./CWE122_Heap_Based_Buffer_Overflow__CWE135_82.h":50:7)
#loc153 = loc("./CWE122_Heap_Based_Buffer_Overflow__CWE135_82.h":25:7)
!ty_anon_struct = !cir.struct<struct  {!cir.ptr<!u8i>, !cir.ptr<!u8i>}>
!ty_anon_struct1 = !cir.struct<struct  {!cir.array<!cir.ptr<!u8i> x 3>}>
!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base = !cir.struct<class "CWE122_Heap_Based_Buffer_Overflow__CWE135_82::CWE122_Heap_Based_Buffer_Overflow__CWE135_82_base" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>} #cir.record.decl.ast>
!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_bad = !cir.struct<class "CWE122_Heap_Based_Buffer_Overflow__CWE135_82::CWE122_Heap_Based_Buffer_Overflow__CWE135_82_bad" {!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base} #cir.record.decl.ast>
!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_goodB2G = !cir.struct<class "CWE122_Heap_Based_Buffer_Overflow__CWE135_82::CWE122_Heap_Based_Buffer_Overflow__CWE135_82_goodB2G" {!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base} #cir.record.decl.ast>
!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_goodG2B = !cir.struct<class "CWE122_Heap_Based_Buffer_Overflow__CWE135_82::CWE122_Heap_Based_Buffer_Overflow__CWE135_82_goodG2B" {!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc154)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc155)
  cir.func private @wmemset(!cir.ptr<!s32i>, !s32i, !u64i) -> !cir.ptr<!s32i> extra(#fn_attr) loc(#loc156)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc157)
  cir.func linkonce_odr @_ZN44CWE122_Heap_Based_Buffer_Overflow__CWE135_8248CWE122_Heap_Based_Buffer_Overflow__CWE135_82_badC2Ev(%arg0: !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_bad> loc("./CWE122_Heap_Based_Buffer_Overflow__CWE135_82.h":34:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_bad>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_bad>>, ["this", init] {alignment = 8 : i64} loc(#loc9)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_bad>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_bad>> loc(#loc9)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_bad>>, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_bad> loc(#loc9)
    %2 = cir.base_class_addr(%1 : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_bad> nonnull) [0] -> !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base> loc(#loc9)
    cir.call @_ZN44CWE122_Heap_Based_Buffer_Overflow__CWE135_8249CWE122_Heap_Based_Buffer_Overflow__CWE135_82_baseC2Ev(%2) : (!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>) -> () extra(#fn_attr) loc(#loc9)
    %3 = cir.vtable.address_point(@_ZTVN44CWE122_Heap_Based_Buffer_Overflow__CWE135_8248CWE122_Heap_Based_Buffer_Overflow__CWE135_82_badE, vtable_index = 0, address_point_index = 2) : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>> loc(#loc158)
    %4 = cir.cast(bitcast, %1 : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_bad>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc9)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc9)
    cir.return loc(#loc9)
  } loc(#loc9)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc159)
  cir.func @_ZN44CWE122_Heap_Based_Buffer_Overflow__CWE135_823badEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc161)
    %1 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc162)
    %2 = cir.alloca !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>>, ["baseObject", init] {alignment = 8 : i64} loc(#loc163)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc22)
    cir.store %3, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc164)
    cir.br ^bb1 loc(#loc165)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc26)
    %5 = cir.const #cir.int<50> : !s32i loc(#loc27)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc27)
    %7 = cir.const #cir.int<4> : !u64i loc(#loc166)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc167)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc26)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc168)
    cir.store %10, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc161)
    cir.br ^bb2 loc(#loc169)
  ^bb2:  // pred: ^bb1
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc32)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc33)
    %13 = cir.cmp(eq, %11, %12) : !cir.ptr<!s32i>, !cir.bool loc(#loc170)
    cir.brcond %13 ^bb3, ^bb4 loc(#loc171)
  ^bb3:  // pred: ^bb2
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc35)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc37)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc35)
    cir.br ^bb4 loc(#loc31)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc31)
  ^bb5:  // pred: ^bb4
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc38)
    %18 = cir.const #cir.int<65> : !s32i loc(#loc39)
    %19 = cir.const #cir.int<50> : !s32i loc(#loc40)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc40)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc40)
    %23 = cir.call @wmemset(%17, %18, %22) : (!cir.ptr<!s32i>, !s32i, !u64i) -> !cir.ptr<!s32i> extra(#fn_attr) loc(#loc42)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc43)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc44)
    %26 = cir.const #cir.int<50> : !s32i loc(#loc45)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc46)
    %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc45)
    %29 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %28 : !s32i), !cir.ptr<!s32i> loc(#loc47)
    cir.store %24, %29 : !s32i, !cir.ptr<!s32i> loc(#loc172)
    %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc48)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc48)
    cir.store %31, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc173)
    cir.br ^bb6 loc(#loc25)
  ^bb6:  // pred: ^bb5
    %32 = cir.const #cir.int<8> : !u64i loc(#loc174)
    %33 = cir.call @_Znwm(%32) : (!u64i) -> !cir.ptr<!void> loc(#loc163)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_bad> loc(#loc174)
    cir.call @_ZN44CWE122_Heap_Based_Buffer_Overflow__CWE135_8248CWE122_Heap_Based_Buffer_Overflow__CWE135_82_badC2Ev(%34) : (!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_bad>) -> () extra(#fn_attr) loc(#loc21)
    %35 = cir.base_class_addr(%34 : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_bad> nonnull) [0] -> !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base> loc(#loc50)
    cir.store %35, %2 : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>> loc(#loc163)
    %36 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>>, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base> loc(#loc51)
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc52)
    %38 = cir.cast(bitcast, %36 : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>, !cir.ptr<!void>)>>>> loc(#loc51)
    %39 = cir.load %38 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>, !cir.ptr<!void>)>>>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>, !cir.ptr<!void>)>>> loc(#loc51)
    %40 = cir.vtable.address_point( %39 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>, !cir.ptr<!void>)>>>, vtable_index = 0, address_point_index = 0) : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>, !cir.ptr<!void>)>>> loc(#loc51)
    %41 = cir.load align(8) %40 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>, !cir.ptr<!void>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>, !cir.ptr<!void>)>> loc(#loc51)
    cir.call %41(%36, %37) : (!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>, !cir.ptr<!void>)>>, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>, !cir.ptr<!void>) -> () loc(#loc53)
    %42 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>>, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base> loc(#loc54)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>), !cir.ptr<!void> loc(#loc54)
    cir.call @_ZdlPv(%43) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc55)
    cir.return loc(#loc15)
  } loc(#loc160)
  cir.func linkonce_odr @_ZN44CWE122_Heap_Based_Buffer_Overflow__CWE135_8252CWE122_Heap_Based_Buffer_Overflow__CWE135_82_goodG2BC2Ev(%arg0: !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_goodG2B> loc("./CWE122_Heap_Based_Buffer_Overflow__CWE135_82.h":44:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_goodG2B>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_goodG2B>>, ["this", init] {alignment = 8 : i64} loc(#loc56)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_goodG2B>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_goodG2B>> loc(#loc56)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_goodG2B>>, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_goodG2B> loc(#loc56)
    %2 = cir.base_class_addr(%1 : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_goodG2B> nonnull) [0] -> !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base> loc(#loc56)
    cir.call @_ZN44CWE122_Heap_Based_Buffer_Overflow__CWE135_8249CWE122_Heap_Based_Buffer_Overflow__CWE135_82_baseC2Ev(%2) : (!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>) -> () extra(#fn_attr) loc(#loc56)
    %3 = cir.vtable.address_point(@_ZTVN44CWE122_Heap_Based_Buffer_Overflow__CWE135_8252CWE122_Heap_Based_Buffer_Overflow__CWE135_82_goodG2BE, vtable_index = 0, address_point_index = 2) : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>> loc(#loc175)
    %4 = cir.cast(bitcast, %1 : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_goodG2B>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc56)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc56)
    cir.return loc(#loc56)
  } loc(#loc56)
  cir.func internal private @_ZN44CWE122_Heap_Based_Buffer_Overflow__CWE135_82L7goodG2BEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc177)
    %1 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc178)
    %2 = cir.alloca !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>>, ["baseObject", init] {alignment = 8 : i64} loc(#loc179)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc67)
    cir.store %3, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc180)
    cir.br ^bb1 loc(#loc181)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc71)
    %5 = cir.const #cir.int<50> : !s32i loc(#loc72)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc72)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc182)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc183)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc71)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc184)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc177)
    cir.br ^bb2 loc(#loc185)
  ^bb2:  // pred: ^bb1
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc78)
    %13 = cir.cmp(eq, %11, %12) : !cir.ptr<!s8i>, !cir.bool loc(#loc186)
    cir.brcond %13 ^bb3, ^bb4 loc(#loc187)
  ^bb3:  // pred: ^bb2
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc80)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc81)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc82)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc80)
    cir.br ^bb4 loc(#loc76)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc76)
  ^bb5:  // pred: ^bb4
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc83)
    %19 = cir.const #cir.int<65> : !s8i loc(#loc84)
    %20 = cir.cast(integral, %19 : !s8i), !s32i loc(#loc84)
    %21 = cir.const #cir.int<50> : !s32i loc(#loc85)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc85)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc85)
    cir.libc.memset %24 bytes from %18 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc188)
    %25 = cir.const #cir.int<0> : !s8i loc(#loc89)
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
    %27 = cir.const #cir.int<50> : !s32i loc(#loc91)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc92)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc91)
    %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc93)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc189)
    %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc94)
    cir.store %32, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc190)
    cir.br ^bb6 loc(#loc70)
  ^bb6:  // pred: ^bb5
    %33 = cir.const #cir.int<8> : !u64i loc(#loc191)
    %34 = cir.call @_Znwm(%33) : (!u64i) -> !cir.ptr<!void> loc(#loc179)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_goodG2B> loc(#loc191)
    cir.call @_ZN44CWE122_Heap_Based_Buffer_Overflow__CWE135_8252CWE122_Heap_Based_Buffer_Overflow__CWE135_82_goodG2BC2Ev(%35) : (!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_goodG2B>) -> () extra(#fn_attr) loc(#loc66)
    %36 = cir.base_class_addr(%35 : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_goodG2B> nonnull) [0] -> !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base> loc(#loc96)
    cir.store %36, %2 : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>> loc(#loc179)
    %37 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>>, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base> loc(#loc97)
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc98)
    %39 = cir.cast(bitcast, %37 : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>, !cir.ptr<!void>)>>>> loc(#loc97)
    %40 = cir.load %39 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>, !cir.ptr<!void>)>>>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>, !cir.ptr<!void>)>>> loc(#loc97)
    %41 = cir.vtable.address_point( %40 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>, !cir.ptr<!void>)>>>, vtable_index = 0, address_point_index = 0) : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>, !cir.ptr<!void>)>>> loc(#loc97)
    %42 = cir.load align(8) %41 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>, !cir.ptr<!void>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>, !cir.ptr<!void>)>> loc(#loc97)
    cir.call %42(%37, %38) : (!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>, !cir.ptr<!void>)>>, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>, !cir.ptr<!void>) -> () loc(#loc99)
    %43 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>>, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base> loc(#loc100)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>), !cir.ptr<!void> loc(#loc100)
    cir.call @_ZdlPv(%44) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc101)
    cir.return loc(#loc60)
  } loc(#loc176)
  cir.func linkonce_odr @_ZN44CWE122_Heap_Based_Buffer_Overflow__CWE135_8252CWE122_Heap_Based_Buffer_Overflow__CWE135_82_goodB2GC2Ev(%arg0: !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_goodB2G> loc("./CWE122_Heap_Based_Buffer_Overflow__CWE135_82.h":50:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_goodB2G>>, ["this", init] {alignment = 8 : i64} loc(#loc102)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_goodB2G>> loc(#loc102)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_goodB2G>>, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_goodB2G> loc(#loc102)
    %2 = cir.base_class_addr(%1 : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_goodB2G> nonnull) [0] -> !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base> loc(#loc102)
    cir.call @_ZN44CWE122_Heap_Based_Buffer_Overflow__CWE135_8249CWE122_Heap_Based_Buffer_Overflow__CWE135_82_baseC2Ev(%2) : (!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>) -> () extra(#fn_attr) loc(#loc102)
    %3 = cir.vtable.address_point(@_ZTVN44CWE122_Heap_Based_Buffer_Overflow__CWE135_8252CWE122_Heap_Based_Buffer_Overflow__CWE135_82_goodB2GE, vtable_index = 0, address_point_index = 2) : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>> loc(#loc192)
    %4 = cir.cast(bitcast, %1 : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_goodB2G>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc102)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc102)
    cir.return loc(#loc102)
  } loc(#loc102)
  cir.func internal private @_ZN44CWE122_Heap_Based_Buffer_Overflow__CWE135_82L7goodB2GEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc194)
    %1 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc195)
    %2 = cir.alloca !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>>, ["baseObject", init] {alignment = 8 : i64} loc(#loc196)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc113)
    cir.store %3, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc197)
    cir.br ^bb1 loc(#loc198)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc117)
    %5 = cir.const #cir.int<50> : !s32i loc(#loc118)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc118)
    %7 = cir.const #cir.int<4> : !u64i loc(#loc199)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc200)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc117)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc201)
    cir.store %10, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc194)
    cir.br ^bb2 loc(#loc202)
  ^bb2:  // pred: ^bb1
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc123)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc124)
    %13 = cir.cmp(eq, %11, %12) : !cir.ptr<!s32i>, !cir.bool loc(#loc203)
    cir.brcond %13 ^bb3, ^bb4 loc(#loc204)
  ^bb3:  // pred: ^bb2
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc126)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc127)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc128)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc126)
    cir.br ^bb4 loc(#loc122)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc122)
  ^bb5:  // pred: ^bb4
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc129)
    %18 = cir.const #cir.int<65> : !s32i loc(#loc130)
    %19 = cir.const #cir.int<50> : !s32i loc(#loc131)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc131)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc131)
    %23 = cir.call @wmemset(%17, %18, %22) : (!cir.ptr<!s32i>, !s32i, !u64i) -> !cir.ptr<!s32i> extra(#fn_attr) loc(#loc133)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc134)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc135)
    %26 = cir.const #cir.int<50> : !s32i loc(#loc136)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc137)
    %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc136)
    %29 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %28 : !s32i), !cir.ptr<!s32i> loc(#loc138)
    cir.store %24, %29 : !s32i, !cir.ptr<!s32i> loc(#loc205)
    %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc139)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc139)
    cir.store %31, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc206)
    cir.br ^bb6 loc(#loc116)
  ^bb6:  // pred: ^bb5
    %32 = cir.const #cir.int<8> : !u64i loc(#loc207)
    %33 = cir.call @_Znwm(%32) : (!u64i) -> !cir.ptr<!void> loc(#loc196)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_goodB2G> loc(#loc207)
    cir.call @_ZN44CWE122_Heap_Based_Buffer_Overflow__CWE135_8252CWE122_Heap_Based_Buffer_Overflow__CWE135_82_goodB2GC2Ev(%34) : (!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_goodB2G>) -> () extra(#fn_attr) loc(#loc112)
    %35 = cir.base_class_addr(%34 : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_goodB2G> nonnull) [0] -> !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base> loc(#loc141)
    cir.store %35, %2 : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>> loc(#loc196)
    %36 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>>, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base> loc(#loc142)
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc143)
    %38 = cir.cast(bitcast, %36 : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>, !cir.ptr<!void>)>>>> loc(#loc142)
    %39 = cir.load %38 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>, !cir.ptr<!void>)>>>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>, !cir.ptr<!void>)>>> loc(#loc142)
    %40 = cir.vtable.address_point( %39 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>, !cir.ptr<!void>)>>>, vtable_index = 0, address_point_index = 0) : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>, !cir.ptr<!void>)>>> loc(#loc142)
    %41 = cir.load align(8) %40 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>, !cir.ptr<!void>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>, !cir.ptr<!void>)>> loc(#loc142)
    cir.call %41(%36, %37) : (!cir.ptr<!cir.func<!void (!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>, !cir.ptr<!void>)>>, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>, !cir.ptr<!void>) -> () loc(#loc144)
    %42 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>>, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base> loc(#loc145)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>), !cir.ptr<!void> loc(#loc145)
    cir.call @_ZdlPv(%43) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc146)
    cir.return loc(#loc106)
  } loc(#loc193)
  cir.func @_ZN44CWE122_Heap_Based_Buffer_Overflow__CWE135_824goodEv() extra(#fn_attr2) {
    cir.call @_ZN44CWE122_Heap_Based_Buffer_Overflow__CWE135_82L7goodG2BEv() : () -> () loc(#loc149)
    cir.call @_ZN44CWE122_Heap_Based_Buffer_Overflow__CWE135_82L7goodB2GEv() : () -> () loc(#loc150)
    cir.return loc(#loc148)
  } loc(#loc208)
  cir.global linkonce_odr dsolocal @_ZTVN44CWE122_Heap_Based_Buffer_Overflow__CWE135_8249CWE122_Heap_Based_Buffer_Overflow__CWE135_82_baseE = #cir.vtable<{#cir.const_array<[#cir.ptr<null> : !cir.ptr<!u8i>, #cir.global_view<@_ZTIN44CWE122_Heap_Based_Buffer_Overflow__CWE135_8249CWE122_Heap_Based_Buffer_Overflow__CWE135_82_baseE> : !cir.ptr<!u8i>, #cir.global_view<@__cxa_pure_virtual> : !cir.ptr<!u8i>]> : !cir.array<!cir.ptr<!u8i> x 3>}> : !ty_anon_struct1 {alignment = 8 : i64} loc(#loc209)
  cir.func linkonce_odr @_ZN44CWE122_Heap_Based_Buffer_Overflow__CWE135_8249CWE122_Heap_Based_Buffer_Overflow__CWE135_82_baseC2Ev(%arg0: !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base> loc("./CWE122_Heap_Based_Buffer_Overflow__CWE135_82.h":25:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>>, ["this", init] {alignment = 8 : i64} loc(#loc153)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>> loc(#loc153)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>>, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base> loc(#loc153)
    %2 = cir.vtable.address_point(@_ZTVN44CWE122_Heap_Based_Buffer_Overflow__CWE135_8249CWE122_Heap_Based_Buffer_Overflow__CWE135_82_baseE, vtable_index = 0, address_point_index = 2) : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>> loc(#loc209)
    %3 = cir.cast(bitcast, %1 : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE135_823A3ACWE122_Heap_Based_Buffer_Overflow__CWE135_82_base>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc153)
    cir.store %2, %3 : !cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>> loc(#loc153)
    cir.return loc(#loc153)
  } loc(#loc153)
  cir.global "private" external @_ZTVN44CWE122_Heap_Based_Buffer_Overflow__CWE135_8248CWE122_Heap_Based_Buffer_Overflow__CWE135_82_badE : !ty_anon_struct1 {alignment = 8 : i64} loc(#loc158)
  cir.global "private" external @_ZTVN10__cxxabiv117__class_type_infoE : !cir.ptr<!cir.ptr<!u8i>> loc(#loc151)
  cir.global linkonce_odr comdat @_ZTSN44CWE122_Heap_Based_Buffer_Overflow__CWE135_8249CWE122_Heap_Based_Buffer_Overflow__CWE135_82_baseE = #cir.const_array<"N44CWE122_Heap_Based_Buffer_Overflow__CWE135_8249CWE122_Heap_Based_Buffer_Overflow__CWE135_82_baseE" : !cir.array<!s8i x 99>> : !cir.array<!s8i x 99> {alignment = 1 : i64} loc(#loc151)
  cir.global constant external @_ZTIN44CWE122_Heap_Based_Buffer_Overflow__CWE135_8249CWE122_Heap_Based_Buffer_Overflow__CWE135_82_baseE = #cir.typeinfo<{#cir.global_view<@_ZTVN10__cxxabiv117__class_type_infoE, [2 : i32]> : !cir.ptr<!u8i>, #cir.global_view<@_ZTSN44CWE122_Heap_Based_Buffer_Overflow__CWE135_8249CWE122_Heap_Based_Buffer_Overflow__CWE135_82_baseE> : !cir.ptr<!u8i>}> : !ty_anon_struct {alignment = 8 : i64} loc(#loc151)
  cir.func private @__cxa_pure_virtual() loc(#loc)
  cir.global "private" external @_ZTVN44CWE122_Heap_Based_Buffer_Overflow__CWE135_8252CWE122_Heap_Based_Buffer_Overflow__CWE135_82_goodG2BE : !ty_anon_struct1 {alignment = 8 : i64} loc(#loc175)
  cir.global "private" external @_ZTVN44CWE122_Heap_Based_Buffer_Overflow__CWE135_8252CWE122_Heap_Based_Buffer_Overflow__CWE135_82_goodB2GE : !ty_anon_struct1 {alignment = 8 : i64} loc(#loc192)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/wchar.h":296:1)
#loc6 = loc("/usr/include/wchar.h":296:65)
#loc7 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc8 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc10 = loc("./CWE122_Heap_Based_Buffer_Overflow__CWE135_82.h":34:1)
#loc11 = loc("./CWE122_Heap_Based_Buffer_Overflow__CWE135_82.h":38:1)
#loc12 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc13 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":26:1)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":41:1)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":31:9)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":31:71)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":28:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":28:12)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":38:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":38:73)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":29:12)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":29:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":30:5)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":37:5)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":31:46)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":31:53)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":31:56)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":31:70)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":32:9)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":32:46)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":32:13)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":32:30)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":32:36)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":32:37)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":32:43)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":32:42)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":33:17)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":33:32)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":33:38)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":33:41)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":33:9)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":34:31)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":34:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":34:23)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":34:26)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":34:27)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":36:24)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":36:9)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":38:69)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":39:5)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":39:24)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":39:17)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":40:12)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":26:6)
#loc57 = loc("./CWE122_Heap_Based_Buffer_Overflow__CWE135_82.h":44:1)
#loc58 = loc("./CWE122_Heap_Based_Buffer_Overflow__CWE135_82.h":48:1)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":48:1)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":63:1)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":53:9)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":53:63)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":50:5)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":50:12)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":60:5)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":60:73)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":51:12)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":51:5)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":52:5)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":59:5)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":53:41)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":53:48)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":53:51)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":53:62)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":54:9)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":54:47)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":54:13)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":54:31)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":54:37)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":54:38)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":54:44)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":54:43)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":55:16)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":55:32)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":55:37)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":55:40)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":55:9)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":55:41)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":56:32)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":56:9)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":56:24)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":56:27)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":56:28)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":58:24)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":58:9)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":60:69)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":61:5)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":61:24)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":61:17)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":62:12)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":48:13)
#loc103 = loc("./CWE122_Heap_Based_Buffer_Overflow__CWE135_82.h":50:1)
#loc104 = loc("./CWE122_Heap_Based_Buffer_Overflow__CWE135_82.h":54:1)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":66:1)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":81:1)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":71:9)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":71:71)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":68:5)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":68:12)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":78:5)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":78:73)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":69:12)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":69:5)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":70:5)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":77:5)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":71:46)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":71:53)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":71:56)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":71:70)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":72:9)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":72:46)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":72:13)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":72:30)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":72:36)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":72:37)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":72:43)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":72:42)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":73:17)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":73:32)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":73:38)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":73:41)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":73:9)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":74:31)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":74:9)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":74:23)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":74:26)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":74:27)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":76:24)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":76:9)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":78:69)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":79:5)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":79:24)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":79:17)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":80:12)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":66:13)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":83:1)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":87:1)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":85:5)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE135_82a.cpp":86:5)
#loc151 = loc("./CWE122_Heap_Based_Buffer_Overflow__CWE135_82.h":25:1)
#loc152 = loc("./CWE122_Heap_Based_Buffer_Overflow__CWE135_82.h":30:1)
#loc154 = loc(fused[#loc1, #loc2])
#loc155 = loc(fused[#loc3, #loc4])
#loc156 = loc(fused[#loc5, #loc6])
#loc157 = loc(fused[#loc7, #loc8])
#loc158 = loc(fused[#loc10, #loc11])
#loc159 = loc(fused[#loc12, #loc13])
#loc160 = loc(fused[#loc14, #loc15])
#loc161 = loc(fused[#loc16, #loc17])
#loc162 = loc(fused[#loc18, #loc19])
#loc163 = loc(fused[#loc20, #loc21])
#loc164 = loc(fused[#loc23, #loc22])
#loc165 = loc(fused[#loc24, #loc25])
#loc166 = loc(fused[#loc28, #loc29])
#loc167 = loc(fused[#loc27, #loc29])
#loc168 = loc(fused[#loc26, #loc17])
#loc169 = loc(fused[#loc30, #loc31])
#loc170 = loc(fused[#loc32, #loc33])
#loc171 = loc(fused[#loc34, #loc31])
#loc172 = loc(fused[#loc44, #loc43])
#loc173 = loc(fused[#loc49, #loc48])
#loc174 = loc(fused[#loc50, #loc21])
#loc175 = loc(fused[#loc57, #loc58])
#loc176 = loc(fused[#loc59, #loc60])
#loc177 = loc(fused[#loc61, #loc62])
#loc178 = loc(fused[#loc63, #loc64])
#loc179 = loc(fused[#loc65, #loc66])
#loc180 = loc(fused[#loc68, #loc67])
#loc181 = loc(fused[#loc69, #loc70])
#loc182 = loc(fused[#loc73, #loc74])
#loc183 = loc(fused[#loc72, #loc74])
#loc184 = loc(fused[#loc71, #loc62])
#loc185 = loc(fused[#loc75, #loc76])
#loc186 = loc(fused[#loc77, #loc78])
#loc187 = loc(fused[#loc79, #loc76])
#loc188 = loc(fused[#loc87, #loc88])
#loc189 = loc(fused[#loc90, #loc89])
#loc190 = loc(fused[#loc95, #loc94])
#loc191 = loc(fused[#loc96, #loc66])
#loc192 = loc(fused[#loc103, #loc104])
#loc193 = loc(fused[#loc105, #loc106])
#loc194 = loc(fused[#loc107, #loc108])
#loc195 = loc(fused[#loc109, #loc110])
#loc196 = loc(fused[#loc111, #loc112])
#loc197 = loc(fused[#loc114, #loc113])
#loc198 = loc(fused[#loc115, #loc116])
#loc199 = loc(fused[#loc119, #loc120])
#loc200 = loc(fused[#loc118, #loc120])
#loc201 = loc(fused[#loc117, #loc108])
#loc202 = loc(fused[#loc121, #loc122])
#loc203 = loc(fused[#loc123, #loc124])
#loc204 = loc(fused[#loc125, #loc122])
#loc205 = loc(fused[#loc135, #loc134])
#loc206 = loc(fused[#loc140, #loc139])
#loc207 = loc(fused[#loc141, #loc112])
#loc208 = loc(fused[#loc147, #loc148])
#loc209 = loc(fused[#loc151, #loc152])
