!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc8 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":55:21)
#loc9 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":55:28)
#loc182 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":151:25)
#loc183 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":151:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc224 = loc(fused[#loc8, #loc9])
#loc293 = loc(fused[#loc182, #loc183])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s01/CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc221)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"wb+\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc3)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc222)
  cir.func internal private @_ZN59CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44L7badSinkEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc8, #loc9])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc224)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc10)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc226)
      %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc14)
      cir.store %2, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc226)
      %3 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc15)
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc16)
      %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc3)
      %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc3)
      %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc15)
      cir.store %7, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc227)
      cir.scope {
        %8 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc21)
        %9 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc22)
        %10 = cir.cmp(ne, %8, %9) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc229)
        cir.if %10 {
          %11 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc24)
          %12 = cir.call @fclose(%11) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc25)
        } loc(#loc230)
      } loc(#loc228)
    } loc(#loc225)
    cir.return loc(#loc7)
  } loc(#loc223)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc231)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc232)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr1) loc(#loc233)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc32)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr1) loc(#loc234)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc235)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc236)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc237)
  cir.func private @close(!s32i) -> !s32i loc(#loc238)
  cir.func @_ZN59CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_443badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc240)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc241)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc242)
    %3 = cir.get_global @_ZN59CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44L7badSinkEPc : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc48)
    cir.store %3, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc241)
    %4 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc242)
    cir.store %4, %2 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc242)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc51)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc243)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc245)
      %9 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc246)
      %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc247)
      %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc248)
      %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc249)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc62)
      %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc62)
      cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc248)
      %15 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc65)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
      %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr1) loc(#loc65)
      cir.store %17, %12 : !u64i, !cir.ptr<!u64i> loc(#loc249)
      cir.scope {
        cir.do {
          cir.scope {
            %18 = cir.const #cir.int<2> : !s32i loc(#loc71)
            %19 = cir.const #cir.int<1> : !u32i loc(#loc72)
            %20 = cir.cast(integral, %19 : !u32i), !s32i loc(#loc72)
            %21 = cir.const #cir.int<6> : !u32i loc(#loc73)
            %22 = cir.cast(integral, %21 : !u32i), !s32i loc(#loc73)
            %23 = cir.call @socket(%18, %20, %22) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc74)
            cir.store %23, %11 : !s32i, !cir.ptr<!s32i> loc(#loc252)
            cir.scope {
              %73 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc79)
              %74 = cir.const #cir.int<1> : !s32i loc(#loc80)
              %75 = cir.unary(minus, %74) nsw : !s32i, !s32i loc(#loc80)
              %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc254)
              cir.if %76 {
                cir.break loc(#loc82)
              } loc(#loc255)
            } loc(#loc253)
            %24 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc256)
            %25 = cir.const #cir.int<0> : !s32i loc(#loc85)
            %26 = cir.const #cir.int<16> : !u64i loc(#loc257)
            cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc258)
            %27 = cir.const #cir.int<2> : !s32i loc(#loc90)
            %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc90)
            %29 = cir.get_member %9[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc91)
            cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc259)
            %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc32)
            %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc32)
            %32 = cir.call @inet_addr(%31) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr1) loc(#loc93)
            %33 = cir.get_member %9[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc94)
            %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc95)
            cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc260)
            %35 = cir.const #cir.int<27015> : !s32i loc(#loc98)
            %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc98)
            %37 = cir.call @htons(%36) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr1) loc(#loc99)
            %38 = cir.get_member %9[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc100)
            cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc261)
            cir.scope {
              %73 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc105)
              %74 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc263)
              %75 = cir.const #cir.int<16> : !u64i loc(#loc264)
              %76 = cir.cast(integral, %75 : !u64i), !u32i loc(#loc264)
              %77 = cir.call @connect(%73, %74, %76) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc110)
              %78 = cir.const #cir.int<1> : !s32i loc(#loc111)
              %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc111)
              %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc265)
              cir.if %80 {
                cir.break loc(#loc113)
              } loc(#loc266)
            } loc(#loc262)
            %39 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc114)
            %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
            %41 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc116)
            %42 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc117)
            %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc267)
            %44 = cir.const #cir.int<1> : !u64i loc(#loc268)
            %45 = cir.const #cir.int<4096> : !s32i loc(#loc122)
            %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc122)
            %47 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc123)
            %48 = cir.binop(sub, %46, %47) : !u64i loc(#loc269)
            %49 = cir.const #cir.int<1> : !s32i loc(#loc124)
            %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc124)
            %51 = cir.binop(sub, %48, %50) : !u64i loc(#loc270)
            %52 = cir.binop(mul, %44, %51) : !u64i loc(#loc271)
            %53 = cir.const #cir.int<0> : !s32i loc(#loc126)
            %54 = cir.call @recv(%39, %43, %52, %53) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc127)
            %55 = cir.cast(integral, %54 : !s64i), !s32i loc(#loc127)
            cir.store %55, %8 : !s32i, !cir.ptr<!s32i> loc(#loc272)
            cir.scope {
              %73 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc132)
              %74 = cir.const #cir.int<1> : !s32i loc(#loc133)
              %75 = cir.unary(minus, %74) nsw : !s32i, !s32i loc(#loc133)
              %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc274)
              %77 = cir.ternary(%76, true {
                %78 = cir.const #true loc(#loc134)
                cir.yield %78 : !cir.bool loc(#loc134)
              }, false {
                %78 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc135)
                %79 = cir.const #cir.int<0> : !s32i loc(#loc136)
                %80 = cir.cmp(eq, %78, %79) : !s32i, !cir.bool loc(#loc275)
                %81 = cir.ternary(%80, true {
                  %82 = cir.const #true loc(#loc134)
                  cir.yield %82 : !cir.bool loc(#loc134)
                }, false {
                  %82 = cir.const #false loc(#loc134)
                  cir.yield %82 : !cir.bool loc(#loc134)
                }) : (!cir.bool) -> !cir.bool loc(#loc134)
                cir.yield %81 : !cir.bool loc(#loc134)
              }) : (!cir.bool) -> !cir.bool loc(#loc134)
              cir.if %77 {
                cir.break loc(#loc138)
              } loc(#loc276)
            } loc(#loc273)
            %56 = cir.const #cir.int<0> : !s8i loc(#loc139)
            %57 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
            %58 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc141)
            %59 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc142)
            %60 = cir.cast(integral, %59 : !s32i), !u64i loc(#loc142)
            %61 = cir.const #cir.int<1> : !u64i loc(#loc277)
            %62 = cir.binop(div, %60, %61) : !u64i loc(#loc278)
            %63 = cir.binop(add, %58, %62) : !u64i loc(#loc279)
            %64 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %63 : !u64i), !cir.ptr<!s8i> loc(#loc145)
            cir.store %56, %64 : !s8i, !cir.ptr<!s8i> loc(#loc280)
            %65 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
            %66 = cir.const #cir.int<13> : !s8i loc(#loc147)
            %67 = cir.cast(integral, %66 : !s8i), !s32i loc(#loc147)
            %68 = cir.call @strchr(%65, %67) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr1) loc(#loc148)
            cir.store %68, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc281)
            cir.scope {
              %73 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
              %74 = cir.cast(ptr_to_bool, %73 : !cir.ptr<!s8i>), !cir.bool loc(#loc153)
              cir.if %74 {
                %75 = cir.const #cir.int<0> : !s8i loc(#loc155)
                %76 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
                cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc284)
              } loc(#loc283)
            } loc(#loc282)
            %69 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
            %70 = cir.const #cir.int<10> : !s8i loc(#loc159)
            %71 = cir.cast(integral, %70 : !s8i), !s32i loc(#loc159)
            %72 = cir.call @strchr(%69, %71) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr1) loc(#loc160)
            cir.store %72, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc285)
            cir.scope {
              %73 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
              %74 = cir.cast(ptr_to_bool, %73 : !cir.ptr<!s8i>), !cir.bool loc(#loc165)
              cir.if %74 {
                %75 = cir.const #cir.int<0> : !s8i loc(#loc167)
                %76 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
                cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc288)
              } loc(#loc287)
            } loc(#loc286)
          } loc(#loc251)
          cir.yield loc(#loc68)
        } while {
          %18 = cir.const #cir.int<0> : !s32i loc(#loc170)
          %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc170)
          cir.condition(%19) loc(#loc170)
        } loc(#loc250)
      } loc(#loc250)
      cir.scope {
        %18 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc173)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc174)
        %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc174)
        %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc290)
        cir.if %21 {
          %22 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc176)
          %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc177)
        } loc(#loc291)
      } loc(#loc289)
    } loc(#loc244)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc178)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
    cir.call %6(%7) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc178)
    cir.return loc(#loc44)
  } loc(#loc239)
  cir.func internal private @_ZN59CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44L11goodG2BSinkEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc182, #loc183])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc293)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc184)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc295)
      %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc188)
      cir.store %2, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc295)
      %3 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc189)
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc190)
      %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc191)
      %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc191)
      %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc189)
      cir.store %7, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc296)
      cir.scope {
        %8 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc196)
        %9 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc197)
        %10 = cir.cmp(ne, %8, %9) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc298)
        cir.if %10 {
          %11 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc199)
          %12 = cir.call @fclose(%11) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc200)
        } loc(#loc299)
      } loc(#loc297)
    } loc(#loc294)
    cir.return loc(#loc181)
  } loc(#loc292)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc300)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc203)
  cir.func internal private @_ZN59CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc302)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc303)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc304)
    %3 = cir.get_global @_ZN59CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44L11goodG2BSinkEPc : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc209)
    cir.store %3, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc303)
    %4 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc304)
    cir.store %4, %2 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc304)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc212)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc305)
    %6 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc214)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc215)
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc203)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc203)
    %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc214)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc216)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc217)
    cir.call %11(%12) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc216)
    cir.return loc(#loc205)
  } loc(#loc301)
  cir.func @_ZN59CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_444goodEv() extra(#fn_attr) {
    cir.call @_ZN59CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44L7goodG2BEv() : () -> () loc(#loc220)
    cir.return loc(#loc219)
  } loc(#loc306)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s01/CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":264:1)
#loc2 = loc("/usr/include/stdio.h":266:3)
#loc3 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":60:29)
#loc4 = loc("/usr/include/stdio.h":184:1)
#loc5 = loc("/usr/include/stdio.h":184:36)
#loc6 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":55:1)
#loc7 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":66:1)
#loc10 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":56:1)
#loc11 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":57:5)
#loc12 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":65:5)
#loc13 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":58:9)
#loc14 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":58:23)
#loc15 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":60:17)
#loc16 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":60:23)
#loc17 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":60:9)
#loc18 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":60:34)
#loc19 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":61:9)
#loc20 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":64:9)
#loc21 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":61:13)
#loc22 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":61:22)
#loc23 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":62:9)
#loc24 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":63:20)
#loc25 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":63:13)
#loc26 = loc("/usr/include/string.h":407:1)
#loc27 = loc("/usr/include/string.h":408:33)
#loc28 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc29 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc30 = loc("/usr/include/arpa/inet.h":34:1)
#loc31 = loc("/usr/include/arpa/inet.h":34:47)
#loc32 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":102:49)
#loc33 = loc("/usr/include/netinet/in.h":402:1)
#loc34 = loc("/usr/include/netinet/in.h":403:40)
#loc35 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc36 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc37 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc38 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc39 = loc("/usr/include/string.h":226:1)
#loc40 = loc("/usr/include/string.h":227:50)
#loc41 = loc("/usr/include/unistd.h":358:1)
#loc42 = loc("/usr/include/unistd.h":358:27)
#loc43 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":68:1)
#loc44 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":144:1)
#loc45 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":70:5)
#loc46 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":70:12)
#loc47 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":72:5)
#loc48 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":72:32)
#loc49 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":73:5)
#loc50 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":73:37)
#loc51 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":74:12)
#loc52 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":74:5)
#loc53 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":75:5)
#loc54 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":141:5)
#loc55 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":80:9)
#loc56 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":80:13)
#loc57 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":81:9)
#loc58 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":81:28)
#loc59 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":82:9)
#loc60 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":82:15)
#loc61 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":83:9)
#loc62 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":83:32)
#loc63 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":84:9)
#loc64 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":84:37)
#loc65 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":84:26)
#loc66 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":84:33)
#loc67 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":85:9)
#loc68 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":130:17)
#loc69 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":86:9)
#loc70 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":129:9)
#loc71 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":95:36)
#loc72 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":95:45)
#loc73 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":95:58)
#loc74 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":95:29)
#loc75 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":95:13)
#loc76 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":95:69)
#loc77 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":96:13)
#loc78 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":99:13)
#loc79 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":96:17)
#loc80 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":96:34)
#loc81 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":97:13)
#loc82 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":98:17)
#loc83 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":100:20)
#loc84 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":100:21)
#loc85 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":100:30)
#loc86 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":100:33)
#loc87 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":100:47)
#loc88 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":100:13)
#loc89 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":100:48)
#loc90 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":101:34)
#loc91 = loc("/usr/include/netinet/in.h":249:5)
#loc92 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":101:13)
#loc93 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":102:39)
#loc94 = loc("/usr/include/netinet/in.h":251:20)
#loc95 = loc("/usr/include/netinet/in.h":33:15)
#loc96 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":102:13)
#loc97 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":102:59)
#loc98 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":103:38)
#loc99 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":103:32)
#loc100 = loc("/usr/include/netinet/in.h":250:15)
#loc101 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":103:13)
#loc102 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":103:46)
#loc103 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":104:13)
#loc104 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":107:13)
#loc105 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":104:25)
#loc106 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":104:58)
#loc107 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":104:59)
#loc108 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":104:68)
#loc109 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":104:82)
#loc110 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":104:17)
#loc111 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":104:88)
#loc112 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":105:13)
#loc113 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":106:17)
#loc114 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":111:31)
#loc115 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":111:55)
#loc116 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":111:62)
#loc117 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":111:60)
#loc118 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":111:46)
#loc119 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":111:69)
#loc120 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":111:72)
#loc121 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":111:83)
#loc122 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":111:88)
#loc123 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":111:103)
#loc124 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":111:113)
#loc125 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":111:114)
#loc126 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":111:117)
#loc127 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":111:26)
#loc128 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":111:13)
#loc129 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":111:118)
#loc130 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":112:13)
#loc131 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":115:13)
#loc132 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":112:17)
#loc133 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":112:31)
#loc134 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":112:44)
#loc135 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":112:47)
#loc136 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":112:61)
#loc137 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":113:13)
#loc138 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":114:17)
#loc139 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":117:57)
#loc140 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":117:13)
#loc141 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":117:18)
#loc142 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":117:28)
#loc143 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":117:41)
#loc144 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":117:52)
#loc145 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":117:53)
#loc146 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":119:30)
#loc147 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":119:36)
#loc148 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":119:23)
#loc149 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":119:13)
#loc150 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":119:40)
#loc151 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":120:13)
#loc152 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":123:13)
#loc153 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":120:17)
#loc154 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":121:13)
#loc155 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":122:28)
#loc156 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":122:18)
#loc157 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":122:17)
#loc158 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":124:30)
#loc159 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":124:36)
#loc160 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":124:23)
#loc161 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":124:13)
#loc162 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":124:40)
#loc163 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":125:13)
#loc164 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":128:13)
#loc165 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":125:17)
#loc166 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":126:13)
#loc167 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":127:28)
#loc168 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":127:18)
#loc169 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":127:17)
#loc170 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":130:16)
#loc171 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":131:9)
#loc172 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":134:9)
#loc173 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":131:13)
#loc174 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":131:30)
#loc175 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":132:9)
#loc176 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":133:26)
#loc177 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":133:13)
#loc178 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":143:5)
#loc179 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":143:13)
#loc180 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":151:1)
#loc181 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":162:1)
#loc184 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":152:1)
#loc185 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":153:5)
#loc186 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":161:5)
#loc187 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":154:9)
#loc188 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":154:23)
#loc189 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":156:17)
#loc190 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":156:23)
#loc191 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":156:29)
#loc192 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":156:9)
#loc193 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":156:34)
#loc194 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":157:9)
#loc195 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":160:9)
#loc196 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":157:13)
#loc197 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":157:22)
#loc198 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":158:9)
#loc199 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":159:20)
#loc200 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":159:13)
#loc201 = loc("/usr/include/string.h":149:1)
#loc202 = loc("/usr/include/string.h":150:14)
#loc203 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":175:18)
#loc204 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":164:1)
#loc205 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":178:1)
#loc206 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":166:5)
#loc207 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":166:12)
#loc208 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":167:5)
#loc209 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":167:32)
#loc210 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":168:5)
#loc211 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":168:37)
#loc212 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":169:12)
#loc213 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":169:5)
#loc214 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":175:5)
#loc215 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":175:12)
#loc216 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":177:5)
#loc217 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":177:13)
#loc218 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":180:1)
#loc219 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":183:1)
#loc220 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_44.cpp":182:5)
#loc221 = loc(fused[#loc1, #loc2])
#loc222 = loc(fused[#loc4, #loc5])
#loc223 = loc(fused[#loc6, #loc7])
#loc225 = loc(fused[#loc11, #loc12])
#loc226 = loc(fused[#loc13, #loc14])
#loc227 = loc(fused[#loc17, #loc18])
#loc228 = loc(fused[#loc19, #loc20])
#loc229 = loc(fused[#loc21, #loc22])
#loc230 = loc(fused[#loc23, #loc20])
#loc231 = loc(fused[#loc26, #loc27])
#loc232 = loc(fused[#loc28, #loc29])
#loc233 = loc(fused[#loc30, #loc31])
#loc234 = loc(fused[#loc33, #loc34])
#loc235 = loc(fused[#loc35, #loc36])
#loc236 = loc(fused[#loc37, #loc38])
#loc237 = loc(fused[#loc39, #loc40])
#loc238 = loc(fused[#loc41, #loc42])
#loc239 = loc(fused[#loc43, #loc44])
#loc240 = loc(fused[#loc45, #loc46])
#loc241 = loc(fused[#loc47, #loc48])
#loc242 = loc(fused[#loc49, #loc50])
#loc243 = loc(fused[#loc52, #loc51])
#loc244 = loc(fused[#loc53, #loc54])
#loc245 = loc(fused[#loc55, #loc56])
#loc246 = loc(fused[#loc57, #loc58])
#loc247 = loc(fused[#loc59, #loc60])
#loc248 = loc(fused[#loc61, #loc62])
#loc249 = loc(fused[#loc63, #loc64])
#loc250 = loc(fused[#loc67, #loc68])
#loc251 = loc(fused[#loc69, #loc70])
#loc252 = loc(fused[#loc75, #loc76])
#loc253 = loc(fused[#loc77, #loc78])
#loc254 = loc(fused[#loc79, #loc80])
#loc255 = loc(fused[#loc81, #loc78])
#loc256 = loc(fused[#loc83, #loc84])
#loc257 = loc(fused[#loc86, #loc87])
#loc258 = loc(fused[#loc88, #loc89])
#loc259 = loc(fused[#loc92, #loc90])
#loc260 = loc(fused[#loc96, #loc97])
#loc261 = loc(fused[#loc101, #loc102])
#loc262 = loc(fused[#loc103, #loc104])
#loc263 = loc(fused[#loc106, #loc107])
#loc264 = loc(fused[#loc108, #loc109])
#loc265 = loc(fused[#loc110, #loc111])
#loc266 = loc(fused[#loc112, #loc104])
#loc267 = loc(fused[#loc118, #loc119])
#loc268 = loc(fused[#loc120, #loc121])
#loc269 = loc(fused[#loc122, #loc123])
#loc270 = loc(fused[#loc122, #loc124])
#loc271 = loc(fused[#loc120, #loc125])
#loc272 = loc(fused[#loc128, #loc129])
#loc273 = loc(fused[#loc130, #loc131])
#loc274 = loc(fused[#loc132, #loc133])
#loc275 = loc(fused[#loc135, #loc136])
#loc276 = loc(fused[#loc137, #loc131])
#loc277 = loc(fused[#loc143, #loc144])
#loc278 = loc(fused[#loc142, #loc144])
#loc279 = loc(fused[#loc141, #loc144])
#loc280 = loc(fused[#loc140, #loc139])
#loc281 = loc(fused[#loc149, #loc150])
#loc282 = loc(fused[#loc151, #loc152])
#loc283 = loc(fused[#loc154, #loc152])
#loc284 = loc(fused[#loc157, #loc155])
#loc285 = loc(fused[#loc161, #loc162])
#loc286 = loc(fused[#loc163, #loc164])
#loc287 = loc(fused[#loc166, #loc164])
#loc288 = loc(fused[#loc169, #loc167])
#loc289 = loc(fused[#loc171, #loc172])
#loc290 = loc(fused[#loc173, #loc174])
#loc291 = loc(fused[#loc175, #loc172])
#loc292 = loc(fused[#loc180, #loc181])
#loc294 = loc(fused[#loc185, #loc186])
#loc295 = loc(fused[#loc187, #loc188])
#loc296 = loc(fused[#loc192, #loc193])
#loc297 = loc(fused[#loc194, #loc195])
#loc298 = loc(fused[#loc196, #loc197])
#loc299 = loc(fused[#loc198, #loc195])
#loc300 = loc(fused[#loc201, #loc202])
#loc301 = loc(fused[#loc204, #loc205])
#loc302 = loc(fused[#loc206, #loc207])
#loc303 = loc(fused[#loc208, #loc209])
#loc304 = loc(fused[#loc210, #loc211])
#loc305 = loc(fused[#loc213, #loc212])
#loc306 = loc(fused[#loc218, #loc219])
