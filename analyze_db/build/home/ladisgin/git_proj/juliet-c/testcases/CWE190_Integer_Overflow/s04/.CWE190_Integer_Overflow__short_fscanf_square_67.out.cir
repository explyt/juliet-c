!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc40 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":90:10)
#loc41 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":90:14)
#loc42 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":90:20)
#loc43 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":90:32)
!ty__CWE190_Integer_Overflow__short_fscanf_square_67_structType = !cir.struct<struct "_CWE190_Integer_Overflow__short_fscanf_square_67_structType" {!s16i}>
#loc104 = loc(fused[#loc40, #loc41])
#loc105 = loc(fused[#loc42, #loc43])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_fscanf_square_67a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc89)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc90)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%hd\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc5)
  cir.func private @CWE190_Integer_Overflow__short_fscanf_square_67b_badSink(!ty__CWE190_Integer_Overflow__short_fscanf_square_67_structType) loc(#loc91)
  cir.func no_proto @CWE190_Integer_Overflow__short_fscanf_square_67_bad() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc93)
    %1 = cir.alloca !ty__CWE190_Integer_Overflow__short_fscanf_square_67_structType, !cir.ptr<!ty__CWE190_Integer_Overflow__short_fscanf_square_67_structType>, ["myStruct"] {alignment = 2 : i64} loc(#loc94)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc14)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc14)
    cir.store %3, %0 : !s16i, !cir.ptr<!s16i> loc(#loc95)
    %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc16)
    %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc90)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc17)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc5)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc5)
    %9 = cir.call @__isoc99_fscanf(%6, %8, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s16i>) -> !s32i loc(#loc16)
    %10 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc18)
    %11 = cir.get_member %1[0] {name = "structFirst"} : !cir.ptr<!ty__CWE190_Integer_Overflow__short_fscanf_square_67_structType> -> !cir.ptr<!s16i> loc(#loc19)
    cir.store %10, %11 : !s16i, !cir.ptr<!s16i> loc(#loc96)
    %12 = cir.load %1 : !cir.ptr<!ty__CWE190_Integer_Overflow__short_fscanf_square_67_structType>, !ty__CWE190_Integer_Overflow__short_fscanf_square_67_structType loc(#loc21)
    cir.call @CWE190_Integer_Overflow__short_fscanf_square_67b_badSink(%12) : (!ty__CWE190_Integer_Overflow__short_fscanf_square_67_structType) -> () loc(#loc21)
    cir.return loc(#loc9)
  } loc(#loc92)
  cir.func no_proto @CWE190_Integer_Overflow__short_fscanf_square_67_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc98)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc24)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc99)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc26)
    cir.return loc(#loc23)
  } loc(#loc97)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc100)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc101)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc102)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc34)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc35)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc36)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc37)
  cir.func @main(%arg0: !s32i loc(fused[#loc40, #loc41]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc42, #loc43])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc104)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc105)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc39)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc44)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc44)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc45)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc46)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc46)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc47)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc34)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    %8 = cir.get_global @CWE190_Integer_Overflow__short_fscanf_square_67_good : !cir.ptr<!cir.func<!void ()>> loc(#loc106)
    cir.call @CWE190_Integer_Overflow__short_fscanf_square_67_good() : () -> () loc(#loc49)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc35)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc35)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc36)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    %13 = cir.get_global @CWE190_Integer_Overflow__short_fscanf_square_67_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc107)
    cir.call @CWE190_Integer_Overflow__short_fscanf_square_67_bad() : () -> () loc(#loc53)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc37)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc56)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc108)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc108)
    cir.return %17 : !s32i loc(#loc108)
  } loc(#loc103)
  cir.func private @CWE190_Integer_Overflow__short_fscanf_square_67b_goodG2BSink(!ty__CWE190_Integer_Overflow__short_fscanf_square_67_structType) loc(#loc109)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc111)
    %1 = cir.alloca !ty__CWE190_Integer_Overflow__short_fscanf_square_67_structType, !cir.ptr<!ty__CWE190_Integer_Overflow__short_fscanf_square_67_structType>, ["myStruct"] {alignment = 2 : i64} loc(#loc112)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc66)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc66)
    cir.store %3, %0 : !s16i, !cir.ptr<!s16i> loc(#loc113)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc68)
    %5 = cir.cast(integral, %4 : !s32i), !s16i loc(#loc68)
    cir.store %5, %0 : !s16i, !cir.ptr<!s16i> loc(#loc114)
    %6 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc70)
    %7 = cir.get_member %1[0] {name = "structFirst"} : !cir.ptr<!ty__CWE190_Integer_Overflow__short_fscanf_square_67_structType> -> !cir.ptr<!s16i> loc(#loc19)
    cir.store %6, %7 : !s16i, !cir.ptr<!s16i> loc(#loc115)
    %8 = cir.load %1 : !cir.ptr<!ty__CWE190_Integer_Overflow__short_fscanf_square_67_structType>, !ty__CWE190_Integer_Overflow__short_fscanf_square_67_structType loc(#loc72)
    cir.call @CWE190_Integer_Overflow__short_fscanf_square_67b_goodG2BSink(%8) : (!ty__CWE190_Integer_Overflow__short_fscanf_square_67_structType) -> () loc(#loc72)
    cir.return loc(#loc61)
  } loc(#loc110)
  cir.func private @CWE190_Integer_Overflow__short_fscanf_square_67b_goodB2GSink(!ty__CWE190_Integer_Overflow__short_fscanf_square_67_structType) loc(#loc116)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc118)
    %1 = cir.alloca !ty__CWE190_Integer_Overflow__short_fscanf_square_67_structType, !cir.ptr<!ty__CWE190_Integer_Overflow__short_fscanf_square_67_structType>, ["myStruct"] {alignment = 2 : i64} loc(#loc119)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc81)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc81)
    cir.store %3, %0 : !s16i, !cir.ptr<!s16i> loc(#loc120)
    %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc83)
    %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc90)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc84)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc85)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc85)
    %9 = cir.call @__isoc99_fscanf(%6, %8, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s16i>) -> !s32i loc(#loc83)
    %10 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc86)
    %11 = cir.get_member %1[0] {name = "structFirst"} : !cir.ptr<!ty__CWE190_Integer_Overflow__short_fscanf_square_67_structType> -> !cir.ptr<!s16i> loc(#loc19)
    cir.store %10, %11 : !s16i, !cir.ptr<!s16i> loc(#loc121)
    %12 = cir.load %1 : !cir.ptr<!ty__CWE190_Integer_Overflow__short_fscanf_square_67_structType>, !ty__CWE190_Integer_Overflow__short_fscanf_square_67_structType loc(#loc88)
    cir.call @CWE190_Integer_Overflow__short_fscanf_square_67b_goodB2GSink(%12) : (!ty__CWE190_Integer_Overflow__short_fscanf_square_67_structType) -> () loc(#loc88)
    cir.return loc(#loc76)
  } loc(#loc117)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_fscanf_square_67a.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":38:20)
#loc6 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":30:1)
#loc7 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":30:130)
#loc8 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":32:1)
#loc9 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":41:1)
#loc10 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":34:5)
#loc11 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":34:11)
#loc12 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":35:5)
#loc13 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":35:64)
#loc14 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":36:12)
#loc15 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":36:5)
#loc16 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":38:5)
#loc17 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":38:13)
#loc18 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":39:28)
#loc19 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":24:11)
#loc20 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":39:5)
#loc21 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":40:5)
#loc22 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":75:1)
#loc23 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":79:1)
#loc24 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":77:5)
#loc25 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":77:13)
#loc26 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":78:5)
#loc27 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":78:13)
#loc28 = loc("/usr/include/stdlib.h":575:1)
#loc29 = loc("/usr/include/stdlib.h":575:41)
#loc30 = loc("/usr/include/time.h":76:1)
#loc31 = loc("/usr/include/time.h":76:38)
#loc32 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc33 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc34 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":95:15)
#loc35 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":97:15)
#loc36 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":100:15)
#loc37 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":102:15)
#loc38 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":90:1)
#loc39 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":105:1)
#loc44 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":91:1)
#loc45 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":93:27)
#loc46 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":93:22)
#loc47 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":93:5)
#loc48 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":95:5)
#loc49 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":96:5)
#loc50 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":96:58)
#loc51 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":97:5)
#loc52 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":100:5)
#loc53 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":101:5)
#loc54 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":101:57)
#loc55 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":102:5)
#loc56 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":104:12)
#loc57 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":104:5)
#loc58 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":48:1)
#loc59 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":48:134)
#loc60 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":50:1)
#loc61 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":59:1)
#loc62 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":52:5)
#loc63 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":52:11)
#loc64 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":53:5)
#loc65 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":53:64)
#loc66 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":54:12)
#loc67 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":54:5)
#loc68 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":56:12)
#loc69 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":56:5)
#loc70 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":57:28)
#loc71 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":57:5)
#loc72 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":58:5)
#loc73 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":62:1)
#loc74 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":62:134)
#loc75 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":64:1)
#loc76 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":73:1)
#loc77 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":66:5)
#loc78 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":66:11)
#loc79 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":67:5)
#loc80 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":67:64)
#loc81 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":68:12)
#loc82 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":68:5)
#loc83 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":70:5)
#loc84 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":70:13)
#loc85 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":70:20)
#loc86 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":71:28)
#loc87 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":71:5)
#loc88 = loc("CWE190_Integer_Overflow__short_fscanf_square_67a.c":72:5)
#loc89 = loc(fused[#loc1, #loc2])
#loc90 = loc(fused[#loc3, #loc4])
#loc91 = loc(fused[#loc6, #loc7])
#loc92 = loc(fused[#loc8, #loc9])
#loc93 = loc(fused[#loc10, #loc11])
#loc94 = loc(fused[#loc12, #loc13])
#loc95 = loc(fused[#loc15, #loc14])
#loc96 = loc(fused[#loc20, #loc18])
#loc97 = loc(fused[#loc22, #loc23])
#loc98 = loc(fused[#loc24, #loc25])
#loc99 = loc(fused[#loc26, #loc27])
#loc100 = loc(fused[#loc28, #loc29])
#loc101 = loc(fused[#loc30, #loc31])
#loc102 = loc(fused[#loc32, #loc33])
#loc103 = loc(fused[#loc38, #loc39])
#loc106 = loc(fused[#loc49, #loc50])
#loc107 = loc(fused[#loc53, #loc54])
#loc108 = loc(fused[#loc57, #loc56])
#loc109 = loc(fused[#loc58, #loc59])
#loc110 = loc(fused[#loc60, #loc61])
#loc111 = loc(fused[#loc62, #loc63])
#loc112 = loc(fused[#loc64, #loc65])
#loc113 = loc(fused[#loc67, #loc66])
#loc114 = loc(fused[#loc69, #loc68])
#loc115 = loc(fused[#loc71, #loc70])
#loc116 = loc(fused[#loc73, #loc74])
#loc117 = loc(fused[#loc75, #loc76])
#loc118 = loc(fused[#loc77, #loc78])
#loc119 = loc(fused[#loc79, #loc80])
#loc120 = loc(fused[#loc82, #loc81])
#loc121 = loc(fused[#loc87, #loc86])
