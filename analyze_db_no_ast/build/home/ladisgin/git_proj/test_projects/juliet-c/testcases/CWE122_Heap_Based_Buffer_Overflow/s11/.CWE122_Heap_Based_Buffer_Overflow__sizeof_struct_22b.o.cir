!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":24:79)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":24:95)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":47:84)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":47:100)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":66:84)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":66:100)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc110 = loc(fused[#loc9, #loc10])
#loc125 = loc(fused[#loc45, #loc46])
#loc139 = loc(fused[#loc79, #loc80])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  external @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_badGlobal : !s32i {alignment = 4 : i64} loc(#loc106)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc107)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc108)
  cir.func  @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_badSource(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc9, #loc10])) -> !cir.ptr<!ty__twoIntsStruct> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc110)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["__retval"] {alignment = 8 : i64} loc(#loc8)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc11)
    cir.scope {
      %4 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_badGlobal : !cir.ptr<!s32i> loc(#loc106)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc14)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc14)
      cir.if %6 {
        %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc16)
        %8 = cir.const #cir.int<8> : !u64i loc(#loc113)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc16)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc114)
        cir.store %10, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc115)
        cir.scope {
          %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc23)
          %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc24)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc24)
          %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!ty__twoIntsStruct>, !s32i loc(#loc117)
          %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc25)
          cir.if %21 {
            %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc27)
            %23 = cir.const #cir.int<1> : !s32i loc(#loc28)
            %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc29)
            cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc27)
          } loc(#loc118)
        } loc(#loc116)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc30)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc31)
        %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
        cir.store %11, %13 : !s32i, !cir.ptr<!s32i> loc(#loc119)
        %14 = cir.const #cir.int<2> : !s32i loc(#loc33)
        %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
        %16 = cir.get_member %15[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc35)
        cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc120)
      } loc(#loc112)
    } loc(#loc111)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc36)
    cir.store %2, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc121)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc121)
    cir.return %3 : !cir.ptr<!ty__twoIntsStruct> loc(#loc121)
  } loc(#loc109)
  cir.global "private"  external @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_goodG2B1Global : !s32i {alignment = 4 : i64} loc(#loc122)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc123)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc42)
  cir.func  @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_goodG2B1Source(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc45, #loc46])) -> !cir.ptr<!ty__twoIntsStruct> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc125)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["__retval"] {alignment = 8 : i64} loc(#loc44)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc47)
    cir.scope {
      %4 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_goodG2B1Global : !cir.ptr<!s32i> loc(#loc122)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc50)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc50)
      cir.if %6 {
        %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc42)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc42)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc54)
      } else {
        %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc55)
        %8 = cir.const #cir.int<8> : !u64i loc(#loc128)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc55)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc129)
        cir.store %10, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc130)
        cir.scope {
          %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc62)
          %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc63)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc63)
          %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!ty__twoIntsStruct>, !s32i loc(#loc132)
          %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc64)
          cir.if %21 {
            %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc66)
            %23 = cir.const #cir.int<1> : !s32i loc(#loc67)
            %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc68)
            cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc66)
          } loc(#loc133)
        } loc(#loc131)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc69)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc70)
        %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
        cir.store %11, %13 : !s32i, !cir.ptr<!s32i> loc(#loc134)
        %14 = cir.const #cir.int<2> : !s32i loc(#loc71)
        %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc72)
        %16 = cir.get_member %15[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc35)
        cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc135)
      } loc(#loc127)
    } loc(#loc126)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc73)
    cir.store %2, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc136)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc136)
    cir.return %3 : !cir.ptr<!ty__twoIntsStruct> loc(#loc136)
  } loc(#loc124)
  cir.global "private"  external @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_goodG2B2Global : !s32i {alignment = 4 : i64} loc(#loc137)
  cir.func  @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_goodG2B2Source(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc79, #loc80])) -> !cir.ptr<!ty__twoIntsStruct> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc139)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["__retval"] {alignment = 8 : i64} loc(#loc78)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc81)
    cir.scope {
      %4 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22_goodG2B2Global : !cir.ptr<!s32i> loc(#loc137)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc84)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc84)
      cir.if %6 {
        %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc86)
        %8 = cir.const #cir.int<8> : !u64i loc(#loc142)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc86)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc143)
        cir.store %10, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc144)
        cir.scope {
          %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc93)
          %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc94)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc94)
          %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!ty__twoIntsStruct>, !s32i loc(#loc146)
          %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc95)
          cir.if %21 {
            %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc97)
            %23 = cir.const #cir.int<1> : !s32i loc(#loc98)
            %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc99)
            cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc97)
          } loc(#loc147)
        } loc(#loc145)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc100)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc101)
        %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
        cir.store %11, %13 : !s32i, !cir.ptr<!s32i> loc(#loc148)
        %14 = cir.const #cir.int<2> : !s32i loc(#loc102)
        %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc103)
        %16 = cir.get_member %15[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc35)
        cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc149)
      } loc(#loc141)
    } loc(#loc140)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc104)
    cir.store %2, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc150)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc150)
    cir.return %3 : !cir.ptr<!ty__twoIntsStruct> loc(#loc150)
  } loc(#loc138)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":22:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":22:12)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":24:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":36:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":25:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":26:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":34:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":26:8)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":27:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":30:33)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":30:40)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":30:51)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":30:52)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":30:9)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":31:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":31:37)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":31:13)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":31:21)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":31:18)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":31:27)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":31:28)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":31:34)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":31:33)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":32:24)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":32:9)
#loc32 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":33:24)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":33:9)
#loc35 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":35:12)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":35:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":43:1)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":43:12)
#loc40 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc41 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":52:19)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":47:1)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":63:1)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":48:1)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":49:5)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":61:5)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":49:8)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":50:5)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":53:5)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":55:5)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":52:9)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":57:33)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":57:40)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":57:52)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":57:53)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":57:9)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":58:9)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":58:37)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":58:13)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":58:21)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":58:18)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":58:27)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":58:28)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":58:34)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":58:33)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":59:24)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":59:9)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":60:24)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":60:9)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":62:12)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":62:5)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":44:1)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":44:12)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":66:1)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":77:1)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":67:1)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":68:5)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":75:5)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":68:8)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":69:5)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":71:33)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":71:40)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":71:52)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":71:53)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":71:9)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":72:9)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":72:37)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":72:13)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":72:21)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":72:18)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":72:27)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":72:28)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":72:34)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":72:33)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":73:24)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":73:9)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":74:24)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":74:9)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":76:12)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_22b.c":76:5)
#loc106 = loc(fused[#loc1, #loc2])
#loc107 = loc(fused[#loc3, #loc4])
#loc108 = loc(fused[#loc5, #loc6])
#loc109 = loc(fused[#loc7, #loc8])
#loc111 = loc(fused[#loc12, #loc13])
#loc112 = loc(fused[#loc15, #loc13])
#loc113 = loc(fused[#loc17, #loc18])
#loc114 = loc(fused[#loc16, #loc19])
#loc115 = loc(fused[#loc20, #loc19])
#loc116 = loc(fused[#loc21, #loc22])
#loc117 = loc(fused[#loc23, #loc24])
#loc118 = loc(fused[#loc26, #loc22])
#loc119 = loc(fused[#loc31, #loc30])
#loc120 = loc(fused[#loc34, #loc33])
#loc121 = loc(fused[#loc37, #loc36])
#loc122 = loc(fused[#loc38, #loc39])
#loc123 = loc(fused[#loc40, #loc41])
#loc124 = loc(fused[#loc43, #loc44])
#loc126 = loc(fused[#loc48, #loc49])
#loc127 = loc(fused[#loc51, #loc52, #loc53, #loc49])
#loc128 = loc(fused[#loc56, #loc57])
#loc129 = loc(fused[#loc55, #loc58])
#loc130 = loc(fused[#loc59, #loc58])
#loc131 = loc(fused[#loc60, #loc61])
#loc132 = loc(fused[#loc62, #loc63])
#loc133 = loc(fused[#loc65, #loc61])
#loc134 = loc(fused[#loc70, #loc69])
#loc135 = loc(fused[#loc72, #loc71])
#loc136 = loc(fused[#loc74, #loc73])
#loc137 = loc(fused[#loc75, #loc76])
#loc138 = loc(fused[#loc77, #loc78])
#loc140 = loc(fused[#loc82, #loc83])
#loc141 = loc(fused[#loc85, #loc83])
#loc142 = loc(fused[#loc87, #loc88])
#loc143 = loc(fused[#loc86, #loc89])
#loc144 = loc(fused[#loc90, #loc89])
#loc145 = loc(fused[#loc91, #loc92])
#loc146 = loc(fused[#loc93, #loc94])
#loc147 = loc(fused[#loc96, #loc92])
#loc148 = loc(fused[#loc101, #loc100])
#loc149 = loc(fused[#loc103, #loc102])
#loc150 = loc(fused[#loc105, #loc104])
