!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global external dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22_badGlobal = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc203)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc204)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc205)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22_badSource(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc206)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc207)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc208)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc209)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc211)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc212)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc213)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc214)
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc24)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc25)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc25)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc215)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc216)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc24)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc217)
    cir.store %10, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc218)
    cir.br ^bb1 loc(#loc219)
  ^bb1:  // pred: ^bb0
    %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc33)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc33)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc220)
    cir.brcond %14 ^bb2, ^bb3 loc(#loc221)
  ^bb2:  // pred: ^bb1
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc35)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc37)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc35)
    cir.br ^bb3 loc(#loc31)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc31)
  ^bb4:  // pred: ^bb3
    %18 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %19 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22_badGlobal : !cir.ptr<!s32i> loc(#loc203)
    cir.store %18, %19 : !s32i, !cir.ptr<!s32i> loc(#loc222)
    %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    %21 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22_badSource(%20) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc41)
    cir.store %21, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc223)
    cir.br ^bb5 loc(#loc224)
  ^bb5:  // pred: ^bb4
    %22 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc211)
    cir.store %22, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc211)
    %23 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc46)
    %24 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
    %25 = cir.call @strlen(%24) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc46)
    cir.store %25, %2 : !u64i, !cir.ptr<!u64i> loc(#loc225)
    cir.br ^bb6 loc(#loc226)
  ^bb6:  // pred: ^bb5
    %26 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc52)
    cir.store %27, %1 : !u64i, !cir.ptr<!u64i> loc(#loc227)
    cir.br ^bb7 loc(#loc226)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc54)
    %29 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc55)
    %30 = cir.cmp(lt, %28, %29) : !u64i, !cir.bool loc(#loc228)
    cir.brcond %30 ^bb8, ^bb12 loc(#loc56)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc229)
  ^bb9:  // pred: ^bb8
    %31 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
    %32 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc59)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc60)
    %34 = cir.load %33 : !cir.ptr<!s8i>, !s8i loc(#loc58)
    %35 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc61)
    %36 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc62)
    %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc62)
    cir.store %34, %37 : !s8i, !cir.ptr<!s8i> loc(#loc230)
    cir.br ^bb10 loc(#loc51)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc51)
  ^bb11:  // pred: ^bb10
    %38 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc63)
    %39 = cir.unary(inc, %38) : !u64i, !u64i loc(#loc64)
    cir.store %39, %1 : !u64i, !cir.ptr<!u64i> loc(#loc231)
    cir.br ^bb7 loc(#loc226)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc51)
  ^bb13:  // pred: ^bb12
    %40 = cir.const #cir.int<0> : !s32i loc(#loc65)
    %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc65)
    %42 = cir.const #cir.int<50> : !s32i loc(#loc66)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc66)
    %45 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc68)
    %46 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc68)
    cir.store %41, %46 : !s8i, !cir.ptr<!s8i> loc(#loc232)
    %47 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %48 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
    %49 = cir.cast(bitcast, %48 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc71)
    cir.call @free(%49) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc72)
    cir.br ^bb14 loc(#loc45)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc16)
  } loc(#loc210)
  cir.global external dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22_goodG2B1Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc233)
  cir.global external dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22_goodG2B2Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc234)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc236)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc79)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc237)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc81)
    cir.return loc(#loc78)
  } loc(#loc235)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22_goodG2B1Source(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc238)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc240)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc241)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc242)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc243)
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc94)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc95)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc95)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc244)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc245)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc94)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc246)
    cir.store %10, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc247)
    cir.br ^bb1 loc(#loc248)
  ^bb1:  // pred: ^bb0
    %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc103)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc103)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc249)
    cir.brcond %14 ^bb2, ^bb3 loc(#loc250)
  ^bb2:  // pred: ^bb1
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc105)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc107)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc105)
    cir.br ^bb3 loc(#loc101)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc101)
  ^bb4:  // pred: ^bb3
    %18 = cir.const #cir.int<0> : !s32i loc(#loc108)
    %19 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22_goodG2B1Global : !cir.ptr<!s32i> loc(#loc233)
    cir.store %18, %19 : !s32i, !cir.ptr<!s32i> loc(#loc251)
    %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
    %21 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22_goodG2B1Source(%20) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc111)
    cir.store %21, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc252)
    cir.br ^bb5 loc(#loc253)
  ^bb5:  // pred: ^bb4
    %22 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc240)
    cir.store %22, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc240)
    %23 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc116)
    %24 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
    %25 = cir.call @strlen(%24) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc116)
    cir.store %25, %2 : !u64i, !cir.ptr<!u64i> loc(#loc254)
    cir.br ^bb6 loc(#loc255)
  ^bb6:  // pred: ^bb5
    %26 = cir.const #cir.int<0> : !s32i loc(#loc122)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc122)
    cir.store %27, %1 : !u64i, !cir.ptr<!u64i> loc(#loc256)
    cir.br ^bb7 loc(#loc255)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc124)
    %29 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc125)
    %30 = cir.cmp(lt, %28, %29) : !u64i, !cir.bool loc(#loc257)
    cir.brcond %30 ^bb8, ^bb12 loc(#loc126)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc258)
  ^bb9:  // pred: ^bb8
    %31 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
    %32 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc129)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc130)
    %34 = cir.load %33 : !cir.ptr<!s8i>, !s8i loc(#loc128)
    %35 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc131)
    %36 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc132)
    %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc132)
    cir.store %34, %37 : !s8i, !cir.ptr<!s8i> loc(#loc259)
    cir.br ^bb10 loc(#loc121)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc121)
  ^bb11:  // pred: ^bb10
    %38 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc133)
    %39 = cir.unary(inc, %38) : !u64i, !u64i loc(#loc134)
    cir.store %39, %1 : !u64i, !cir.ptr<!u64i> loc(#loc260)
    cir.br ^bb7 loc(#loc255)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc121)
  ^bb13:  // pred: ^bb12
    %40 = cir.const #cir.int<0> : !s32i loc(#loc135)
    %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc135)
    %42 = cir.const #cir.int<50> : !s32i loc(#loc136)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc137)
    %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc136)
    %45 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc138)
    %46 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc138)
    cir.store %41, %46 : !s8i, !cir.ptr<!s8i> loc(#loc261)
    %47 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc140)
    %48 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
    %49 = cir.cast(bitcast, %48 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc141)
    cir.call @free(%49) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc142)
    cir.br ^bb14 loc(#loc115)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc86)
  } loc(#loc239)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22_goodG2B2Source(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc262)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc264)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc265)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc266)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc267)
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc154)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc155)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc155)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc268)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc269)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc154)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc270)
    cir.store %10, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc271)
    cir.br ^bb1 loc(#loc272)
  ^bb1:  // pred: ^bb0
    %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc163)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc163)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc273)
    cir.brcond %14 ^bb2, ^bb3 loc(#loc274)
  ^bb2:  // pred: ^bb1
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc165)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc166)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc167)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc165)
    cir.br ^bb3 loc(#loc161)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc161)
  ^bb4:  // pred: ^bb3
    %18 = cir.const #cir.int<1> : !s32i loc(#loc168)
    %19 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22_goodG2B2Global : !cir.ptr<!s32i> loc(#loc234)
    cir.store %18, %19 : !s32i, !cir.ptr<!s32i> loc(#loc275)
    %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
    %21 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22_goodG2B2Source(%20) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc171)
    cir.store %21, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc276)
    cir.br ^bb5 loc(#loc277)
  ^bb5:  // pred: ^bb4
    %22 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc264)
    cir.store %22, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc264)
    %23 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc176)
    %24 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc177)
    %25 = cir.call @strlen(%24) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc176)
    cir.store %25, %2 : !u64i, !cir.ptr<!u64i> loc(#loc278)
    cir.br ^bb6 loc(#loc279)
  ^bb6:  // pred: ^bb5
    %26 = cir.const #cir.int<0> : !s32i loc(#loc182)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc182)
    cir.store %27, %1 : !u64i, !cir.ptr<!u64i> loc(#loc280)
    cir.br ^bb7 loc(#loc279)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc184)
    %29 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc185)
    %30 = cir.cmp(lt, %28, %29) : !u64i, !cir.bool loc(#loc281)
    cir.brcond %30 ^bb8, ^bb12 loc(#loc186)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc282)
  ^bb9:  // pred: ^bb8
    %31 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc188)
    %32 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc189)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc190)
    %34 = cir.load %33 : !cir.ptr<!s8i>, !s8i loc(#loc188)
    %35 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc191)
    %36 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc192)
    %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc192)
    cir.store %34, %37 : !s8i, !cir.ptr<!s8i> loc(#loc283)
    cir.br ^bb10 loc(#loc181)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc181)
  ^bb11:  // pred: ^bb10
    %38 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc193)
    %39 = cir.unary(inc, %38) : !u64i, !u64i loc(#loc194)
    cir.store %39, %1 : !u64i, !cir.ptr<!u64i> loc(#loc284)
    cir.br ^bb7 loc(#loc279)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc181)
  ^bb13:  // pred: ^bb12
    %40 = cir.const #cir.int<0> : !s32i loc(#loc195)
    %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc195)
    %42 = cir.const #cir.int<50> : !s32i loc(#loc196)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc197)
    %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc196)
    %45 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc198)
    %46 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc198)
    cir.store %41, %46 : !s8i, !cir.ptr<!s8i> loc(#loc285)
    %47 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc199)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc200)
    %48 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc201)
    %49 = cir.cast(bitcast, %48 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc201)
    cir.call @free(%49) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc202)
    cir.br ^bb14 loc(#loc175)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc146)
  } loc(#loc263)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":24:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":24:74)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":26:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":26:86)
#loc9 = loc("/usr/include/string.h":407:1)
#loc10 = loc("/usr/include/string.h":408:33)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("/usr/include/stdlib.h":687:1)
#loc14 = loc("/usr/include/stdlib.h":687:32)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":28:1)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":48:1)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":36:9)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":36:25)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":37:9)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":37:16)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":37:19)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":30:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":30:12)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":31:20)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":31:27)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":31:31)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":31:42)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":31:43)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":31:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":32:5)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":32:33)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":32:9)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":32:17)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":32:23)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":32:24)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":32:30)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":32:29)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":33:74)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":33:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":34:79)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":34:12)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":34:5)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":34:83)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":35:5)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":47:5)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":38:19)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":38:26)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":38:9)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":38:30)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":40:9)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":43:9)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":40:18)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":40:14)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":40:21)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":40:25)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":40:23)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":41:9)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":42:23)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":42:28)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":42:29)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":42:18)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":42:13)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":40:35)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":40:34)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":44:22)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":44:14)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":44:17)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":44:9)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":45:19)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":45:9)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":46:14)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":46:9)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":55:1)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":55:79)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":56:1)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":56:79)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":108:1)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":112:1)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":110:5)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":110:14)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":111:5)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":111:14)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":59:1)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":59:91)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":61:1)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":81:1)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":69:9)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":69:25)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":70:9)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":70:16)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":70:19)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":63:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":63:12)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":64:20)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":64:27)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":64:31)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":64:42)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":64:43)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":64:5)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":65:5)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":65:33)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":65:9)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":65:17)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":65:23)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":65:24)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":65:30)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":65:29)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":66:79)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":66:5)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":67:84)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":67:12)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":67:5)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":67:88)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":68:5)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":80:5)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":71:19)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":71:26)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":71:9)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":71:30)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":73:9)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":76:9)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":73:18)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":73:14)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":73:21)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":73:25)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":73:23)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":74:9)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":75:23)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":75:28)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":75:29)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":75:18)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":75:13)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":73:35)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":73:34)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":77:22)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":77:14)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":77:17)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":77:9)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":78:19)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":78:9)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":79:14)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":79:9)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":84:1)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":84:91)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":86:1)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":106:1)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":94:9)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":94:25)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":95:9)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":95:16)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":95:19)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":88:5)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":88:12)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":89:20)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":89:27)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":89:31)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":89:42)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":89:43)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":89:5)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":90:5)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":90:33)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":90:9)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":90:17)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":90:23)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":90:24)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":90:30)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":90:29)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":91:79)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":91:5)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":92:84)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":92:12)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":92:5)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":92:88)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":93:5)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":105:5)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":96:19)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":96:26)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":96:9)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":96:30)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":98:9)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":101:9)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":98:18)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":98:14)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":98:21)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":98:25)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":98:23)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":99:9)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":100:23)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":100:28)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":100:29)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":100:18)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":100:13)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":98:35)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":98:34)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":102:22)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":102:14)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":102:17)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":102:9)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":103:19)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":103:9)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":104:14)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_22a.c":104:9)
#loc203 = loc(fused[#loc1, #loc2])
#loc204 = loc(fused[#loc3, #loc4])
#loc205 = loc(fused[#loc5, #loc6])
#loc206 = loc(fused[#loc7, #loc8])
#loc207 = loc(fused[#loc9, #loc10])
#loc208 = loc(fused[#loc11, #loc12])
#loc209 = loc(fused[#loc13, #loc14])
#loc210 = loc(fused[#loc15, #loc16])
#loc211 = loc(fused[#loc17, #loc18])
#loc212 = loc(fused[#loc19, #loc20])
#loc213 = loc(fused[#loc19, #loc21])
#loc214 = loc(fused[#loc22, #loc23])
#loc215 = loc(fused[#loc26, #loc27])
#loc216 = loc(fused[#loc25, #loc27])
#loc217 = loc(fused[#loc24, #loc28])
#loc218 = loc(fused[#loc29, #loc28])
#loc219 = loc(fused[#loc30, #loc31])
#loc220 = loc(fused[#loc32, #loc33])
#loc221 = loc(fused[#loc34, #loc31])
#loc222 = loc(fused[#loc39, #loc38])
#loc223 = loc(fused[#loc42, #loc43])
#loc224 = loc(fused[#loc44, #loc45])
#loc225 = loc(fused[#loc48, #loc49])
#loc226 = loc(fused[#loc50, #loc51])
#loc227 = loc(fused[#loc53, #loc52])
#loc228 = loc(fused[#loc54, #loc55])
#loc229 = loc(fused[#loc57, #loc51])
#loc230 = loc(fused[#loc62, #loc60])
#loc231 = loc(fused[#loc64, #loc63])
#loc232 = loc(fused[#loc68, #loc65])
#loc233 = loc(fused[#loc73, #loc74])
#loc234 = loc(fused[#loc75, #loc76])
#loc235 = loc(fused[#loc77, #loc78])
#loc236 = loc(fused[#loc79, #loc80])
#loc237 = loc(fused[#loc81, #loc82])
#loc238 = loc(fused[#loc83, #loc84])
#loc239 = loc(fused[#loc85, #loc86])
#loc240 = loc(fused[#loc87, #loc88])
#loc241 = loc(fused[#loc89, #loc90])
#loc242 = loc(fused[#loc89, #loc91])
#loc243 = loc(fused[#loc92, #loc93])
#loc244 = loc(fused[#loc96, #loc97])
#loc245 = loc(fused[#loc95, #loc97])
#loc246 = loc(fused[#loc94, #loc98])
#loc247 = loc(fused[#loc99, #loc98])
#loc248 = loc(fused[#loc100, #loc101])
#loc249 = loc(fused[#loc102, #loc103])
#loc250 = loc(fused[#loc104, #loc101])
#loc251 = loc(fused[#loc109, #loc108])
#loc252 = loc(fused[#loc112, #loc113])
#loc253 = loc(fused[#loc114, #loc115])
#loc254 = loc(fused[#loc118, #loc119])
#loc255 = loc(fused[#loc120, #loc121])
#loc256 = loc(fused[#loc123, #loc122])
#loc257 = loc(fused[#loc124, #loc125])
#loc258 = loc(fused[#loc127, #loc121])
#loc259 = loc(fused[#loc132, #loc130])
#loc260 = loc(fused[#loc134, #loc133])
#loc261 = loc(fused[#loc138, #loc135])
#loc262 = loc(fused[#loc143, #loc144])
#loc263 = loc(fused[#loc145, #loc146])
#loc264 = loc(fused[#loc147, #loc148])
#loc265 = loc(fused[#loc149, #loc150])
#loc266 = loc(fused[#loc149, #loc151])
#loc267 = loc(fused[#loc152, #loc153])
#loc268 = loc(fused[#loc156, #loc157])
#loc269 = loc(fused[#loc155, #loc157])
#loc270 = loc(fused[#loc154, #loc158])
#loc271 = loc(fused[#loc159, #loc158])
#loc272 = loc(fused[#loc160, #loc161])
#loc273 = loc(fused[#loc162, #loc163])
#loc274 = loc(fused[#loc164, #loc161])
#loc275 = loc(fused[#loc169, #loc168])
#loc276 = loc(fused[#loc172, #loc173])
#loc277 = loc(fused[#loc174, #loc175])
#loc278 = loc(fused[#loc178, #loc179])
#loc279 = loc(fused[#loc180, #loc181])
#loc280 = loc(fused[#loc183, #loc182])
#loc281 = loc(fused[#loc184, #loc185])
#loc282 = loc(fused[#loc187, #loc181])
#loc283 = loc(fused[#loc192, #loc190])
#loc284 = loc(fused[#loc194, #loc193])
#loc285 = loc(fused[#loc198, #loc195])
