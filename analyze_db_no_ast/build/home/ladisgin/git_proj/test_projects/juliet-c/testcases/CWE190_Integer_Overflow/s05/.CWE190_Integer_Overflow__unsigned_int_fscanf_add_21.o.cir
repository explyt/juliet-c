!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc12 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":25:21)
#loc13 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":25:34)
#loc54 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":57:26)
#loc55 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":57:39)
#loc95 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":90:26)
#loc96 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":90:39)
#loc134 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":118:25)
#loc135 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":118:38)
#loc165 = loc(fused[#loc12, #loc13])
#loc182 = loc(fused[#loc54, #loc55])
#loc196 = loc(fused[#loc95, #loc96])
#loc210 = loc(fused[#loc134, #loc135])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc160)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc161)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%u\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.global "private"  internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc162)
  cir.func private  @printUnsignedLine(!u32i) loc(#loc163)
  cir.func internal private  @badSink(%arg0: !u32i loc(fused[#loc12, #loc13])) extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data", init] {alignment = 4 : i64} loc(#loc165)
    cir.store %arg0, %0 : !u32i, !cir.ptr<!u32i> loc(#loc14)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc162)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc17)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc17)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc169)
          %5 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc23)
          %6 = cir.const #cir.int<1> : !s32i loc(#loc22)
          %7 = cir.cast(integral, %6 : !s32i), !u32i loc(#loc22)
          %8 = cir.binop(add, %5, %7) : !u32i loc(#loc170)
          cir.store %8, %4 : !u32i, !cir.ptr<!u32i> loc(#loc169)
          %9 = cir.load %4 : !cir.ptr<!u32i>, !u32i loc(#loc24)
          cir.call @printUnsignedLine(%9) : (!u32i) -> () loc(#loc25)
        } loc(#loc168)
      } loc(#loc167)
    } loc(#loc166)
    cir.return loc(#loc11)
  } loc(#loc164)
  cir.func no_proto  @CWE190_Integer_Overflow__unsigned_int_fscanf_add_21_bad() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc172)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc30)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc173)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc32)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc161)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc33)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u32i>) -> !s32i loc(#loc32)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %10 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc162)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc174)
    %11 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc36)
    cir.call @badSink(%11) : (!u32i) -> () loc(#loc37)
    cir.return loc(#loc27)
  } loc(#loc171)
  cir.func no_proto  @CWE190_Integer_Overflow__unsigned_int_fscanf_add_21_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc176)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc177)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc178)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    cir.return loc(#loc39)
  } loc(#loc175)
  cir.global "private"  internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc179)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc180)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc50)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc51)
  cir.func internal private  @goodB2G1Sink(%arg0: !u32i loc(fused[#loc54, #loc55])) extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data", init] {alignment = 4 : i64} loc(#loc182)
    cir.store %arg0, %0 : !u32i, !cir.ptr<!u32i> loc(#loc56)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc179)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc59)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc59)
      cir.if %3 {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc50)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc50)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc63)
      } else {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc66)
          %5 = cir.const #cir.int<2147483647> : !s32i loc(#loc67)
          %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc67)
          %7 = cir.const #cir.int<2> : !u32i loc(#loc67)
          %8 = cir.binop(mul, %6, %7) : !u32i loc(#loc67)
          %9 = cir.const #cir.int<1> : !u32i loc(#loc67)
          %10 = cir.binop(add, %8, %9) : !u32i loc(#loc67)
          %11 = cir.cmp(lt, %4, %10) : !u32i, !s32i loc(#loc186)
          %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc68)
          cir.if %12 {
            %13 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc188)
            %14 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc74)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc73)
            %16 = cir.cast(integral, %15 : !s32i), !u32i loc(#loc73)
            %17 = cir.binop(add, %14, %16) : !u32i loc(#loc189)
            cir.store %17, %13 : !u32i, !cir.ptr<!u32i> loc(#loc188)
            %18 = cir.load %13 : !cir.ptr<!u32i>, !u32i loc(#loc75)
            cir.call @printUnsignedLine(%18) : (!u32i) -> () loc(#loc76)
          } else {
            %13 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc51)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc51)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc77)
          } loc(#loc187)
        } loc(#loc185)
      } loc(#loc184)
    } loc(#loc183)
    cir.return loc(#loc53)
  } loc(#loc181)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc191)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc82)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc82)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc192)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc84)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc161)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc85)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc86)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc86)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u32i>) -> !s32i loc(#loc84)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc87)
    %10 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc179)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    %11 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc89)
    cir.call @goodB2G1Sink(%11) : (!u32i) -> () loc(#loc90)
    cir.return loc(#loc79)
  } loc(#loc190)
  cir.global "private"  internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc194)
  cir.func internal private  @goodB2G2Sink(%arg0: !u32i loc(fused[#loc95, #loc96])) extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data", init] {alignment = 4 : i64} loc(#loc196)
    cir.store %arg0, %0 : !u32i, !cir.ptr<!u32i> loc(#loc97)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc194)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc100)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc100)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc104)
          %5 = cir.const #cir.int<2147483647> : !s32i loc(#loc105)
          %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc105)
          %7 = cir.const #cir.int<2> : !u32i loc(#loc105)
          %8 = cir.binop(mul, %6, %7) : !u32i loc(#loc105)
          %9 = cir.const #cir.int<1> : !u32i loc(#loc105)
          %10 = cir.binop(add, %8, %9) : !u32i loc(#loc105)
          %11 = cir.cmp(lt, %4, %10) : !u32i, !s32i loc(#loc200)
          %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc106)
          cir.if %12 {
            %13 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc202)
            %14 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc112)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc111)
            %16 = cir.cast(integral, %15 : !s32i), !u32i loc(#loc111)
            %17 = cir.binop(add, %14, %16) : !u32i loc(#loc203)
            cir.store %17, %13 : !u32i, !cir.ptr<!u32i> loc(#loc202)
            %18 = cir.load %13 : !cir.ptr<!u32i>, !u32i loc(#loc113)
            cir.call @printUnsignedLine(%18) : (!u32i) -> () loc(#loc114)
          } else {
            %13 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc115)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc115)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc116)
          } loc(#loc201)
        } loc(#loc199)
      } loc(#loc198)
    } loc(#loc197)
    cir.return loc(#loc94)
  } loc(#loc195)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc205)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc121)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc121)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc206)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc123)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc161)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc124)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc125)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc125)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u32i>) -> !s32i loc(#loc123)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc126)
    %10 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc194)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc207)
    %11 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc128)
    cir.call @goodB2G2Sink(%11) : (!u32i) -> () loc(#loc129)
    cir.return loc(#loc118)
  } loc(#loc204)
  cir.global "private"  internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc208)
  cir.func internal private  @goodG2BSink(%arg0: !u32i loc(fused[#loc134, #loc135])) extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data", init] {alignment = 4 : i64} loc(#loc210)
    cir.store %arg0, %0 : !u32i, !cir.ptr<!u32i> loc(#loc136)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc208)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc139)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc139)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc214)
          %5 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc145)
          %6 = cir.const #cir.int<1> : !s32i loc(#loc144)
          %7 = cir.cast(integral, %6 : !s32i), !u32i loc(#loc144)
          %8 = cir.binop(add, %5, %7) : !u32i loc(#loc215)
          cir.store %8, %4 : !u32i, !cir.ptr<!u32i> loc(#loc214)
          %9 = cir.load %4 : !cir.ptr<!u32i>, !u32i loc(#loc146)
          cir.call @printUnsignedLine(%9) : (!u32i) -> () loc(#loc147)
        } loc(#loc213)
      } loc(#loc212)
    } loc(#loc211)
    cir.return loc(#loc133)
  } loc(#loc209)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc217)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc152)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc152)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc218)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc154)
    %4 = cir.cast(integral, %3 : !s32i), !u32i loc(#loc154)
    cir.store %4, %0 : !u32i, !cir.ptr<!u32i> loc(#loc219)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc156)
    %6 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc208)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc220)
    %7 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc158)
    cir.call @goodG2BSink(%7) : (!u32i) -> () loc(#loc159)
    cir.return loc(#loc149)
  } loc(#loc216)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":42:20)
#loc6 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":23:1)
#loc7 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":23:24)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":34:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":34:47)
#loc10 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":25:1)
#loc11 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":35:1)
#loc14 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":26:1)
#loc15 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":27:5)
#loc16 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":34:5)
#loc17 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":27:8)
#loc18 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":28:5)
#loc19 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":29:9)
#loc20 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":33:9)
#loc21 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":31:13)
#loc22 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":31:42)
#loc23 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":31:35)
#loc24 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":32:31)
#loc25 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":32:13)
#loc26 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":37:1)
#loc27 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":45:1)
#loc28 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":39:5)
#loc29 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":39:18)
#loc30 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":40:12)
#loc31 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":40:5)
#loc32 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":42:5)
#loc33 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":42:13)
#loc34 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":43:17)
#loc35 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":43:5)
#loc36 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":44:13)
#loc37 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":44:5)
#loc38 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":140:1)
#loc39 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":145:1)
#loc40 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":142:5)
#loc41 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":142:14)
#loc42 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":143:5)
#loc43 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":143:14)
#loc44 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":144:5)
#loc45 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":144:13)
#loc46 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":52:1)
#loc47 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":52:29)
#loc48 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc49 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc50 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":62:19)
#loc51 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":74:23)
#loc52 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":57:1)
#loc53 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":77:1)
#loc56 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":58:1)
#loc57 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":59:5)
#loc58 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":76:5)
#loc59 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":59:8)
#loc60 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":60:5)
#loc61 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":63:5)
#loc62 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":65:5)
#loc63 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":62:9)
#loc64 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":67:9)
#loc65 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":75:9)
#loc66 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":67:13)
#loc67 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":67:20)
#loc68 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":67:18)
#loc69 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":68:9)
#loc70 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":71:9)
#loc71 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":73:9)
#loc72 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":69:13)
#loc73 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":69:42)
#loc74 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":69:35)
#loc75 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":70:31)
#loc76 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":70:13)
#loc77 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":74:13)
#loc78 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":79:1)
#loc79 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":87:1)
#loc80 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":81:5)
#loc81 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":81:18)
#loc82 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":82:12)
#loc83 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":82:5)
#loc84 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":84:5)
#loc85 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":84:13)
#loc86 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":84:20)
#loc87 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":85:22)
#loc88 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":85:5)
#loc89 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":86:18)
#loc90 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":86:5)
#loc91 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":53:1)
#loc92 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":53:29)
#loc93 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":90:1)
#loc94 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":105:1)
#loc97 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":91:1)
#loc98 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":92:5)
#loc99 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":104:5)
#loc100 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":92:8)
#loc101 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":93:5)
#loc102 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":95:9)
#loc103 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":103:9)
#loc104 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":95:13)
#loc105 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":95:20)
#loc106 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":95:18)
#loc107 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":96:9)
#loc108 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":99:9)
#loc109 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":101:9)
#loc110 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":97:13)
#loc111 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":97:42)
#loc112 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":97:35)
#loc113 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":98:31)
#loc114 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":98:13)
#loc115 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":102:23)
#loc116 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":102:13)
#loc117 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":107:1)
#loc118 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":115:1)
#loc119 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":109:5)
#loc120 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":109:18)
#loc121 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":110:12)
#loc122 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":110:5)
#loc123 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":112:5)
#loc124 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":112:13)
#loc125 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":112:20)
#loc126 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":113:22)
#loc127 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":113:5)
#loc128 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":114:18)
#loc129 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":114:5)
#loc130 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":54:1)
#loc131 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":54:28)
#loc132 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":118:1)
#loc133 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":128:1)
#loc136 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":119:1)
#loc137 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":120:5)
#loc138 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":127:5)
#loc139 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":120:8)
#loc140 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":121:5)
#loc141 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":122:9)
#loc142 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":126:9)
#loc143 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":124:13)
#loc144 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":124:42)
#loc145 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":124:35)
#loc146 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":125:31)
#loc147 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":125:13)
#loc148 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":130:1)
#loc149 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":138:1)
#loc150 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":132:5)
#loc151 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":132:18)
#loc152 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":133:12)
#loc153 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":133:5)
#loc154 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":135:12)
#loc155 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":135:5)
#loc156 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":136:21)
#loc157 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":136:5)
#loc158 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":137:17)
#loc159 = loc("CWE190_Integer_Overflow__unsigned_int_fscanf_add_21.c":137:5)
#loc160 = loc(fused[#loc1, #loc2])
#loc161 = loc(fused[#loc3, #loc4])
#loc162 = loc(fused[#loc6, #loc7])
#loc163 = loc(fused[#loc8, #loc9])
#loc164 = loc(fused[#loc10, #loc11])
#loc166 = loc(fused[#loc15, #loc16])
#loc167 = loc(fused[#loc18, #loc16])
#loc168 = loc(fused[#loc19, #loc20])
#loc169 = loc(fused[#loc21, #loc22])
#loc170 = loc(fused[#loc23, #loc22])
#loc171 = loc(fused[#loc26, #loc27])
#loc172 = loc(fused[#loc28, #loc29])
#loc173 = loc(fused[#loc31, #loc30])
#loc174 = loc(fused[#loc35, #loc34])
#loc175 = loc(fused[#loc38, #loc39])
#loc176 = loc(fused[#loc40, #loc41])
#loc177 = loc(fused[#loc42, #loc43])
#loc178 = loc(fused[#loc44, #loc45])
#loc179 = loc(fused[#loc46, #loc47])
#loc180 = loc(fused[#loc48, #loc49])
#loc181 = loc(fused[#loc52, #loc53])
#loc183 = loc(fused[#loc57, #loc58])
#loc184 = loc(fused[#loc60, #loc61, #loc62, #loc58])
#loc185 = loc(fused[#loc64, #loc65])
#loc186 = loc(fused[#loc66, #loc67])
#loc187 = loc(fused[#loc69, #loc70, #loc71, #loc65])
#loc188 = loc(fused[#loc72, #loc73])
#loc189 = loc(fused[#loc74, #loc73])
#loc190 = loc(fused[#loc78, #loc79])
#loc191 = loc(fused[#loc80, #loc81])
#loc192 = loc(fused[#loc83, #loc82])
#loc193 = loc(fused[#loc88, #loc87])
#loc194 = loc(fused[#loc91, #loc92])
#loc195 = loc(fused[#loc93, #loc94])
#loc197 = loc(fused[#loc98, #loc99])
#loc198 = loc(fused[#loc101, #loc99])
#loc199 = loc(fused[#loc102, #loc103])
#loc200 = loc(fused[#loc104, #loc105])
#loc201 = loc(fused[#loc107, #loc108, #loc109, #loc103])
#loc202 = loc(fused[#loc110, #loc111])
#loc203 = loc(fused[#loc112, #loc111])
#loc204 = loc(fused[#loc117, #loc118])
#loc205 = loc(fused[#loc119, #loc120])
#loc206 = loc(fused[#loc122, #loc121])
#loc207 = loc(fused[#loc127, #loc126])
#loc208 = loc(fused[#loc130, #loc131])
#loc209 = loc(fused[#loc132, #loc133])
#loc211 = loc(fused[#loc137, #loc138])
#loc212 = loc(fused[#loc140, #loc138])
#loc213 = loc(fused[#loc141, #loc142])
#loc214 = loc(fused[#loc143, #loc144])
#loc215 = loc(fused[#loc145, #loc144])
#loc216 = loc(fused[#loc148, #loc149])
#loc217 = loc(fused[#loc150, #loc151])
#loc218 = loc(fused[#loc153, #loc152])
#loc219 = loc(fused[#loc155, #loc154])
#loc220 = loc(fused[#loc157, #loc156])
