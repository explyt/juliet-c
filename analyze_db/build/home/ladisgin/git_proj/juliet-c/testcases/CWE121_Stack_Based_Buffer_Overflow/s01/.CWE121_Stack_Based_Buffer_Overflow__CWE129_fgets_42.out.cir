!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":24:22)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":24:26)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":169:10)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":169:14)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":169:20)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":169:32)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":110:26)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":110:30)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":74:26)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":74:30)
#true = #cir.bool<true> : !cir.bool
#loc242 = loc(fused[#loc10, #loc11])
#loc274 = loc(fused[#loc96, #loc97])
#loc275 = loc(fused[#loc98, #loc99])
#loc280 = loc(fused[#loc116, #loc117])
#loc306 = loc(fused[#loc189, #loc190])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc238)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc239)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc240)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc7)
  cir.func internal private @badSource(%arg0: !s32i loc(fused[#loc10, #loc11])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc242)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc9)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc12)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc244)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc244)
      cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc244)
      cir.scope {
        %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc19)
        %7 = cir.const #cir.int<3> : !s32i loc(#loc20)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc20)
        %9 = cir.const #cir.int<4> : !u64i loc(#loc20)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc20)
        %11 = cir.const #cir.int<2> : !s32i loc(#loc20)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc20)
        %13 = cir.binop(add, %10, %12) : !u64i loc(#loc20)
        %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc20)
        %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc239)
        %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc21)
        %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc22)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc23)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc23)
        %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc246)
        cir.if %20 {
          %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc27)
          %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc28)
          cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc248)
        } else {
          %21 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc7)
          %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc7)
          cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc31)
        } loc(#loc247)
      } loc(#loc245)
    } loc(#loc243)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc249)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc249)
    cir.return %3 : !s32i loc(#loc249)
  } loc(#loc241)
  cir.func private @printIntLine(!s32i) loc(#loc250)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc251)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc38)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc253)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc44)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc254)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc46)
    %4 = cir.call @badSource(%3) : (!s32i) -> !s32i loc(#loc47)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc255)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc257)
      %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc258)
      %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc258)
      cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc258)
      cir.scope {
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc58)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc59)
        %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc260)
        cir.if %10 {
          %11 = cir.const #cir.int<1> : !s32i loc(#loc63)
          %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc64)
          %13 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc65)
          %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc65)
          cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc262)
          cir.scope {
            %15 = cir.const #cir.int<0> : !s32i loc(#loc68)
            cir.store %15, %5 : !s32i, !cir.ptr<!s32i> loc(#loc264)
            cir.for : cond {
              %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc70)
              %17 = cir.const #cir.int<10> : !s32i loc(#loc71)
              %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc265)
              cir.condition(%18) loc(#loc72)
            } body {
              cir.scope {
                %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc74)
                %17 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc75)
                %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc75)
                %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc75)
                cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc76)
              } loc(#loc266)
              cir.yield loc(#loc67)
            } step {
              %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc77)
              %17 = cir.unary(inc, %16) : !s32i, !s32i loc(#loc78)
              cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc267)
              cir.yield loc(#loc263)
            } loc(#loc263)
          } loc(#loc263)
        } else {
          %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc38)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc38)
          cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc79)
        } loc(#loc261)
      } loc(#loc259)
    } loc(#loc256)
    cir.return loc(#loc40)
  } loc(#loc252)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc269)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc82)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc270)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc84)
    cir.return loc(#loc81)
  } loc(#loc268)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc271)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc272)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc90)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc91)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc92)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc93)
  cir.func @main(%arg0: !s32i loc(fused[#loc96, #loc97]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc98, #loc99])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc274)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc275)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc95)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc100)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc100)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc101)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc102)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc102)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc103)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc90)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc90)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42_good : !cir.ptr<!cir.func<!void ()>> loc(#loc276)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42_good() : () -> () loc(#loc105)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc91)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc91)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc92)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc92)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc277)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42_bad() : () -> () loc(#loc109)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc93)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc93)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc112)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc278)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc278)
    cir.return %17 : !s32i loc(#loc278)
  } loc(#loc273)
  cir.func internal private @goodB2GSource(%arg0: !s32i loc(fused[#loc116, #loc117])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc280)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc115)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc118)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc282)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc282)
      cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc282)
      cir.scope {
        %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc125)
        %7 = cir.const #cir.int<3> : !s32i loc(#loc126)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc126)
        %9 = cir.const #cir.int<4> : !u64i loc(#loc126)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc126)
        %11 = cir.const #cir.int<2> : !s32i loc(#loc126)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc126)
        %13 = cir.binop(add, %10, %12) : !u64i loc(#loc126)
        %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc126)
        %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc239)
        %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc127)
        %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc128)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc129)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc129)
        %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc284)
        cir.if %20 {
          %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc133)
          %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc134)
          cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc286)
        } else {
          %21 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc137)
          %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc137)
          cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc138)
        } loc(#loc285)
      } loc(#loc283)
    } loc(#loc281)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc139)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc287)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc287)
    cir.return %3 : !s32i loc(#loc287)
  } loc(#loc279)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc141)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc289)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc146)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc147)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc290)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    %4 = cir.call @goodB2GSource(%3) : (!s32i) -> !s32i loc(#loc150)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc291)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc293)
      %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc294)
      %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc294)
      cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc294)
      cir.scope {
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc161)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc162)
        %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc296)
        %11 = cir.ternary(%10, true {
          %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc164)
          %13 = cir.const #cir.int<10> : !s32i loc(#loc165)
          %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc297)
          %15 = cir.ternary(%14, true {
            %16 = cir.const #true loc(#loc163)
            cir.yield %16 : !cir.bool loc(#loc163)
          }, false {
            %16 = cir.const #false loc(#loc163)
            cir.yield %16 : !cir.bool loc(#loc163)
          }) : (!cir.bool) -> !cir.bool loc(#loc163)
          cir.yield %15 : !cir.bool loc(#loc163)
        }, false {
          %12 = cir.const #false loc(#loc163)
          cir.yield %12 : !cir.bool loc(#loc163)
        }) : (!cir.bool) -> !cir.bool loc(#loc163)
        cir.if %11 {
          %12 = cir.const #cir.int<1> : !s32i loc(#loc170)
          %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc171)
          %14 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc172)
          %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc172)
          cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc299)
          cir.scope {
            %16 = cir.const #cir.int<0> : !s32i loc(#loc175)
            cir.store %16, %5 : !s32i, !cir.ptr<!s32i> loc(#loc301)
            cir.for : cond {
              %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc177)
              %18 = cir.const #cir.int<10> : !s32i loc(#loc178)
              %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc302)
              cir.condition(%19) loc(#loc179)
            } body {
              cir.scope {
                %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc181)
                %18 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc182)
                %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc182)
                %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc182)
                cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc183)
              } loc(#loc303)
              cir.yield loc(#loc174)
            } step {
              %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc184)
              %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc185)
              cir.store %18, %5 : !s32i, !cir.ptr<!s32i> loc(#loc304)
              cir.yield loc(#loc300)
            } loc(#loc300)
          } loc(#loc300)
        } else {
          %12 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc141)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc141)
          cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc186)
        } loc(#loc298)
      } loc(#loc295)
    } loc(#loc292)
    cir.return loc(#loc143)
  } loc(#loc288)
  cir.func internal private @goodG2BSource(%arg0: !s32i loc(fused[#loc189, #loc190])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc306)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc188)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc191)
    %2 = cir.const #cir.int<7> : !s32i loc(#loc192)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc307)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc194)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc308)
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc308)
    cir.return %4 : !s32i loc(#loc308)
  } loc(#loc305)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc310)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc200)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc201)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc311)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc203)
    %4 = cir.call @goodG2BSource(%3) : (!s32i) -> !s32i loc(#loc204)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc312)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc314)
      %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc315)
      %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc315)
      cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc315)
      cir.scope {
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc215)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc216)
        %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc317)
        cir.if %10 {
          %11 = cir.const #cir.int<1> : !s32i loc(#loc220)
          %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc221)
          %13 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc222)
          %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc222)
          cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc319)
          cir.scope {
            %15 = cir.const #cir.int<0> : !s32i loc(#loc225)
            cir.store %15, %5 : !s32i, !cir.ptr<!s32i> loc(#loc321)
            cir.for : cond {
              %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc227)
              %17 = cir.const #cir.int<10> : !s32i loc(#loc228)
              %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc322)
              cir.condition(%18) loc(#loc229)
            } body {
              cir.scope {
                %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc231)
                %17 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc232)
                %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc232)
                %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc232)
                cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc233)
              } loc(#loc323)
              cir.yield loc(#loc224)
            } step {
              %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc234)
              %17 = cir.unary(inc, %16) : !s32i, !s32i loc(#loc235)
              cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc324)
              cir.yield loc(#loc320)
            } loc(#loc320)
          } loc(#loc320)
        } else {
          %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc236)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc236)
          cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc237)
        } loc(#loc318)
      } loc(#loc316)
    } loc(#loc313)
    cir.return loc(#loc197)
  } loc(#loc309)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":36:23)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":24:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":40:1)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":25:1)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":26:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":38:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":27:9)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":27:45)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":29:9)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":37:9)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":29:19)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":29:32)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":29:49)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":29:13)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":29:59)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":30:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":33:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":35:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":32:25)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":32:20)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":32:13)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":32:36)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":36:13)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":39:12)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":39:5)
#loc34 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc35 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc36 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc37 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":64:23)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":42:1)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":67:1)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":44:5)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":44:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":46:13)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":46:12)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":46:5)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":47:22)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":47:12)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":47:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":47:26)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":48:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":66:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":49:9)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":49:13)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":50:9)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":50:30)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":53:9)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":65:9)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":53:13)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":53:21)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":54:9)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":61:9)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":63:9)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":55:28)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":55:20)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":55:13)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":57:13)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":60:13)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":57:21)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":57:17)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":57:24)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":57:28)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":57:26)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":58:13)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":59:37)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":59:30)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":59:17)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":57:33)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":57:32)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":64:13)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":154:1)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":158:1)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":156:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":156:13)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":157:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":157:13)
#loc86 = loc("/usr/include/stdlib.h":575:1)
#loc87 = loc("/usr/include/stdlib.h":575:41)
#loc88 = loc("/usr/include/time.h":76:1)
#loc89 = loc("/usr/include/time.h":76:38)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":174:15)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":176:15)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":179:15)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":181:15)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":169:1)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":184:1)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":170:1)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":172:27)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":172:22)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":172:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":174:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":175:5)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":175:62)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":176:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":179:5)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":180:5)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":180:61)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":181:5)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":183:12)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":183:5)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":110:1)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":126:1)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":111:1)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":112:5)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":124:5)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":113:9)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":113:45)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":115:9)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":123:9)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":115:19)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":115:32)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":115:49)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":115:13)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":115:59)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":116:9)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":119:9)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":121:9)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":118:25)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":118:20)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":118:13)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":118:36)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":122:23)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":122:13)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":125:12)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":125:5)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":149:23)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":128:1)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":152:1)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":130:5)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":130:9)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":132:13)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":132:12)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":132:5)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":133:26)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":133:12)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":133:5)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":133:30)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":134:5)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":151:5)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":135:9)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":135:13)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":136:9)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":136:30)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":138:9)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":150:9)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":138:13)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":138:21)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":138:23)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":138:26)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":138:34)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":138:36)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":139:9)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":146:9)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":148:9)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":140:28)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":140:20)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":140:13)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":142:13)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":145:13)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":142:21)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":142:17)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":142:24)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":142:28)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":142:26)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":143:13)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":144:37)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":144:30)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":144:17)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":142:33)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":142:32)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":149:13)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":74:1)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":80:1)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":75:1)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":78:12)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":78:5)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":79:12)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":79:5)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":82:1)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":107:1)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":84:5)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":84:9)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":86:13)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":86:12)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":86:5)
#loc203 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":87:26)
#loc204 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":87:12)
#loc205 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":87:5)
#loc206 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":87:30)
#loc207 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":88:5)
#loc208 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":106:5)
#loc209 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":89:9)
#loc210 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":89:13)
#loc211 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":90:9)
#loc212 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":90:30)
#loc213 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":93:9)
#loc214 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":105:9)
#loc215 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":93:13)
#loc216 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":93:21)
#loc217 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":94:9)
#loc218 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":101:9)
#loc219 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":103:9)
#loc220 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":95:28)
#loc221 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":95:20)
#loc222 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":95:13)
#loc223 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":97:13)
#loc224 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":100:13)
#loc225 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":97:21)
#loc226 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":97:17)
#loc227 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":97:24)
#loc228 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":97:28)
#loc229 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":97:26)
#loc230 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":98:13)
#loc231 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":99:37)
#loc232 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":99:30)
#loc233 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":99:17)
#loc234 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":97:33)
#loc235 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":97:32)
#loc236 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":104:23)
#loc237 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":104:13)
#loc238 = loc(fused[#loc1, #loc2])
#loc239 = loc(fused[#loc3, #loc4])
#loc240 = loc(fused[#loc5, #loc6])
#loc241 = loc(fused[#loc8, #loc9])
#loc243 = loc(fused[#loc13, #loc14])
#loc244 = loc(fused[#loc15, #loc16])
#loc245 = loc(fused[#loc17, #loc18])
#loc246 = loc(fused[#loc22, #loc23])
#loc247 = loc(fused[#loc24, #loc25, #loc26, #loc18])
#loc248 = loc(fused[#loc29, #loc30])
#loc249 = loc(fused[#loc33, #loc32])
#loc250 = loc(fused[#loc34, #loc35])
#loc251 = loc(fused[#loc36, #loc37])
#loc252 = loc(fused[#loc39, #loc40])
#loc253 = loc(fused[#loc41, #loc42])
#loc254 = loc(fused[#loc45, #loc43])
#loc255 = loc(fused[#loc48, #loc49])
#loc256 = loc(fused[#loc50, #loc51])
#loc257 = loc(fused[#loc52, #loc53])
#loc258 = loc(fused[#loc54, #loc55])
#loc259 = loc(fused[#loc56, #loc57])
#loc260 = loc(fused[#loc58, #loc59])
#loc261 = loc(fused[#loc60, #loc61, #loc62, #loc57])
#loc262 = loc(fused[#loc65, #loc63])
#loc263 = loc(fused[#loc66, #loc67])
#loc264 = loc(fused[#loc69, #loc68])
#loc265 = loc(fused[#loc70, #loc71])
#loc266 = loc(fused[#loc73, #loc67])
#loc267 = loc(fused[#loc78, #loc77])
#loc268 = loc(fused[#loc80, #loc81])
#loc269 = loc(fused[#loc82, #loc83])
#loc270 = loc(fused[#loc84, #loc85])
#loc271 = loc(fused[#loc86, #loc87])
#loc272 = loc(fused[#loc88, #loc89])
#loc273 = loc(fused[#loc94, #loc95])
#loc276 = loc(fused[#loc105, #loc106])
#loc277 = loc(fused[#loc109, #loc110])
#loc278 = loc(fused[#loc113, #loc112])
#loc279 = loc(fused[#loc114, #loc115])
#loc281 = loc(fused[#loc119, #loc120])
#loc282 = loc(fused[#loc121, #loc122])
#loc283 = loc(fused[#loc123, #loc124])
#loc284 = loc(fused[#loc128, #loc129])
#loc285 = loc(fused[#loc130, #loc131, #loc132, #loc124])
#loc286 = loc(fused[#loc135, #loc136])
#loc287 = loc(fused[#loc140, #loc139])
#loc288 = loc(fused[#loc142, #loc143])
#loc289 = loc(fused[#loc144, #loc145])
#loc290 = loc(fused[#loc148, #loc146])
#loc291 = loc(fused[#loc151, #loc152])
#loc292 = loc(fused[#loc153, #loc154])
#loc293 = loc(fused[#loc155, #loc156])
#loc294 = loc(fused[#loc157, #loc158])
#loc295 = loc(fused[#loc159, #loc160])
#loc296 = loc(fused[#loc161, #loc162])
#loc297 = loc(fused[#loc164, #loc166])
#loc298 = loc(fused[#loc167, #loc168, #loc169, #loc160])
#loc299 = loc(fused[#loc172, #loc170])
#loc300 = loc(fused[#loc173, #loc174])
#loc301 = loc(fused[#loc176, #loc175])
#loc302 = loc(fused[#loc177, #loc178])
#loc303 = loc(fused[#loc180, #loc174])
#loc304 = loc(fused[#loc185, #loc184])
#loc305 = loc(fused[#loc187, #loc188])
#loc307 = loc(fused[#loc193, #loc192])
#loc308 = loc(fused[#loc195, #loc194])
#loc309 = loc(fused[#loc196, #loc197])
#loc310 = loc(fused[#loc198, #loc199])
#loc311 = loc(fused[#loc202, #loc200])
#loc312 = loc(fused[#loc205, #loc206])
#loc313 = loc(fused[#loc207, #loc208])
#loc314 = loc(fused[#loc209, #loc210])
#loc315 = loc(fused[#loc211, #loc212])
#loc316 = loc(fused[#loc213, #loc214])
#loc317 = loc(fused[#loc215, #loc216])
#loc318 = loc(fused[#loc217, #loc218, #loc219, #loc214])
#loc319 = loc(fused[#loc222, #loc220])
#loc320 = loc(fused[#loc223, #loc224])
#loc321 = loc(fused[#loc226, #loc225])
#loc322 = loc(fused[#loc227, #loc228])
#loc323 = loc(fused[#loc230, #loc224])
#loc324 = loc(fused[#loc235, #loc234])
