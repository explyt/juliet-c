!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_open_18.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_18L7goodG2BEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc132)
  cir.global "private" constant cir_private @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_183badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc133)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc134)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc135)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc136)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc137)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc13)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc138)
  cir.func private @close(!s32i) -> !s32i loc(#loc139)
  cir.func @_ZN51CWE23_Relative_Path_Traversal__char_console_open_183badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc141)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc133)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc142)
    %3 = cir.get_global @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_183badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc133)
    cir.copy %3 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc133)
    %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc24)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc143)
    cir.goto "source" loc(#loc144)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc28)
    %5 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc29)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc29)
    cir.store %7, %2 : !u64i, !cir.ptr<!u64i> loc(#loc142)
    cir.scope {
      %8 = cir.const #cir.int<4096> : !s32i loc(#loc33)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc33)
      %10 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc34)
      %11 = cir.binop(sub, %9, %10) : !u64i loc(#loc146)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc35)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc35)
      %14 = cir.cmp(gt, %11, %13) : !u64i, !cir.bool loc(#loc147)
      cir.if %14 {
        cir.scope {
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
          %16 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc40)
          %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc41)
          %18 = cir.const #cir.int<4096> : !s32i loc(#loc42)
          %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc42)
          %20 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc43)
          %21 = cir.binop(sub, %19, %20) : !u64i loc(#loc150)
          %22 = cir.cast(integral, %21 : !u64i), !s32i loc(#loc150)
          %23 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc136)
          %24 = cir.load %23 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc44)
          %25 = cir.call @fgets(%17, %22, %24) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc45)
          %26 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc46)
          %27 = cir.cmp(ne, %25, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc151)
          cir.if %27 {
            %28 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc50)
            %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
            %30 = cir.call @strlen(%29) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc50)
            cir.store %30, %2 : !u64i, !cir.ptr<!u64i> loc(#loc153)
            cir.scope {
              %31 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc56)
              %32 = cir.const #cir.int<0> : !s32i loc(#loc57)
              %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc57)
              %34 = cir.cmp(gt, %31, %33) : !u64i, !cir.bool loc(#loc155)
              %35 = cir.ternary(%34, true {
                %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
                %37 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc60)
                %38 = cir.const #cir.int<1> : !s32i loc(#loc61)
                %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc61)
                %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc156)
                %41 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %40 : !u64i), !cir.ptr<!s8i> loc(#loc62)
                %42 = cir.load %41 : !cir.ptr<!s8i>, !s8i loc(#loc59)
                %43 = cir.cast(integral, %42 : !s8i), !s32i loc(#loc59)
                %44 = cir.const #cir.int<10> : !s8i loc(#loc63)
                %45 = cir.cast(integral, %44 : !s8i), !s32i loc(#loc63)
                %46 = cir.cmp(eq, %43, %45) : !s32i, !cir.bool loc(#loc157)
                %47 = cir.ternary(%46, true {
                  %48 = cir.const #true loc(#loc58)
                  cir.yield %48 : !cir.bool loc(#loc58)
                }, false {
                  %48 = cir.const #false loc(#loc58)
                  cir.yield %48 : !cir.bool loc(#loc58)
                }) : (!cir.bool) -> !cir.bool loc(#loc58)
                cir.yield %47 : !cir.bool loc(#loc58)
              }, false {
                %36 = cir.const #false loc(#loc58)
                cir.yield %36 : !cir.bool loc(#loc58)
              }) : (!cir.bool) -> !cir.bool loc(#loc58)
              cir.if %35 {
                %36 = cir.const #cir.int<0> : !s8i loc(#loc65)
                %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
                %38 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc67)
                %39 = cir.const #cir.int<1> : !s32i loc(#loc68)
                %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc68)
                %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc159)
                %42 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc69)
                cir.store %36, %42 : !s8i, !cir.ptr<!s8i> loc(#loc160)
              } loc(#loc158)
            } loc(#loc154)
          } else {
            %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc13)
            %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc13)
            cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc70)
            %30 = cir.const #cir.int<0> : !s8i loc(#loc71)
            %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
            %32 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc73)
            %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc74)
            cir.store %30, %33 : !s8i, !cir.ptr<!s8i> loc(#loc161)
          } loc(#loc152)
        } loc(#loc149)
      } loc(#loc148)
    } loc(#loc145)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc163)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
      %10 = cir.const #cir.int<2> : !s32i loc(#loc80)
      %11 = cir.const #cir.int<64> : !s32i loc(#loc81)
      %12 = cir.binop(or, %10, %11) : !s32i loc(#loc164)
      %13 = cir.const #cir.int<256> : !s32i loc(#loc82)
      %14 = cir.const #cir.int<128> : !s32i loc(#loc83)
      %15 = cir.binop(or, %13, %14) : !s32i loc(#loc165)
      %16 = cir.call @open(%9, %12, %15) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc84)
      cir.store %16, %8 : !s32i, !cir.ptr<!s32i> loc(#loc166)
      cir.scope {
        %17 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc89)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc90)
        %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc91)
        %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc168)
        cir.if %20 {
          %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc93)
          %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc94)
        } loc(#loc169)
      } loc(#loc167)
    } loc(#loc162)
    cir.return loc(#loc19)
  } loc(#loc140)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc170)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc97)
  cir.func internal private @_ZN51CWE23_Relative_Path_Traversal__char_console_open_18L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc172)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc132)
    %2 = cir.get_global @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_18L7goodG2BEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc132)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc132)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc102)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc173)
    cir.goto "source" loc(#loc174)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc106)
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc107)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc97)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc97)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc107)
    cir.scope {
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc176)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
      %11 = cir.const #cir.int<2> : !s32i loc(#loc114)
      %12 = cir.const #cir.int<64> : !s32i loc(#loc115)
      %13 = cir.binop(or, %11, %12) : !s32i loc(#loc177)
      %14 = cir.const #cir.int<256> : !s32i loc(#loc116)
      %15 = cir.const #cir.int<128> : !s32i loc(#loc117)
      %16 = cir.binop(or, %14, %15) : !s32i loc(#loc178)
      %17 = cir.call @open(%10, %13, %16) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc118)
      cir.store %17, %9 : !s32i, !cir.ptr<!s32i> loc(#loc179)
      cir.scope {
        %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc123)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc124)
        %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc125)
        %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc181)
        cir.if %21 {
          %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc127)
          %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc128)
        } loc(#loc182)
      } loc(#loc180)
    } loc(#loc175)
    cir.return loc(#loc99)
  } loc(#loc171)
  cir.func @_ZN51CWE23_Relative_Path_Traversal__char_console_open_184goodEv() extra(#fn_attr1) {
    cir.call @_ZN51CWE23_Relative_Path_Traversal__char_console_open_18L7goodG2BEv() : () -> () loc(#loc131)
    cir.return loc(#loc130)
  } loc(#loc183)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_open_18.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":91:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":91:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":43:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":43:37)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("/usr/include/stdio.h":149:1)
#loc10 = loc("/usr/include/stdio.h":149:14)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":66:27)
#loc14 = loc("/usr/include/fcntl.h":209:1)
#loc15 = loc("/usr/include/fcntl.h":209:56)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":40:1)
#loc19 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":81:1)
#loc20 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":42:5)
#loc21 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":42:12)
#loc22 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":49:9)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":49:37)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":44:12)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":44:5)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":45:5)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":45:10)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":46:1)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":49:26)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":49:33)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":51:9)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":70:9)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":51:13)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":51:26)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":51:36)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":52:9)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":54:13)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":69:13)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":54:23)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":54:28)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":54:27)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":54:43)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":54:56)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":54:66)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":54:17)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":54:76)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":55:13)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":63:13)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":65:13)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":58:27)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":58:34)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":58:17)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":58:38)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":59:17)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":62:17)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":59:21)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":59:31)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":59:33)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":59:36)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":59:41)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":59:49)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":59:50)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":59:55)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":60:17)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":61:39)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":61:21)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":61:26)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":61:34)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":61:35)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":66:17)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":68:33)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":68:17)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":68:22)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":68:29)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":72:5)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":80:5)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":73:9)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":73:13)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":75:25)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":75:31)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":75:38)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":75:47)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":75:55)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":75:20)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":75:9)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":75:63)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":76:9)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":79:9)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":76:13)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":76:26)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":76:25)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":77:9)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":78:19)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":78:13)
#loc95 = loc("/usr/include/string.h":149:1)
#loc96 = loc("/usr/include/string.h":150:14)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":96:18)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":88:1)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":106:1)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":90:5)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":90:12)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":92:12)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":92:5)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":93:5)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":93:10)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":94:1)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":96:5)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":96:12)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":97:5)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":105:5)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":98:9)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":98:13)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":100:25)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":100:31)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":100:38)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":100:47)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":100:55)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":100:20)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":100:9)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":100:63)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":101:9)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":104:9)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":101:13)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":101:26)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":101:25)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":102:9)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":103:19)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":103:13)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":108:1)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":111:1)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_console_open_18.cpp":110:5)
#loc132 = loc(fused[#loc1, #loc2])
#loc133 = loc(fused[#loc3, #loc4])
#loc134 = loc(fused[#loc5, #loc6])
#loc135 = loc(fused[#loc7, #loc8])
#loc136 = loc(fused[#loc9, #loc10])
#loc137 = loc(fused[#loc11, #loc12])
#loc138 = loc(fused[#loc14, #loc15])
#loc139 = loc(fused[#loc16, #loc17])
#loc140 = loc(fused[#loc18, #loc19])
#loc141 = loc(fused[#loc20, #loc21])
#loc142 = loc(fused[#loc22, #loc23])
#loc143 = loc(fused[#loc25, #loc24])
#loc144 = loc(fused[#loc26, #loc27])
#loc145 = loc(fused[#loc31, #loc32])
#loc146 = loc(fused[#loc33, #loc34])
#loc147 = loc(fused[#loc33, #loc35])
#loc148 = loc(fused[#loc36, #loc32])
#loc149 = loc(fused[#loc37, #loc38])
#loc150 = loc(fused[#loc42, #loc43])
#loc151 = loc(fused[#loc45, #loc46])
#loc152 = loc(fused[#loc47, #loc48, #loc49, #loc38])
#loc153 = loc(fused[#loc52, #loc53])
#loc154 = loc(fused[#loc54, #loc55])
#loc155 = loc(fused[#loc56, #loc57])
#loc156 = loc(fused[#loc60, #loc61])
#loc157 = loc(fused[#loc59, #loc63])
#loc158 = loc(fused[#loc64, #loc55])
#loc159 = loc(fused[#loc67, #loc68])
#loc160 = loc(fused[#loc66, #loc65])
#loc161 = loc(fused[#loc72, #loc71])
#loc162 = loc(fused[#loc75, #loc76])
#loc163 = loc(fused[#loc77, #loc78])
#loc164 = loc(fused[#loc80, #loc81])
#loc165 = loc(fused[#loc82, #loc83])
#loc166 = loc(fused[#loc85, #loc86])
#loc167 = loc(fused[#loc87, #loc88])
#loc168 = loc(fused[#loc89, #loc90])
#loc169 = loc(fused[#loc92, #loc88])
#loc170 = loc(fused[#loc95, #loc96])
#loc171 = loc(fused[#loc98, #loc99])
#loc172 = loc(fused[#loc100, #loc101])
#loc173 = loc(fused[#loc103, #loc102])
#loc174 = loc(fused[#loc104, #loc105])
#loc175 = loc(fused[#loc109, #loc110])
#loc176 = loc(fused[#loc111, #loc112])
#loc177 = loc(fused[#loc114, #loc115])
#loc178 = loc(fused[#loc116, #loc117])
#loc179 = loc(fused[#loc119, #loc120])
#loc180 = loc(fused[#loc121, #loc122])
#loc181 = loc(fused[#loc123, #loc124])
#loc182 = loc(fused[#loc126, #loc122])
#loc183 = loc(fused[#loc129, #loc130])
