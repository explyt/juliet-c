!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":130:27)
#true = #cir.bool<true> : !cir.bool
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc241)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc242)
  cir.func private @printIntLine(!s32i) loc(#loc243)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc244)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc9)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc245)
  cir.func @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc247)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc248)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc249)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc250)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc251)
    cir.store %3, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc23)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc25)
    cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc252)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc27)
    cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc253)
    cir.br ^bb1 loc(#loc254)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc15)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc15)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc247)
    cir.br ^bb2 loc(#loc255)
  ^bb2:  // pred: ^bb1
    %10 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc33)
    %11 = cir.const #cir.int<10> : !s32i loc(#loc34)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc34)
    %13 = cir.const #cir.int<4> : !u64i loc(#loc256)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc257)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc33)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc258)
    cir.store %16, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc249)
    cir.br ^bb3 loc(#loc259)
  ^bb3:  // pred: ^bb2
    %17 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc39)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc40)
    %19 = cir.cmp(eq, %17, %18) : !cir.ptr<!s32i>, !cir.bool loc(#loc260)
    cir.brcond %19 ^bb4, ^bb5 loc(#loc261)
  ^bb4:  // pred: ^bb3
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc42)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc44)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc42)
    cir.br ^bb5 loc(#loc38)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc38)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc262)
  ^bb7:  // pred: ^bb6
    %23 = cir.const #cir.int<0> : !s32i loc(#loc47)
    cir.store %23, %1 : !s32i, !cir.ptr<!s32i> loc(#loc263)
    cir.br ^bb8 loc(#loc262)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %24 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc49)
    %25 = cir.const #cir.int<10> : !s32i loc(#loc50)
    %26 = cir.cmp(lt, %24, %25) : !s32i, !cir.bool loc(#loc264)
    cir.brcond %26 ^bb9, ^bb13 loc(#loc264)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc265)
  ^bb10:  // pred: ^bb9
    %27 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %28 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc53)
    %29 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc54)
    %30 = cir.ptr_stride(%28 : !cir.ptr<!s32i>, %29 : !s32i), !cir.ptr<!s32i> loc(#loc55)
    cir.store %27, %30 : !s32i, !cir.ptr<!s32i> loc(#loc266)
    cir.br ^bb11 loc(#loc46)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc46)
  ^bb12:  // pred: ^bb11
    %31 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    %32 = cir.unary(inc, %31) nsw : !s32i, !s32i loc(#loc57)
    cir.store %32, %1 : !s32i, !cir.ptr<!s32i> loc(#loc267)
    cir.br ^bb8 loc(#loc262)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc46)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc268)
  ^bb15:  // pred: ^bb14
    %33 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc60)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc61)
    %35 = cir.cmp(ge, %33, %34) : !s32i, !cir.bool loc(#loc269)
    cir.brcond %35 ^bb16, ^bb25 loc(#loc270)
  ^bb16:  // pred: ^bb15
    %36 = cir.const #cir.int<1> : !s32i loc(#loc65)
    %37 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc66)
    %38 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc67)
    %39 = cir.ptr_stride(%37 : !cir.ptr<!s32i>, %38 : !s32i), !cir.ptr<!s32i> loc(#loc68)
    cir.store %36, %39 : !s32i, !cir.ptr<!s32i> loc(#loc271)
    cir.br ^bb17 loc(#loc272)
  ^bb17:  // pred: ^bb16
    %40 = cir.const #cir.int<0> : !s32i loc(#loc71)
    cir.store %40, %1 : !s32i, !cir.ptr<!s32i> loc(#loc273)
    cir.br ^bb18 loc(#loc272)
  ^bb18:  // 2 preds: ^bb17, ^bb22
    %41 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc73)
    %42 = cir.const #cir.int<10> : !s32i loc(#loc74)
    %43 = cir.cmp(lt, %41, %42) : !s32i, !cir.bool loc(#loc274)
    cir.brcond %43 ^bb19, ^bb23 loc(#loc274)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc275)
  ^bb20:  // pred: ^bb19
    %44 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc76)
    %45 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc77)
    %46 = cir.ptr_stride(%44 : !cir.ptr<!s32i>, %45 : !s32i), !cir.ptr<!s32i> loc(#loc78)
    %47 = cir.load %46 : !cir.ptr<!s32i>, !s32i loc(#loc76)
    cir.call @printIntLine(%47) : (!s32i) -> () loc(#loc79)
    cir.br ^bb21 loc(#loc70)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc70)
  ^bb22:  // pred: ^bb21
    %48 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc80)
    %49 = cir.unary(inc, %48) nsw : !s32i, !s32i loc(#loc81)
    cir.store %49, %1 : !s32i, !cir.ptr<!s32i> loc(#loc276)
    cir.br ^bb18 loc(#loc272)
  ^bb23:  // pred: ^bb18
    cir.br ^bb24 loc(#loc70)
  ^bb24:  // pred: ^bb23
    cir.br ^bb26 loc(#loc63)
  ^bb25:  // pred: ^bb15
    %50 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc9)
    %51 = cir.cast(array_to_ptrdecay, %50 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%51) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    cir.br ^bb26 loc(#loc59)
  ^bb26:  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc59)
  ^bb27:  // pred: ^bb26
    %52 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc83)
    %53 = cir.cast(bitcast, %52 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc83)
    cir.call @free(%53) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc84)
    cir.br ^bb28 loc(#loc32)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc30)
  ^bb29:  // pred: ^bb28
    cir.return loc(#loc13)
  } loc(#loc246)
  cir.func internal private @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc278)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc279)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc280)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc281)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc282)
    cir.store %3, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc96)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc98)
    cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc283)
    %7 = cir.const #cir.int<7> : !s32i loc(#loc100)
    cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc284)
    cir.br ^bb1 loc(#loc285)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc88)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc278)
    cir.br ^bb2 loc(#loc286)
  ^bb2:  // pred: ^bb1
    %10 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc106)
    %11 = cir.const #cir.int<10> : !s32i loc(#loc107)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc107)
    %13 = cir.const #cir.int<4> : !u64i loc(#loc287)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc288)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc106)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc289)
    cir.store %16, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc280)
    cir.br ^bb3 loc(#loc290)
  ^bb3:  // pred: ^bb2
    %17 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc112)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc113)
    %19 = cir.cmp(eq, %17, %18) : !cir.ptr<!s32i>, !cir.bool loc(#loc291)
    cir.brcond %19 ^bb4, ^bb5 loc(#loc292)
  ^bb4:  // pred: ^bb3
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc115)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc117)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc115)
    cir.br ^bb5 loc(#loc111)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc111)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc293)
  ^bb7:  // pred: ^bb6
    %23 = cir.const #cir.int<0> : !s32i loc(#loc120)
    cir.store %23, %1 : !s32i, !cir.ptr<!s32i> loc(#loc294)
    cir.br ^bb8 loc(#loc293)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %24 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    %25 = cir.const #cir.int<10> : !s32i loc(#loc123)
    %26 = cir.cmp(lt, %24, %25) : !s32i, !cir.bool loc(#loc295)
    cir.brcond %26 ^bb9, ^bb13 loc(#loc295)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc296)
  ^bb10:  // pred: ^bb9
    %27 = cir.const #cir.int<0> : !s32i loc(#loc125)
    %28 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc126)
    %29 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %30 = cir.ptr_stride(%28 : !cir.ptr<!s32i>, %29 : !s32i), !cir.ptr<!s32i> loc(#loc128)
    cir.store %27, %30 : !s32i, !cir.ptr<!s32i> loc(#loc297)
    cir.br ^bb11 loc(#loc119)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc119)
  ^bb12:  // pred: ^bb11
    %31 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    %32 = cir.unary(inc, %31) nsw : !s32i, !s32i loc(#loc130)
    cir.store %32, %1 : !s32i, !cir.ptr<!s32i> loc(#loc298)
    cir.br ^bb8 loc(#loc293)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc119)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc299)
  ^bb15:  // pred: ^bb14
    %33 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc134)
    %35 = cir.cmp(ge, %33, %34) : !s32i, !cir.bool loc(#loc300)
    cir.brcond %35 ^bb16, ^bb25 loc(#loc301)
  ^bb16:  // pred: ^bb15
    %36 = cir.const #cir.int<1> : !s32i loc(#loc138)
    %37 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc139)
    %38 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc140)
    %39 = cir.ptr_stride(%37 : !cir.ptr<!s32i>, %38 : !s32i), !cir.ptr<!s32i> loc(#loc141)
    cir.store %36, %39 : !s32i, !cir.ptr<!s32i> loc(#loc302)
    cir.br ^bb17 loc(#loc303)
  ^bb17:  // pred: ^bb16
    %40 = cir.const #cir.int<0> : !s32i loc(#loc144)
    cir.store %40, %1 : !s32i, !cir.ptr<!s32i> loc(#loc304)
    cir.br ^bb18 loc(#loc303)
  ^bb18:  // 2 preds: ^bb17, ^bb22
    %41 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    %42 = cir.const #cir.int<10> : !s32i loc(#loc147)
    %43 = cir.cmp(lt, %41, %42) : !s32i, !cir.bool loc(#loc305)
    cir.brcond %43 ^bb19, ^bb23 loc(#loc305)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc306)
  ^bb20:  // pred: ^bb19
    %44 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc149)
    %45 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    %46 = cir.ptr_stride(%44 : !cir.ptr<!s32i>, %45 : !s32i), !cir.ptr<!s32i> loc(#loc151)
    %47 = cir.load %46 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    cir.call @printIntLine(%47) : (!s32i) -> () loc(#loc152)
    cir.br ^bb21 loc(#loc143)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc143)
  ^bb22:  // pred: ^bb21
    %48 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    %49 = cir.unary(inc, %48) nsw : !s32i, !s32i loc(#loc154)
    cir.store %49, %1 : !s32i, !cir.ptr<!s32i> loc(#loc307)
    cir.br ^bb18 loc(#loc303)
  ^bb23:  // pred: ^bb18
    cir.br ^bb24 loc(#loc143)
  ^bb24:  // pred: ^bb23
    cir.br ^bb26 loc(#loc136)
  ^bb25:  // pred: ^bb15
    %50 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc155)
    %51 = cir.cast(array_to_ptrdecay, %50 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc155)
    cir.call @printLine(%51) : (!cir.ptr<!s8i>) -> () loc(#loc156)
    cir.br ^bb26 loc(#loc132)
  ^bb26:  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc132)
  ^bb27:  // pred: ^bb26
    %52 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc157)
    %53 = cir.cast(bitcast, %52 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc157)
    cir.call @free(%53) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc158)
    cir.br ^bb28 loc(#loc105)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc103)
  ^bb29:  // pred: ^bb28
    cir.return loc(#loc86)
  } loc(#loc277)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc159)
  cir.func internal private @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc309)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc310)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc311)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc312)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc313)
    cir.store %3, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc171)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc172)
    %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc173)
    cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc314)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc175)
    cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc315)
    cir.br ^bb1 loc(#loc316)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc163)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc163)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc309)
    cir.br ^bb2 loc(#loc317)
  ^bb2:  // pred: ^bb1
    %10 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc181)
    %11 = cir.const #cir.int<10> : !s32i loc(#loc182)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc182)
    %13 = cir.const #cir.int<4> : !u64i loc(#loc318)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc319)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc181)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc320)
    cir.store %16, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc311)
    cir.br ^bb3 loc(#loc321)
  ^bb3:  // pred: ^bb2
    %17 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc187)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc188)
    %19 = cir.cmp(eq, %17, %18) : !cir.ptr<!s32i>, !cir.bool loc(#loc322)
    cir.brcond %19 ^bb4, ^bb5 loc(#loc323)
  ^bb4:  // pred: ^bb3
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc190)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc191)
    %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc192)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc190)
    cir.br ^bb5 loc(#loc186)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc186)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc324)
  ^bb7:  // pred: ^bb6
    %23 = cir.const #cir.int<0> : !s32i loc(#loc195)
    cir.store %23, %1 : !s32i, !cir.ptr<!s32i> loc(#loc325)
    cir.br ^bb8 loc(#loc324)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %24 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc197)
    %25 = cir.const #cir.int<10> : !s32i loc(#loc198)
    %26 = cir.cmp(lt, %24, %25) : !s32i, !cir.bool loc(#loc326)
    cir.brcond %26 ^bb9, ^bb13 loc(#loc326)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc327)
  ^bb10:  // pred: ^bb9
    %27 = cir.const #cir.int<0> : !s32i loc(#loc200)
    %28 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc201)
    %29 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc202)
    %30 = cir.ptr_stride(%28 : !cir.ptr<!s32i>, %29 : !s32i), !cir.ptr<!s32i> loc(#loc203)
    cir.store %27, %30 : !s32i, !cir.ptr<!s32i> loc(#loc328)
    cir.br ^bb11 loc(#loc194)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc194)
  ^bb12:  // pred: ^bb11
    %31 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc204)
    %32 = cir.unary(inc, %31) nsw : !s32i, !s32i loc(#loc205)
    cir.store %32, %1 : !s32i, !cir.ptr<!s32i> loc(#loc329)
    cir.br ^bb8 loc(#loc324)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc194)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc330)
  ^bb15:  // pred: ^bb14
    %33 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc208)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc209)
    %35 = cir.cmp(ge, %33, %34) : !s32i, !cir.bool loc(#loc331)
    cir.brcond %35 ^bb16, ^bb21 loc(#loc210)
  ^bb16:  // pred: ^bb15
    %36 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc211)
    %37 = cir.const #cir.int<10> : !s32i loc(#loc212)
    %38 = cir.cmp(lt, %36, %37) : !s32i, !cir.bool loc(#loc332)
    cir.brcond %38 ^bb17, ^bb18 loc(#loc210)
  ^bb17:  // pred: ^bb16
    %39 = cir.const #true loc(#loc210)
    cir.br ^bb19(%39 : !cir.bool) loc(#loc210)
  ^bb18:  // pred: ^bb16
    %40 = cir.const #false loc(#loc210)
    cir.br ^bb19(%40 : !cir.bool) loc(#loc210)
  ^bb19(%41: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":130:27)):  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc210)
  ^bb20:  // pred: ^bb19
    cir.br ^bb22(%41 : !cir.bool) loc(#loc210)
  ^bb21:  // pred: ^bb15
    %42 = cir.const #false loc(#loc210)
    cir.br ^bb22(%42 : !cir.bool) loc(#loc210)
  ^bb22(%43: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":130:27)):  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc210)
  ^bb23:  // pred: ^bb22
    cir.brcond %43 ^bb24, ^bb33 loc(#loc333)
  ^bb24:  // pred: ^bb23
    %44 = cir.const #cir.int<1> : !s32i loc(#loc217)
    %45 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc218)
    %46 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc219)
    %47 = cir.ptr_stride(%45 : !cir.ptr<!s32i>, %46 : !s32i), !cir.ptr<!s32i> loc(#loc220)
    cir.store %44, %47 : !s32i, !cir.ptr<!s32i> loc(#loc334)
    cir.br ^bb25 loc(#loc335)
  ^bb25:  // pred: ^bb24
    %48 = cir.const #cir.int<0> : !s32i loc(#loc223)
    cir.store %48, %1 : !s32i, !cir.ptr<!s32i> loc(#loc336)
    cir.br ^bb26 loc(#loc335)
  ^bb26:  // 2 preds: ^bb25, ^bb30
    %49 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc225)
    %50 = cir.const #cir.int<10> : !s32i loc(#loc226)
    %51 = cir.cmp(lt, %49, %50) : !s32i, !cir.bool loc(#loc337)
    cir.brcond %51 ^bb27, ^bb31 loc(#loc337)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28 loc(#loc338)
  ^bb28:  // pred: ^bb27
    %52 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc228)
    %53 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc229)
    %54 = cir.ptr_stride(%52 : !cir.ptr<!s32i>, %53 : !s32i), !cir.ptr<!s32i> loc(#loc230)
    %55 = cir.load %54 : !cir.ptr<!s32i>, !s32i loc(#loc228)
    cir.call @printIntLine(%55) : (!s32i) -> () loc(#loc231)
    cir.br ^bb29 loc(#loc222)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc222)
  ^bb30:  // pred: ^bb29
    %56 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc232)
    %57 = cir.unary(inc, %56) nsw : !s32i, !s32i loc(#loc233)
    cir.store %57, %1 : !s32i, !cir.ptr<!s32i> loc(#loc339)
    cir.br ^bb26 loc(#loc335)
  ^bb31:  // pred: ^bb26
    cir.br ^bb32 loc(#loc222)
  ^bb32:  // pred: ^bb31
    cir.br ^bb34 loc(#loc215)
  ^bb33:  // pred: ^bb23
    %58 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc159)
    %59 = cir.cast(array_to_ptrdecay, %58 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc159)
    cir.call @printLine(%59) : (!cir.ptr<!s8i>) -> () loc(#loc234)
    cir.br ^bb34 loc(#loc207)
  ^bb34:  // 2 preds: ^bb32, ^bb33
    cir.br ^bb35 loc(#loc207)
  ^bb35:  // pred: ^bb34
    %60 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc235)
    %61 = cir.cast(bitcast, %60 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc235)
    cir.call @free(%61) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc236)
    cir.br ^bb36 loc(#loc180)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc178)
  ^bb37:  // pred: ^bb36
    cir.return loc(#loc161)
  } loc(#loc308)
  cir.func @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33L7goodG2BEv() : () -> () loc(#loc239)
    cir.call @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33L7goodB2GEv() : () -> () loc(#loc240)
    cir.return loc(#loc238)
  } loc(#loc340)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":57:27)
#loc10 = loc("/usr/include/stdlib.h":687:1)
#loc11 = loc("/usr/include/stdlib.h":687:32)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":25:1)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":62:1)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":34:9)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":34:20)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":36:13)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":36:17)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":37:13)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":37:58)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":27:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":27:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":28:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":28:20)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":30:13)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":30:12)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":30:5)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":32:12)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":32:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":33:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":61:5)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":35:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":60:9)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":37:35)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":37:42)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":37:47)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":37:57)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":38:13)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":38:43)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":38:17)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":38:27)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":38:33)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":38:34)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":38:40)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":38:39)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":40:13)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":43:13)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":40:22)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":40:18)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":40:25)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":40:29)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":41:13)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":42:29)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":42:17)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":42:24)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":42:25)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":40:34)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":40:33)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":46:13)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":58:13)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":46:17)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":46:25)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":47:13)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":54:13)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":56:13)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":48:32)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":48:17)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":48:24)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":48:28)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":50:17)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":53:17)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":50:25)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":50:21)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":50:28)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":50:32)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":51:17)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":52:34)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":52:41)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":52:42)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":52:21)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":50:37)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":50:36)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":57:17)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":59:18)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":59:13)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":69:1)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":107:1)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":79:9)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":79:20)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":81:13)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":81:17)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":82:13)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":82:58)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":71:5)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":71:9)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":72:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":72:20)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":74:13)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":74:12)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":74:5)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":77:12)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":77:5)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":78:5)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":106:5)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":80:9)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":105:9)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":82:35)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":82:42)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":82:47)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":82:57)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":83:13)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":83:43)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":83:17)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":83:27)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":83:33)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":83:34)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":83:40)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":83:39)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":85:13)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":88:13)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":85:22)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":85:18)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":85:25)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":85:29)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":86:13)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":87:29)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":87:17)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":87:24)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":87:25)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":85:34)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":85:33)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":91:13)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":103:13)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":91:17)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":91:25)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":92:13)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":99:13)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":101:13)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":93:32)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":93:17)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":93:24)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":93:28)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":95:17)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":98:17)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":95:25)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":95:21)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":95:28)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":95:32)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":96:17)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":97:34)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":97:41)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":97:42)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":97:21)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":95:37)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":95:36)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":102:27)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":102:17)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":104:18)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":104:13)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":141:27)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":110:1)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":146:1)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":119:9)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":119:20)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":121:13)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":121:17)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":122:13)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":122:58)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":112:5)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":112:9)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":113:5)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":113:20)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":115:13)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":115:12)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":115:5)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":117:12)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":117:5)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":118:5)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":145:5)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":120:9)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":144:9)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":122:35)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":122:42)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":122:47)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":122:57)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":123:13)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":123:43)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":123:17)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":123:27)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":123:33)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":123:34)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":123:40)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":123:39)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":125:13)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":128:13)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":125:22)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":125:18)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":125:25)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":125:29)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":126:13)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":127:29)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":127:17)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":127:24)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":127:25)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":125:34)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":125:33)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":130:13)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":142:13)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":130:17)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":130:25)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":130:30)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":130:38)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":130:40)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":131:13)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":138:13)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":140:13)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":132:32)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":132:17)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":132:24)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":132:28)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":134:17)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":137:17)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":134:25)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":134:21)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":134:28)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":134:32)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":135:17)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":136:34)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":136:41)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":136:42)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":136:21)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":134:37)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":134:36)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":141:17)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":143:18)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":143:13)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":148:1)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":152:1)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":150:5)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_33.cpp":151:5)
#loc241 = loc(fused[#loc1, #loc2])
#loc242 = loc(fused[#loc3, #loc4])
#loc243 = loc(fused[#loc5, #loc6])
#loc244 = loc(fused[#loc7, #loc8])
#loc245 = loc(fused[#loc10, #loc11])
#loc246 = loc(fused[#loc12, #loc13])
#loc247 = loc(fused[#loc14, #loc15])
#loc248 = loc(fused[#loc16, #loc17])
#loc249 = loc(fused[#loc18, #loc19])
#loc250 = loc(fused[#loc20, #loc21])
#loc251 = loc(fused[#loc22, #loc23])
#loc252 = loc(fused[#loc26, #loc24])
#loc253 = loc(fused[#loc28, #loc27])
#loc254 = loc(fused[#loc29, #loc30])
#loc255 = loc(fused[#loc31, #loc32])
#loc256 = loc(fused[#loc35, #loc36])
#loc257 = loc(fused[#loc34, #loc36])
#loc258 = loc(fused[#loc33, #loc19])
#loc259 = loc(fused[#loc37, #loc38])
#loc260 = loc(fused[#loc39, #loc40])
#loc261 = loc(fused[#loc41, #loc38])
#loc262 = loc(fused[#loc45, #loc46])
#loc263 = loc(fused[#loc48, #loc47])
#loc264 = loc(fused[#loc49, #loc50])
#loc265 = loc(fused[#loc51, #loc46])
#loc266 = loc(fused[#loc53, #loc52])
#loc267 = loc(fused[#loc57, #loc56])
#loc268 = loc(fused[#loc58, #loc59])
#loc269 = loc(fused[#loc60, #loc61])
#loc270 = loc(fused[#loc62, #loc63, #loc64, #loc59])
#loc271 = loc(fused[#loc66, #loc65])
#loc272 = loc(fused[#loc69, #loc70])
#loc273 = loc(fused[#loc72, #loc71])
#loc274 = loc(fused[#loc73, #loc74])
#loc275 = loc(fused[#loc75, #loc70])
#loc276 = loc(fused[#loc81, #loc80])
#loc277 = loc(fused[#loc85, #loc86])
#loc278 = loc(fused[#loc87, #loc88])
#loc279 = loc(fused[#loc89, #loc90])
#loc280 = loc(fused[#loc91, #loc92])
#loc281 = loc(fused[#loc93, #loc94])
#loc282 = loc(fused[#loc95, #loc96])
#loc283 = loc(fused[#loc99, #loc97])
#loc284 = loc(fused[#loc101, #loc100])
#loc285 = loc(fused[#loc102, #loc103])
#loc286 = loc(fused[#loc104, #loc105])
#loc287 = loc(fused[#loc108, #loc109])
#loc288 = loc(fused[#loc107, #loc109])
#loc289 = loc(fused[#loc106, #loc92])
#loc290 = loc(fused[#loc110, #loc111])
#loc291 = loc(fused[#loc112, #loc113])
#loc292 = loc(fused[#loc114, #loc111])
#loc293 = loc(fused[#loc118, #loc119])
#loc294 = loc(fused[#loc121, #loc120])
#loc295 = loc(fused[#loc122, #loc123])
#loc296 = loc(fused[#loc124, #loc119])
#loc297 = loc(fused[#loc126, #loc125])
#loc298 = loc(fused[#loc130, #loc129])
#loc299 = loc(fused[#loc131, #loc132])
#loc300 = loc(fused[#loc133, #loc134])
#loc301 = loc(fused[#loc135, #loc136, #loc137, #loc132])
#loc302 = loc(fused[#loc139, #loc138])
#loc303 = loc(fused[#loc142, #loc143])
#loc304 = loc(fused[#loc145, #loc144])
#loc305 = loc(fused[#loc146, #loc147])
#loc306 = loc(fused[#loc148, #loc143])
#loc307 = loc(fused[#loc154, #loc153])
#loc308 = loc(fused[#loc160, #loc161])
#loc309 = loc(fused[#loc162, #loc163])
#loc310 = loc(fused[#loc164, #loc165])
#loc311 = loc(fused[#loc166, #loc167])
#loc312 = loc(fused[#loc168, #loc169])
#loc313 = loc(fused[#loc170, #loc171])
#loc314 = loc(fused[#loc174, #loc172])
#loc315 = loc(fused[#loc176, #loc175])
#loc316 = loc(fused[#loc177, #loc178])
#loc317 = loc(fused[#loc179, #loc180])
#loc318 = loc(fused[#loc183, #loc184])
#loc319 = loc(fused[#loc182, #loc184])
#loc320 = loc(fused[#loc181, #loc167])
#loc321 = loc(fused[#loc185, #loc186])
#loc322 = loc(fused[#loc187, #loc188])
#loc323 = loc(fused[#loc189, #loc186])
#loc324 = loc(fused[#loc193, #loc194])
#loc325 = loc(fused[#loc196, #loc195])
#loc326 = loc(fused[#loc197, #loc198])
#loc327 = loc(fused[#loc199, #loc194])
#loc328 = loc(fused[#loc201, #loc200])
#loc329 = loc(fused[#loc205, #loc204])
#loc330 = loc(fused[#loc206, #loc207])
#loc331 = loc(fused[#loc208, #loc209])
#loc332 = loc(fused[#loc211, #loc213])
#loc333 = loc(fused[#loc214, #loc215, #loc216, #loc207])
#loc334 = loc(fused[#loc218, #loc217])
#loc335 = loc(fused[#loc221, #loc222])
#loc336 = loc(fused[#loc224, #loc223])
#loc337 = loc(fused[#loc225, #loc226])
#loc338 = loc(fused[#loc227, #loc222])
#loc339 = loc(fused[#loc233, #loc232])
#loc340 = loc(fused[#loc237, #loc238])
