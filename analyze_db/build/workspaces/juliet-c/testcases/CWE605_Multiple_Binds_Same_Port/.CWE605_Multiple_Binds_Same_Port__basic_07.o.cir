!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE605_Multiple_Binds_Same_Port/CWE605_Multiple_Binds_Same_Port__basic_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc510)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc511)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc512)
  cir.func private @setsockopt(!s32i, !s32i, !s32i, !cir.ptr<!void>, !u32i) -> !s32i extra(#fn_attr) loc(#loc513)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc514)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc515)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc516)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc517)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc518)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc519)
  cir.func private @close(!s32i) -> !s32i loc(#loc520)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc521)
  cir.func no_proto @CWE605_Multiple_Binds_Same_Port__basic_07_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc510)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc29)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc30)
      %3 = cir.cmp(eq, %1, %2) : !s32i, !cir.bool loc(#loc524)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data"] {alignment = 16 : i64} loc(#loc527)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc528)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc529)
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc530)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc531)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc532)
          %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc533)
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["bOptVal", init] {alignment = 4 : i64} loc(#loc534)
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["bOptLen", init] {alignment = 4 : i64} loc(#loc535)
          %13 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc527)
          cir.store %13, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc527)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc43)
          %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc43)
          cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc531)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc45)
          %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc45)
          cir.store %17, %9 : !s32i, !cir.ptr<!s32i> loc(#loc532)
          %18 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc52)
          %19 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc53)
          %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc52)
          cir.store %20, %10 : !u64i, !cir.ptr<!u64i> loc(#loc533)
          %21 = cir.const #cir.int<1> : !s32i loc(#loc49)
          cir.store %21, %11 : !s32i, !cir.ptr<!s32i> loc(#loc534)
          %22 = cir.const #cir.int<4> : !u64i loc(#loc536)
          %23 = cir.cast(integral, %22 : !u64i), !s32i loc(#loc536)
          cir.store %23, %12 : !s32i, !cir.ptr<!s32i> loc(#loc535)
          cir.scope {
            cir.do {
              cir.scope {
                %25 = cir.const #cir.int<2> : !s32i loc(#loc59)
                %26 = cir.const #cir.int<1> : !s32i loc(#loc60)
                %27 = cir.const #cir.int<6> : !s32i loc(#loc61)
                %28 = cir.call @socket(%25, %26, %27) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc62)
                cir.store %28, %8 : !s32i, !cir.ptr<!s32i> loc(#loc539)
                cir.scope {
                  %77 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc67)
                  %78 = cir.const #cir.int<1> : !s32i loc(#loc68)
                  %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc68)
                  %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc541)
                  cir.if %80 {
                    cir.break loc(#loc70)
                  } loc(#loc542)
                } loc(#loc540)
                cir.scope {
                  %77 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc73)
                  %78 = cir.const #cir.int<1> : !s32i loc(#loc74)
                  %79 = cir.const #cir.int<2> : !s32i loc(#loc75)
                  %80 = cir.cast(bitcast, %11 : !cir.ptr<!s32i>), !cir.ptr<!s8i> loc(#loc544)
                  %81 = cir.cast(bitcast, %80 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc545)
                  %82 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc79)
                  %83 = cir.cast(integral, %82 : !s32i), !u32i loc(#loc79)
                  %84 = cir.call @setsockopt(%77, %78, %79, %81, %83) : (!s32i, !s32i, !s32i, !cir.ptr<!void>, !u32i) -> !s32i extra(#fn_attr) loc(#loc80)
                  %85 = cir.const #cir.int<0> : !s32i loc(#loc81)
                  %86 = cir.cmp(ne, %84, %85) : !s32i, !cir.bool loc(#loc546)
                  cir.if %86 {
                    cir.break loc(#loc83)
                  } loc(#loc547)
                } loc(#loc543)
                %29 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc548)
                %30 = cir.const #cir.int<0> : !s32i loc(#loc86)
                %31 = cir.const #cir.int<16> : !u64i loc(#loc549)
                cir.libc.memset %31 bytes from %29 set to %30 : !cir.ptr<!void>, !s32i, !u64i loc(#loc550)
                %32 = cir.const #cir.int<2> : !s32i loc(#loc91)
                %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc91)
                %34 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc92)
                cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc551)
                %35 = cir.const #cir.int<0> : !s32i loc(#loc94)
                %36 = cir.cast(integral, %35 : !s32i), !u32i loc(#loc94)
                %37 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc95)
                %38 = cir.get_member %37[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc96)
                cir.store %36, %38 : !u32i, !cir.ptr<!u32i> loc(#loc552)
                %39 = cir.const #cir.int<27015> : !s32i loc(#loc98)
                %40 = cir.cast(integral, %39 : !s32i), !u16i loc(#loc98)
                %41 = cir.call @htons(%40) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc99)
                %42 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc100)
                cir.store %41, %42 : !u16i, !cir.ptr<!u16i> loc(#loc553)
                cir.scope {
                  %77 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc105)
                  %78 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc555)
                  %79 = cir.const #cir.int<16> : !u64i loc(#loc556)
                  %80 = cir.cast(integral, %79 : !u64i), !u32i loc(#loc556)
                  %81 = cir.call @bind(%77, %78, %80) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc110)
                  %82 = cir.const #cir.int<1> : !s32i loc(#loc111)
                  %83 = cir.unary(minus, %82) nsw : !s32i, !s32i loc(#loc111)
                  %84 = cir.cmp(eq, %81, %83) : !s32i, !cir.bool loc(#loc557)
                  cir.if %84 {
                    cir.break loc(#loc113)
                  } loc(#loc558)
                } loc(#loc554)
                cir.scope {
                  %77 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc116)
                  %78 = cir.const #cir.int<5> : !s32i loc(#loc117)
                  %79 = cir.call @listen(%77, %78) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc118)
                  %80 = cir.const #cir.int<1> : !s32i loc(#loc119)
                  %81 = cir.unary(minus, %80) nsw : !s32i, !s32i loc(#loc119)
                  %82 = cir.cmp(eq, %79, %81) : !s32i, !cir.bool loc(#loc560)
                  cir.if %82 {
                    cir.break loc(#loc121)
                  } loc(#loc561)
                } loc(#loc559)
                %43 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc122)
                %44 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc123)
                %45 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc124)
                %46 = cir.call @accept(%43, %44, %45) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc125)
                cir.store %46, %9 : !s32i, !cir.ptr<!s32i> loc(#loc562)
                cir.scope {
                  %77 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc130)
                  %78 = cir.const #cir.int<1> : !s32i loc(#loc131)
                  %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc131)
                  %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc564)
                  cir.if %80 {
                    cir.break loc(#loc133)
                  } loc(#loc565)
                } loc(#loc563)
                %47 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc134)
                %48 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc135)
                %49 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc136)
                %50 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %49 : !u64i), !cir.ptr<!s8i> loc(#loc137)
                %51 = cir.cast(bitcast, %50 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc566)
                %52 = cir.const #cir.int<100> : !s32i loc(#loc138)
                %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc138)
                %54 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc139)
                %55 = cir.binop(sub, %53, %54) : !u64i loc(#loc567)
                %56 = cir.const #cir.int<1> : !s32i loc(#loc140)
                %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc140)
                %58 = cir.binop(sub, %55, %57) : !u64i loc(#loc568)
                %59 = cir.cast(integral, %58 : !u64i), !s32i loc(#loc568)
                %60 = cir.cast(integral, %59 : !s32i), !u64i loc(#loc568)
                %61 = cir.const #cir.int<0> : !s32i loc(#loc141)
                %62 = cir.call @recv(%47, %51, %60, %61) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc142)
                %63 = cir.cast(integral, %62 : !s64i), !s32i loc(#loc142)
                cir.store %63, %5 : !s32i, !cir.ptr<!s32i> loc(#loc569)
                cir.scope {
                  %77 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc147)
                  %78 = cir.const #cir.int<1> : !s32i loc(#loc148)
                  %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc148)
                  %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc571)
                  %81 = cir.ternary(%80, true {
                    %82 = cir.const #true loc(#loc149)
                    cir.yield %82 : !cir.bool loc(#loc149)
                  }, false {
                    %82 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc150)
                    %83 = cir.const #cir.int<0> : !s32i loc(#loc151)
                    %84 = cir.cmp(eq, %82, %83) : !s32i, !cir.bool loc(#loc572)
                    %85 = cir.ternary(%84, true {
                      %86 = cir.const #true loc(#loc149)
                      cir.yield %86 : !cir.bool loc(#loc149)
                    }, false {
                      %86 = cir.const #false loc(#loc149)
                      cir.yield %86 : !cir.bool loc(#loc149)
                    }) : (!cir.bool) -> !cir.bool loc(#loc149)
                    cir.yield %85 : !cir.bool loc(#loc149)
                  }) : (!cir.bool) -> !cir.bool loc(#loc149)
                  cir.if %81 {
                    cir.break loc(#loc153)
                  } loc(#loc573)
                } loc(#loc570)
                %64 = cir.const #cir.int<0> : !s32i loc(#loc154)
                %65 = cir.cast(integral, %64 : !s32i), !s8i loc(#loc154)
                %66 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc155)
                %67 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc156)
                %68 = cir.ptr_stride(%67 : !cir.ptr<!s8i>, %66 : !s32i), !cir.ptr<!s8i> loc(#loc156)
                cir.store %65, %68 : !s8i, !cir.ptr<!s8i> loc(#loc574)
                %69 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc157)
                %70 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc158)
                %71 = cir.const #cir.int<13> : !s32i loc(#loc159)
                %72 = cir.call @strchr(%70, %71) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc157)
                cir.store %72, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc575)
                cir.scope {
                  %77 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
                  %78 = cir.cast(ptr_to_bool, %77 : !cir.ptr<!s8i>), !cir.bool loc(#loc164)
                  cir.if %78 {
                    %79 = cir.const #cir.int<0> : !s32i loc(#loc166)
                    %80 = cir.cast(integral, %79 : !s32i), !s8i loc(#loc166)
                    %81 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
                    cir.store %80, %81 : !s8i, !cir.ptr<!s8i> loc(#loc578)
                  } loc(#loc577)
                } loc(#loc576)
                %73 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc169)
                %74 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc170)
                %75 = cir.const #cir.int<10> : !s32i loc(#loc171)
                %76 = cir.call @strchr(%74, %75) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc169)
                cir.store %76, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc579)
                cir.scope {
                  %77 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
                  %78 = cir.cast(ptr_to_bool, %77 : !cir.ptr<!s8i>), !cir.bool loc(#loc176)
                  cir.if %78 {
                    %79 = cir.const #cir.int<0> : !s32i loc(#loc178)
                    %80 = cir.cast(integral, %79 : !s32i), !s8i loc(#loc178)
                    %81 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
                    cir.store %80, %81 : !s8i, !cir.ptr<!s8i> loc(#loc582)
                  } loc(#loc581)
                } loc(#loc580)
              } loc(#loc538)
              cir.yield loc(#loc56)
            } while {
              %25 = cir.const #cir.int<0> : !s32i loc(#loc181)
              %26 = cir.cast(int_to_bool, %25 : !s32i), !cir.bool loc(#loc181)
              cir.condition(%26) loc(#loc181)
            } loc(#loc537)
          } loc(#loc537)
          cir.scope {
            %25 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc184)
            %26 = cir.const #cir.int<1> : !s32i loc(#loc185)
            %27 = cir.unary(minus, %26) nsw : !s32i, !s32i loc(#loc185)
            %28 = cir.cmp(ne, %25, %27) : !s32i, !cir.bool loc(#loc584)
            cir.if %28 {
              %29 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc187)
              %30 = cir.call @close(%29) : (!s32i) -> !s32i loc(#loc188)
            } loc(#loc585)
          } loc(#loc583)
          cir.scope {
            %25 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc191)
            %26 = cir.const #cir.int<1> : !s32i loc(#loc192)
            %27 = cir.unary(minus, %26) nsw : !s32i, !s32i loc(#loc192)
            %28 = cir.cmp(ne, %25, %27) : !s32i, !cir.bool loc(#loc587)
            cir.if %28 {
              %29 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc194)
              %30 = cir.call @close(%29) : (!s32i) -> !s32i loc(#loc195)
            } loc(#loc588)
          } loc(#loc586)
          %24 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc196)
          cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc197)
        } loc(#loc526)
      } loc(#loc525)
    } loc(#loc523)
    cir.return loc(#loc26)
  } loc(#loc522)
  cir.func no_proto @CWE605_Multiple_Binds_Same_Port__basic_07_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc590)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc200)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc591)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc202)
    cir.return loc(#loc199)
  } loc(#loc589)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc204)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc510)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc209)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc210)
      %3 = cir.cmp(ne, %1, %2) : !s32i, !cir.bool loc(#loc594)
      cir.if %3 {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc204)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc204)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc214)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data"] {alignment = 16 : i64} loc(#loc597)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc598)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc599)
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc600)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc601)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc602)
          %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc603)
          %11 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc597)
          cir.store %11, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc597)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc226)
          %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc226)
          cir.store %13, %8 : !s32i, !cir.ptr<!s32i> loc(#loc601)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc228)
          %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc228)
          cir.store %15, %9 : !s32i, !cir.ptr<!s32i> loc(#loc602)
          %16 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc231)
          %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc232)
          %18 = cir.call @strlen(%17) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc231)
          cir.store %18, %10 : !u64i, !cir.ptr<!u64i> loc(#loc603)
          cir.scope {
            cir.do {
              cir.scope {
                %20 = cir.const #cir.int<2> : !s32i loc(#loc237)
                %21 = cir.const #cir.int<1> : !s32i loc(#loc238)
                %22 = cir.const #cir.int<6> : !s32i loc(#loc239)
                %23 = cir.call @socket(%20, %21, %22) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc240)
                cir.store %23, %8 : !s32i, !cir.ptr<!s32i> loc(#loc606)
                cir.scope {
                  %72 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc245)
                  %73 = cir.const #cir.int<1> : !s32i loc(#loc246)
                  %74 = cir.unary(minus, %73) nsw : !s32i, !s32i loc(#loc246)
                  %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc608)
                  cir.if %75 {
                    cir.break loc(#loc248)
                  } loc(#loc609)
                } loc(#loc607)
                %24 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc610)
                %25 = cir.const #cir.int<0> : !s32i loc(#loc251)
                %26 = cir.const #cir.int<16> : !u64i loc(#loc611)
                cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc612)
                %27 = cir.const #cir.int<2> : !s32i loc(#loc256)
                %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc256)
                %29 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc92)
                cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc613)
                %30 = cir.const #cir.int<0> : !s32i loc(#loc258)
                %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc258)
                %32 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc95)
                %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc96)
                cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc614)
                %34 = cir.const #cir.int<27015> : !s32i loc(#loc260)
                %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc260)
                %36 = cir.call @htons(%35) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc261)
                %37 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc100)
                cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc615)
                cir.scope {
                  %72 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc266)
                  %73 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc617)
                  %74 = cir.const #cir.int<16> : !u64i loc(#loc618)
                  %75 = cir.cast(integral, %74 : !u64i), !u32i loc(#loc618)
                  %76 = cir.call @bind(%72, %73, %75) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc271)
                  %77 = cir.const #cir.int<1> : !s32i loc(#loc272)
                  %78 = cir.unary(minus, %77) nsw : !s32i, !s32i loc(#loc272)
                  %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc619)
                  cir.if %79 {
                    cir.break loc(#loc274)
                  } loc(#loc620)
                } loc(#loc616)
                cir.scope {
                  %72 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc277)
                  %73 = cir.const #cir.int<5> : !s32i loc(#loc278)
                  %74 = cir.call @listen(%72, %73) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc279)
                  %75 = cir.const #cir.int<1> : !s32i loc(#loc280)
                  %76 = cir.unary(minus, %75) nsw : !s32i, !s32i loc(#loc280)
                  %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc622)
                  cir.if %77 {
                    cir.break loc(#loc282)
                  } loc(#loc623)
                } loc(#loc621)
                %38 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc283)
                %39 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc284)
                %40 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc285)
                %41 = cir.call @accept(%38, %39, %40) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc286)
                cir.store %41, %9 : !s32i, !cir.ptr<!s32i> loc(#loc624)
                cir.scope {
                  %72 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc291)
                  %73 = cir.const #cir.int<1> : !s32i loc(#loc292)
                  %74 = cir.unary(minus, %73) nsw : !s32i, !s32i loc(#loc292)
                  %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc626)
                  cir.if %75 {
                    cir.break loc(#loc294)
                  } loc(#loc627)
                } loc(#loc625)
                %42 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc295)
                %43 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc296)
                %44 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc297)
                %45 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc298)
                %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc628)
                %47 = cir.const #cir.int<100> : !s32i loc(#loc299)
                %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc299)
                %49 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc300)
                %50 = cir.binop(sub, %48, %49) : !u64i loc(#loc629)
                %51 = cir.const #cir.int<1> : !s32i loc(#loc301)
                %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc301)
                %53 = cir.binop(sub, %50, %52) : !u64i loc(#loc630)
                %54 = cir.cast(integral, %53 : !u64i), !s32i loc(#loc630)
                %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc630)
                %56 = cir.const #cir.int<0> : !s32i loc(#loc302)
                %57 = cir.call @recv(%42, %46, %55, %56) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc303)
                %58 = cir.cast(integral, %57 : !s64i), !s32i loc(#loc303)
                cir.store %58, %5 : !s32i, !cir.ptr<!s32i> loc(#loc631)
                cir.scope {
                  %72 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc308)
                  %73 = cir.const #cir.int<1> : !s32i loc(#loc309)
                  %74 = cir.unary(minus, %73) nsw : !s32i, !s32i loc(#loc309)
                  %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc633)
                  %76 = cir.ternary(%75, true {
                    %77 = cir.const #true loc(#loc310)
                    cir.yield %77 : !cir.bool loc(#loc310)
                  }, false {
                    %77 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc311)
                    %78 = cir.const #cir.int<0> : !s32i loc(#loc312)
                    %79 = cir.cmp(eq, %77, %78) : !s32i, !cir.bool loc(#loc634)
                    %80 = cir.ternary(%79, true {
                      %81 = cir.const #true loc(#loc310)
                      cir.yield %81 : !cir.bool loc(#loc310)
                    }, false {
                      %81 = cir.const #false loc(#loc310)
                      cir.yield %81 : !cir.bool loc(#loc310)
                    }) : (!cir.bool) -> !cir.bool loc(#loc310)
                    cir.yield %80 : !cir.bool loc(#loc310)
                  }) : (!cir.bool) -> !cir.bool loc(#loc310)
                  cir.if %76 {
                    cir.break loc(#loc314)
                  } loc(#loc635)
                } loc(#loc632)
                %59 = cir.const #cir.int<0> : !s32i loc(#loc315)
                %60 = cir.cast(integral, %59 : !s32i), !s8i loc(#loc315)
                %61 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc316)
                %62 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc317)
                %63 = cir.ptr_stride(%62 : !cir.ptr<!s8i>, %61 : !s32i), !cir.ptr<!s8i> loc(#loc317)
                cir.store %60, %63 : !s8i, !cir.ptr<!s8i> loc(#loc636)
                %64 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc318)
                %65 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc319)
                %66 = cir.const #cir.int<13> : !s32i loc(#loc320)
                %67 = cir.call @strchr(%65, %66) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc318)
                cir.store %67, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc637)
                cir.scope {
                  %72 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc325)
                  %73 = cir.cast(ptr_to_bool, %72 : !cir.ptr<!s8i>), !cir.bool loc(#loc325)
                  cir.if %73 {
                    %74 = cir.const #cir.int<0> : !s32i loc(#loc327)
                    %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc327)
                    %76 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc328)
                    cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc640)
                  } loc(#loc639)
                } loc(#loc638)
                %68 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc330)
                %69 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc331)
                %70 = cir.const #cir.int<10> : !s32i loc(#loc332)
                %71 = cir.call @strchr(%69, %70) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc330)
                cir.store %71, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc641)
                cir.scope {
                  %72 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc337)
                  %73 = cir.cast(ptr_to_bool, %72 : !cir.ptr<!s8i>), !cir.bool loc(#loc337)
                  cir.if %73 {
                    %74 = cir.const #cir.int<0> : !s32i loc(#loc339)
                    %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc339)
                    %76 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc340)
                    cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc644)
                  } loc(#loc643)
                } loc(#loc642)
              } loc(#loc605)
              cir.yield loc(#loc234)
            } while {
              %20 = cir.const #cir.int<0> : !s32i loc(#loc342)
              %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc342)
              cir.condition(%21) loc(#loc342)
            } loc(#loc604)
          } loc(#loc604)
          cir.scope {
            %20 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc345)
            %21 = cir.const #cir.int<1> : !s32i loc(#loc346)
            %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc346)
            %23 = cir.cmp(ne, %20, %22) : !s32i, !cir.bool loc(#loc646)
            cir.if %23 {
              %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc348)
              %25 = cir.call @close(%24) : (!s32i) -> !s32i loc(#loc349)
            } loc(#loc647)
          } loc(#loc645)
          cir.scope {
            %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc352)
            %21 = cir.const #cir.int<1> : !s32i loc(#loc353)
            %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc353)
            %23 = cir.cmp(ne, %20, %22) : !s32i, !cir.bool loc(#loc649)
            cir.if %23 {
              %24 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc355)
              %25 = cir.call @close(%24) : (!s32i) -> !s32i loc(#loc356)
            } loc(#loc650)
          } loc(#loc648)
          %19 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc357)
          cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc358)
        } loc(#loc596)
      } loc(#loc595)
    } loc(#loc593)
    cir.return loc(#loc206)
  } loc(#loc592)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc510)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc363)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc364)
      %3 = cir.cmp(eq, %1, %2) : !s32i, !cir.bool loc(#loc653)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data"] {alignment = 16 : i64} loc(#loc656)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc657)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc658)
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc659)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc660)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc661)
          %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc662)
          %11 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc656)
          cir.store %11, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc656)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc377)
          %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc377)
          cir.store %13, %8 : !s32i, !cir.ptr<!s32i> loc(#loc660)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc379)
          %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc379)
          cir.store %15, %9 : !s32i, !cir.ptr<!s32i> loc(#loc661)
          %16 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc382)
          %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc383)
          %18 = cir.call @strlen(%17) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc382)
          cir.store %18, %10 : !u64i, !cir.ptr<!u64i> loc(#loc662)
          cir.scope {
            cir.do {
              cir.scope {
                %20 = cir.const #cir.int<2> : !s32i loc(#loc388)
                %21 = cir.const #cir.int<1> : !s32i loc(#loc389)
                %22 = cir.const #cir.int<6> : !s32i loc(#loc390)
                %23 = cir.call @socket(%20, %21, %22) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc391)
                cir.store %23, %8 : !s32i, !cir.ptr<!s32i> loc(#loc665)
                cir.scope {
                  %72 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc396)
                  %73 = cir.const #cir.int<1> : !s32i loc(#loc397)
                  %74 = cir.unary(minus, %73) nsw : !s32i, !s32i loc(#loc397)
                  %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc667)
                  cir.if %75 {
                    cir.break loc(#loc399)
                  } loc(#loc668)
                } loc(#loc666)
                %24 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc669)
                %25 = cir.const #cir.int<0> : !s32i loc(#loc402)
                %26 = cir.const #cir.int<16> : !u64i loc(#loc670)
                cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc671)
                %27 = cir.const #cir.int<2> : !s32i loc(#loc407)
                %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc407)
                %29 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc92)
                cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc672)
                %30 = cir.const #cir.int<0> : !s32i loc(#loc409)
                %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc409)
                %32 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc95)
                %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc96)
                cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc673)
                %34 = cir.const #cir.int<27015> : !s32i loc(#loc411)
                %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc411)
                %36 = cir.call @htons(%35) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc412)
                %37 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc100)
                cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc674)
                cir.scope {
                  %72 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc417)
                  %73 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc676)
                  %74 = cir.const #cir.int<16> : !u64i loc(#loc677)
                  %75 = cir.cast(integral, %74 : !u64i), !u32i loc(#loc677)
                  %76 = cir.call @bind(%72, %73, %75) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc422)
                  %77 = cir.const #cir.int<1> : !s32i loc(#loc423)
                  %78 = cir.unary(minus, %77) nsw : !s32i, !s32i loc(#loc423)
                  %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc678)
                  cir.if %79 {
                    cir.break loc(#loc425)
                  } loc(#loc679)
                } loc(#loc675)
                cir.scope {
                  %72 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc428)
                  %73 = cir.const #cir.int<5> : !s32i loc(#loc429)
                  %74 = cir.call @listen(%72, %73) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc430)
                  %75 = cir.const #cir.int<1> : !s32i loc(#loc431)
                  %76 = cir.unary(minus, %75) nsw : !s32i, !s32i loc(#loc431)
                  %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc681)
                  cir.if %77 {
                    cir.break loc(#loc433)
                  } loc(#loc682)
                } loc(#loc680)
                %38 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc434)
                %39 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc435)
                %40 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc436)
                %41 = cir.call @accept(%38, %39, %40) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc437)
                cir.store %41, %9 : !s32i, !cir.ptr<!s32i> loc(#loc683)
                cir.scope {
                  %72 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc442)
                  %73 = cir.const #cir.int<1> : !s32i loc(#loc443)
                  %74 = cir.unary(minus, %73) nsw : !s32i, !s32i loc(#loc443)
                  %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc685)
                  cir.if %75 {
                    cir.break loc(#loc445)
                  } loc(#loc686)
                } loc(#loc684)
                %42 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc446)
                %43 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc447)
                %44 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc448)
                %45 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc449)
                %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc687)
                %47 = cir.const #cir.int<100> : !s32i loc(#loc450)
                %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc450)
                %49 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc451)
                %50 = cir.binop(sub, %48, %49) : !u64i loc(#loc688)
                %51 = cir.const #cir.int<1> : !s32i loc(#loc452)
                %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc452)
                %53 = cir.binop(sub, %50, %52) : !u64i loc(#loc689)
                %54 = cir.cast(integral, %53 : !u64i), !s32i loc(#loc689)
                %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc689)
                %56 = cir.const #cir.int<0> : !s32i loc(#loc453)
                %57 = cir.call @recv(%42, %46, %55, %56) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc454)
                %58 = cir.cast(integral, %57 : !s64i), !s32i loc(#loc454)
                cir.store %58, %5 : !s32i, !cir.ptr<!s32i> loc(#loc690)
                cir.scope {
                  %72 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc459)
                  %73 = cir.const #cir.int<1> : !s32i loc(#loc460)
                  %74 = cir.unary(minus, %73) nsw : !s32i, !s32i loc(#loc460)
                  %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc692)
                  %76 = cir.ternary(%75, true {
                    %77 = cir.const #true loc(#loc461)
                    cir.yield %77 : !cir.bool loc(#loc461)
                  }, false {
                    %77 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc462)
                    %78 = cir.const #cir.int<0> : !s32i loc(#loc463)
                    %79 = cir.cmp(eq, %77, %78) : !s32i, !cir.bool loc(#loc693)
                    %80 = cir.ternary(%79, true {
                      %81 = cir.const #true loc(#loc461)
                      cir.yield %81 : !cir.bool loc(#loc461)
                    }, false {
                      %81 = cir.const #false loc(#loc461)
                      cir.yield %81 : !cir.bool loc(#loc461)
                    }) : (!cir.bool) -> !cir.bool loc(#loc461)
                    cir.yield %80 : !cir.bool loc(#loc461)
                  }) : (!cir.bool) -> !cir.bool loc(#loc461)
                  cir.if %76 {
                    cir.break loc(#loc465)
                  } loc(#loc694)
                } loc(#loc691)
                %59 = cir.const #cir.int<0> : !s32i loc(#loc466)
                %60 = cir.cast(integral, %59 : !s32i), !s8i loc(#loc466)
                %61 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc467)
                %62 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc468)
                %63 = cir.ptr_stride(%62 : !cir.ptr<!s8i>, %61 : !s32i), !cir.ptr<!s8i> loc(#loc468)
                cir.store %60, %63 : !s8i, !cir.ptr<!s8i> loc(#loc695)
                %64 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc469)
                %65 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc470)
                %66 = cir.const #cir.int<13> : !s32i loc(#loc471)
                %67 = cir.call @strchr(%65, %66) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc469)
                cir.store %67, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc696)
                cir.scope {
                  %72 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc476)
                  %73 = cir.cast(ptr_to_bool, %72 : !cir.ptr<!s8i>), !cir.bool loc(#loc476)
                  cir.if %73 {
                    %74 = cir.const #cir.int<0> : !s32i loc(#loc478)
                    %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc478)
                    %76 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc479)
                    cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc699)
                  } loc(#loc698)
                } loc(#loc697)
                %68 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc481)
                %69 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc482)
                %70 = cir.const #cir.int<10> : !s32i loc(#loc483)
                %71 = cir.call @strchr(%69, %70) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc481)
                cir.store %71, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc700)
                cir.scope {
                  %72 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc488)
                  %73 = cir.cast(ptr_to_bool, %72 : !cir.ptr<!s8i>), !cir.bool loc(#loc488)
                  cir.if %73 {
                    %74 = cir.const #cir.int<0> : !s32i loc(#loc490)
                    %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc490)
                    %76 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc491)
                    cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc703)
                  } loc(#loc702)
                } loc(#loc701)
              } loc(#loc664)
              cir.yield loc(#loc385)
            } while {
              %20 = cir.const #cir.int<0> : !s32i loc(#loc493)
              %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc493)
              cir.condition(%21) loc(#loc493)
            } loc(#loc663)
          } loc(#loc663)
          cir.scope {
            %20 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc496)
            %21 = cir.const #cir.int<1> : !s32i loc(#loc497)
            %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc497)
            %23 = cir.cmp(ne, %20, %22) : !s32i, !cir.bool loc(#loc705)
            cir.if %23 {
              %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc499)
              %25 = cir.call @close(%24) : (!s32i) -> !s32i loc(#loc500)
            } loc(#loc706)
          } loc(#loc704)
          cir.scope {
            %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc503)
            %21 = cir.const #cir.int<1> : !s32i loc(#loc504)
            %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc504)
            %23 = cir.cmp(ne, %20, %22) : !s32i, !cir.bool loc(#loc708)
            cir.if %23 {
              %24 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc506)
              %25 = cir.call @close(%24) : (!s32i) -> !s32i loc(#loc507)
            } loc(#loc709)
          } loc(#loc707)
          %19 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc508)
          cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc509)
        } loc(#loc655)
      } loc(#loc654)
    } loc(#loc652)
    cir.return loc(#loc360)
  } loc(#loc651)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE605_Multiple_Binds_Same_Port/CWE605_Multiple_Binds_Same_Port__basic_07.c":0:0)
#loc1 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":45:1)
#loc2 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":45:25)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":277:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":278:52)
#loc9 = loc("/usr/include/netinet/in.h":402:1)
#loc10 = loc("/usr/include/netinet/in.h":403:40)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc15 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc17 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc18 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc19 = loc("/usr/include/string.h":246:1)
#loc20 = loc("/usr/include/string.h":247:33)
#loc21 = loc("/usr/include/unistd.h":358:1)
#loc22 = loc("/usr/include/unistd.h":358:27)
#loc23 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc24 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc25 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":49:1)
#loc26 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":146:1)
#loc27 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":51:5)
#loc28 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":145:5)
#loc29 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":51:8)
#loc30 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":51:20)
#loc31 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":52:5)
#loc32 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":53:9)
#loc33 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":144:9)
#loc34 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":54:13)
#loc35 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":54:30)
#loc36 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":59:13)
#loc37 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":59:17)
#loc38 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":60:13)
#loc39 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":60:32)
#loc40 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":61:13)
#loc41 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":61:19)
#loc42 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":62:13)
#loc43 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":62:35)
#loc44 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":63:13)
#loc45 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":63:35)
#loc46 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":64:13)
#loc47 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":64:41)
#loc48 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":69:13)
#loc49 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":69:27)
#loc50 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":70:13)
#loc51 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":70:37)
#loc52 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":64:30)
#loc53 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":64:37)
#loc54 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":70:27)
#loc55 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":72:13)
#loc56 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":128:21)
#loc57 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":73:13)
#loc58 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":127:13)
#loc59 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":81:39)
#loc60 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":81:48)
#loc61 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":81:61)
#loc62 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":81:32)
#loc63 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":81:17)
#loc64 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":81:72)
#loc65 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":82:17)
#loc66 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":85:17)
#loc67 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":82:21)
#loc68 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":82:37)
#loc69 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":83:17)
#loc70 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":84:21)
#loc71 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":87:17)
#loc72 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":90:17)
#loc73 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":87:32)
#loc74 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":87:46)
#loc75 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":87:58)
#loc76 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":87:79)
#loc77 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":87:80)
#loc78 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":87:72)
#loc79 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":87:89)
#loc80 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":87:21)
#loc81 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":87:101)
#loc82 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":88:17)
#loc83 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":89:21)
#loc84 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":91:24)
#loc85 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":91:25)
#loc86 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":91:34)
#loc87 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":91:37)
#loc88 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":91:51)
#loc89 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":91:17)
#loc90 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":91:52)
#loc91 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":92:38)
#loc92 = loc("/usr/include/netinet/in.h":249:5)
#loc93 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":92:17)
#loc94 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":93:43)
#loc95 = loc("/usr/include/netinet/in.h":251:20)
#loc96 = loc("/usr/include/netinet/in.h":33:15)
#loc97 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":93:17)
#loc98 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":94:42)
#loc99 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":94:36)
#loc100 = loc("/usr/include/netinet/in.h":250:15)
#loc101 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":94:17)
#loc102 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":94:50)
#loc103 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":95:17)
#loc104 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":98:17)
#loc105 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":95:26)
#loc106 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":95:58)
#loc107 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":95:59)
#loc108 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":95:68)
#loc109 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":95:82)
#loc110 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":95:21)
#loc111 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":95:88)
#loc112 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":96:17)
#loc113 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":97:21)
#loc114 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":99:17)
#loc115 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":102:17)
#loc116 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":99:28)
#loc117 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":99:42)
#loc118 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":99:21)
#loc119 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":99:61)
#loc120 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":100:17)
#loc121 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":101:21)
#loc122 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":103:39)
#loc123 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":103:53)
#loc124 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":103:59)
#loc125 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":103:32)
#loc126 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":103:17)
#loc127 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":103:63)
#loc128 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":104:17)
#loc129 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":107:17)
#loc130 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":104:21)
#loc131 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":104:37)
#loc132 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":105:17)
#loc133 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":106:21)
#loc134 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":109:35)
#loc135 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":109:49)
#loc136 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":109:54)
#loc137 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":109:53)
#loc138 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":109:69)
#loc139 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":109:73)
#loc140 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":109:81)
#loc141 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":109:85)
#loc142 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":109:30)
#loc143 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":109:17)
#loc144 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":109:86)
#loc145 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":110:17)
#loc146 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":113:17)
#loc147 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":110:21)
#loc148 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":110:35)
#loc149 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":110:48)
#loc150 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":110:51)
#loc151 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":110:65)
#loc152 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":111:17)
#loc153 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":112:21)
#loc154 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":115:36)
#loc155 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":115:22)
#loc156 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":115:17)
#loc157 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":117:27)
#loc158 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":117:34)
#loc159 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":117:40)
#loc160 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":117:17)
#loc161 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":117:44)
#loc162 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":118:17)
#loc163 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":121:17)
#loc164 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":118:21)
#loc165 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":119:17)
#loc166 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":120:32)
#loc167 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":120:22)
#loc168 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":120:21)
#loc169 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":122:27)
#loc170 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":122:34)
#loc171 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":122:40)
#loc172 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":122:17)
#loc173 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":122:44)
#loc174 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":123:17)
#loc175 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":126:17)
#loc176 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":123:21)
#loc177 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":124:17)
#loc178 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":125:32)
#loc179 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":125:22)
#loc180 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":125:21)
#loc181 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":128:20)
#loc182 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":129:13)
#loc183 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":132:13)
#loc184 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":129:17)
#loc185 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":129:33)
#loc186 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":130:13)
#loc187 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":131:30)
#loc188 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":131:17)
#loc189 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":133:13)
#loc190 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":136:13)
#loc191 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":133:17)
#loc192 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":133:33)
#loc193 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":134:13)
#loc194 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":135:30)
#loc195 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":135:17)
#loc196 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":143:23)
#loc197 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":143:13)
#loc198 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":335:1)
#loc199 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":339:1)
#loc200 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":337:5)
#loc201 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":337:11)
#loc202 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":338:5)
#loc203 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":338:11)
#loc204 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":158:19)
#loc205 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":153:1)
#loc206 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":244:1)
#loc207 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":155:5)
#loc208 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":243:5)
#loc209 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":155:8)
#loc210 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":155:20)
#loc211 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":156:5)
#loc212 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":159:5)
#loc213 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":161:5)
#loc214 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":158:9)
#loc215 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":162:9)
#loc216 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":242:9)
#loc217 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":163:13)
#loc218 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":163:30)
#loc219 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":168:13)
#loc220 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":168:17)
#loc221 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":169:13)
#loc222 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":169:32)
#loc223 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":170:13)
#loc224 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":170:19)
#loc225 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":171:13)
#loc226 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":171:35)
#loc227 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":172:13)
#loc228 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":172:35)
#loc229 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":173:13)
#loc230 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":173:41)
#loc231 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":173:30)
#loc232 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":173:37)
#loc233 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":174:13)
#loc234 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":226:21)
#loc235 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":175:13)
#loc236 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":225:13)
#loc237 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":183:39)
#loc238 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":183:48)
#loc239 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":183:61)
#loc240 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":183:32)
#loc241 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":183:17)
#loc242 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":183:72)
#loc243 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":184:17)
#loc244 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":187:17)
#loc245 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":184:21)
#loc246 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":184:37)
#loc247 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":185:17)
#loc248 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":186:21)
#loc249 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":189:24)
#loc250 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":189:25)
#loc251 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":189:34)
#loc252 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":189:37)
#loc253 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":189:51)
#loc254 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":189:17)
#loc255 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":189:52)
#loc256 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":190:38)
#loc257 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":190:17)
#loc258 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":191:43)
#loc259 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":191:17)
#loc260 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":192:42)
#loc261 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":192:36)
#loc262 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":192:17)
#loc263 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":192:50)
#loc264 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":193:17)
#loc265 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":196:17)
#loc266 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":193:26)
#loc267 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":193:58)
#loc268 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":193:59)
#loc269 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":193:68)
#loc270 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":193:82)
#loc271 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":193:21)
#loc272 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":193:88)
#loc273 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":194:17)
#loc274 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":195:21)
#loc275 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":197:17)
#loc276 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":200:17)
#loc277 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":197:28)
#loc278 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":197:42)
#loc279 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":197:21)
#loc280 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":197:61)
#loc281 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":198:17)
#loc282 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":199:21)
#loc283 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":201:39)
#loc284 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":201:53)
#loc285 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":201:59)
#loc286 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":201:32)
#loc287 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":201:17)
#loc288 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":201:63)
#loc289 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":202:17)
#loc290 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":205:17)
#loc291 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":202:21)
#loc292 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":202:37)
#loc293 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":203:17)
#loc294 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":204:21)
#loc295 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":207:35)
#loc296 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":207:49)
#loc297 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":207:54)
#loc298 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":207:53)
#loc299 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":207:69)
#loc300 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":207:73)
#loc301 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":207:81)
#loc302 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":207:85)
#loc303 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":207:30)
#loc304 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":207:17)
#loc305 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":207:86)
#loc306 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":208:17)
#loc307 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":211:17)
#loc308 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":208:21)
#loc309 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":208:35)
#loc310 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":208:48)
#loc311 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":208:51)
#loc312 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":208:65)
#loc313 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":209:17)
#loc314 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":210:21)
#loc315 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":213:36)
#loc316 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":213:22)
#loc317 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":213:17)
#loc318 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":215:27)
#loc319 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":215:34)
#loc320 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":215:40)
#loc321 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":215:17)
#loc322 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":215:44)
#loc323 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":216:17)
#loc324 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":219:17)
#loc325 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":216:21)
#loc326 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":217:17)
#loc327 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":218:32)
#loc328 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":218:22)
#loc329 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":218:21)
#loc330 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":220:27)
#loc331 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":220:34)
#loc332 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":220:40)
#loc333 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":220:17)
#loc334 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":220:44)
#loc335 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":221:17)
#loc336 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":224:17)
#loc337 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":221:21)
#loc338 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":222:17)
#loc339 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":223:32)
#loc340 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":223:22)
#loc341 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":223:21)
#loc342 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":226:20)
#loc343 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":227:13)
#loc344 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":230:13)
#loc345 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":227:17)
#loc346 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":227:33)
#loc347 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":228:13)
#loc348 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":229:30)
#loc349 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":229:17)
#loc350 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":231:13)
#loc351 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":234:13)
#loc352 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":231:17)
#loc353 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":231:33)
#loc354 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":232:13)
#loc355 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":233:30)
#loc356 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":233:17)
#loc357 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":241:23)
#loc358 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":241:13)
#loc359 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":247:1)
#loc360 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":333:1)
#loc361 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":249:5)
#loc362 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":332:5)
#loc363 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":249:8)
#loc364 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":249:20)
#loc365 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":250:5)
#loc366 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":251:9)
#loc367 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":331:9)
#loc368 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":252:13)
#loc369 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":252:30)
#loc370 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":257:13)
#loc371 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":257:17)
#loc372 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":258:13)
#loc373 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":258:32)
#loc374 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":259:13)
#loc375 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":259:19)
#loc376 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":260:13)
#loc377 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":260:35)
#loc378 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":261:13)
#loc379 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":261:35)
#loc380 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":262:13)
#loc381 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":262:41)
#loc382 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":262:30)
#loc383 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":262:37)
#loc384 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":263:13)
#loc385 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":315:21)
#loc386 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":264:13)
#loc387 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":314:13)
#loc388 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":272:39)
#loc389 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":272:48)
#loc390 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":272:61)
#loc391 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":272:32)
#loc392 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":272:17)
#loc393 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":272:72)
#loc394 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":273:17)
#loc395 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":276:17)
#loc396 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":273:21)
#loc397 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":273:37)
#loc398 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":274:17)
#loc399 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":275:21)
#loc400 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":278:24)
#loc401 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":278:25)
#loc402 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":278:34)
#loc403 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":278:37)
#loc404 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":278:51)
#loc405 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":278:17)
#loc406 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":278:52)
#loc407 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":279:38)
#loc408 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":279:17)
#loc409 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":280:43)
#loc410 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":280:17)
#loc411 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":281:42)
#loc412 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":281:36)
#loc413 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":281:17)
#loc414 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":281:50)
#loc415 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":282:17)
#loc416 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":285:17)
#loc417 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":282:26)
#loc418 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":282:58)
#loc419 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":282:59)
#loc420 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":282:68)
#loc421 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":282:82)
#loc422 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":282:21)
#loc423 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":282:88)
#loc424 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":283:17)
#loc425 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":284:21)
#loc426 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":286:17)
#loc427 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":289:17)
#loc428 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":286:28)
#loc429 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":286:42)
#loc430 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":286:21)
#loc431 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":286:61)
#loc432 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":287:17)
#loc433 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":288:21)
#loc434 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":290:39)
#loc435 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":290:53)
#loc436 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":290:59)
#loc437 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":290:32)
#loc438 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":290:17)
#loc439 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":290:63)
#loc440 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":291:17)
#loc441 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":294:17)
#loc442 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":291:21)
#loc443 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":291:37)
#loc444 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":292:17)
#loc445 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":293:21)
#loc446 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":296:35)
#loc447 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":296:49)
#loc448 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":296:54)
#loc449 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":296:53)
#loc450 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":296:69)
#loc451 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":296:73)
#loc452 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":296:81)
#loc453 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":296:85)
#loc454 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":296:30)
#loc455 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":296:17)
#loc456 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":296:86)
#loc457 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":297:17)
#loc458 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":300:17)
#loc459 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":297:21)
#loc460 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":297:35)
#loc461 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":297:48)
#loc462 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":297:51)
#loc463 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":297:65)
#loc464 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":298:17)
#loc465 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":299:21)
#loc466 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":302:36)
#loc467 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":302:22)
#loc468 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":302:17)
#loc469 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":304:27)
#loc470 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":304:34)
#loc471 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":304:40)
#loc472 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":304:17)
#loc473 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":304:44)
#loc474 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":305:17)
#loc475 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":308:17)
#loc476 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":305:21)
#loc477 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":306:17)
#loc478 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":307:32)
#loc479 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":307:22)
#loc480 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":307:21)
#loc481 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":309:27)
#loc482 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":309:34)
#loc483 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":309:40)
#loc484 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":309:17)
#loc485 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":309:44)
#loc486 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":310:17)
#loc487 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":313:17)
#loc488 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":310:21)
#loc489 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":311:17)
#loc490 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":312:32)
#loc491 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":312:22)
#loc492 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":312:21)
#loc493 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":315:20)
#loc494 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":316:13)
#loc495 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":319:13)
#loc496 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":316:17)
#loc497 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":316:33)
#loc498 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":317:13)
#loc499 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":318:30)
#loc500 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":318:17)
#loc501 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":320:13)
#loc502 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":323:13)
#loc503 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":320:17)
#loc504 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":320:33)
#loc505 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":321:13)
#loc506 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":322:30)
#loc507 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":322:17)
#loc508 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":330:23)
#loc509 = loc("CWE605_Multiple_Binds_Same_Port__basic_07.c":330:13)
#loc510 = loc(fused[#loc1, #loc2])
#loc511 = loc(fused[#loc3, #loc4])
#loc512 = loc(fused[#loc5, #loc6])
#loc513 = loc(fused[#loc7, #loc8])
#loc514 = loc(fused[#loc9, #loc10])
#loc515 = loc(fused[#loc11, #loc12])
#loc516 = loc(fused[#loc13, #loc14])
#loc517 = loc(fused[#loc15, #loc16])
#loc518 = loc(fused[#loc17, #loc18])
#loc519 = loc(fused[#loc19, #loc20])
#loc520 = loc(fused[#loc21, #loc22])
#loc521 = loc(fused[#loc23, #loc24])
#loc522 = loc(fused[#loc25, #loc26])
#loc523 = loc(fused[#loc27, #loc28])
#loc524 = loc(fused[#loc29, #loc30])
#loc525 = loc(fused[#loc31, #loc28])
#loc526 = loc(fused[#loc32, #loc33])
#loc527 = loc(fused[#loc34, #loc35])
#loc528 = loc(fused[#loc36, #loc37])
#loc529 = loc(fused[#loc38, #loc39])
#loc530 = loc(fused[#loc40, #loc41])
#loc531 = loc(fused[#loc42, #loc43])
#loc532 = loc(fused[#loc44, #loc45])
#loc533 = loc(fused[#loc46, #loc47])
#loc534 = loc(fused[#loc48, #loc49])
#loc535 = loc(fused[#loc50, #loc51])
#loc536 = loc(fused[#loc54, #loc51])
#loc537 = loc(fused[#loc55, #loc56])
#loc538 = loc(fused[#loc57, #loc58])
#loc539 = loc(fused[#loc63, #loc64])
#loc540 = loc(fused[#loc65, #loc66])
#loc541 = loc(fused[#loc67, #loc68])
#loc542 = loc(fused[#loc69, #loc66])
#loc543 = loc(fused[#loc71, #loc72])
#loc544 = loc(fused[#loc76, #loc77])
#loc545 = loc(fused[#loc78, #loc77])
#loc546 = loc(fused[#loc80, #loc81])
#loc547 = loc(fused[#loc82, #loc72])
#loc548 = loc(fused[#loc84, #loc85])
#loc549 = loc(fused[#loc87, #loc88])
#loc550 = loc(fused[#loc89, #loc90])
#loc551 = loc(fused[#loc93, #loc91])
#loc552 = loc(fused[#loc97, #loc94])
#loc553 = loc(fused[#loc101, #loc102])
#loc554 = loc(fused[#loc103, #loc104])
#loc555 = loc(fused[#loc106, #loc107])
#loc556 = loc(fused[#loc108, #loc109])
#loc557 = loc(fused[#loc110, #loc111])
#loc558 = loc(fused[#loc112, #loc104])
#loc559 = loc(fused[#loc114, #loc115])
#loc560 = loc(fused[#loc118, #loc119])
#loc561 = loc(fused[#loc120, #loc115])
#loc562 = loc(fused[#loc126, #loc127])
#loc563 = loc(fused[#loc128, #loc129])
#loc564 = loc(fused[#loc130, #loc131])
#loc565 = loc(fused[#loc132, #loc129])
#loc566 = loc(fused[#loc135, #loc136])
#loc567 = loc(fused[#loc138, #loc139])
#loc568 = loc(fused[#loc138, #loc140])
#loc569 = loc(fused[#loc143, #loc144])
#loc570 = loc(fused[#loc145, #loc146])
#loc571 = loc(fused[#loc147, #loc148])
#loc572 = loc(fused[#loc150, #loc151])
#loc573 = loc(fused[#loc152, #loc146])
#loc574 = loc(fused[#loc156, #loc154])
#loc575 = loc(fused[#loc160, #loc161])
#loc576 = loc(fused[#loc162, #loc163])
#loc577 = loc(fused[#loc165, #loc163])
#loc578 = loc(fused[#loc168, #loc166])
#loc579 = loc(fused[#loc172, #loc173])
#loc580 = loc(fused[#loc174, #loc175])
#loc581 = loc(fused[#loc177, #loc175])
#loc582 = loc(fused[#loc180, #loc178])
#loc583 = loc(fused[#loc182, #loc183])
#loc584 = loc(fused[#loc184, #loc185])
#loc585 = loc(fused[#loc186, #loc183])
#loc586 = loc(fused[#loc189, #loc190])
#loc587 = loc(fused[#loc191, #loc192])
#loc588 = loc(fused[#loc193, #loc190])
#loc589 = loc(fused[#loc198, #loc199])
#loc590 = loc(fused[#loc200, #loc201])
#loc591 = loc(fused[#loc202, #loc203])
#loc592 = loc(fused[#loc205, #loc206])
#loc593 = loc(fused[#loc207, #loc208])
#loc594 = loc(fused[#loc209, #loc210])
#loc595 = loc(fused[#loc211, #loc212, #loc213, #loc208])
#loc596 = loc(fused[#loc215, #loc216])
#loc597 = loc(fused[#loc217, #loc218])
#loc598 = loc(fused[#loc219, #loc220])
#loc599 = loc(fused[#loc221, #loc222])
#loc600 = loc(fused[#loc223, #loc224])
#loc601 = loc(fused[#loc225, #loc226])
#loc602 = loc(fused[#loc227, #loc228])
#loc603 = loc(fused[#loc229, #loc230])
#loc604 = loc(fused[#loc233, #loc234])
#loc605 = loc(fused[#loc235, #loc236])
#loc606 = loc(fused[#loc241, #loc242])
#loc607 = loc(fused[#loc243, #loc244])
#loc608 = loc(fused[#loc245, #loc246])
#loc609 = loc(fused[#loc247, #loc244])
#loc610 = loc(fused[#loc249, #loc250])
#loc611 = loc(fused[#loc252, #loc253])
#loc612 = loc(fused[#loc254, #loc255])
#loc613 = loc(fused[#loc257, #loc256])
#loc614 = loc(fused[#loc259, #loc258])
#loc615 = loc(fused[#loc262, #loc263])
#loc616 = loc(fused[#loc264, #loc265])
#loc617 = loc(fused[#loc267, #loc268])
#loc618 = loc(fused[#loc269, #loc270])
#loc619 = loc(fused[#loc271, #loc272])
#loc620 = loc(fused[#loc273, #loc265])
#loc621 = loc(fused[#loc275, #loc276])
#loc622 = loc(fused[#loc279, #loc280])
#loc623 = loc(fused[#loc281, #loc276])
#loc624 = loc(fused[#loc287, #loc288])
#loc625 = loc(fused[#loc289, #loc290])
#loc626 = loc(fused[#loc291, #loc292])
#loc627 = loc(fused[#loc293, #loc290])
#loc628 = loc(fused[#loc296, #loc297])
#loc629 = loc(fused[#loc299, #loc300])
#loc630 = loc(fused[#loc299, #loc301])
#loc631 = loc(fused[#loc304, #loc305])
#loc632 = loc(fused[#loc306, #loc307])
#loc633 = loc(fused[#loc308, #loc309])
#loc634 = loc(fused[#loc311, #loc312])
#loc635 = loc(fused[#loc313, #loc307])
#loc636 = loc(fused[#loc317, #loc315])
#loc637 = loc(fused[#loc321, #loc322])
#loc638 = loc(fused[#loc323, #loc324])
#loc639 = loc(fused[#loc326, #loc324])
#loc640 = loc(fused[#loc329, #loc327])
#loc641 = loc(fused[#loc333, #loc334])
#loc642 = loc(fused[#loc335, #loc336])
#loc643 = loc(fused[#loc338, #loc336])
#loc644 = loc(fused[#loc341, #loc339])
#loc645 = loc(fused[#loc343, #loc344])
#loc646 = loc(fused[#loc345, #loc346])
#loc647 = loc(fused[#loc347, #loc344])
#loc648 = loc(fused[#loc350, #loc351])
#loc649 = loc(fused[#loc352, #loc353])
#loc650 = loc(fused[#loc354, #loc351])
#loc651 = loc(fused[#loc359, #loc360])
#loc652 = loc(fused[#loc361, #loc362])
#loc653 = loc(fused[#loc363, #loc364])
#loc654 = loc(fused[#loc365, #loc362])
#loc655 = loc(fused[#loc366, #loc367])
#loc656 = loc(fused[#loc368, #loc369])
#loc657 = loc(fused[#loc370, #loc371])
#loc658 = loc(fused[#loc372, #loc373])
#loc659 = loc(fused[#loc374, #loc375])
#loc660 = loc(fused[#loc376, #loc377])
#loc661 = loc(fused[#loc378, #loc379])
#loc662 = loc(fused[#loc380, #loc381])
#loc663 = loc(fused[#loc384, #loc385])
#loc664 = loc(fused[#loc386, #loc387])
#loc665 = loc(fused[#loc392, #loc393])
#loc666 = loc(fused[#loc394, #loc395])
#loc667 = loc(fused[#loc396, #loc397])
#loc668 = loc(fused[#loc398, #loc395])
#loc669 = loc(fused[#loc400, #loc401])
#loc670 = loc(fused[#loc403, #loc404])
#loc671 = loc(fused[#loc405, #loc406])
#loc672 = loc(fused[#loc408, #loc407])
#loc673 = loc(fused[#loc410, #loc409])
#loc674 = loc(fused[#loc413, #loc414])
#loc675 = loc(fused[#loc415, #loc416])
#loc676 = loc(fused[#loc418, #loc419])
#loc677 = loc(fused[#loc420, #loc421])
#loc678 = loc(fused[#loc422, #loc423])
#loc679 = loc(fused[#loc424, #loc416])
#loc680 = loc(fused[#loc426, #loc427])
#loc681 = loc(fused[#loc430, #loc431])
#loc682 = loc(fused[#loc432, #loc427])
#loc683 = loc(fused[#loc438, #loc439])
#loc684 = loc(fused[#loc440, #loc441])
#loc685 = loc(fused[#loc442, #loc443])
#loc686 = loc(fused[#loc444, #loc441])
#loc687 = loc(fused[#loc447, #loc448])
#loc688 = loc(fused[#loc450, #loc451])
#loc689 = loc(fused[#loc450, #loc452])
#loc690 = loc(fused[#loc455, #loc456])
#loc691 = loc(fused[#loc457, #loc458])
#loc692 = loc(fused[#loc459, #loc460])
#loc693 = loc(fused[#loc462, #loc463])
#loc694 = loc(fused[#loc464, #loc458])
#loc695 = loc(fused[#loc468, #loc466])
#loc696 = loc(fused[#loc472, #loc473])
#loc697 = loc(fused[#loc474, #loc475])
#loc698 = loc(fused[#loc477, #loc475])
#loc699 = loc(fused[#loc480, #loc478])
#loc700 = loc(fused[#loc484, #loc485])
#loc701 = loc(fused[#loc486, #loc487])
#loc702 = loc(fused[#loc489, #loc487])
#loc703 = loc(fused[#loc492, #loc490])
#loc704 = loc(fused[#loc494, #loc495])
#loc705 = loc(fused[#loc496, #loc497])
#loc706 = loc(fused[#loc498, #loc495])
#loc707 = loc(fused[#loc501, #loc502])
#loc708 = loc(fused[#loc503, #loc504])
#loc709 = loc(fused[#loc505, #loc502])
