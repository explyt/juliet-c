!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc242)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc243)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc244)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc245)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc246)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc247)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc248)
  cir.func private @close(!s32i) -> !s32i loc(#loc249)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc250)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc251)
  cir.func private @printIntLine(!s32i) loc(#loc252)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc253)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc255)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc30)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc256)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc258)
      %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc259)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc260)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc261)
      %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc262)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc39)
      %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc39)
      cir.store %9, %5 : !s32i, !cir.ptr<!s32i> loc(#loc260)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc41)
      %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc41)
      cir.store %11, %6 : !s32i, !cir.ptr<!s32i> loc(#loc261)
      cir.scope {
        cir.do {
          cir.scope {
            %12 = cir.const #cir.int<2> : !s32i loc(#loc48)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc49)
            %14 = cir.const #cir.int<6> : !s32i loc(#loc50)
            %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc51)
            cir.store %15, %5 : !s32i, !cir.ptr<!s32i> loc(#loc265)
            cir.scope {
              %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc56)
              %58 = cir.const #cir.int<1> : !s32i loc(#loc57)
              %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc57)
              %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc267)
              cir.if %60 {
                cir.break loc(#loc59)
              } loc(#loc268)
            } loc(#loc266)
            %16 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc269)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc62)
            %18 = cir.const #cir.int<16> : !u64i loc(#loc270)
            cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc271)
            %19 = cir.const #cir.int<2> : !s32i loc(#loc67)
            %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc67)
            %21 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
            cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc272)
            %22 = cir.const #cir.int<0> : !s32i loc(#loc70)
            %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc70)
            %24 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
            %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
            cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc273)
            %26 = cir.const #cir.int<27015> : !s32i loc(#loc74)
            %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc74)
            %28 = cir.call @htons(%27) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc75)
            %29 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
            cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc274)
            cir.scope {
              %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc81)
              %58 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc276)
              %59 = cir.const #cir.int<16> : !u64i loc(#loc277)
              %60 = cir.cast(integral, %59 : !u64i), !u32i loc(#loc277)
              %61 = cir.call @bind(%57, %58, %60) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc86)
              %62 = cir.const #cir.int<1> : !s32i loc(#loc87)
              %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc87)
              %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc278)
              cir.if %64 {
                cir.break loc(#loc89)
              } loc(#loc279)
            } loc(#loc275)
            cir.scope {
              %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc92)
              %58 = cir.const #cir.int<5> : !s32i loc(#loc93)
              %59 = cir.call @listen(%57, %58) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc94)
              %60 = cir.const #cir.int<1> : !s32i loc(#loc95)
              %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc95)
              %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc281)
              cir.if %62 {
                cir.break loc(#loc97)
              } loc(#loc282)
            } loc(#loc280)
            %30 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc98)
            %31 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc99)
            %32 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc100)
            %33 = cir.call @accept(%30, %31, %32) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc101)
            cir.store %33, %6 : !s32i, !cir.ptr<!s32i> loc(#loc283)
            cir.scope {
              %57 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc106)
              %58 = cir.const #cir.int<1> : !s32i loc(#loc107)
              %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc107)
              %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc285)
              cir.if %60 {
                cir.break loc(#loc109)
              } loc(#loc286)
            } loc(#loc284)
            %34 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc110)
            %35 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc111)
            %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc111)
            %37 = cir.const #cir.int<3> : !s32i loc(#loc112)
            %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc112)
            %39 = cir.const #cir.int<4> : !u64i loc(#loc112)
            %40 = cir.binop(mul, %38, %39) : !u64i loc(#loc112)
            %41 = cir.const #cir.int<2> : !s32i loc(#loc112)
            %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc112)
            %43 = cir.binop(add, %40, %42) : !u64i loc(#loc112)
            %44 = cir.const #cir.int<1> : !s32i loc(#loc113)
            %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc113)
            %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc287)
            %47 = cir.const #cir.int<0> : !s32i loc(#loc114)
            %48 = cir.call @recv(%34, %36, %46, %47) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc115)
            %49 = cir.cast(integral, %48 : !s64i), !s32i loc(#loc115)
            cir.store %49, %3 : !s32i, !cir.ptr<!s32i> loc(#loc288)
            cir.scope {
              %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc120)
              %58 = cir.const #cir.int<1> : !s32i loc(#loc121)
              %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc121)
              %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc290)
              %61 = cir.ternary(%60, true {
                %62 = cir.const #true loc(#loc122)
                cir.yield %62 : !cir.bool loc(#loc122)
              }, false {
                %62 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc123)
                %63 = cir.const #cir.int<0> : !s32i loc(#loc124)
                %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc291)
                %65 = cir.ternary(%64, true {
                  %66 = cir.const #true loc(#loc122)
                  cir.yield %66 : !cir.bool loc(#loc122)
                }, false {
                  %66 = cir.const #false loc(#loc122)
                  cir.yield %66 : !cir.bool loc(#loc122)
                }) : (!cir.bool) -> !cir.bool loc(#loc122)
                cir.yield %65 : !cir.bool loc(#loc122)
              }) : (!cir.bool) -> !cir.bool loc(#loc122)
              cir.if %61 {
                cir.break loc(#loc126)
              } loc(#loc292)
            } loc(#loc289)
            %50 = cir.const #cir.int<0> : !s32i loc(#loc127)
            %51 = cir.cast(integral, %50 : !s32i), !s8i loc(#loc127)
            %52 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc128)
            %53 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc129)
            %54 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %52 : !s32i), !cir.ptr<!s8i> loc(#loc129)
            cir.store %51, %54 : !s8i, !cir.ptr<!s8i> loc(#loc293)
            %55 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc130)
            %56 = cir.call @atoi(%55) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc131)
            cir.store %56, %0 : !s32i, !cir.ptr<!s32i> loc(#loc294)
          } loc(#loc264)
          cir.yield loc(#loc45)
        } while {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc134)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc134)
          cir.condition(%13) loc(#loc134)
        } loc(#loc263)
      } loc(#loc263)
      cir.scope {
        %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc137)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc138)
        %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc138)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc296)
        cir.if %15 {
          %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc140)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc141)
        } loc(#loc297)
      } loc(#loc295)
      cir.scope {
        %12 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc144)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc145)
        %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc145)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc299)
        cir.if %15 {
          %16 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc147)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc148)
        } loc(#loc300)
      } loc(#loc298)
    } loc(#loc257)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc302)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc303)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc155)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc156)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc156)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc304)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc305)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc155)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc306)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc307)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc163)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc164)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc164)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc309)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc166)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc167)
          %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc168)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc166)
        } loc(#loc310)
      } loc(#loc308)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc171)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc171)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc312)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc173)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc174)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc174)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc313)
          cir.condition(%24) loc(#loc175)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc177)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc178)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc179)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc180)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc315)
          } loc(#loc314)
          cir.yield loc(#loc170)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc181)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc182)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc316)
          cir.yield loc(#loc311)
        } loc(#loc311)
      } loc(#loc311)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc183)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc184)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc185)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc183)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc186)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc187)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc188)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc188)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc187)
    } loc(#loc301)
    cir.return loc(#loc26)
  } loc(#loc254)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc318)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc191)
    cir.return loc(#loc190)
  } loc(#loc317)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc320)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc197)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc198)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc321)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc200)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc322)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc324)
      %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc325)
      %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc208)
      %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc209)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc209)
      %9 = cir.const #cir.int<4> : !u64i loc(#loc326)
      %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc327)
      %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc208)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc328)
      cir.store %12, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc329)
      cir.scope {
        %20 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc216)
        %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc217)
        %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc217)
        %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!s32i>, !cir.bool loc(#loc331)
        cir.if %23 {
          %24 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc219)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc220)
          %26 = cir.unary(minus, %25) nsw : !s32i, !s32i loc(#loc221)
          cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc219)
        } loc(#loc332)
      } loc(#loc330)
      cir.scope {
        %20 = cir.const #cir.int<0> : !s32i loc(#loc224)
        %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc224)
        cir.store %21, %4 : !u64i, !cir.ptr<!u64i> loc(#loc334)
        cir.for : cond {
          %22 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc226)
          %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc227)
          %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc227)
          %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc335)
          cir.condition(%25) loc(#loc228)
        } body {
          cir.scope {
            %22 = cir.const #cir.int<0> : !s32i loc(#loc230)
            %23 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc231)
            %24 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc232)
            %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !u64i), !cir.ptr<!s32i> loc(#loc233)
            cir.store %22, %25 : !s32i, !cir.ptr<!s32i> loc(#loc337)
          } loc(#loc336)
          cir.yield loc(#loc223)
        } step {
          %22 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc234)
          %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc235)
          cir.store %23, %4 : !u64i, !cir.ptr<!u64i> loc(#loc338)
          cir.yield loc(#loc333)
        } loc(#loc333)
      } loc(#loc333)
      %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc236)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc237)
      %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc238)
      %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc236)
      cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc239)
      %17 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc240)
      %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc241)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc241)
      cir.call @free(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc240)
    } loc(#loc323)
    cir.return loc(#loc194)
  } loc(#loc319)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("/usr/include/stdlib.h":672:1)
#loc18 = loc("/usr/include/stdlib.h":672:45)
#loc19 = loc("/usr/include/stdlib.h":756:1)
#loc20 = loc("/usr/include/stdlib.h":756:70)
#loc21 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc23 = loc("/usr/include/stdlib.h":687:1)
#loc24 = loc("/usr/include/stdlib.h":687:32)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":43:1)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":131:1)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":45:5)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":45:9)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":47:13)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":47:12)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":47:5)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":48:5)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":116:5)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":53:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":53:13)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":54:9)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":54:28)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":55:9)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":55:31)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":56:9)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":56:31)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":57:9)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":57:41)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":58:9)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":101:17)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":59:9)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":100:9)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":68:35)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":68:44)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":68:57)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":68:28)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":68:13)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":68:68)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":69:13)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":72:13)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":69:17)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":69:33)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":70:13)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":71:17)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":73:20)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":73:21)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":73:30)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":73:33)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":73:47)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":73:13)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":73:48)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":74:34)
#loc68 = loc("/usr/include/netinet/in.h":249:5)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":74:13)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":75:39)
#loc71 = loc("/usr/include/netinet/in.h":251:20)
#loc72 = loc("/usr/include/netinet/in.h":33:15)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":75:13)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":76:38)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":76:32)
#loc76 = loc("/usr/include/netinet/in.h":250:15)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":76:13)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":76:46)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":77:13)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":80:13)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":77:22)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":77:54)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":77:55)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":77:64)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":77:78)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":77:17)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":77:84)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":78:13)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":79:17)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":81:13)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":84:13)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":81:24)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":81:38)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":81:17)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":81:57)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":82:13)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":83:17)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":85:35)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":85:49)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":85:55)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":85:28)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":85:13)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":85:59)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":86:13)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":89:13)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":86:17)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":86:33)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":87:13)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":88:17)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":91:31)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":91:45)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":91:58)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":91:76)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":91:79)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":91:26)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":91:13)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":91:80)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":92:13)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":95:13)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":92:17)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":92:31)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":92:44)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":92:47)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":92:61)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":93:13)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":94:17)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":97:39)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":97:25)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":97:13)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":99:25)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":99:20)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":99:13)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":99:36)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":101:16)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":102:9)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":105:9)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":102:13)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":102:29)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":103:9)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":104:26)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":104:13)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":106:9)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":109:9)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":106:13)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":106:29)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":107:9)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":108:26)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":108:13)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":117:5)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":130:5)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":118:9)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":118:16)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":119:9)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":119:14)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":122:28)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":122:35)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":122:42)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":122:52)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":122:53)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":122:9)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":123:9)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":123:43)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":123:13)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":123:27)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":123:33)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":123:34)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":123:40)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":123:39)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":124:9)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":127:9)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":124:18)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":124:14)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":124:21)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":124:33)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":124:23)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":125:9)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":126:29)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":126:13)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":126:24)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":126:25)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":124:40)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":124:39)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":128:22)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":128:33)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":128:34)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":128:9)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":129:9)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":129:14)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":161:1)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":164:1)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":163:5)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":163:13)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":138:1)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":159:1)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":140:5)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":140:9)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":142:13)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":142:12)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":142:5)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":144:12)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":144:5)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":145:5)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":158:5)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":146:9)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":146:16)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":147:9)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":147:14)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":150:28)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":150:35)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":150:42)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":150:52)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":150:53)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":150:9)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":151:9)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":151:43)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":151:13)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":151:27)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":151:33)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":151:34)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":151:40)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":151:39)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":152:9)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":155:9)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":152:18)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":152:14)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":152:21)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":152:33)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":152:23)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":153:9)
#loc230 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":154:29)
#loc231 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":154:13)
#loc232 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":154:24)
#loc233 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":154:25)
#loc234 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":152:40)
#loc235 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":152:39)
#loc236 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":156:22)
#loc237 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":156:33)
#loc238 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":156:34)
#loc239 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":156:9)
#loc240 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":157:9)
#loc241 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_01.c":157:14)
#loc242 = loc(fused[#loc1, #loc2])
#loc243 = loc(fused[#loc3, #loc4])
#loc244 = loc(fused[#loc5, #loc6])
#loc245 = loc(fused[#loc7, #loc8])
#loc246 = loc(fused[#loc9, #loc10])
#loc247 = loc(fused[#loc11, #loc12])
#loc248 = loc(fused[#loc13, #loc14])
#loc249 = loc(fused[#loc15, #loc16])
#loc250 = loc(fused[#loc17, #loc18])
#loc251 = loc(fused[#loc19, #loc20])
#loc252 = loc(fused[#loc21, #loc22])
#loc253 = loc(fused[#loc23, #loc24])
#loc254 = loc(fused[#loc25, #loc26])
#loc255 = loc(fused[#loc27, #loc28])
#loc256 = loc(fused[#loc31, #loc29])
#loc257 = loc(fused[#loc32, #loc33])
#loc258 = loc(fused[#loc34, #loc35])
#loc259 = loc(fused[#loc36, #loc37])
#loc260 = loc(fused[#loc38, #loc39])
#loc261 = loc(fused[#loc40, #loc41])
#loc262 = loc(fused[#loc42, #loc43])
#loc263 = loc(fused[#loc44, #loc45])
#loc264 = loc(fused[#loc46, #loc47])
#loc265 = loc(fused[#loc52, #loc53])
#loc266 = loc(fused[#loc54, #loc55])
#loc267 = loc(fused[#loc56, #loc57])
#loc268 = loc(fused[#loc58, #loc55])
#loc269 = loc(fused[#loc60, #loc61])
#loc270 = loc(fused[#loc63, #loc64])
#loc271 = loc(fused[#loc65, #loc66])
#loc272 = loc(fused[#loc69, #loc67])
#loc273 = loc(fused[#loc73, #loc70])
#loc274 = loc(fused[#loc77, #loc78])
#loc275 = loc(fused[#loc79, #loc80])
#loc276 = loc(fused[#loc82, #loc83])
#loc277 = loc(fused[#loc84, #loc85])
#loc278 = loc(fused[#loc86, #loc87])
#loc279 = loc(fused[#loc88, #loc80])
#loc280 = loc(fused[#loc90, #loc91])
#loc281 = loc(fused[#loc94, #loc95])
#loc282 = loc(fused[#loc96, #loc91])
#loc283 = loc(fused[#loc102, #loc103])
#loc284 = loc(fused[#loc104, #loc105])
#loc285 = loc(fused[#loc106, #loc107])
#loc286 = loc(fused[#loc108, #loc105])
#loc287 = loc(fused[#loc112, #loc113])
#loc288 = loc(fused[#loc116, #loc117])
#loc289 = loc(fused[#loc118, #loc119])
#loc290 = loc(fused[#loc120, #loc121])
#loc291 = loc(fused[#loc123, #loc124])
#loc292 = loc(fused[#loc125, #loc119])
#loc293 = loc(fused[#loc129, #loc127])
#loc294 = loc(fused[#loc132, #loc133])
#loc295 = loc(fused[#loc135, #loc136])
#loc296 = loc(fused[#loc137, #loc138])
#loc297 = loc(fused[#loc139, #loc136])
#loc298 = loc(fused[#loc142, #loc143])
#loc299 = loc(fused[#loc144, #loc145])
#loc300 = loc(fused[#loc146, #loc143])
#loc301 = loc(fused[#loc149, #loc150])
#loc302 = loc(fused[#loc151, #loc152])
#loc303 = loc(fused[#loc153, #loc154])
#loc304 = loc(fused[#loc157, #loc158])
#loc305 = loc(fused[#loc156, #loc158])
#loc306 = loc(fused[#loc155, #loc159])
#loc307 = loc(fused[#loc160, #loc159])
#loc308 = loc(fused[#loc161, #loc162])
#loc309 = loc(fused[#loc163, #loc164])
#loc310 = loc(fused[#loc165, #loc162])
#loc311 = loc(fused[#loc169, #loc170])
#loc312 = loc(fused[#loc172, #loc171])
#loc313 = loc(fused[#loc173, #loc174])
#loc314 = loc(fused[#loc176, #loc170])
#loc315 = loc(fused[#loc178, #loc177])
#loc316 = loc(fused[#loc182, #loc181])
#loc317 = loc(fused[#loc189, #loc190])
#loc318 = loc(fused[#loc191, #loc192])
#loc319 = loc(fused[#loc193, #loc194])
#loc320 = loc(fused[#loc195, #loc196])
#loc321 = loc(fused[#loc199, #loc197])
#loc322 = loc(fused[#loc201, #loc200])
#loc323 = loc(fused[#loc202, #loc203])
#loc324 = loc(fused[#loc204, #loc205])
#loc325 = loc(fused[#loc206, #loc207])
#loc326 = loc(fused[#loc210, #loc211])
#loc327 = loc(fused[#loc209, #loc211])
#loc328 = loc(fused[#loc208, #loc212])
#loc329 = loc(fused[#loc213, #loc212])
#loc330 = loc(fused[#loc214, #loc215])
#loc331 = loc(fused[#loc216, #loc217])
#loc332 = loc(fused[#loc218, #loc215])
#loc333 = loc(fused[#loc222, #loc223])
#loc334 = loc(fused[#loc225, #loc224])
#loc335 = loc(fused[#loc226, #loc227])
#loc336 = loc(fused[#loc229, #loc223])
#loc337 = loc(fused[#loc231, #loc230])
#loc338 = loc(fused[#loc235, #loc234])
