!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty_CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34_unionType = !cir.record<union "CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34_unionType" {!cir.ptr<!s64i>, !cir.ptr<!s64i>}>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc85)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc86)
  cir.func private @printLongLongLine(!s64i) loc(#loc87)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc88)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc90)
    %1 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34_unionType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc91)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc15)
    cir.store %2, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc92)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc17)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc93)
    %5 = cir.call @malloc(%4) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc17)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc94)
    cir.store %6, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc95)
    cir.scope {
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc24)
      %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc25)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc25)
      %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s64i>, !cir.bool loc(#loc97)
      cir.if %14 {
        %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc27)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc28)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc29)
        cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc27)
      } loc(#loc98)
    } loc(#loc96)
    %7 = cir.const #cir.int<2147483643> : !s64i loc(#loc30)
    %8 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc31)
    cir.store %7, %8 : !s64i, !cir.ptr<!s64i> loc(#loc99)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc33)
    %10 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34_unionType> -> !cir.ptr<!cir.ptr<!s64i>> loc(#loc34)
    cir.store %9, %10 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc100)
    cir.scope {
      %11 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc102)
      %12 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34_unionType> -> !cir.ptr<!cir.ptr<!s64i>> loc(#loc40)
      %13 = cir.load %12 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc39)
      cir.store %13, %11 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc102)
      %14 = cir.load deref %11 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc41)
      %15 = cir.load %14 : !cir.ptr<!s64i>, !s64i loc(#loc42)
      cir.call @printLongLongLine(%15) : (!s64i) -> () loc(#loc43)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc44)
      %17 = cir.load %11 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc45)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc45)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc44)
    } loc(#loc101)
    cir.return loc(#loc10)
  } loc(#loc89)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc104)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc48)
    cir.return loc(#loc47)
  } loc(#loc103)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc106)
    %1 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34_unionType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc107)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc56)
    cir.store %2, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc108)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc58)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc109)
    %5 = cir.call @malloc(%4) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc58)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc110)
    cir.store %6, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc111)
    cir.scope {
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc65)
      %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc66)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc66)
      %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s64i>, !cir.bool loc(#loc113)
      cir.if %14 {
        %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc68)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc69)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc70)
        cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc68)
      } loc(#loc114)
    } loc(#loc112)
    %7 = cir.const #cir.int<2147483643> : !s64i loc(#loc71)
    %8 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc72)
    cir.store %7, %8 : !s64i, !cir.ptr<!s64i> loc(#loc115)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc74)
    %10 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34_unionType> -> !cir.ptr<!cir.ptr<!s64i>> loc(#loc34)
    cir.store %9, %10 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc116)
    cir.scope {
      %11 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc118)
      %12 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34_unionType> -> !cir.ptr<!cir.ptr<!s64i>> loc(#loc40)
      %13 = cir.load %12 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc79)
      cir.store %13, %11 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc118)
      %14 = cir.load deref %11 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc80)
      %15 = cir.load %14 : !cir.ptr<!s64i>, !s64i loc(#loc81)
      cir.call @printLongLongLine(%15) : (!s64i) -> () loc(#loc82)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc83)
      %17 = cir.load %11 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc84)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc84)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc83)
    } loc(#loc117)
    cir.return loc(#loc51)
  } loc(#loc105)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":27:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":45:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":29:5)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":29:15)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":30:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":30:68)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":32:12)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":32:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":35:23)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":35:30)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":35:41)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":35:42)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":35:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":36:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":36:33)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":36:9)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":36:17)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":36:23)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":36:24)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":36:30)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":36:29)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":37:13)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":37:6)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":37:5)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":38:26)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":21:15)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":38:5)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":39:5)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":44:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":40:9)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":40:34)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":22:15)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":42:28)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":42:27)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":42:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":43:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":43:14)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":71:1)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":74:1)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":73:5)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":73:13)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":52:1)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":69:1)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":54:5)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":54:15)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":55:5)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":55:68)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":57:12)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":57:5)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":59:23)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":59:30)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":59:42)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":59:43)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":59:5)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":60:5)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":60:33)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":60:9)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":60:17)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":60:23)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":60:24)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":60:30)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":60:29)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":61:13)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":61:6)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":61:5)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":62:26)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":62:5)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":63:5)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":68:5)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":64:9)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":64:34)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":66:28)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":66:27)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":66:9)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":67:9)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":67:14)
#loc85 = loc(fused[#loc1, #loc2])
#loc86 = loc(fused[#loc3, #loc4])
#loc87 = loc(fused[#loc5, #loc6])
#loc88 = loc(fused[#loc7, #loc8])
#loc89 = loc(fused[#loc9, #loc10])
#loc90 = loc(fused[#loc11, #loc12])
#loc91 = loc(fused[#loc13, #loc14])
#loc92 = loc(fused[#loc16, #loc15])
#loc93 = loc(fused[#loc18, #loc19])
#loc94 = loc(fused[#loc17, #loc20])
#loc95 = loc(fused[#loc21, #loc20])
#loc96 = loc(fused[#loc22, #loc23])
#loc97 = loc(fused[#loc24, #loc25])
#loc98 = loc(fused[#loc26, #loc23])
#loc99 = loc(fused[#loc32, #loc30])
#loc100 = loc(fused[#loc35, #loc33])
#loc101 = loc(fused[#loc36, #loc37])
#loc102 = loc(fused[#loc38, #loc39])
#loc103 = loc(fused[#loc46, #loc47])
#loc104 = loc(fused[#loc48, #loc49])
#loc105 = loc(fused[#loc50, #loc51])
#loc106 = loc(fused[#loc52, #loc53])
#loc107 = loc(fused[#loc54, #loc55])
#loc108 = loc(fused[#loc57, #loc56])
#loc109 = loc(fused[#loc59, #loc60])
#loc110 = loc(fused[#loc58, #loc61])
#loc111 = loc(fused[#loc62, #loc61])
#loc112 = loc(fused[#loc63, #loc64])
#loc113 = loc(fused[#loc65, #loc66])
#loc114 = loc(fused[#loc67, #loc64])
#loc115 = loc(fused[#loc73, #loc71])
#loc116 = loc(fused[#loc75, #loc74])
#loc117 = loc(fused[#loc76, #loc77])
#loc118 = loc(fused[#loc78, #loc79])
