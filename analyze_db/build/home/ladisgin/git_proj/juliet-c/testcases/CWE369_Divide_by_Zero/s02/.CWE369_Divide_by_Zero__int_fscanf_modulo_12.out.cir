!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc68 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":149:10)
#loc69 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":149:14)
#loc70 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":149:20)
#loc71 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":149:32)
#loc194 = loc(fused[#loc68, #loc69])
#loc195 = loc(fused[#loc70, #loc71])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_fscanf_modulo_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc168)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc169)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc170)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printIntLine(!s32i) loc(#loc171)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc172)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc12)
  cir.func no_proto @CWE369_Divide_by_Zero__int_fscanf_modulo_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc174)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc18)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc175)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc177)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc177)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc22)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc22)
      cir.if %6 {
        %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc27)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc170)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc7)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc7)
        %12 = cir.call @__isoc99_fscanf(%9, %11, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc27)
      } else {
        %7 = cir.const #cir.int<7> : !s32i loc(#loc29)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc179)
      } loc(#loc178)
    } loc(#loc176)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc181)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc181)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc33)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc33)
      cir.if %6 {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc38)
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc39)
        %9 = cir.binop(rem, %7, %8) : !s32i loc(#loc183)
        cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc40)
      } else {
        cir.scope {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc43)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc44)
          %9 = cir.cmp(ne, %7, %8) : !s32i, !cir.bool loc(#loc185)
          cir.if %9 {
            %10 = cir.const #cir.int<100> : !s32i loc(#loc48)
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc49)
            %12 = cir.binop(rem, %10, %11) : !s32i loc(#loc187)
            cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc50)
          } else {
            %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc12)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc12)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc51)
          } loc(#loc186)
        } loc(#loc184)
      } loc(#loc182)
    } loc(#loc180)
    cir.return loc(#loc14)
  } loc(#loc173)
  cir.func no_proto @CWE369_Divide_by_Zero__int_fscanf_modulo_12_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc189)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc190)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc56)
    cir.return loc(#loc53)
  } loc(#loc188)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc191)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc192)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc62)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc63)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc65)
  cir.func @main(%arg0: !s32i loc(fused[#loc68, #loc69]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc70, #loc71])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc194)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc195)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc67)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc72)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc72)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc73)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc74)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc74)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc75)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc62)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %8 = cir.get_global @CWE369_Divide_by_Zero__int_fscanf_modulo_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc196)
    cir.call @CWE369_Divide_by_Zero__int_fscanf_modulo_12_good() : () -> () loc(#loc77)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc63)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc64)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %13 = cir.get_global @CWE369_Divide_by_Zero__int_fscanf_modulo_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc197)
    cir.call @CWE369_Divide_by_Zero__int_fscanf_modulo_12_bad() : () -> () loc(#loc81)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc65)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc84)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc198)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc198)
    cir.return %17 : !s32i loc(#loc198)
  } loc(#loc193)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc200)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc90)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc91)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc201)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc203)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc203)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc95)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc95)
      cir.if %6 {
        %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc100)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc170)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc101)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc102)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc102)
        %12 = cir.call @__isoc99_fscanf(%9, %11, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc100)
      } else {
        %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc103)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc170)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc104)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc105)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc105)
        %12 = cir.call @__isoc99_fscanf(%9, %11, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc103)
      } loc(#loc204)
    } loc(#loc202)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc206)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc206)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc108)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc108)
      cir.if %6 {
        cir.scope {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc115)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc116)
          %9 = cir.cmp(ne, %7, %8) : !s32i, !cir.bool loc(#loc209)
          cir.if %9 {
            %10 = cir.const #cir.int<100> : !s32i loc(#loc120)
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc121)
            %12 = cir.binop(rem, %10, %11) : !s32i loc(#loc211)
            cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc122)
          } else {
            %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc123)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc123)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc124)
          } loc(#loc210)
        } loc(#loc208)
      } else {
        cir.scope {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc127)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc128)
          %9 = cir.cmp(ne, %7, %8) : !s32i, !cir.bool loc(#loc213)
          cir.if %9 {
            %10 = cir.const #cir.int<100> : !s32i loc(#loc132)
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc133)
            %12 = cir.binop(rem, %10, %11) : !s32i loc(#loc215)
            cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc134)
          } else {
            %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc135)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc135)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc136)
          } loc(#loc214)
        } loc(#loc212)
      } loc(#loc207)
    } loc(#loc205)
    cir.return loc(#loc87)
  } loc(#loc199)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc217)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc141)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc142)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc218)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc220)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc220)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc146)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc146)
      cir.if %6 {
        %7 = cir.const #cir.int<7> : !s32i loc(#loc151)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc222)
      } else {
        %7 = cir.const #cir.int<7> : !s32i loc(#loc153)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc223)
      } loc(#loc221)
    } loc(#loc219)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc225)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc225)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc157)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc157)
      cir.if %6 {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc162)
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc163)
        %9 = cir.binop(rem, %7, %8) : !s32i loc(#loc227)
        cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc164)
      } else {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc165)
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc166)
        %9 = cir.binop(rem, %7, %8) : !s32i loc(#loc228)
        cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc167)
      } loc(#loc226)
    } loc(#loc224)
    cir.return loc(#loc138)
  } loc(#loc216)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":30:23)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":51:23)
#loc13 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":22:1)
#loc14 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":54:1)
#loc15 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":24:5)
#loc16 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":24:9)
#loc17 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":26:13)
#loc18 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":26:12)
#loc19 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":26:5)
#loc20 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":27:5)
#loc21 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":36:5)
#loc22 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":27:8)
#loc23 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":27:33)
#loc24 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":28:5)
#loc25 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":31:5)
#loc26 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":33:5)
#loc27 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":30:9)
#loc28 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":30:16)
#loc29 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":35:16)
#loc30 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":35:9)
#loc31 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":37:5)
#loc32 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":53:5)
#loc33 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":37:8)
#loc34 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":37:33)
#loc35 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":38:5)
#loc36 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":41:5)
#loc37 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":43:5)
#loc38 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":40:22)
#loc39 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":40:28)
#loc40 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":40:9)
#loc41 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":45:9)
#loc42 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":52:9)
#loc43 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":45:13)
#loc44 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":45:21)
#loc45 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":46:9)
#loc46 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":48:9)
#loc47 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":50:9)
#loc48 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":47:26)
#loc49 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":47:32)
#loc50 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":47:13)
#loc51 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":51:13)
#loc52 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":134:1)
#loc53 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":138:1)
#loc54 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":136:5)
#loc55 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":136:13)
#loc56 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":137:5)
#loc57 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":137:13)
#loc58 = loc("/usr/include/stdlib.h":575:1)
#loc59 = loc("/usr/include/stdlib.h":575:41)
#loc60 = loc("/usr/include/time.h":76:1)
#loc61 = loc("/usr/include/time.h":76:38)
#loc62 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":154:15)
#loc63 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":156:15)
#loc64 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":159:15)
#loc65 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":161:15)
#loc66 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":149:1)
#loc67 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":164:1)
#loc72 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":150:1)
#loc73 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":152:27)
#loc74 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":152:22)
#loc75 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":152:5)
#loc76 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":154:5)
#loc77 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":155:5)
#loc78 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":155:54)
#loc79 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":156:5)
#loc80 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":159:5)
#loc81 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":160:5)
#loc82 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":160:53)
#loc83 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":161:5)
#loc84 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":163:12)
#loc85 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":163:5)
#loc86 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":63:1)
#loc87 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":102:1)
#loc88 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":65:5)
#loc89 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":65:9)
#loc90 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":67:13)
#loc91 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":67:12)
#loc92 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":67:5)
#loc93 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":68:5)
#loc94 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":77:5)
#loc95 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":68:8)
#loc96 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":68:33)
#loc97 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":69:5)
#loc98 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":72:5)
#loc99 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":74:5)
#loc100 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":71:9)
#loc101 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":71:16)
#loc102 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":71:23)
#loc103 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":76:9)
#loc104 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":76:16)
#loc105 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":76:23)
#loc106 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":78:5)
#loc107 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":101:5)
#loc108 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":78:8)
#loc109 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":78:33)
#loc110 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":79:5)
#loc111 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":89:5)
#loc112 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":91:5)
#loc113 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":81:9)
#loc114 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":88:9)
#loc115 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":81:13)
#loc116 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":81:21)
#loc117 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":82:9)
#loc118 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":84:9)
#loc119 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":86:9)
#loc120 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":83:26)
#loc121 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":83:32)
#loc122 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":83:13)
#loc123 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":87:23)
#loc124 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":87:13)
#loc125 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":93:9)
#loc126 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":100:9)
#loc127 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":93:13)
#loc128 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":93:21)
#loc129 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":94:9)
#loc130 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":96:9)
#loc131 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":98:9)
#loc132 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":95:26)
#loc133 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":95:32)
#loc134 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":95:13)
#loc135 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":99:23)
#loc136 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":99:13)
#loc137 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":107:1)
#loc138 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":132:1)
#loc139 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":109:5)
#loc140 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":109:9)
#loc141 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":111:13)
#loc142 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":111:12)
#loc143 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":111:5)
#loc144 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":112:5)
#loc145 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":121:5)
#loc146 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":112:8)
#loc147 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":112:33)
#loc148 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":113:5)
#loc149 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":116:5)
#loc150 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":118:5)
#loc151 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":115:16)
#loc152 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":115:9)
#loc153 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":120:16)
#loc154 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":120:9)
#loc155 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":122:5)
#loc156 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":131:5)
#loc157 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":122:8)
#loc158 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":122:33)
#loc159 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":123:5)
#loc160 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":126:5)
#loc161 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":128:5)
#loc162 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":125:22)
#loc163 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":125:28)
#loc164 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":125:9)
#loc165 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":130:22)
#loc166 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":130:28)
#loc167 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_12.c":130:9)
#loc168 = loc(fused[#loc1, #loc2])
#loc169 = loc(fused[#loc3, #loc4])
#loc170 = loc(fused[#loc5, #loc6])
#loc171 = loc(fused[#loc8, #loc9])
#loc172 = loc(fused[#loc10, #loc11])
#loc173 = loc(fused[#loc13, #loc14])
#loc174 = loc(fused[#loc15, #loc16])
#loc175 = loc(fused[#loc19, #loc17])
#loc176 = loc(fused[#loc20, #loc21])
#loc177 = loc(fused[#loc22, #loc23])
#loc178 = loc(fused[#loc24, #loc25, #loc26, #loc21])
#loc179 = loc(fused[#loc30, #loc29])
#loc180 = loc(fused[#loc31, #loc32])
#loc181 = loc(fused[#loc33, #loc34])
#loc182 = loc(fused[#loc35, #loc36, #loc37, #loc32])
#loc183 = loc(fused[#loc38, #loc39])
#loc184 = loc(fused[#loc41, #loc42])
#loc185 = loc(fused[#loc43, #loc44])
#loc186 = loc(fused[#loc45, #loc46, #loc47, #loc42])
#loc187 = loc(fused[#loc48, #loc49])
#loc188 = loc(fused[#loc52, #loc53])
#loc189 = loc(fused[#loc54, #loc55])
#loc190 = loc(fused[#loc56, #loc57])
#loc191 = loc(fused[#loc58, #loc59])
#loc192 = loc(fused[#loc60, #loc61])
#loc193 = loc(fused[#loc66, #loc67])
#loc196 = loc(fused[#loc77, #loc78])
#loc197 = loc(fused[#loc81, #loc82])
#loc198 = loc(fused[#loc85, #loc84])
#loc199 = loc(fused[#loc86, #loc87])
#loc200 = loc(fused[#loc88, #loc89])
#loc201 = loc(fused[#loc92, #loc90])
#loc202 = loc(fused[#loc93, #loc94])
#loc203 = loc(fused[#loc95, #loc96])
#loc204 = loc(fused[#loc97, #loc98, #loc99, #loc94])
#loc205 = loc(fused[#loc106, #loc107])
#loc206 = loc(fused[#loc108, #loc109])
#loc207 = loc(fused[#loc110, #loc111, #loc112, #loc107])
#loc208 = loc(fused[#loc113, #loc114])
#loc209 = loc(fused[#loc115, #loc116])
#loc210 = loc(fused[#loc117, #loc118, #loc119, #loc114])
#loc211 = loc(fused[#loc120, #loc121])
#loc212 = loc(fused[#loc125, #loc126])
#loc213 = loc(fused[#loc127, #loc128])
#loc214 = loc(fused[#loc129, #loc130, #loc131, #loc126])
#loc215 = loc(fused[#loc132, #loc133])
#loc216 = loc(fused[#loc137, #loc138])
#loc217 = loc(fused[#loc139, #loc140])
#loc218 = loc(fused[#loc143, #loc141])
#loc219 = loc(fused[#loc144, #loc145])
#loc220 = loc(fused[#loc146, #loc147])
#loc221 = loc(fused[#loc148, #loc149, #loc150, #loc145])
#loc222 = loc(fused[#loc152, #loc151])
#loc223 = loc(fused[#loc154, #loc153])
#loc224 = loc(fused[#loc155, #loc156])
#loc225 = loc(fused[#loc157, #loc158])
#loc226 = loc(fused[#loc159, #loc160, #loc161, #loc156])
#loc227 = loc(fused[#loc162, #loc163])
#loc228 = loc(fused[#loc165, #loc166])
