!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_fscanf_sub_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc140)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc141)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private  @printHexCharLine(!s8i) loc(#loc142)
  cir.func no_proto  @CWE191_Integer_Underflow__char_fscanf_sub_17_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc144)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc145)
    %2 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc146)
    %3 = cir.const #cir.int<32> : !s32i loc(#loc15)
    %4 = cir.cast(integral, %3 : !s32i), !s8i loc(#loc15)
    cir.store %4, %2 : !s8i, !cir.ptr<!s8i> loc(#loc147)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc19)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc149)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc21)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc22)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc150)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc23)
        cir.condition(%9) loc(#loc23)
      } body {
        cir.scope {
          %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc25)
          %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc141)
          %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc26)
          %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
          %11 = cir.call @__isoc99_fscanf(%8, %10, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc25)
        } loc(#loc151)
        cir.yield loc(#loc18)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc27)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc28)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc152)
        cir.yield loc(#loc148)
      } loc(#loc148)
    } loc(#loc148)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc31)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc154)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc33)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc34)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc155)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc35)
        cir.condition(%9) loc(#loc35)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc158)
            %7 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc41)
            %8 = cir.cast(integral, %7 : !s8i), !s32i loc(#loc41)
            %9 = cir.const #cir.int<1> : !s32i loc(#loc40)
            %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc41)
            %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc41)
            cir.store %11, %6 : !s8i, !cir.ptr<!s8i> loc(#loc158)
            %12 = cir.load %6 : !cir.ptr<!s8i>, !s8i loc(#loc42)
            cir.call @printHexCharLine(%12) : (!s8i) -> () loc(#loc43)
          } loc(#loc157)
        } loc(#loc156)
        cir.yield loc(#loc30)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc44)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc45)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc159)
        cir.yield loc(#loc153)
      } loc(#loc153)
    } loc(#loc153)
    cir.return loc(#loc9)
  } loc(#loc143)
  cir.func no_proto  @CWE191_Integer_Underflow__char_fscanf_sub_17_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc161)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc48)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc162)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc50)
    cir.return loc(#loc47)
  } loc(#loc160)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc163)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"data value is too large to perform subtraction.\00" : !cir.array<!s8i x 48>> : !cir.array<!s8i x 48> {alignment = 1 : i64} loc(#loc54)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc165)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc166)
    %2 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc167)
    %3 = cir.const #cir.int<32> : !s32i loc(#loc62)
    %4 = cir.cast(integral, %3 : !s32i), !s8i loc(#loc62)
    cir.store %4, %2 : !s8i, !cir.ptr<!s8i> loc(#loc168)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc66)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc170)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc68)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc69)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc171)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc70)
        cir.condition(%9) loc(#loc70)
      } body {
        cir.scope {
          %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc72)
          %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc141)
          %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc73)
          %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc74)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc74)
          %11 = cir.call @__isoc99_fscanf(%8, %10, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc72)
        } loc(#loc172)
        cir.yield loc(#loc65)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc75)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc76)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc173)
        cir.yield loc(#loc169)
      } loc(#loc169)
    } loc(#loc169)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc79)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc175)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc81)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc82)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc176)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc83)
        cir.condition(%9) loc(#loc83)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc87)
            %7 = cir.cast(integral, %6 : !s8i), !s32i loc(#loc87)
            %8 = cir.const #cir.int<127> : !s32i loc(#loc88)
            %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc88)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc88)
            %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc88)
            %12 = cir.cmp(gt, %7, %11) : !s32i, !s32i loc(#loc179)
            %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc89)
            cir.if %13 {
              %14 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc181)
              %15 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc95)
              %16 = cir.cast(integral, %15 : !s8i), !s32i loc(#loc95)
              %17 = cir.const #cir.int<1> : !s32i loc(#loc94)
              %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc95)
              %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc95)
              cir.store %19, %14 : !s8i, !cir.ptr<!s8i> loc(#loc181)
              %20 = cir.load %14 : !cir.ptr<!s8i>, !s8i loc(#loc96)
              cir.call @printHexCharLine(%20) : (!s8i) -> () loc(#loc97)
            } else {
              %14 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc54)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc54)
              cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc98)
            } loc(#loc180)
          } loc(#loc178)
        } loc(#loc177)
        cir.yield loc(#loc78)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc99)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc100)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc182)
        cir.yield loc(#loc174)
      } loc(#loc174)
    } loc(#loc174)
    cir.return loc(#loc56)
  } loc(#loc164)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc184)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc185)
    %2 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc186)
    %3 = cir.const #cir.int<32> : !s32i loc(#loc108)
    %4 = cir.cast(integral, %3 : !s32i), !s8i loc(#loc108)
    cir.store %4, %2 : !s8i, !cir.ptr<!s8i> loc(#loc187)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc112)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc189)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc114)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc115)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc190)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc116)
        cir.condition(%9) loc(#loc116)
      } body {
        cir.scope {
          %6 = cir.const #cir.int<2> : !s32i loc(#loc118)
          %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc119)
          %8 = cir.cast(integral, %7 : !s32i), !s8i loc(#loc119)
          cir.store %8, %2 : !s8i, !cir.ptr<!s8i> loc(#loc192)
        } loc(#loc191)
        cir.yield loc(#loc111)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc121)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc122)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc193)
        cir.yield loc(#loc188)
      } loc(#loc188)
    } loc(#loc188)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc125)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc195)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc127)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc128)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc196)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc129)
        cir.condition(%9) loc(#loc129)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc199)
            %7 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc135)
            %8 = cir.cast(integral, %7 : !s8i), !s32i loc(#loc135)
            %9 = cir.const #cir.int<1> : !s32i loc(#loc134)
            %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc135)
            %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc135)
            cir.store %11, %6 : !s8i, !cir.ptr<!s8i> loc(#loc199)
            %12 = cir.load %6 : !cir.ptr<!s8i>, !s8i loc(#loc136)
            cir.call @printHexCharLine(%12) : (!s8i) -> () loc(#loc137)
          } loc(#loc198)
        } loc(#loc197)
        cir.yield loc(#loc124)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc138)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc139)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc200)
        cir.yield loc(#loc194)
      } loc(#loc194)
    } loc(#loc194)
    cir.return loc(#loc102)
  } loc(#loc183)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_fscanf_sub_17.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":30:24)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc8 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":22:1)
#loc9 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":40:1)
#loc10 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":24:5)
#loc11 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":24:9)
#loc12 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":24:11)
#loc13 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":25:5)
#loc14 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":25:10)
#loc15 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":26:12)
#loc16 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":26:5)
#loc17 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":27:5)
#loc18 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":31:5)
#loc19 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":27:13)
#loc20 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":27:9)
#loc21 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":27:16)
#loc22 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":27:20)
#loc23 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":27:18)
#loc24 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":28:5)
#loc25 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":30:9)
#loc26 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":30:17)
#loc27 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":27:24)
#loc28 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":27:23)
#loc29 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":32:5)
#loc30 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":39:5)
#loc31 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":32:13)
#loc32 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":32:9)
#loc33 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":32:16)
#loc34 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":32:20)
#loc35 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":32:18)
#loc36 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":33:5)
#loc37 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":34:9)
#loc38 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":38:9)
#loc39 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":36:13)
#loc40 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":36:34)
#loc41 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":36:27)
#loc42 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":37:30)
#loc43 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":37:13)
#loc44 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":32:24)
#loc45 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":32:23)
#loc46 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":93:1)
#loc47 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":97:1)
#loc48 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":95:5)
#loc49 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":95:13)
#loc50 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":96:5)
#loc51 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":96:13)
#loc52 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc53 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc54 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":67:23)
#loc55 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":47:1)
#loc56 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":70:1)
#loc57 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":49:5)
#loc58 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":49:9)
#loc59 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":49:11)
#loc60 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":50:5)
#loc61 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":50:10)
#loc62 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":51:12)
#loc63 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":51:5)
#loc64 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":52:5)
#loc65 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":56:5)
#loc66 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":52:13)
#loc67 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":52:9)
#loc68 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":52:16)
#loc69 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":52:20)
#loc70 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":52:18)
#loc71 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":53:5)
#loc72 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":55:9)
#loc73 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":55:17)
#loc74 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":55:24)
#loc75 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":52:24)
#loc76 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":52:23)
#loc77 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":57:5)
#loc78 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":69:5)
#loc79 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":57:13)
#loc80 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":57:9)
#loc81 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":57:16)
#loc82 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":57:20)
#loc83 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":57:18)
#loc84 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":58:5)
#loc85 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":60:9)
#loc86 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":68:9)
#loc87 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":60:13)
#loc88 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":60:20)
#loc89 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":60:18)
#loc90 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":61:9)
#loc91 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":64:9)
#loc92 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":66:9)
#loc93 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":62:13)
#loc94 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":62:34)
#loc95 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":62:27)
#loc96 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":63:30)
#loc97 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":63:13)
#loc98 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":67:13)
#loc99 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":57:24)
#loc100 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":57:23)
#loc101 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":73:1)
#loc102 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":91:1)
#loc103 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":75:5)
#loc104 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":75:9)
#loc105 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":75:11)
#loc106 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":76:5)
#loc107 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":76:10)
#loc108 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":77:12)
#loc109 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":77:5)
#loc110 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":78:5)
#loc111 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":82:5)
#loc112 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":78:13)
#loc113 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":78:9)
#loc114 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":78:16)
#loc115 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":78:20)
#loc116 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":78:18)
#loc117 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":79:5)
#loc118 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":81:17)
#loc119 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":81:16)
#loc120 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":81:9)
#loc121 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":78:24)
#loc122 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":78:23)
#loc123 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":83:5)
#loc124 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":90:5)
#loc125 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":83:13)
#loc126 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":83:9)
#loc127 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":83:16)
#loc128 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":83:20)
#loc129 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":83:18)
#loc130 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":84:5)
#loc131 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":85:9)
#loc132 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":89:9)
#loc133 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":87:13)
#loc134 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":87:34)
#loc135 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":87:27)
#loc136 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":88:30)
#loc137 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":88:13)
#loc138 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":83:24)
#loc139 = loc("CWE191_Integer_Underflow__char_fscanf_sub_17.c":83:23)
#loc140 = loc(fused[#loc1, #loc2])
#loc141 = loc(fused[#loc3, #loc4])
#loc142 = loc(fused[#loc6, #loc7])
#loc143 = loc(fused[#loc8, #loc9])
#loc144 = loc(fused[#loc10, #loc11])
#loc145 = loc(fused[#loc10, #loc12])
#loc146 = loc(fused[#loc13, #loc14])
#loc147 = loc(fused[#loc16, #loc15])
#loc148 = loc(fused[#loc17, #loc18])
#loc149 = loc(fused[#loc20, #loc19])
#loc150 = loc(fused[#loc21, #loc22])
#loc151 = loc(fused[#loc24, #loc18])
#loc152 = loc(fused[#loc28, #loc27])
#loc153 = loc(fused[#loc29, #loc30])
#loc154 = loc(fused[#loc32, #loc31])
#loc155 = loc(fused[#loc33, #loc34])
#loc156 = loc(fused[#loc36, #loc30])
#loc157 = loc(fused[#loc37, #loc38])
#loc158 = loc(fused[#loc39, #loc40])
#loc159 = loc(fused[#loc45, #loc44])
#loc160 = loc(fused[#loc46, #loc47])
#loc161 = loc(fused[#loc48, #loc49])
#loc162 = loc(fused[#loc50, #loc51])
#loc163 = loc(fused[#loc52, #loc53])
#loc164 = loc(fused[#loc55, #loc56])
#loc165 = loc(fused[#loc57, #loc58])
#loc166 = loc(fused[#loc57, #loc59])
#loc167 = loc(fused[#loc60, #loc61])
#loc168 = loc(fused[#loc63, #loc62])
#loc169 = loc(fused[#loc64, #loc65])
#loc170 = loc(fused[#loc67, #loc66])
#loc171 = loc(fused[#loc68, #loc69])
#loc172 = loc(fused[#loc71, #loc65])
#loc173 = loc(fused[#loc76, #loc75])
#loc174 = loc(fused[#loc77, #loc78])
#loc175 = loc(fused[#loc80, #loc79])
#loc176 = loc(fused[#loc81, #loc82])
#loc177 = loc(fused[#loc84, #loc78])
#loc178 = loc(fused[#loc85, #loc86])
#loc179 = loc(fused[#loc87, #loc88])
#loc180 = loc(fused[#loc90, #loc91, #loc92, #loc86])
#loc181 = loc(fused[#loc93, #loc94])
#loc182 = loc(fused[#loc100, #loc99])
#loc183 = loc(fused[#loc101, #loc102])
#loc184 = loc(fused[#loc103, #loc104])
#loc185 = loc(fused[#loc103, #loc105])
#loc186 = loc(fused[#loc106, #loc107])
#loc187 = loc(fused[#loc109, #loc108])
#loc188 = loc(fused[#loc110, #loc111])
#loc189 = loc(fused[#loc113, #loc112])
#loc190 = loc(fused[#loc114, #loc115])
#loc191 = loc(fused[#loc117, #loc111])
#loc192 = loc(fused[#loc120, #loc118])
#loc193 = loc(fused[#loc122, #loc121])
#loc194 = loc(fused[#loc123, #loc124])
#loc195 = loc(fused[#loc126, #loc125])
#loc196 = loc(fused[#loc127, #loc128])
#loc197 = loc(fused[#loc130, #loc124])
#loc198 = loc(fused[#loc131, #loc132])
#loc199 = loc(fused[#loc133, #loc134])
#loc200 = loc(fused[#loc139, #loc138])
