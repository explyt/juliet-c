!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s01/CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc259)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc260)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc261)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc262)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc263)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc264)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc265)
  cir.func private @close(!s32i) -> !s32i loc(#loc266)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc267)
  cir.func @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_043badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc269)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc270)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc270)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc270)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc26)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc271)
    cir.scope {
      %4 = cir.const #cir.int<1> : !s32i loc(#loc30)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc30)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc275)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc276)
          %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc277)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc278)
          %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc279)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc41)
          %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc41)
          cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc278)
          %13 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc44)
          %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
          %15 = cir.call @strlen(%14) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc44)
          cir.store %15, %10 : !u64i, !cir.ptr<!u64i> loc(#loc279)
          cir.scope {
            cir.do {
              cir.scope {
                %16 = cir.const #cir.int<2> : !s32i loc(#loc50)
                %17 = cir.const #cir.int<1> : !u32i loc(#loc51)
                %18 = cir.cast(integral, %17 : !u32i), !s32i loc(#loc51)
                %19 = cir.const #cir.int<6> : !u32i loc(#loc52)
                %20 = cir.cast(integral, %19 : !u32i), !s32i loc(#loc52)
                %21 = cir.call @socket(%16, %18, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc53)
                cir.store %21, %9 : !s32i, !cir.ptr<!s32i> loc(#loc282)
                cir.scope {
                  %71 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc58)
                  %72 = cir.const #cir.int<1> : !s32i loc(#loc59)
                  %73 = cir.unary(minus, %72) nsw : !s32i, !s32i loc(#loc59)
                  %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc284)
                  cir.if %74 {
                    cir.break loc(#loc61)
                  } loc(#loc285)
                } loc(#loc283)
                %22 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc286)
                %23 = cir.const #cir.int<0> : !s32i loc(#loc64)
                %24 = cir.const #cir.int<16> : !u64i loc(#loc287)
                cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc288)
                %25 = cir.const #cir.int<2> : !s32i loc(#loc69)
                %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc69)
                %27 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
                cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc289)
                %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
                %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
                %30 = cir.call @inet_addr(%29) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc72)
                %31 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc73)
                %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc74)
                cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc290)
                %33 = cir.const #cir.int<27015> : !s32i loc(#loc77)
                %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc77)
                %35 = cir.call @htons(%34) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc78)
                %36 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc79)
                cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc291)
                cir.scope {
                  %71 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc84)
                  %72 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc293)
                  %73 = cir.const #cir.int<16> : !u64i loc(#loc294)
                  %74 = cir.cast(integral, %73 : !u64i), !u32i loc(#loc294)
                  %75 = cir.call @connect(%71, %72, %74) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc89)
                  %76 = cir.const #cir.int<1> : !s32i loc(#loc90)
                  %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc90)
                  %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc295)
                  cir.if %78 {
                    cir.break loc(#loc92)
                  } loc(#loc296)
                } loc(#loc292)
                %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc93)
                %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
                %39 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc95)
                %40 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc96)
                %41 = cir.cast(bitcast, %40 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc297)
                %42 = cir.const #cir.int<1> : !u64i loc(#loc298)
                %43 = cir.const #cir.int<4096> : !s32i loc(#loc101)
                %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc101)
                %45 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc102)
                %46 = cir.binop(sub, %44, %45) : !u64i loc(#loc299)
                %47 = cir.const #cir.int<1> : !s32i loc(#loc103)
                %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc103)
                %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc300)
                %50 = cir.binop(mul, %42, %49) : !u64i loc(#loc301)
                %51 = cir.const #cir.int<0> : !s32i loc(#loc105)
                %52 = cir.call @recv(%37, %41, %50, %51) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc106)
                %53 = cir.cast(integral, %52 : !s64i), !s32i loc(#loc106)
                cir.store %53, %6 : !s32i, !cir.ptr<!s32i> loc(#loc302)
                cir.scope {
                  %71 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc111)
                  %72 = cir.const #cir.int<1> : !s32i loc(#loc112)
                  %73 = cir.unary(minus, %72) nsw : !s32i, !s32i loc(#loc112)
                  %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc304)
                  %75 = cir.ternary(%74, true {
                    %76 = cir.const #true loc(#loc113)
                    cir.yield %76 : !cir.bool loc(#loc113)
                  }, false {
                    %76 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc114)
                    %77 = cir.const #cir.int<0> : !s32i loc(#loc115)
                    %78 = cir.cmp(eq, %76, %77) : !s32i, !cir.bool loc(#loc305)
                    %79 = cir.ternary(%78, true {
                      %80 = cir.const #true loc(#loc113)
                      cir.yield %80 : !cir.bool loc(#loc113)
                    }, false {
                      %80 = cir.const #false loc(#loc113)
                      cir.yield %80 : !cir.bool loc(#loc113)
                    }) : (!cir.bool) -> !cir.bool loc(#loc113)
                    cir.yield %79 : !cir.bool loc(#loc113)
                  }) : (!cir.bool) -> !cir.bool loc(#loc113)
                  cir.if %75 {
                    cir.break loc(#loc117)
                  } loc(#loc306)
                } loc(#loc303)
                %54 = cir.const #cir.int<0> : !s8i loc(#loc118)
                %55 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
                %56 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc120)
                %57 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc121)
                %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc121)
                %59 = cir.const #cir.int<1> : !u64i loc(#loc307)
                %60 = cir.binop(div, %58, %59) : !u64i loc(#loc308)
                %61 = cir.binop(add, %56, %60) : !u64i loc(#loc309)
                %62 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %61 : !u64i), !cir.ptr<!s8i> loc(#loc124)
                cir.store %54, %62 : !s8i, !cir.ptr<!s8i> loc(#loc310)
                %63 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
                %64 = cir.const #cir.int<13> : !s8i loc(#loc126)
                %65 = cir.cast(integral, %64 : !s8i), !s32i loc(#loc126)
                %66 = cir.call @strchr(%63, %65) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc127)
                cir.store %66, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc311)
                cir.scope {
                  %71 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
                  %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc132)
                  cir.if %72 {
                    %73 = cir.const #cir.int<0> : !s8i loc(#loc134)
                    %74 = cir.load deref %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
                    cir.store %73, %74 : !s8i, !cir.ptr<!s8i> loc(#loc314)
                  } loc(#loc313)
                } loc(#loc312)
                %67 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
                %68 = cir.const #cir.int<10> : !s8i loc(#loc138)
                %69 = cir.cast(integral, %68 : !s8i), !s32i loc(#loc138)
                %70 = cir.call @strchr(%67, %69) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc139)
                cir.store %70, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc315)
                cir.scope {
                  %71 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
                  %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc144)
                  cir.if %72 {
                    %73 = cir.const #cir.int<0> : !s8i loc(#loc146)
                    %74 = cir.load deref %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
                    cir.store %73, %74 : !s8i, !cir.ptr<!s8i> loc(#loc318)
                  } loc(#loc317)
                } loc(#loc316)
              } loc(#loc281)
              cir.yield loc(#loc47)
            } while {
              %16 = cir.const #cir.int<0> : !s32i loc(#loc149)
              %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc149)
              cir.condition(%17) loc(#loc149)
            } loc(#loc280)
          } loc(#loc280)
          cir.scope {
            %16 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc152)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc153)
            %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc153)
            %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc320)
            cir.if %19 {
              %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc155)
              %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc156)
            } loc(#loc321)
          } loc(#loc319)
        } loc(#loc274)
      } loc(#loc273)
    } loc(#loc272)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc323)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc162)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc163)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc324)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc164)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc165)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc325)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc166)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc326)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc171)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc172)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc173)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc328)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc175)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc176)
        } loc(#loc329)
      } loc(#loc327)
    } loc(#loc322)
    cir.return loc(#loc21)
  } loc(#loc268)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc330)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc179)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc331)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc182)
  cir.func internal private @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_04L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc333)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc334)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc334)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc334)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc189)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc335)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc193)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc193)
      cir.if %5 {
        %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc179)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc179)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc197)
      } else {
        %6 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc198)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc199)
        %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc182)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc182)
        %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc198)
      } loc(#loc337)
    } loc(#loc336)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc339)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc204)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc205)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc206)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc340)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc207)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc208)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc341)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc209)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc342)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc214)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc215)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc216)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc344)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc218)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc219)
        } loc(#loc345)
      } loc(#loc343)
    } loc(#loc338)
    cir.return loc(#loc184)
  } loc(#loc332)
  cir.func internal private @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_04L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc347)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc348)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc348)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc348)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc226)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc349)
    cir.scope {
      %4 = cir.const #cir.int<1> : !s32i loc(#loc230)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc230)
      cir.if %5 {
        %6 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc232)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc233)
        %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc234)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc234)
        %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc232)
      } loc(#loc351)
    } loc(#loc350)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc353)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc239)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc240)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc241)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc354)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc242)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc243)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc355)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc244)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc356)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc249)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc250)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc251)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc358)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc253)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc254)
        } loc(#loc359)
      } loc(#loc357)
    } loc(#loc352)
    cir.return loc(#loc221)
  } loc(#loc346)
  cir.func @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_044goodEv() extra(#fn_attr1) {
    cir.call @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_04L8goodG2B1Ev() : () -> () loc(#loc257)
    cir.call @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_04L8goodG2B2Ev() : () -> () loc(#loc258)
    cir.return loc(#loc256)
  } loc(#loc360)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s01/CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":97:53)
#loc8 = loc("/usr/include/netinet/in.h":402:1)
#loc9 = loc("/usr/include/netinet/in.h":403:40)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc14 = loc("/usr/include/string.h":226:1)
#loc15 = loc("/usr/include/string.h":227:50)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("/usr/include/fcntl.h":209:1)
#loc19 = loc("/usr/include/fcntl.h":209:56)
#loc20 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":63:1)
#loc21 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":147:1)
#loc22 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":65:5)
#loc23 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":65:12)
#loc24 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":66:5)
#loc25 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":66:37)
#loc26 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":67:12)
#loc27 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":67:5)
#loc28 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":68:5)
#loc29 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":137:5)
#loc30 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":68:8)
#loc31 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":69:5)
#loc32 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":70:9)
#loc33 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":136:9)
#loc34 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":75:13)
#loc35 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":75:17)
#loc36 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":76:13)
#loc37 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":76:32)
#loc38 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":77:13)
#loc39 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":77:19)
#loc40 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":78:13)
#loc41 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":78:36)
#loc42 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":79:13)
#loc43 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":79:41)
#loc44 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":79:30)
#loc45 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":79:37)
#loc46 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":80:13)
#loc47 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":125:21)
#loc48 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":81:13)
#loc49 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":124:13)
#loc50 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":90:40)
#loc51 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":90:49)
#loc52 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":90:62)
#loc53 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":90:33)
#loc54 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":90:17)
#loc55 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":90:73)
#loc56 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":91:17)
#loc57 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":94:17)
#loc58 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":91:21)
#loc59 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":91:38)
#loc60 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":92:17)
#loc61 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":93:21)
#loc62 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":95:24)
#loc63 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":95:25)
#loc64 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":95:34)
#loc65 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":95:37)
#loc66 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":95:51)
#loc67 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":95:17)
#loc68 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":95:52)
#loc69 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":96:38)
#loc70 = loc("/usr/include/netinet/in.h":249:5)
#loc71 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":96:17)
#loc72 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":97:43)
#loc73 = loc("/usr/include/netinet/in.h":251:20)
#loc74 = loc("/usr/include/netinet/in.h":33:15)
#loc75 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":97:17)
#loc76 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":97:63)
#loc77 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":98:42)
#loc78 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":98:36)
#loc79 = loc("/usr/include/netinet/in.h":250:15)
#loc80 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":98:17)
#loc81 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":98:50)
#loc82 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":99:17)
#loc83 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":102:17)
#loc84 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":99:29)
#loc85 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":99:62)
#loc86 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":99:63)
#loc87 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":99:72)
#loc88 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":99:86)
#loc89 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":99:21)
#loc90 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":99:92)
#loc91 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":100:17)
#loc92 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":101:21)
#loc93 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":106:35)
#loc94 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":106:59)
#loc95 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":106:66)
#loc96 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":106:64)
#loc97 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":106:50)
#loc98 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":106:73)
#loc99 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":106:76)
#loc100 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":106:87)
#loc101 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":106:92)
#loc102 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":106:107)
#loc103 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":106:117)
#loc104 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":106:118)
#loc105 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":106:121)
#loc106 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":106:30)
#loc107 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":106:17)
#loc108 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":106:122)
#loc109 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":107:17)
#loc110 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":110:17)
#loc111 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":107:21)
#loc112 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":107:35)
#loc113 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":107:48)
#loc114 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":107:51)
#loc115 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":107:65)
#loc116 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":108:17)
#loc117 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":109:21)
#loc118 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":112:61)
#loc119 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":112:17)
#loc120 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":112:22)
#loc121 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":112:32)
#loc122 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":112:45)
#loc123 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":112:56)
#loc124 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":112:57)
#loc125 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":114:34)
#loc126 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":114:40)
#loc127 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":114:27)
#loc128 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":114:17)
#loc129 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":114:44)
#loc130 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":115:17)
#loc131 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":118:17)
#loc132 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":115:21)
#loc133 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":116:17)
#loc134 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":117:32)
#loc135 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":117:22)
#loc136 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":117:21)
#loc137 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":119:34)
#loc138 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":119:40)
#loc139 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":119:27)
#loc140 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":119:17)
#loc141 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":119:44)
#loc142 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":120:17)
#loc143 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":123:17)
#loc144 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":120:21)
#loc145 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":121:17)
#loc146 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":122:32)
#loc147 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":122:22)
#loc148 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":122:21)
#loc149 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":125:20)
#loc150 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":126:13)
#loc151 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":129:13)
#loc152 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":126:17)
#loc153 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":126:34)
#loc154 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":127:13)
#loc155 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":128:30)
#loc156 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":128:17)
#loc157 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":138:5)
#loc158 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":146:5)
#loc159 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":139:9)
#loc160 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":139:13)
#loc161 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":141:25)
#loc162 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":141:31)
#loc163 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":141:38)
#loc164 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":141:47)
#loc165 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":141:55)
#loc166 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":141:20)
#loc167 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":141:9)
#loc168 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":141:63)
#loc169 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":142:9)
#loc170 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":145:9)
#loc171 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":142:13)
#loc172 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":142:26)
#loc173 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":142:25)
#loc174 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":143:9)
#loc175 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":144:19)
#loc176 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":144:13)
#loc177 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc178 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc179 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":162:19)
#loc180 = loc("/usr/include/string.h":149:1)
#loc181 = loc("/usr/include/string.h":150:14)
#loc182 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":171:22)
#loc183 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":154:1)
#loc184 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":183:1)
#loc185 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":156:5)
#loc186 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":156:12)
#loc187 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":157:5)
#loc188 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":157:37)
#loc189 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":158:12)
#loc190 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":158:5)
#loc191 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":159:5)
#loc192 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":173:5)
#loc193 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":159:8)
#loc194 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":160:5)
#loc195 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":163:5)
#loc196 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":165:5)
#loc197 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":162:9)
#loc198 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":171:9)
#loc199 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":171:16)
#loc200 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":174:5)
#loc201 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":182:5)
#loc202 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":175:9)
#loc203 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":175:13)
#loc204 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":177:25)
#loc205 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":177:31)
#loc206 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":177:38)
#loc207 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":177:47)
#loc208 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":177:55)
#loc209 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":177:20)
#loc210 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":177:9)
#loc211 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":177:63)
#loc212 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":178:9)
#loc213 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":181:9)
#loc214 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":178:13)
#loc215 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":178:26)
#loc216 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":178:25)
#loc217 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":179:9)
#loc218 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":180:19)
#loc219 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":180:13)
#loc220 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":186:1)
#loc221 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":210:1)
#loc222 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":188:5)
#loc223 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":188:12)
#loc224 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":189:5)
#loc225 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":189:37)
#loc226 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":190:12)
#loc227 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":190:5)
#loc228 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":191:5)
#loc229 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":200:5)
#loc230 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":191:8)
#loc231 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":192:5)
#loc232 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":198:9)
#loc233 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":198:16)
#loc234 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":198:22)
#loc235 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":201:5)
#loc236 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":209:5)
#loc237 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":202:9)
#loc238 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":202:13)
#loc239 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":204:25)
#loc240 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":204:31)
#loc241 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":204:38)
#loc242 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":204:47)
#loc243 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":204:55)
#loc244 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":204:20)
#loc245 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":204:9)
#loc246 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":204:63)
#loc247 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":205:9)
#loc248 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":208:9)
#loc249 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":205:13)
#loc250 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":205:26)
#loc251 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":205:25)
#loc252 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":206:9)
#loc253 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":207:19)
#loc254 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":207:13)
#loc255 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":212:1)
#loc256 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":216:1)
#loc257 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":214:5)
#loc258 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_04.cpp":215:5)
#loc259 = loc(fused[#loc1, #loc2])
#loc260 = loc(fused[#loc3, #loc4])
#loc261 = loc(fused[#loc5, #loc6])
#loc262 = loc(fused[#loc8, #loc9])
#loc263 = loc(fused[#loc10, #loc11])
#loc264 = loc(fused[#loc12, #loc13])
#loc265 = loc(fused[#loc14, #loc15])
#loc266 = loc(fused[#loc16, #loc17])
#loc267 = loc(fused[#loc18, #loc19])
#loc268 = loc(fused[#loc20, #loc21])
#loc269 = loc(fused[#loc22, #loc23])
#loc270 = loc(fused[#loc24, #loc25])
#loc271 = loc(fused[#loc27, #loc26])
#loc272 = loc(fused[#loc28, #loc29])
#loc273 = loc(fused[#loc31, #loc29])
#loc274 = loc(fused[#loc32, #loc33])
#loc275 = loc(fused[#loc34, #loc35])
#loc276 = loc(fused[#loc36, #loc37])
#loc277 = loc(fused[#loc38, #loc39])
#loc278 = loc(fused[#loc40, #loc41])
#loc279 = loc(fused[#loc42, #loc43])
#loc280 = loc(fused[#loc46, #loc47])
#loc281 = loc(fused[#loc48, #loc49])
#loc282 = loc(fused[#loc54, #loc55])
#loc283 = loc(fused[#loc56, #loc57])
#loc284 = loc(fused[#loc58, #loc59])
#loc285 = loc(fused[#loc60, #loc57])
#loc286 = loc(fused[#loc62, #loc63])
#loc287 = loc(fused[#loc65, #loc66])
#loc288 = loc(fused[#loc67, #loc68])
#loc289 = loc(fused[#loc71, #loc69])
#loc290 = loc(fused[#loc75, #loc76])
#loc291 = loc(fused[#loc80, #loc81])
#loc292 = loc(fused[#loc82, #loc83])
#loc293 = loc(fused[#loc85, #loc86])
#loc294 = loc(fused[#loc87, #loc88])
#loc295 = loc(fused[#loc89, #loc90])
#loc296 = loc(fused[#loc91, #loc83])
#loc297 = loc(fused[#loc97, #loc98])
#loc298 = loc(fused[#loc99, #loc100])
#loc299 = loc(fused[#loc101, #loc102])
#loc300 = loc(fused[#loc101, #loc103])
#loc301 = loc(fused[#loc99, #loc104])
#loc302 = loc(fused[#loc107, #loc108])
#loc303 = loc(fused[#loc109, #loc110])
#loc304 = loc(fused[#loc111, #loc112])
#loc305 = loc(fused[#loc114, #loc115])
#loc306 = loc(fused[#loc116, #loc110])
#loc307 = loc(fused[#loc122, #loc123])
#loc308 = loc(fused[#loc121, #loc123])
#loc309 = loc(fused[#loc120, #loc123])
#loc310 = loc(fused[#loc119, #loc118])
#loc311 = loc(fused[#loc128, #loc129])
#loc312 = loc(fused[#loc130, #loc131])
#loc313 = loc(fused[#loc133, #loc131])
#loc314 = loc(fused[#loc136, #loc134])
#loc315 = loc(fused[#loc140, #loc141])
#loc316 = loc(fused[#loc142, #loc143])
#loc317 = loc(fused[#loc145, #loc143])
#loc318 = loc(fused[#loc148, #loc146])
#loc319 = loc(fused[#loc150, #loc151])
#loc320 = loc(fused[#loc152, #loc153])
#loc321 = loc(fused[#loc154, #loc151])
#loc322 = loc(fused[#loc157, #loc158])
#loc323 = loc(fused[#loc159, #loc160])
#loc324 = loc(fused[#loc162, #loc163])
#loc325 = loc(fused[#loc164, #loc165])
#loc326 = loc(fused[#loc167, #loc168])
#loc327 = loc(fused[#loc169, #loc170])
#loc328 = loc(fused[#loc171, #loc172])
#loc329 = loc(fused[#loc174, #loc170])
#loc330 = loc(fused[#loc177, #loc178])
#loc331 = loc(fused[#loc180, #loc181])
#loc332 = loc(fused[#loc183, #loc184])
#loc333 = loc(fused[#loc185, #loc186])
#loc334 = loc(fused[#loc187, #loc188])
#loc335 = loc(fused[#loc190, #loc189])
#loc336 = loc(fused[#loc191, #loc192])
#loc337 = loc(fused[#loc194, #loc195, #loc196, #loc192])
#loc338 = loc(fused[#loc200, #loc201])
#loc339 = loc(fused[#loc202, #loc203])
#loc340 = loc(fused[#loc205, #loc206])
#loc341 = loc(fused[#loc207, #loc208])
#loc342 = loc(fused[#loc210, #loc211])
#loc343 = loc(fused[#loc212, #loc213])
#loc344 = loc(fused[#loc214, #loc215])
#loc345 = loc(fused[#loc217, #loc213])
#loc346 = loc(fused[#loc220, #loc221])
#loc347 = loc(fused[#loc222, #loc223])
#loc348 = loc(fused[#loc224, #loc225])
#loc349 = loc(fused[#loc227, #loc226])
#loc350 = loc(fused[#loc228, #loc229])
#loc351 = loc(fused[#loc231, #loc229])
#loc352 = loc(fused[#loc235, #loc236])
#loc353 = loc(fused[#loc237, #loc238])
#loc354 = loc(fused[#loc240, #loc241])
#loc355 = loc(fused[#loc242, #loc243])
#loc356 = loc(fused[#loc245, #loc246])
#loc357 = loc(fused[#loc247, #loc248])
#loc358 = loc(fused[#loc249, #loc250])
#loc359 = loc(fused[#loc252, #loc248])
#loc360 = loc(fused[#loc255, #loc256])
