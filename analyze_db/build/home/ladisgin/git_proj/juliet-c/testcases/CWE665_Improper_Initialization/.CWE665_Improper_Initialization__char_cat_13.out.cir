!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc55 = loc("CWE665_Improper_Initialization__char_cat_13.c":110:10)
#loc56 = loc("CWE665_Improper_Initialization__char_cat_13.c":110:14)
#loc57 = loc("CWE665_Improper_Initialization__char_cat_13.c":110:20)
#loc58 = loc("CWE665_Improper_Initialization__char_cat_13.c":110:32)
#loc169 = loc(fused[#loc55, #loc56])
#loc170 = loc(fused[#loc57, #loc58])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_cat_13.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant external @GLOBAL_CONST_FIVE : !s32i {alignment = 4 : i64} loc(#loc149)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc150)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc151)
  cir.func no_proto @CWE665_Improper_Initialization__char_cat_13_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc153)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc154)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc13)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc155)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc149)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc17)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc18)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc157)
      cir.if %6 {
      } loc(#loc158)
    } loc(#loc156)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc160)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc24)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc24)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc25)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc26)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc27)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc26)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc26)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc161)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc30)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc30)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc31)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc32)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc31)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc33)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc33)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc162)
      %18 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc34)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
      %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
      %21 = cir.call @strcat(%19, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc34)
      %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
      cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc38)
    } loc(#loc159)
    cir.return loc(#loc8)
  } loc(#loc152)
  cir.func no_proto @CWE665_Improper_Initialization__char_cat_13_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc164)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc165)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    cir.return loc(#loc40)
  } loc(#loc163)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc166)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc167)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc52)
  cir.func @main(%arg0: !s32i loc(fused[#loc55, #loc56]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc57, #loc58])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc169)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc170)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc54)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc59)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc59)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc60)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc61)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc61)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc62)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc49)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %8 = cir.get_global @CWE665_Improper_Initialization__char_cat_13_good : !cir.ptr<!cir.func<!void ()>> loc(#loc171)
    cir.call @CWE665_Improper_Initialization__char_cat_13_good() : () -> () loc(#loc64)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc50)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc51)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %13 = cir.get_global @CWE665_Improper_Initialization__char_cat_13_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc172)
    cir.call @CWE665_Improper_Initialization__char_cat_13_bad() : () -> () loc(#loc68)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc52)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc71)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc173)
    cir.return %17 : !s32i loc(#loc173)
  } loc(#loc168)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc73)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc175)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc176)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc80)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc177)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc149)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc84)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc85)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc179)
      cir.if %6 {
        %7 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc73)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc73)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc89)
      } else {
        %7 = cir.const #cir.int<0> : !s32i loc(#loc90)
        %8 = cir.cast(integral, %7 : !s32i), !s8i loc(#loc90)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
        %10 = cir.const #cir.int<0> : !s32i loc(#loc92)
        %11 = cir.ptr_stride(%9 : !cir.ptr<!s8i>, %10 : !s32i), !cir.ptr<!s8i> loc(#loc93)
        cir.store %8, %11 : !s8i, !cir.ptr<!s8i> loc(#loc181)
      } loc(#loc180)
    } loc(#loc178)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc183)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc98)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc98)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc99)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc100)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc101)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc100)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc100)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc184)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc104)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc104)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc105)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc106)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc105)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc107)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc107)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc185)
      %18 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc108)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
      %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc110)
      %21 = cir.call @strcat(%19, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc108)
      %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
      cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    } loc(#loc182)
    cir.return loc(#loc75)
  } loc(#loc174)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc187)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc188)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc119)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc189)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc149)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc123)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc124)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc191)
      cir.if %6 {
        %7 = cir.const #cir.int<0> : !s32i loc(#loc126)
        %8 = cir.cast(integral, %7 : !s32i), !s8i loc(#loc126)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
        %10 = cir.const #cir.int<0> : !s32i loc(#loc128)
        %11 = cir.ptr_stride(%9 : !cir.ptr<!s8i>, %10 : !s32i), !cir.ptr<!s8i> loc(#loc129)
        cir.store %8, %11 : !s8i, !cir.ptr<!s8i> loc(#loc193)
      } loc(#loc192)
    } loc(#loc190)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc195)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc134)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc134)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc135)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc136)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc137)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc136)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc136)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc196)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc140)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc140)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc141)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc142)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc141)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc143)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc143)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc197)
      %18 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc144)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
      %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc146)
      %21 = cir.call @strcat(%19, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc144)
      %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
      cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc148)
    } loc(#loc194)
    cir.return loc(#loc114)
  } loc(#loc186)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_cat_13.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase.h":111:1)
#loc2 = loc("../../testcasesupport/std_testcase.h":111:18)
#loc3 = loc("/usr/include/string.h":149:1)
#loc4 = loc("/usr/include/string.h":150:14)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE665_Improper_Initialization__char_cat_13.c":23:1)
#loc8 = loc("CWE665_Improper_Initialization__char_cat_13.c":41:1)
#loc9 = loc("CWE665_Improper_Initialization__char_cat_13.c":25:5)
#loc10 = loc("CWE665_Improper_Initialization__char_cat_13.c":25:12)
#loc11 = loc("CWE665_Improper_Initialization__char_cat_13.c":26:5)
#loc12 = loc("CWE665_Improper_Initialization__char_cat_13.c":26:24)
#loc13 = loc("CWE665_Improper_Initialization__char_cat_13.c":27:12)
#loc14 = loc("CWE665_Improper_Initialization__char_cat_13.c":27:5)
#loc15 = loc("CWE665_Improper_Initialization__char_cat_13.c":28:5)
#loc16 = loc("CWE665_Improper_Initialization__char_cat_13.c":32:5)
#loc17 = loc("CWE665_Improper_Initialization__char_cat_13.c":28:8)
#loc18 = loc("CWE665_Improper_Initialization__char_cat_13.c":28:27)
#loc19 = loc("CWE665_Improper_Initialization__char_cat_13.c":29:5)
#loc20 = loc("CWE665_Improper_Initialization__char_cat_13.c":33:5)
#loc21 = loc("CWE665_Improper_Initialization__char_cat_13.c":40:5)
#loc22 = loc("CWE665_Improper_Initialization__char_cat_13.c":34:9)
#loc23 = loc("CWE665_Improper_Initialization__char_cat_13.c":34:24)
#loc24 = loc("CWE665_Improper_Initialization__char_cat_13.c":35:16)
#loc25 = loc("CWE665_Improper_Initialization__char_cat_13.c":35:24)
#loc26 = loc("CWE665_Improper_Initialization__char_cat_13.c":35:29)
#loc27 = loc("CWE665_Improper_Initialization__char_cat_13.c":35:33)
#loc28 = loc("CWE665_Improper_Initialization__char_cat_13.c":35:9)
#loc29 = loc("CWE665_Improper_Initialization__char_cat_13.c":35:34)
#loc30 = loc("CWE665_Improper_Initialization__char_cat_13.c":36:25)
#loc31 = loc("CWE665_Improper_Initialization__char_cat_13.c":36:16)
#loc32 = loc("CWE665_Improper_Initialization__char_cat_13.c":36:20)
#loc33 = loc("CWE665_Improper_Initialization__char_cat_13.c":36:9)
#loc34 = loc("CWE665_Improper_Initialization__char_cat_13.c":38:9)
#loc35 = loc("CWE665_Improper_Initialization__char_cat_13.c":38:16)
#loc36 = loc("CWE665_Improper_Initialization__char_cat_13.c":38:22)
#loc37 = loc("CWE665_Improper_Initialization__char_cat_13.c":39:19)
#loc38 = loc("CWE665_Improper_Initialization__char_cat_13.c":39:9)
#loc39 = loc("CWE665_Improper_Initialization__char_cat_13.c":94:1)
#loc40 = loc("CWE665_Improper_Initialization__char_cat_13.c":98:1)
#loc41 = loc("CWE665_Improper_Initialization__char_cat_13.c":96:5)
#loc42 = loc("CWE665_Improper_Initialization__char_cat_13.c":96:14)
#loc43 = loc("CWE665_Improper_Initialization__char_cat_13.c":97:5)
#loc44 = loc("CWE665_Improper_Initialization__char_cat_13.c":97:14)
#loc45 = loc("/usr/include/stdlib.h":575:1)
#loc46 = loc("/usr/include/stdlib.h":575:41)
#loc47 = loc("/usr/include/time.h":76:1)
#loc48 = loc("/usr/include/time.h":76:38)
#loc49 = loc("CWE665_Improper_Initialization__char_cat_13.c":115:15)
#loc50 = loc("CWE665_Improper_Initialization__char_cat_13.c":117:15)
#loc51 = loc("CWE665_Improper_Initialization__char_cat_13.c":120:15)
#loc52 = loc("CWE665_Improper_Initialization__char_cat_13.c":122:15)
#loc53 = loc("CWE665_Improper_Initialization__char_cat_13.c":110:1)
#loc54 = loc("CWE665_Improper_Initialization__char_cat_13.c":125:1)
#loc59 = loc("CWE665_Improper_Initialization__char_cat_13.c":111:1)
#loc60 = loc("CWE665_Improper_Initialization__char_cat_13.c":113:27)
#loc61 = loc("CWE665_Improper_Initialization__char_cat_13.c":113:22)
#loc62 = loc("CWE665_Improper_Initialization__char_cat_13.c":113:5)
#loc63 = loc("CWE665_Improper_Initialization__char_cat_13.c":115:5)
#loc64 = loc("CWE665_Improper_Initialization__char_cat_13.c":116:5)
#loc65 = loc("CWE665_Improper_Initialization__char_cat_13.c":116:54)
#loc66 = loc("CWE665_Improper_Initialization__char_cat_13.c":117:5)
#loc67 = loc("CWE665_Improper_Initialization__char_cat_13.c":120:5)
#loc68 = loc("CWE665_Improper_Initialization__char_cat_13.c":121:5)
#loc69 = loc("CWE665_Improper_Initialization__char_cat_13.c":121:53)
#loc70 = loc("CWE665_Improper_Initialization__char_cat_13.c":122:5)
#loc71 = loc("CWE665_Improper_Initialization__char_cat_13.c":124:12)
#loc72 = loc("CWE665_Improper_Initialization__char_cat_13.c":124:5)
#loc73 = loc("CWE665_Improper_Initialization__char_cat_13.c":56:19)
#loc74 = loc("CWE665_Improper_Initialization__char_cat_13.c":48:1)
#loc75 = loc("CWE665_Improper_Initialization__char_cat_13.c":71:1)
#loc76 = loc("CWE665_Improper_Initialization__char_cat_13.c":50:5)
#loc77 = loc("CWE665_Improper_Initialization__char_cat_13.c":50:12)
#loc78 = loc("CWE665_Improper_Initialization__char_cat_13.c":51:5)
#loc79 = loc("CWE665_Improper_Initialization__char_cat_13.c":51:24)
#loc80 = loc("CWE665_Improper_Initialization__char_cat_13.c":52:12)
#loc81 = loc("CWE665_Improper_Initialization__char_cat_13.c":52:5)
#loc82 = loc("CWE665_Improper_Initialization__char_cat_13.c":53:5)
#loc83 = loc("CWE665_Improper_Initialization__char_cat_13.c":62:5)
#loc84 = loc("CWE665_Improper_Initialization__char_cat_13.c":53:8)
#loc85 = loc("CWE665_Improper_Initialization__char_cat_13.c":53:27)
#loc86 = loc("CWE665_Improper_Initialization__char_cat_13.c":54:5)
#loc87 = loc("CWE665_Improper_Initialization__char_cat_13.c":57:5)
#loc88 = loc("CWE665_Improper_Initialization__char_cat_13.c":59:5)
#loc89 = loc("CWE665_Improper_Initialization__char_cat_13.c":56:9)
#loc90 = loc("CWE665_Improper_Initialization__char_cat_13.c":61:19)
#loc91 = loc("CWE665_Improper_Initialization__char_cat_13.c":61:9)
#loc92 = loc("CWE665_Improper_Initialization__char_cat_13.c":61:14)
#loc93 = loc("CWE665_Improper_Initialization__char_cat_13.c":61:15)
#loc94 = loc("CWE665_Improper_Initialization__char_cat_13.c":63:5)
#loc95 = loc("CWE665_Improper_Initialization__char_cat_13.c":70:5)
#loc96 = loc("CWE665_Improper_Initialization__char_cat_13.c":64:9)
#loc97 = loc("CWE665_Improper_Initialization__char_cat_13.c":64:24)
#loc98 = loc("CWE665_Improper_Initialization__char_cat_13.c":65:16)
#loc99 = loc("CWE665_Improper_Initialization__char_cat_13.c":65:24)
#loc100 = loc("CWE665_Improper_Initialization__char_cat_13.c":65:29)
#loc101 = loc("CWE665_Improper_Initialization__char_cat_13.c":65:33)
#loc102 = loc("CWE665_Improper_Initialization__char_cat_13.c":65:9)
#loc103 = loc("CWE665_Improper_Initialization__char_cat_13.c":65:34)
#loc104 = loc("CWE665_Improper_Initialization__char_cat_13.c":66:25)
#loc105 = loc("CWE665_Improper_Initialization__char_cat_13.c":66:16)
#loc106 = loc("CWE665_Improper_Initialization__char_cat_13.c":66:20)
#loc107 = loc("CWE665_Improper_Initialization__char_cat_13.c":66:9)
#loc108 = loc("CWE665_Improper_Initialization__char_cat_13.c":68:9)
#loc109 = loc("CWE665_Improper_Initialization__char_cat_13.c":68:16)
#loc110 = loc("CWE665_Improper_Initialization__char_cat_13.c":68:22)
#loc111 = loc("CWE665_Improper_Initialization__char_cat_13.c":69:19)
#loc112 = loc("CWE665_Improper_Initialization__char_cat_13.c":69:9)
#loc113 = loc("CWE665_Improper_Initialization__char_cat_13.c":74:1)
#loc114 = loc("CWE665_Improper_Initialization__char_cat_13.c":92:1)
#loc115 = loc("CWE665_Improper_Initialization__char_cat_13.c":76:5)
#loc116 = loc("CWE665_Improper_Initialization__char_cat_13.c":76:12)
#loc117 = loc("CWE665_Improper_Initialization__char_cat_13.c":77:5)
#loc118 = loc("CWE665_Improper_Initialization__char_cat_13.c":77:24)
#loc119 = loc("CWE665_Improper_Initialization__char_cat_13.c":78:12)
#loc120 = loc("CWE665_Improper_Initialization__char_cat_13.c":78:5)
#loc121 = loc("CWE665_Improper_Initialization__char_cat_13.c":79:5)
#loc122 = loc("CWE665_Improper_Initialization__char_cat_13.c":83:5)
#loc123 = loc("CWE665_Improper_Initialization__char_cat_13.c":79:8)
#loc124 = loc("CWE665_Improper_Initialization__char_cat_13.c":79:27)
#loc125 = loc("CWE665_Improper_Initialization__char_cat_13.c":80:5)
#loc126 = loc("CWE665_Improper_Initialization__char_cat_13.c":82:19)
#loc127 = loc("CWE665_Improper_Initialization__char_cat_13.c":82:9)
#loc128 = loc("CWE665_Improper_Initialization__char_cat_13.c":82:14)
#loc129 = loc("CWE665_Improper_Initialization__char_cat_13.c":82:15)
#loc130 = loc("CWE665_Improper_Initialization__char_cat_13.c":84:5)
#loc131 = loc("CWE665_Improper_Initialization__char_cat_13.c":91:5)
#loc132 = loc("CWE665_Improper_Initialization__char_cat_13.c":85:9)
#loc133 = loc("CWE665_Improper_Initialization__char_cat_13.c":85:24)
#loc134 = loc("CWE665_Improper_Initialization__char_cat_13.c":86:16)
#loc135 = loc("CWE665_Improper_Initialization__char_cat_13.c":86:24)
#loc136 = loc("CWE665_Improper_Initialization__char_cat_13.c":86:29)
#loc137 = loc("CWE665_Improper_Initialization__char_cat_13.c":86:33)
#loc138 = loc("CWE665_Improper_Initialization__char_cat_13.c":86:9)
#loc139 = loc("CWE665_Improper_Initialization__char_cat_13.c":86:34)
#loc140 = loc("CWE665_Improper_Initialization__char_cat_13.c":87:25)
#loc141 = loc("CWE665_Improper_Initialization__char_cat_13.c":87:16)
#loc142 = loc("CWE665_Improper_Initialization__char_cat_13.c":87:20)
#loc143 = loc("CWE665_Improper_Initialization__char_cat_13.c":87:9)
#loc144 = loc("CWE665_Improper_Initialization__char_cat_13.c":89:9)
#loc145 = loc("CWE665_Improper_Initialization__char_cat_13.c":89:16)
#loc146 = loc("CWE665_Improper_Initialization__char_cat_13.c":89:22)
#loc147 = loc("CWE665_Improper_Initialization__char_cat_13.c":90:19)
#loc148 = loc("CWE665_Improper_Initialization__char_cat_13.c":90:9)
#loc149 = loc(fused[#loc1, #loc2])
#loc150 = loc(fused[#loc3, #loc4])
#loc151 = loc(fused[#loc5, #loc6])
#loc152 = loc(fused[#loc7, #loc8])
#loc153 = loc(fused[#loc9, #loc10])
#loc154 = loc(fused[#loc11, #loc12])
#loc155 = loc(fused[#loc14, #loc13])
#loc156 = loc(fused[#loc15, #loc16])
#loc157 = loc(fused[#loc17, #loc18])
#loc158 = loc(fused[#loc19, #loc16])
#loc159 = loc(fused[#loc20, #loc21])
#loc160 = loc(fused[#loc22, #loc23])
#loc161 = loc(fused[#loc28, #loc29])
#loc162 = loc(fused[#loc33, #loc30])
#loc163 = loc(fused[#loc39, #loc40])
#loc164 = loc(fused[#loc41, #loc42])
#loc165 = loc(fused[#loc43, #loc44])
#loc166 = loc(fused[#loc45, #loc46])
#loc167 = loc(fused[#loc47, #loc48])
#loc168 = loc(fused[#loc53, #loc54])
#loc171 = loc(fused[#loc64, #loc65])
#loc172 = loc(fused[#loc68, #loc69])
#loc173 = loc(fused[#loc72, #loc71])
#loc174 = loc(fused[#loc74, #loc75])
#loc175 = loc(fused[#loc76, #loc77])
#loc176 = loc(fused[#loc78, #loc79])
#loc177 = loc(fused[#loc81, #loc80])
#loc178 = loc(fused[#loc82, #loc83])
#loc179 = loc(fused[#loc84, #loc85])
#loc180 = loc(fused[#loc86, #loc87, #loc88, #loc83])
#loc181 = loc(fused[#loc91, #loc90])
#loc182 = loc(fused[#loc94, #loc95])
#loc183 = loc(fused[#loc96, #loc97])
#loc184 = loc(fused[#loc102, #loc103])
#loc185 = loc(fused[#loc107, #loc104])
#loc186 = loc(fused[#loc113, #loc114])
#loc187 = loc(fused[#loc115, #loc116])
#loc188 = loc(fused[#loc117, #loc118])
#loc189 = loc(fused[#loc120, #loc119])
#loc190 = loc(fused[#loc121, #loc122])
#loc191 = loc(fused[#loc123, #loc124])
#loc192 = loc(fused[#loc125, #loc122])
#loc193 = loc(fused[#loc127, #loc126])
#loc194 = loc(fused[#loc130, #loc131])
#loc195 = loc(fused[#loc132, #loc133])
#loc196 = loc(fused[#loc138, #loc139])
#loc197 = loc(fused[#loc143, #loc140])
