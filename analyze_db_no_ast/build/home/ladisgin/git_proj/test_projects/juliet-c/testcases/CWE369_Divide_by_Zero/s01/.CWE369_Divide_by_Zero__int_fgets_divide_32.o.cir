!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_divide_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc152)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc153)
  cir.func private  @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc154)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc155)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private  @printIntLine(!s32i) loc(#loc156)
  cir.func no_proto  @CWE369_Divide_by_Zero__int_fgets_divide_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc158)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc159)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc160)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc159)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc160)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc21)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc163)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc26)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc27)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc163)
      cir.scope {
        %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc165)
        %11 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc165)
        cir.store %11, %10 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc165)
        cir.scope {
          %12 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc34)
          %13 = cir.const #cir.int<3> : !s32i loc(#loc35)
          %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc35)
          %15 = cir.const #cir.int<4> : !u64i loc(#loc35)
          %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc35)
          %17 = cir.const #cir.int<2> : !s32i loc(#loc35)
          %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc35)
          %19 = cir.binop(add, %16, %18) : !u64i loc(#loc35)
          %20 = cir.cast(integral, %19 : !u64i), !s32i loc(#loc35)
          %21 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc153)
          %22 = cir.load %21 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc36)
          %23 = cir.call @fgets(%12, %20, %22) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc37)
          %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc38)
          %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc38)
          %26 = cir.cmp(ne, %23, %25) : !cir.ptr<!s8i>, !s32i loc(#loc167)
          %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc39)
          cir.if %27 {
            %28 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc43)
            %29 = cir.call @atoi(%28) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc44)
            cir.store %29, %5 : !s32i, !cir.ptr<!s32i> loc(#loc169)
          } else {
            %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
            %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
            cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc47)
          } loc(#loc168)
        } loc(#loc166)
      } loc(#loc164)
      %8 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc48)
      %9 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc49)
      cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc170)
    } loc(#loc162)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc172)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc54)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc55)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc172)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc56)
      %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc57)
      %10 = cir.binop(div, %8, %9) : !s32i loc(#loc173)
      cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc58)
    } loc(#loc171)
    cir.return loc(#loc13)
  } loc(#loc157)
  cir.func no_proto  @CWE369_Divide_by_Zero__int_fgets_divide_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc175)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc61)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc176)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc63)
    cir.return loc(#loc60)
  } loc(#loc174)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc178)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc179)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc180)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc179)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc180)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc73)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc74)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc181)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc183)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc79)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc80)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc183)
      %8 = cir.const #cir.int<7> : !s32i loc(#loc81)
      cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc184)
      %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc83)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc84)
      cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc185)
    } loc(#loc182)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc187)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc89)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc90)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc187)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc91)
      %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc92)
      %10 = cir.binop(div, %8, %9) : !s32i loc(#loc188)
      cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc93)
    } loc(#loc186)
    cir.return loc(#loc66)
  } loc(#loc177)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc94)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc190)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc191)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc192)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc191)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc192)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc103)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc104)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc195)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc109)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc110)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc195)
      cir.scope {
        %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc197)
        %11 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc197)
        cir.store %11, %10 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc197)
        cir.scope {
          %12 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc117)
          %13 = cir.const #cir.int<3> : !s32i loc(#loc118)
          %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc118)
          %15 = cir.const #cir.int<4> : !u64i loc(#loc118)
          %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc118)
          %17 = cir.const #cir.int<2> : !s32i loc(#loc118)
          %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc118)
          %19 = cir.binop(add, %16, %18) : !u64i loc(#loc118)
          %20 = cir.cast(integral, %19 : !u64i), !s32i loc(#loc118)
          %21 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc153)
          %22 = cir.load %21 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc119)
          %23 = cir.call @fgets(%12, %20, %22) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc120)
          %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc121)
          %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc121)
          %26 = cir.cmp(ne, %23, %25) : !cir.ptr<!s8i>, !s32i loc(#loc199)
          %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc122)
          cir.if %27 {
            %28 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc126)
            %29 = cir.call @atoi(%28) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc127)
            cir.store %29, %5 : !s32i, !cir.ptr<!s32i> loc(#loc201)
          } else {
            %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc130)
            %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc130)
            cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc131)
          } loc(#loc200)
        } loc(#loc198)
      } loc(#loc196)
      %8 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc132)
      %9 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc133)
      cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc202)
    } loc(#loc194)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc204)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc138)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc139)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc204)
      cir.scope {
        %8 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc142)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc143)
        %10 = cir.cmp(ne, %8, %9) : !s32i, !s32i loc(#loc206)
        %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc144)
        cir.if %11 {
          %12 = cir.const #cir.int<100> : !s32i loc(#loc148)
          %13 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc149)
          %14 = cir.binop(div, %12, %13) : !s32i loc(#loc208)
          cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc150)
        } else {
          %12 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc94)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc94)
          cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc151)
        } loc(#loc207)
      } loc(#loc205)
    } loc(#loc203)
    cir.return loc(#loc96)
  } loc(#loc189)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_divide_32.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":43:27)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":24:1)
#loc13 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":53:1)
#loc14 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":26:5)
#loc15 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":26:9)
#loc16 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":27:5)
#loc17 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":27:22)
#loc18 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":28:5)
#loc19 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":28:22)
#loc20 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":30:13)
#loc21 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":30:12)
#loc22 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":30:5)
#loc23 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":31:5)
#loc24 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":47:5)
#loc25 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":32:9)
#loc26 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":32:21)
#loc27 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":32:20)
#loc28 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":33:9)
#loc29 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":45:9)
#loc30 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":34:13)
#loc31 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":34:49)
#loc32 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":36:13)
#loc33 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":44:13)
#loc34 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":36:23)
#loc35 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":36:36)
#loc36 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":36:53)
#loc37 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":36:17)
#loc38 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":36:63)
#loc39 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":36:60)
#loc40 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":37:13)
#loc41 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":40:13)
#loc42 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":42:13)
#loc43 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":39:29)
#loc44 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":39:24)
#loc45 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":39:17)
#loc46 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":39:40)
#loc47 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":43:17)
#loc48 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":46:21)
#loc49 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":46:10)
#loc50 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":46:9)
#loc51 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":48:5)
#loc52 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":52:5)
#loc53 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":49:9)
#loc54 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":49:21)
#loc55 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":49:20)
#loc56 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":51:22)
#loc57 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":51:28)
#loc58 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":51:9)
#loc59 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":119:1)
#loc60 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":123:1)
#loc61 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":121:5)
#loc62 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":121:13)
#loc63 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":122:5)
#loc64 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":122:13)
#loc65 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":60:1)
#loc66 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":78:1)
#loc67 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":62:5)
#loc68 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":62:9)
#loc69 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":63:5)
#loc70 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":63:22)
#loc71 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":64:5)
#loc72 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":64:22)
#loc73 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":66:13)
#loc74 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":66:12)
#loc75 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":66:5)
#loc76 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":67:5)
#loc77 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":72:5)
#loc78 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":68:9)
#loc79 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":68:21)
#loc80 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":68:20)
#loc81 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":70:16)
#loc82 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":70:9)
#loc83 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":71:21)
#loc84 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":71:10)
#loc85 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":71:9)
#loc86 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":73:5)
#loc87 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":77:5)
#loc88 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":74:9)
#loc89 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":74:21)
#loc90 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":74:20)
#loc91 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":76:22)
#loc92 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":76:28)
#loc93 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":76:9)
#loc94 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":114:23)
#loc95 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":81:1)
#loc96 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":117:1)
#loc97 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":83:5)
#loc98 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":83:9)
#loc99 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":84:5)
#loc100 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":84:22)
#loc101 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":85:5)
#loc102 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":85:22)
#loc103 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":87:13)
#loc104 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":87:12)
#loc105 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":87:5)
#loc106 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":88:5)
#loc107 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":104:5)
#loc108 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":89:9)
#loc109 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":89:21)
#loc110 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":89:20)
#loc111 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":90:9)
#loc112 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":102:9)
#loc113 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":91:13)
#loc114 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":91:49)
#loc115 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":93:13)
#loc116 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":101:13)
#loc117 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":93:23)
#loc118 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":93:36)
#loc119 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":93:53)
#loc120 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":93:17)
#loc121 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":93:63)
#loc122 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":93:60)
#loc123 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":94:13)
#loc124 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":97:13)
#loc125 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":99:13)
#loc126 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":96:29)
#loc127 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":96:24)
#loc128 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":96:17)
#loc129 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":96:40)
#loc130 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":100:27)
#loc131 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":100:17)
#loc132 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":103:21)
#loc133 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":103:10)
#loc134 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":103:9)
#loc135 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":105:5)
#loc136 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":116:5)
#loc137 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":106:9)
#loc138 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":106:21)
#loc139 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":106:20)
#loc140 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":108:9)
#loc141 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":115:9)
#loc142 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":108:13)
#loc143 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":108:21)
#loc144 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":108:18)
#loc145 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":109:9)
#loc146 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":111:9)
#loc147 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":113:9)
#loc148 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":110:26)
#loc149 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":110:32)
#loc150 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":110:13)
#loc151 = loc("CWE369_Divide_by_Zero__int_fgets_divide_32.c":114:13)
#loc152 = loc(fused[#loc1, #loc2])
#loc153 = loc(fused[#loc3, #loc4])
#loc154 = loc(fused[#loc5, #loc6])
#loc155 = loc(fused[#loc7, #loc8])
#loc156 = loc(fused[#loc10, #loc11])
#loc157 = loc(fused[#loc12, #loc13])
#loc158 = loc(fused[#loc14, #loc15])
#loc159 = loc(fused[#loc16, #loc17])
#loc160 = loc(fused[#loc18, #loc19])
#loc161 = loc(fused[#loc22, #loc20])
#loc162 = loc(fused[#loc23, #loc24])
#loc163 = loc(fused[#loc25, #loc26])
#loc164 = loc(fused[#loc28, #loc29])
#loc165 = loc(fused[#loc30, #loc31])
#loc166 = loc(fused[#loc32, #loc33])
#loc167 = loc(fused[#loc37, #loc38])
#loc168 = loc(fused[#loc40, #loc41, #loc42, #loc33])
#loc169 = loc(fused[#loc45, #loc46])
#loc170 = loc(fused[#loc50, #loc48])
#loc171 = loc(fused[#loc51, #loc52])
#loc172 = loc(fused[#loc53, #loc54])
#loc173 = loc(fused[#loc56, #loc57])
#loc174 = loc(fused[#loc59, #loc60])
#loc175 = loc(fused[#loc61, #loc62])
#loc176 = loc(fused[#loc63, #loc64])
#loc177 = loc(fused[#loc65, #loc66])
#loc178 = loc(fused[#loc67, #loc68])
#loc179 = loc(fused[#loc69, #loc70])
#loc180 = loc(fused[#loc71, #loc72])
#loc181 = loc(fused[#loc75, #loc73])
#loc182 = loc(fused[#loc76, #loc77])
#loc183 = loc(fused[#loc78, #loc79])
#loc184 = loc(fused[#loc82, #loc81])
#loc185 = loc(fused[#loc85, #loc83])
#loc186 = loc(fused[#loc86, #loc87])
#loc187 = loc(fused[#loc88, #loc89])
#loc188 = loc(fused[#loc91, #loc92])
#loc189 = loc(fused[#loc95, #loc96])
#loc190 = loc(fused[#loc97, #loc98])
#loc191 = loc(fused[#loc99, #loc100])
#loc192 = loc(fused[#loc101, #loc102])
#loc193 = loc(fused[#loc105, #loc103])
#loc194 = loc(fused[#loc106, #loc107])
#loc195 = loc(fused[#loc108, #loc109])
#loc196 = loc(fused[#loc111, #loc112])
#loc197 = loc(fused[#loc113, #loc114])
#loc198 = loc(fused[#loc115, #loc116])
#loc199 = loc(fused[#loc120, #loc121])
#loc200 = loc(fused[#loc123, #loc124, #loc125, #loc116])
#loc201 = loc(fused[#loc128, #loc129])
#loc202 = loc(fused[#loc134, #loc132])
#loc203 = loc(fused[#loc135, #loc136])
#loc204 = loc(fused[#loc137, #loc138])
#loc205 = loc(fused[#loc140, #loc141])
#loc206 = loc(fused[#loc142, #loc143])
#loc207 = loc(fused[#loc145, #loc146, #loc147, #loc141])
#loc208 = loc(fused[#loc148, #loc149])
