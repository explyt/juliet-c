!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc62)
  cir.func no_proto @CWE758_Undefined_Behavior__char_pointer_alloca_use_17_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc64)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc9)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc66)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc11)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc12)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc67)
        cir.condition(%4) loc(#loc13)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc70)
            %3 = cir.const #cir.int<8> : !u64i loc(#loc18)
            %4 = cir.alloca !u8i, !cir.ptr<!u8i>, %3 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc18)
            %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc71)
            %6 = cir.cast(bitcast, %4 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc18)
            %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc18)
            cir.store %7, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc70)
            %8 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc20)
            %9 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
            cir.store %9, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc71)
            %10 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
            cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc23)
          } loc(#loc69)
        } loc(#loc68)
        cir.yield loc(#loc8)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc24)
        %3 = cir.unary(inc, %2) nsw : !s32i, !s32i loc(#loc25)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc72)
        cir.yield loc(#loc65)
      } loc(#loc65)
    } loc(#loc65)
    cir.return loc(#loc4)
  } loc(#loc63)
  cir.func no_proto @CWE758_Undefined_Behavior__char_pointer_alloca_use_17_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc74)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc28)
    cir.return loc(#loc27)
  } loc(#loc73)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc30)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc76)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc37)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc78)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc39)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc40)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc79)
        cir.condition(%4) loc(#loc41)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc82)
            %3 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc83)
            %4 = cir.const #cir.int<8> : !u64i loc(#loc48)
            %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc48)
            %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc48)
            %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc48)
            cir.store %7, %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc83)
            %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc30)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc30)
            cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc84)
            %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
            %11 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc51)
            cir.store %10, %11 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc85)
            cir.scope {
              %12 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc87)
              %13 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc56)
              %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
              cir.store %14, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc87)
              %15 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
              cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc59)
            } loc(#loc86)
          } loc(#loc81)
        } loc(#loc80)
        cir.yield loc(#loc36)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc60)
        %3 = cir.unary(inc, %2) nsw : !s32i, !s32i loc(#loc61)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc88)
        cir.yield loc(#loc77)
      } loc(#loc77)
    } loc(#loc77)
    cir.return loc(#loc32)
  } loc(#loc75)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":20:1)
#loc4 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":31:1)
#loc5 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":22:5)
#loc6 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":22:9)
#loc7 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":23:5)
#loc8 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":30:5)
#loc9 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":23:13)
#loc10 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":23:9)
#loc11 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":23:16)
#loc12 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":23:20)
#loc13 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":23:18)
#loc14 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":24:5)
#loc15 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":25:9)
#loc16 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":29:9)
#loc17 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":26:13)
#loc18 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":26:42)
#loc19 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":27:13)
#loc20 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":27:28)
#loc21 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":27:27)
#loc22 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":28:23)
#loc23 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":28:13)
#loc24 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":23:24)
#loc25 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":23:23)
#loc26 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":56:1)
#loc27 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":59:1)
#loc28 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":58:5)
#loc29 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":58:11)
#loc30 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":46:20)
#loc31 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":38:1)
#loc32 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":54:1)
#loc33 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":40:5)
#loc34 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":40:9)
#loc35 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":41:5)
#loc36 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":53:5)
#loc37 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":41:13)
#loc38 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":41:9)
#loc39 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":41:16)
#loc40 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":41:20)
#loc41 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":41:18)
#loc42 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":42:5)
#loc43 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":43:9)
#loc44 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":52:9)
#loc45 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":44:13)
#loc46 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":44:20)
#loc47 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":45:13)
#loc48 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":45:42)
#loc49 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":46:13)
#loc50 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":47:24)
#loc51 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":47:14)
#loc52 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":47:13)
#loc53 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":48:13)
#loc54 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":51:13)
#loc55 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":49:17)
#loc56 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":49:32)
#loc57 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":49:31)
#loc58 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":50:27)
#loc59 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":50:17)
#loc60 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":41:24)
#loc61 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_17.c":41:23)
#loc62 = loc(fused[#loc1, #loc2])
#loc63 = loc(fused[#loc3, #loc4])
#loc64 = loc(fused[#loc5, #loc6])
#loc65 = loc(fused[#loc7, #loc8])
#loc66 = loc(fused[#loc10, #loc9])
#loc67 = loc(fused[#loc11, #loc12])
#loc68 = loc(fused[#loc14, #loc8])
#loc69 = loc(fused[#loc15, #loc16])
#loc70 = loc(fused[#loc17, #loc18])
#loc71 = loc(fused[#loc19, #loc20])
#loc72 = loc(fused[#loc25, #loc24])
#loc73 = loc(fused[#loc26, #loc27])
#loc74 = loc(fused[#loc28, #loc29])
#loc75 = loc(fused[#loc31, #loc32])
#loc76 = loc(fused[#loc33, #loc34])
#loc77 = loc(fused[#loc35, #loc36])
#loc78 = loc(fused[#loc38, #loc37])
#loc79 = loc(fused[#loc39, #loc40])
#loc80 = loc(fused[#loc42, #loc36])
#loc81 = loc(fused[#loc43, #loc44])
#loc82 = loc(fused[#loc45, #loc46])
#loc83 = loc(fused[#loc47, #loc48])
#loc84 = loc(fused[#loc49, #loc30])
#loc85 = loc(fused[#loc52, #loc50])
#loc86 = loc(fused[#loc53, #loc54])
#loc87 = loc(fused[#loc55, #loc56])
#loc88 = loc(fused[#loc61, #loc60])
