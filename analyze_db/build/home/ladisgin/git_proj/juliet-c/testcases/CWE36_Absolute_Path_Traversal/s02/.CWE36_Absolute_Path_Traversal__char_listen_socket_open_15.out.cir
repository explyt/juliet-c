!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc307 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":250:10)
#loc308 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":250:14)
#loc309 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":250:20)
#loc310 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":250:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc436 = loc(fused[#loc307, #loc308])
#loc437 = loc(fused[#loc309, #loc310])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s02/CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc323)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc324)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc325)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc326)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc327)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc328)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc329)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc330)
  cir.func private @close(!s32i) -> !s32i loc(#loc331)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc332)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc21)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc333)
  cir.func @_ZN57CWE36_Absolute_Path_Traversal__char_listen_socket_open_153badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc335)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc336)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc336)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc336)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc30)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc337)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc34)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc340)
            %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc341)
            %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc342)
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc343)
            %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc344)
            %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc345)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc45)
            %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc45)
            cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc343)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc47)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc47)
            cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc344)
            %15 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc50)
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
            %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc50)
            cir.store %17, %10 : !u64i, !cir.ptr<!u64i> loc(#loc345)
            cir.scope {
              cir.do {
                %18 = cir.const #cir.int<2> : !s32i loc(#loc54)
                %19 = cir.const #cir.int<1> : !u32i loc(#loc55)
                %20 = cir.cast(integral, %19 : !u32i), !s32i loc(#loc55)
                %21 = cir.const #cir.int<6> : !u32i loc(#loc56)
                %22 = cir.cast(integral, %21 : !u32i), !s32i loc(#loc56)
                %23 = cir.call @socket(%18, %20, %22) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc57)
                cir.store %23, %8 : !s32i, !cir.ptr<!s32i> loc(#loc347)
                cir.scope {
                  %76 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc62)
                  %77 = cir.const #cir.int<1> : !s32i loc(#loc63)
                  %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc63)
                  %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc349)
                  cir.if %79 {
                    cir.break loc(#loc65)
                  } loc(#loc350)
                } loc(#loc348)
                %24 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc351)
                %25 = cir.const #cir.int<0> : !s32i loc(#loc68)
                %26 = cir.const #cir.int<16> : !u64i loc(#loc352)
                cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc353)
                %27 = cir.const #cir.int<2> : !s32i loc(#loc73)
                %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc73)
                %29 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
                cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc354)
                %30 = cir.const #cir.int<0> : !s32i loc(#loc76)
                %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc76)
                %32 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc77)
                %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc78)
                cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc355)
                %34 = cir.const #cir.int<27015> : !s32i loc(#loc80)
                %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc80)
                %36 = cir.call @htons(%35) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc81)
                %37 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
                cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc356)
                cir.scope {
                  %76 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc87)
                  %77 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc358)
                  %78 = cir.const #cir.int<16> : !u64i loc(#loc359)
                  %79 = cir.cast(integral, %78 : !u64i), !u32i loc(#loc359)
                  %80 = cir.call @bind(%76, %77, %79) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc92)
                  %81 = cir.const #cir.int<1> : !s32i loc(#loc93)
                  %82 = cir.unary(minus, %81) : !s32i, !s32i loc(#loc93)
                  %83 = cir.cmp(eq, %80, %82) : !s32i, !cir.bool loc(#loc360)
                  cir.if %83 {
                    cir.break loc(#loc95)
                  } loc(#loc361)
                } loc(#loc357)
                cir.scope {
                  %76 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc98)
                  %77 = cir.const #cir.int<5> : !s32i loc(#loc99)
                  %78 = cir.call @listen(%76, %77) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc100)
                  %79 = cir.const #cir.int<1> : !s32i loc(#loc101)
                  %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc101)
                  %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc363)
                  cir.if %81 {
                    cir.break loc(#loc103)
                  } loc(#loc364)
                } loc(#loc362)
                %38 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc104)
                %39 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc105)
                %40 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc106)
                %41 = cir.call @accept(%38, %39, %40) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc107)
                cir.store %41, %9 : !s32i, !cir.ptr<!s32i> loc(#loc365)
                cir.scope {
                  %76 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc112)
                  %77 = cir.const #cir.int<1> : !s32i loc(#loc113)
                  %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc113)
                  %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc367)
                  cir.if %79 {
                    cir.break loc(#loc115)
                  } loc(#loc368)
                } loc(#loc366)
                %42 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc116)
                %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
                %44 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc118)
                %45 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc119)
                %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc369)
                %47 = cir.const #cir.int<1> : !u64i loc(#loc370)
                %48 = cir.const #cir.int<4096> : !s32i loc(#loc124)
                %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc124)
                %50 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc125)
                %51 = cir.binop(sub, %49, %50) : !u64i loc(#loc371)
                %52 = cir.const #cir.int<1> : !s32i loc(#loc126)
                %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc126)
                %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc372)
                %55 = cir.binop(mul, %47, %54) : !u64i loc(#loc373)
                %56 = cir.const #cir.int<0> : !s32i loc(#loc128)
                %57 = cir.call @recv(%42, %46, %55, %56) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc129)
                %58 = cir.cast(integral, %57 : !s64i), !s32i loc(#loc129)
                cir.store %58, %5 : !s32i, !cir.ptr<!s32i> loc(#loc374)
                cir.scope {
                  %76 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc134)
                  %77 = cir.const #cir.int<1> : !s32i loc(#loc135)
                  %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc135)
                  %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc376)
                  %80 = cir.ternary(%79, true {
                    %81 = cir.const #true loc(#loc136)
                    cir.yield %81 : !cir.bool loc(#loc136)
                  }, false {
                    %81 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc137)
                    %82 = cir.const #cir.int<0> : !s32i loc(#loc138)
                    %83 = cir.cmp(eq, %81, %82) : !s32i, !cir.bool loc(#loc377)
                    %84 = cir.ternary(%83, true {
                      %85 = cir.const #true loc(#loc136)
                      cir.yield %85 : !cir.bool loc(#loc136)
                    }, false {
                      %85 = cir.const #false loc(#loc136)
                      cir.yield %85 : !cir.bool loc(#loc136)
                    }) : (!cir.bool) -> !cir.bool loc(#loc136)
                    cir.yield %84 : !cir.bool loc(#loc136)
                  }) : (!cir.bool) -> !cir.bool loc(#loc136)
                  cir.if %80 {
                    cir.break loc(#loc140)
                  } loc(#loc378)
                } loc(#loc375)
                %59 = cir.const #cir.int<0> : !s8i loc(#loc141)
                %60 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
                %61 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc143)
                %62 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc144)
                %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc144)
                %64 = cir.const #cir.int<1> : !u64i loc(#loc379)
                %65 = cir.binop(div, %63, %64) : !u64i loc(#loc380)
                %66 = cir.binop(add, %61, %65) : !u64i loc(#loc381)
                %67 = cir.ptr_stride(%60 : !cir.ptr<!s8i>, %66 : !u64i), !cir.ptr<!s8i> loc(#loc147)
                cir.store %59, %67 : !s8i, !cir.ptr<!s8i> loc(#loc382)
                %68 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
                %69 = cir.const #cir.int<13> : !s8i loc(#loc149)
                %70 = cir.cast(integral, %69 : !s8i), !s32i loc(#loc149)
                %71 = cir.call @strchr(%68, %70) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc150)
                cir.store %71, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc383)
                cir.scope {
                  %76 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
                  %77 = cir.cast(ptr_to_bool, %76 : !cir.ptr<!s8i>), !cir.bool loc(#loc155)
                  cir.if %77 {
                    %78 = cir.const #cir.int<0> : !s8i loc(#loc157)
                    %79 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
                    cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc386)
                  } loc(#loc385)
                } loc(#loc384)
                %72 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
                %73 = cir.const #cir.int<10> : !s8i loc(#loc161)
                %74 = cir.cast(integral, %73 : !s8i), !s32i loc(#loc161)
                %75 = cir.call @strchr(%72, %74) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc162)
                cir.store %75, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc387)
                cir.scope {
                  %76 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
                  %77 = cir.cast(ptr_to_bool, %76 : !cir.ptr<!s8i>), !cir.bool loc(#loc167)
                  cir.if %77 {
                    %78 = cir.const #cir.int<0> : !s8i loc(#loc169)
                    %79 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
                    cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc390)
                  } loc(#loc389)
                } loc(#loc388)
                cir.yield loc(#loc53)
              } while {
                %18 = cir.const #cir.int<0> : !s32i loc(#loc172)
                %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc172)
                cir.condition(%19) loc(#loc172)
              } loc(#loc346)
            } loc(#loc346)
            cir.scope {
              %18 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc175)
              %19 = cir.const #cir.int<1> : !s32i loc(#loc176)
              %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc176)
              %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc392)
              cir.if %21 {
                %22 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc178)
                %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc179)
              } loc(#loc393)
            } loc(#loc391)
            cir.scope {
              %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc182)
              %19 = cir.const #cir.int<1> : !s32i loc(#loc183)
              %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc183)
              %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc395)
              cir.if %21 {
                %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc185)
                %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc186)
              } loc(#loc396)
            } loc(#loc394)
          } loc(#loc339)
          cir.break loc(#loc187)
        } loc(#loc35)
        cir.case(default, []) {
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc21)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc21)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc189)
          cir.break loc(#loc190)
        } loc(#loc188)
        cir.yield loc(#loc32)
      } loc(#loc32)
    } loc(#loc338)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc398)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc195)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc196)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc197)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc399)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc198)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc199)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc400)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc200)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc401)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc205)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc206)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc207)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc403)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc209)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc210)
        } loc(#loc404)
      } loc(#loc402)
    } loc(#loc397)
    cir.return loc(#loc25)
  } loc(#loc334)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc405)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc213)
  cir.func internal private @_ZN57CWE36_Absolute_Path_Traversal__char_listen_socket_open_15L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc407)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc408)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc408)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc408)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc220)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc409)
    cir.scope {
      %4 = cir.const #cir.int<5> : !s32i loc(#loc224)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc226)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc226)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc227)
          cir.break loc(#loc228)
        } loc(#loc225)
        cir.case(default, []) {
          %5 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc230)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc231)
          %7 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc213)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc213)
          %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc230)
          cir.break loc(#loc232)
        } loc(#loc229)
        cir.yield loc(#loc222)
      } loc(#loc222)
    } loc(#loc410)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc412)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc237)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc238)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc239)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc413)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc240)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc241)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc414)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc242)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc415)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc247)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc248)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc249)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc417)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc251)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc252)
        } loc(#loc418)
      } loc(#loc416)
    } loc(#loc411)
    cir.return loc(#loc215)
  } loc(#loc406)
  cir.func internal private @_ZN57CWE36_Absolute_Path_Traversal__char_listen_socket_open_15L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc420)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc421)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc421)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc421)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc259)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc422)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc263)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %5 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc265)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc266)
          %7 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc267)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc267)
          %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc265)
          cir.break loc(#loc268)
        } loc(#loc264)
        cir.case(default, []) {
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc270)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc270)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc271)
          cir.break loc(#loc272)
        } loc(#loc269)
        cir.yield loc(#loc261)
      } loc(#loc261)
    } loc(#loc423)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc425)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc277)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc278)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc279)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc426)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc280)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc281)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc427)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc282)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc428)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc287)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc288)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc289)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc430)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc291)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc292)
        } loc(#loc431)
      } loc(#loc429)
    } loc(#loc424)
    cir.return loc(#loc254)
  } loc(#loc419)
  cir.func @_ZN57CWE36_Absolute_Path_Traversal__char_listen_socket_open_154goodEv() extra(#fn_attr1) {
    cir.call @_ZN57CWE36_Absolute_Path_Traversal__char_listen_socket_open_15L8goodG2B1Ev() : () -> () loc(#loc295)
    cir.call @_ZN57CWE36_Absolute_Path_Traversal__char_listen_socket_open_15L8goodG2B2Ev() : () -> () loc(#loc296)
    cir.return loc(#loc294)
  } loc(#loc432)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc433)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc434)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc301)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc302)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc303)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc304)
  cir.func @main(%arg0: !s32i loc(fused[#loc307, #loc308]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc309, #loc310])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc436)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc437)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc306)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc311)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc311)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc312)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc313)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc313)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc314)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc301)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc301)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc315)
    cir.call @_ZN57CWE36_Absolute_Path_Traversal__char_listen_socket_open_154goodEv() : () -> () loc(#loc316)
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc302)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc302)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc317)
    %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc303)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc303)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc318)
    cir.call @_ZN57CWE36_Absolute_Path_Traversal__char_listen_socket_open_153badEv() : () -> () loc(#loc319)
    %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc304)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc304)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc320)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc321)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc438)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc438)
    cir.return %15 : !s32i loc(#loc438)
  } loc(#loc435)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s02/CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/netinet/in.h":404:1)
#loc6 = loc("/usr/include/netinet/in.h":405:40)
#loc7 = loc("/usr/include/sys/socket.h":112:1)
#loc8 = loc("/usr/include/sys/socket.h":113:6)
#loc9 = loc("/usr/include/sys/socket.h":296:1)
#loc10 = loc("/usr/include/sys/socket.h":296:39)
#loc11 = loc("/usr/include/sys/socket.h":306:1)
#loc12 = loc("/usr/include/sys/socket.h":307:38)
#loc13 = loc("/usr/include/sys/socket.h":145:1)
#loc14 = loc("/usr/include/sys/socket.h":145:68)
#loc15 = loc("/usr/include/string.h":226:1)
#loc16 = loc("/usr/include/string.h":227:50)
#loc17 = loc("/usr/include/unistd.h":358:1)
#loc18 = loc("/usr/include/unistd.h":358:27)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc21 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":147:19)
#loc22 = loc("/usr/include/fcntl.h":209:1)
#loc23 = loc("/usr/include/fcntl.h":209:56)
#loc24 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":57:1)
#loc25 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":159:1)
#loc26 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":59:5)
#loc27 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":59:12)
#loc28 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":60:5)
#loc29 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":60:37)
#loc30 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":61:12)
#loc31 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":61:5)
#loc32 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":62:5)
#loc33 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":149:5)
#loc34 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":62:12)
#loc35 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":64:5)
#loc36 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":65:5)
#loc37 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":143:5)
#loc38 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":70:9)
#loc39 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":70:13)
#loc40 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":71:9)
#loc41 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":71:28)
#loc42 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":72:9)
#loc43 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":72:15)
#loc44 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":73:9)
#loc45 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":73:31)
#loc46 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":74:9)
#loc47 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":74:31)
#loc48 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":75:9)
#loc49 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":75:37)
#loc50 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":75:26)
#loc51 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":75:33)
#loc52 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":76:9)
#loc53 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":128:17)
#loc54 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":86:35)
#loc55 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":86:44)
#loc56 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":86:57)
#loc57 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":86:28)
#loc58 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":86:13)
#loc59 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":86:68)
#loc60 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":87:13)
#loc61 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":90:13)
#loc62 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":87:17)
#loc63 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":87:33)
#loc64 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":88:13)
#loc65 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":89:17)
#loc66 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":91:20)
#loc67 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":91:21)
#loc68 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":91:30)
#loc69 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":91:33)
#loc70 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":91:47)
#loc71 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":91:13)
#loc72 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":91:48)
#loc73 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":92:34)
#loc74 = loc("/usr/include/netinet/in.h":249:5)
#loc75 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":92:13)
#loc76 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":93:39)
#loc77 = loc("/usr/include/netinet/in.h":251:20)
#loc78 = loc("/usr/include/netinet/in.h":33:15)
#loc79 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":93:13)
#loc80 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":94:38)
#loc81 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":94:32)
#loc82 = loc("/usr/include/netinet/in.h":250:15)
#loc83 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":94:13)
#loc84 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":94:46)
#loc85 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":95:13)
#loc86 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":98:13)
#loc87 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":95:22)
#loc88 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":95:54)
#loc89 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":95:55)
#loc90 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":95:64)
#loc91 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":95:78)
#loc92 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":95:17)
#loc93 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":95:84)
#loc94 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":96:13)
#loc95 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":97:17)
#loc96 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":99:13)
#loc97 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":102:13)
#loc98 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":99:24)
#loc99 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":99:38)
#loc100 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":99:17)
#loc101 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":99:57)
#loc102 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":100:13)
#loc103 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":101:17)
#loc104 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":103:35)
#loc105 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":103:49)
#loc106 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":103:55)
#loc107 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":103:28)
#loc108 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":103:13)
#loc109 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":103:59)
#loc110 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":104:13)
#loc111 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":107:13)
#loc112 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":104:17)
#loc113 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":104:33)
#loc114 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":105:13)
#loc115 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":106:17)
#loc116 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":109:31)
#loc117 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":109:54)
#loc118 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":109:61)
#loc119 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":109:59)
#loc120 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":109:45)
#loc121 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":109:68)
#loc122 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":109:71)
#loc123 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":109:82)
#loc124 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":109:87)
#loc125 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":109:102)
#loc126 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":109:112)
#loc127 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":109:113)
#loc128 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":109:116)
#loc129 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":109:26)
#loc130 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":109:13)
#loc131 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":109:117)
#loc132 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":110:13)
#loc133 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":113:13)
#loc134 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":110:17)
#loc135 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":110:31)
#loc136 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":110:44)
#loc137 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":110:47)
#loc138 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":110:61)
#loc139 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":111:13)
#loc140 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":112:17)
#loc141 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":115:57)
#loc142 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":115:13)
#loc143 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":115:18)
#loc144 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":115:28)
#loc145 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":115:41)
#loc146 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":115:52)
#loc147 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":115:53)
#loc148 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":117:30)
#loc149 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":117:36)
#loc150 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":117:23)
#loc151 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":117:13)
#loc152 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":117:40)
#loc153 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":118:13)
#loc154 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":121:13)
#loc155 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":118:17)
#loc156 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":119:13)
#loc157 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":120:28)
#loc158 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":120:18)
#loc159 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":120:17)
#loc160 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":122:30)
#loc161 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":122:36)
#loc162 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":122:23)
#loc163 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":122:13)
#loc164 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":122:40)
#loc165 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":123:13)
#loc166 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":126:13)
#loc167 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":123:17)
#loc168 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":124:13)
#loc169 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":125:28)
#loc170 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":125:18)
#loc171 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":125:17)
#loc172 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":128:16)
#loc173 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":129:9)
#loc174 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":132:9)
#loc175 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":129:13)
#loc176 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":129:29)
#loc177 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":130:9)
#loc178 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":131:26)
#loc179 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":131:13)
#loc180 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":133:9)
#loc181 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":136:9)
#loc182 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":133:13)
#loc183 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":133:29)
#loc184 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":134:9)
#loc185 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":135:26)
#loc186 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":135:13)
#loc187 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":144:5)
#loc188 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":145:5)
#loc189 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":147:9)
#loc190 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":148:9)
#loc191 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":150:5)
#loc192 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":158:5)
#loc193 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":151:9)
#loc194 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":151:13)
#loc195 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":153:25)
#loc196 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":153:31)
#loc197 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":153:38)
#loc198 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":153:47)
#loc199 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":153:55)
#loc200 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":153:20)
#loc201 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":153:9)
#loc202 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":153:63)
#loc203 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":154:9)
#loc204 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":157:9)
#loc205 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":154:13)
#loc206 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":154:26)
#loc207 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":154:25)
#loc208 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":155:9)
#loc209 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":156:19)
#loc210 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":156:13)
#loc211 = loc("/usr/include/string.h":149:1)
#loc212 = loc("/usr/include/string.h":150:14)
#loc213 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":183:22)
#loc214 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":166:1)
#loc215 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":196:1)
#loc216 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":168:5)
#loc217 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":168:12)
#loc218 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":169:5)
#loc219 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":169:37)
#loc220 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":170:12)
#loc221 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":170:5)
#loc222 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":171:5)
#loc223 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":186:5)
#loc224 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":171:12)
#loc225 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":173:5)
#loc226 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":175:19)
#loc227 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":175:9)
#loc228 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":176:9)
#loc229 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":177:5)
#loc230 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":183:9)
#loc231 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":183:16)
#loc232 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":185:9)
#loc233 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":187:5)
#loc234 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":195:5)
#loc235 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":188:9)
#loc236 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":188:13)
#loc237 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":190:25)
#loc238 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":190:31)
#loc239 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":190:38)
#loc240 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":190:47)
#loc241 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":190:55)
#loc242 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":190:20)
#loc243 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":190:9)
#loc244 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":190:63)
#loc245 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":191:9)
#loc246 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":194:9)
#loc247 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":191:13)
#loc248 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":191:26)
#loc249 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":191:25)
#loc250 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":192:9)
#loc251 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":193:19)
#loc252 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":193:13)
#loc253 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":199:1)
#loc254 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":229:1)
#loc255 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":201:5)
#loc256 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":201:12)
#loc257 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":202:5)
#loc258 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":202:37)
#loc259 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":203:12)
#loc260 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":203:5)
#loc261 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":204:5)
#loc262 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":219:5)
#loc263 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":204:12)
#loc264 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":206:5)
#loc265 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":212:9)
#loc266 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":212:16)
#loc267 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":212:22)
#loc268 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":214:9)
#loc269 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":215:5)
#loc270 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":217:19)
#loc271 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":217:9)
#loc272 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":218:9)
#loc273 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":220:5)
#loc274 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":228:5)
#loc275 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":221:9)
#loc276 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":221:13)
#loc277 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":223:25)
#loc278 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":223:31)
#loc279 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":223:38)
#loc280 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":223:47)
#loc281 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":223:55)
#loc282 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":223:20)
#loc283 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":223:9)
#loc284 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":223:63)
#loc285 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":224:9)
#loc286 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":227:9)
#loc287 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":224:13)
#loc288 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":224:26)
#loc289 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":224:25)
#loc290 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":225:9)
#loc291 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":226:19)
#loc292 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":226:13)
#loc293 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":231:1)
#loc294 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":235:1)
#loc295 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":233:5)
#loc296 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":234:5)
#loc297 = loc("/usr/include/stdlib.h":575:1)
#loc298 = loc("/usr/include/stdlib.h":575:41)
#loc299 = loc("/usr/include/time.h":76:1)
#loc300 = loc("/usr/include/time.h":76:38)
#loc301 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":255:15)
#loc302 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":257:15)
#loc303 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":260:15)
#loc304 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":262:15)
#loc305 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":250:1)
#loc306 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":265:1)
#loc311 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":251:1)
#loc312 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":253:27)
#loc313 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":253:22)
#loc314 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":253:5)
#loc315 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":255:5)
#loc316 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":256:5)
#loc317 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":257:5)
#loc318 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":260:5)
#loc319 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":261:5)
#loc320 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":262:5)
#loc321 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":264:12)
#loc322 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_open_15.cpp":264:5)
#loc323 = loc(fused[#loc1, #loc2])
#loc324 = loc(fused[#loc3, #loc4])
#loc325 = loc(fused[#loc5, #loc6])
#loc326 = loc(fused[#loc7, #loc8])
#loc327 = loc(fused[#loc9, #loc10])
#loc328 = loc(fused[#loc11, #loc12])
#loc329 = loc(fused[#loc13, #loc14])
#loc330 = loc(fused[#loc15, #loc16])
#loc331 = loc(fused[#loc17, #loc18])
#loc332 = loc(fused[#loc19, #loc20])
#loc333 = loc(fused[#loc22, #loc23])
#loc334 = loc(fused[#loc24, #loc25])
#loc335 = loc(fused[#loc26, #loc27])
#loc336 = loc(fused[#loc28, #loc29])
#loc337 = loc(fused[#loc31, #loc30])
#loc338 = loc(fused[#loc32, #loc33])
#loc339 = loc(fused[#loc36, #loc37])
#loc340 = loc(fused[#loc38, #loc39])
#loc341 = loc(fused[#loc40, #loc41])
#loc342 = loc(fused[#loc42, #loc43])
#loc343 = loc(fused[#loc44, #loc45])
#loc344 = loc(fused[#loc46, #loc47])
#loc345 = loc(fused[#loc48, #loc49])
#loc346 = loc(fused[#loc52, #loc53])
#loc347 = loc(fused[#loc58, #loc59])
#loc348 = loc(fused[#loc60, #loc61])
#loc349 = loc(fused[#loc62, #loc63])
#loc350 = loc(fused[#loc64, #loc61])
#loc351 = loc(fused[#loc66, #loc67])
#loc352 = loc(fused[#loc69, #loc70])
#loc353 = loc(fused[#loc71, #loc72])
#loc354 = loc(fused[#loc75, #loc73])
#loc355 = loc(fused[#loc79, #loc76])
#loc356 = loc(fused[#loc83, #loc84])
#loc357 = loc(fused[#loc85, #loc86])
#loc358 = loc(fused[#loc88, #loc89])
#loc359 = loc(fused[#loc90, #loc91])
#loc360 = loc(fused[#loc92, #loc93])
#loc361 = loc(fused[#loc94, #loc86])
#loc362 = loc(fused[#loc96, #loc97])
#loc363 = loc(fused[#loc100, #loc101])
#loc364 = loc(fused[#loc102, #loc97])
#loc365 = loc(fused[#loc108, #loc109])
#loc366 = loc(fused[#loc110, #loc111])
#loc367 = loc(fused[#loc112, #loc113])
#loc368 = loc(fused[#loc114, #loc111])
#loc369 = loc(fused[#loc120, #loc121])
#loc370 = loc(fused[#loc122, #loc123])
#loc371 = loc(fused[#loc124, #loc125])
#loc372 = loc(fused[#loc124, #loc126])
#loc373 = loc(fused[#loc122, #loc127])
#loc374 = loc(fused[#loc130, #loc131])
#loc375 = loc(fused[#loc132, #loc133])
#loc376 = loc(fused[#loc134, #loc135])
#loc377 = loc(fused[#loc137, #loc138])
#loc378 = loc(fused[#loc139, #loc133])
#loc379 = loc(fused[#loc145, #loc146])
#loc380 = loc(fused[#loc144, #loc146])
#loc381 = loc(fused[#loc143, #loc146])
#loc382 = loc(fused[#loc142, #loc141])
#loc383 = loc(fused[#loc151, #loc152])
#loc384 = loc(fused[#loc153, #loc154])
#loc385 = loc(fused[#loc156, #loc154])
#loc386 = loc(fused[#loc159, #loc157])
#loc387 = loc(fused[#loc163, #loc164])
#loc388 = loc(fused[#loc165, #loc166])
#loc389 = loc(fused[#loc168, #loc166])
#loc390 = loc(fused[#loc171, #loc169])
#loc391 = loc(fused[#loc173, #loc174])
#loc392 = loc(fused[#loc175, #loc176])
#loc393 = loc(fused[#loc177, #loc174])
#loc394 = loc(fused[#loc180, #loc181])
#loc395 = loc(fused[#loc182, #loc183])
#loc396 = loc(fused[#loc184, #loc181])
#loc397 = loc(fused[#loc191, #loc192])
#loc398 = loc(fused[#loc193, #loc194])
#loc399 = loc(fused[#loc196, #loc197])
#loc400 = loc(fused[#loc198, #loc199])
#loc401 = loc(fused[#loc201, #loc202])
#loc402 = loc(fused[#loc203, #loc204])
#loc403 = loc(fused[#loc205, #loc206])
#loc404 = loc(fused[#loc208, #loc204])
#loc405 = loc(fused[#loc211, #loc212])
#loc406 = loc(fused[#loc214, #loc215])
#loc407 = loc(fused[#loc216, #loc217])
#loc408 = loc(fused[#loc218, #loc219])
#loc409 = loc(fused[#loc221, #loc220])
#loc410 = loc(fused[#loc222, #loc223])
#loc411 = loc(fused[#loc233, #loc234])
#loc412 = loc(fused[#loc235, #loc236])
#loc413 = loc(fused[#loc238, #loc239])
#loc414 = loc(fused[#loc240, #loc241])
#loc415 = loc(fused[#loc243, #loc244])
#loc416 = loc(fused[#loc245, #loc246])
#loc417 = loc(fused[#loc247, #loc248])
#loc418 = loc(fused[#loc250, #loc246])
#loc419 = loc(fused[#loc253, #loc254])
#loc420 = loc(fused[#loc255, #loc256])
#loc421 = loc(fused[#loc257, #loc258])
#loc422 = loc(fused[#loc260, #loc259])
#loc423 = loc(fused[#loc261, #loc262])
#loc424 = loc(fused[#loc273, #loc274])
#loc425 = loc(fused[#loc275, #loc276])
#loc426 = loc(fused[#loc278, #loc279])
#loc427 = loc(fused[#loc280, #loc281])
#loc428 = loc(fused[#loc283, #loc284])
#loc429 = loc(fused[#loc285, #loc286])
#loc430 = loc(fused[#loc287, #loc288])
#loc431 = loc(fused[#loc290, #loc286])
#loc432 = loc(fused[#loc293, #loc294])
#loc433 = loc(fused[#loc297, #loc298])
#loc434 = loc(fused[#loc299, #loc300])
#loc435 = loc(fused[#loc305, #loc306])
#loc438 = loc(fused[#loc322, #loc321])
