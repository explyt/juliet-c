!s32i = !cir.int<s, 32>
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc3 = loc("CWE190_Integer_Overflow__int_max_add_84_bad.cpp":24:46)
#loc4 = loc("CWE190_Integer_Overflow__int_max_add_84_bad.cpp":24:90)
#loc5 = loc("CWE190_Integer_Overflow__int_max_add_84_bad.cpp":24:94)
#loc16 = loc("CWE190_Integer_Overflow__int_max_add_84_bad.cpp":31:46)
!ty_CWE190_Integer_Overflow__int_max_add_843A3ACWE190_Integer_Overflow__int_max_add_84_bad = !cir.record<class "CWE190_Integer_Overflow__int_max_add_84::CWE190_Integer_Overflow__int_max_add_84_bad" {!s32i} #cir.record.decl.ast>
#loc26 = loc(fused[#loc4, #loc5])
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_max_add_84_bad.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func @_ZN39CWE190_Integer_Overflow__int_max_add_8443CWE190_Integer_Overflow__int_max_add_84_badC2Ei(%arg0: !cir.ptr<!ty_CWE190_Integer_Overflow__int_max_add_843A3ACWE190_Integer_Overflow__int_max_add_84_bad> loc("CWE190_Integer_Overflow__int_max_add_84_bad.cpp":24:46), %arg1: !s32i loc(fused[#loc4, #loc5])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_CWE190_Integer_Overflow__int_max_add_843A3ACWE190_Integer_Overflow__int_max_add_84_bad>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__int_max_add_843A3ACWE190_Integer_Overflow__int_max_add_84_bad>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc26)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE190_Integer_Overflow__int_max_add_843A3ACWE190_Integer_Overflow__int_max_add_84_bad>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__int_max_add_843A3ACWE190_Integer_Overflow__int_max_add_84_bad>> loc(#loc6)
    cir.store %arg1, %1 : !s32i, !cir.ptr<!s32i> loc(#loc6)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__int_max_add_843A3ACWE190_Integer_Overflow__int_max_add_84_bad>>, !cir.ptr<!ty_CWE190_Integer_Overflow__int_max_add_843A3ACWE190_Integer_Overflow__int_max_add_84_bad> loc(#loc3)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc7)
    %4 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int_max_add_843A3ACWE190_Integer_Overflow__int_max_add_84_bad> -> !cir.ptr<!s32i> loc(#loc8)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc27)
    %5 = cir.const #cir.int<2147483647> : !s32i loc(#loc10)
    %6 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int_max_add_843A3ACWE190_Integer_Overflow__int_max_add_84_bad> -> !cir.ptr<!s32i> loc(#loc8)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc28)
    cir.return loc(#loc2)
  } loc(#loc25)
  cir.func private @_ZN39CWE190_Integer_Overflow__int_max_add_8443CWE190_Integer_Overflow__int_max_add_84_badC1Ei(!cir.ptr<!ty_CWE190_Integer_Overflow__int_max_add_843A3ACWE190_Integer_Overflow__int_max_add_84_bad>, !s32i) alias(@_ZN39CWE190_Integer_Overflow__int_max_add_8443CWE190_Integer_Overflow__int_max_add_84_badC2Ei) loc(#loc25)
  cir.func private @printIntLine(!s32i) loc(#loc29)
  cir.func @_ZN39CWE190_Integer_Overflow__int_max_add_8443CWE190_Integer_Overflow__int_max_add_84_badD2Ev(%arg0: !cir.ptr<!ty_CWE190_Integer_Overflow__int_max_add_843A3ACWE190_Integer_Overflow__int_max_add_84_bad> loc("CWE190_Integer_Overflow__int_max_add_84_bad.cpp":31:46)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE190_Integer_Overflow__int_max_add_843A3ACWE190_Integer_Overflow__int_max_add_84_bad>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__int_max_add_843A3ACWE190_Integer_Overflow__int_max_add_84_bad>>, ["this", init] {alignment = 8 : i64} loc(#loc16)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE190_Integer_Overflow__int_max_add_843A3ACWE190_Integer_Overflow__int_max_add_84_bad>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__int_max_add_843A3ACWE190_Integer_Overflow__int_max_add_84_bad>> loc(#loc17)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__int_max_add_843A3ACWE190_Integer_Overflow__int_max_add_84_bad>>, !cir.ptr<!ty_CWE190_Integer_Overflow__int_max_add_843A3ACWE190_Integer_Overflow__int_max_add_84_bad> loc(#loc16)
    cir.scope {
      %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc32)
      %3 = cir.get_member %1[0] {name = "data"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int_max_add_843A3ACWE190_Integer_Overflow__int_max_add_84_bad> -> !cir.ptr<!s32i> loc(#loc8)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc22)
      %5 = cir.const #cir.int<1> : !s32i loc(#loc21)
      %6 = cir.binop(add, %4, %5) nsw : !s32i loc(#loc22)
      cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc32)
      %7 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc23)
      cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc24)
    } loc(#loc31)
    cir.return loc(#loc15)
  } loc(#loc30)
  cir.func private @_ZN39CWE190_Integer_Overflow__int_max_add_8443CWE190_Integer_Overflow__int_max_add_84_badD1Ev(!cir.ptr<!ty_CWE190_Integer_Overflow__int_max_add_843A3ACWE190_Integer_Overflow__int_max_add_84_bad>) alias(@_ZN39CWE190_Integer_Overflow__int_max_add_8443CWE190_Integer_Overflow__int_max_add_84_badD2Ev) loc(#loc30)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_max_add_84_bad.cpp":0:0)
#loc1 = loc("CWE190_Integer_Overflow__int_max_add_84_bad.cpp":24:1)
#loc2 = loc("CWE190_Integer_Overflow__int_max_add_84_bad.cpp":29:1)
#loc6 = loc("CWE190_Integer_Overflow__int_max_add_84_bad.cpp":25:1)
#loc7 = loc("CWE190_Integer_Overflow__int_max_add_84_bad.cpp":26:12)
#loc8 = loc("./CWE190_Integer_Overflow__int_max_add_84.h":32:9)
#loc9 = loc("CWE190_Integer_Overflow__int_max_add_84_bad.cpp":26:5)
#loc10 = loc("CWE190_Integer_Overflow__int_max_add_84_bad.cpp":28:12)
#loc11 = loc("CWE190_Integer_Overflow__int_max_add_84_bad.cpp":28:5)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("CWE190_Integer_Overflow__int_max_add_84_bad.cpp":31:1)
#loc15 = loc("CWE190_Integer_Overflow__int_max_add_84_bad.cpp":38:1)
#loc17 = loc("CWE190_Integer_Overflow__int_max_add_84_bad.cpp":32:1)
#loc18 = loc("CWE190_Integer_Overflow__int_max_add_84_bad.cpp":33:5)
#loc19 = loc("CWE190_Integer_Overflow__int_max_add_84_bad.cpp":37:5)
#loc20 = loc("CWE190_Integer_Overflow__int_max_add_84_bad.cpp":35:9)
#loc21 = loc("CWE190_Integer_Overflow__int_max_add_84_bad.cpp":35:29)
#loc22 = loc("CWE190_Integer_Overflow__int_max_add_84_bad.cpp":35:22)
#loc23 = loc("CWE190_Integer_Overflow__int_max_add_84_bad.cpp":36:22)
#loc24 = loc("CWE190_Integer_Overflow__int_max_add_84_bad.cpp":36:9)
#loc25 = loc(fused[#loc1, #loc2])
#loc27 = loc(fused[#loc9, #loc7])
#loc28 = loc(fused[#loc11, #loc10])
#loc29 = loc(fused[#loc12, #loc13])
#loc30 = loc(fused[#loc14, #loc15])
#loc31 = loc(fused[#loc18, #loc19])
#loc32 = loc(fused[#loc20, #loc21])
