!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_console_execlp_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc138)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc139)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc140)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc141)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.func private  @execlp(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc142)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"sh\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc12)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc13)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_console_execlp_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc144)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc145)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc145)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc145)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc20)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
    cir.scope {
      %13 = cir.const #cir.int<1> : !s32i loc(#loc24)
      %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc24)
      cir.if %14 {
        cir.scope {
          %15 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc150)
          %16 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc30)
          %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
          %18 = cir.call @strlen(%17) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc30)
          cir.store %18, %15 : !u64i, !cir.ptr<!u64i> loc(#loc150)
          cir.scope {
            %19 = cir.const #cir.int<100> : !s32i loc(#loc34)
            %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc34)
            %21 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc35)
            %22 = cir.binop(sub, %20, %21) : !u64i loc(#loc152)
            %23 = cir.const #cir.int<1> : !s32i loc(#loc36)
            %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc36)
            %25 = cir.cmp(gt, %22, %24) : !u64i, !s32i loc(#loc153)
            %26 = cir.cast(int_to_bool, %25 : !s32i), !cir.bool loc(#loc37)
            cir.if %26 {
              cir.scope {
                %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
                %28 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc42)
                %29 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %28 : !u64i), !cir.ptr<!s8i> loc(#loc43)
                %30 = cir.const #cir.int<100> : !s32i loc(#loc44)
                %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc44)
                %32 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc45)
                %33 = cir.binop(sub, %31, %32) : !u64i loc(#loc156)
                %34 = cir.cast(integral, %33 : !u64i), !s32i loc(#loc156)
                %35 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc140)
                %36 = cir.load %35 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc46)
                %37 = cir.call @fgets(%29, %34, %36) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc47)
                %38 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc48)
                %39 = cir.cast(bitcast, %38 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc48)
                %40 = cir.cmp(ne, %37, %39) : !cir.ptr<!s8i>, !s32i loc(#loc157)
                %41 = cir.cast(int_to_bool, %40 : !s32i), !cir.bool loc(#loc49)
                cir.if %41 {
                  %42 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc53)
                  %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
                  %44 = cir.call @strlen(%43) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc53)
                  cir.store %44, %15 : !u64i, !cir.ptr<!u64i> loc(#loc159)
                  cir.scope {
                    %45 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc59)
                    %46 = cir.const #cir.int<0> : !s32i loc(#loc60)
                    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc60)
                    %48 = cir.cmp(gt, %45, %47) : !u64i, !s32i loc(#loc161)
                    %49 = cir.cast(int_to_bool, %48 : !s32i), !cir.bool loc(#loc61)
                    %50 = cir.ternary(%49, true {
                      %51 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
                      %52 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc64)
                      %53 = cir.const #cir.int<1> : !s32i loc(#loc65)
                      %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc65)
                      %55 = cir.binop(sub, %52, %54) : !u64i loc(#loc162)
                      %56 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %55 : !u64i), !cir.ptr<!s8i> loc(#loc66)
                      %57 = cir.load %56 : !cir.ptr<!s8i>, !s8i loc(#loc63)
                      %58 = cir.cast(integral, %57 : !s8i), !s32i loc(#loc63)
                      %59 = cir.const #cir.int<10> : !s32i loc(#loc67)
                      %60 = cir.cmp(eq, %58, %59) : !s32i, !s32i loc(#loc163)
                      %61 = cir.cast(int_to_bool, %60 : !s32i), !cir.bool loc(#loc68)
                      %62 = cir.ternary(%61, true {
                        %63 = cir.const #true loc(#loc62)
                        cir.yield %63 : !cir.bool loc(#loc62)
                      }, false {
                        %63 = cir.const #false loc(#loc62)
                        cir.yield %63 : !cir.bool loc(#loc62)
                      }) : (!cir.bool) -> !cir.bool loc(#loc62)
                      cir.yield %62 : !cir.bool loc(#loc62)
                    }, false {
                      %51 = cir.const #false loc(#loc62)
                      cir.yield %51 : !cir.bool loc(#loc62)
                    }) : (!cir.bool) -> !cir.bool loc(#loc62)
                    cir.if %50 {
                      %51 = cir.const #cir.int<0> : !s32i loc(#loc70)
                      %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc70)
                      %53 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
                      %54 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc72)
                      %55 = cir.const #cir.int<1> : !s32i loc(#loc73)
                      %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc73)
                      %57 = cir.binop(sub, %54, %56) : !u64i loc(#loc165)
                      %58 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %57 : !u64i), !cir.ptr<!s8i> loc(#loc74)
                      cir.store %52, %58 : !s8i, !cir.ptr<!s8i> loc(#loc166)
                    } loc(#loc164)
                  } loc(#loc160)
                } else {
                  %42 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
                  %43 = cir.cast(array_to_ptrdecay, %42 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
                  cir.call @printLine(%43) : (!cir.ptr<!s8i>) -> () loc(#loc75)
                  %44 = cir.const #cir.int<0> : !s32i loc(#loc76)
                  %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc76)
                  %46 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
                  %47 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc78)
                  %48 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %47 : !u64i), !cir.ptr<!s8i> loc(#loc79)
                  cir.store %45, %48 : !s8i, !cir.ptr<!s8i> loc(#loc167)
                } loc(#loc158)
              } loc(#loc155)
            } loc(#loc154)
          } loc(#loc151)
        } loc(#loc149)
      } loc(#loc148)
    } loc(#loc147)
    %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc12)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc12)
    %6 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc80)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc80)
    %8 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc13)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc13)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc82)
    %12 = cir.call @execlp(%5, %7, %9, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc83)
    cir.return loc(#loc15)
  } loc(#loc143)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_console_execlp_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc169)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc86)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc170)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc88)
    cir.return loc(#loc85)
  } loc(#loc168)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc90)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc171)
  cir.global "private"  constant internal dsolocal @".str4" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc93)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc173)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc174)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc174)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc174)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc100)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc175)
    cir.scope {
      %13 = cir.const #cir.int<0> : !s32i loc(#loc104)
      %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc104)
      cir.if %14 {
        %15 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc90)
        %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc90)
        cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc108)
      } else {
        %15 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc109)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
        %17 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc93)
        %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc93)
        %19 = cir.call @strcat(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc109)
      } loc(#loc177)
    } loc(#loc176)
    %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc111)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc111)
    %6 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc112)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc112)
    %8 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc113)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc113)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc115)
    %12 = cir.call @execlp(%5, %7, %9, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc116)
    cir.return loc(#loc95)
  } loc(#loc172)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc179)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc180)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc180)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc180)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc123)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc181)
    cir.scope {
      %13 = cir.const #cir.int<1> : !s32i loc(#loc127)
      %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc127)
      cir.if %14 {
        %15 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc129)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
        %17 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc131)
        %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc131)
        %19 = cir.call @strcat(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc129)
      } loc(#loc183)
    } loc(#loc182)
    %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc132)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc132)
    %6 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc133)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc133)
    %8 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc134)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc134)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc136)
    %12 = cir.call @execlp(%5, %7, %9, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc137)
    cir.return loc(#loc118)
  } loc(#loc178)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_console_execlp_04.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":78:31)
#loc10 = loc("/usr/include/unistd.h":605:1)
#loc11 = loc("/usr/include/unistd.h":606:14)
#loc12 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":88:12)
#loc13 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":88:38)
#loc14 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":52:1)
#loc15 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":89:1)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":54:5)
#loc17 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":54:12)
#loc18 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":55:5)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":55:28)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":56:12)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":56:5)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":57:5)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":84:5)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":57:8)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":58:5)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":59:9)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":83:9)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":61:13)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":61:41)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":61:30)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":61:37)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":63:13)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":82:13)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":63:17)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":63:21)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":63:31)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":63:29)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":64:13)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":66:17)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":81:17)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":66:27)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":66:32)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":66:31)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":66:47)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":66:51)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":66:61)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":66:21)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":66:71)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":66:68)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":67:17)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":75:17)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":77:17)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":70:31)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":70:38)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":70:21)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":70:42)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":71:21)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":74:21)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":71:25)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":71:35)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":71:33)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":71:37)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":71:40)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":71:45)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":71:53)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":71:54)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":71:59)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":71:56)
#loc69 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":72:21)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":73:43)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":73:25)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":73:30)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":73:38)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":73:39)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":78:21)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":80:37)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":80:21)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":80:26)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":80:33)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":88:25)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":88:52)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":88:66)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":88:5)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":134:1)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":138:1)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":136:5)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":136:14)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":137:5)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":137:14)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":104:19)
#loc91 = loc("/usr/include/string.h":149:1)
#loc92 = loc("/usr/include/string.h":150:14)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":109:22)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":96:1)
#loc95 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":115:1)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":98:5)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":98:12)
#loc98 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":99:5)
#loc99 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":99:28)
#loc100 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":100:12)
#loc101 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":100:5)
#loc102 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":101:5)
#loc103 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":110:5)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":101:8)
#loc105 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":102:5)
#loc106 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":105:5)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":107:5)
#loc108 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":104:9)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":109:9)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":109:16)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":114:12)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":114:25)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":114:38)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":114:52)
#loc115 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":114:66)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":114:5)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":118:1)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":132:1)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":120:5)
#loc120 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":120:12)
#loc121 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":121:5)
#loc122 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":121:28)
#loc123 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":122:12)
#loc124 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":122:5)
#loc125 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":123:5)
#loc126 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":127:5)
#loc127 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":123:8)
#loc128 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":124:5)
#loc129 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":126:9)
#loc130 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":126:16)
#loc131 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":126:22)
#loc132 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":131:12)
#loc133 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":131:25)
#loc134 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":131:38)
#loc135 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":131:52)
#loc136 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":131:66)
#loc137 = loc("CWE78_OS_Command_Injection__char_console_execlp_04.c":131:5)
#loc138 = loc(fused[#loc1, #loc2])
#loc139 = loc(fused[#loc3, #loc4])
#loc140 = loc(fused[#loc5, #loc6])
#loc141 = loc(fused[#loc7, #loc8])
#loc142 = loc(fused[#loc10, #loc11])
#loc143 = loc(fused[#loc14, #loc15])
#loc144 = loc(fused[#loc16, #loc17])
#loc145 = loc(fused[#loc18, #loc19])
#loc146 = loc(fused[#loc21, #loc20])
#loc147 = loc(fused[#loc22, #loc23])
#loc148 = loc(fused[#loc25, #loc23])
#loc149 = loc(fused[#loc26, #loc27])
#loc150 = loc(fused[#loc28, #loc29])
#loc151 = loc(fused[#loc32, #loc33])
#loc152 = loc(fused[#loc34, #loc35])
#loc153 = loc(fused[#loc34, #loc36])
#loc154 = loc(fused[#loc38, #loc33])
#loc155 = loc(fused[#loc39, #loc40])
#loc156 = loc(fused[#loc44, #loc45])
#loc157 = loc(fused[#loc47, #loc48])
#loc158 = loc(fused[#loc50, #loc51, #loc52, #loc40])
#loc159 = loc(fused[#loc55, #loc56])
#loc160 = loc(fused[#loc57, #loc58])
#loc161 = loc(fused[#loc59, #loc60])
#loc162 = loc(fused[#loc64, #loc65])
#loc163 = loc(fused[#loc63, #loc67])
#loc164 = loc(fused[#loc69, #loc58])
#loc165 = loc(fused[#loc72, #loc73])
#loc166 = loc(fused[#loc71, #loc70])
#loc167 = loc(fused[#loc77, #loc76])
#loc168 = loc(fused[#loc84, #loc85])
#loc169 = loc(fused[#loc86, #loc87])
#loc170 = loc(fused[#loc88, #loc89])
#loc171 = loc(fused[#loc91, #loc92])
#loc172 = loc(fused[#loc94, #loc95])
#loc173 = loc(fused[#loc96, #loc97])
#loc174 = loc(fused[#loc98, #loc99])
#loc175 = loc(fused[#loc101, #loc100])
#loc176 = loc(fused[#loc102, #loc103])
#loc177 = loc(fused[#loc105, #loc106, #loc107, #loc103])
#loc178 = loc(fused[#loc117, #loc118])
#loc179 = loc(fused[#loc119, #loc120])
#loc180 = loc(fused[#loc121, #loc122])
#loc181 = loc(fused[#loc124, #loc123])
#loc182 = loc(fused[#loc125, #loc126])
#loc183 = loc(fused[#loc128, #loc126])
