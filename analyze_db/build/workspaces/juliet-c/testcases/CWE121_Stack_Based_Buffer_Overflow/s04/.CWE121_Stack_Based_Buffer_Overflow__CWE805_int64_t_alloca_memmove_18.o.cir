!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @printLongLongLine(!s64i) loc(#loc63)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc65)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc66)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc8)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc8)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc8)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc8)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc8)
    %7 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc67)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc8)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc8)
    cir.store %9, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc66)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc10)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc10)
    %12 = cir.const #cir.int<8> : !u64i loc(#loc10)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc10)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc10)
    cir.store %16, %7 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc67)
    cir.goto "source" loc(#loc68)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc13)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc14)
    cir.store %17, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc69)
    cir.scope {
      %18 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc71)
      %19 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc71)
      cir.store %19, %18 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc71)
      %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc20)
      %21 = cir.cast(bitcast, %20 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc20)
      %22 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc21)
      %23 = cir.cast(bitcast, %22 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc21)
      %24 = cir.const #cir.int<100> : !s32i loc(#loc22)
      %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc22)
      %26 = cir.const #cir.int<8> : !u64i loc(#loc72)
      %27 = cir.binop(mul, %25, %26) : !u64i loc(#loc73)
      cir.libc.memmove %27 bytes from %23 to %21 : !cir.ptr<!void>, !u64i loc(#loc74)
      %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc27)
      %29 = cir.const #cir.int<0> : !s32i loc(#loc28)
      %30 = cir.ptr_stride(%28 : !cir.ptr<!s64i>, %29 : !s32i), !cir.ptr<!s64i> loc(#loc29)
      %31 = cir.load %30 : !cir.ptr<!s64i>, !s64i loc(#loc27)
      cir.call @printLongLongLine(%31) : (!s64i) -> () loc(#loc30)
    } loc(#loc70)
    cir.return loc(#loc4)
  } loc(#loc64)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc76)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc33)
    cir.return loc(#loc32)
  } loc(#loc75)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc78)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc79)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc40)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc40)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc40)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc40)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc40)
    %7 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc80)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc40)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc40)
    cir.store %9, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc79)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc42)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc42)
    %12 = cir.const #cir.int<8> : !u64i loc(#loc42)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc42)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc42)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc42)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc42)
    cir.store %16, %7 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc80)
    cir.goto "source" loc(#loc81)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc45)
    %17 = cir.load %7 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc46)
    cir.store %17, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc82)
    cir.scope {
      %18 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc84)
      %19 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc84)
      cir.store %19, %18 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc84)
      %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc52)
      %21 = cir.cast(bitcast, %20 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc52)
      %22 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc53)
      %23 = cir.cast(bitcast, %22 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc53)
      %24 = cir.const #cir.int<100> : !s32i loc(#loc54)
      %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc54)
      %26 = cir.const #cir.int<8> : !u64i loc(#loc85)
      %27 = cir.binop(mul, %25, %26) : !u64i loc(#loc86)
      cir.libc.memmove %27 bytes from %23 to %21 : !cir.ptr<!void>, !u64i loc(#loc87)
      %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc59)
      %29 = cir.const #cir.int<0> : !s32i loc(#loc60)
      %30 = cir.ptr_stride(%28 : !cir.ptr<!s64i>, %29 : !s32i), !cir.ptr<!s64i> loc(#loc61)
      %31 = cir.load %30 : !cir.ptr<!s64i>, !s64i loc(#loc59)
      cir.call @printLongLongLine(%31) : (!s64i) -> () loc(#loc62)
    } loc(#loc83)
    cir.return loc(#loc36)
  } loc(#loc77)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":21:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":37:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":23:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":23:15)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":24:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":24:42)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":25:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":25:43)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":26:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":26:10)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":27:1)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":30:12)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":30:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":31:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":36:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":32:9)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":32:33)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":34:17)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":34:23)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":34:31)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":34:35)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":34:49)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":34:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":34:50)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":35:27)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":35:32)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":35:33)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":35:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":61:1)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":64:1)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":63:5)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":63:13)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":44:1)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":59:1)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":46:5)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":46:15)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":47:5)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":47:42)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":48:5)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":48:43)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":49:5)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":49:10)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":50:1)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":52:12)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":52:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":53:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":58:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":54:9)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":54:33)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":56:17)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":56:23)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":56:31)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":56:35)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":56:49)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":56:9)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":56:50)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":57:27)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":57:32)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":57:33)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memmove_18.c":57:9)
#loc63 = loc(fused[#loc1, #loc2])
#loc64 = loc(fused[#loc3, #loc4])
#loc65 = loc(fused[#loc5, #loc6])
#loc66 = loc(fused[#loc7, #loc8])
#loc67 = loc(fused[#loc9, #loc10])
#loc68 = loc(fused[#loc11, #loc12])
#loc69 = loc(fused[#loc15, #loc14])
#loc70 = loc(fused[#loc16, #loc17])
#loc71 = loc(fused[#loc18, #loc19])
#loc72 = loc(fused[#loc23, #loc24])
#loc73 = loc(fused[#loc22, #loc24])
#loc74 = loc(fused[#loc25, #loc26])
#loc75 = loc(fused[#loc31, #loc32])
#loc76 = loc(fused[#loc33, #loc34])
#loc77 = loc(fused[#loc35, #loc36])
#loc78 = loc(fused[#loc37, #loc38])
#loc79 = loc(fused[#loc39, #loc40])
#loc80 = loc(fused[#loc41, #loc42])
#loc81 = loc(fused[#loc43, #loc44])
#loc82 = loc(fused[#loc47, #loc46])
#loc83 = loc(fused[#loc48, #loc49])
#loc84 = loc(fused[#loc50, #loc51])
#loc85 = loc(fused[#loc55, #loc56])
#loc86 = loc(fused[#loc54, #loc56])
#loc87 = loc(fused[#loc57, #loc58])
