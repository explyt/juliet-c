!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__int_calloc_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc116)
  cir.func no_proto private  @globalReturnsTrue(...) -> !s32i loc(#loc117)
  cir.func private  @printIntLine(!s32i) loc(#loc118)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc119)
  cir.func no_proto  @CWE690_NULL_Deref_From_Return__int_calloc_11_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc121)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc122)
    %2 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc15)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc16)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc123)
    %6 = cir.call @calloc(%4, %5) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc15)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc124)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc125)
    cir.scope {
      %8 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc127)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc127)
      %10 = cir.call %9() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc23)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc23)
      cir.if %11 {
        %12 = cir.const #cir.int<5> : !s32i loc(#loc26)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc27)
        %14 = cir.const #cir.int<0> : !s32i loc(#loc28)
        %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc29)
        cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc129)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc30)
        %17 = cir.const #cir.int<0> : !s32i loc(#loc31)
        %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc32)
        %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc30)
        cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc33)
        %20 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc34)
        %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc35)
        %22 = cir.cast(bitcast, %21 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc35)
        cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc34)
      } loc(#loc128)
    } loc(#loc126)
    cir.return loc(#loc10)
  } loc(#loc120)
  cir.func no_proto  @CWE690_NULL_Deref_From_Return__int_calloc_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc131)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc132)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc37)
  } loc(#loc130)
  cir.func no_proto private  @globalReturnsFalse(...) -> !s32i loc(#loc133)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc134)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc46)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc136)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc51)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc137)
    %2 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc53)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc54)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc138)
    %6 = cir.call @calloc(%4, %5) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc53)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc139)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc140)
    cir.scope {
      %8 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc142)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc142)
      %10 = cir.call %9() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc61)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc61)
      cir.if %11 {
        %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc46)
        %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc46)
        cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc66)
      } else {
        cir.scope {
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc69)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc70)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc70)
          %15 = cir.cmp(ne, %12, %14) : !cir.ptr<!s32i>, !s32i loc(#loc145)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc71)
          cir.if %16 {
            %17 = cir.const #cir.int<5> : !s32i loc(#loc73)
            %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc74)
            %19 = cir.const #cir.int<0> : !s32i loc(#loc75)
            %20 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc76)
            cir.store %17, %20 : !s32i, !cir.ptr<!s32i> loc(#loc147)
            %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc77)
            %22 = cir.const #cir.int<0> : !s32i loc(#loc78)
            %23 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %22 : !s32i), !cir.ptr<!s32i> loc(#loc79)
            %24 = cir.load %23 : !cir.ptr<!s32i>, !s32i loc(#loc77)
            cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc80)
            %25 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc81)
            %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc82)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc82)
            cir.call @free(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc81)
          } loc(#loc146)
        } loc(#loc144)
      } loc(#loc143)
    } loc(#loc141)
    cir.return loc(#loc48)
  } loc(#loc135)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc149)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc87)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc150)
    %2 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc89)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc90)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc90)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc151)
    %6 = cir.call @calloc(%4, %5) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc89)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc152)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc153)
    cir.scope {
      %8 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc155)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc155)
      %10 = cir.call %9() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc97)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc97)
      cir.if %11 {
        cir.scope {
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc102)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc103)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc103)
          %15 = cir.cmp(ne, %12, %14) : !cir.ptr<!s32i>, !s32i loc(#loc158)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc104)
          cir.if %16 {
            %17 = cir.const #cir.int<5> : !s32i loc(#loc106)
            %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc107)
            %19 = cir.const #cir.int<0> : !s32i loc(#loc108)
            %20 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc109)
            cir.store %17, %20 : !s32i, !cir.ptr<!s32i> loc(#loc160)
            %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc110)
            %22 = cir.const #cir.int<0> : !s32i loc(#loc111)
            %23 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %22 : !s32i), !cir.ptr<!s32i> loc(#loc112)
            %24 = cir.load %23 : !cir.ptr<!s32i>, !s32i loc(#loc110)
            cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc113)
            %25 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc114)
            %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc115)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc115)
            cir.call @free(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc114)
          } loc(#loc159)
        } loc(#loc157)
      } loc(#loc156)
    } loc(#loc154)
    cir.return loc(#loc84)
  } loc(#loc148)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__int_calloc_11.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":675:1)
#loc2 = loc("/usr/include/stdlib.h":676:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":23:1)
#loc10 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":36:1)
#loc11 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":25:5)
#loc12 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":25:11)
#loc13 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":26:12)
#loc14 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":26:5)
#loc15 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":28:19)
#loc16 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":28:26)
#loc17 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":28:29)
#loc18 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":28:39)
#loc19 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":28:40)
#loc20 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":28:5)
#loc21 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":29:5)
#loc22 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":35:5)
#loc23 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":29:8)
#loc24 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":29:26)
#loc25 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":30:5)
#loc26 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":32:19)
#loc27 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":32:9)
#loc28 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":32:14)
#loc29 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":32:15)
#loc30 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":33:22)
#loc31 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":33:27)
#loc32 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":33:28)
#loc33 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":33:9)
#loc34 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":34:9)
#loc35 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":34:14)
#loc36 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":85:1)
#loc37 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":89:1)
#loc38 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":87:5)
#loc39 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":87:14)
#loc40 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":88:5)
#loc41 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":88:14)
#loc42 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc43 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc44 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc45 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc46 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":52:19)
#loc47 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":43:1)
#loc48 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":64:1)
#loc49 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":45:5)
#loc50 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":45:11)
#loc51 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":46:12)
#loc52 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":46:5)
#loc53 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":48:19)
#loc54 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":48:26)
#loc55 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":48:29)
#loc56 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":48:39)
#loc57 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":48:40)
#loc58 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":48:5)
#loc59 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":49:5)
#loc60 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":63:5)
#loc61 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":49:8)
#loc62 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":49:27)
#loc63 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":50:5)
#loc64 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":53:5)
#loc65 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":55:5)
#loc66 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":52:9)
#loc67 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":57:9)
#loc68 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":62:9)
#loc69 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":57:13)
#loc70 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":57:21)
#loc71 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":57:18)
#loc72 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":58:9)
#loc73 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":59:23)
#loc74 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":59:13)
#loc75 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":59:18)
#loc76 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":59:19)
#loc77 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":60:26)
#loc78 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":60:31)
#loc79 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":60:32)
#loc80 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":60:13)
#loc81 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":61:13)
#loc82 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":61:18)
#loc83 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":67:1)
#loc84 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":83:1)
#loc85 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":69:5)
#loc86 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":69:11)
#loc87 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":70:12)
#loc88 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":70:5)
#loc89 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":72:19)
#loc90 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":72:26)
#loc91 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":72:29)
#loc92 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":72:39)
#loc93 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":72:40)
#loc94 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":72:5)
#loc95 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":73:5)
#loc96 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":82:5)
#loc97 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":73:8)
#loc98 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":73:26)
#loc99 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":74:5)
#loc100 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":76:9)
#loc101 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":81:9)
#loc102 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":76:13)
#loc103 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":76:21)
#loc104 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":76:18)
#loc105 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":77:9)
#loc106 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":78:23)
#loc107 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":78:13)
#loc108 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":78:18)
#loc109 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":78:19)
#loc110 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":79:26)
#loc111 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":79:31)
#loc112 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":79:32)
#loc113 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":79:13)
#loc114 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":80:13)
#loc115 = loc("CWE690_NULL_Deref_From_Return__int_calloc_11.c":80:18)
#loc116 = loc(fused[#loc1, #loc2])
#loc117 = loc(fused[#loc3, #loc4])
#loc118 = loc(fused[#loc5, #loc6])
#loc119 = loc(fused[#loc7, #loc8])
#loc120 = loc(fused[#loc9, #loc10])
#loc121 = loc(fused[#loc11, #loc12])
#loc122 = loc(fused[#loc14, #loc13])
#loc123 = loc(fused[#loc17, #loc18])
#loc124 = loc(fused[#loc15, #loc19])
#loc125 = loc(fused[#loc20, #loc19])
#loc126 = loc(fused[#loc21, #loc22])
#loc127 = loc(fused[#loc23, #loc24])
#loc128 = loc(fused[#loc25, #loc22])
#loc129 = loc(fused[#loc27, #loc26])
#loc130 = loc(fused[#loc36, #loc37])
#loc131 = loc(fused[#loc38, #loc39])
#loc132 = loc(fused[#loc40, #loc41])
#loc133 = loc(fused[#loc42, #loc43])
#loc134 = loc(fused[#loc44, #loc45])
#loc135 = loc(fused[#loc47, #loc48])
#loc136 = loc(fused[#loc49, #loc50])
#loc137 = loc(fused[#loc52, #loc51])
#loc138 = loc(fused[#loc55, #loc56])
#loc139 = loc(fused[#loc53, #loc57])
#loc140 = loc(fused[#loc58, #loc57])
#loc141 = loc(fused[#loc59, #loc60])
#loc142 = loc(fused[#loc61, #loc62])
#loc143 = loc(fused[#loc63, #loc64, #loc65, #loc60])
#loc144 = loc(fused[#loc67, #loc68])
#loc145 = loc(fused[#loc69, #loc70])
#loc146 = loc(fused[#loc72, #loc68])
#loc147 = loc(fused[#loc74, #loc73])
#loc148 = loc(fused[#loc83, #loc84])
#loc149 = loc(fused[#loc85, #loc86])
#loc150 = loc(fused[#loc88, #loc87])
#loc151 = loc(fused[#loc91, #loc92])
#loc152 = loc(fused[#loc89, #loc93])
#loc153 = loc(fused[#loc94, #loc93])
#loc154 = loc(fused[#loc95, #loc96])
#loc155 = loc(fused[#loc97, #loc98])
#loc156 = loc(fused[#loc99, #loc96])
#loc157 = loc(fused[#loc100, #loc101])
#loc158 = loc(fused[#loc102, #loc103])
#loc159 = loc(fused[#loc105, #loc101])
#loc160 = loc(fused[#loc107, #loc106])
