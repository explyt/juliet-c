!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc9 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":27:16)
#loc10 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":27:23)
#loc47 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":47:20)
#loc48 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":47:27)
#loc83 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":62:20)
#loc84 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":62:27)
#loc123 = loc(fused[#loc9, #loc10])
#loc140 = loc(fused[#loc47, #loc48])
#loc157 = loc(fused[#loc83, #loc84])
module @"/workspaces/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_int_62b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc119)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc120)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc121)
  cir.func @_ZN41CWE416_Use_After_Free__malloc_free_int_629badSourceERPi(%arg0: !cir.ptr<!cir.ptr<!s32i>> loc(fused[#loc9, #loc10])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc123)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc11)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc12)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc13)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc13)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc124)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc125)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc12)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc126)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc17)
    cir.store %7, %8 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc127)
    cir.scope {
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc20)
      %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc20)
      %15 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc21)
      %16 = cir.cmp(eq, %14, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc129)
      cir.if %16 {
        %17 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc23)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc24)
        %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc25)
        cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc23)
      } loc(#loc130)
    } loc(#loc128)
    cir.scope {
      %13 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc132)
      cir.scope {
        %14 = cir.const #cir.int<0> : !s32i loc(#loc32)
        %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc32)
        cir.store %15, %13 : !u64i, !cir.ptr<!u64i> loc(#loc134)
        cir.for : cond {
          %16 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc34)
          %17 = cir.const #cir.int<100> : !s32i loc(#loc35)
          %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc35)
          %19 = cir.cmp(lt, %16, %18) : !u64i, !cir.bool loc(#loc135)
          cir.condition(%19) loc(#loc135)
        } body {
          cir.scope {
            %16 = cir.const #cir.int<5> : !s32i loc(#loc37)
            %17 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc38)
            %18 = cir.load %17 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc38)
            %19 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc39)
            %20 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %19 : !u64i), !cir.ptr<!s32i> loc(#loc40)
            cir.store %16, %20 : !s32i, !cir.ptr<!s32i> loc(#loc137)
          } loc(#loc136)
          cir.yield loc(#loc31)
        } step {
          %16 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc41)
          %17 = cir.unary(inc, %16) : !u64i, !u64i loc(#loc42)
          cir.store %17, %13 : !u64i, !cir.ptr<!u64i> loc(#loc138)
          cir.yield loc(#loc133)
        } loc(#loc133)
      } loc(#loc133)
    } loc(#loc131)
    %9 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc43)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc44)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc44)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc44)
    cir.call @free(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc43)
    cir.return loc(#loc8)
  } loc(#loc122)
  cir.func @_ZN41CWE416_Use_After_Free__malloc_free_int_6213goodG2BSourceERPi(%arg0: !cir.ptr<!cir.ptr<!s32i>> loc(fused[#loc47, #loc48])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc140)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc49)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc50)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc51)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc51)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc141)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc142)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc50)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc143)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc55)
    cir.store %7, %8 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc144)
    cir.scope {
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc58)
      %10 = cir.load %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc58)
      %11 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc59)
      %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!s32i>, !cir.bool loc(#loc146)
      cir.if %12 {
        %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc61)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc62)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc63)
        cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc61)
      } loc(#loc147)
    } loc(#loc145)
    cir.scope {
      %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc149)
      cir.scope {
        %10 = cir.const #cir.int<0> : !s32i loc(#loc70)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc70)
        cir.store %11, %9 : !u64i, !cir.ptr<!u64i> loc(#loc151)
        cir.for : cond {
          %12 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc72)
          %13 = cir.const #cir.int<100> : !s32i loc(#loc73)
          %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc73)
          %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc152)
          cir.condition(%15) loc(#loc152)
        } body {
          cir.scope {
            %12 = cir.const #cir.int<5> : !s32i loc(#loc75)
            %13 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc76)
            %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc76)
            %15 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc77)
            %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !u64i), !cir.ptr<!s32i> loc(#loc78)
            cir.store %12, %16 : !s32i, !cir.ptr<!s32i> loc(#loc154)
          } loc(#loc153)
          cir.yield loc(#loc69)
        } step {
          %12 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc79)
          %13 = cir.unary(inc, %12) : !u64i, !u64i loc(#loc80)
          cir.store %13, %9 : !u64i, !cir.ptr<!u64i> loc(#loc155)
          cir.yield loc(#loc150)
        } loc(#loc150)
      } loc(#loc150)
    } loc(#loc148)
    cir.return loc(#loc46)
  } loc(#loc139)
  cir.func @_ZN41CWE416_Use_After_Free__malloc_free_int_6213goodB2GSourceERPi(%arg0: !cir.ptr<!cir.ptr<!s32i>> loc(fused[#loc83, #loc84])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc157)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc85)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc86)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc87)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc87)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc158)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc159)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc86)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc160)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc91)
    cir.store %7, %8 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc161)
    cir.scope {
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc94)
      %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc94)
      %15 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc95)
      %16 = cir.cmp(eq, %14, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc163)
      cir.if %16 {
        %17 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc97)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc98)
        %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc99)
        cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc97)
      } loc(#loc164)
    } loc(#loc162)
    cir.scope {
      %13 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc166)
      cir.scope {
        %14 = cir.const #cir.int<0> : !s32i loc(#loc106)
        %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc106)
        cir.store %15, %13 : !u64i, !cir.ptr<!u64i> loc(#loc168)
        cir.for : cond {
          %16 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc108)
          %17 = cir.const #cir.int<100> : !s32i loc(#loc109)
          %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc109)
          %19 = cir.cmp(lt, %16, %18) : !u64i, !cir.bool loc(#loc169)
          cir.condition(%19) loc(#loc169)
        } body {
          cir.scope {
            %16 = cir.const #cir.int<5> : !s32i loc(#loc111)
            %17 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc112)
            %18 = cir.load %17 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc112)
            %19 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc113)
            %20 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %19 : !u64i), !cir.ptr<!s32i> loc(#loc114)
            cir.store %16, %20 : !s32i, !cir.ptr<!s32i> loc(#loc171)
          } loc(#loc170)
          cir.yield loc(#loc105)
        } step {
          %16 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc115)
          %17 = cir.unary(inc, %16) : !u64i, !u64i loc(#loc116)
          cir.store %17, %13 : !u64i, !cir.ptr<!u64i> loc(#loc172)
          cir.yield loc(#loc167)
        } loc(#loc167)
      } loc(#loc167)
    } loc(#loc165)
    %9 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc117)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc118)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc118)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc118)
    cir.call @free(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc117)
    cir.return loc(#loc82)
  } loc(#loc156)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_int_62b.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":27:1)
#loc8 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":40:1)
#loc11 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":28:1)
#loc12 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":29:19)
#loc13 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":29:26)
#loc14 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":29:30)
#loc15 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":29:40)
#loc16 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":29:41)
#loc17 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":29:5)
#loc18 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":30:5)
#loc19 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":30:33)
#loc20 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":30:9)
#loc21 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":30:17)
#loc22 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":30:23)
#loc23 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":30:24)
#loc24 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":30:30)
#loc25 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":30:29)
#loc26 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":31:5)
#loc27 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":37:5)
#loc28 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":32:9)
#loc29 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":32:16)
#loc30 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":33:9)
#loc31 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":36:9)
#loc32 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":33:17)
#loc33 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":33:13)
#loc34 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":33:20)
#loc35 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":33:24)
#loc36 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":34:9)
#loc37 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":35:23)
#loc38 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":35:13)
#loc39 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":35:18)
#loc40 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":35:19)
#loc41 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":33:30)
#loc42 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":33:29)
#loc43 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":39:5)
#loc44 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":39:10)
#loc45 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":47:1)
#loc46 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":59:1)
#loc49 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":48:1)
#loc50 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":49:19)
#loc51 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":49:26)
#loc52 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":49:30)
#loc53 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":49:40)
#loc54 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":49:41)
#loc55 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":49:5)
#loc56 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":50:5)
#loc57 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":50:33)
#loc58 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":50:9)
#loc59 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":50:17)
#loc60 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":50:23)
#loc61 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":50:24)
#loc62 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":50:30)
#loc63 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":50:29)
#loc64 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":51:5)
#loc65 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":57:5)
#loc66 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":52:9)
#loc67 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":52:16)
#loc68 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":53:9)
#loc69 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":56:9)
#loc70 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":53:17)
#loc71 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":53:13)
#loc72 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":53:20)
#loc73 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":53:24)
#loc74 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":54:9)
#loc75 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":55:23)
#loc76 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":55:13)
#loc77 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":55:18)
#loc78 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":55:19)
#loc79 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":53:30)
#loc80 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":53:29)
#loc81 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":62:1)
#loc82 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":75:1)
#loc85 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":63:1)
#loc86 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":64:19)
#loc87 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":64:26)
#loc88 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":64:30)
#loc89 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":64:40)
#loc90 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":64:41)
#loc91 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":64:5)
#loc92 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":65:5)
#loc93 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":65:33)
#loc94 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":65:9)
#loc95 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":65:17)
#loc96 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":65:23)
#loc97 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":65:24)
#loc98 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":65:30)
#loc99 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":65:29)
#loc100 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":66:5)
#loc101 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":72:5)
#loc102 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":67:9)
#loc103 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":67:16)
#loc104 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":68:9)
#loc105 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":71:9)
#loc106 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":68:17)
#loc107 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":68:13)
#loc108 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":68:20)
#loc109 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":68:24)
#loc110 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":69:9)
#loc111 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":70:23)
#loc112 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":70:13)
#loc113 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":70:18)
#loc114 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":70:19)
#loc115 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":68:30)
#loc116 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":68:29)
#loc117 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":74:5)
#loc118 = loc("CWE416_Use_After_Free__malloc_free_int_62b.cpp":74:10)
#loc119 = loc(fused[#loc1, #loc2])
#loc120 = loc(fused[#loc3, #loc4])
#loc121 = loc(fused[#loc5, #loc6])
#loc122 = loc(fused[#loc7, #loc8])
#loc124 = loc(fused[#loc14, #loc15])
#loc125 = loc(fused[#loc13, #loc15])
#loc126 = loc(fused[#loc12, #loc16])
#loc127 = loc(fused[#loc17, #loc16])
#loc128 = loc(fused[#loc18, #loc19])
#loc129 = loc(fused[#loc20, #loc21])
#loc130 = loc(fused[#loc22, #loc19])
#loc131 = loc(fused[#loc26, #loc27])
#loc132 = loc(fused[#loc28, #loc29])
#loc133 = loc(fused[#loc30, #loc31])
#loc134 = loc(fused[#loc33, #loc32])
#loc135 = loc(fused[#loc34, #loc35])
#loc136 = loc(fused[#loc36, #loc31])
#loc137 = loc(fused[#loc38, #loc37])
#loc138 = loc(fused[#loc42, #loc41])
#loc139 = loc(fused[#loc45, #loc46])
#loc141 = loc(fused[#loc52, #loc53])
#loc142 = loc(fused[#loc51, #loc53])
#loc143 = loc(fused[#loc50, #loc54])
#loc144 = loc(fused[#loc55, #loc54])
#loc145 = loc(fused[#loc56, #loc57])
#loc146 = loc(fused[#loc58, #loc59])
#loc147 = loc(fused[#loc60, #loc57])
#loc148 = loc(fused[#loc64, #loc65])
#loc149 = loc(fused[#loc66, #loc67])
#loc150 = loc(fused[#loc68, #loc69])
#loc151 = loc(fused[#loc71, #loc70])
#loc152 = loc(fused[#loc72, #loc73])
#loc153 = loc(fused[#loc74, #loc69])
#loc154 = loc(fused[#loc76, #loc75])
#loc155 = loc(fused[#loc80, #loc79])
#loc156 = loc(fused[#loc81, #loc82])
#loc158 = loc(fused[#loc88, #loc89])
#loc159 = loc(fused[#loc87, #loc89])
#loc160 = loc(fused[#loc86, #loc90])
#loc161 = loc(fused[#loc91, #loc90])
#loc162 = loc(fused[#loc92, #loc93])
#loc163 = loc(fused[#loc94, #loc95])
#loc164 = loc(fused[#loc96, #loc93])
#loc165 = loc(fused[#loc100, #loc101])
#loc166 = loc(fused[#loc102, #loc103])
#loc167 = loc(fused[#loc104, #loc105])
#loc168 = loc(fused[#loc107, #loc106])
#loc169 = loc(fused[#loc108, #loc109])
#loc170 = loc(fused[#loc110, #loc105])
#loc171 = loc(fused[#loc112, #loc111])
#loc172 = loc(fused[#loc116, #loc115])
