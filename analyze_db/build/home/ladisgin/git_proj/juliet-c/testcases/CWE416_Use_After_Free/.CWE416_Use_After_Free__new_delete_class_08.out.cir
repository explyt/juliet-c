!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc7 = loc("../../testcasesupport/std_testcase.h":61:7)
#loc176 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":184:10)
#loc177 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":184:14)
#loc178 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":184:20)
#loc179 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":184:32)
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
#loc269 = loc(fused[#loc176, #loc177])
#loc270 = loc(fused[#loc178, #loc179])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__new_delete_class_08.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func internal private @_ZL17staticReturnsTruev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc2)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc3)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc193)
    cir.return %2 : !s32i loc(#loc193)
  } loc(#loc192)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc194)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc7)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc7)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc7)
    cir.return loc(#loc7)
  } loc(#loc7)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr2) loc(#loc195)
  cir.func private @printIntLine(!s32i) loc(#loc196)
  cir.func @_ZN42CWE416_Use_After_Free__new_delete_class_083badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc198)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc16)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc199)
    cir.scope {
      %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc20)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc201)
      cir.if %3 {
        %4 = cir.const #cir.int<8> : !u64i loc(#loc203)
        %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc25)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc203)
        cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc24)
        cir.store %6, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc204)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc27)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc28)
        %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
        cir.store %7, %9 : !s32i, !cir.ptr<!s32i> loc(#loc205)
        %10 = cir.const #cir.int<2> : !s32i loc(#loc30)
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc31)
        %12 = cir.get_member %11[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc32)
        cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc206)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc33)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc33)
        cir.call @_ZdlPv(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr2) loc(#loc25)
      } loc(#loc202)
    } loc(#loc200)
    cir.scope {
      %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc36)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc208)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc39)
        %5 = cir.get_member %4[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
        %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc40)
        cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc41)
      } loc(#loc209)
    } loc(#loc207)
    cir.return loc(#loc13)
  } loc(#loc197)
  cir.func internal private @_ZL18staticReturnsFalsev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc43)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc44)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc211)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc211)
    cir.return %2 : !s32i loc(#loc211)
  } loc(#loc210)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc46)
  cir.func internal private @_ZN42CWE416_Use_After_Free__new_delete_class_08L8goodB2G1Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc213)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc51)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc214)
    cir.scope {
      %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc55)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc216)
      cir.if %3 {
        %4 = cir.const #cir.int<8> : !u64i loc(#loc218)
        %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc60)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc218)
        cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc59)
        cir.store %6, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc219)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc62)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc63)
        %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
        cir.store %7, %9 : !s32i, !cir.ptr<!s32i> loc(#loc220)
        %10 = cir.const #cir.int<2> : !s32i loc(#loc64)
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc65)
        %12 = cir.get_member %11[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc32)
        cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc221)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc66)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc66)
        cir.call @_ZdlPv(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr2) loc(#loc60)
      } loc(#loc217)
    } loc(#loc215)
    cir.scope {
      %2 = cir.call @_ZL18staticReturnsFalsev() : () -> !s32i loc(#loc69)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc223)
      cir.if %3 {
        %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc46)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc46)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc74)
      } else {
      } loc(#loc224)
    } loc(#loc222)
    cir.return loc(#loc48)
  } loc(#loc212)
  cir.func internal private @_ZN42CWE416_Use_After_Free__new_delete_class_08L8goodB2G2Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc226)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc79)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc227)
    cir.scope {
      %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc83)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc229)
      cir.if %3 {
        %4 = cir.const #cir.int<8> : !u64i loc(#loc231)
        %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc88)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc231)
        cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc87)
        cir.store %6, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc232)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc90)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc91)
        %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
        cir.store %7, %9 : !s32i, !cir.ptr<!s32i> loc(#loc233)
        %10 = cir.const #cir.int<2> : !s32i loc(#loc92)
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc93)
        %12 = cir.get_member %11[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc32)
        cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc234)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc94)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc94)
        cir.call @_ZdlPv(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr2) loc(#loc88)
      } loc(#loc230)
    } loc(#loc228)
    cir.scope {
      %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc97)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc236)
      cir.if %3 {
      } loc(#loc237)
    } loc(#loc235)
    cir.return loc(#loc76)
  } loc(#loc225)
  cir.func internal private @_ZN42CWE416_Use_After_Free__new_delete_class_08L8goodG2B1Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc239)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc104)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc240)
    cir.scope {
      %2 = cir.call @_ZL18staticReturnsFalsev() : () -> !s32i loc(#loc108)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc242)
      cir.if %3 {
        %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc113)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc113)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc114)
      } else {
        %4 = cir.const #cir.int<8> : !u64i loc(#loc244)
        %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc117)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc244)
        cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc116)
        cir.store %6, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc245)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc119)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc120)
        %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
        cir.store %7, %9 : !s32i, !cir.ptr<!s32i> loc(#loc246)
        %10 = cir.const #cir.int<2> : !s32i loc(#loc121)
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc122)
        %12 = cir.get_member %11[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc32)
        cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc247)
      } loc(#loc243)
    } loc(#loc241)
    cir.scope {
      %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc125)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc249)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc128)
        %5 = cir.get_member %4[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
        %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc129)
        cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc130)
      } loc(#loc250)
    } loc(#loc248)
    cir.return loc(#loc101)
  } loc(#loc238)
  cir.func internal private @_ZN42CWE416_Use_After_Free__new_delete_class_08L8goodG2B2Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc252)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc135)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc253)
    cir.scope {
      %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc139)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc255)
      cir.if %3 {
        %4 = cir.const #cir.int<8> : !u64i loc(#loc257)
        %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc144)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc257)
        cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc143)
        cir.store %6, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc258)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc146)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc147)
        %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
        cir.store %7, %9 : !s32i, !cir.ptr<!s32i> loc(#loc259)
        %10 = cir.const #cir.int<2> : !s32i loc(#loc148)
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc149)
        %12 = cir.get_member %11[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc32)
        cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc260)
      } loc(#loc256)
    } loc(#loc254)
    cir.scope {
      %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc152)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc262)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc155)
        %5 = cir.get_member %4[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
        %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc156)
        cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc157)
      } loc(#loc263)
    } loc(#loc261)
    cir.return loc(#loc132)
  } loc(#loc251)
  cir.func @_ZN42CWE416_Use_After_Free__new_delete_class_084goodEv() extra(#fn_attr) {
    cir.call @_ZN42CWE416_Use_After_Free__new_delete_class_08L8goodB2G1Ev() : () -> () loc(#loc160)
    cir.call @_ZN42CWE416_Use_After_Free__new_delete_class_08L8goodB2G2Ev() : () -> () loc(#loc161)
    cir.call @_ZN42CWE416_Use_After_Free__new_delete_class_08L8goodG2B1Ev() : () -> () loc(#loc162)
    cir.call @_ZN42CWE416_Use_After_Free__new_delete_class_08L8goodG2B2Ev() : () -> () loc(#loc163)
    cir.return loc(#loc159)
  } loc(#loc264)
  cir.func private @srand(!u32i) extra(#fn_attr2) loc(#loc265)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr2) loc(#loc266)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc267)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc170)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc171)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc172)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc173)
  cir.func @main(%arg0: !s32i loc(fused[#loc176, #loc177]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc178, #loc179])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc269)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc270)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc175)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc180)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc181)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr2) loc(#loc182)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc182)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr2) loc(#loc183)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc170)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc170)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc184)
    cir.call @_ZN42CWE416_Use_After_Free__new_delete_class_084goodEv() : () -> () loc(#loc185)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc171)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc171)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc186)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc172)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc172)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc187)
    cir.call @_ZN42CWE416_Use_After_Free__new_delete_class_083badEv() : () -> () loc(#loc188)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc173)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc173)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc189)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc190)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc271)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc271)
    cir.return %15 : !s32i loc(#loc271)
  } loc(#loc268)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__new_delete_class_08.cpp":0:0)
#loc1 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":25:1)
#loc2 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":28:1)
#loc3 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":27:12)
#loc4 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":27:5)
#loc5 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc6 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc8 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc9 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":40:1)
#loc13 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":59:1)
#loc14 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":42:5)
#loc15 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":42:20)
#loc16 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":44:12)
#loc17 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":44:5)
#loc18 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":45:5)
#loc19 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":52:5)
#loc20 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":45:8)
#loc21 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":45:26)
#loc22 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":46:5)
#loc23 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":47:16)
#loc24 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":47:20)
#loc25 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":40:6)
#loc26 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":47:9)
#loc27 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":48:24)
#loc28 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":48:9)
#loc29 = loc("../../testcasesupport/std_testcase.h":64:13)
#loc30 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":49:24)
#loc31 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":49:9)
#loc32 = loc("../../testcasesupport/std_testcase.h":65:13)
#loc33 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":51:16)
#loc34 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":53:5)
#loc35 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":58:5)
#loc36 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":53:8)
#loc37 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":53:26)
#loc38 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":54:5)
#loc39 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":56:22)
#loc40 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":56:28)
#loc41 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":56:9)
#loc42 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":30:1)
#loc43 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":33:1)
#loc44 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":32:12)
#loc45 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":32:5)
#loc46 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":82:19)
#loc47 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":66:1)
#loc48 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":91:1)
#loc49 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":68:5)
#loc50 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":68:20)
#loc51 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":70:12)
#loc52 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":70:5)
#loc53 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":71:5)
#loc54 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":78:5)
#loc55 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":71:8)
#loc56 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":71:26)
#loc57 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":72:5)
#loc58 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":73:16)
#loc59 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":73:20)
#loc60 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":66:13)
#loc61 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":73:9)
#loc62 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":74:24)
#loc63 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":74:9)
#loc64 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":75:24)
#loc65 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":75:9)
#loc66 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":77:16)
#loc67 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":79:5)
#loc68 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":90:5)
#loc69 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":79:8)
#loc70 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":79:27)
#loc71 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":80:5)
#loc72 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":83:5)
#loc73 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":85:5)
#loc74 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":82:9)
#loc75 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":94:1)
#loc76 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":114:1)
#loc77 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":96:5)
#loc78 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":96:20)
#loc79 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":98:12)
#loc80 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":98:5)
#loc81 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":99:5)
#loc82 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":106:5)
#loc83 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":99:8)
#loc84 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":99:26)
#loc85 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":100:5)
#loc86 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":101:16)
#loc87 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":101:20)
#loc88 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":94:13)
#loc89 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":101:9)
#loc90 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":102:24)
#loc91 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":102:9)
#loc92 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":103:24)
#loc93 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":103:9)
#loc94 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":105:16)
#loc95 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":107:5)
#loc96 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":113:5)
#loc97 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":107:8)
#loc98 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":107:26)
#loc99 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":108:5)
#loc100 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":117:1)
#loc101 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":140:1)
#loc102 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":119:5)
#loc103 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":119:20)
#loc104 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":121:12)
#loc105 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":121:5)
#loc106 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":122:5)
#loc107 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":133:5)
#loc108 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":122:8)
#loc109 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":122:27)
#loc110 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":123:5)
#loc111 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":126:5)
#loc112 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":128:5)
#loc113 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":125:19)
#loc114 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":125:9)
#loc115 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":129:16)
#loc116 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":129:20)
#loc117 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":117:13)
#loc118 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":129:9)
#loc119 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":130:24)
#loc120 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":130:9)
#loc121 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":131:24)
#loc122 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":131:9)
#loc123 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":134:5)
#loc124 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":139:5)
#loc125 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":134:8)
#loc126 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":134:26)
#loc127 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":135:5)
#loc128 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":137:22)
#loc129 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":137:28)
#loc130 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":137:9)
#loc131 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":143:1)
#loc132 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":161:1)
#loc133 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":145:5)
#loc134 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":145:20)
#loc135 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":147:12)
#loc136 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":147:5)
#loc137 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":148:5)
#loc138 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":154:5)
#loc139 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":148:8)
#loc140 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":148:26)
#loc141 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":149:5)
#loc142 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":150:16)
#loc143 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":150:20)
#loc144 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":143:13)
#loc145 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":150:9)
#loc146 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":151:24)
#loc147 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":151:9)
#loc148 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":152:24)
#loc149 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":152:9)
#loc150 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":155:5)
#loc151 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":160:5)
#loc152 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":155:8)
#loc153 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":155:26)
#loc154 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":156:5)
#loc155 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":158:22)
#loc156 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":158:28)
#loc157 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":158:9)
#loc158 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":163:1)
#loc159 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":169:1)
#loc160 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":165:5)
#loc161 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":166:5)
#loc162 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":167:5)
#loc163 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":168:5)
#loc164 = loc("/usr/include/stdlib.h":575:1)
#loc165 = loc("/usr/include/stdlib.h":575:41)
#loc166 = loc("/usr/include/time.h":76:1)
#loc167 = loc("/usr/include/time.h":76:38)
#loc168 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc169 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc170 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":189:15)
#loc171 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":191:15)
#loc172 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":194:15)
#loc173 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":196:15)
#loc174 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":184:1)
#loc175 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":199:1)
#loc180 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":185:1)
#loc181 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":187:27)
#loc182 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":187:22)
#loc183 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":187:5)
#loc184 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":189:5)
#loc185 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":190:5)
#loc186 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":191:5)
#loc187 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":194:5)
#loc188 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":195:5)
#loc189 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":196:5)
#loc190 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":198:12)
#loc191 = loc("CWE416_Use_After_Free__new_delete_class_08.cpp":198:5)
#loc192 = loc(fused[#loc1, #loc2])
#loc193 = loc(fused[#loc4, #loc3])
#loc194 = loc(fused[#loc5, #loc6])
#loc195 = loc(fused[#loc8, #loc9])
#loc196 = loc(fused[#loc10, #loc11])
#loc197 = loc(fused[#loc12, #loc13])
#loc198 = loc(fused[#loc14, #loc15])
#loc199 = loc(fused[#loc17, #loc16])
#loc200 = loc(fused[#loc18, #loc19])
#loc201 = loc(fused[#loc20, #loc21])
#loc202 = loc(fused[#loc22, #loc19])
#loc203 = loc(fused[#loc23, #loc24])
#loc204 = loc(fused[#loc26, #loc24])
#loc205 = loc(fused[#loc28, #loc27])
#loc206 = loc(fused[#loc31, #loc30])
#loc207 = loc(fused[#loc34, #loc35])
#loc208 = loc(fused[#loc36, #loc37])
#loc209 = loc(fused[#loc38, #loc35])
#loc210 = loc(fused[#loc42, #loc43])
#loc211 = loc(fused[#loc45, #loc44])
#loc212 = loc(fused[#loc47, #loc48])
#loc213 = loc(fused[#loc49, #loc50])
#loc214 = loc(fused[#loc52, #loc51])
#loc215 = loc(fused[#loc53, #loc54])
#loc216 = loc(fused[#loc55, #loc56])
#loc217 = loc(fused[#loc57, #loc54])
#loc218 = loc(fused[#loc58, #loc59])
#loc219 = loc(fused[#loc61, #loc59])
#loc220 = loc(fused[#loc63, #loc62])
#loc221 = loc(fused[#loc65, #loc64])
#loc222 = loc(fused[#loc67, #loc68])
#loc223 = loc(fused[#loc69, #loc70])
#loc224 = loc(fused[#loc71, #loc72, #loc73, #loc68])
#loc225 = loc(fused[#loc75, #loc76])
#loc226 = loc(fused[#loc77, #loc78])
#loc227 = loc(fused[#loc80, #loc79])
#loc228 = loc(fused[#loc81, #loc82])
#loc229 = loc(fused[#loc83, #loc84])
#loc230 = loc(fused[#loc85, #loc82])
#loc231 = loc(fused[#loc86, #loc87])
#loc232 = loc(fused[#loc89, #loc87])
#loc233 = loc(fused[#loc91, #loc90])
#loc234 = loc(fused[#loc93, #loc92])
#loc235 = loc(fused[#loc95, #loc96])
#loc236 = loc(fused[#loc97, #loc98])
#loc237 = loc(fused[#loc99, #loc96])
#loc238 = loc(fused[#loc100, #loc101])
#loc239 = loc(fused[#loc102, #loc103])
#loc240 = loc(fused[#loc105, #loc104])
#loc241 = loc(fused[#loc106, #loc107])
#loc242 = loc(fused[#loc108, #loc109])
#loc243 = loc(fused[#loc110, #loc111, #loc112, #loc107])
#loc244 = loc(fused[#loc115, #loc116])
#loc245 = loc(fused[#loc118, #loc116])
#loc246 = loc(fused[#loc120, #loc119])
#loc247 = loc(fused[#loc122, #loc121])
#loc248 = loc(fused[#loc123, #loc124])
#loc249 = loc(fused[#loc125, #loc126])
#loc250 = loc(fused[#loc127, #loc124])
#loc251 = loc(fused[#loc131, #loc132])
#loc252 = loc(fused[#loc133, #loc134])
#loc253 = loc(fused[#loc136, #loc135])
#loc254 = loc(fused[#loc137, #loc138])
#loc255 = loc(fused[#loc139, #loc140])
#loc256 = loc(fused[#loc141, #loc138])
#loc257 = loc(fused[#loc142, #loc143])
#loc258 = loc(fused[#loc145, #loc143])
#loc259 = loc(fused[#loc147, #loc146])
#loc260 = loc(fused[#loc149, #loc148])
#loc261 = loc(fused[#loc150, #loc151])
#loc262 = loc(fused[#loc152, #loc153])
#loc263 = loc(fused[#loc154, #loc151])
#loc264 = loc(fused[#loc158, #loc159])
#loc265 = loc(fused[#loc164, #loc165])
#loc266 = loc(fused[#loc166, #loc167])
#loc267 = loc(fused[#loc168, #loc169])
#loc268 = loc(fused[#loc174, #loc175])
#loc271 = loc(fused[#loc191, #loc190])
