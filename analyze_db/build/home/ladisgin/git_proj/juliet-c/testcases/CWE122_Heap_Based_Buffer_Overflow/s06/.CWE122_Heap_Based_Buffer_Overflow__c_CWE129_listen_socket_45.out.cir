!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":328:10)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":328:14)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":328:20)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":328:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc591 = loc(fused[#loc163, #loc164])
#loc592 = loc(fused[#loc165, #loc166])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc527)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc528)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc529)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc530)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc531)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc532)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc533)
  cir.func private @close(!s32i) -> !s32i loc(#loc534)
  cir.global "private" internal dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45_badData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc535)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc537)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc24)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc538)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc540)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc541)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc542)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc543)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc544)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc33)
      %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc33)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc542)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc35)
      %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc35)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc543)
      cir.scope {
        cir.do {
          %15 = cir.const #cir.int<2> : !s32i loc(#loc40)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc41)
          %17 = cir.const #cir.int<6> : !s32i loc(#loc42)
          %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc43)
          cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc546)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc48)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc49)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc49)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc548)
            cir.if %63 {
              cir.break loc(#loc51)
            } loc(#loc549)
          } loc(#loc547)
          %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc550)
          %20 = cir.const #cir.int<0> : !s32i loc(#loc54)
          %21 = cir.const #cir.int<16> : !u64i loc(#loc551)
          cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc552)
          %22 = cir.const #cir.int<2> : !s32i loc(#loc59)
          %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc59)
          %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc60)
          cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc553)
          %25 = cir.const #cir.int<0> : !s32i loc(#loc62)
          %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc62)
          %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc63)
          %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc64)
          cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc554)
          %29 = cir.const #cir.int<27015> : !s32i loc(#loc66)
          %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc66)
          %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc67)
          %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
          cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc555)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc73)
            %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc557)
            %62 = cir.const #cir.int<16> : !u64i loc(#loc558)
            %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc558)
            %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc78)
            %65 = cir.const #cir.int<1> : !s32i loc(#loc79)
            %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc79)
            %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc559)
            cir.if %67 {
              cir.break loc(#loc81)
            } loc(#loc560)
          } loc(#loc556)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc84)
            %61 = cir.const #cir.int<5> : !s32i loc(#loc85)
            %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc86)
            %63 = cir.const #cir.int<1> : !s32i loc(#loc87)
            %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc87)
            %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc562)
            cir.if %65 {
              cir.break loc(#loc89)
            } loc(#loc563)
          } loc(#loc561)
          %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc90)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc91)
          %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc92)
          %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc93)
          cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc564)
          cir.scope {
            %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc98)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc99)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc99)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc566)
            cir.if %63 {
              cir.break loc(#loc101)
            } loc(#loc567)
          } loc(#loc565)
          %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc102)
          %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc103)
          %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc103)
          %40 = cir.const #cir.int<3> : !s32i loc(#loc104)
          %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc104)
          %42 = cir.const #cir.int<4> : !u64i loc(#loc104)
          %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc104)
          %44 = cir.const #cir.int<2> : !s32i loc(#loc104)
          %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc104)
          %46 = cir.binop(add, %43, %45) : !u64i loc(#loc104)
          %47 = cir.const #cir.int<1> : !s32i loc(#loc105)
          %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc105)
          %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc568)
          %50 = cir.const #cir.int<0> : !s32i loc(#loc106)
          %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc107)
          %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc107)
          cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc569)
          cir.scope {
            %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc112)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc113)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc113)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc571)
            %64 = cir.ternary(%63, true {
              %65 = cir.const #true loc(#loc114)
              cir.yield %65 : !cir.bool loc(#loc114)
            }, false {
              %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc115)
              %66 = cir.const #cir.int<0> : !s32i loc(#loc116)
              %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc572)
              %68 = cir.ternary(%67, true {
                %69 = cir.const #true loc(#loc114)
                cir.yield %69 : !cir.bool loc(#loc114)
              }, false {
                %69 = cir.const #false loc(#loc114)
                cir.yield %69 : !cir.bool loc(#loc114)
              }) : (!cir.bool) -> !cir.bool loc(#loc114)
              cir.yield %68 : !cir.bool loc(#loc114)
            }) : (!cir.bool) -> !cir.bool loc(#loc114)
            cir.if %64 {
              cir.break loc(#loc118)
            } loc(#loc573)
          } loc(#loc570)
          %53 = cir.const #cir.int<0> : !s32i loc(#loc119)
          %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc119)
          %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc120)
          %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc121)
          %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc121)
          cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc574)
          %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc122)
          %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc123)
          cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc575)
          cir.yield loc(#loc39)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc126)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc126)
          cir.condition(%16) loc(#loc126)
        } loc(#loc545)
      } loc(#loc545)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc129)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc130)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc130)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc577)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc132)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc133)
        } loc(#loc578)
      } loc(#loc576)
      cir.scope {
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc136)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc137)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc137)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc580)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc139)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc140)
        } loc(#loc581)
      } loc(#loc579)
    } loc(#loc539)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc141)
    %4 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45_badData : !cir.ptr<!s32i> loc(#loc535)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc582)
    %5 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc583)
    cir.call %5() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc143)
    cir.return loc(#loc20)
  } loc(#loc536)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc585)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc147)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc586)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc149)
    cir.return loc(#loc146)
  } loc(#loc584)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc587)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc588)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc589)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc157)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc158)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc159)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc160)
  cir.func @main(%arg0: !s32i loc(fused[#loc163, #loc164]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc165, #loc166])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc591)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc592)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc162)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc167)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc167)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc168)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc169)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc169)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc170)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc157)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc157)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc171)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45_good : !cir.ptr<!cir.func<!void ()>> loc(#loc593)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45_good() : () -> () loc(#loc172)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc158)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc158)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc174)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc159)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc159)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc175)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc594)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45_bad() : () -> () loc(#loc176)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc160)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc160)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc178)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc179)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc595)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc595)
    cir.return %17 : !s32i loc(#loc595)
  } loc(#loc590)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc596)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc597)
  cir.func private @printIntLine(!s32i) loc(#loc598)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc187)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc599)
  cir.func no_proto internal private @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc601)
    %1 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45_badData : !cir.ptr<!s32i> loc(#loc535)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc193)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc601)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc603)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc604)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc200)
      %6 = cir.const #cir.int<10> : !s32i loc(#loc201)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc201)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc605)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc606)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc200)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc607)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc604)
      cir.scope {
        %15 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc206)
        %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc207)
        %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc207)
        %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s32i>, !cir.bool loc(#loc609)
        cir.if %18 {
          %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc209)
          %20 = cir.const #cir.int<1> : !s32i loc(#loc210)
          %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc211)
          cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc209)
        } loc(#loc610)
      } loc(#loc608)
      cir.scope {
        %15 = cir.const #cir.int<0> : !s32i loc(#loc214)
        cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc612)
        cir.for : cond {
          %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc216)
          %17 = cir.const #cir.int<10> : !s32i loc(#loc217)
          %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc613)
          cir.condition(%18) loc(#loc218)
        } body {
          cir.scope {
            %16 = cir.const #cir.int<0> : !s32i loc(#loc220)
            %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc221)
            %18 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc222)
            %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc223)
            cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc615)
          } loc(#loc614)
          cir.yield loc(#loc213)
        } step {
          %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc224)
          %17 = cir.unary(inc, %16) : !s32i, !s32i loc(#loc225)
          cir.store %17, %3 : !s32i, !cir.ptr<!s32i> loc(#loc616)
          cir.yield loc(#loc611)
        } loc(#loc611)
      } loc(#loc611)
      cir.scope {
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc228)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc229)
        %17 = cir.cmp(ge, %15, %16) : !s32i, !cir.bool loc(#loc618)
        cir.if %17 {
          %18 = cir.const #cir.int<1> : !s32i loc(#loc233)
          %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc234)
          %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc235)
          %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc236)
          cir.store %18, %21 : !s32i, !cir.ptr<!s32i> loc(#loc620)
          cir.scope {
            %22 = cir.const #cir.int<0> : !s32i loc(#loc239)
            cir.store %22, %3 : !s32i, !cir.ptr<!s32i> loc(#loc622)
            cir.for : cond {
              %23 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc241)
              %24 = cir.const #cir.int<10> : !s32i loc(#loc242)
              %25 = cir.cmp(lt, %23, %24) : !s32i, !cir.bool loc(#loc623)
              cir.condition(%25) loc(#loc243)
            } body {
              cir.scope {
                %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc245)
                %24 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc246)
                %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !s32i), !cir.ptr<!s32i> loc(#loc247)
                %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc245)
                cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc248)
              } loc(#loc624)
              cir.yield loc(#loc238)
            } step {
              %23 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc249)
              %24 = cir.unary(inc, %23) : !s32i, !s32i loc(#loc250)
              cir.store %24, %3 : !s32i, !cir.ptr<!s32i> loc(#loc625)
              cir.yield loc(#loc621)
            } loc(#loc621)
          } loc(#loc621)
        } else {
          %18 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc187)
          %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc187)
          cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc251)
        } loc(#loc619)
      } loc(#loc617)
      %12 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc252)
      %13 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc253)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc253)
      cir.call @free(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc252)
    } loc(#loc602)
    cir.return loc(#loc191)
  } loc(#loc600)
  cir.global "private" internal dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45_goodG2BData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc626)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc628)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc260)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc261)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc629)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc263)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc630)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc265)
    %5 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45_goodG2BData : !cir.ptr<!s32i> loc(#loc626)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc631)
    %6 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc632)
    cir.call %6() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc267)
    cir.return loc(#loc257)
  } loc(#loc627)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc634)
    %1 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45_goodG2BData : !cir.ptr<!s32i> loc(#loc626)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc272)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc634)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc636)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc637)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc279)
      %6 = cir.const #cir.int<10> : !s32i loc(#loc280)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc280)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc638)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc639)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc279)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc640)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc637)
      cir.scope {
        %15 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc285)
        %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc286)
        %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc286)
        %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s32i>, !cir.bool loc(#loc642)
        cir.if %18 {
          %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc288)
          %20 = cir.const #cir.int<1> : !s32i loc(#loc289)
          %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc290)
          cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc288)
        } loc(#loc643)
      } loc(#loc641)
      cir.scope {
        %15 = cir.const #cir.int<0> : !s32i loc(#loc293)
        cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc645)
        cir.for : cond {
          %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc295)
          %17 = cir.const #cir.int<10> : !s32i loc(#loc296)
          %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc646)
          cir.condition(%18) loc(#loc297)
        } body {
          cir.scope {
            %16 = cir.const #cir.int<0> : !s32i loc(#loc299)
            %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc300)
            %18 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc301)
            %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc302)
            cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc648)
          } loc(#loc647)
          cir.yield loc(#loc292)
        } step {
          %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc303)
          %17 = cir.unary(inc, %16) : !s32i, !s32i loc(#loc304)
          cir.store %17, %3 : !s32i, !cir.ptr<!s32i> loc(#loc649)
          cir.yield loc(#loc644)
        } loc(#loc644)
      } loc(#loc644)
      cir.scope {
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc307)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc308)
        %17 = cir.cmp(ge, %15, %16) : !s32i, !cir.bool loc(#loc651)
        cir.if %17 {
          %18 = cir.const #cir.int<1> : !s32i loc(#loc312)
          %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc313)
          %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc314)
          %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc315)
          cir.store %18, %21 : !s32i, !cir.ptr<!s32i> loc(#loc653)
          cir.scope {
            %22 = cir.const #cir.int<0> : !s32i loc(#loc318)
            cir.store %22, %3 : !s32i, !cir.ptr<!s32i> loc(#loc655)
            cir.for : cond {
              %23 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc320)
              %24 = cir.const #cir.int<10> : !s32i loc(#loc321)
              %25 = cir.cmp(lt, %23, %24) : !s32i, !cir.bool loc(#loc656)
              cir.condition(%25) loc(#loc322)
            } body {
              cir.scope {
                %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc324)
                %24 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc325)
                %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !s32i), !cir.ptr<!s32i> loc(#loc326)
                %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc324)
                cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc327)
              } loc(#loc657)
              cir.yield loc(#loc317)
            } step {
              %23 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc328)
              %24 = cir.unary(inc, %23) : !s32i, !s32i loc(#loc329)
              cir.store %24, %3 : !s32i, !cir.ptr<!s32i> loc(#loc658)
              cir.yield loc(#loc654)
            } loc(#loc654)
          } loc(#loc654)
        } else {
          %18 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc330)
          %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc330)
          cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc331)
        } loc(#loc652)
      } loc(#loc650)
      %12 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc332)
      %13 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc333)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc333)
      cir.call @free(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc332)
    } loc(#loc635)
    cir.return loc(#loc270)
  } loc(#loc633)
  cir.global "private" internal dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45_goodB2GData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc659)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc661)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc340)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc341)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc662)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc664)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc665)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc666)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc667)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc668)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc350)
      %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc350)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc666)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc352)
      %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc352)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc667)
      cir.scope {
        cir.do {
          %15 = cir.const #cir.int<2> : !s32i loc(#loc357)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc358)
          %17 = cir.const #cir.int<6> : !s32i loc(#loc359)
          %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc360)
          cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc670)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc365)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc366)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc366)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc672)
            cir.if %63 {
              cir.break loc(#loc368)
            } loc(#loc673)
          } loc(#loc671)
          %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc674)
          %20 = cir.const #cir.int<0> : !s32i loc(#loc371)
          %21 = cir.const #cir.int<16> : !u64i loc(#loc675)
          cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc676)
          %22 = cir.const #cir.int<2> : !s32i loc(#loc376)
          %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc376)
          %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc60)
          cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc677)
          %25 = cir.const #cir.int<0> : !s32i loc(#loc378)
          %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc378)
          %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc63)
          %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc64)
          cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc678)
          %29 = cir.const #cir.int<27015> : !s32i loc(#loc380)
          %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc380)
          %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc381)
          %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
          cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc679)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc386)
            %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc681)
            %62 = cir.const #cir.int<16> : !u64i loc(#loc682)
            %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc682)
            %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc391)
            %65 = cir.const #cir.int<1> : !s32i loc(#loc392)
            %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc392)
            %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc683)
            cir.if %67 {
              cir.break loc(#loc394)
            } loc(#loc684)
          } loc(#loc680)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc397)
            %61 = cir.const #cir.int<5> : !s32i loc(#loc398)
            %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc399)
            %63 = cir.const #cir.int<1> : !s32i loc(#loc400)
            %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc400)
            %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc686)
            cir.if %65 {
              cir.break loc(#loc402)
            } loc(#loc687)
          } loc(#loc685)
          %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc403)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc404)
          %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc405)
          %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc406)
          cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc688)
          cir.scope {
            %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc411)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc412)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc412)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc690)
            cir.if %63 {
              cir.break loc(#loc414)
            } loc(#loc691)
          } loc(#loc689)
          %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc415)
          %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc416)
          %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc416)
          %40 = cir.const #cir.int<3> : !s32i loc(#loc417)
          %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc417)
          %42 = cir.const #cir.int<4> : !u64i loc(#loc417)
          %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc417)
          %44 = cir.const #cir.int<2> : !s32i loc(#loc417)
          %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc417)
          %46 = cir.binop(add, %43, %45) : !u64i loc(#loc417)
          %47 = cir.const #cir.int<1> : !s32i loc(#loc418)
          %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc418)
          %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc692)
          %50 = cir.const #cir.int<0> : !s32i loc(#loc419)
          %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc420)
          %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc420)
          cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc693)
          cir.scope {
            %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc425)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc426)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc426)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc695)
            %64 = cir.ternary(%63, true {
              %65 = cir.const #true loc(#loc427)
              cir.yield %65 : !cir.bool loc(#loc427)
            }, false {
              %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc428)
              %66 = cir.const #cir.int<0> : !s32i loc(#loc429)
              %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc696)
              %68 = cir.ternary(%67, true {
                %69 = cir.const #true loc(#loc427)
                cir.yield %69 : !cir.bool loc(#loc427)
              }, false {
                %69 = cir.const #false loc(#loc427)
                cir.yield %69 : !cir.bool loc(#loc427)
              }) : (!cir.bool) -> !cir.bool loc(#loc427)
              cir.yield %68 : !cir.bool loc(#loc427)
            }) : (!cir.bool) -> !cir.bool loc(#loc427)
            cir.if %64 {
              cir.break loc(#loc431)
            } loc(#loc697)
          } loc(#loc694)
          %53 = cir.const #cir.int<0> : !s32i loc(#loc432)
          %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc432)
          %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc433)
          %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc434)
          %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc434)
          cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc698)
          %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc435)
          %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc436)
          cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc699)
          cir.yield loc(#loc356)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc439)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc439)
          cir.condition(%16) loc(#loc439)
        } loc(#loc669)
      } loc(#loc669)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc442)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc443)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc443)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc701)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc445)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc446)
        } loc(#loc702)
      } loc(#loc700)
      cir.scope {
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc449)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc450)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc450)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc704)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc452)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc453)
        } loc(#loc705)
      } loc(#loc703)
    } loc(#loc663)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc454)
    %4 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45_goodB2GData : !cir.ptr<!s32i> loc(#loc659)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc706)
    %5 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void ()>> loc(#loc707)
    cir.call %5() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc456)
    cir.return loc(#loc337)
  } loc(#loc660)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc458)
  cir.func no_proto internal private @goodB2GSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc709)
    %1 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45_goodB2GData : !cir.ptr<!s32i> loc(#loc659)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc462)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc709)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc711)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc712)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc469)
      %6 = cir.const #cir.int<10> : !s32i loc(#loc470)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc470)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc713)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc714)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc469)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc715)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc712)
      cir.scope {
        %15 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc475)
        %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc476)
        %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc476)
        %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s32i>, !cir.bool loc(#loc717)
        cir.if %18 {
          %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc478)
          %20 = cir.const #cir.int<1> : !s32i loc(#loc479)
          %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc480)
          cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc478)
        } loc(#loc718)
      } loc(#loc716)
      cir.scope {
        %15 = cir.const #cir.int<0> : !s32i loc(#loc483)
        cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc720)
        cir.for : cond {
          %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc485)
          %17 = cir.const #cir.int<10> : !s32i loc(#loc486)
          %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc721)
          cir.condition(%18) loc(#loc487)
        } body {
          cir.scope {
            %16 = cir.const #cir.int<0> : !s32i loc(#loc489)
            %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc490)
            %18 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc491)
            %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc492)
            cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc723)
          } loc(#loc722)
          cir.yield loc(#loc482)
        } step {
          %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc493)
          %17 = cir.unary(inc, %16) : !s32i, !s32i loc(#loc494)
          cir.store %17, %3 : !s32i, !cir.ptr<!s32i> loc(#loc724)
          cir.yield loc(#loc719)
        } loc(#loc719)
      } loc(#loc719)
      cir.scope {
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc497)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc498)
        %17 = cir.cmp(ge, %15, %16) : !s32i, !cir.bool loc(#loc726)
        %18 = cir.ternary(%17, true {
          %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc500)
          %20 = cir.const #cir.int<10> : !s32i loc(#loc501)
          %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc727)
          %22 = cir.ternary(%21, true {
            %23 = cir.const #true loc(#loc499)
            cir.yield %23 : !cir.bool loc(#loc499)
          }, false {
            %23 = cir.const #false loc(#loc499)
            cir.yield %23 : !cir.bool loc(#loc499)
          }) : (!cir.bool) -> !cir.bool loc(#loc499)
          cir.yield %22 : !cir.bool loc(#loc499)
        }, false {
          %19 = cir.const #false loc(#loc499)
          cir.yield %19 : !cir.bool loc(#loc499)
        }) : (!cir.bool) -> !cir.bool loc(#loc499)
        cir.if %18 {
          %19 = cir.const #cir.int<1> : !s32i loc(#loc506)
          %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc507)
          %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc508)
          %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc509)
          cir.store %19, %22 : !s32i, !cir.ptr<!s32i> loc(#loc729)
          cir.scope {
            %23 = cir.const #cir.int<0> : !s32i loc(#loc512)
            cir.store %23, %3 : !s32i, !cir.ptr<!s32i> loc(#loc731)
            cir.for : cond {
              %24 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc514)
              %25 = cir.const #cir.int<10> : !s32i loc(#loc515)
              %26 = cir.cmp(lt, %24, %25) : !s32i, !cir.bool loc(#loc732)
              cir.condition(%26) loc(#loc516)
            } body {
              cir.scope {
                %24 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc518)
                %25 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc519)
                %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !s32i), !cir.ptr<!s32i> loc(#loc520)
                %27 = cir.load %26 : !cir.ptr<!s32i>, !s32i loc(#loc518)
                cir.call @printIntLine(%27) : (!s32i) -> () loc(#loc521)
              } loc(#loc733)
              cir.yield loc(#loc511)
            } step {
              %24 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc522)
              %25 = cir.unary(inc, %24) : !s32i, !s32i loc(#loc523)
              cir.store %25, %3 : !s32i, !cir.ptr<!s32i> loc(#loc734)
              cir.yield loc(#loc730)
            } loc(#loc730)
          } loc(#loc730)
        } else {
          %19 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc458)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc458)
          cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc524)
        } loc(#loc728)
      } loc(#loc725)
      %12 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc525)
      %13 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc526)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc526)
      cir.call @free(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc525)
    } loc(#loc710)
    cir.return loc(#loc460)
  } loc(#loc708)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":42:1)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":42:12)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":79:1)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":155:1)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":81:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":81:9)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":83:13)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":83:12)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":83:5)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":84:5)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":152:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":89:9)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":89:13)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":90:9)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":90:28)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":91:9)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":91:31)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":92:9)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":92:31)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":93:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":93:41)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":94:9)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":137:17)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":104:35)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":104:44)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":104:57)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":104:28)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":104:13)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":104:68)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":105:13)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":108:13)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":105:17)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":105:33)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":106:13)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":107:17)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":109:20)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":109:21)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":109:30)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":109:33)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":109:47)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":109:13)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":109:48)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":110:34)
#loc60 = loc("/usr/include/netinet/in.h":249:5)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":110:13)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":111:39)
#loc63 = loc("/usr/include/netinet/in.h":251:20)
#loc64 = loc("/usr/include/netinet/in.h":33:15)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":111:13)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":112:38)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":112:32)
#loc68 = loc("/usr/include/netinet/in.h":250:15)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":112:13)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":112:46)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":113:13)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":116:13)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":113:22)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":113:54)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":113:55)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":113:64)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":113:78)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":113:17)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":113:84)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":114:13)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":115:17)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":117:13)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":120:13)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":117:24)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":117:38)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":117:17)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":117:57)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":118:13)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":119:17)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":121:35)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":121:49)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":121:55)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":121:28)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":121:13)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":121:59)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":122:13)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":125:13)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":122:17)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":122:33)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":123:13)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":124:17)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":127:31)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":127:45)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":127:58)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":127:76)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":127:79)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":127:26)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":127:13)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":127:80)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":128:13)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":131:13)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":128:17)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":128:31)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":128:44)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":128:47)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":128:61)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":129:13)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":130:17)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":133:39)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":133:25)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":133:13)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":135:25)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":135:20)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":135:13)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":135:36)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":137:16)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":138:9)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":141:9)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":138:13)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":138:29)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":139:9)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":140:26)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":140:13)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":142:9)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":145:9)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":142:13)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":142:29)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":143:9)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":144:26)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":144:13)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":153:76)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":153:5)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":154:5)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":154:13)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":314:1)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":318:1)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":316:5)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":316:13)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":317:5)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":317:13)
#loc151 = loc("/usr/include/stdlib.h":575:1)
#loc152 = loc("/usr/include/stdlib.h":575:41)
#loc153 = loc("/usr/include/time.h":76:1)
#loc154 = loc("/usr/include/time.h":76:38)
#loc155 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc156 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":333:15)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":335:15)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":338:15)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":340:15)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":328:1)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":343:1)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":329:1)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":331:27)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":331:22)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":331:5)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":333:5)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":334:5)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":334:71)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":335:5)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":338:5)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":339:5)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":339:70)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":340:5)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":342:12)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":342:5)
#loc181 = loc("/usr/include/stdlib.h":672:1)
#loc182 = loc("/usr/include/stdlib.h":672:45)
#loc183 = loc("/usr/include/stdlib.h":756:1)
#loc184 = loc("/usr/include/stdlib.h":756:70)
#loc185 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc186 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":73:23)
#loc188 = loc("/usr/include/stdlib.h":687:1)
#loc189 = loc("/usr/include/stdlib.h":687:32)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":48:1)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":77:1)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":50:5)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":50:16)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":51:5)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":76:5)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":52:9)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":52:13)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":53:9)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":53:54)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":53:31)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":53:38)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":53:43)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":53:53)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":54:9)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":54:39)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":54:13)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":54:23)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":54:29)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":54:30)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":54:36)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":54:35)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":56:9)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":59:9)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":56:18)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":56:14)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":56:21)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":56:25)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":56:23)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":57:9)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":58:25)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":58:13)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":58:20)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":58:21)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":56:30)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":56:29)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":62:9)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":74:9)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":62:13)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":62:21)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":63:9)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":70:9)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":72:9)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":64:28)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":64:13)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":64:20)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":64:24)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":66:13)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":69:13)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":66:21)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":66:17)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":66:24)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":66:28)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":66:26)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":67:13)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":68:30)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":68:37)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":68:38)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":68:17)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":66:33)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":66:32)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":73:13)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":75:9)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":75:14)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":43:1)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":43:12)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":193:1)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":203:1)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":195:5)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":195:9)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":197:13)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":197:12)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":197:5)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":200:12)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":200:5)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":201:80)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":201:5)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":202:5)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":202:17)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":162:1)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":191:1)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":164:5)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":164:16)
#loc273 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":165:5)
#loc274 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":190:5)
#loc275 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":166:9)
#loc276 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":166:13)
#loc277 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":167:9)
#loc278 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":167:54)
#loc279 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":167:31)
#loc280 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":167:38)
#loc281 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":167:43)
#loc282 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":167:53)
#loc283 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":168:9)
#loc284 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":168:39)
#loc285 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":168:13)
#loc286 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":168:23)
#loc287 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":168:29)
#loc288 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":168:30)
#loc289 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":168:36)
#loc290 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":168:35)
#loc291 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":170:9)
#loc292 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":173:9)
#loc293 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":170:18)
#loc294 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":170:14)
#loc295 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":170:21)
#loc296 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":170:25)
#loc297 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":170:23)
#loc298 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":171:9)
#loc299 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":172:25)
#loc300 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":172:13)
#loc301 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":172:20)
#loc302 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":172:21)
#loc303 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":170:30)
#loc304 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":170:29)
#loc305 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":176:9)
#loc306 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":188:9)
#loc307 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":176:13)
#loc308 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":176:21)
#loc309 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":177:9)
#loc310 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":184:9)
#loc311 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":186:9)
#loc312 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":178:28)
#loc313 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":178:13)
#loc314 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":178:20)
#loc315 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":178:24)
#loc316 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":180:13)
#loc317 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":183:13)
#loc318 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":180:21)
#loc319 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":180:17)
#loc320 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":180:24)
#loc321 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":180:28)
#loc322 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":180:26)
#loc323 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":181:13)
#loc324 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":182:30)
#loc325 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":182:37)
#loc326 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":182:38)
#loc327 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":182:17)
#loc328 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":180:33)
#loc329 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":180:32)
#loc330 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":187:23)
#loc331 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":187:13)
#loc332 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":189:9)
#loc333 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":189:14)
#loc334 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":44:1)
#loc335 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":44:12)
#loc336 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":236:1)
#loc337 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":312:1)
#loc338 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":238:5)
#loc339 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":238:9)
#loc340 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":240:13)
#loc341 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":240:12)
#loc342 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":240:5)
#loc343 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":241:5)
#loc344 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":309:5)
#loc345 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":246:9)
#loc346 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":246:13)
#loc347 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":247:9)
#loc348 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":247:28)
#loc349 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":248:9)
#loc350 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":248:31)
#loc351 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":249:9)
#loc352 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":249:31)
#loc353 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":250:9)
#loc354 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":250:41)
#loc355 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":251:9)
#loc356 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":294:17)
#loc357 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":261:35)
#loc358 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":261:44)
#loc359 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":261:57)
#loc360 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":261:28)
#loc361 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":261:13)
#loc362 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":261:68)
#loc363 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":262:13)
#loc364 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":265:13)
#loc365 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":262:17)
#loc366 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":262:33)
#loc367 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":263:13)
#loc368 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":264:17)
#loc369 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":266:20)
#loc370 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":266:21)
#loc371 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":266:30)
#loc372 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":266:33)
#loc373 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":266:47)
#loc374 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":266:13)
#loc375 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":266:48)
#loc376 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":267:34)
#loc377 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":267:13)
#loc378 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":268:39)
#loc379 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":268:13)
#loc380 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":269:38)
#loc381 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":269:32)
#loc382 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":269:13)
#loc383 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":269:46)
#loc384 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":270:13)
#loc385 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":273:13)
#loc386 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":270:22)
#loc387 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":270:54)
#loc388 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":270:55)
#loc389 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":270:64)
#loc390 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":270:78)
#loc391 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":270:17)
#loc392 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":270:84)
#loc393 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":271:13)
#loc394 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":272:17)
#loc395 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":274:13)
#loc396 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":277:13)
#loc397 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":274:24)
#loc398 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":274:38)
#loc399 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":274:17)
#loc400 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":274:57)
#loc401 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":275:13)
#loc402 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":276:17)
#loc403 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":278:35)
#loc404 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":278:49)
#loc405 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":278:55)
#loc406 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":278:28)
#loc407 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":278:13)
#loc408 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":278:59)
#loc409 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":279:13)
#loc410 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":282:13)
#loc411 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":279:17)
#loc412 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":279:33)
#loc413 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":280:13)
#loc414 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":281:17)
#loc415 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":284:31)
#loc416 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":284:45)
#loc417 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":284:58)
#loc418 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":284:76)
#loc419 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":284:79)
#loc420 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":284:26)
#loc421 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":284:13)
#loc422 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":284:80)
#loc423 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":285:13)
#loc424 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":288:13)
#loc425 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":285:17)
#loc426 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":285:31)
#loc427 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":285:44)
#loc428 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":285:47)
#loc429 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":285:61)
#loc430 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":286:13)
#loc431 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":287:17)
#loc432 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":290:39)
#loc433 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":290:25)
#loc434 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":290:13)
#loc435 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":292:25)
#loc436 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":292:20)
#loc437 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":292:13)
#loc438 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":292:36)
#loc439 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":294:16)
#loc440 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":295:9)
#loc441 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":298:9)
#loc442 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":295:13)
#loc443 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":295:29)
#loc444 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":296:9)
#loc445 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":297:26)
#loc446 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":297:13)
#loc447 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":299:9)
#loc448 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":302:9)
#loc449 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":299:13)
#loc450 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":299:29)
#loc451 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":300:9)
#loc452 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":301:26)
#loc453 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":301:13)
#loc454 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":310:80)
#loc455 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":310:5)
#loc456 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":311:5)
#loc457 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":311:17)
#loc458 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":230:23)
#loc459 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":206:1)
#loc460 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":234:1)
#loc461 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":208:5)
#loc462 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":208:16)
#loc463 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":209:5)
#loc464 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":233:5)
#loc465 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":210:9)
#loc466 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":210:13)
#loc467 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":211:9)
#loc468 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":211:54)
#loc469 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":211:31)
#loc470 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":211:38)
#loc471 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":211:43)
#loc472 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":211:53)
#loc473 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":212:9)
#loc474 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":212:39)
#loc475 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":212:13)
#loc476 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":212:23)
#loc477 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":212:29)
#loc478 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":212:30)
#loc479 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":212:36)
#loc480 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":212:35)
#loc481 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":214:9)
#loc482 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":217:9)
#loc483 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":214:18)
#loc484 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":214:14)
#loc485 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":214:21)
#loc486 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":214:25)
#loc487 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":214:23)
#loc488 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":215:9)
#loc489 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":216:25)
#loc490 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":216:13)
#loc491 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":216:20)
#loc492 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":216:21)
#loc493 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":214:30)
#loc494 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":214:29)
#loc495 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":219:9)
#loc496 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":231:9)
#loc497 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":219:13)
#loc498 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":219:21)
#loc499 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":219:23)
#loc500 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":219:26)
#loc501 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":219:34)
#loc502 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":219:36)
#loc503 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":220:9)
#loc504 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":227:9)
#loc505 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":229:9)
#loc506 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":221:28)
#loc507 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":221:13)
#loc508 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":221:20)
#loc509 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":221:24)
#loc510 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":223:13)
#loc511 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":226:13)
#loc512 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":223:21)
#loc513 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":223:17)
#loc514 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":223:24)
#loc515 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":223:28)
#loc516 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":223:26)
#loc517 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":224:13)
#loc518 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":225:30)
#loc519 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":225:37)
#loc520 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":225:38)
#loc521 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":225:17)
#loc522 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":223:33)
#loc523 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":223:32)
#loc524 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":230:13)
#loc525 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":232:9)
#loc526 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":232:14)
#loc527 = loc(fused[#loc1, #loc2])
#loc528 = loc(fused[#loc3, #loc4])
#loc529 = loc(fused[#loc5, #loc6])
#loc530 = loc(fused[#loc7, #loc8])
#loc531 = loc(fused[#loc9, #loc10])
#loc532 = loc(fused[#loc11, #loc12])
#loc533 = loc(fused[#loc13, #loc14])
#loc534 = loc(fused[#loc15, #loc16])
#loc535 = loc(fused[#loc17, #loc18])
#loc536 = loc(fused[#loc19, #loc20])
#loc537 = loc(fused[#loc21, #loc22])
#loc538 = loc(fused[#loc25, #loc23])
#loc539 = loc(fused[#loc26, #loc27])
#loc540 = loc(fused[#loc28, #loc29])
#loc541 = loc(fused[#loc30, #loc31])
#loc542 = loc(fused[#loc32, #loc33])
#loc543 = loc(fused[#loc34, #loc35])
#loc544 = loc(fused[#loc36, #loc37])
#loc545 = loc(fused[#loc38, #loc39])
#loc546 = loc(fused[#loc44, #loc45])
#loc547 = loc(fused[#loc46, #loc47])
#loc548 = loc(fused[#loc48, #loc49])
#loc549 = loc(fused[#loc50, #loc47])
#loc550 = loc(fused[#loc52, #loc53])
#loc551 = loc(fused[#loc55, #loc56])
#loc552 = loc(fused[#loc57, #loc58])
#loc553 = loc(fused[#loc61, #loc59])
#loc554 = loc(fused[#loc65, #loc62])
#loc555 = loc(fused[#loc69, #loc70])
#loc556 = loc(fused[#loc71, #loc72])
#loc557 = loc(fused[#loc74, #loc75])
#loc558 = loc(fused[#loc76, #loc77])
#loc559 = loc(fused[#loc78, #loc79])
#loc560 = loc(fused[#loc80, #loc72])
#loc561 = loc(fused[#loc82, #loc83])
#loc562 = loc(fused[#loc86, #loc87])
#loc563 = loc(fused[#loc88, #loc83])
#loc564 = loc(fused[#loc94, #loc95])
#loc565 = loc(fused[#loc96, #loc97])
#loc566 = loc(fused[#loc98, #loc99])
#loc567 = loc(fused[#loc100, #loc97])
#loc568 = loc(fused[#loc104, #loc105])
#loc569 = loc(fused[#loc108, #loc109])
#loc570 = loc(fused[#loc110, #loc111])
#loc571 = loc(fused[#loc112, #loc113])
#loc572 = loc(fused[#loc115, #loc116])
#loc573 = loc(fused[#loc117, #loc111])
#loc574 = loc(fused[#loc121, #loc119])
#loc575 = loc(fused[#loc124, #loc125])
#loc576 = loc(fused[#loc127, #loc128])
#loc577 = loc(fused[#loc129, #loc130])
#loc578 = loc(fused[#loc131, #loc128])
#loc579 = loc(fused[#loc134, #loc135])
#loc580 = loc(fused[#loc136, #loc137])
#loc581 = loc(fused[#loc138, #loc135])
#loc582 = loc(fused[#loc142, #loc141])
#loc583 = loc(fused[#loc143, #loc144])
#loc584 = loc(fused[#loc145, #loc146])
#loc585 = loc(fused[#loc147, #loc148])
#loc586 = loc(fused[#loc149, #loc150])
#loc587 = loc(fused[#loc151, #loc152])
#loc588 = loc(fused[#loc153, #loc154])
#loc589 = loc(fused[#loc155, #loc156])
#loc590 = loc(fused[#loc161, #loc162])
#loc593 = loc(fused[#loc172, #loc173])
#loc594 = loc(fused[#loc176, #loc177])
#loc595 = loc(fused[#loc180, #loc179])
#loc596 = loc(fused[#loc181, #loc182])
#loc597 = loc(fused[#loc183, #loc184])
#loc598 = loc(fused[#loc185, #loc186])
#loc599 = loc(fused[#loc188, #loc189])
#loc600 = loc(fused[#loc190, #loc191])
#loc601 = loc(fused[#loc192, #loc193])
#loc602 = loc(fused[#loc194, #loc195])
#loc603 = loc(fused[#loc196, #loc197])
#loc604 = loc(fused[#loc198, #loc199])
#loc605 = loc(fused[#loc202, #loc203])
#loc606 = loc(fused[#loc201, #loc203])
#loc607 = loc(fused[#loc200, #loc199])
#loc608 = loc(fused[#loc204, #loc205])
#loc609 = loc(fused[#loc206, #loc207])
#loc610 = loc(fused[#loc208, #loc205])
#loc611 = loc(fused[#loc212, #loc213])
#loc612 = loc(fused[#loc215, #loc214])
#loc613 = loc(fused[#loc216, #loc217])
#loc614 = loc(fused[#loc219, #loc213])
#loc615 = loc(fused[#loc221, #loc220])
#loc616 = loc(fused[#loc225, #loc224])
#loc617 = loc(fused[#loc226, #loc227])
#loc618 = loc(fused[#loc228, #loc229])
#loc619 = loc(fused[#loc230, #loc231, #loc232, #loc227])
#loc620 = loc(fused[#loc234, #loc233])
#loc621 = loc(fused[#loc237, #loc238])
#loc622 = loc(fused[#loc240, #loc239])
#loc623 = loc(fused[#loc241, #loc242])
#loc624 = loc(fused[#loc244, #loc238])
#loc625 = loc(fused[#loc250, #loc249])
#loc626 = loc(fused[#loc254, #loc255])
#loc627 = loc(fused[#loc256, #loc257])
#loc628 = loc(fused[#loc258, #loc259])
#loc629 = loc(fused[#loc262, #loc260])
#loc630 = loc(fused[#loc264, #loc263])
#loc631 = loc(fused[#loc266, #loc265])
#loc632 = loc(fused[#loc267, #loc268])
#loc633 = loc(fused[#loc269, #loc270])
#loc634 = loc(fused[#loc271, #loc272])
#loc635 = loc(fused[#loc273, #loc274])
#loc636 = loc(fused[#loc275, #loc276])
#loc637 = loc(fused[#loc277, #loc278])
#loc638 = loc(fused[#loc281, #loc282])
#loc639 = loc(fused[#loc280, #loc282])
#loc640 = loc(fused[#loc279, #loc278])
#loc641 = loc(fused[#loc283, #loc284])
#loc642 = loc(fused[#loc285, #loc286])
#loc643 = loc(fused[#loc287, #loc284])
#loc644 = loc(fused[#loc291, #loc292])
#loc645 = loc(fused[#loc294, #loc293])
#loc646 = loc(fused[#loc295, #loc296])
#loc647 = loc(fused[#loc298, #loc292])
#loc648 = loc(fused[#loc300, #loc299])
#loc649 = loc(fused[#loc304, #loc303])
#loc650 = loc(fused[#loc305, #loc306])
#loc651 = loc(fused[#loc307, #loc308])
#loc652 = loc(fused[#loc309, #loc310, #loc311, #loc306])
#loc653 = loc(fused[#loc313, #loc312])
#loc654 = loc(fused[#loc316, #loc317])
#loc655 = loc(fused[#loc319, #loc318])
#loc656 = loc(fused[#loc320, #loc321])
#loc657 = loc(fused[#loc323, #loc317])
#loc658 = loc(fused[#loc329, #loc328])
#loc659 = loc(fused[#loc334, #loc335])
#loc660 = loc(fused[#loc336, #loc337])
#loc661 = loc(fused[#loc338, #loc339])
#loc662 = loc(fused[#loc342, #loc340])
#loc663 = loc(fused[#loc343, #loc344])
#loc664 = loc(fused[#loc345, #loc346])
#loc665 = loc(fused[#loc347, #loc348])
#loc666 = loc(fused[#loc349, #loc350])
#loc667 = loc(fused[#loc351, #loc352])
#loc668 = loc(fused[#loc353, #loc354])
#loc669 = loc(fused[#loc355, #loc356])
#loc670 = loc(fused[#loc361, #loc362])
#loc671 = loc(fused[#loc363, #loc364])
#loc672 = loc(fused[#loc365, #loc366])
#loc673 = loc(fused[#loc367, #loc364])
#loc674 = loc(fused[#loc369, #loc370])
#loc675 = loc(fused[#loc372, #loc373])
#loc676 = loc(fused[#loc374, #loc375])
#loc677 = loc(fused[#loc377, #loc376])
#loc678 = loc(fused[#loc379, #loc378])
#loc679 = loc(fused[#loc382, #loc383])
#loc680 = loc(fused[#loc384, #loc385])
#loc681 = loc(fused[#loc387, #loc388])
#loc682 = loc(fused[#loc389, #loc390])
#loc683 = loc(fused[#loc391, #loc392])
#loc684 = loc(fused[#loc393, #loc385])
#loc685 = loc(fused[#loc395, #loc396])
#loc686 = loc(fused[#loc399, #loc400])
#loc687 = loc(fused[#loc401, #loc396])
#loc688 = loc(fused[#loc407, #loc408])
#loc689 = loc(fused[#loc409, #loc410])
#loc690 = loc(fused[#loc411, #loc412])
#loc691 = loc(fused[#loc413, #loc410])
#loc692 = loc(fused[#loc417, #loc418])
#loc693 = loc(fused[#loc421, #loc422])
#loc694 = loc(fused[#loc423, #loc424])
#loc695 = loc(fused[#loc425, #loc426])
#loc696 = loc(fused[#loc428, #loc429])
#loc697 = loc(fused[#loc430, #loc424])
#loc698 = loc(fused[#loc434, #loc432])
#loc699 = loc(fused[#loc437, #loc438])
#loc700 = loc(fused[#loc440, #loc441])
#loc701 = loc(fused[#loc442, #loc443])
#loc702 = loc(fused[#loc444, #loc441])
#loc703 = loc(fused[#loc447, #loc448])
#loc704 = loc(fused[#loc449, #loc450])
#loc705 = loc(fused[#loc451, #loc448])
#loc706 = loc(fused[#loc455, #loc454])
#loc707 = loc(fused[#loc456, #loc457])
#loc708 = loc(fused[#loc459, #loc460])
#loc709 = loc(fused[#loc461, #loc462])
#loc710 = loc(fused[#loc463, #loc464])
#loc711 = loc(fused[#loc465, #loc466])
#loc712 = loc(fused[#loc467, #loc468])
#loc713 = loc(fused[#loc471, #loc472])
#loc714 = loc(fused[#loc470, #loc472])
#loc715 = loc(fused[#loc469, #loc468])
#loc716 = loc(fused[#loc473, #loc474])
#loc717 = loc(fused[#loc475, #loc476])
#loc718 = loc(fused[#loc477, #loc474])
#loc719 = loc(fused[#loc481, #loc482])
#loc720 = loc(fused[#loc484, #loc483])
#loc721 = loc(fused[#loc485, #loc486])
#loc722 = loc(fused[#loc488, #loc482])
#loc723 = loc(fused[#loc490, #loc489])
#loc724 = loc(fused[#loc494, #loc493])
#loc725 = loc(fused[#loc495, #loc496])
#loc726 = loc(fused[#loc497, #loc498])
#loc727 = loc(fused[#loc500, #loc502])
#loc728 = loc(fused[#loc503, #loc504, #loc505, #loc496])
#loc729 = loc(fused[#loc507, #loc506])
#loc730 = loc(fused[#loc510, #loc511])
#loc731 = loc(fused[#loc513, #loc512])
#loc732 = loc(fused[#loc514, #loc515])
#loc733 = loc(fused[#loc517, #loc511])
#loc734 = loc(fused[#loc523, #loc522])
