!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc200)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc201)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc202)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc203)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc204)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc205)
  cir.func private @close(!s32i) -> !s32i loc(#loc206)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc207)
  cir.func private @printIntLine(!s32i) loc(#loc208)
  cir.func @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_183badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc210)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc211)
    %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc212)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc213)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc214)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc33)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    cir.goto "source" loc(#loc216)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc37)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc29)
    cir.store %8, %3 : !s32i, !cir.ptr<!s32i> loc(#loc213)
    cir.scope {
      cir.do {
        cir.scope {
          %9 = cir.const #cir.int<2> : !s32i loc(#loc42)
          %10 = cir.const #cir.int<1> : !u32i loc(#loc43)
          %11 = cir.cast(integral, %10 : !u32i), !s32i loc(#loc43)
          %12 = cir.const #cir.int<6> : !u32i loc(#loc44)
          %13 = cir.cast(integral, %12 : !u32i), !s32i loc(#loc44)
          %14 = cir.call @socket(%9, %11, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc45)
          cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc219)
          cir.scope {
            %52 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc50)
            %53 = cir.const #cir.int<1> : !s32i loc(#loc51)
            %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc51)
            %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc221)
            cir.if %55 {
              cir.break loc(#loc53)
            } loc(#loc222)
          } loc(#loc220)
          %15 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc223)
          %16 = cir.const #cir.int<0> : !s32i loc(#loc56)
          %17 = cir.const #cir.int<16> : !u64i loc(#loc224)
          cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc225)
          %18 = cir.const #cir.int<2> : !s32i loc(#loc61)
          %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc61)
          %20 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc62)
          cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc226)
          %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
          %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
          %23 = cir.call @inet_addr(%22) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc64)
          %24 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc65)
          %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc66)
          cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc227)
          %26 = cir.const #cir.int<27015> : !s32i loc(#loc69)
          %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc69)
          %28 = cir.call @htons(%27) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc70)
          %29 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
          cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc228)
          cir.scope {
            %52 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc76)
            %53 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc230)
            %54 = cir.const #cir.int<16> : !u64i loc(#loc231)
            %55 = cir.cast(integral, %54 : !u64i), !u32i loc(#loc231)
            %56 = cir.call @connect(%52, %53, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc81)
            %57 = cir.const #cir.int<1> : !s32i loc(#loc82)
            %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc82)
            %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc232)
            cir.if %59 {
              cir.break loc(#loc84)
            } loc(#loc233)
          } loc(#loc229)
          %30 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc85)
          %31 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc86)
          %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc86)
          %33 = cir.const #cir.int<3> : !s32i loc(#loc87)
          %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc87)
          %35 = cir.const #cir.int<4> : !u64i loc(#loc87)
          %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc87)
          %37 = cir.const #cir.int<2> : !s32i loc(#loc87)
          %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc87)
          %39 = cir.binop(add, %36, %38) : !u64i loc(#loc87)
          %40 = cir.const #cir.int<1> : !s32i loc(#loc88)
          %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc88)
          %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc234)
          %43 = cir.const #cir.int<0> : !s32i loc(#loc89)
          %44 = cir.call @recv(%30, %32, %42, %43) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc90)
          %45 = cir.cast(integral, %44 : !s64i), !s32i loc(#loc90)
          cir.store %45, %1 : !s32i, !cir.ptr<!s32i> loc(#loc235)
          cir.scope {
            %52 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc95)
            %53 = cir.const #cir.int<1> : !s32i loc(#loc96)
            %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc96)
            %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc237)
            %56 = cir.ternary(%55, true {
              %57 = cir.const #true loc(#loc97)
              cir.yield %57 : !cir.bool loc(#loc97)
            }, false {
              %57 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc98)
              %58 = cir.const #cir.int<0> : !s32i loc(#loc99)
              %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc238)
              %60 = cir.ternary(%59, true {
                %61 = cir.const #true loc(#loc97)
                cir.yield %61 : !cir.bool loc(#loc97)
              }, false {
                %61 = cir.const #false loc(#loc97)
                cir.yield %61 : !cir.bool loc(#loc97)
              }) : (!cir.bool) -> !cir.bool loc(#loc97)
              cir.yield %60 : !cir.bool loc(#loc97)
            }) : (!cir.bool) -> !cir.bool loc(#loc97)
            cir.if %56 {
              cir.break loc(#loc101)
            } loc(#loc239)
          } loc(#loc236)
          %46 = cir.const #cir.int<0> : !s8i loc(#loc102)
          %47 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc103)
          %48 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc104)
          %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc104)
          cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc240)
          %50 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc105)
          %51 = cir.call @atoi(%50) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc106)
          cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc241)
        } loc(#loc218)
        cir.yield loc(#loc39)
      } while {
        %9 = cir.const #cir.int<0> : !s32i loc(#loc109)
        %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc109)
        cir.condition(%10) loc(#loc109)
      } loc(#loc217)
    } loc(#loc217)
    cir.scope {
      %9 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc112)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc113)
      %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc113)
      %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc243)
      cir.if %12 {
        %13 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc115)
        %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc116)
      } loc(#loc244)
    } loc(#loc242)
    cir.scope {
      %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc246)
      %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc247)
      %11 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc248)
      %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc124)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc124)
      %14 = cir.const #cir.int<4> : !u64i loc(#loc249)
      %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc250)
      cir.store %15, %9 : !u64i, !cir.ptr<!u64i> loc(#loc251)
      %16 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc128)
      %17 = cir.call @_Znam(%16) : (!u64i) -> !cir.ptr<!void> loc(#loc129)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc252)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc252)
      cir.store %19, %11 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc253)
      cir.scope {
        %25 = cir.const #cir.int<0> : !s32i loc(#loc135)
        %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc135)
        cir.store %26, %10 : !u64i, !cir.ptr<!u64i> loc(#loc255)
        cir.for : cond {
          %27 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc137)
          %28 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc138)
          %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc138)
          %30 = cir.cmp(lt, %27, %29) : !u64i, !cir.bool loc(#loc256)
          cir.condition(%30) loc(#loc256)
        } body {
          cir.scope {
            %27 = cir.const #cir.int<0> : !s32i loc(#loc140)
            %28 = cir.load %11 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc141)
            %29 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc142)
            %30 = cir.ptr_stride(%28 : !cir.ptr<!s32i>, %29 : !u64i), !cir.ptr<!s32i> loc(#loc143)
            cir.store %27, %30 : !s32i, !cir.ptr<!s32i> loc(#loc258)
          } loc(#loc257)
          cir.yield loc(#loc134)
        } step {
          %27 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc144)
          %28 = cir.unary(inc, %27) : !u64i, !u64i loc(#loc145)
          cir.store %28, %10 : !u64i, !cir.ptr<!u64i> loc(#loc259)
          cir.yield loc(#loc254)
        } loc(#loc254)
      } loc(#loc254)
      %20 = cir.load %11 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc146)
      %21 = cir.const #cir.int<0> : !s32i loc(#loc147)
      %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc148)
      %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc146)
      cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc149)
      %24 = cir.load %11 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc150)
      cir.delete.array %24 : <!s32i> loc(#loc150)
    } loc(#loc245)
    cir.return loc(#loc21)
  } loc(#loc209)
  cir.func internal private @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc261)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc155)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc156)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc262)
    cir.goto "source" loc(#loc263)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc160)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc161)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc264)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc266)
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc267)
      %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc268)
      %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc170)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc170)
      %9 = cir.const #cir.int<4> : !u64i loc(#loc269)
      %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc270)
      cir.store %10, %4 : !u64i, !cir.ptr<!u64i> loc(#loc271)
      %11 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc174)
      %12 = cir.call @_Znam(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc175)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc272)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc272)
      cir.store %14, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc273)
      cir.scope {
        %20 = cir.const #cir.int<0> : !s32i loc(#loc181)
        %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc181)
        cir.store %21, %5 : !u64i, !cir.ptr<!u64i> loc(#loc275)
        cir.for : cond {
          %22 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc183)
          %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc184)
          %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc184)
          %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc276)
          cir.condition(%25) loc(#loc276)
        } body {
          cir.scope {
            %22 = cir.const #cir.int<0> : !s32i loc(#loc186)
            %23 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc187)
            %24 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc188)
            %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !u64i), !cir.ptr<!s32i> loc(#loc189)
            cir.store %22, %25 : !s32i, !cir.ptr<!s32i> loc(#loc278)
          } loc(#loc277)
          cir.yield loc(#loc180)
        } step {
          %22 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc190)
          %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc191)
          cir.store %23, %5 : !u64i, !cir.ptr<!u64i> loc(#loc279)
          cir.yield loc(#loc274)
        } loc(#loc274)
      } loc(#loc274)
      %15 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc192)
      %16 = cir.const #cir.int<0> : !s32i loc(#loc193)
      %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc194)
      %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc192)
      cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc195)
      %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc196)
      cir.delete.array %19 : <!s32i> loc(#loc196)
    } loc(#loc265)
    cir.return loc(#loc152)
  } loc(#loc260)
  cir.func @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_184goodEv() extra(#fn_attr1) {
    cir.call @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18L7goodG2BEv() : () -> () loc(#loc199)
    cir.return loc(#loc198)
  } loc(#loc280)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":79:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc17 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc18 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc19 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":46:1)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":122:1)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":48:5)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":48:9)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":58:9)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":58:13)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":59:9)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":59:28)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":60:9)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":60:32)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":61:9)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":61:41)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":50:13)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":50:12)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":50:5)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":51:5)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":51:10)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":52:1)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":62:9)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":97:17)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":63:9)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":96:9)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":72:36)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":72:45)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":72:58)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":72:29)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":72:13)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":72:69)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":73:13)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":76:13)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":73:17)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":73:34)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":74:13)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":75:17)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":77:20)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":77:21)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":77:30)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":77:33)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":77:47)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":77:13)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":77:48)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":78:34)
#loc62 = loc("/usr/include/netinet/in.h":249:5)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":78:13)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":79:39)
#loc65 = loc("/usr/include/netinet/in.h":251:20)
#loc66 = loc("/usr/include/netinet/in.h":33:15)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":79:13)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":79:59)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":80:38)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":80:32)
#loc71 = loc("/usr/include/netinet/in.h":250:15)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":80:13)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":80:46)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":81:13)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":84:13)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":81:25)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":81:58)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":81:59)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":81:68)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":81:82)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":81:17)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":81:88)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":82:13)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":83:17)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":87:31)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":87:46)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":87:59)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":87:77)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":87:80)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":87:26)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":87:13)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":87:81)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":88:13)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":91:13)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":88:17)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":88:31)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":88:44)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":88:47)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":88:61)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":89:13)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":90:17)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":93:39)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":93:25)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":93:13)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":95:25)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":95:20)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":95:13)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":95:36)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":97:16)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":98:9)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":101:9)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":98:13)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":98:30)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":99:9)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":100:26)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":100:13)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":109:5)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":121:5)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":110:9)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":110:16)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":110:26)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":111:9)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":111:14)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":113:21)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":113:28)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":113:38)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":113:9)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":114:37)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":46:6)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":114:28)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":114:46)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":114:9)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":115:9)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":118:9)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":115:18)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":115:14)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":115:21)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":115:33)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":116:9)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":117:29)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":117:13)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":117:24)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":117:25)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":115:40)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":115:39)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":119:22)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":119:33)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":119:34)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":119:9)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":120:19)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":129:1)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":151:1)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":131:5)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":131:9)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":133:13)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":133:12)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":133:5)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":134:5)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":134:10)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":135:1)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":137:12)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":137:5)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":138:5)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":150:5)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":139:9)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":139:16)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":139:26)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":140:9)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":140:14)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":142:21)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":142:28)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":142:38)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":142:9)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":143:37)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":129:13)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":143:28)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":143:46)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":143:9)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":144:9)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":147:9)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":144:18)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":144:14)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":144:21)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":144:33)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":145:9)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":146:29)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":146:13)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":146:24)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":146:25)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":144:40)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":144:39)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":148:22)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":148:33)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":148:34)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":148:9)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":149:19)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":153:1)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":156:1)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_18.cpp":155:5)
#loc200 = loc(fused[#loc1, #loc2])
#loc201 = loc(fused[#loc3, #loc4])
#loc202 = loc(fused[#loc6, #loc7])
#loc203 = loc(fused[#loc8, #loc9])
#loc204 = loc(fused[#loc10, #loc11])
#loc205 = loc(fused[#loc12, #loc13])
#loc206 = loc(fused[#loc14, #loc15])
#loc207 = loc(fused[#loc16, #loc17])
#loc208 = loc(fused[#loc18, #loc19])
#loc209 = loc(fused[#loc20, #loc21])
#loc210 = loc(fused[#loc22, #loc23])
#loc211 = loc(fused[#loc24, #loc25])
#loc212 = loc(fused[#loc26, #loc27])
#loc213 = loc(fused[#loc28, #loc29])
#loc214 = loc(fused[#loc30, #loc31])
#loc215 = loc(fused[#loc34, #loc32])
#loc216 = loc(fused[#loc35, #loc36])
#loc217 = loc(fused[#loc38, #loc39])
#loc218 = loc(fused[#loc40, #loc41])
#loc219 = loc(fused[#loc46, #loc47])
#loc220 = loc(fused[#loc48, #loc49])
#loc221 = loc(fused[#loc50, #loc51])
#loc222 = loc(fused[#loc52, #loc49])
#loc223 = loc(fused[#loc54, #loc55])
#loc224 = loc(fused[#loc57, #loc58])
#loc225 = loc(fused[#loc59, #loc60])
#loc226 = loc(fused[#loc63, #loc61])
#loc227 = loc(fused[#loc67, #loc68])
#loc228 = loc(fused[#loc72, #loc73])
#loc229 = loc(fused[#loc74, #loc75])
#loc230 = loc(fused[#loc77, #loc78])
#loc231 = loc(fused[#loc79, #loc80])
#loc232 = loc(fused[#loc81, #loc82])
#loc233 = loc(fused[#loc83, #loc75])
#loc234 = loc(fused[#loc87, #loc88])
#loc235 = loc(fused[#loc91, #loc92])
#loc236 = loc(fused[#loc93, #loc94])
#loc237 = loc(fused[#loc95, #loc96])
#loc238 = loc(fused[#loc98, #loc99])
#loc239 = loc(fused[#loc100, #loc94])
#loc240 = loc(fused[#loc104, #loc102])
#loc241 = loc(fused[#loc107, #loc108])
#loc242 = loc(fused[#loc110, #loc111])
#loc243 = loc(fused[#loc112, #loc113])
#loc244 = loc(fused[#loc114, #loc111])
#loc245 = loc(fused[#loc117, #loc118])
#loc246 = loc(fused[#loc119, #loc120])
#loc247 = loc(fused[#loc119, #loc121])
#loc248 = loc(fused[#loc122, #loc123])
#loc249 = loc(fused[#loc125, #loc126])
#loc250 = loc(fused[#loc124, #loc126])
#loc251 = loc(fused[#loc127, #loc126])
#loc252 = loc(fused[#loc130, #loc131])
#loc253 = loc(fused[#loc132, #loc131])
#loc254 = loc(fused[#loc133, #loc134])
#loc255 = loc(fused[#loc136, #loc135])
#loc256 = loc(fused[#loc137, #loc138])
#loc257 = loc(fused[#loc139, #loc134])
#loc258 = loc(fused[#loc141, #loc140])
#loc259 = loc(fused[#loc145, #loc144])
#loc260 = loc(fused[#loc151, #loc152])
#loc261 = loc(fused[#loc153, #loc154])
#loc262 = loc(fused[#loc157, #loc155])
#loc263 = loc(fused[#loc158, #loc159])
#loc264 = loc(fused[#loc162, #loc161])
#loc265 = loc(fused[#loc163, #loc164])
#loc266 = loc(fused[#loc165, #loc166])
#loc267 = loc(fused[#loc165, #loc167])
#loc268 = loc(fused[#loc168, #loc169])
#loc269 = loc(fused[#loc171, #loc172])
#loc270 = loc(fused[#loc170, #loc172])
#loc271 = loc(fused[#loc173, #loc172])
#loc272 = loc(fused[#loc176, #loc177])
#loc273 = loc(fused[#loc178, #loc177])
#loc274 = loc(fused[#loc179, #loc180])
#loc275 = loc(fused[#loc182, #loc181])
#loc276 = loc(fused[#loc183, #loc184])
#loc277 = loc(fused[#loc185, #loc180])
#loc278 = loc(fused[#loc187, #loc186])
#loc279 = loc(fused[#loc191, #loc190])
#loc280 = loc(fused[#loc197, #loc198])
