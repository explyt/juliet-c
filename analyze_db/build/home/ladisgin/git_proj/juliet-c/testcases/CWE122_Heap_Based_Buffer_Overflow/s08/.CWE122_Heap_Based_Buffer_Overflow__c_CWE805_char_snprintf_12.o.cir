!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc161)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc162)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc163)
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc164)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc165)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc166)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc168)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc169)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc20)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc170)
    cir.br ^bb1 loc(#loc171)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc172)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc172)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc24)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc24)
    cir.brcond %6 ^bb2, ^bb7 loc(#loc173)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc29)
    %8 = cir.const #cir.int<50> : !s32i loc(#loc30)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc30)
    %10 = cir.const #cir.int<1> : !u64i loc(#loc174)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc175)
    %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc29)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc176)
    cir.store %13, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc177)
    cir.br ^bb3 loc(#loc178)
  ^bb3:  // pred: ^bb2
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc38)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc38)
    %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc179)
    cir.brcond %17 ^bb4, ^bb5 loc(#loc180)
  ^bb4:  // pred: ^bb3
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc40)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc42)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc40)
    cir.br ^bb5 loc(#loc36)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc36)
  ^bb6:  // pred: ^bb5
    %21 = cir.const #cir.int<0> : !s32i loc(#loc43)
    %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc43)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc45)
    %25 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc46)
    cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc181)
    cir.br ^bb12 loc(#loc27)
  ^bb7:  // pred: ^bb1
    %26 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc47)
    %27 = cir.const #cir.int<100> : !s32i loc(#loc48)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc48)
    %29 = cir.const #cir.int<1> : !u64i loc(#loc182)
    %30 = cir.binop(mul, %28, %29) : !u64i loc(#loc183)
    %31 = cir.call @malloc(%30) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc47)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc184)
    cir.store %32, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc185)
    cir.br ^bb8 loc(#loc186)
  ^bb8:  // pred: ^bb7
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc56)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc56)
    %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!s8i>, !cir.bool loc(#loc187)
    cir.brcond %36 ^bb9, ^bb10 loc(#loc188)
  ^bb9:  // pred: ^bb8
    %37 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc58)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %39 = cir.unary(minus, %38) : !s32i, !s32i loc(#loc60)
    cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc58)
    cir.br ^bb10 loc(#loc54)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc54)
  ^bb11:  // pred: ^bb10
    %40 = cir.const #cir.int<0> : !s32i loc(#loc61)
    %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc61)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
    %43 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %44 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc64)
    cir.store %41, %44 : !s8i, !cir.ptr<!s8i> loc(#loc189)
    cir.br ^bb12 loc(#loc23)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc23)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc190)
  ^bb14:  // pred: ^bb13
    %45 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc67)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc67)
    %47 = cir.const #cir.int<67> : !s32i loc(#loc68)
    %48 = cir.const #cir.int<100> : !s32i loc(#loc69)
    %49 = cir.const #cir.int<1> : !s32i loc(#loc70)
    %50 = cir.binop(sub, %48, %49) nsw : !s32i loc(#loc69)
    %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc69)
    cir.libc.memset %51 bytes from %46 set to %47 : !cir.ptr<!void>, !s32i, !u64i loc(#loc191)
    %52 = cir.const #cir.int<0> : !s32i loc(#loc73)
    %53 = cir.cast(integral, %52 : !s32i), !s8i loc(#loc73)
    %54 = cir.const #cir.int<100> : !s32i loc(#loc74)
    %55 = cir.const #cir.int<1> : !s32i loc(#loc75)
    %56 = cir.binop(sub, %54, %55) nsw : !s32i loc(#loc74)
    %57 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc76)
    %58 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %56 : !s32i), !cir.ptr<!s8i> loc(#loc76)
    cir.store %53, %58 : !s8i, !cir.ptr<!s8i> loc(#loc192)
    %59 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc77)
    %60 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
    %61 = cir.const #cir.int<100> : !s32i loc(#loc79)
    %62 = cir.cast(integral, %61 : !s32i), !u64i loc(#loc79)
    %63 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc9)
    %64 = cir.cast(array_to_ptrdecay, %63 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc9)
    %65 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc80)
    %66 = cir.call @snprintf(%60, %62, %64, %65) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc77)
    %67 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%67) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %68 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc83)
    %69 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
    %70 = cir.cast(bitcast, %69 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc84)
    cir.call @free(%70) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc83)
    cir.br ^bb15 loc(#loc66)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc15)
  } loc(#loc167)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc194)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc87)
    cir.return loc(#loc86)
  } loc(#loc193)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc196)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc197)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc95)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc198)
    cir.br ^bb1 loc(#loc199)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc200)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc200)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc99)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc99)
    cir.brcond %6 ^bb2, ^bb7 loc(#loc201)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc104)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc105)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc105)
    %10 = cir.const #cir.int<1> : !u64i loc(#loc202)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc203)
    %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc104)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc204)
    cir.store %13, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc205)
    cir.br ^bb3 loc(#loc206)
  ^bb3:  // pred: ^bb2
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc113)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc113)
    %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc207)
    cir.brcond %17 ^bb4, ^bb5 loc(#loc208)
  ^bb4:  // pred: ^bb3
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc115)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc117)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc115)
    cir.br ^bb5 loc(#loc111)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc111)
  ^bb6:  // pred: ^bb5
    %21 = cir.const #cir.int<0> : !s32i loc(#loc118)
    %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc118)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc120)
    %25 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc121)
    cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc209)
    cir.br ^bb12 loc(#loc102)
  ^bb7:  // pred: ^bb1
    %26 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc122)
    %27 = cir.const #cir.int<100> : !s32i loc(#loc123)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc123)
    %29 = cir.const #cir.int<1> : !u64i loc(#loc210)
    %30 = cir.binop(mul, %28, %29) : !u64i loc(#loc211)
    %31 = cir.call @malloc(%30) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc122)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc212)
    cir.store %32, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc213)
    cir.br ^bb8 loc(#loc214)
  ^bb8:  // pred: ^bb7
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
    %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc131)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc131)
    %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!s8i>, !cir.bool loc(#loc215)
    cir.brcond %36 ^bb9, ^bb10 loc(#loc216)
  ^bb9:  // pred: ^bb8
    %37 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc133)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc134)
    %39 = cir.unary(minus, %38) : !s32i, !s32i loc(#loc135)
    cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc133)
    cir.br ^bb10 loc(#loc129)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc129)
  ^bb11:  // pred: ^bb10
    %40 = cir.const #cir.int<0> : !s32i loc(#loc136)
    %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc136)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
    %43 = cir.const #cir.int<0> : !s32i loc(#loc138)
    %44 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc139)
    cir.store %41, %44 : !s8i, !cir.ptr<!s8i> loc(#loc217)
    cir.br ^bb12 loc(#loc98)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc98)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc218)
  ^bb14:  // pred: ^bb13
    %45 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc142)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc142)
    %47 = cir.const #cir.int<67> : !s32i loc(#loc143)
    %48 = cir.const #cir.int<100> : !s32i loc(#loc144)
    %49 = cir.const #cir.int<1> : !s32i loc(#loc145)
    %50 = cir.binop(sub, %48, %49) nsw : !s32i loc(#loc144)
    %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc144)
    cir.libc.memset %51 bytes from %46 set to %47 : !cir.ptr<!void>, !s32i, !u64i loc(#loc219)
    %52 = cir.const #cir.int<0> : !s32i loc(#loc148)
    %53 = cir.cast(integral, %52 : !s32i), !s8i loc(#loc148)
    %54 = cir.const #cir.int<100> : !s32i loc(#loc149)
    %55 = cir.const #cir.int<1> : !s32i loc(#loc150)
    %56 = cir.binop(sub, %54, %55) nsw : !s32i loc(#loc149)
    %57 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc151)
    %58 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %56 : !s32i), !cir.ptr<!s8i> loc(#loc151)
    cir.store %53, %58 : !s8i, !cir.ptr<!s8i> loc(#loc220)
    %59 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc152)
    %60 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
    %61 = cir.const #cir.int<100> : !s32i loc(#loc154)
    %62 = cir.cast(integral, %61 : !s32i), !u64i loc(#loc154)
    %63 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc155)
    %64 = cir.cast(array_to_ptrdecay, %63 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc155)
    %65 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc156)
    %66 = cir.call @snprintf(%60, %62, %64, %65) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc152)
    %67 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
    cir.call @printLine(%67) : (!cir.ptr<!s8i>) -> () loc(#loc158)
    %68 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc159)
    %69 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
    %70 = cir.cast(bitcast, %69 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc160)
    cir.call @free(%70) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc159)
    cir.br ^bb15 loc(#loc141)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc90)
  } loc(#loc195)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/stdio.h":385:1)
#loc8 = loc("/usr/include/stdio.h":387:62)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":52:29)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("/usr/include/stdlib.h":687:1)
#loc13 = loc("/usr/include/stdlib.h":687:32)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":29:1)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":56:1)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":48:9)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":48:24)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":31:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":31:12)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":32:12)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":32:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":33:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":46:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":33:8)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":33:33)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":34:5)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":39:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":41:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":36:24)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":36:31)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":36:34)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":36:45)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":36:46)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":36:9)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":37:9)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":37:37)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":37:13)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":37:21)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":37:27)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":37:28)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":37:34)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":37:33)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":38:19)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":38:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":38:14)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":38:15)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":43:24)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":43:31)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":43:35)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":43:46)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":43:47)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":43:9)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":44:9)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":44:37)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":44:13)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":44:21)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":44:27)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":44:28)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":44:34)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":44:33)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":45:19)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":45:9)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":45:14)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":45:15)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":47:5)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":55:5)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":49:16)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":49:24)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":49:29)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":49:33)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":49:9)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":49:34)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":50:25)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":50:16)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":50:20)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":50:9)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":52:9)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":52:18)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":52:24)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":52:35)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":53:19)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":53:9)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":54:9)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":54:14)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":93:1)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":96:1)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":95:5)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":95:13)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":64:1)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":91:1)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":83:9)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":83:24)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":66:5)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":66:12)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":67:12)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":67:5)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":68:5)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":81:5)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":68:8)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":68:33)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":69:5)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":74:5)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":76:5)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":71:24)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":71:31)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":71:35)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":71:46)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":71:47)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":71:9)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":72:9)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":72:37)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":72:13)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":72:21)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":72:27)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":72:28)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":72:34)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":72:33)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":73:19)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":73:9)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":73:14)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":73:15)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":78:24)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":78:31)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":78:35)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":78:46)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":78:47)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":78:9)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":79:9)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":79:37)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":79:13)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":79:21)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":79:27)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":79:28)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":79:34)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":79:33)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":80:19)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":80:9)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":80:14)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":80:15)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":82:5)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":90:5)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":84:16)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":84:24)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":84:29)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":84:33)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":84:9)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":84:34)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":85:25)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":85:16)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":85:20)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":85:9)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":87:9)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":87:18)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":87:24)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":87:29)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":87:35)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":88:19)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":88:9)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":89:9)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_12.c":89:14)
#loc161 = loc(fused[#loc1, #loc2])
#loc162 = loc(fused[#loc3, #loc4])
#loc163 = loc(fused[#loc5, #loc6])
#loc164 = loc(fused[#loc7, #loc8])
#loc165 = loc(fused[#loc10, #loc11])
#loc166 = loc(fused[#loc12, #loc13])
#loc167 = loc(fused[#loc14, #loc15])
#loc168 = loc(fused[#loc16, #loc17])
#loc169 = loc(fused[#loc18, #loc19])
#loc170 = loc(fused[#loc21, #loc20])
#loc171 = loc(fused[#loc22, #loc23])
#loc172 = loc(fused[#loc24, #loc25])
#loc173 = loc(fused[#loc26, #loc27, #loc28, #loc23])
#loc174 = loc(fused[#loc31, #loc32])
#loc175 = loc(fused[#loc30, #loc32])
#loc176 = loc(fused[#loc29, #loc33])
#loc177 = loc(fused[#loc34, #loc33])
#loc178 = loc(fused[#loc35, #loc36])
#loc179 = loc(fused[#loc37, #loc38])
#loc180 = loc(fused[#loc39, #loc36])
#loc181 = loc(fused[#loc44, #loc43])
#loc182 = loc(fused[#loc49, #loc50])
#loc183 = loc(fused[#loc48, #loc50])
#loc184 = loc(fused[#loc47, #loc51])
#loc185 = loc(fused[#loc52, #loc51])
#loc186 = loc(fused[#loc53, #loc54])
#loc187 = loc(fused[#loc55, #loc56])
#loc188 = loc(fused[#loc57, #loc54])
#loc189 = loc(fused[#loc62, #loc61])
#loc190 = loc(fused[#loc65, #loc66])
#loc191 = loc(fused[#loc71, #loc72])
#loc192 = loc(fused[#loc76, #loc73])
#loc193 = loc(fused[#loc85, #loc86])
#loc194 = loc(fused[#loc87, #loc88])
#loc195 = loc(fused[#loc89, #loc90])
#loc196 = loc(fused[#loc91, #loc92])
#loc197 = loc(fused[#loc93, #loc94])
#loc198 = loc(fused[#loc96, #loc95])
#loc199 = loc(fused[#loc97, #loc98])
#loc200 = loc(fused[#loc99, #loc100])
#loc201 = loc(fused[#loc101, #loc102, #loc103, #loc98])
#loc202 = loc(fused[#loc106, #loc107])
#loc203 = loc(fused[#loc105, #loc107])
#loc204 = loc(fused[#loc104, #loc108])
#loc205 = loc(fused[#loc109, #loc108])
#loc206 = loc(fused[#loc110, #loc111])
#loc207 = loc(fused[#loc112, #loc113])
#loc208 = loc(fused[#loc114, #loc111])
#loc209 = loc(fused[#loc119, #loc118])
#loc210 = loc(fused[#loc124, #loc125])
#loc211 = loc(fused[#loc123, #loc125])
#loc212 = loc(fused[#loc122, #loc126])
#loc213 = loc(fused[#loc127, #loc126])
#loc214 = loc(fused[#loc128, #loc129])
#loc215 = loc(fused[#loc130, #loc131])
#loc216 = loc(fused[#loc132, #loc129])
#loc217 = loc(fused[#loc137, #loc136])
#loc218 = loc(fused[#loc140, #loc141])
#loc219 = loc(fused[#loc146, #loc147])
#loc220 = loc(fused[#loc151, #loc148])
