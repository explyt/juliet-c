!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s01/CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc191)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc192)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc193)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc194)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc195)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc196)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc197)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc198)
  cir.func private @close(!s32i) -> !s32i loc(#loc199)
  cir.func private @printHexCharLine(!s8i) loc(#loc200)
  cir.func no_proto @CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc202)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc26)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc203)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc205)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc205)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc30)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc30)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc208)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc209)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc210)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc211)
          %11 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc212)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc42)
          %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc42)
          cir.store %13, %9 : !s32i, !cir.ptr<!s32i> loc(#loc210)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc44)
          %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc44)
          cir.store %15, %10 : !s32i, !cir.ptr<!s32i> loc(#loc211)
          cir.scope {
            cir.do {
              cir.scope {
                %16 = cir.const #cir.int<2> : !s32i loc(#loc51)
                %17 = cir.const #cir.int<1> : !s32i loc(#loc52)
                %18 = cir.const #cir.int<6> : !s32i loc(#loc53)
                %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc54)
                cir.store %19, %9 : !s32i, !cir.ptr<!s32i> loc(#loc215)
                cir.scope {
                  %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc59)
                  %62 = cir.const #cir.int<1> : !s32i loc(#loc60)
                  %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc60)
                  %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc217)
                  cir.if %64 {
                    cir.break loc(#loc62)
                  } loc(#loc218)
                } loc(#loc216)
                %20 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc219)
                %21 = cir.const #cir.int<0> : !s32i loc(#loc65)
                %22 = cir.const #cir.int<16> : !u64i loc(#loc220)
                cir.libc.memset %22 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc221)
                %23 = cir.const #cir.int<2> : !s32i loc(#loc70)
                %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc70)
                %25 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
                cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc222)
                %26 = cir.const #cir.int<0> : !s32i loc(#loc73)
                %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc73)
                %28 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc74)
                %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc75)
                cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc223)
                %30 = cir.const #cir.int<27015> : !s32i loc(#loc77)
                %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc77)
                %32 = cir.call @htons(%31) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc78)
                %33 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc79)
                cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc224)
                cir.scope {
                  %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc84)
                  %62 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc226)
                  %63 = cir.const #cir.int<16> : !u64i loc(#loc227)
                  %64 = cir.cast(integral, %63 : !u64i), !u32i loc(#loc227)
                  %65 = cir.call @bind(%61, %62, %64) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc89)
                  %66 = cir.const #cir.int<1> : !s32i loc(#loc90)
                  %67 = cir.unary(minus, %66) nsw : !s32i, !s32i loc(#loc90)
                  %68 = cir.cmp(eq, %65, %67) : !s32i, !cir.bool loc(#loc228)
                  cir.if %68 {
                    cir.break loc(#loc92)
                  } loc(#loc229)
                } loc(#loc225)
                cir.scope {
                  %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc95)
                  %62 = cir.const #cir.int<5> : !s32i loc(#loc96)
                  %63 = cir.call @listen(%61, %62) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc97)
                  %64 = cir.const #cir.int<1> : !s32i loc(#loc98)
                  %65 = cir.unary(minus, %64) nsw : !s32i, !s32i loc(#loc98)
                  %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc231)
                  cir.if %66 {
                    cir.break loc(#loc100)
                  } loc(#loc232)
                } loc(#loc230)
                %34 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc101)
                %35 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc102)
                %36 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc103)
                %37 = cir.call @accept(%34, %35, %36) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc104)
                cir.store %37, %10 : !s32i, !cir.ptr<!s32i> loc(#loc233)
                cir.scope {
                  %61 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc109)
                  %62 = cir.const #cir.int<1> : !s32i loc(#loc110)
                  %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc110)
                  %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc235)
                  cir.if %64 {
                    cir.break loc(#loc112)
                  } loc(#loc236)
                } loc(#loc234)
                %38 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc113)
                %39 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc114)
                %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc114)
                %41 = cir.const #cir.int<3> : !s32i loc(#loc115)
                %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc115)
                %43 = cir.const #cir.int<4> : !u64i loc(#loc115)
                %44 = cir.binop(mul, %42, %43) : !u64i loc(#loc115)
                %45 = cir.const #cir.int<2> : !s32i loc(#loc115)
                %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc115)
                %47 = cir.binop(add, %44, %46) : !u64i loc(#loc115)
                %48 = cir.const #cir.int<1> : !s32i loc(#loc116)
                %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc116)
                %50 = cir.binop(sub, %47, %49) : !u64i loc(#loc237)
                %51 = cir.const #cir.int<0> : !s32i loc(#loc117)
                %52 = cir.call @recv(%38, %40, %50, %51) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc118)
                %53 = cir.cast(integral, %52 : !s64i), !s32i loc(#loc118)
                cir.store %53, %7 : !s32i, !cir.ptr<!s32i> loc(#loc238)
                cir.scope {
                  %61 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc123)
                  %62 = cir.const #cir.int<1> : !s32i loc(#loc124)
                  %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc124)
                  %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc240)
                  %65 = cir.ternary(%64, true {
                    %66 = cir.const #true loc(#loc125)
                    cir.yield %66 : !cir.bool loc(#loc125)
                  }, false {
                    %66 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc126)
                    %67 = cir.const #cir.int<0> : !s32i loc(#loc127)
                    %68 = cir.cmp(eq, %66, %67) : !s32i, !cir.bool loc(#loc241)
                    %69 = cir.ternary(%68, true {
                      %70 = cir.const #true loc(#loc125)
                      cir.yield %70 : !cir.bool loc(#loc125)
                    }, false {
                      %70 = cir.const #false loc(#loc125)
                      cir.yield %70 : !cir.bool loc(#loc125)
                    }) : (!cir.bool) -> !cir.bool loc(#loc125)
                    cir.yield %69 : !cir.bool loc(#loc125)
                  }) : (!cir.bool) -> !cir.bool loc(#loc125)
                  cir.if %65 {
                    cir.break loc(#loc129)
                  } loc(#loc242)
                } loc(#loc239)
                %54 = cir.const #cir.int<0> : !s32i loc(#loc130)
                %55 = cir.cast(integral, %54 : !s32i), !s8i loc(#loc130)
                %56 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc131)
                %57 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc132)
                %58 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %56 : !s32i), !cir.ptr<!s8i> loc(#loc132)
                cir.store %55, %58 : !s8i, !cir.ptr<!s8i> loc(#loc243)
                %59 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc133)
                %60 = cir.call @atoi(%59) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc134)
                cir.store %60, %0 : !s32i, !cir.ptr<!s32i> loc(#loc244)
              } loc(#loc214)
              cir.yield loc(#loc48)
            } while {
              %16 = cir.const #cir.int<0> : !s32i loc(#loc137)
              %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc137)
              cir.condition(%17) loc(#loc137)
            } loc(#loc213)
          } loc(#loc213)
          cir.scope {
            %16 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc140)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc141)
            %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc141)
            %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc246)
            cir.if %19 {
              %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc143)
              %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc144)
            } loc(#loc247)
          } loc(#loc245)
          cir.scope {
            %16 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc147)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc148)
            %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc148)
            %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc249)
            cir.if %19 {
              %20 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc150)
              %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc151)
            } loc(#loc250)
          } loc(#loc248)
        } loc(#loc207)
      } else {
        %7 = cir.const #cir.int<127> : !s32i loc(#loc152)
        %8 = cir.const #cir.int<5> : !s32i loc(#loc153)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc152)
        cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc251)
      } loc(#loc206)
    } loc(#loc204)
    cir.scope {
      %3 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc253)
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc158)
      %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc158)
      cir.store %5, %3 : !s8i, !cir.ptr<!s8i> loc(#loc253)
      %6 = cir.load %3 : !cir.ptr<!s8i>, !s8i loc(#loc159)
      cir.call @printHexCharLine(%6) : (!s8i) -> () loc(#loc160)
    } loc(#loc252)
    cir.return loc(#loc22)
  } loc(#loc201)
  cir.func no_proto @CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc255)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc163)
    cir.return loc(#loc162)
  } loc(#loc254)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc257)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc169)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc170)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc258)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc260)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc260)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc174)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc174)
      cir.if %6 {
        %7 = cir.const #cir.int<127> : !s32i loc(#loc179)
        %8 = cir.const #cir.int<5> : !s32i loc(#loc180)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc179)
        cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc262)
      } else {
        %7 = cir.const #cir.int<127> : !s32i loc(#loc182)
        %8 = cir.const #cir.int<5> : !s32i loc(#loc183)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc182)
        cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc263)
      } loc(#loc261)
    } loc(#loc259)
    cir.scope {
      %3 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc265)
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc188)
      %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc188)
      cir.store %5, %3 : !s8i, !cir.ptr<!s8i> loc(#loc265)
      %6 = cir.load %3 : !cir.ptr<!s8i>, !s8i loc(#loc189)
      cir.call @printHexCharLine(%6) : (!s8i) -> () loc(#loc190)
    } loc(#loc264)
    cir.return loc(#loc166)
  } loc(#loc256)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s01/CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/netinet/in.h":402:1)
#loc6 = loc("/usr/include/netinet/in.h":403:40)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc15 = loc("/usr/include/stdlib.h":105:1)
#loc16 = loc("/usr/include/stdlib.h":106:33)
#loc17 = loc("/usr/include/unistd.h":358:1)
#loc18 = loc("/usr/include/unistd.h":358:27)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc21 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":43:1)
#loc22 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":130:1)
#loc23 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":45:5)
#loc24 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":45:9)
#loc25 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":47:13)
#loc26 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":47:12)
#loc27 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":47:5)
#loc28 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":48:5)
#loc29 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":124:5)
#loc30 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":48:8)
#loc31 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":48:33)
#loc32 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":49:5)
#loc33 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":119:5)
#loc34 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":121:5)
#loc35 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":50:9)
#loc36 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":118:9)
#loc37 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":55:13)
#loc38 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":55:17)
#loc39 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":56:13)
#loc40 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":56:32)
#loc41 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":57:13)
#loc42 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":57:35)
#loc43 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":58:13)
#loc44 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":58:35)
#loc45 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":59:13)
#loc46 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":59:45)
#loc47 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":60:13)
#loc48 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":103:21)
#loc49 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":61:13)
#loc50 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":102:13)
#loc51 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":70:39)
#loc52 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":70:48)
#loc53 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":70:61)
#loc54 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":70:32)
#loc55 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":70:17)
#loc56 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":70:72)
#loc57 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":71:17)
#loc58 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":74:17)
#loc59 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":71:21)
#loc60 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":71:37)
#loc61 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":72:17)
#loc62 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":73:21)
#loc63 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":75:24)
#loc64 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":75:25)
#loc65 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":75:34)
#loc66 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":75:37)
#loc67 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":75:51)
#loc68 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":75:17)
#loc69 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":75:52)
#loc70 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":76:38)
#loc71 = loc("/usr/include/netinet/in.h":249:5)
#loc72 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":76:17)
#loc73 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":77:43)
#loc74 = loc("/usr/include/netinet/in.h":251:20)
#loc75 = loc("/usr/include/netinet/in.h":33:15)
#loc76 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":77:17)
#loc77 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":78:42)
#loc78 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":78:36)
#loc79 = loc("/usr/include/netinet/in.h":250:15)
#loc80 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":78:17)
#loc81 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":78:50)
#loc82 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":79:17)
#loc83 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":82:17)
#loc84 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":79:26)
#loc85 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":79:58)
#loc86 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":79:59)
#loc87 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":79:68)
#loc88 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":79:82)
#loc89 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":79:21)
#loc90 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":79:88)
#loc91 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":80:17)
#loc92 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":81:21)
#loc93 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":83:17)
#loc94 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":86:17)
#loc95 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":83:28)
#loc96 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":83:42)
#loc97 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":83:21)
#loc98 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":83:61)
#loc99 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":84:17)
#loc100 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":85:21)
#loc101 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":87:39)
#loc102 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":87:53)
#loc103 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":87:59)
#loc104 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":87:32)
#loc105 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":87:17)
#loc106 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":87:63)
#loc107 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":88:17)
#loc108 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":91:17)
#loc109 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":88:21)
#loc110 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":88:37)
#loc111 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":89:17)
#loc112 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":90:21)
#loc113 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":93:35)
#loc114 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":93:49)
#loc115 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":93:62)
#loc116 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":93:80)
#loc117 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":93:83)
#loc118 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":93:30)
#loc119 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":93:17)
#loc120 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":93:84)
#loc121 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":94:17)
#loc122 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":97:17)
#loc123 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":94:21)
#loc124 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":94:35)
#loc125 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":94:48)
#loc126 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":94:51)
#loc127 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":94:65)
#loc128 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":95:17)
#loc129 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":96:21)
#loc130 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":99:43)
#loc131 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":99:29)
#loc132 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":99:17)
#loc133 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":101:29)
#loc134 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":101:24)
#loc135 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":101:17)
#loc136 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":101:40)
#loc137 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":103:20)
#loc138 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":104:13)
#loc139 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":107:13)
#loc140 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":104:17)
#loc141 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":104:33)
#loc142 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":105:13)
#loc143 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":106:30)
#loc144 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":106:17)
#loc145 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":108:13)
#loc146 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":111:13)
#loc147 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":108:17)
#loc148 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":108:33)
#loc149 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":109:13)
#loc150 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":110:30)
#loc151 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":110:17)
#loc152 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":123:16)
#loc153 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":123:25)
#loc154 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":123:9)
#loc155 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":125:5)
#loc156 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":129:5)
#loc157 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":127:9)
#loc158 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":127:31)
#loc159 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":128:26)
#loc160 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":128:9)
#loc161 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":160:1)
#loc162 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":163:1)
#loc163 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":162:5)
#loc164 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":162:13)
#loc165 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":138:1)
#loc166 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":158:1)
#loc167 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":140:5)
#loc168 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":140:9)
#loc169 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":142:13)
#loc170 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":142:12)
#loc171 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":142:5)
#loc172 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":143:5)
#loc173 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":152:5)
#loc174 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":143:8)
#loc175 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":143:33)
#loc176 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":144:5)
#loc177 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":147:5)
#loc178 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":149:5)
#loc179 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":146:16)
#loc180 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":146:25)
#loc181 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":146:9)
#loc182 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":151:16)
#loc183 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":151:25)
#loc184 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":151:9)
#loc185 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":153:5)
#loc186 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":157:5)
#loc187 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":155:9)
#loc188 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":155:31)
#loc189 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":156:26)
#loc190 = loc("CWE197_Numeric_Truncation_Error__int_listen_socket_to_char_12.c":156:9)
#loc191 = loc(fused[#loc1, #loc2])
#loc192 = loc(fused[#loc3, #loc4])
#loc193 = loc(fused[#loc5, #loc6])
#loc194 = loc(fused[#loc7, #loc8])
#loc195 = loc(fused[#loc9, #loc10])
#loc196 = loc(fused[#loc11, #loc12])
#loc197 = loc(fused[#loc13, #loc14])
#loc198 = loc(fused[#loc15, #loc16])
#loc199 = loc(fused[#loc17, #loc18])
#loc200 = loc(fused[#loc19, #loc20])
#loc201 = loc(fused[#loc21, #loc22])
#loc202 = loc(fused[#loc23, #loc24])
#loc203 = loc(fused[#loc27, #loc25])
#loc204 = loc(fused[#loc28, #loc29])
#loc205 = loc(fused[#loc30, #loc31])
#loc206 = loc(fused[#loc32, #loc33, #loc34, #loc29])
#loc207 = loc(fused[#loc35, #loc36])
#loc208 = loc(fused[#loc37, #loc38])
#loc209 = loc(fused[#loc39, #loc40])
#loc210 = loc(fused[#loc41, #loc42])
#loc211 = loc(fused[#loc43, #loc44])
#loc212 = loc(fused[#loc45, #loc46])
#loc213 = loc(fused[#loc47, #loc48])
#loc214 = loc(fused[#loc49, #loc50])
#loc215 = loc(fused[#loc55, #loc56])
#loc216 = loc(fused[#loc57, #loc58])
#loc217 = loc(fused[#loc59, #loc60])
#loc218 = loc(fused[#loc61, #loc58])
#loc219 = loc(fused[#loc63, #loc64])
#loc220 = loc(fused[#loc66, #loc67])
#loc221 = loc(fused[#loc68, #loc69])
#loc222 = loc(fused[#loc72, #loc70])
#loc223 = loc(fused[#loc76, #loc73])
#loc224 = loc(fused[#loc80, #loc81])
#loc225 = loc(fused[#loc82, #loc83])
#loc226 = loc(fused[#loc85, #loc86])
#loc227 = loc(fused[#loc87, #loc88])
#loc228 = loc(fused[#loc89, #loc90])
#loc229 = loc(fused[#loc91, #loc83])
#loc230 = loc(fused[#loc93, #loc94])
#loc231 = loc(fused[#loc97, #loc98])
#loc232 = loc(fused[#loc99, #loc94])
#loc233 = loc(fused[#loc105, #loc106])
#loc234 = loc(fused[#loc107, #loc108])
#loc235 = loc(fused[#loc109, #loc110])
#loc236 = loc(fused[#loc111, #loc108])
#loc237 = loc(fused[#loc115, #loc116])
#loc238 = loc(fused[#loc119, #loc120])
#loc239 = loc(fused[#loc121, #loc122])
#loc240 = loc(fused[#loc123, #loc124])
#loc241 = loc(fused[#loc126, #loc127])
#loc242 = loc(fused[#loc128, #loc122])
#loc243 = loc(fused[#loc132, #loc130])
#loc244 = loc(fused[#loc135, #loc136])
#loc245 = loc(fused[#loc138, #loc139])
#loc246 = loc(fused[#loc140, #loc141])
#loc247 = loc(fused[#loc142, #loc139])
#loc248 = loc(fused[#loc145, #loc146])
#loc249 = loc(fused[#loc147, #loc148])
#loc250 = loc(fused[#loc149, #loc146])
#loc251 = loc(fused[#loc154, #loc153])
#loc252 = loc(fused[#loc155, #loc156])
#loc253 = loc(fused[#loc157, #loc158])
#loc254 = loc(fused[#loc161, #loc162])
#loc255 = loc(fused[#loc163, #loc164])
#loc256 = loc(fused[#loc165, #loc166])
#loc257 = loc(fused[#loc167, #loc168])
#loc258 = loc(fused[#loc171, #loc169])
#loc259 = loc(fused[#loc172, #loc173])
#loc260 = loc(fused[#loc174, #loc175])
#loc261 = loc(fused[#loc176, #loc177, #loc178, #loc173])
#loc262 = loc(fused[#loc181, #loc180])
#loc263 = loc(fused[#loc184, #loc183])
#loc264 = loc(fused[#loc185, #loc186])
#loc265 = loc(fused[#loc187, #loc188])
