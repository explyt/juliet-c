!s32i = !cir.int<s, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc5 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_66b.cpp":25:14)
#loc6 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_66b.cpp":25:40)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_66b.cpp":39:18)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_66b.cpp":39:44)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_66b.cpp":48:18)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_66b.cpp":48:44)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc40 = loc(fused[#loc5, #loc6])
#loc43 = loc(fused[#loc16, #loc17])
#loc47 = loc(fused[#loc29, #loc30])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_66b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc38)
  cir.func @_ZN64CWE762_Mismatched_Memory_Management_Routines__new_free_struct_667badSinkEPP14_twoIntsStruct(%arg0: !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(fused[#loc5, #loc6])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc40)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc41)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc9)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc10)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc11)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, %3 : !s32i), !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc8)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc10)
    cir.store %5, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc41)
    %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc12)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc13)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc13)
    cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc12)
    cir.return loc(#loc4)
  } loc(#loc39)
  cir.func @_ZN64CWE762_Mismatched_Memory_Management_Routines__new_free_struct_6611goodG2BSinkEPP14_twoIntsStruct(%arg0: !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(fused[#loc16, #loc17])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc43)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc44)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc20)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc21)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc22)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, %3 : !s32i), !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc19)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc21)
    cir.store %5, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc44)
    %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc23)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc24)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc24)
    cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc23)
    cir.return loc(#loc15)
  } loc(#loc42)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc45)
  cir.func @_ZN64CWE762_Mismatched_Memory_Management_Routines__new_free_struct_6611goodB2GSinkEPP14_twoIntsStruct(%arg0: !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(fused[#loc29, #loc30])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc47)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc48)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc33)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc34)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc35)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, %3 : !s32i), !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc32)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
    cir.store %5, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc48)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc36)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc36)
    cir.call @_ZdlPv(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc37)
    cir.return loc(#loc28)
  } loc(#loc46)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_66b.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":687:1)
#loc2 = loc("/usr/include/stdlib.h":687:32)
#loc3 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_66b.cpp":25:1)
#loc4 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_66b.cpp":32:1)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_66b.cpp":28:5)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_66b.cpp":28:39)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_66b.cpp":26:1)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_66b.cpp":28:28)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_66b.cpp":28:38)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_66b.cpp":31:5)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_66b.cpp":31:10)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_66b.cpp":39:1)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_66b.cpp":45:1)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_66b.cpp":41:5)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_66b.cpp":41:39)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_66b.cpp":40:1)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_66b.cpp":41:28)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_66b.cpp":41:38)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_66b.cpp":44:5)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_66b.cpp":44:10)
#loc25 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc26 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_66b.cpp":48:1)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_66b.cpp":53:1)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_66b.cpp":50:5)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_66b.cpp":50:39)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_66b.cpp":49:1)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_66b.cpp":50:28)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_66b.cpp":50:38)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_66b.cpp":52:12)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_66b.cpp":48:6)
#loc38 = loc(fused[#loc1, #loc2])
#loc39 = loc(fused[#loc3, #loc4])
#loc41 = loc(fused[#loc7, #loc8])
#loc42 = loc(fused[#loc14, #loc15])
#loc44 = loc(fused[#loc18, #loc19])
#loc45 = loc(fused[#loc25, #loc26])
#loc46 = loc(fused[#loc27, #loc28])
#loc48 = loc(fused[#loc31, #loc32])
