!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc39 = loc("../../../testcasesupport/std_testcase.h":96:16)
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i}>
module @"/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s03/CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" internal dsolocal @_ZL10staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc99)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc100)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc101)
  cir.func @_ZN56CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_073badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc103)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc104)
    cir.scope {
      %5 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc99)
      %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc15)
      %7 = cir.const #cir.int<5> : !s32i loc(#loc16)
      %8 = cir.cmp(eq, %6, %7) : !s32i, !cir.bool loc(#loc106)
      cir.if %8 {
        cir.scope {
          %9 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["dataBuffer"] {alignment = 4 : i64} loc(#loc109)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc22)
          %11 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc23)
          cir.store %10, %11 : !s32i, !cir.ptr<!s32i> loc(#loc110)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc25)
          %13 = cir.get_member %9[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc26)
          cir.store %12, %13 : !s32i, !cir.ptr<!s32i> loc(#loc111)
          cir.store %9, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc112)
        } loc(#loc108)
      } loc(#loc107)
    } loc(#loc105)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
    cir.call @printStructLine(%2) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc31)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc32)
    cir.call @_ZdlPv(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc33)
    cir.return loc(#loc8)
  } loc(#loc102)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc113)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc36)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc114)
  cir.func linkonce_odr @_ZN14_twoIntsStructC2Ev(%arg0: !cir.ptr<!ty__twoIntsStruct> loc("../../../testcasesupport/std_testcase.h":96:16)) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["this", init] {alignment = 8 : i64} loc(#loc39)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc39)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
    cir.return loc(#loc39)
  } loc(#loc39)
  cir.func internal private @_ZN56CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc116)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc44)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc117)
    cir.scope {
      %5 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc99)
      %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc48)
      %7 = cir.const #cir.int<5> : !s32i loc(#loc49)
      %8 = cir.cmp(ne, %6, %7) : !s32i, !cir.bool loc(#loc119)
      cir.if %8 {
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc36)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc36)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc53)
      } else {
        cir.scope {
          %9 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc122)
          %10 = cir.const #cir.int<8> : !u64i loc(#loc123)
          %11 = cir.call @_Znwm(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc122)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc123)
          cir.call @_ZN14_twoIntsStructC2Ev(%12) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr) loc(#loc57)
          cir.store %12, %9 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc122)
          %13 = cir.const #cir.int<2> : !s32i loc(#loc59)
          %14 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc60)
          %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc23)
          cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc124)
          %16 = cir.const #cir.int<2> : !s32i loc(#loc61)
          %17 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc62)
          %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc26)
          cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc125)
          %19 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc63)
          cir.store %19, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc126)
        } loc(#loc121)
      } loc(#loc120)
    } loc(#loc118)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc65)
    cir.call @printStructLine(%2) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc66)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc67)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc67)
    cir.call @_ZdlPv(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc68)
    cir.return loc(#loc41)
  } loc(#loc115)
  cir.func internal private @_ZN56CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc128)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc73)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc129)
    cir.scope {
      %5 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc99)
      %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc77)
      %7 = cir.const #cir.int<5> : !s32i loc(#loc78)
      %8 = cir.cmp(eq, %6, %7) : !s32i, !cir.bool loc(#loc131)
      cir.if %8 {
        cir.scope {
          %9 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc134)
          %10 = cir.const #cir.int<8> : !u64i loc(#loc135)
          %11 = cir.call @_Znwm(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc134)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc135)
          cir.call @_ZN14_twoIntsStructC2Ev(%12) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr) loc(#loc83)
          cir.store %12, %9 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc134)
          %13 = cir.const #cir.int<2> : !s32i loc(#loc85)
          %14 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc86)
          %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc23)
          cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc136)
          %16 = cir.const #cir.int<2> : !s32i loc(#loc87)
          %17 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc88)
          %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc26)
          cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc137)
          %19 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc89)
          cir.store %19, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc138)
        } loc(#loc133)
      } loc(#loc132)
    } loc(#loc130)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc91)
    cir.call @printStructLine(%2) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc92)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc93)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc93)
    cir.call @_ZdlPv(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc94)
    cir.return loc(#loc70)
  } loc(#loc127)
  cir.func @_ZN56CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_074goodEv() extra(#fn_attr1) {
    cir.call @_ZN56CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07L8goodG2B1Ev() : () -> () loc(#loc97)
    cir.call @_ZN56CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07L8goodG2B2Ev() : () -> () loc(#loc98)
    cir.return loc(#loc96)
  } loc(#loc139)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s03/CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":24:1)
#loc2 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":24:25)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc5 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc6 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":31:1)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":48:1)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":33:5)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":33:21)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":34:12)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":34:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":35:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":44:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":35:8)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":35:20)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":36:5)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":37:9)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":43:9)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":39:13)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":39:27)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":40:33)
#loc23 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":40:13)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":41:33)
#loc26 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":41:13)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":42:13)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":42:21)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":45:21)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":45:5)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":47:12)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":31:6)
#loc34 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc35 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":62:19)
#loc37 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc38 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":55:1)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":77:1)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":57:5)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":57:21)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":58:12)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":58:5)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":59:5)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":73:5)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":59:8)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":59:20)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":60:5)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":63:5)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":65:5)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":62:9)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":66:9)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":72:9)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":68:13)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":68:46)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":68:42)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":69:34)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":69:13)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":70:34)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":70:13)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":71:20)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":71:13)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":74:21)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":74:5)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":76:12)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":55:13)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":80:1)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":97:1)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":82:5)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":82:21)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":83:12)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":83:5)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":84:5)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":93:5)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":84:8)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":84:20)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":85:5)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":86:9)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":92:9)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":88:13)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":88:46)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":88:42)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":89:34)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":89:13)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":90:34)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":90:13)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":91:20)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":91:13)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":94:21)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":94:5)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":96:12)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":80:13)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":99:1)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":103:1)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":101:5)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__delete_struct_declare_07.cpp":102:5)
#loc99 = loc(fused[#loc1, #loc2])
#loc100 = loc(fused[#loc3, #loc4])
#loc101 = loc(fused[#loc5, #loc6])
#loc102 = loc(fused[#loc7, #loc8])
#loc103 = loc(fused[#loc9, #loc10])
#loc104 = loc(fused[#loc12, #loc11])
#loc105 = loc(fused[#loc13, #loc14])
#loc106 = loc(fused[#loc15, #loc16])
#loc107 = loc(fused[#loc17, #loc14])
#loc108 = loc(fused[#loc18, #loc19])
#loc109 = loc(fused[#loc20, #loc21])
#loc110 = loc(fused[#loc24, #loc22])
#loc111 = loc(fused[#loc27, #loc25])
#loc112 = loc(fused[#loc28, #loc29])
#loc113 = loc(fused[#loc34, #loc35])
#loc114 = loc(fused[#loc37, #loc38])
#loc115 = loc(fused[#loc40, #loc41])
#loc116 = loc(fused[#loc42, #loc43])
#loc117 = loc(fused[#loc45, #loc44])
#loc118 = loc(fused[#loc46, #loc47])
#loc119 = loc(fused[#loc48, #loc49])
#loc120 = loc(fused[#loc50, #loc51, #loc52, #loc47])
#loc121 = loc(fused[#loc54, #loc55])
#loc122 = loc(fused[#loc56, #loc57])
#loc123 = loc(fused[#loc58, #loc57])
#loc124 = loc(fused[#loc60, #loc59])
#loc125 = loc(fused[#loc62, #loc61])
#loc126 = loc(fused[#loc64, #loc63])
#loc127 = loc(fused[#loc69, #loc70])
#loc128 = loc(fused[#loc71, #loc72])
#loc129 = loc(fused[#loc74, #loc73])
#loc130 = loc(fused[#loc75, #loc76])
#loc131 = loc(fused[#loc77, #loc78])
#loc132 = loc(fused[#loc79, #loc76])
#loc133 = loc(fused[#loc80, #loc81])
#loc134 = loc(fused[#loc82, #loc83])
#loc135 = loc(fused[#loc84, #loc83])
#loc136 = loc(fused[#loc86, #loc85])
#loc137 = loc(fused[#loc88, #loc87])
#loc138 = loc(fused[#loc90, #loc89])
#loc139 = loc(fused[#loc95, #loc96])
