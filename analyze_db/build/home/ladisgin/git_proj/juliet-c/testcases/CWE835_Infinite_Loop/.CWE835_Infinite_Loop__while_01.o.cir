!s32i = !cir.int<s, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE835_Infinite_Loop/CWE835_Infinite_Loop__while_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc45)
  cir.func no_proto @CWE835_Infinite_Loop__while_01_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i", init] {alignment = 4 : i64} loc(#loc47)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc6)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc47)
    cir.br ^bb1 loc(#loc48)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc48)
  ^bb2:  // 2 preds: ^bb1, ^bb3
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc9)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc10)
    %4 = cir.cmp(ge, %2, %3) : !s32i, !cir.bool loc(#loc49)
    cir.brcond %4 ^bb3, ^bb4 loc(#loc11)
  ^bb3:  // pred: ^bb2
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc12)
    cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc13)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc14)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %8 = cir.binop(add, %6, %7) nsw : !s32i loc(#loc14)
    %9 = cir.const #cir.int<256> : !s32i loc(#loc16)
    %10 = cir.binop(rem, %8, %9) : !s32i loc(#loc50)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc51)
    cir.br ^bb2 loc(#loc8)
  ^bb4:  // pred: ^bb2
    cir.br ^bb5 loc(#loc8)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc4)
  } loc(#loc46)
  cir.func no_proto @CWE835_Infinite_Loop__while_01_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc53)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc21)
    cir.return loc(#loc20)
  } loc(#loc52)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i", init] {alignment = 4 : i64} loc(#loc55)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc26)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc55)
    cir.br ^bb1 loc(#loc56)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc56)
  ^bb2:  // 2 preds: ^bb1, ^bb7
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %4 = cir.cmp(ge, %2, %3) : !s32i, !cir.bool loc(#loc57)
    cir.brcond %4 ^bb3, ^bb8 loc(#loc31)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc58)
  ^bb4:  // pred: ^bb3
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    %6 = cir.const #cir.int<10> : !s32i loc(#loc35)
    %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc59)
    cir.brcond %7 ^bb5, ^bb6 loc(#loc60)
  ^bb5:  // pred: ^bb4
    cir.br ^bb8 loc(#loc37)
  ^bb6:  // pred: ^bb4
    cir.br ^bb7 loc(#loc33)
  ^bb7:  // pred: ^bb6
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc39)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc40)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %11 = cir.binop(add, %9, %10) nsw : !s32i loc(#loc40)
    %12 = cir.const #cir.int<256> : !s32i loc(#loc42)
    %13 = cir.binop(rem, %11, %12) : !s32i loc(#loc61)
    cir.store %13, %0 : !s32i, !cir.ptr<!s32i> loc(#loc62)
    cir.br ^bb2 loc(#loc28)
  ^bb8:  // 2 preds: ^bb2, ^bb5
    cir.br ^bb9 loc(#loc28)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc24)
  } loc(#loc54)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE835_Infinite_Loop/CWE835_Infinite_Loop__while_01.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE835_Infinite_Loop__while_01.c":10:1)
#loc4 = loc("CWE835_Infinite_Loop__while_01.c":20:1)
#loc5 = loc("CWE835_Infinite_Loop__while_01.c":12:5)
#loc6 = loc("CWE835_Infinite_Loop__while_01.c":12:13)
#loc7 = loc("CWE835_Infinite_Loop__while_01.c":15:5)
#loc8 = loc("CWE835_Infinite_Loop__while_01.c":19:5)
#loc9 = loc("CWE835_Infinite_Loop__while_01.c":15:11)
#loc10 = loc("CWE835_Infinite_Loop__while_01.c":15:16)
#loc11 = loc("CWE835_Infinite_Loop__while_01.c":15:13)
#loc12 = loc("CWE835_Infinite_Loop__while_01.c":17:22)
#loc13 = loc("CWE835_Infinite_Loop__while_01.c":17:9)
#loc14 = loc("CWE835_Infinite_Loop__while_01.c":18:14)
#loc15 = loc("CWE835_Infinite_Loop__while_01.c":18:18)
#loc16 = loc("CWE835_Infinite_Loop__while_01.c":18:23)
#loc17 = loc("CWE835_Infinite_Loop__while_01.c":18:13)
#loc18 = loc("CWE835_Infinite_Loop__while_01.c":18:9)
#loc19 = loc("CWE835_Infinite_Loop__while_01.c":42:1)
#loc20 = loc("CWE835_Infinite_Loop__while_01.c":45:1)
#loc21 = loc("CWE835_Infinite_Loop__while_01.c":44:5)
#loc22 = loc("CWE835_Infinite_Loop__while_01.c":44:11)
#loc23 = loc("CWE835_Infinite_Loop__while_01.c":26:1)
#loc24 = loc("CWE835_Infinite_Loop__while_01.c":40:1)
#loc25 = loc("CWE835_Infinite_Loop__while_01.c":28:5)
#loc26 = loc("CWE835_Infinite_Loop__while_01.c":28:13)
#loc27 = loc("CWE835_Infinite_Loop__while_01.c":30:5)
#loc28 = loc("CWE835_Infinite_Loop__while_01.c":39:5)
#loc29 = loc("CWE835_Infinite_Loop__while_01.c":30:11)
#loc30 = loc("CWE835_Infinite_Loop__while_01.c":30:16)
#loc31 = loc("CWE835_Infinite_Loop__while_01.c":30:13)
#loc32 = loc("CWE835_Infinite_Loop__while_01.c":33:9)
#loc33 = loc("CWE835_Infinite_Loop__while_01.c":36:9)
#loc34 = loc("CWE835_Infinite_Loop__while_01.c":33:13)
#loc35 = loc("CWE835_Infinite_Loop__while_01.c":33:18)
#loc36 = loc("CWE835_Infinite_Loop__while_01.c":34:9)
#loc37 = loc("CWE835_Infinite_Loop__while_01.c":35:13)
#loc38 = loc("CWE835_Infinite_Loop__while_01.c":37:22)
#loc39 = loc("CWE835_Infinite_Loop__while_01.c":37:9)
#loc40 = loc("CWE835_Infinite_Loop__while_01.c":38:14)
#loc41 = loc("CWE835_Infinite_Loop__while_01.c":38:18)
#loc42 = loc("CWE835_Infinite_Loop__while_01.c":38:23)
#loc43 = loc("CWE835_Infinite_Loop__while_01.c":38:13)
#loc44 = loc("CWE835_Infinite_Loop__while_01.c":38:9)
#loc45 = loc(fused[#loc1, #loc2])
#loc46 = loc(fused[#loc3, #loc4])
#loc47 = loc(fused[#loc5, #loc6])
#loc48 = loc(fused[#loc7, #loc8])
#loc49 = loc(fused[#loc9, #loc10])
#loc50 = loc(fused[#loc17, #loc16])
#loc51 = loc(fused[#loc18, #loc16])
#loc52 = loc(fused[#loc19, #loc20])
#loc53 = loc(fused[#loc21, #loc22])
#loc54 = loc(fused[#loc23, #loc24])
#loc55 = loc(fused[#loc25, #loc26])
#loc56 = loc(fused[#loc27, #loc28])
#loc57 = loc(fused[#loc29, #loc30])
#loc58 = loc(fused[#loc32, #loc33])
#loc59 = loc(fused[#loc34, #loc35])
#loc60 = loc(fused[#loc36, #loc33])
#loc61 = loc(fused[#loc43, #loc42])
#loc62 = loc(fused[#loc44, #loc42])
