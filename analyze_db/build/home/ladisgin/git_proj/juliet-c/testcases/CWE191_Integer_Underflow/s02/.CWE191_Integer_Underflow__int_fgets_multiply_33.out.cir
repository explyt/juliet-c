!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc145 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":137:10)
#loc146 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":137:14)
#loc147 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":137:20)
#loc148 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":137:32)
#loc217 = loc(fused[#loc145, #loc146])
#loc218 = loc(fused[#loc147, #loc148])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_multiply_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc161)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc162)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc163)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc164)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc165)
  cir.func @_ZN47CWE191_Integer_Underflow__int_fgets_multiply_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc167)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc168)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc17)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc18)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc171)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc171)
      cir.store %4, %3 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc171)
      cir.scope {
        %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc26)
        %6 = cir.const #cir.int<3> : !s32i loc(#loc27)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc27)
        %8 = cir.const #cir.int<4> : !u64i loc(#loc27)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc27)
        %10 = cir.const #cir.int<2> : !s32i loc(#loc27)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc27)
        %12 = cir.binop(add, %9, %11) : !u64i loc(#loc27)
        %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc27)
        %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc162)
        %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
        %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc29)
        %17 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc30)
        %18 = cir.cmp(ne, %16, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc173)
        cir.if %18 {
          %19 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc34)
          %20 = cir.call @atoi(%19) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc35)
          cir.store %20, %0 : !s32i, !cir.ptr<!s32i> loc(#loc175)
        } else {
          %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc38)
        } loc(#loc174)
      } loc(#loc172)
    } loc(#loc170)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc177)
      %4 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc42)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc42)
      cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc177)
      cir.scope {
        %6 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc45)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc46)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc179)
        cir.if %8 {
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc181)
          %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc50)
          %11 = cir.const #cir.int<2> : !s32i loc(#loc49)
          %12 = cir.binop(mul, %10, %11) nsw : !s32i loc(#loc50)
          cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc181)
          %13 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc51)
          cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc52)
        } loc(#loc180)
      } loc(#loc178)
    } loc(#loc176)
    cir.return loc(#loc13)
  } loc(#loc166)
  cir.func internal private @_ZN47CWE191_Integer_Underflow__int_fgets_multiply_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc183)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc184)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc58)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc59)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc185)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc61)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc62)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc186)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc188)
      %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc67)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc67)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc188)
      cir.scope {
        %8 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc70)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc71)
        %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc190)
        cir.if %10 {
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc192)
          %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc75)
          %13 = cir.const #cir.int<2> : !s32i loc(#loc74)
          %14 = cir.binop(mul, %12, %13) nsw : !s32i loc(#loc75)
          cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc192)
          %15 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc76)
          cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc77)
        } loc(#loc191)
      } loc(#loc189)
    } loc(#loc187)
    cir.return loc(#loc54)
  } loc(#loc182)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc78)
  cir.func internal private @_ZN47CWE191_Integer_Underflow__int_fgets_multiply_33L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc194)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc195)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc84)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc85)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc196)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc198)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc198)
      cir.store %4, %3 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc198)
      cir.scope {
        %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc93)
        %6 = cir.const #cir.int<3> : !s32i loc(#loc94)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc94)
        %8 = cir.const #cir.int<4> : !u64i loc(#loc94)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc94)
        %10 = cir.const #cir.int<2> : !s32i loc(#loc94)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc94)
        %12 = cir.binop(add, %9, %11) : !u64i loc(#loc94)
        %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc94)
        %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc162)
        %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc95)
        %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc96)
        %17 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc97)
        %18 = cir.cmp(ne, %16, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc200)
        cir.if %18 {
          %19 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc101)
          %20 = cir.call @atoi(%19) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc102)
          cir.store %20, %0 : !s32i, !cir.ptr<!s32i> loc(#loc202)
        } else {
          %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc105)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc105)
          cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc106)
        } loc(#loc201)
      } loc(#loc199)
    } loc(#loc197)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc204)
      %4 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc110)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc110)
      cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc204)
      cir.scope {
        %6 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc113)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc114)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc206)
        cir.if %8 {
          cir.scope {
            %9 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc118)
            %10 = cir.const #cir.int<2147483647> : !s32i loc(#loc119)
            %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc119)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc119)
            %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc119)
            %14 = cir.const #cir.int<2> : !s32i loc(#loc120)
            %15 = cir.binop(div, %13, %14) : !s32i loc(#loc209)
            %16 = cir.cmp(gt, %9, %15) : !s32i, !cir.bool loc(#loc210)
            cir.if %16 {
              %17 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc212)
              %18 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc127)
              %19 = cir.const #cir.int<2> : !s32i loc(#loc126)
              %20 = cir.binop(mul, %18, %19) nsw : !s32i loc(#loc127)
              cir.store %20, %17 : !s32i, !cir.ptr<!s32i> loc(#loc212)
              %21 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc128)
              cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc129)
            } else {
              %17 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc78)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc78)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc130)
            } loc(#loc211)
          } loc(#loc208)
        } loc(#loc207)
      } loc(#loc205)
    } loc(#loc203)
    cir.return loc(#loc80)
  } loc(#loc193)
  cir.func @_ZN47CWE191_Integer_Underflow__int_fgets_multiply_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN47CWE191_Integer_Underflow__int_fgets_multiply_33L7goodG2BEv() : () -> () loc(#loc133)
    cir.call @_ZN47CWE191_Integer_Underflow__int_fgets_multiply_33L7goodB2GEv() : () -> () loc(#loc134)
    cir.return loc(#loc132)
  } loc(#loc213)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc214)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc215)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc139)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc140)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc141)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc142)
  cir.func @main(%arg0: !s32i loc(fused[#loc145, #loc146]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc147, #loc148])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc217)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc218)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc144)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc149)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc149)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc150)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc151)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc151)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc152)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc139)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc139)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc153)
    cir.call @_ZN47CWE191_Integer_Underflow__int_fgets_multiply_334goodEv() : () -> () loc(#loc154)
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc140)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc140)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc155)
    %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc141)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc141)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc156)
    cir.call @_ZN47CWE191_Integer_Underflow__int_fgets_multiply_333badEv() : () -> () loc(#loc157)
    %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc142)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc142)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc158)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc159)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc219)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc219)
    cir.return %15 : !s32i loc(#loc219)
  } loc(#loc216)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":43:23)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":27:1)
#loc13 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":55:1)
#loc14 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":29:5)
#loc15 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":29:9)
#loc16 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":30:5)
#loc17 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":30:20)
#loc18 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":32:12)
#loc19 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":32:5)
#loc20 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":33:5)
#loc21 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":45:5)
#loc22 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":34:9)
#loc23 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":34:45)
#loc24 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":36:9)
#loc25 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":44:9)
#loc26 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":36:19)
#loc27 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":36:32)
#loc28 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":36:49)
#loc29 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":36:13)
#loc30 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":36:59)
#loc31 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":37:9)
#loc32 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":40:9)
#loc33 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":42:9)
#loc34 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":39:25)
#loc35 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":39:20)
#loc36 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":39:13)
#loc37 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":39:36)
#loc38 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":43:13)
#loc39 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":46:5)
#loc40 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":54:5)
#loc41 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":47:9)
#loc42 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":47:20)
#loc43 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":48:9)
#loc44 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":53:9)
#loc45 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":48:12)
#loc46 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":48:19)
#loc47 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":49:9)
#loc48 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":51:13)
#loc49 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":51:33)
#loc50 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":51:26)
#loc51 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":52:26)
#loc52 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":52:13)
#loc53 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":62:1)
#loc54 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":79:1)
#loc55 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":64:5)
#loc56 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":64:9)
#loc57 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":65:5)
#loc58 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":65:20)
#loc59 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":67:12)
#loc60 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":67:5)
#loc61 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":69:13)
#loc62 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":69:12)
#loc63 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":69:5)
#loc64 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":70:5)
#loc65 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":78:5)
#loc66 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":71:9)
#loc67 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":71:20)
#loc68 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":72:9)
#loc69 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":77:9)
#loc70 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":72:12)
#loc71 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":72:19)
#loc72 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":73:9)
#loc73 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":75:13)
#loc74 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":75:33)
#loc75 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":75:26)
#loc76 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":76:26)
#loc77 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":76:13)
#loc78 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":113:27)
#loc79 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":82:1)
#loc80 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":117:1)
#loc81 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":84:5)
#loc82 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":84:9)
#loc83 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":85:5)
#loc84 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":85:20)
#loc85 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":87:12)
#loc86 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":87:5)
#loc87 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":88:5)
#loc88 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":100:5)
#loc89 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":89:9)
#loc90 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":89:45)
#loc91 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":91:9)
#loc92 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":99:9)
#loc93 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":91:19)
#loc94 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":91:32)
#loc95 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":91:49)
#loc96 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":91:13)
#loc97 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":91:59)
#loc98 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":92:9)
#loc99 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":95:9)
#loc100 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":97:9)
#loc101 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":94:25)
#loc102 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":94:20)
#loc103 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":94:13)
#loc104 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":94:36)
#loc105 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":98:23)
#loc106 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":98:13)
#loc107 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":101:5)
#loc108 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":116:5)
#loc109 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":102:9)
#loc110 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":102:20)
#loc111 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":103:9)
#loc112 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":115:9)
#loc113 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":103:12)
#loc114 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":103:19)
#loc115 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":104:9)
#loc116 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":106:13)
#loc117 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":114:13)
#loc118 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":106:17)
#loc119 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":106:25)
#loc120 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":106:33)
#loc121 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":106:34)
#loc122 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":107:13)
#loc123 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":110:13)
#loc124 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":112:13)
#loc125 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":108:17)
#loc126 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":108:37)
#loc127 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":108:30)
#loc128 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":109:30)
#loc129 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":109:17)
#loc130 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":113:17)
#loc131 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":119:1)
#loc132 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":123:1)
#loc133 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":121:5)
#loc134 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":122:5)
#loc135 = loc("/usr/include/stdlib.h":575:1)
#loc136 = loc("/usr/include/stdlib.h":575:41)
#loc137 = loc("/usr/include/time.h":76:1)
#loc138 = loc("/usr/include/time.h":76:38)
#loc139 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":142:15)
#loc140 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":144:15)
#loc141 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":147:15)
#loc142 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":149:15)
#loc143 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":137:1)
#loc144 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":152:1)
#loc149 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":138:1)
#loc150 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":140:27)
#loc151 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":140:22)
#loc152 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":140:5)
#loc153 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":142:5)
#loc154 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":143:5)
#loc155 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":144:5)
#loc156 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":147:5)
#loc157 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":148:5)
#loc158 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":149:5)
#loc159 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":151:12)
#loc160 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":151:5)
#loc161 = loc(fused[#loc1, #loc2])
#loc162 = loc(fused[#loc3, #loc4])
#loc163 = loc(fused[#loc5, #loc6])
#loc164 = loc(fused[#loc7, #loc8])
#loc165 = loc(fused[#loc10, #loc11])
#loc166 = loc(fused[#loc12, #loc13])
#loc167 = loc(fused[#loc14, #loc15])
#loc168 = loc(fused[#loc16, #loc17])
#loc169 = loc(fused[#loc19, #loc18])
#loc170 = loc(fused[#loc20, #loc21])
#loc171 = loc(fused[#loc22, #loc23])
#loc172 = loc(fused[#loc24, #loc25])
#loc173 = loc(fused[#loc29, #loc30])
#loc174 = loc(fused[#loc31, #loc32, #loc33, #loc25])
#loc175 = loc(fused[#loc36, #loc37])
#loc176 = loc(fused[#loc39, #loc40])
#loc177 = loc(fused[#loc41, #loc42])
#loc178 = loc(fused[#loc43, #loc44])
#loc179 = loc(fused[#loc45, #loc46])
#loc180 = loc(fused[#loc47, #loc44])
#loc181 = loc(fused[#loc48, #loc49])
#loc182 = loc(fused[#loc53, #loc54])
#loc183 = loc(fused[#loc55, #loc56])
#loc184 = loc(fused[#loc57, #loc58])
#loc185 = loc(fused[#loc60, #loc59])
#loc186 = loc(fused[#loc63, #loc61])
#loc187 = loc(fused[#loc64, #loc65])
#loc188 = loc(fused[#loc66, #loc67])
#loc189 = loc(fused[#loc68, #loc69])
#loc190 = loc(fused[#loc70, #loc71])
#loc191 = loc(fused[#loc72, #loc69])
#loc192 = loc(fused[#loc73, #loc74])
#loc193 = loc(fused[#loc79, #loc80])
#loc194 = loc(fused[#loc81, #loc82])
#loc195 = loc(fused[#loc83, #loc84])
#loc196 = loc(fused[#loc86, #loc85])
#loc197 = loc(fused[#loc87, #loc88])
#loc198 = loc(fused[#loc89, #loc90])
#loc199 = loc(fused[#loc91, #loc92])
#loc200 = loc(fused[#loc96, #loc97])
#loc201 = loc(fused[#loc98, #loc99, #loc100, #loc92])
#loc202 = loc(fused[#loc103, #loc104])
#loc203 = loc(fused[#loc107, #loc108])
#loc204 = loc(fused[#loc109, #loc110])
#loc205 = loc(fused[#loc111, #loc112])
#loc206 = loc(fused[#loc113, #loc114])
#loc207 = loc(fused[#loc115, #loc112])
#loc208 = loc(fused[#loc116, #loc117])
#loc209 = loc(fused[#loc119, #loc120])
#loc210 = loc(fused[#loc118, #loc121])
#loc211 = loc(fused[#loc122, #loc123, #loc124, #loc117])
#loc212 = loc(fused[#loc125, #loc126])
#loc213 = loc(fused[#loc131, #loc132])
#loc214 = loc(fused[#loc135, #loc136])
#loc215 = loc(fused[#loc137, #loc138])
#loc216 = loc(fused[#loc143, #loc144])
#loc219 = loc(fused[#loc160, #loc159])
