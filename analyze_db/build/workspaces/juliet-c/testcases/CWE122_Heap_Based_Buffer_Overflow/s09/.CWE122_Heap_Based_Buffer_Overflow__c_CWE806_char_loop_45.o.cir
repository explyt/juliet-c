!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc161)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc162)
  cir.global "private" internal dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45_badData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc163)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc165)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc11)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc12)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc12)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc166)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc167)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc11)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc168)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc169)
    cir.br ^bb1 loc(#loc170)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc20)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc20)
    %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!s8i>, !cir.bool loc(#loc171)
    cir.brcond %11 ^bb2, ^bb3 loc(#loc172)
  ^bb2:  // pred: ^bb1
    %12 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc22)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc24)
    cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc22)
    cir.br ^bb3 loc(#loc18)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc18)
  ^bb4:  // pred: ^bb3
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc25)
    %17 = cir.const #cir.int<65> : !s32i loc(#loc26)
    %18 = cir.const #cir.int<100> : !s32i loc(#loc27)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc27)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc27)
    cir.libc.memset %21 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc173)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc31)
    %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc31)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    %25 = cir.const #cir.int<100> : !s32i loc(#loc33)
    %26 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc33)
    %28 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc35)
    cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc174)
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %30 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc163)
    cir.store %29, %30 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc175)
    %31 = cir.get_global @badSink : !cir.ptr<!cir.func<()>> loc(#loc176)
    cir.call %31() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc38)
    cir.return loc(#loc8)
  } loc(#loc164)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc178)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc42)
    cir.return loc(#loc41)
  } loc(#loc177)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc179)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc180)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc181)
  cir.func no_proto internal private @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc183)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc184)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc185)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc186)
    %4 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc163)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
    cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc186)
    cir.br ^bb1 loc(#loc187)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc183)
    cir.store %6, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc183)
    %7 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc61)
    %8 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
    %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc61)
    cir.store %9, %2 : !u64i, !cir.ptr<!u64i> loc(#loc188)
    cir.br ^bb2 loc(#loc189)
  ^bb2:  // pred: ^bb1
    %10 = cir.const #cir.int<0> : !s32i loc(#loc67)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc67)
    cir.store %11, %1 : !u64i, !cir.ptr<!u64i> loc(#loc190)
    cir.br ^bb3 loc(#loc189)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %12 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc69)
    %13 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc70)
    %14 = cir.cmp(lt, %12, %13) : !u64i, !cir.bool loc(#loc191)
    cir.brcond %14 ^bb4, ^bb8 loc(#loc71)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc192)
  ^bb5:  // pred: ^bb4
    %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
    %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc74)
    %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc75)
    %18 = cir.load %17 : !cir.ptr<!s8i>, !s8i loc(#loc73)
    %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc76)
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc77)
    %21 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %19 : !u64i), !cir.ptr<!s8i> loc(#loc77)
    cir.store %18, %21 : !s8i, !cir.ptr<!s8i> loc(#loc193)
    cir.br ^bb6 loc(#loc66)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc66)
  ^bb7:  // pred: ^bb6
    %22 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc78)
    %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc79)
    cir.store %23, %1 : !u64i, !cir.ptr<!u64i> loc(#loc194)
    cir.br ^bb3 loc(#loc189)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc66)
  ^bb9:  // pred: ^bb8
    %24 = cir.const #cir.int<0> : !s32i loc(#loc80)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc80)
    %26 = cir.const #cir.int<50> : !s32i loc(#loc81)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc82)
    %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc81)
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc83)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc83)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc195)
    %31 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %32 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc86)
    cir.call @free(%33) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc87)
    cir.br ^bb10 loc(#loc60)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc51)
  } loc(#loc182)
  cir.global "private" internal dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45_goodG2BData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc196)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc198)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc94)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc95)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc95)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc199)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc200)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc94)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc201)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc202)
    cir.br ^bb1 loc(#loc203)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc103)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc103)
    %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!s8i>, !cir.bool loc(#loc204)
    cir.brcond %11 ^bb2, ^bb3 loc(#loc205)
  ^bb2:  // pred: ^bb1
    %12 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc105)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc107)
    cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc105)
    cir.br ^bb3 loc(#loc101)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc101)
  ^bb4:  // pred: ^bb3
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc108)
    %17 = cir.const #cir.int<65> : !s32i loc(#loc109)
    %18 = cir.const #cir.int<50> : !s32i loc(#loc110)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc110)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc110)
    cir.libc.memset %21 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc206)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc114)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
    %25 = cir.const #cir.int<50> : !s32i loc(#loc116)
    %26 = cir.const #cir.int<1> : !s32i loc(#loc117)
    %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc116)
    %28 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc118)
    cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc207)
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
    %30 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc196)
    cir.store %29, %30 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc208)
    %31 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<()>> loc(#loc209)
    cir.call %31() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc121)
    cir.return loc(#loc91)
  } loc(#loc197)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc211)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc212)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc213)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc214)
    %4 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc196)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
    cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc214)
    cir.br ^bb1 loc(#loc215)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc211)
    cir.store %6, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc211)
    %7 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc134)
    %8 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
    %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc134)
    cir.store %9, %2 : !u64i, !cir.ptr<!u64i> loc(#loc216)
    cir.br ^bb2 loc(#loc217)
  ^bb2:  // pred: ^bb1
    %10 = cir.const #cir.int<0> : !s32i loc(#loc140)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc140)
    cir.store %11, %1 : !u64i, !cir.ptr<!u64i> loc(#loc218)
    cir.br ^bb3 loc(#loc217)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %12 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc142)
    %13 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc143)
    %14 = cir.cmp(lt, %12, %13) : !u64i, !cir.bool loc(#loc219)
    cir.brcond %14 ^bb4, ^bb8 loc(#loc144)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc220)
  ^bb5:  // pred: ^bb4
    %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
    %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc147)
    %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc148)
    %18 = cir.load %17 : !cir.ptr<!s8i>, !s8i loc(#loc146)
    %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc149)
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc150)
    %21 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %19 : !u64i), !cir.ptr<!s8i> loc(#loc150)
    cir.store %18, %21 : !s8i, !cir.ptr<!s8i> loc(#loc221)
    cir.br ^bb6 loc(#loc139)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc139)
  ^bb7:  // pred: ^bb6
    %22 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc151)
    %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc152)
    cir.store %23, %1 : !u64i, !cir.ptr<!u64i> loc(#loc222)
    cir.br ^bb3 loc(#loc217)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc139)
  ^bb9:  // pred: ^bb8
    %24 = cir.const #cir.int<0> : !s32i loc(#loc153)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc153)
    %26 = cir.const #cir.int<50> : !s32i loc(#loc154)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc155)
    %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc154)
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc156)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc156)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc223)
    %31 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc158)
    %32 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc159)
    cir.call @free(%33) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc160)
    cir.br ^bb10 loc(#loc133)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc124)
  } loc(#loc210)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":21:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":21:15)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":44:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":54:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":46:5)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":46:12)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":47:20)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":47:27)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":47:31)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":47:42)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":47:43)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":47:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":48:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":48:33)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":48:9)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":48:17)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":48:23)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":48:24)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":48:30)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":48:29)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":50:12)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":50:18)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":50:23)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":50:27)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":50:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":50:28)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":51:19)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":51:5)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":51:10)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":51:14)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":51:15)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":52:72)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":52:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":53:5)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":53:13)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":91:1)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":94:1)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":93:5)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":93:13)
#loc44 = loc("/usr/include/string.h":407:1)
#loc45 = loc("/usr/include/string.h":408:33)
#loc46 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc47 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc48 = loc("/usr/include/stdlib.h":687:1)
#loc49 = loc("/usr/include/stdlib.h":687:32)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":26:1)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":42:1)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":30:9)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":30:25)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":31:9)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":31:16)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":31:19)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":28:5)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":28:19)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":29:5)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":41:5)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":32:19)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":32:26)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":32:9)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":32:30)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":34:9)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":37:9)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":34:18)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":34:14)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":34:21)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":34:25)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":34:23)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":35:9)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":36:23)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":36:28)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":36:29)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":36:18)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":36:13)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":34:35)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":34:34)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":38:22)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":38:14)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":38:17)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":38:9)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":39:19)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":39:9)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":40:14)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":40:9)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":22:1)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":22:15)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":79:1)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":89:1)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":81:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":81:12)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":82:20)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":82:27)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":82:31)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":82:42)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":82:43)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":82:5)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":83:5)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":83:33)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":83:9)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":83:17)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":83:23)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":83:24)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":83:30)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":83:29)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":85:12)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":85:18)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":85:23)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":85:26)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":85:5)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":85:27)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":86:18)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":86:5)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":86:10)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":86:13)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":86:14)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":87:76)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":87:5)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":88:5)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":88:17)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":61:1)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":77:1)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":65:9)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":65:25)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":66:9)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":66:16)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":66:19)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":63:5)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":63:19)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":64:5)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":76:5)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":67:19)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":67:26)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":67:9)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":67:30)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":69:9)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":72:9)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":69:18)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":69:14)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":69:21)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":69:25)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":69:23)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":70:9)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":71:23)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":71:28)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":71:29)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":71:18)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":71:13)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":69:35)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":69:34)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":73:22)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":73:14)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":73:17)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":73:9)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":74:19)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":74:9)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":75:14)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_loop_45.c":75:9)
#loc161 = loc(fused[#loc1, #loc2])
#loc162 = loc(fused[#loc3, #loc4])
#loc163 = loc(fused[#loc5, #loc6])
#loc164 = loc(fused[#loc7, #loc8])
#loc165 = loc(fused[#loc9, #loc10])
#loc166 = loc(fused[#loc13, #loc14])
#loc167 = loc(fused[#loc12, #loc14])
#loc168 = loc(fused[#loc11, #loc15])
#loc169 = loc(fused[#loc16, #loc15])
#loc170 = loc(fused[#loc17, #loc18])
#loc171 = loc(fused[#loc19, #loc20])
#loc172 = loc(fused[#loc21, #loc18])
#loc173 = loc(fused[#loc29, #loc30])
#loc174 = loc(fused[#loc32, #loc31])
#loc175 = loc(fused[#loc37, #loc36])
#loc176 = loc(fused[#loc38, #loc39])
#loc177 = loc(fused[#loc40, #loc41])
#loc178 = loc(fused[#loc42, #loc43])
#loc179 = loc(fused[#loc44, #loc45])
#loc180 = loc(fused[#loc46, #loc47])
#loc181 = loc(fused[#loc48, #loc49])
#loc182 = loc(fused[#loc50, #loc51])
#loc183 = loc(fused[#loc52, #loc53])
#loc184 = loc(fused[#loc54, #loc55])
#loc185 = loc(fused[#loc54, #loc56])
#loc186 = loc(fused[#loc57, #loc58])
#loc187 = loc(fused[#loc59, #loc60])
#loc188 = loc(fused[#loc63, #loc64])
#loc189 = loc(fused[#loc65, #loc66])
#loc190 = loc(fused[#loc68, #loc67])
#loc191 = loc(fused[#loc69, #loc70])
#loc192 = loc(fused[#loc72, #loc66])
#loc193 = loc(fused[#loc77, #loc75])
#loc194 = loc(fused[#loc79, #loc78])
#loc195 = loc(fused[#loc83, #loc80])
#loc196 = loc(fused[#loc88, #loc89])
#loc197 = loc(fused[#loc90, #loc91])
#loc198 = loc(fused[#loc92, #loc93])
#loc199 = loc(fused[#loc96, #loc97])
#loc200 = loc(fused[#loc95, #loc97])
#loc201 = loc(fused[#loc94, #loc98])
#loc202 = loc(fused[#loc99, #loc98])
#loc203 = loc(fused[#loc100, #loc101])
#loc204 = loc(fused[#loc102, #loc103])
#loc205 = loc(fused[#loc104, #loc101])
#loc206 = loc(fused[#loc112, #loc113])
#loc207 = loc(fused[#loc115, #loc114])
#loc208 = loc(fused[#loc120, #loc119])
#loc209 = loc(fused[#loc121, #loc122])
#loc210 = loc(fused[#loc123, #loc124])
#loc211 = loc(fused[#loc125, #loc126])
#loc212 = loc(fused[#loc127, #loc128])
#loc213 = loc(fused[#loc127, #loc129])
#loc214 = loc(fused[#loc130, #loc131])
#loc215 = loc(fused[#loc132, #loc133])
#loc216 = loc(fused[#loc136, #loc137])
#loc217 = loc(fused[#loc138, #loc139])
#loc218 = loc(fused[#loc141, #loc140])
#loc219 = loc(fused[#loc142, #loc143])
#loc220 = loc(fused[#loc145, #loc139])
#loc221 = loc(fused[#loc150, #loc148])
#loc222 = loc(fused[#loc152, #loc151])
#loc223 = loc(fused[#loc156, #loc153])
