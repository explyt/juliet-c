!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc1 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":25:21)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":25:28)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":57:25)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":57:32)
#loc66 = loc("../../../testcasesupport/std_testcase.h":68:7)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":85:25)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":85:32)
!ty_OneIntClass = !cir.struct<class "OneIntClass" {!s32i} #cir.record.decl.ast>
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
#loc102 = loc(fused[#loc6, #loc7])
#loc114 = loc(fused[#loc38, #loc39])
#loc126 = loc(fused[#loc69, #loc70])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc1)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc1)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc1)
    cir.return loc(#loc1)
  } loc(#loc1)
  cir.func private @printIntLine(!s32i) loc(#loc100)
  cir.func internal private @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41L7badSinkEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc6, #loc7])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc103)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc102)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc10)
    cir.br ^bb1 loc(#loc104)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<8> : !u64i loc(#loc105)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc14)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc14)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc105)
    cir.call @_ZN12TwoIntsClassC2Ev(%5) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc9)
    cir.store %5, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc103)
    %6 = cir.const #cir.int<5> : !s32i loc(#loc15)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc16)
    %8 = cir.get_member %7[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc17)
    cir.store %6, %8 : !s32i, !cir.ptr<!s32i> loc(#loc106)
    %9 = cir.const #cir.int<10> : !s32i loc(#loc18)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc19)
    %11 = cir.get_member %10[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc20)
    cir.store %9, %11 : !s32i, !cir.ptr<!s32i> loc(#loc107)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc21)
    %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc17)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc22)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc23)
    cir.br ^bb2 loc(#loc12)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc5)
  } loc(#loc101)
  cir.func @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_413badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc109)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc110)
    %2 = cir.const #cir.int<4> : !u64i loc(#loc29)
    %3 = cir.alloca !u8i, !cir.ptr<!u8i>, %2 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc29)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc111)
    %5 = cir.cast(bitcast, %3 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc29)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc29)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc110)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc31)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc31)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc31)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc31)
    cir.store %10, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc111)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc112)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    cir.call @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41L7badSinkEPc(%12) : (!cir.ptr<!s8i>) -> () loc(#loc35)
    cir.return loc(#loc25)
  } loc(#loc108)
  cir.func internal private @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41L11goodG2BSinkEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc38, #loc39])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc115)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc114)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc42)
    cir.br ^bb1 loc(#loc116)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<8> : !u64i loc(#loc117)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc46)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc117)
    cir.call @_ZN12TwoIntsClassC2Ev(%5) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc41)
    cir.store %5, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc115)
    %6 = cir.const #cir.int<5> : !s32i loc(#loc47)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc48)
    %8 = cir.get_member %7[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc17)
    cir.store %6, %8 : !s32i, !cir.ptr<!s32i> loc(#loc118)
    %9 = cir.const #cir.int<10> : !s32i loc(#loc49)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc50)
    %11 = cir.get_member %10[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc20)
    cir.store %9, %11 : !s32i, !cir.ptr<!s32i> loc(#loc119)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc51)
    %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc17)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc52)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc53)
    cir.br ^bb2 loc(#loc44)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc37)
  } loc(#loc113)
  cir.func internal private @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc121)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc122)
    %2 = cir.const #cir.int<4> : !u64i loc(#loc59)
    %3 = cir.alloca !u8i, !cir.ptr<!u8i>, %2 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc59)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc123)
    %5 = cir.cast(bitcast, %3 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc59)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc59)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc61)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc61)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc61)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc61)
    cir.store %10, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc123)
    %11 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc124)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    cir.call @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41L11goodG2BSinkEPc(%12) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    cir.return loc(#loc55)
  } loc(#loc120)
  cir.func linkonce_odr @_ZN11OneIntClassC2Ev(%arg0: !cir.ptr<!ty_OneIntClass> loc("../../../testcasesupport/std_testcase.h":68:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["this", init] {alignment = 8 : i64} loc(#loc66)
    cir.store %arg0, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc66)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc66)
    cir.return loc(#loc66)
  } loc(#loc66)
  cir.func internal private @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41L11goodB2GSinkEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc69, #loc70])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc127)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc126)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc73)
    cir.br ^bb1 loc(#loc128)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<4> : !u64i loc(#loc129)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc77)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc129)
    cir.call @_ZN11OneIntClassC2Ev(%5) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr2) loc(#loc72)
    cir.store %5, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc127)
    %6 = cir.const #cir.int<5> : !s32i loc(#loc78)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc79)
    %8 = cir.get_member %7[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc80)
    cir.store %6, %8 : !s32i, !cir.ptr<!s32i> loc(#loc130)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc81)
    %10 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc80)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc82)
    cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc83)
    cir.br ^bb2 loc(#loc75)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc68)
  } loc(#loc125)
  cir.func internal private @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc132)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc133)
    %2 = cir.const #cir.int<4> : !u64i loc(#loc89)
    %3 = cir.alloca !u8i, !cir.ptr<!u8i>, %2 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc89)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc134)
    %5 = cir.cast(bitcast, %3 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc89)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc89)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc133)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc91)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc91)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc91)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc91)
    cir.store %10, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc134)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc135)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
    cir.call @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41L11goodB2GSinkEPc(%12) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    cir.return loc(#loc85)
  } loc(#loc131)
  cir.func @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_414goodEv() extra(#fn_attr1) {
    cir.call @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41L7goodG2BEv() : () -> () loc(#loc98)
    cir.call @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41L7goodB2GEv() : () -> () loc(#loc99)
    cir.return loc(#loc97)
  } loc(#loc136)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":0:0)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":25:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":40:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":33:9)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":33:45)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":26:1)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":27:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":39:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":33:35)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":33:39)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":35:28)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":35:9)
#loc17 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":36:28)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":36:9)
#loc20 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":37:22)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":37:32)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":37:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":42:1)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":50:1)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":44:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":44:12)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":45:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":45:36)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":46:5)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":46:37)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":48:12)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":48:5)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":49:13)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":49:5)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":57:1)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":72:1)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":65:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":65:45)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":58:1)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":59:5)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":71:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":65:35)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":65:39)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":67:28)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":67:9)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":68:28)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":68:9)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":69:22)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":69:32)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":69:9)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":74:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":82:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":76:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":76:12)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":77:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":77:36)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":78:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":78:37)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":80:12)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":80:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":81:17)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":81:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":85:1)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":98:1)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":93:9)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":93:44)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":86:1)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":87:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":97:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":93:34)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":93:38)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":95:28)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":95:9)
#loc80 = loc("../../../testcasesupport/std_testcase.h":71:13)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":96:22)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":96:32)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":96:9)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":100:1)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":108:1)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":102:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":102:12)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":103:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":103:36)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":104:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":104:37)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":106:12)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":106:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":107:17)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":107:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":110:1)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":114:1)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":112:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_41.cpp":113:5)
#loc100 = loc(fused[#loc2, #loc3])
#loc101 = loc(fused[#loc4, #loc5])
#loc103 = loc(fused[#loc8, #loc9])
#loc104 = loc(fused[#loc11, #loc12])
#loc105 = loc(fused[#loc13, #loc9])
#loc106 = loc(fused[#loc16, #loc15])
#loc107 = loc(fused[#loc19, #loc18])
#loc108 = loc(fused[#loc24, #loc25])
#loc109 = loc(fused[#loc26, #loc27])
#loc110 = loc(fused[#loc28, #loc29])
#loc111 = loc(fused[#loc30, #loc31])
#loc112 = loc(fused[#loc33, #loc32])
#loc113 = loc(fused[#loc36, #loc37])
#loc115 = loc(fused[#loc40, #loc41])
#loc116 = loc(fused[#loc43, #loc44])
#loc117 = loc(fused[#loc45, #loc41])
#loc118 = loc(fused[#loc48, #loc47])
#loc119 = loc(fused[#loc50, #loc49])
#loc120 = loc(fused[#loc54, #loc55])
#loc121 = loc(fused[#loc56, #loc57])
#loc122 = loc(fused[#loc58, #loc59])
#loc123 = loc(fused[#loc60, #loc61])
#loc124 = loc(fused[#loc63, #loc62])
#loc125 = loc(fused[#loc67, #loc68])
#loc127 = loc(fused[#loc71, #loc72])
#loc128 = loc(fused[#loc74, #loc75])
#loc129 = loc(fused[#loc76, #loc72])
#loc130 = loc(fused[#loc79, #loc78])
#loc131 = loc(fused[#loc84, #loc85])
#loc132 = loc(fused[#loc86, #loc87])
#loc133 = loc(fused[#loc88, #loc89])
#loc134 = loc(fused[#loc90, #loc91])
#loc135 = loc(fused[#loc93, #loc92])
#loc136 = loc(fused[#loc96, #loc97])
