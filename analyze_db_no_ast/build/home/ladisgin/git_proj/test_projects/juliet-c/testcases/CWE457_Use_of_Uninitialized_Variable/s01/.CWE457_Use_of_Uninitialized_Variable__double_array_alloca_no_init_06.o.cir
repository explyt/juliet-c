!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printDoubleLine(!cir.double) loc(#loc275)
  cir.func no_proto  @CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc277)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc7)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc7)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc7)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc7)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc7)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc7)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc7)
    cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc278)
    cir.scope {
      %8 = cir.const #cir.int<5> : !s32i loc(#loc11)
      %9 = cir.const #cir.int<5> : !s32i loc(#loc12)
      %10 = cir.cmp(eq, %8, %9) : !s32i, !s32i loc(#loc280)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc13)
      cir.if %11 {
      } loc(#loc281)
    } loc(#loc279)
    cir.scope {
      %8 = cir.const #cir.int<5> : !s32i loc(#loc17)
      %9 = cir.const #cir.int<5> : !s32i loc(#loc18)
      %10 = cir.cmp(eq, %8, %9) : !s32i, !s32i loc(#loc283)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc19)
      cir.if %11 {
        cir.scope {
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc286)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc27)
            cir.store %13, %12 : !s32i, !cir.ptr<!s32i> loc(#loc288)
            cir.for : cond {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc29)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc30)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !s32i loc(#loc289)
              %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc31)
              cir.condition(%17) loc(#loc31)
            } body {
              cir.scope {
                %14 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc33)
                %15 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc34)
                %16 = cir.ptr_stride(%14 : !cir.ptr<!cir.double>, %15 : !s32i), !cir.ptr<!cir.double> loc(#loc35)
                %17 = cir.load %16 : !cir.ptr<!cir.double>, !cir.double loc(#loc33)
                cir.call @printDoubleLine(%17) : (!cir.double) -> () loc(#loc36)
              } loc(#loc290)
              cir.yield loc(#loc26)
            } step {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc37)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc38)
              cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc291)
              cir.yield loc(#loc287)
            } loc(#loc287)
          } loc(#loc287)
        } loc(#loc285)
      } loc(#loc284)
    } loc(#loc282)
    cir.return loc(#loc4)
  } loc(#loc276)
  cir.func no_proto  @CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc293)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc294)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc295)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc296)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    cir.return loc(#loc40)
  } loc(#loc292)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc297)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc51)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc299)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc56)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc56)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc56)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc56)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc56)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc56)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc56)
    cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc300)
    cir.scope {
      %8 = cir.const #cir.int<5> : !s32i loc(#loc60)
      %9 = cir.const #cir.int<5> : !s32i loc(#loc61)
      %10 = cir.cmp(eq, %8, %9) : !s32i, !s32i loc(#loc302)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc62)
      cir.if %11 {
      } loc(#loc303)
    } loc(#loc301)
    cir.scope {
      %8 = cir.const #cir.int<5> : !s32i loc(#loc66)
      %9 = cir.const #cir.int<5> : !s32i loc(#loc67)
      %10 = cir.cmp(ne, %8, %9) : !s32i, !s32i loc(#loc305)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc68)
      cir.if %11 {
        %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc51)
        %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc51)
        cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc72)
      } else {
        cir.scope {
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc308)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc79)
            cir.store %13, %12 : !s32i, !cir.ptr<!s32i> loc(#loc310)
            cir.for : cond {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc81)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc82)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !s32i loc(#loc311)
              %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc83)
              cir.condition(%17) loc(#loc83)
            } body {
              cir.scope {
                %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc85)
                %15 = cir.cast(int_to_float, %14 : !s32i), !cir.double loc(#loc85)
                %16 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc86)
                %17 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc87)
                %18 = cir.ptr_stride(%16 : !cir.ptr<!cir.double>, %17 : !s32i), !cir.ptr<!cir.double> loc(#loc88)
                cir.store %15, %18 : !cir.double, !cir.ptr<!cir.double> loc(#loc313)
              } loc(#loc312)
              cir.yield loc(#loc78)
            } step {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc89)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc90)
              cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc314)
              cir.yield loc(#loc309)
            } loc(#loc309)
          } loc(#loc309)
        } loc(#loc307)
        cir.scope {
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc316)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc97)
            cir.store %13, %12 : !s32i, !cir.ptr<!s32i> loc(#loc318)
            cir.for : cond {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc99)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc100)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !s32i loc(#loc319)
              %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc101)
              cir.condition(%17) loc(#loc101)
            } body {
              cir.scope {
                %14 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc103)
                %15 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc104)
                %16 = cir.ptr_stride(%14 : !cir.ptr<!cir.double>, %15 : !s32i), !cir.ptr<!cir.double> loc(#loc105)
                %17 = cir.load %16 : !cir.ptr<!cir.double>, !cir.double loc(#loc103)
                cir.call @printDoubleLine(%17) : (!cir.double) -> () loc(#loc106)
              } loc(#loc320)
              cir.yield loc(#loc96)
            } step {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc107)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc108)
              cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc321)
              cir.yield loc(#loc317)
            } loc(#loc317)
          } loc(#loc317)
        } loc(#loc315)
      } loc(#loc306)
    } loc(#loc304)
    cir.return loc(#loc53)
  } loc(#loc298)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc323)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc113)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc113)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc113)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc113)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc113)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc113)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc113)
    cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc324)
    cir.scope {
      %8 = cir.const #cir.int<5> : !s32i loc(#loc117)
      %9 = cir.const #cir.int<5> : !s32i loc(#loc118)
      %10 = cir.cmp(eq, %8, %9) : !s32i, !s32i loc(#loc326)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc119)
      cir.if %11 {
      } loc(#loc327)
    } loc(#loc325)
    cir.scope {
      %8 = cir.const #cir.int<5> : !s32i loc(#loc123)
      %9 = cir.const #cir.int<5> : !s32i loc(#loc124)
      %10 = cir.cmp(eq, %8, %9) : !s32i, !s32i loc(#loc329)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc125)
      cir.if %11 {
        cir.scope {
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc332)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc133)
            cir.store %13, %12 : !s32i, !cir.ptr<!s32i> loc(#loc334)
            cir.for : cond {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc135)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc136)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !s32i loc(#loc335)
              %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc137)
              cir.condition(%17) loc(#loc137)
            } body {
              cir.scope {
                %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc139)
                %15 = cir.cast(int_to_float, %14 : !s32i), !cir.double loc(#loc139)
                %16 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc140)
                %17 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc141)
                %18 = cir.ptr_stride(%16 : !cir.ptr<!cir.double>, %17 : !s32i), !cir.ptr<!cir.double> loc(#loc142)
                cir.store %15, %18 : !cir.double, !cir.ptr<!cir.double> loc(#loc337)
              } loc(#loc336)
              cir.yield loc(#loc132)
            } step {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc143)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc144)
              cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc338)
              cir.yield loc(#loc333)
            } loc(#loc333)
          } loc(#loc333)
        } loc(#loc331)
        cir.scope {
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc340)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc151)
            cir.store %13, %12 : !s32i, !cir.ptr<!s32i> loc(#loc342)
            cir.for : cond {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc153)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc154)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !s32i loc(#loc343)
              %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc155)
              cir.condition(%17) loc(#loc155)
            } body {
              cir.scope {
                %14 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc157)
                %15 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc158)
                %16 = cir.ptr_stride(%14 : !cir.ptr<!cir.double>, %15 : !s32i), !cir.ptr<!cir.double> loc(#loc159)
                %17 = cir.load %16 : !cir.ptr<!cir.double>, !cir.double loc(#loc157)
                cir.call @printDoubleLine(%17) : (!cir.double) -> () loc(#loc160)
              } loc(#loc344)
              cir.yield loc(#loc150)
            } step {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc161)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc162)
              cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc345)
              cir.yield loc(#loc341)
            } loc(#loc341)
          } loc(#loc341)
        } loc(#loc339)
      } loc(#loc330)
    } loc(#loc328)
    cir.return loc(#loc110)
  } loc(#loc322)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc347)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc167)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc167)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc167)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc167)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc167)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc167)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc167)
    cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc348)
    cir.scope {
      %8 = cir.const #cir.int<5> : !s32i loc(#loc171)
      %9 = cir.const #cir.int<5> : !s32i loc(#loc172)
      %10 = cir.cmp(ne, %8, %9) : !s32i, !s32i loc(#loc350)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc173)
      cir.if %11 {
        %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc177)
        %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc177)
        cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc178)
      } else {
        cir.scope {
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc353)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc185)
            cir.store %13, %12 : !s32i, !cir.ptr<!s32i> loc(#loc355)
            cir.for : cond {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc187)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc188)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !s32i loc(#loc356)
              %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc189)
              cir.condition(%17) loc(#loc189)
            } body {
              cir.scope {
                %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc191)
                %15 = cir.cast(int_to_float, %14 : !s32i), !cir.double loc(#loc191)
                %16 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc192)
                %17 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc193)
                %18 = cir.ptr_stride(%16 : !cir.ptr<!cir.double>, %17 : !s32i), !cir.ptr<!cir.double> loc(#loc194)
                cir.store %15, %18 : !cir.double, !cir.ptr<!cir.double> loc(#loc358)
              } loc(#loc357)
              cir.yield loc(#loc184)
            } step {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc195)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc196)
              cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc359)
              cir.yield loc(#loc354)
            } loc(#loc354)
          } loc(#loc354)
        } loc(#loc352)
      } loc(#loc351)
    } loc(#loc349)
    cir.scope {
      %8 = cir.const #cir.int<5> : !s32i loc(#loc199)
      %9 = cir.const #cir.int<5> : !s32i loc(#loc200)
      %10 = cir.cmp(eq, %8, %9) : !s32i, !s32i loc(#loc361)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc201)
      cir.if %11 {
        cir.scope {
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc364)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc209)
            cir.store %13, %12 : !s32i, !cir.ptr<!s32i> loc(#loc366)
            cir.for : cond {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc211)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc212)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !s32i loc(#loc367)
              %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc213)
              cir.condition(%17) loc(#loc213)
            } body {
              cir.scope {
                %14 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc215)
                %15 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc216)
                %16 = cir.ptr_stride(%14 : !cir.ptr<!cir.double>, %15 : !s32i), !cir.ptr<!cir.double> loc(#loc217)
                %17 = cir.load %16 : !cir.ptr<!cir.double>, !cir.double loc(#loc215)
                cir.call @printDoubleLine(%17) : (!cir.double) -> () loc(#loc218)
              } loc(#loc368)
              cir.yield loc(#loc208)
            } step {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc219)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc220)
              cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc369)
              cir.yield loc(#loc365)
            } loc(#loc365)
          } loc(#loc365)
        } loc(#loc363)
      } loc(#loc362)
    } loc(#loc360)
    cir.return loc(#loc164)
  } loc(#loc346)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc371)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc225)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc225)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc225)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc225)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc225)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc225)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc225)
    cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc372)
    cir.scope {
      %8 = cir.const #cir.int<5> : !s32i loc(#loc229)
      %9 = cir.const #cir.int<5> : !s32i loc(#loc230)
      %10 = cir.cmp(eq, %8, %9) : !s32i, !s32i loc(#loc374)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc231)
      cir.if %11 {
        cir.scope {
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc377)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc239)
            cir.store %13, %12 : !s32i, !cir.ptr<!s32i> loc(#loc379)
            cir.for : cond {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc241)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc242)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !s32i loc(#loc380)
              %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc243)
              cir.condition(%17) loc(#loc243)
            } body {
              cir.scope {
                %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc245)
                %15 = cir.cast(int_to_float, %14 : !s32i), !cir.double loc(#loc245)
                %16 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc246)
                %17 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc247)
                %18 = cir.ptr_stride(%16 : !cir.ptr<!cir.double>, %17 : !s32i), !cir.ptr<!cir.double> loc(#loc248)
                cir.store %15, %18 : !cir.double, !cir.ptr<!cir.double> loc(#loc382)
              } loc(#loc381)
              cir.yield loc(#loc238)
            } step {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc249)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc250)
              cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc383)
              cir.yield loc(#loc378)
            } loc(#loc378)
          } loc(#loc378)
        } loc(#loc376)
      } loc(#loc375)
    } loc(#loc373)
    cir.scope {
      %8 = cir.const #cir.int<5> : !s32i loc(#loc253)
      %9 = cir.const #cir.int<5> : !s32i loc(#loc254)
      %10 = cir.cmp(eq, %8, %9) : !s32i, !s32i loc(#loc385)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc255)
      cir.if %11 {
        cir.scope {
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc388)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc263)
            cir.store %13, %12 : !s32i, !cir.ptr<!s32i> loc(#loc390)
            cir.for : cond {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc265)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc266)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !s32i loc(#loc391)
              %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc267)
              cir.condition(%17) loc(#loc267)
            } body {
              cir.scope {
                %14 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc269)
                %15 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc270)
                %16 = cir.ptr_stride(%14 : !cir.ptr<!cir.double>, %15 : !s32i), !cir.ptr<!cir.double> loc(#loc271)
                %17 = cir.load %16 : !cir.ptr<!cir.double>, !cir.double loc(#loc269)
                cir.call @printDoubleLine(%17) : (!cir.double) -> () loc(#loc272)
              } loc(#loc392)
              cir.yield loc(#loc262)
            } step {
              %14 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc273)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc274)
              cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc393)
              cir.yield loc(#loc389)
            } loc(#loc389)
          } loc(#loc389)
        } loc(#loc387)
      } loc(#loc386)
    } loc(#loc384)
    cir.return loc(#loc222)
  } loc(#loc370)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":38:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":38:41)
#loc3 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":27:1)
#loc4 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":47:1)
#loc5 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":29:5)
#loc6 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":29:14)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":30:22)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":30:5)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":31:5)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":35:5)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":31:8)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":31:27)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":31:25)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":32:5)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":36:5)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":46:5)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":36:8)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":36:27)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":36:25)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":37:5)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":39:9)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":45:9)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":40:13)
#loc24 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":40:17)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":41:13)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":44:13)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":41:19)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":41:17)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":41:22)
#loc30 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":41:24)
#loc31 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":41:23)
#loc32 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":42:13)
#loc33 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":43:33)
#loc34 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":43:38)
#loc35 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":43:39)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":43:17)
#loc37 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":41:29)
#loc38 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":41:28)
#loc39 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":181:1)
#loc40 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":187:1)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":183:5)
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":183:14)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":184:5)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":184:14)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":185:5)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":185:14)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":186:5)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":186:14)
#loc49 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc50 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc51 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":66:19)
#loc52 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":54:1)
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":86:1)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":56:5)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":56:14)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":57:22)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":57:5)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":58:5)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":62:5)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":58:8)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":58:27)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":58:25)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":59:5)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":63:5)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":85:5)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":63:8)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":63:27)
#loc68 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":63:25)
#loc69 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":64:5)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":67:5)
#loc71 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":69:5)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":66:9)
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":71:9)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":77:9)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":72:13)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":72:17)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":73:13)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":76:13)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":73:19)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":73:17)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":73:22)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":73:24)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":73:23)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":74:13)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":75:35)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":75:17)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":75:22)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":75:23)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":73:29)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":73:28)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":78:9)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":84:9)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":79:13)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":79:17)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":80:13)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":83:13)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":80:19)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":80:17)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":80:22)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":80:24)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":80:23)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":81:13)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":82:33)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":82:38)
#loc105 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":82:39)
#loc106 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":82:17)
#loc107 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":80:29)
#loc108 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":80:28)
#loc109 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":89:1)
#loc110 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":116:1)
#loc111 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":91:5)
#loc112 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":91:14)
#loc113 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":92:22)
#loc114 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":92:5)
#loc115 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":93:5)
#loc116 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":97:5)
#loc117 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":93:8)
#loc118 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":93:27)
#loc119 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":93:25)
#loc120 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":94:5)
#loc121 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":98:5)
#loc122 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":115:5)
#loc123 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":98:8)
#loc124 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":98:27)
#loc125 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":98:25)
#loc126 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":99:5)
#loc127 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":101:9)
#loc128 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":107:9)
#loc129 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":102:13)
#loc130 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":102:17)
#loc131 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":103:13)
#loc132 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":106:13)
#loc133 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":103:19)
#loc134 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":103:17)
#loc135 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":103:22)
#loc136 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":103:24)
#loc137 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":103:23)
#loc138 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":104:13)
#loc139 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":105:35)
#loc140 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":105:17)
#loc141 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":105:22)
#loc142 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":105:23)
#loc143 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":103:29)
#loc144 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":103:28)
#loc145 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":108:9)
#loc146 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":114:9)
#loc147 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":109:13)
#loc148 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":109:17)
#loc149 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":110:13)
#loc150 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":113:13)
#loc151 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":110:19)
#loc152 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":110:17)
#loc153 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":110:22)
#loc154 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":110:24)
#loc155 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":110:23)
#loc156 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":111:13)
#loc157 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":112:33)
#loc158 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":112:38)
#loc159 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":112:39)
#loc160 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":112:17)
#loc161 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":110:29)
#loc162 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":110:28)
#loc163 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":119:1)
#loc164 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":150:1)
#loc165 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":121:5)
#loc166 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":121:14)
#loc167 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":122:22)
#loc168 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":122:5)
#loc169 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":123:5)
#loc170 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":138:5)
#loc171 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":123:8)
#loc172 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":123:27)
#loc173 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":123:25)
#loc174 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":124:5)
#loc175 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":127:5)
#loc176 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":129:5)
#loc177 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":126:19)
#loc178 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":126:9)
#loc179 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":131:9)
#loc180 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":137:9)
#loc181 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":132:13)
#loc182 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":132:17)
#loc183 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":133:13)
#loc184 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":136:13)
#loc185 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":133:19)
#loc186 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":133:17)
#loc187 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":133:22)
#loc188 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":133:24)
#loc189 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":133:23)
#loc190 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":134:13)
#loc191 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":135:35)
#loc192 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":135:17)
#loc193 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":135:22)
#loc194 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":135:23)
#loc195 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":133:29)
#loc196 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":133:28)
#loc197 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":139:5)
#loc198 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":149:5)
#loc199 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":139:8)
#loc200 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":139:27)
#loc201 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":139:25)
#loc202 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":140:5)
#loc203 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":142:9)
#loc204 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":148:9)
#loc205 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":143:13)
#loc206 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":143:17)
#loc207 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":144:13)
#loc208 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":147:13)
#loc209 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":144:19)
#loc210 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":144:17)
#loc211 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":144:22)
#loc212 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":144:24)
#loc213 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":144:23)
#loc214 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":145:13)
#loc215 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":146:33)
#loc216 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":146:38)
#loc217 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":146:39)
#loc218 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":146:17)
#loc219 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":144:29)
#loc220 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":144:28)
#loc221 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":153:1)
#loc222 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":179:1)
#loc223 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":155:5)
#loc224 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":155:14)
#loc225 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":156:22)
#loc226 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":156:5)
#loc227 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":157:5)
#loc228 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":167:5)
#loc229 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":157:8)
#loc230 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":157:27)
#loc231 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":157:25)
#loc232 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":158:5)
#loc233 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":160:9)
#loc234 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":166:9)
#loc235 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":161:13)
#loc236 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":161:17)
#loc237 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":162:13)
#loc238 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":165:13)
#loc239 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":162:19)
#loc240 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":162:17)
#loc241 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":162:22)
#loc242 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":162:24)
#loc243 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":162:23)
#loc244 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":163:13)
#loc245 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":164:35)
#loc246 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":164:17)
#loc247 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":164:22)
#loc248 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":164:23)
#loc249 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":162:29)
#loc250 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":162:28)
#loc251 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":168:5)
#loc252 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":178:5)
#loc253 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":168:8)
#loc254 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":168:27)
#loc255 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":168:25)
#loc256 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":169:5)
#loc257 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":171:9)
#loc258 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":177:9)
#loc259 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":172:13)
#loc260 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":172:17)
#loc261 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":173:13)
#loc262 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":176:13)
#loc263 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":173:19)
#loc264 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":173:17)
#loc265 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":173:22)
#loc266 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":173:24)
#loc267 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":173:23)
#loc268 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":174:13)
#loc269 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":175:33)
#loc270 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":175:38)
#loc271 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":175:39)
#loc272 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":175:17)
#loc273 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":173:29)
#loc274 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_06.c":173:28)
#loc275 = loc(fused[#loc1, #loc2])
#loc276 = loc(fused[#loc3, #loc4])
#loc277 = loc(fused[#loc5, #loc6])
#loc278 = loc(fused[#loc8, #loc7])
#loc279 = loc(fused[#loc9, #loc10])
#loc280 = loc(fused[#loc11, #loc12])
#loc281 = loc(fused[#loc14, #loc10])
#loc282 = loc(fused[#loc15, #loc16])
#loc283 = loc(fused[#loc17, #loc18])
#loc284 = loc(fused[#loc20, #loc16])
#loc285 = loc(fused[#loc21, #loc22])
#loc286 = loc(fused[#loc23, #loc24])
#loc287 = loc(fused[#loc25, #loc26])
#loc288 = loc(fused[#loc28, #loc27])
#loc289 = loc(fused[#loc29, #loc30])
#loc290 = loc(fused[#loc32, #loc26])
#loc291 = loc(fused[#loc38, #loc37])
#loc292 = loc(fused[#loc39, #loc40])
#loc293 = loc(fused[#loc41, #loc42])
#loc294 = loc(fused[#loc43, #loc44])
#loc295 = loc(fused[#loc45, #loc46])
#loc296 = loc(fused[#loc47, #loc48])
#loc297 = loc(fused[#loc49, #loc50])
#loc298 = loc(fused[#loc52, #loc53])
#loc299 = loc(fused[#loc54, #loc55])
#loc300 = loc(fused[#loc57, #loc56])
#loc301 = loc(fused[#loc58, #loc59])
#loc302 = loc(fused[#loc60, #loc61])
#loc303 = loc(fused[#loc63, #loc59])
#loc304 = loc(fused[#loc64, #loc65])
#loc305 = loc(fused[#loc66, #loc67])
#loc306 = loc(fused[#loc69, #loc70, #loc71, #loc65])
#loc307 = loc(fused[#loc73, #loc74])
#loc308 = loc(fused[#loc75, #loc76])
#loc309 = loc(fused[#loc77, #loc78])
#loc310 = loc(fused[#loc80, #loc79])
#loc311 = loc(fused[#loc81, #loc82])
#loc312 = loc(fused[#loc84, #loc78])
#loc313 = loc(fused[#loc86, #loc85])
#loc314 = loc(fused[#loc90, #loc89])
#loc315 = loc(fused[#loc91, #loc92])
#loc316 = loc(fused[#loc93, #loc94])
#loc317 = loc(fused[#loc95, #loc96])
#loc318 = loc(fused[#loc98, #loc97])
#loc319 = loc(fused[#loc99, #loc100])
#loc320 = loc(fused[#loc102, #loc96])
#loc321 = loc(fused[#loc108, #loc107])
#loc322 = loc(fused[#loc109, #loc110])
#loc323 = loc(fused[#loc111, #loc112])
#loc324 = loc(fused[#loc114, #loc113])
#loc325 = loc(fused[#loc115, #loc116])
#loc326 = loc(fused[#loc117, #loc118])
#loc327 = loc(fused[#loc120, #loc116])
#loc328 = loc(fused[#loc121, #loc122])
#loc329 = loc(fused[#loc123, #loc124])
#loc330 = loc(fused[#loc126, #loc122])
#loc331 = loc(fused[#loc127, #loc128])
#loc332 = loc(fused[#loc129, #loc130])
#loc333 = loc(fused[#loc131, #loc132])
#loc334 = loc(fused[#loc134, #loc133])
#loc335 = loc(fused[#loc135, #loc136])
#loc336 = loc(fused[#loc138, #loc132])
#loc337 = loc(fused[#loc140, #loc139])
#loc338 = loc(fused[#loc144, #loc143])
#loc339 = loc(fused[#loc145, #loc146])
#loc340 = loc(fused[#loc147, #loc148])
#loc341 = loc(fused[#loc149, #loc150])
#loc342 = loc(fused[#loc152, #loc151])
#loc343 = loc(fused[#loc153, #loc154])
#loc344 = loc(fused[#loc156, #loc150])
#loc345 = loc(fused[#loc162, #loc161])
#loc346 = loc(fused[#loc163, #loc164])
#loc347 = loc(fused[#loc165, #loc166])
#loc348 = loc(fused[#loc168, #loc167])
#loc349 = loc(fused[#loc169, #loc170])
#loc350 = loc(fused[#loc171, #loc172])
#loc351 = loc(fused[#loc174, #loc175, #loc176, #loc170])
#loc352 = loc(fused[#loc179, #loc180])
#loc353 = loc(fused[#loc181, #loc182])
#loc354 = loc(fused[#loc183, #loc184])
#loc355 = loc(fused[#loc186, #loc185])
#loc356 = loc(fused[#loc187, #loc188])
#loc357 = loc(fused[#loc190, #loc184])
#loc358 = loc(fused[#loc192, #loc191])
#loc359 = loc(fused[#loc196, #loc195])
#loc360 = loc(fused[#loc197, #loc198])
#loc361 = loc(fused[#loc199, #loc200])
#loc362 = loc(fused[#loc202, #loc198])
#loc363 = loc(fused[#loc203, #loc204])
#loc364 = loc(fused[#loc205, #loc206])
#loc365 = loc(fused[#loc207, #loc208])
#loc366 = loc(fused[#loc210, #loc209])
#loc367 = loc(fused[#loc211, #loc212])
#loc368 = loc(fused[#loc214, #loc208])
#loc369 = loc(fused[#loc220, #loc219])
#loc370 = loc(fused[#loc221, #loc222])
#loc371 = loc(fused[#loc223, #loc224])
#loc372 = loc(fused[#loc226, #loc225])
#loc373 = loc(fused[#loc227, #loc228])
#loc374 = loc(fused[#loc229, #loc230])
#loc375 = loc(fused[#loc232, #loc228])
#loc376 = loc(fused[#loc233, #loc234])
#loc377 = loc(fused[#loc235, #loc236])
#loc378 = loc(fused[#loc237, #loc238])
#loc379 = loc(fused[#loc240, #loc239])
#loc380 = loc(fused[#loc241, #loc242])
#loc381 = loc(fused[#loc244, #loc238])
#loc382 = loc(fused[#loc246, #loc245])
#loc383 = loc(fused[#loc250, #loc249])
#loc384 = loc(fused[#loc251, #loc252])
#loc385 = loc(fused[#loc253, #loc254])
#loc386 = loc(fused[#loc256, #loc252])
#loc387 = loc(fused[#loc257, #loc258])
#loc388 = loc(fused[#loc259, #loc260])
#loc389 = loc(fused[#loc261, #loc262])
#loc390 = loc(fused[#loc264, #loc263])
#loc391 = loc(fused[#loc265, #loc266])
#loc392 = loc(fused[#loc268, #loc262])
#loc393 = loc(fused[#loc274, #loc273])
