!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc5 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":24:21)
#loc6 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":24:25)
#loc72 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":138:10)
#loc73 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":138:14)
#loc74 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":138:20)
#loc75 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":138:32)
#loc92 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":63:25)
#loc93 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":63:29)
#loc121 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":85:25)
#loc122 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":85:29)
#loc176 = loc(fused[#loc5, #loc6])
#loc201 = loc(fused[#loc72, #loc73])
#loc202 = loc(fused[#loc74, #loc75])
#loc207 = loc(fused[#loc92, #loc93])
#loc218 = loc(fused[#loc121, #loc122])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_multiply_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc174)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc176)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc7)
    cir.scope {
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc10)
      %2 = cir.const #cir.int<0> : !s32i loc(#loc11)
      %3 = cir.cmp(lt, %1, %2) : !s32i, !cir.bool loc(#loc178)
      cir.if %3 {
        %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc180)
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc15)
        %6 = cir.const #cir.int<2> : !s32i loc(#loc14)
        %7 = cir.binop(mul, %5, %6) nsw : !s32i loc(#loc15)
        cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc180)
        %8 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc16)
        cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc17)
      } loc(#loc179)
    } loc(#loc177)
    cir.return loc(#loc4)
  } loc(#loc175)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc181)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc182)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc183)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc184)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc26)
  cir.func no_proto @CWE191_Integer_Underflow__int_fgets_multiply_44_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc186)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc187)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc32)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc187)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc33)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc188)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc190)
      %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc190)
      cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc190)
      cir.scope {
        %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc41)
        %9 = cir.const #cir.int<3> : !s32i loc(#loc42)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc42)
        %11 = cir.const #cir.int<4> : !u64i loc(#loc42)
        %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc42)
        %13 = cir.const #cir.int<2> : !s32i loc(#loc42)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc42)
        %15 = cir.binop(add, %12, %14) : !u64i loc(#loc42)
        %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc42)
        %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc182)
        %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc43)
        %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc44)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc45)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc45)
        %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc192)
        cir.if %22 {
          %23 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc49)
          %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc50)
          cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc194)
        } else {
          %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc26)
          %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc26)
          cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc53)
        } loc(#loc193)
      } loc(#loc191)
    } loc(#loc189)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc54)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc55)
    cir.call %4(%5) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc54)
    cir.return loc(#loc28)
  } loc(#loc185)
  cir.func no_proto @CWE191_Integer_Underflow__int_fgets_multiply_44_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc196)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc197)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    cir.return loc(#loc57)
  } loc(#loc195)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc198)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc199)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc69)
  cir.func @main(%arg0: !s32i loc(fused[#loc72, #loc73]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc74, #loc75])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc201)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc202)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc71)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc76)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc76)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc77)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc78)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc78)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc79)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc66)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %8 = cir.get_global @CWE191_Integer_Underflow__int_fgets_multiply_44_good : !cir.ptr<!cir.func<!void ()>> loc(#loc203)
    cir.call @CWE191_Integer_Underflow__int_fgets_multiply_44_good() : () -> () loc(#loc81)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc67)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc68)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %13 = cir.get_global @CWE191_Integer_Underflow__int_fgets_multiply_44_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc204)
    cir.call @CWE191_Integer_Underflow__int_fgets_multiply_44_bad() : () -> () loc(#loc85)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc69)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc88)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc205)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc205)
    cir.return %17 : !s32i loc(#loc205)
  } loc(#loc200)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc92, #loc93])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc207)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc94)
    cir.scope {
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc97)
      %2 = cir.const #cir.int<0> : !s32i loc(#loc98)
      %3 = cir.cmp(lt, %1, %2) : !s32i, !cir.bool loc(#loc209)
      cir.if %3 {
        %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc211)
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc102)
        %6 = cir.const #cir.int<2> : !s32i loc(#loc101)
        %7 = cir.binop(mul, %5, %6) nsw : !s32i loc(#loc102)
        cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc211)
        %8 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc103)
        cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc104)
      } loc(#loc210)
    } loc(#loc208)
    cir.return loc(#loc91)
  } loc(#loc206)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc213)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc214)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc110)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc214)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc111)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc113)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc114)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc216)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc116)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    cir.call %6(%7) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc116)
    cir.return loc(#loc106)
  } loc(#loc212)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc118)
  cir.func internal private @goodB2GSink(%arg0: !s32i loc(fused[#loc121, #loc122])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc218)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc123)
    cir.scope {
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc126)
      %2 = cir.const #cir.int<0> : !s32i loc(#loc127)
      %3 = cir.cmp(lt, %1, %2) : !s32i, !cir.bool loc(#loc220)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc131)
          %5 = cir.const #cir.int<2147483647> : !s32i loc(#loc132)
          %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc132)
          %7 = cir.const #cir.int<1> : !s32i loc(#loc132)
          %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc132)
          %9 = cir.const #cir.int<2> : !s32i loc(#loc133)
          %10 = cir.binop(div, %8, %9) : !s32i loc(#loc223)
          %11 = cir.cmp(gt, %4, %10) : !s32i, !cir.bool loc(#loc224)
          cir.if %11 {
            %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc226)
            %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc140)
            %14 = cir.const #cir.int<2> : !s32i loc(#loc139)
            %15 = cir.binop(mul, %13, %14) nsw : !s32i loc(#loc140)
            cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc226)
            %16 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc141)
            cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc142)
          } else {
            %12 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc118)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc118)
            cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc143)
          } loc(#loc225)
        } loc(#loc222)
      } loc(#loc221)
    } loc(#loc219)
    cir.return loc(#loc120)
  } loc(#loc217)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc228)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc229)
    %2 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc149)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc229)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc150)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc230)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc232)
      %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc232)
      cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc232)
      cir.scope {
        %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc158)
        %9 = cir.const #cir.int<3> : !s32i loc(#loc159)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc159)
        %11 = cir.const #cir.int<4> : !u64i loc(#loc159)
        %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc159)
        %13 = cir.const #cir.int<2> : !s32i loc(#loc159)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc159)
        %15 = cir.binop(add, %12, %14) : !u64i loc(#loc159)
        %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc159)
        %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc182)
        %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc160)
        %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc161)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc162)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc162)
        %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc234)
        cir.if %22 {
          %23 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc166)
          %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc167)
          cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc236)
        } else {
          %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc170)
          %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc170)
          cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc171)
        } loc(#loc235)
      } loc(#loc233)
    } loc(#loc231)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc172)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc173)
    cir.call %4(%5) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc172)
    cir.return loc(#loc145)
  } loc(#loc227)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_multiply_44.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":24:1)
#loc4 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":32:1)
#loc7 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":25:1)
#loc8 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":26:5)
#loc9 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":31:5)
#loc10 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":26:8)
#loc11 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":26:15)
#loc12 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":27:5)
#loc13 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":29:9)
#loc14 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":29:29)
#loc15 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":29:22)
#loc16 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":30:22)
#loc17 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":30:9)
#loc18 = loc("/usr/include/stdio.h":654:1)
#loc19 = loc("/usr/include/stdio.h":655:59)
#loc20 = loc("/usr/include/stdio.h":149:1)
#loc21 = loc("/usr/include/stdio.h":149:14)
#loc22 = loc("/usr/include/stdlib.h":105:1)
#loc23 = loc("/usr/include/stdlib.h":106:33)
#loc24 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc25 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc26 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":51:23)
#loc27 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":34:1)
#loc28 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":56:1)
#loc29 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":36:5)
#loc30 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":36:9)
#loc31 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":38:5)
#loc32 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":38:29)
#loc33 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":40:12)
#loc34 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":40:5)
#loc35 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":41:5)
#loc36 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":53:5)
#loc37 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":42:9)
#loc38 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":42:45)
#loc39 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":44:9)
#loc40 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":52:9)
#loc41 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":44:19)
#loc42 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":44:32)
#loc43 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":44:49)
#loc44 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":44:13)
#loc45 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":44:59)
#loc46 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":45:9)
#loc47 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":48:9)
#loc48 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":50:9)
#loc49 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":47:25)
#loc50 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":47:20)
#loc51 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":47:13)
#loc52 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":47:36)
#loc53 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":51:13)
#loc54 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":55:5)
#loc55 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":55:13)
#loc56 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":124:1)
#loc57 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":128:1)
#loc58 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":126:5)
#loc59 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":126:13)
#loc60 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":127:5)
#loc61 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":127:13)
#loc62 = loc("/usr/include/stdlib.h":575:1)
#loc63 = loc("/usr/include/stdlib.h":575:41)
#loc64 = loc("/usr/include/time.h":76:1)
#loc65 = loc("/usr/include/time.h":76:38)
#loc66 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":143:15)
#loc67 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":145:15)
#loc68 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":148:15)
#loc69 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":150:15)
#loc70 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":138:1)
#loc71 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":153:1)
#loc76 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":139:1)
#loc77 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":141:27)
#loc78 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":141:22)
#loc79 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":141:5)
#loc80 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":143:5)
#loc81 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":144:5)
#loc82 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":144:58)
#loc83 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":145:5)
#loc84 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":148:5)
#loc85 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":149:5)
#loc86 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":149:57)
#loc87 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":150:5)
#loc88 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":152:12)
#loc89 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":152:5)
#loc90 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":63:1)
#loc91 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":71:1)
#loc94 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":64:1)
#loc95 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":65:5)
#loc96 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":70:5)
#loc97 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":65:8)
#loc98 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":65:15)
#loc99 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":66:5)
#loc100 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":68:9)
#loc101 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":68:29)
#loc102 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":68:22)
#loc103 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":69:22)
#loc104 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":69:9)
#loc105 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":73:1)
#loc106 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":82:1)
#loc107 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":75:5)
#loc108 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":75:9)
#loc109 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":76:5)
#loc110 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":76:29)
#loc111 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":78:12)
#loc112 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":78:5)
#loc113 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":80:13)
#loc114 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":80:12)
#loc115 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":80:5)
#loc116 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":81:5)
#loc117 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":81:13)
#loc118 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":97:23)
#loc119 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":85:1)
#loc120 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":100:1)
#loc123 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":86:1)
#loc124 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":87:5)
#loc125 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":99:5)
#loc126 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":87:8)
#loc127 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":87:15)
#loc128 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":88:5)
#loc129 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":90:9)
#loc130 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":98:9)
#loc131 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":90:13)
#loc132 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":90:21)
#loc133 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":90:29)
#loc134 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":90:30)
#loc135 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":91:9)
#loc136 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":94:9)
#loc137 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":96:9)
#loc138 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":92:13)
#loc139 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":92:33)
#loc140 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":92:26)
#loc141 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":93:26)
#loc142 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":93:13)
#loc143 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":97:13)
#loc144 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":102:1)
#loc145 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":122:1)
#loc146 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":104:5)
#loc147 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":104:9)
#loc148 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":105:5)
#loc149 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":105:29)
#loc150 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":107:12)
#loc151 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":107:5)
#loc152 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":108:5)
#loc153 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":120:5)
#loc154 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":109:9)
#loc155 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":109:45)
#loc156 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":111:9)
#loc157 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":119:9)
#loc158 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":111:19)
#loc159 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":111:32)
#loc160 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":111:49)
#loc161 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":111:13)
#loc162 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":111:59)
#loc163 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":112:9)
#loc164 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":115:9)
#loc165 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":117:9)
#loc166 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":114:25)
#loc167 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":114:20)
#loc168 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":114:13)
#loc169 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":114:36)
#loc170 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":118:23)
#loc171 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":118:13)
#loc172 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":121:5)
#loc173 = loc("CWE191_Integer_Underflow__int_fgets_multiply_44.c":121:13)
#loc174 = loc(fused[#loc1, #loc2])
#loc175 = loc(fused[#loc3, #loc4])
#loc177 = loc(fused[#loc8, #loc9])
#loc178 = loc(fused[#loc10, #loc11])
#loc179 = loc(fused[#loc12, #loc9])
#loc180 = loc(fused[#loc13, #loc14])
#loc181 = loc(fused[#loc18, #loc19])
#loc182 = loc(fused[#loc20, #loc21])
#loc183 = loc(fused[#loc22, #loc23])
#loc184 = loc(fused[#loc24, #loc25])
#loc185 = loc(fused[#loc27, #loc28])
#loc186 = loc(fused[#loc29, #loc30])
#loc187 = loc(fused[#loc31, #loc32])
#loc188 = loc(fused[#loc34, #loc33])
#loc189 = loc(fused[#loc35, #loc36])
#loc190 = loc(fused[#loc37, #loc38])
#loc191 = loc(fused[#loc39, #loc40])
#loc192 = loc(fused[#loc44, #loc45])
#loc193 = loc(fused[#loc46, #loc47, #loc48, #loc40])
#loc194 = loc(fused[#loc51, #loc52])
#loc195 = loc(fused[#loc56, #loc57])
#loc196 = loc(fused[#loc58, #loc59])
#loc197 = loc(fused[#loc60, #loc61])
#loc198 = loc(fused[#loc62, #loc63])
#loc199 = loc(fused[#loc64, #loc65])
#loc200 = loc(fused[#loc70, #loc71])
#loc203 = loc(fused[#loc81, #loc82])
#loc204 = loc(fused[#loc85, #loc86])
#loc205 = loc(fused[#loc89, #loc88])
#loc206 = loc(fused[#loc90, #loc91])
#loc208 = loc(fused[#loc95, #loc96])
#loc209 = loc(fused[#loc97, #loc98])
#loc210 = loc(fused[#loc99, #loc96])
#loc211 = loc(fused[#loc100, #loc101])
#loc212 = loc(fused[#loc105, #loc106])
#loc213 = loc(fused[#loc107, #loc108])
#loc214 = loc(fused[#loc109, #loc110])
#loc215 = loc(fused[#loc112, #loc111])
#loc216 = loc(fused[#loc115, #loc113])
#loc217 = loc(fused[#loc119, #loc120])
#loc219 = loc(fused[#loc124, #loc125])
#loc220 = loc(fused[#loc126, #loc127])
#loc221 = loc(fused[#loc128, #loc125])
#loc222 = loc(fused[#loc129, #loc130])
#loc223 = loc(fused[#loc132, #loc133])
#loc224 = loc(fused[#loc131, #loc134])
#loc225 = loc(fused[#loc135, #loc136, #loc137, #loc130])
#loc226 = loc(fused[#loc138, #loc139])
#loc227 = loc(fused[#loc144, #loc145])
#loc228 = loc(fused[#loc146, #loc147])
#loc229 = loc(fused[#loc148, #loc149])
#loc230 = loc(fused[#loc151, #loc150])
#loc231 = loc(fused[#loc152, #loc153])
#loc232 = loc(fused[#loc154, #loc155])
#loc233 = loc(fused[#loc156, #loc157])
#loc234 = loc(fused[#loc161, #loc162])
#loc235 = loc(fused[#loc163, #loc164, #loc165, #loc157])
#loc236 = loc(fused[#loc168, #loc169])
