!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc110 = loc("CWE367_TOC_TOU__access_18.c":135:10)
#loc111 = loc("CWE367_TOC_TOU__access_18.c":135:14)
#loc112 = loc("CWE367_TOC_TOU__access_18.c":135:20)
#loc113 = loc("CWE367_TOC_TOU__access_18.c":135:32)
#loc236 = loc(fused[#loc110, #loc111])
#loc237 = loc(fused[#loc112, #loc113])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__access_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc195)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc196)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc197)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc7)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc198)
  cir.func private @access(!cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc199)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc200)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc201)
  cir.func private @write(!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc202)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Bad Sink...\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> {alignment = 1 : i64} loc(#loc18)
  cir.func private @close(!s32i) -> !s32i loc(#loc203)
  cir.func no_proto @CWE367_TOC_TOU__access_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc205)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc206)
    cir.goto "sink" loc(#loc207)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc29)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc205)
    cir.store %2, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc205)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc30)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc206)
    cir.scope {
      %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc33)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc34)
      %10 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc196)
      %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc35)
      %12 = cir.call @fgets(%8, %9, %11) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc36)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc37)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc37)
      %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc209)
      cir.if %15 {
        %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc7)
        %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc7)
        cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc39)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc40)
        %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc40)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc41)
        %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc42)
        %22 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc42)
        cir.store %19, %22 : !s8i, !cir.ptr<!s8i> loc(#loc211)
      } loc(#loc210)
    } loc(#loc208)
    cir.scope {
      %8 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc45)
      %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc46)
      %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc45)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc47)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc47)
      %13 = cir.cmp(gt, %10, %12) : !u64i, !cir.bool loc(#loc213)
      cir.if %13 {
        %14 = cir.const #cir.int<0> : !s32i loc(#loc49)
        %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc49)
        %16 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc50)
        %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc51)
        %18 = cir.call @strlen(%17) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc50)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc52)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc52)
        %21 = cir.binop(sub, %18, %20) : !u64i loc(#loc215)
        %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc53)
        %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !u64i), !cir.ptr<!s8i> loc(#loc53)
        cir.store %15, %23 : !s8i, !cir.ptr<!s8i> loc(#loc216)
      } loc(#loc214)
    } loc(#loc212)
    cir.scope {
      %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc56)
      %9 = cir.const #cir.int<2> : !s32i loc(#loc57)
      %10 = cir.call @access(%8, %9) : (!cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc58)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc59)
      %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc60)
      %13 = cir.cmp(eq, %10, %12) : !s32i, !cir.bool loc(#loc218)
      cir.if %13 {
        %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc62)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc63)
        cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc62)
      } loc(#loc219)
    } loc(#loc217)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc64)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc65)
    %7 = cir.call @open(%5, %6) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc66)
    cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc220)
    cir.scope {
      %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc71)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc72)
      %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc73)
      %11 = cir.cmp(eq, %8, %10) : !s32i, !cir.bool loc(#loc222)
      cir.if %11 {
        %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc75)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc76)
        cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc75)
      } loc(#loc223)
    } loc(#loc221)
    cir.scope {
      %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc79)
      %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc18)
      %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc18)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
      %12 = cir.const #cir.int<11> : !u64i loc(#loc225)
      %13 = cir.call @write(%8, %11, %12) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc82)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc83)
      %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc84)
      %16 = cir.cast(integral, %15 : !s32i), !s64i loc(#loc84)
      %17 = cir.cmp(eq, %13, %16) : !s64i, !cir.bool loc(#loc226)
      cir.if %17 {
        %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc86)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc87)
        cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc86)
      } loc(#loc227)
    } loc(#loc224)
    cir.scope {
      %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc90)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc91)
      %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc92)
      %11 = cir.cmp(ne, %8, %10) : !s32i, !cir.bool loc(#loc229)
      cir.if %11 {
        %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc94)
        %13 = cir.call @close(%12) : (!s32i) -> !s32i loc(#loc95)
      } loc(#loc230)
    } loc(#loc228)
    cir.return loc(#loc22)
  } loc(#loc204)
  cir.func no_proto @CWE367_TOC_TOU__access_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc232)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc98)
    cir.return loc(#loc97)
  } loc(#loc231)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc233)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc234)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc104)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc105)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc106)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc107)
  cir.func @main(%arg0: !s32i loc(fused[#loc110, #loc111]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc112, #loc113])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc236)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc237)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc109)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc114)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc114)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc115)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc116)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc116)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc117)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc104)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc104)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    %8 = cir.get_global @CWE367_TOC_TOU__access_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc238)
    cir.call @CWE367_TOC_TOU__access_18_good() : () -> () loc(#loc119)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc105)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc105)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc121)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc106)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc106)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc122)
    %13 = cir.get_global @CWE367_TOC_TOU__access_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc239)
    cir.call @CWE367_TOC_TOU__access_18_bad() : () -> () loc(#loc123)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc107)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc107)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc125)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc126)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc240)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc240)
    cir.return %17 : !s32i loc(#loc240)
  } loc(#loc235)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Good Sink...\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc128)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc242)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc243)
    cir.goto "sink" loc(#loc244)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc137)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc242)
    cir.store %2, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc242)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc134)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc138)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc243)
    cir.scope {
      %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc141)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc142)
      %10 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc196)
      %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc143)
      %12 = cir.call @fgets(%8, %9, %11) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc144)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc145)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc145)
      %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc246)
      cir.if %15 {
        %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc147)
        %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc147)
        cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc148)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc149)
        %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc149)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc150)
        %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc151)
        %22 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc151)
        cir.store %19, %22 : !s8i, !cir.ptr<!s8i> loc(#loc248)
      } loc(#loc247)
    } loc(#loc245)
    cir.scope {
      %8 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc154)
      %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc155)
      %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc154)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc156)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc156)
      %13 = cir.cmp(gt, %10, %12) : !u64i, !cir.bool loc(#loc250)
      cir.if %13 {
        %14 = cir.const #cir.int<0> : !s32i loc(#loc158)
        %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc158)
        %16 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc159)
        %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc160)
        %18 = cir.call @strlen(%17) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc159)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc161)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc161)
        %21 = cir.binop(sub, %18, %20) : !u64i loc(#loc252)
        %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc162)
        %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !u64i), !cir.ptr<!s8i> loc(#loc162)
        cir.store %15, %23 : !s8i, !cir.ptr<!s8i> loc(#loc253)
      } loc(#loc251)
    } loc(#loc249)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc163)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc164)
    %7 = cir.call @open(%5, %6) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc165)
    cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc254)
    cir.scope {
      %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc170)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc171)
      %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc172)
      %11 = cir.cmp(eq, %8, %10) : !s32i, !cir.bool loc(#loc256)
      cir.if %11 {
        %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc174)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc175)
        cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc174)
      } loc(#loc257)
    } loc(#loc255)
    cir.scope {
      %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc178)
      %9 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc128)
      %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc128)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc128)
      %12 = cir.const #cir.int<12> : !u64i loc(#loc259)
      %13 = cir.call @write(%8, %11, %12) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc181)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc182)
      %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc183)
      %16 = cir.cast(integral, %15 : !s32i), !s64i loc(#loc183)
      %17 = cir.cmp(eq, %13, %16) : !s64i, !cir.bool loc(#loc260)
      cir.if %17 {
        %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc185)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc186)
        cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc185)
      } loc(#loc261)
    } loc(#loc258)
    cir.scope {
      %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc189)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc190)
      %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc191)
      %11 = cir.cmp(ne, %8, %10) : !s32i, !cir.bool loc(#loc263)
      cir.if %11 {
        %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc193)
        %13 = cir.call @close(%12) : (!s32i) -> !s32i loc(#loc194)
      } loc(#loc264)
    } loc(#loc262)
    cir.return loc(#loc130)
  } loc(#loc241)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__access_18.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE367_TOC_TOU__access_18.c":53:23)
#loc8 = loc("/usr/include/string.h":407:1)
#loc9 = loc("/usr/include/string.h":408:33)
#loc10 = loc("/usr/include/unistd.h":287:1)
#loc11 = loc("/usr/include/unistd.h":287:60)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("/usr/include/fcntl.h":209:1)
#loc15 = loc("/usr/include/fcntl.h":209:56)
#loc16 = loc("/usr/include/unistd.h":378:1)
#loc17 = loc("/usr/include/unistd.h":378:62)
#loc18 = loc("CWE367_TOC_TOU__access_18.c":71:29)
#loc19 = loc("/usr/include/unistd.h":358:1)
#loc20 = loc("/usr/include/unistd.h":358:27)
#loc21 = loc("CWE367_TOC_TOU__access_18.c":44:1)
#loc22 = loc("CWE367_TOC_TOU__access_18.c":80:1)
#loc23 = loc("CWE367_TOC_TOU__access_18.c":49:9)
#loc24 = loc("CWE367_TOC_TOU__access_18.c":49:30)
#loc25 = loc("CWE367_TOC_TOU__access_18.c":50:9)
#loc26 = loc("CWE367_TOC_TOU__access_18.c":50:25)
#loc27 = loc("CWE367_TOC_TOU__access_18.c":46:5)
#loc28 = loc("CWE367_TOC_TOU__access_18.c":46:10)
#loc29 = loc("CWE367_TOC_TOU__access_18.c":47:1)
#loc30 = loc("CWE367_TOC_TOU__access_18.c":50:24)
#loc31 = loc("CWE367_TOC_TOU__access_18.c":51:9)
#loc32 = loc("CWE367_TOC_TOU__access_18.c":56:9)
#loc33 = loc("CWE367_TOC_TOU__access_18.c":51:19)
#loc34 = loc("CWE367_TOC_TOU__access_18.c":51:29)
#loc35 = loc("CWE367_TOC_TOU__access_18.c":51:34)
#loc36 = loc("CWE367_TOC_TOU__access_18.c":51:13)
#loc37 = loc("CWE367_TOC_TOU__access_18.c":51:44)
#loc38 = loc("CWE367_TOC_TOU__access_18.c":52:9)
#loc39 = loc("CWE367_TOC_TOU__access_18.c":53:13)
#loc40 = loc("CWE367_TOC_TOU__access_18.c":55:27)
#loc41 = loc("CWE367_TOC_TOU__access_18.c":55:22)
#loc42 = loc("CWE367_TOC_TOU__access_18.c":55:13)
#loc43 = loc("CWE367_TOC_TOU__access_18.c":57:9)
#loc44 = loc("CWE367_TOC_TOU__access_18.c":60:9)
#loc45 = loc("CWE367_TOC_TOU__access_18.c":57:13)
#loc46 = loc("CWE367_TOC_TOU__access_18.c":57:20)
#loc47 = loc("CWE367_TOC_TOU__access_18.c":57:32)
#loc48 = loc("CWE367_TOC_TOU__access_18.c":58:9)
#loc49 = loc("CWE367_TOC_TOU__access_18.c":59:44)
#loc50 = loc("CWE367_TOC_TOU__access_18.c":59:22)
#loc51 = loc("CWE367_TOC_TOU__access_18.c":59:29)
#loc52 = loc("CWE367_TOC_TOU__access_18.c":59:39)
#loc53 = loc("CWE367_TOC_TOU__access_18.c":59:13)
#loc54 = loc("CWE367_TOC_TOU__access_18.c":62:9)
#loc55 = loc("CWE367_TOC_TOU__access_18.c":65:9)
#loc56 = loc("CWE367_TOC_TOU__access_18.c":62:20)
#loc57 = loc("CWE367_TOC_TOU__access_18.c":62:30)
#loc58 = loc("CWE367_TOC_TOU__access_18.c":62:13)
#loc59 = loc("CWE367_TOC_TOU__access_18.c":62:40)
#loc60 = loc("CWE367_TOC_TOU__access_18.c":62:39)
#loc61 = loc("CWE367_TOC_TOU__access_18.c":63:9)
#loc62 = loc("CWE367_TOC_TOU__access_18.c":64:13)
#loc63 = loc("CWE367_TOC_TOU__access_18.c":64:18)
#loc64 = loc("CWE367_TOC_TOU__access_18.c":66:26)
#loc65 = loc("CWE367_TOC_TOU__access_18.c":66:36)
#loc66 = loc("CWE367_TOC_TOU__access_18.c":66:21)
#loc67 = loc("CWE367_TOC_TOU__access_18.c":66:9)
#loc68 = loc("CWE367_TOC_TOU__access_18.c":66:42)
#loc69 = loc("CWE367_TOC_TOU__access_18.c":67:9)
#loc70 = loc("CWE367_TOC_TOU__access_18.c":70:9)
#loc71 = loc("CWE367_TOC_TOU__access_18.c":67:13)
#loc72 = loc("CWE367_TOC_TOU__access_18.c":67:26)
#loc73 = loc("CWE367_TOC_TOU__access_18.c":67:25)
#loc74 = loc("CWE367_TOC_TOU__access_18.c":68:9)
#loc75 = loc("CWE367_TOC_TOU__access_18.c":69:13)
#loc76 = loc("CWE367_TOC_TOU__access_18.c":69:18)
#loc77 = loc("CWE367_TOC_TOU__access_18.c":71:9)
#loc78 = loc("CWE367_TOC_TOU__access_18.c":74:9)
#loc79 = loc("CWE367_TOC_TOU__access_18.c":71:19)
#loc80 = loc("CWE367_TOC_TOU__access_18.c":71:46)
#loc81 = loc("CWE367_TOC_TOU__access_18.c":71:68)
#loc82 = loc("CWE367_TOC_TOU__access_18.c":71:13)
#loc83 = loc("CWE367_TOC_TOU__access_18.c":71:75)
#loc84 = loc("CWE367_TOC_TOU__access_18.c":71:74)
#loc85 = loc("CWE367_TOC_TOU__access_18.c":72:9)
#loc86 = loc("CWE367_TOC_TOU__access_18.c":73:13)
#loc87 = loc("CWE367_TOC_TOU__access_18.c":73:18)
#loc88 = loc("CWE367_TOC_TOU__access_18.c":75:9)
#loc89 = loc("CWE367_TOC_TOU__access_18.c":78:9)
#loc90 = loc("CWE367_TOC_TOU__access_18.c":75:13)
#loc91 = loc("CWE367_TOC_TOU__access_18.c":75:26)
#loc92 = loc("CWE367_TOC_TOU__access_18.c":75:25)
#loc93 = loc("CWE367_TOC_TOU__access_18.c":76:9)
#loc94 = loc("CWE367_TOC_TOU__access_18.c":77:19)
#loc95 = loc("CWE367_TOC_TOU__access_18.c":77:13)
#loc96 = loc("CWE367_TOC_TOU__access_18.c":121:1)
#loc97 = loc("CWE367_TOC_TOU__access_18.c":124:1)
#loc98 = loc("CWE367_TOC_TOU__access_18.c":123:5)
#loc99 = loc("CWE367_TOC_TOU__access_18.c":123:11)
#loc100 = loc("/usr/include/stdlib.h":575:1)
#loc101 = loc("/usr/include/stdlib.h":575:41)
#loc102 = loc("/usr/include/time.h":76:1)
#loc103 = loc("/usr/include/time.h":76:38)
#loc104 = loc("CWE367_TOC_TOU__access_18.c":140:15)
#loc105 = loc("CWE367_TOC_TOU__access_18.c":142:15)
#loc106 = loc("CWE367_TOC_TOU__access_18.c":145:15)
#loc107 = loc("CWE367_TOC_TOU__access_18.c":147:15)
#loc108 = loc("CWE367_TOC_TOU__access_18.c":135:1)
#loc109 = loc("CWE367_TOC_TOU__access_18.c":150:1)
#loc114 = loc("CWE367_TOC_TOU__access_18.c":136:1)
#loc115 = loc("CWE367_TOC_TOU__access_18.c":138:27)
#loc116 = loc("CWE367_TOC_TOU__access_18.c":138:22)
#loc117 = loc("CWE367_TOC_TOU__access_18.c":138:5)
#loc118 = loc("CWE367_TOC_TOU__access_18.c":140:5)
#loc119 = loc("CWE367_TOC_TOU__access_18.c":141:5)
#loc120 = loc("CWE367_TOC_TOU__access_18.c":141:36)
#loc121 = loc("CWE367_TOC_TOU__access_18.c":142:5)
#loc122 = loc("CWE367_TOC_TOU__access_18.c":145:5)
#loc123 = loc("CWE367_TOC_TOU__access_18.c":146:5)
#loc124 = loc("CWE367_TOC_TOU__access_18.c":146:35)
#loc125 = loc("CWE367_TOC_TOU__access_18.c":147:5)
#loc126 = loc("CWE367_TOC_TOU__access_18.c":149:12)
#loc127 = loc("CWE367_TOC_TOU__access_18.c":149:5)
#loc128 = loc("CWE367_TOC_TOU__access_18.c":110:29)
#loc129 = loc("CWE367_TOC_TOU__access_18.c":87:1)
#loc130 = loc("CWE367_TOC_TOU__access_18.c":119:1)
#loc131 = loc("CWE367_TOC_TOU__access_18.c":92:9)
#loc132 = loc("CWE367_TOC_TOU__access_18.c":92:30)
#loc133 = loc("CWE367_TOC_TOU__access_18.c":93:9)
#loc134 = loc("CWE367_TOC_TOU__access_18.c":93:25)
#loc135 = loc("CWE367_TOC_TOU__access_18.c":89:5)
#loc136 = loc("CWE367_TOC_TOU__access_18.c":89:10)
#loc137 = loc("CWE367_TOC_TOU__access_18.c":90:1)
#loc138 = loc("CWE367_TOC_TOU__access_18.c":93:24)
#loc139 = loc("CWE367_TOC_TOU__access_18.c":94:9)
#loc140 = loc("CWE367_TOC_TOU__access_18.c":99:9)
#loc141 = loc("CWE367_TOC_TOU__access_18.c":94:19)
#loc142 = loc("CWE367_TOC_TOU__access_18.c":94:29)
#loc143 = loc("CWE367_TOC_TOU__access_18.c":94:34)
#loc144 = loc("CWE367_TOC_TOU__access_18.c":94:13)
#loc145 = loc("CWE367_TOC_TOU__access_18.c":94:44)
#loc146 = loc("CWE367_TOC_TOU__access_18.c":95:9)
#loc147 = loc("CWE367_TOC_TOU__access_18.c":96:23)
#loc148 = loc("CWE367_TOC_TOU__access_18.c":96:13)
#loc149 = loc("CWE367_TOC_TOU__access_18.c":98:27)
#loc150 = loc("CWE367_TOC_TOU__access_18.c":98:22)
#loc151 = loc("CWE367_TOC_TOU__access_18.c":98:13)
#loc152 = loc("CWE367_TOC_TOU__access_18.c":100:9)
#loc153 = loc("CWE367_TOC_TOU__access_18.c":103:9)
#loc154 = loc("CWE367_TOC_TOU__access_18.c":100:13)
#loc155 = loc("CWE367_TOC_TOU__access_18.c":100:20)
#loc156 = loc("CWE367_TOC_TOU__access_18.c":100:32)
#loc157 = loc("CWE367_TOC_TOU__access_18.c":101:9)
#loc158 = loc("CWE367_TOC_TOU__access_18.c":102:44)
#loc159 = loc("CWE367_TOC_TOU__access_18.c":102:22)
#loc160 = loc("CWE367_TOC_TOU__access_18.c":102:29)
#loc161 = loc("CWE367_TOC_TOU__access_18.c":102:39)
#loc162 = loc("CWE367_TOC_TOU__access_18.c":102:13)
#loc163 = loc("CWE367_TOC_TOU__access_18.c":105:26)
#loc164 = loc("CWE367_TOC_TOU__access_18.c":105:36)
#loc165 = loc("CWE367_TOC_TOU__access_18.c":105:21)
#loc166 = loc("CWE367_TOC_TOU__access_18.c":105:9)
#loc167 = loc("CWE367_TOC_TOU__access_18.c":105:42)
#loc168 = loc("CWE367_TOC_TOU__access_18.c":106:9)
#loc169 = loc("CWE367_TOC_TOU__access_18.c":109:9)
#loc170 = loc("CWE367_TOC_TOU__access_18.c":106:13)
#loc171 = loc("CWE367_TOC_TOU__access_18.c":106:26)
#loc172 = loc("CWE367_TOC_TOU__access_18.c":106:25)
#loc173 = loc("CWE367_TOC_TOU__access_18.c":107:9)
#loc174 = loc("CWE367_TOC_TOU__access_18.c":108:13)
#loc175 = loc("CWE367_TOC_TOU__access_18.c":108:18)
#loc176 = loc("CWE367_TOC_TOU__access_18.c":110:9)
#loc177 = loc("CWE367_TOC_TOU__access_18.c":113:9)
#loc178 = loc("CWE367_TOC_TOU__access_18.c":110:19)
#loc179 = loc("CWE367_TOC_TOU__access_18.c":110:47)
#loc180 = loc("CWE367_TOC_TOU__access_18.c":110:70)
#loc181 = loc("CWE367_TOC_TOU__access_18.c":110:13)
#loc182 = loc("CWE367_TOC_TOU__access_18.c":110:77)
#loc183 = loc("CWE367_TOC_TOU__access_18.c":110:76)
#loc184 = loc("CWE367_TOC_TOU__access_18.c":111:9)
#loc185 = loc("CWE367_TOC_TOU__access_18.c":112:13)
#loc186 = loc("CWE367_TOC_TOU__access_18.c":112:18)
#loc187 = loc("CWE367_TOC_TOU__access_18.c":114:9)
#loc188 = loc("CWE367_TOC_TOU__access_18.c":117:9)
#loc189 = loc("CWE367_TOC_TOU__access_18.c":114:13)
#loc190 = loc("CWE367_TOC_TOU__access_18.c":114:26)
#loc191 = loc("CWE367_TOC_TOU__access_18.c":114:25)
#loc192 = loc("CWE367_TOC_TOU__access_18.c":115:9)
#loc193 = loc("CWE367_TOC_TOU__access_18.c":116:19)
#loc194 = loc("CWE367_TOC_TOU__access_18.c":116:13)
#loc195 = loc(fused[#loc1, #loc2])
#loc196 = loc(fused[#loc3, #loc4])
#loc197 = loc(fused[#loc5, #loc6])
#loc198 = loc(fused[#loc8, #loc9])
#loc199 = loc(fused[#loc10, #loc11])
#loc200 = loc(fused[#loc12, #loc13])
#loc201 = loc(fused[#loc14, #loc15])
#loc202 = loc(fused[#loc16, #loc17])
#loc203 = loc(fused[#loc19, #loc20])
#loc204 = loc(fused[#loc21, #loc22])
#loc205 = loc(fused[#loc23, #loc24])
#loc206 = loc(fused[#loc25, #loc26])
#loc207 = loc(fused[#loc27, #loc28])
#loc208 = loc(fused[#loc31, #loc32])
#loc209 = loc(fused[#loc36, #loc37])
#loc210 = loc(fused[#loc38, #loc32])
#loc211 = loc(fused[#loc42, #loc40])
#loc212 = loc(fused[#loc43, #loc44])
#loc213 = loc(fused[#loc45, #loc47])
#loc214 = loc(fused[#loc48, #loc44])
#loc215 = loc(fused[#loc50, #loc52])
#loc216 = loc(fused[#loc53, #loc49])
#loc217 = loc(fused[#loc54, #loc55])
#loc218 = loc(fused[#loc58, #loc59])
#loc219 = loc(fused[#loc61, #loc55])
#loc220 = loc(fused[#loc67, #loc68])
#loc221 = loc(fused[#loc69, #loc70])
#loc222 = loc(fused[#loc71, #loc72])
#loc223 = loc(fused[#loc74, #loc70])
#loc224 = loc(fused[#loc77, #loc78])
#loc225 = loc(fused[#loc80, #loc81])
#loc226 = loc(fused[#loc82, #loc83])
#loc227 = loc(fused[#loc85, #loc78])
#loc228 = loc(fused[#loc88, #loc89])
#loc229 = loc(fused[#loc90, #loc91])
#loc230 = loc(fused[#loc93, #loc89])
#loc231 = loc(fused[#loc96, #loc97])
#loc232 = loc(fused[#loc98, #loc99])
#loc233 = loc(fused[#loc100, #loc101])
#loc234 = loc(fused[#loc102, #loc103])
#loc235 = loc(fused[#loc108, #loc109])
#loc238 = loc(fused[#loc119, #loc120])
#loc239 = loc(fused[#loc123, #loc124])
#loc240 = loc(fused[#loc127, #loc126])
#loc241 = loc(fused[#loc129, #loc130])
#loc242 = loc(fused[#loc131, #loc132])
#loc243 = loc(fused[#loc133, #loc134])
#loc244 = loc(fused[#loc135, #loc136])
#loc245 = loc(fused[#loc139, #loc140])
#loc246 = loc(fused[#loc144, #loc145])
#loc247 = loc(fused[#loc146, #loc140])
#loc248 = loc(fused[#loc151, #loc149])
#loc249 = loc(fused[#loc152, #loc153])
#loc250 = loc(fused[#loc154, #loc156])
#loc251 = loc(fused[#loc157, #loc153])
#loc252 = loc(fused[#loc159, #loc161])
#loc253 = loc(fused[#loc162, #loc158])
#loc254 = loc(fused[#loc166, #loc167])
#loc255 = loc(fused[#loc168, #loc169])
#loc256 = loc(fused[#loc170, #loc171])
#loc257 = loc(fused[#loc173, #loc169])
#loc258 = loc(fused[#loc176, #loc177])
#loc259 = loc(fused[#loc179, #loc180])
#loc260 = loc(fused[#loc181, #loc182])
#loc261 = loc(fused[#loc184, #loc177])
#loc262 = loc(fused[#loc187, #loc188])
#loc263 = loc(fused[#loc189, #loc190])
#loc264 = loc(fused[#loc192, #loc188])
