!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc79 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":89:10)
#loc80 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":89:14)
#loc81 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":89:20)
#loc82 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":89:32)
#loc181 = loc(fused[#loc79, #loc80])
#loc182 = loc(fused[#loc81, #loc82])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_memmove_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc157)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc158)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_memmove_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc160)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc161)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc162)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc12)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc12)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc12)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc12)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc163)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc162)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc14)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc14)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc14)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc14)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc14)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc163)
    %18 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc15)
    %20 = cir.const #cir.int<65> : !s32i loc(#loc16)
    %21 = cir.const #cir.int<50> : !s32i loc(#loc17)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc17)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc17)
    cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc164)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc21)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc21)
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %28 = cir.const #cir.int<50> : !s32i loc(#loc23)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc23)
    %31 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc25)
    cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc165)
    %32 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc26)
    %34 = cir.const #cir.int<65> : !s32i loc(#loc27)
    %35 = cir.const #cir.int<100> : !s32i loc(#loc28)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc28)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc28)
    cir.libc.memset %38 bytes from %33 set to %34 : !cir.ptr<!void>, !s32i, !u64i loc(#loc166)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc32)
    %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc32)
    %41 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %42 = cir.const #cir.int<100> : !s32i loc(#loc34)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc34)
    %45 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc36)
    cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc167)
    %46 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    cir.store %46, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc168)
    cir.br ^bb1 loc(#loc169)
  ^bb1:  // pred: ^bb0
    %47 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc41)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc41)
    %49 = cir.const #cir.int<67> : !s32i loc(#loc42)
    %50 = cir.const #cir.int<100> : !s32i loc(#loc43)
    %51 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %52 = cir.binop(sub, %50, %51) nsw : !s32i loc(#loc43)
    %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc43)
    cir.libc.memset %53 bytes from %48 set to %49 : !cir.ptr<!void>, !s32i, !u64i loc(#loc170)
    %54 = cir.const #cir.int<0> : !s32i loc(#loc47)
    %55 = cir.cast(integral, %54 : !s32i), !s8i loc(#loc47)
    %56 = cir.const #cir.int<100> : !s32i loc(#loc48)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %58 = cir.binop(sub, %56, %57) nsw : !s32i loc(#loc48)
    %59 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc50)
    %60 = cir.ptr_stride(%59 : !cir.ptr<!s8i>, %58 : !s32i), !cir.ptr<!s8i> loc(#loc50)
    cir.store %55, %60 : !s8i, !cir.ptr<!s8i> loc(#loc171)
    %61 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc51)
    %62 = cir.cast(bitcast, %61 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc51)
    %63 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
    %64 = cir.cast(bitcast, %63 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc52)
    %65 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc53)
    %66 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc54)
    %67 = cir.call @strlen(%66) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc53)
    %68 = cir.const #cir.int<1> : !u64i loc(#loc172)
    %69 = cir.binop(mul, %67, %68) : !u64i loc(#loc173)
    cir.libc.memmove %69 bytes from %64 to %62 : !cir.ptr<!void>, !u64i loc(#loc174)
    %70 = cir.const #cir.int<0> : !s32i loc(#loc59)
    %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc59)
    %72 = cir.const #cir.int<100> : !s32i loc(#loc60)
    %73 = cir.const #cir.int<1> : !s32i loc(#loc61)
    %74 = cir.binop(sub, %72, %73) nsw : !s32i loc(#loc60)
    %75 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc62)
    %76 = cir.ptr_stride(%75 : !cir.ptr<!s8i>, %74 : !s32i), !cir.ptr<!s8i> loc(#loc62)
    cir.store %71, %76 : !s8i, !cir.ptr<!s8i> loc(#loc175)
    %77 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%77) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    cir.br ^bb2 loc(#loc40)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc6)
  } loc(#loc159)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_memmove_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc177)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc67)
    cir.return loc(#loc66)
  } loc(#loc176)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc178)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc179)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc73)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc75)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc76)
  cir.func @main(%arg0: !s32i loc(fused[#loc79, #loc80]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc81, #loc82])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc181)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc182)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc78)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc83)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc83)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc84)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc85)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc85)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc86)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc73)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %8 = cir.get_global @CWE126_Buffer_Overread__char_alloca_memmove_01_good : !cir.ptr<!cir.func<!void ()>> loc(#loc183)
    cir.call @CWE126_Buffer_Overread__char_alloca_memmove_01_good() : () -> () loc(#loc88)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc74)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc75)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %13 = cir.get_global @CWE126_Buffer_Overread__char_alloca_memmove_01_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc184)
    cir.call @CWE126_Buffer_Overread__char_alloca_memmove_01_bad() : () -> () loc(#loc92)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc76)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc95)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc185)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc185)
    cir.return %17 : !s32i loc(#loc185)
  } loc(#loc180)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc187)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc188)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc189)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc104)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc104)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc104)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc104)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc104)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc190)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc104)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc104)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc189)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc106)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc106)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc106)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc106)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc106)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc106)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc106)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc190)
    %18 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc107)
    %20 = cir.const #cir.int<65> : !s32i loc(#loc108)
    %21 = cir.const #cir.int<50> : !s32i loc(#loc109)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc109)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc109)
    cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc191)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc113)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc113)
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
    %28 = cir.const #cir.int<50> : !s32i loc(#loc115)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc115)
    %31 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc117)
    cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc192)
    %32 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc118)
    %34 = cir.const #cir.int<65> : !s32i loc(#loc119)
    %35 = cir.const #cir.int<100> : !s32i loc(#loc120)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc121)
    %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc120)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc120)
    cir.libc.memset %38 bytes from %33 set to %34 : !cir.ptr<!void>, !s32i, !u64i loc(#loc193)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc124)
    %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc124)
    %41 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
    %42 = cir.const #cir.int<100> : !s32i loc(#loc126)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc127)
    %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc126)
    %45 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc128)
    cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc194)
    %46 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
    cir.store %46, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc195)
    cir.br ^bb1 loc(#loc196)
  ^bb1:  // pred: ^bb0
    %47 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc133)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc133)
    %49 = cir.const #cir.int<67> : !s32i loc(#loc134)
    %50 = cir.const #cir.int<100> : !s32i loc(#loc135)
    %51 = cir.const #cir.int<1> : !s32i loc(#loc136)
    %52 = cir.binop(sub, %50, %51) nsw : !s32i loc(#loc135)
    %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc135)
    cir.libc.memset %53 bytes from %48 set to %49 : !cir.ptr<!void>, !s32i, !u64i loc(#loc197)
    %54 = cir.const #cir.int<0> : !s32i loc(#loc139)
    %55 = cir.cast(integral, %54 : !s32i), !s8i loc(#loc139)
    %56 = cir.const #cir.int<100> : !s32i loc(#loc140)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc141)
    %58 = cir.binop(sub, %56, %57) nsw : !s32i loc(#loc140)
    %59 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc142)
    %60 = cir.ptr_stride(%59 : !cir.ptr<!s8i>, %58 : !s32i), !cir.ptr<!s8i> loc(#loc142)
    cir.store %55, %60 : !s8i, !cir.ptr<!s8i> loc(#loc198)
    %61 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc143)
    %62 = cir.cast(bitcast, %61 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc143)
    %63 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
    %64 = cir.cast(bitcast, %63 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc144)
    %65 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc145)
    %66 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc146)
    %67 = cir.call @strlen(%66) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc145)
    %68 = cir.const #cir.int<1> : !u64i loc(#loc199)
    %69 = cir.binop(mul, %67, %68) : !u64i loc(#loc200)
    cir.libc.memmove %69 bytes from %64 to %62 : !cir.ptr<!void>, !u64i loc(#loc201)
    %70 = cir.const #cir.int<0> : !s32i loc(#loc151)
    %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc151)
    %72 = cir.const #cir.int<100> : !s32i loc(#loc152)
    %73 = cir.const #cir.int<1> : !s32i loc(#loc153)
    %74 = cir.binop(sub, %72, %73) nsw : !s32i loc(#loc152)
    %75 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc154)
    %76 = cir.ptr_stride(%75 : !cir.ptr<!s8i>, %74 : !s32i), !cir.ptr<!s8i> loc(#loc154)
    cir.store %71, %76 : !s8i, !cir.ptr<!s8i> loc(#loc202)
    %77 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc155)
    cir.call @printLine(%77) : (!cir.ptr<!s8i>) -> () loc(#loc156)
    cir.br ^bb2 loc(#loc132)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc98)
  } loc(#loc186)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_memmove_01.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":23:1)
#loc6 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":44:1)
#loc7 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":35:9)
#loc8 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":35:22)
#loc9 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":25:5)
#loc10 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":25:12)
#loc11 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":26:5)
#loc12 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":26:36)
#loc13 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":27:5)
#loc14 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":27:37)
#loc15 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":28:12)
#loc16 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":28:27)
#loc17 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":28:32)
#loc18 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":28:35)
#loc19 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":28:5)
#loc20 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":28:36)
#loc21 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":29:27)
#loc22 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":29:5)
#loc23 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":29:19)
#loc24 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":29:22)
#loc25 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":29:23)
#loc26 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":30:12)
#loc27 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":30:28)
#loc28 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":30:33)
#loc29 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":30:37)
#loc30 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":30:5)
#loc31 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":30:38)
#loc32 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":31:29)
#loc33 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":31:5)
#loc34 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":31:20)
#loc35 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":31:24)
#loc36 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":31:25)
#loc37 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":33:12)
#loc38 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":33:5)
#loc39 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":34:5)
#loc40 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":43:5)
#loc41 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":36:16)
#loc42 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":36:22)
#loc43 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":36:27)
#loc44 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":36:31)
#loc45 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":36:9)
#loc46 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":36:32)
#loc47 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":37:23)
#loc48 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":37:14)
#loc49 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":37:18)
#loc50 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":37:9)
#loc51 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":40:17)
#loc52 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":40:23)
#loc53 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":40:29)
#loc54 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":40:36)
#loc55 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":40:42)
#loc56 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":40:53)
#loc57 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":40:9)
#loc58 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":40:54)
#loc59 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":41:23)
#loc60 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":41:14)
#loc61 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":41:18)
#loc62 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":41:9)
#loc63 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":42:19)
#loc64 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":42:9)
#loc65 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":74:1)
#loc66 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":77:1)
#loc67 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":76:5)
#loc68 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":76:13)
#loc69 = loc("/usr/include/stdlib.h":575:1)
#loc70 = loc("/usr/include/stdlib.h":575:41)
#loc71 = loc("/usr/include/time.h":76:1)
#loc72 = loc("/usr/include/time.h":76:38)
#loc73 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":94:15)
#loc74 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":96:15)
#loc75 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":99:15)
#loc76 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":101:15)
#loc77 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":89:1)
#loc78 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":104:1)
#loc83 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":90:1)
#loc84 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":92:27)
#loc85 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":92:22)
#loc86 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":92:5)
#loc87 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":94:5)
#loc88 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":95:5)
#loc89 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":95:57)
#loc90 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":96:5)
#loc91 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":99:5)
#loc92 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":100:5)
#loc93 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":100:56)
#loc94 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":101:5)
#loc95 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":103:12)
#loc96 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":103:5)
#loc97 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":51:1)
#loc98 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":72:1)
#loc99 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":63:9)
#loc100 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":63:22)
#loc101 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":53:5)
#loc102 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":53:12)
#loc103 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":54:5)
#loc104 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":54:36)
#loc105 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":55:5)
#loc106 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":55:37)
#loc107 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":56:12)
#loc108 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":56:27)
#loc109 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":56:32)
#loc110 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":56:35)
#loc111 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":56:5)
#loc112 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":56:36)
#loc113 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":57:27)
#loc114 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":57:5)
#loc115 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":57:19)
#loc116 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":57:22)
#loc117 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":57:23)
#loc118 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":58:12)
#loc119 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":58:28)
#loc120 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":58:33)
#loc121 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":58:37)
#loc122 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":58:5)
#loc123 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":58:38)
#loc124 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":59:29)
#loc125 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":59:5)
#loc126 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":59:20)
#loc127 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":59:24)
#loc128 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":59:25)
#loc129 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":61:12)
#loc130 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":61:5)
#loc131 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":62:5)
#loc132 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":71:5)
#loc133 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":64:16)
#loc134 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":64:22)
#loc135 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":64:27)
#loc136 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":64:31)
#loc137 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":64:9)
#loc138 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":64:32)
#loc139 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":65:23)
#loc140 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":65:14)
#loc141 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":65:18)
#loc142 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":65:9)
#loc143 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":68:17)
#loc144 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":68:23)
#loc145 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":68:29)
#loc146 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":68:36)
#loc147 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":68:42)
#loc148 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":68:53)
#loc149 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":68:9)
#loc150 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":68:54)
#loc151 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":69:23)
#loc152 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":69:14)
#loc153 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":69:18)
#loc154 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":69:9)
#loc155 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":70:19)
#loc156 = loc("CWE126_Buffer_Overread__char_alloca_memmove_01.c":70:9)
#loc157 = loc(fused[#loc1, #loc2])
#loc158 = loc(fused[#loc3, #loc4])
#loc159 = loc(fused[#loc5, #loc6])
#loc160 = loc(fused[#loc7, #loc8])
#loc161 = loc(fused[#loc9, #loc10])
#loc162 = loc(fused[#loc11, #loc12])
#loc163 = loc(fused[#loc13, #loc14])
#loc164 = loc(fused[#loc19, #loc20])
#loc165 = loc(fused[#loc22, #loc21])
#loc166 = loc(fused[#loc30, #loc31])
#loc167 = loc(fused[#loc33, #loc32])
#loc168 = loc(fused[#loc38, #loc37])
#loc169 = loc(fused[#loc39, #loc40])
#loc170 = loc(fused[#loc45, #loc46])
#loc171 = loc(fused[#loc50, #loc47])
#loc172 = loc(fused[#loc55, #loc56])
#loc173 = loc(fused[#loc53, #loc56])
#loc174 = loc(fused[#loc57, #loc58])
#loc175 = loc(fused[#loc62, #loc59])
#loc176 = loc(fused[#loc65, #loc66])
#loc177 = loc(fused[#loc67, #loc68])
#loc178 = loc(fused[#loc69, #loc70])
#loc179 = loc(fused[#loc71, #loc72])
#loc180 = loc(fused[#loc77, #loc78])
#loc183 = loc(fused[#loc88, #loc89])
#loc184 = loc(fused[#loc92, #loc93])
#loc185 = loc(fused[#loc96, #loc95])
#loc186 = loc(fused[#loc97, #loc98])
#loc187 = loc(fused[#loc99, #loc100])
#loc188 = loc(fused[#loc101, #loc102])
#loc189 = loc(fused[#loc103, #loc104])
#loc190 = loc(fused[#loc105, #loc106])
#loc191 = loc(fused[#loc111, #loc112])
#loc192 = loc(fused[#loc114, #loc113])
#loc193 = loc(fused[#loc122, #loc123])
#loc194 = loc(fused[#loc125, #loc124])
#loc195 = loc(fused[#loc130, #loc129])
#loc196 = loc(fused[#loc131, #loc132])
#loc197 = loc(fused[#loc137, #loc138])
#loc198 = loc(fused[#loc142, #loc139])
#loc199 = loc(fused[#loc147, #loc148])
#loc200 = loc(fused[#loc145, #loc148])
#loc201 = loc(fused[#loc149, #loc150])
#loc202 = loc(fused[#loc154, #loc151])
