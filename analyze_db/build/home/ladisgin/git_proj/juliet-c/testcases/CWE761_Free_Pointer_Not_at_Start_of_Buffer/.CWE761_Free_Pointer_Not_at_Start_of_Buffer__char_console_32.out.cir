!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc139 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":152:10)
#loc140 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":152:14)
#loc141 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":152:20)
#loc142 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":152:32)
#true = #cir.bool<true> : !cir.bool
#loc330 = loc(fused[#loc139, #loc140])
#loc331 = loc(fused[#loc141, #loc142])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE761_Free_Pointer_Not_at_Start_of_Buffer/CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc275)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc276)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc277)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc278)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc279)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc280)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc13)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"We have a match!\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc14)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc281)
  cir.func no_proto @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc283)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc284)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc285)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc284)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc285)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc25)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc26)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc26)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc286)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc287)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc25)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc288)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc289)
    cir.scope {
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
      %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc34)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc34)
      %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc291)
      cir.if %18 {
        %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc36)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc37)
        %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc38)
        cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc36)
      } loc(#loc292)
    } loc(#loc290)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc39)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc39)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %14 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc42)
    cir.store %11, %14 : !s8i, !cir.ptr<!s8i> loc(#loc293)
    cir.scope {
      %15 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc295)
      %16 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc46)
      %17 = cir.load %16 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
      cir.store %17, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc295)
      cir.scope {
        %20 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc297)
        %21 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc52)
        %22 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
        %23 = cir.call @strlen(%22) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc52)
        cir.store %23, %20 : !u64i, !cir.ptr<!u64i> loc(#loc297)
        cir.scope {
          %24 = cir.const #cir.int<100> : !s32i loc(#loc56)
          %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc56)
          %26 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc57)
          %27 = cir.binop(sub, %25, %26) : !u64i loc(#loc299)
          %28 = cir.const #cir.int<1> : !s32i loc(#loc58)
          %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc58)
          %30 = cir.cmp(gt, %27, %29) : !u64i, !cir.bool loc(#loc300)
          cir.if %30 {
            cir.scope {
              %31 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
              %32 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc63)
              %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc64)
              %34 = cir.const #cir.int<100> : !s32i loc(#loc65)
              %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc65)
              %36 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc66)
              %37 = cir.binop(sub, %35, %36) : !u64i loc(#loc303)
              %38 = cir.cast(integral, %37 : !u64i), !s32i loc(#loc303)
              %39 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc279)
              %40 = cir.load %39 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc67)
              %41 = cir.call @fgets(%33, %38, %40) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc68)
              %42 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc69)
              %43 = cir.cast(bitcast, %42 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc69)
              %44 = cir.cmp(ne, %41, %43) : !cir.ptr<!s8i>, !cir.bool loc(#loc304)
              cir.if %44 {
                %45 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc73)
                %46 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
                %47 = cir.call @strlen(%46) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc73)
                cir.store %47, %20 : !u64i, !cir.ptr<!u64i> loc(#loc306)
                cir.scope {
                  %48 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc79)
                  %49 = cir.const #cir.int<0> : !s32i loc(#loc80)
                  %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc80)
                  %51 = cir.cmp(gt, %48, %50) : !u64i, !cir.bool loc(#loc308)
                  %52 = cir.ternary(%51, true {
                    %53 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
                    %54 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc83)
                    %55 = cir.const #cir.int<1> : !s32i loc(#loc84)
                    %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc84)
                    %57 = cir.binop(sub, %54, %56) : !u64i loc(#loc309)
                    %58 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %57 : !u64i), !cir.ptr<!s8i> loc(#loc85)
                    %59 = cir.load %58 : !cir.ptr<!s8i>, !s8i loc(#loc82)
                    %60 = cir.cast(integral, %59 : !s8i), !s32i loc(#loc82)
                    %61 = cir.const #cir.int<10> : !s32i loc(#loc86)
                    %62 = cir.cmp(eq, %60, %61) : !s32i, !cir.bool loc(#loc310)
                    %63 = cir.ternary(%62, true {
                      %64 = cir.const #true loc(#loc81)
                      cir.yield %64 : !cir.bool loc(#loc81)
                    }, false {
                      %64 = cir.const #false loc(#loc81)
                      cir.yield %64 : !cir.bool loc(#loc81)
                    }) : (!cir.bool) -> !cir.bool loc(#loc81)
                    cir.yield %63 : !cir.bool loc(#loc81)
                  }, false {
                    %53 = cir.const #false loc(#loc81)
                    cir.yield %53 : !cir.bool loc(#loc81)
                  }) : (!cir.bool) -> !cir.bool loc(#loc81)
                  cir.if %52 {
                    %53 = cir.const #cir.int<0> : !s32i loc(#loc88)
                    %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc88)
                    %55 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
                    %56 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc90)
                    %57 = cir.const #cir.int<1> : !s32i loc(#loc91)
                    %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc91)
                    %59 = cir.binop(sub, %56, %58) : !u64i loc(#loc312)
                    %60 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %59 : !u64i), !cir.ptr<!s8i> loc(#loc92)
                    cir.store %54, %60 : !s8i, !cir.ptr<!s8i> loc(#loc313)
                  } loc(#loc311)
                } loc(#loc307)
              } else {
                %45 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc13)
                %46 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc13)
                cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc93)
                %47 = cir.const #cir.int<0> : !s32i loc(#loc94)
                %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc94)
                %49 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
                %50 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc96)
                %51 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %50 : !u64i), !cir.ptr<!s8i> loc(#loc97)
                cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc314)
              } loc(#loc305)
            } loc(#loc302)
          } loc(#loc301)
        } loc(#loc298)
      } loc(#loc296)
      %18 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
      %19 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc99)
      cir.store %18, %19 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc315)
    } loc(#loc294)
    cir.scope {
      %15 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc317)
      %16 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc104)
      %17 = cir.load %16 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
      cir.store %17, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc317)
      cir.scope {
        cir.for : cond {
          %21 = cir.load deref %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
          %22 = cir.load %21 : !cir.ptr<!s8i>, !s8i loc(#loc109)
          %23 = cir.cast(integral, %22 : !s8i), !s32i loc(#loc109)
          %24 = cir.const #cir.int<0> : !s32i loc(#loc110)
          %25 = cir.cmp(ne, %23, %24) : !s32i, !cir.bool loc(#loc319)
          cir.condition(%25) loc(#loc111)
        } body {
          cir.scope {
            cir.scope {
              %21 = cir.load deref %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
              %22 = cir.load %21 : !cir.ptr<!s8i>, !s8i loc(#loc116)
              %23 = cir.cast(integral, %22 : !s8i), !s32i loc(#loc116)
              %24 = cir.const #cir.int<83> : !s32i loc(#loc117)
              %25 = cir.cmp(eq, %23, %24) : !s32i, !cir.bool loc(#loc322)
              cir.if %25 {
                %26 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc14)
                %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc14)
                cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc119)
                cir.break loc(#loc120)
              } loc(#loc323)
            } loc(#loc321)
          } loc(#loc320)
          cir.yield loc(#loc107)
        } step {
          %21 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc324)
          %23 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc324)
          cir.store %23, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc324)
          cir.yield loc(#loc318)
        } loc(#loc318)
      } loc(#loc318)
      %18 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc123)
      %19 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc124)
      cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc123)
    } loc(#loc316)
    cir.return loc(#loc18)
  } loc(#loc282)
  cir.func no_proto @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc326)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc127)
    cir.return loc(#loc126)
  } loc(#loc325)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc327)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc328)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc133)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc134)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc135)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc136)
  cir.func @main(%arg0: !s32i loc(fused[#loc139, #loc140]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc141, #loc142])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc330)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc331)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc138)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc143)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc143)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc144)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc145)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc145)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc146)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc133)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc133)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc147)
    %8 = cir.get_global @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32_good : !cir.ptr<!cir.func<!void ()>> loc(#loc332)
    cir.call @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32_good() : () -> () loc(#loc148)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc134)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc134)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc150)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc135)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc135)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc151)
    %13 = cir.get_global @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc333)
    cir.call @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32_bad() : () -> () loc(#loc152)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc136)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc136)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc154)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc155)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc334)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc334)
    cir.return %17 : !s32i loc(#loc334)
  } loc(#loc329)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc336)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc337)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc338)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc337)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc338)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc165)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc166)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc166)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc339)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc340)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc165)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc341)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc342)
    cir.scope {
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc173)
      %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc174)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc174)
      %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc344)
      cir.if %18 {
        %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc176)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc177)
        %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc178)
        cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc176)
      } loc(#loc345)
    } loc(#loc343)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc179)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc179)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc180)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc181)
    %14 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc182)
    cir.store %11, %14 : !s8i, !cir.ptr<!s8i> loc(#loc346)
    cir.scope {
      %15 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc348)
      %16 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc186)
      %17 = cir.load %16 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc187)
      cir.store %17, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc348)
      cir.scope {
        %20 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc350)
        %21 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc192)
        %22 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc193)
        %23 = cir.call @strlen(%22) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc192)
        cir.store %23, %20 : !u64i, !cir.ptr<!u64i> loc(#loc350)
        cir.scope {
          %24 = cir.const #cir.int<100> : !s32i loc(#loc196)
          %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc196)
          %26 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc197)
          %27 = cir.binop(sub, %25, %26) : !u64i loc(#loc352)
          %28 = cir.const #cir.int<1> : !s32i loc(#loc198)
          %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc198)
          %30 = cir.cmp(gt, %27, %29) : !u64i, !cir.bool loc(#loc353)
          cir.if %30 {
            cir.scope {
              %31 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc202)
              %32 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc203)
              %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc204)
              %34 = cir.const #cir.int<100> : !s32i loc(#loc205)
              %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc205)
              %36 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc206)
              %37 = cir.binop(sub, %35, %36) : !u64i loc(#loc356)
              %38 = cir.cast(integral, %37 : !u64i), !s32i loc(#loc356)
              %39 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc279)
              %40 = cir.load %39 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc207)
              %41 = cir.call @fgets(%33, %38, %40) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc208)
              %42 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc209)
              %43 = cir.cast(bitcast, %42 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc209)
              %44 = cir.cmp(ne, %41, %43) : !cir.ptr<!s8i>, !cir.bool loc(#loc357)
              cir.if %44 {
                %45 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc213)
                %46 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc214)
                %47 = cir.call @strlen(%46) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc213)
                cir.store %47, %20 : !u64i, !cir.ptr<!u64i> loc(#loc359)
                cir.scope {
                  %48 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc219)
                  %49 = cir.const #cir.int<0> : !s32i loc(#loc220)
                  %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc220)
                  %51 = cir.cmp(gt, %48, %50) : !u64i, !cir.bool loc(#loc361)
                  %52 = cir.ternary(%51, true {
                    %53 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc222)
                    %54 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc223)
                    %55 = cir.const #cir.int<1> : !s32i loc(#loc224)
                    %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc224)
                    %57 = cir.binop(sub, %54, %56) : !u64i loc(#loc362)
                    %58 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %57 : !u64i), !cir.ptr<!s8i> loc(#loc225)
                    %59 = cir.load %58 : !cir.ptr<!s8i>, !s8i loc(#loc222)
                    %60 = cir.cast(integral, %59 : !s8i), !s32i loc(#loc222)
                    %61 = cir.const #cir.int<10> : !s32i loc(#loc226)
                    %62 = cir.cmp(eq, %60, %61) : !s32i, !cir.bool loc(#loc363)
                    %63 = cir.ternary(%62, true {
                      %64 = cir.const #true loc(#loc221)
                      cir.yield %64 : !cir.bool loc(#loc221)
                    }, false {
                      %64 = cir.const #false loc(#loc221)
                      cir.yield %64 : !cir.bool loc(#loc221)
                    }) : (!cir.bool) -> !cir.bool loc(#loc221)
                    cir.yield %63 : !cir.bool loc(#loc221)
                  }, false {
                    %53 = cir.const #false loc(#loc221)
                    cir.yield %53 : !cir.bool loc(#loc221)
                  }) : (!cir.bool) -> !cir.bool loc(#loc221)
                  cir.if %52 {
                    %53 = cir.const #cir.int<0> : !s32i loc(#loc228)
                    %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc228)
                    %55 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc229)
                    %56 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc230)
                    %57 = cir.const #cir.int<1> : !s32i loc(#loc231)
                    %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc231)
                    %59 = cir.binop(sub, %56, %58) : !u64i loc(#loc365)
                    %60 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %59 : !u64i), !cir.ptr<!s8i> loc(#loc232)
                    cir.store %54, %60 : !s8i, !cir.ptr<!s8i> loc(#loc366)
                  } loc(#loc364)
                } loc(#loc360)
              } else {
                %45 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc233)
                %46 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc233)
                cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc234)
                %47 = cir.const #cir.int<0> : !s32i loc(#loc235)
                %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc235)
                %49 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc236)
                %50 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc237)
                %51 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %50 : !u64i), !cir.ptr<!s8i> loc(#loc238)
                cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc367)
              } loc(#loc358)
            } loc(#loc355)
          } loc(#loc354)
        } loc(#loc351)
      } loc(#loc349)
      %18 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc239)
      %19 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc240)
      cir.store %18, %19 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc368)
    } loc(#loc347)
    cir.scope {
      %15 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc370)
      %16 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc245)
      %17 = cir.load %16 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc246)
      cir.store %17, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc370)
      cir.scope {
        %18 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc372)
        cir.scope {
          %22 = cir.const #cir.int<0> : !s32i loc(#loc253)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc253)
          cir.store %23, %18 : !u64i, !cir.ptr<!u64i> loc(#loc374)
          cir.for : cond {
            %24 = cir.load %18 : !cir.ptr<!u64i>, !u64i loc(#loc255)
            %25 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc256)
            %26 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc257)
            %27 = cir.call @strlen(%26) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc256)
            %28 = cir.cmp(lt, %24, %27) : !u64i, !cir.bool loc(#loc375)
            cir.condition(%28) loc(#loc259)
          } body {
            cir.scope {
              cir.scope {
                %24 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc263)
                %25 = cir.load %18 : !cir.ptr<!u64i>, !u64i loc(#loc264)
                %26 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %25 : !u64i), !cir.ptr<!s8i> loc(#loc265)
                %27 = cir.load %26 : !cir.ptr<!s8i>, !s8i loc(#loc263)
                %28 = cir.cast(integral, %27 : !s8i), !s32i loc(#loc263)
                %29 = cir.const #cir.int<83> : !s32i loc(#loc266)
                %30 = cir.cmp(eq, %28, %29) : !s32i, !cir.bool loc(#loc378)
                cir.if %30 {
                  %31 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc268)
                  %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc268)
                  cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc269)
                  cir.break loc(#loc270)
                } loc(#loc379)
              } loc(#loc377)
            } loc(#loc376)
            cir.yield loc(#loc252)
          } step {
            %24 = cir.load %18 : !cir.ptr<!u64i>, !u64i loc(#loc271)
            %25 = cir.unary(inc, %24) : !u64i, !u64i loc(#loc272)
            cir.store %25, %18 : !u64i, !cir.ptr<!u64i> loc(#loc380)
            cir.yield loc(#loc373)
          } loc(#loc373)
        } loc(#loc373)
        %19 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc273)
        %20 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc274)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc274)
        cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc273)
      } loc(#loc371)
    } loc(#loc369)
    cir.return loc(#loc158)
  } loc(#loc335)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE761_Free_Pointer_Not_at_Start_of_Buffer/CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("/usr/include/stdio.h":149:1)
#loc10 = loc("/usr/include/stdio.h":149:14)
#loc11 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":54:31)
#loc14 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":70:27)
#loc15 = loc("/usr/include/stdlib.h":687:1)
#loc16 = loc("/usr/include/stdlib.h":687:32)
#loc17 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":25:1)
#loc18 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":76:1)
#loc19 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":27:5)
#loc20 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":27:12)
#loc21 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":28:5)
#loc22 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":28:25)
#loc23 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":29:5)
#loc24 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":29:25)
#loc25 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":30:20)
#loc26 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":30:27)
#loc27 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":30:31)
#loc28 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":30:42)
#loc29 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":30:43)
#loc30 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":30:5)
#loc31 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":31:5)
#loc32 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":31:33)
#loc33 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":31:9)
#loc34 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":31:17)
#loc35 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":31:23)
#loc36 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":31:24)
#loc37 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":31:30)
#loc38 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":31:29)
#loc39 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":32:15)
#loc40 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":32:5)
#loc41 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":32:10)
#loc42 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":32:11)
#loc43 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":33:5)
#loc44 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":61:5)
#loc45 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":34:9)
#loc46 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":34:24)
#loc47 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":34:23)
#loc48 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":35:9)
#loc49 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":59:9)
#loc50 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":37:13)
#loc51 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":37:41)
#loc52 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":37:30)
#loc53 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":37:37)
#loc54 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":39:13)
#loc55 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":58:13)
#loc56 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":39:17)
#loc57 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":39:21)
#loc58 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":39:31)
#loc59 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":40:13)
#loc60 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":42:17)
#loc61 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":57:17)
#loc62 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":42:27)
#loc63 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":42:32)
#loc64 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":42:31)
#loc65 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":42:47)
#loc66 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":42:51)
#loc67 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":42:61)
#loc68 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":42:21)
#loc69 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":42:71)
#loc70 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":43:17)
#loc71 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":51:17)
#loc72 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":53:17)
#loc73 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":46:31)
#loc74 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":46:38)
#loc75 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":46:21)
#loc76 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":46:42)
#loc77 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":47:21)
#loc78 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":50:21)
#loc79 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":47:25)
#loc80 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":47:35)
#loc81 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":47:37)
#loc82 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":47:40)
#loc83 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":47:45)
#loc84 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":47:53)
#loc85 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":47:54)
#loc86 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":47:59)
#loc87 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":48:21)
#loc88 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":49:43)
#loc89 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":49:25)
#loc90 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":49:30)
#loc91 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":49:38)
#loc92 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":49:39)
#loc93 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":54:21)
#loc94 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":56:37)
#loc95 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":56:21)
#loc96 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":56:26)
#loc97 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":56:33)
#loc98 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":60:21)
#loc99 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":60:10)
#loc100 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":60:9)
#loc101 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":62:5)
#loc102 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":75:5)
#loc103 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":63:9)
#loc104 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":63:24)
#loc105 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":63:23)
#loc106 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":66:9)
#loc107 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":73:9)
#loc108 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":66:17)
#loc109 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":66:16)
#loc110 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":66:25)
#loc111 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":66:22)
#loc112 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":67:9)
#loc113 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":68:13)
#loc114 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":72:13)
#loc115 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":68:18)
#loc116 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":68:17)
#loc117 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":68:26)
#loc118 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":69:13)
#loc119 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":70:17)
#loc120 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":71:17)
#loc121 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":66:35)
#loc122 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":66:31)
#loc123 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":74:9)
#loc124 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":74:14)
#loc125 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":138:1)
#loc126 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":141:1)
#loc127 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":140:5)
#loc128 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":140:13)
#loc129 = loc("/usr/include/stdlib.h":575:1)
#loc130 = loc("/usr/include/stdlib.h":575:41)
#loc131 = loc("/usr/include/time.h":76:1)
#loc132 = loc("/usr/include/time.h":76:38)
#loc133 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":157:15)
#loc134 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":159:15)
#loc135 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":162:15)
#loc136 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":164:15)
#loc137 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":152:1)
#loc138 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":167:1)
#loc143 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":153:1)
#loc144 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":155:27)
#loc145 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":155:22)
#loc146 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":155:5)
#loc147 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":157:5)
#loc148 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":158:5)
#loc149 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":158:70)
#loc150 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":159:5)
#loc151 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":162:5)
#loc152 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":163:5)
#loc153 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":163:69)
#loc154 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":164:5)
#loc155 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":166:12)
#loc156 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":166:5)
#loc157 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":83:1)
#loc158 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":136:1)
#loc159 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":85:5)
#loc160 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":85:12)
#loc161 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":86:5)
#loc162 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":86:25)
#loc163 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":87:5)
#loc164 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":87:25)
#loc165 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":88:20)
#loc166 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":88:27)
#loc167 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":88:31)
#loc168 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":88:42)
#loc169 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":88:43)
#loc170 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":88:5)
#loc171 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":89:5)
#loc172 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":89:33)
#loc173 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":89:9)
#loc174 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":89:17)
#loc175 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":89:23)
#loc176 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":89:24)
#loc177 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":89:30)
#loc178 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":89:29)
#loc179 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":90:15)
#loc180 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":90:5)
#loc181 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":90:10)
#loc182 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":90:11)
#loc183 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":91:5)
#loc184 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":119:5)
#loc185 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":92:9)
#loc186 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":92:24)
#loc187 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":92:23)
#loc188 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":93:9)
#loc189 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":117:9)
#loc190 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":95:13)
#loc191 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":95:41)
#loc192 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":95:30)
#loc193 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":95:37)
#loc194 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":97:13)
#loc195 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":116:13)
#loc196 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":97:17)
#loc197 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":97:21)
#loc198 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":97:31)
#loc199 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":98:13)
#loc200 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":100:17)
#loc201 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":115:17)
#loc202 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":100:27)
#loc203 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":100:32)
#loc204 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":100:31)
#loc205 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":100:47)
#loc206 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":100:51)
#loc207 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":100:61)
#loc208 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":100:21)
#loc209 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":100:71)
#loc210 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":101:17)
#loc211 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":109:17)
#loc212 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":111:17)
#loc213 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":104:31)
#loc214 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":104:38)
#loc215 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":104:21)
#loc216 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":104:42)
#loc217 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":105:21)
#loc218 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":108:21)
#loc219 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":105:25)
#loc220 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":105:35)
#loc221 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":105:37)
#loc222 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":105:40)
#loc223 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":105:45)
#loc224 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":105:53)
#loc225 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":105:54)
#loc226 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":105:59)
#loc227 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":106:21)
#loc228 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":107:43)
#loc229 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":107:25)
#loc230 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":107:30)
#loc231 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":107:38)
#loc232 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":107:39)
#loc233 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":112:31)
#loc234 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":112:21)
#loc235 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":114:37)
#loc236 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":114:21)
#loc237 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":114:26)
#loc238 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":114:33)
#loc239 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":118:21)
#loc240 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":118:10)
#loc241 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":118:9)
#loc242 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":120:5)
#loc243 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":135:5)
#loc244 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":121:9)
#loc245 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":121:24)
#loc246 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":121:23)
#loc247 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":122:9)
#loc248 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":134:9)
#loc249 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":123:13)
#loc250 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":123:20)
#loc251 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":125:13)
#loc252 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":132:13)
#loc253 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":125:20)
#loc254 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":125:18)
#loc255 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":125:23)
#loc256 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":125:27)
#loc257 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":125:34)
#loc258 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":125:38)
#loc259 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":125:25)
#loc260 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":126:13)
#loc261 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":127:17)
#loc262 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":131:17)
#loc263 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":127:21)
#loc264 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":127:26)
#loc265 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":127:27)
#loc266 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":127:32)
#loc267 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":128:17)
#loc268 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":129:31)
#loc269 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":129:21)
#loc270 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":130:21)
#loc271 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":125:42)
#loc272 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":125:41)
#loc273 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":133:13)
#loc274 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_32.c":133:18)
#loc275 = loc(fused[#loc1, #loc2])
#loc276 = loc(fused[#loc3, #loc4])
#loc277 = loc(fused[#loc5, #loc6])
#loc278 = loc(fused[#loc7, #loc8])
#loc279 = loc(fused[#loc9, #loc10])
#loc280 = loc(fused[#loc11, #loc12])
#loc281 = loc(fused[#loc15, #loc16])
#loc282 = loc(fused[#loc17, #loc18])
#loc283 = loc(fused[#loc19, #loc20])
#loc284 = loc(fused[#loc21, #loc22])
#loc285 = loc(fused[#loc23, #loc24])
#loc286 = loc(fused[#loc27, #loc28])
#loc287 = loc(fused[#loc26, #loc28])
#loc288 = loc(fused[#loc25, #loc29])
#loc289 = loc(fused[#loc30, #loc29])
#loc290 = loc(fused[#loc31, #loc32])
#loc291 = loc(fused[#loc33, #loc34])
#loc292 = loc(fused[#loc35, #loc32])
#loc293 = loc(fused[#loc40, #loc39])
#loc294 = loc(fused[#loc43, #loc44])
#loc295 = loc(fused[#loc45, #loc46])
#loc296 = loc(fused[#loc48, #loc49])
#loc297 = loc(fused[#loc50, #loc51])
#loc298 = loc(fused[#loc54, #loc55])
#loc299 = loc(fused[#loc56, #loc57])
#loc300 = loc(fused[#loc56, #loc58])
#loc301 = loc(fused[#loc59, #loc55])
#loc302 = loc(fused[#loc60, #loc61])
#loc303 = loc(fused[#loc65, #loc66])
#loc304 = loc(fused[#loc68, #loc69])
#loc305 = loc(fused[#loc70, #loc71, #loc72, #loc61])
#loc306 = loc(fused[#loc75, #loc76])
#loc307 = loc(fused[#loc77, #loc78])
#loc308 = loc(fused[#loc79, #loc80])
#loc309 = loc(fused[#loc83, #loc84])
#loc310 = loc(fused[#loc82, #loc86])
#loc311 = loc(fused[#loc87, #loc78])
#loc312 = loc(fused[#loc90, #loc91])
#loc313 = loc(fused[#loc89, #loc88])
#loc314 = loc(fused[#loc95, #loc94])
#loc315 = loc(fused[#loc100, #loc98])
#loc316 = loc(fused[#loc101, #loc102])
#loc317 = loc(fused[#loc103, #loc104])
#loc318 = loc(fused[#loc106, #loc107])
#loc319 = loc(fused[#loc109, #loc110])
#loc320 = loc(fused[#loc112, #loc107])
#loc321 = loc(fused[#loc113, #loc114])
#loc322 = loc(fused[#loc116, #loc117])
#loc323 = loc(fused[#loc118, #loc114])
#loc324 = loc(fused[#loc122, #loc121])
#loc325 = loc(fused[#loc125, #loc126])
#loc326 = loc(fused[#loc127, #loc128])
#loc327 = loc(fused[#loc129, #loc130])
#loc328 = loc(fused[#loc131, #loc132])
#loc329 = loc(fused[#loc137, #loc138])
#loc332 = loc(fused[#loc148, #loc149])
#loc333 = loc(fused[#loc152, #loc153])
#loc334 = loc(fused[#loc156, #loc155])
#loc335 = loc(fused[#loc157, #loc158])
#loc336 = loc(fused[#loc159, #loc160])
#loc337 = loc(fused[#loc161, #loc162])
#loc338 = loc(fused[#loc163, #loc164])
#loc339 = loc(fused[#loc167, #loc168])
#loc340 = loc(fused[#loc166, #loc168])
#loc341 = loc(fused[#loc165, #loc169])
#loc342 = loc(fused[#loc170, #loc169])
#loc343 = loc(fused[#loc171, #loc172])
#loc344 = loc(fused[#loc173, #loc174])
#loc345 = loc(fused[#loc175, #loc172])
#loc346 = loc(fused[#loc180, #loc179])
#loc347 = loc(fused[#loc183, #loc184])
#loc348 = loc(fused[#loc185, #loc186])
#loc349 = loc(fused[#loc188, #loc189])
#loc350 = loc(fused[#loc190, #loc191])
#loc351 = loc(fused[#loc194, #loc195])
#loc352 = loc(fused[#loc196, #loc197])
#loc353 = loc(fused[#loc196, #loc198])
#loc354 = loc(fused[#loc199, #loc195])
#loc355 = loc(fused[#loc200, #loc201])
#loc356 = loc(fused[#loc205, #loc206])
#loc357 = loc(fused[#loc208, #loc209])
#loc358 = loc(fused[#loc210, #loc211, #loc212, #loc201])
#loc359 = loc(fused[#loc215, #loc216])
#loc360 = loc(fused[#loc217, #loc218])
#loc361 = loc(fused[#loc219, #loc220])
#loc362 = loc(fused[#loc223, #loc224])
#loc363 = loc(fused[#loc222, #loc226])
#loc364 = loc(fused[#loc227, #loc218])
#loc365 = loc(fused[#loc230, #loc231])
#loc366 = loc(fused[#loc229, #loc228])
#loc367 = loc(fused[#loc236, #loc235])
#loc368 = loc(fused[#loc241, #loc239])
#loc369 = loc(fused[#loc242, #loc243])
#loc370 = loc(fused[#loc244, #loc245])
#loc371 = loc(fused[#loc247, #loc248])
#loc372 = loc(fused[#loc249, #loc250])
#loc373 = loc(fused[#loc251, #loc252])
#loc374 = loc(fused[#loc254, #loc253])
#loc375 = loc(fused[#loc255, #loc258])
#loc376 = loc(fused[#loc260, #loc252])
#loc377 = loc(fused[#loc261, #loc262])
#loc378 = loc(fused[#loc263, #loc266])
#loc379 = loc(fused[#loc267, #loc262])
#loc380 = loc(fused[#loc272, #loc271])
