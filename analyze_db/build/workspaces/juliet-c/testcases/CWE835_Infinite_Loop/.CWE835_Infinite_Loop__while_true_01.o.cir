!s32i = !cir.int<s, 32>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE835_Infinite_Loop/CWE835_Infinite_Loop__while_true_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @printIntLine(!s32i) loc(#loc37)
  cir.func no_proto @CWE835_Infinite_Loop__while_true_01_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i", init] {alignment = 4 : i64} loc(#loc39)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc6)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc39)
    cir.br ^bb1 loc(#loc40)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc40)
  ^bb2:  // 2 preds: ^bb1, ^bb5
    %2 = cir.const #cir.int<1> : !s32i loc(#loc9)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc9)
    cir.brcond %3 ^bb3, ^bb6 loc(#loc9)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc41)
  ^bb4:  // pred: ^bb3
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc11)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc12)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc13)
    %6 = cir.unary(inc, %5) nsw : !s32i, !s32i loc(#loc14)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc42)
    cir.br ^bb5 loc(#loc8)
  ^bb5:  // pred: ^bb4
    cir.br ^bb2 loc(#loc8)
  ^bb6:  // pred: ^bb2
    cir.br ^bb7 loc(#loc8)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc4)
  } loc(#loc38)
  cir.func no_proto @CWE835_Infinite_Loop__while_true_01_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc44)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc17)
    cir.return loc(#loc16)
  } loc(#loc43)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i", init] {alignment = 4 : i64} loc(#loc46)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc22)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc46)
    cir.br ^bb1 loc(#loc47)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc47)
  ^bb2:  // 2 preds: ^bb1, ^bb9
    %2 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc25)
    cir.brcond %3 ^bb3, ^bb10 loc(#loc25)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc48)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc49)
  ^bb5:  // pred: ^bb4
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    %5 = cir.const #cir.int<10> : !s32i loc(#loc30)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc50)
    cir.brcond %6 ^bb6, ^bb7 loc(#loc51)
  ^bb6:  // pred: ^bb5
    cir.br ^bb10 loc(#loc32)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc28)
  ^bb8:  // pred: ^bb7
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc33)
    cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc34)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc35)
    %9 = cir.unary(inc, %8) nsw : !s32i, !s32i loc(#loc36)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc52)
    cir.br ^bb9 loc(#loc24)
  ^bb9:  // pred: ^bb8
    cir.br ^bb2 loc(#loc24)
  ^bb10:  // 2 preds: ^bb2, ^bb6
    cir.br ^bb11 loc(#loc24)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc20)
  } loc(#loc45)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE835_Infinite_Loop/CWE835_Infinite_Loop__while_true_01.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE835_Infinite_Loop__while_true_01.c":10:1)
#loc4 = loc("CWE835_Infinite_Loop__while_true_01.c":20:1)
#loc5 = loc("CWE835_Infinite_Loop__while_true_01.c":12:5)
#loc6 = loc("CWE835_Infinite_Loop__while_true_01.c":12:13)
#loc7 = loc("CWE835_Infinite_Loop__while_true_01.c":15:5)
#loc8 = loc("CWE835_Infinite_Loop__while_true_01.c":19:5)
#loc9 = loc("CWE835_Infinite_Loop__while_true_01.c":15:11)
#loc10 = loc("CWE835_Infinite_Loop__while_true_01.c":16:5)
#loc11 = loc("CWE835_Infinite_Loop__while_true_01.c":17:22)
#loc12 = loc("CWE835_Infinite_Loop__while_true_01.c":17:9)
#loc13 = loc("CWE835_Infinite_Loop__while_true_01.c":18:10)
#loc14 = loc("CWE835_Infinite_Loop__while_true_01.c":18:9)
#loc15 = loc("CWE835_Infinite_Loop__while_true_01.c":42:1)
#loc16 = loc("CWE835_Infinite_Loop__while_true_01.c":45:1)
#loc17 = loc("CWE835_Infinite_Loop__while_true_01.c":44:5)
#loc18 = loc("CWE835_Infinite_Loop__while_true_01.c":44:11)
#loc19 = loc("CWE835_Infinite_Loop__while_true_01.c":26:1)
#loc20 = loc("CWE835_Infinite_Loop__while_true_01.c":40:1)
#loc21 = loc("CWE835_Infinite_Loop__while_true_01.c":28:5)
#loc22 = loc("CWE835_Infinite_Loop__while_true_01.c":28:13)
#loc23 = loc("CWE835_Infinite_Loop__while_true_01.c":30:5)
#loc24 = loc("CWE835_Infinite_Loop__while_true_01.c":39:5)
#loc25 = loc("CWE835_Infinite_Loop__while_true_01.c":30:11)
#loc26 = loc("CWE835_Infinite_Loop__while_true_01.c":31:5)
#loc27 = loc("CWE835_Infinite_Loop__while_true_01.c":33:9)
#loc28 = loc("CWE835_Infinite_Loop__while_true_01.c":36:9)
#loc29 = loc("CWE835_Infinite_Loop__while_true_01.c":33:13)
#loc30 = loc("CWE835_Infinite_Loop__while_true_01.c":33:18)
#loc31 = loc("CWE835_Infinite_Loop__while_true_01.c":34:9)
#loc32 = loc("CWE835_Infinite_Loop__while_true_01.c":35:13)
#loc33 = loc("CWE835_Infinite_Loop__while_true_01.c":37:22)
#loc34 = loc("CWE835_Infinite_Loop__while_true_01.c":37:9)
#loc35 = loc("CWE835_Infinite_Loop__while_true_01.c":38:10)
#loc36 = loc("CWE835_Infinite_Loop__while_true_01.c":38:9)
#loc37 = loc(fused[#loc1, #loc2])
#loc38 = loc(fused[#loc3, #loc4])
#loc39 = loc(fused[#loc5, #loc6])
#loc40 = loc(fused[#loc7, #loc8])
#loc41 = loc(fused[#loc10, #loc8])
#loc42 = loc(fused[#loc14, #loc13])
#loc43 = loc(fused[#loc15, #loc16])
#loc44 = loc(fused[#loc17, #loc18])
#loc45 = loc(fused[#loc19, #loc20])
#loc46 = loc(fused[#loc21, #loc22])
#loc47 = loc(fused[#loc23, #loc24])
#loc48 = loc(fused[#loc26, #loc24])
#loc49 = loc(fused[#loc27, #loc28])
#loc50 = loc(fused[#loc29, #loc30])
#loc51 = loc(fused[#loc31, #loc28])
#loc52 = loc(fused[#loc36, #loc35])
