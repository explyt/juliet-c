!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_82_bad.cpp":25:57)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_82_bad.cpp":25:64)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_82_bad.cpp":25:71)
#loc32 = loc(fused[#loc10, #loc11])
!ty_anon_struct = !cir.struct<struct  {!cir.ptr<!u8i>, !cir.ptr<!u8i>}>
!ty_anon_struct1 = !cir.struct<struct  {!cir.ptr<!u8i>, !cir.ptr<!u8i>, !cir.ptr<!u8i>}>
!ty_anon_struct2 = !cir.struct<struct  {!cir.array<!cir.ptr<!u8i> x 3>}>
!ty_CWE121_Stack_Based_Buffer_Overflow__CWE135_823A3ACWE121_Stack_Based_Buffer_Overflow__CWE135_82_base = !cir.struct<class "CWE121_Stack_Based_Buffer_Overflow__CWE135_82::CWE121_Stack_Based_Buffer_Overflow__CWE135_82_base" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>} #cir.record.decl.ast>
!ty_CWE121_Stack_Based_Buffer_Overflow__CWE135_823A3ACWE121_Stack_Based_Buffer_Overflow__CWE135_82_bad = !cir.struct<class "CWE121_Stack_Based_Buffer_Overflow__CWE135_82::CWE121_Stack_Based_Buffer_Overflow__CWE135_82_bad" {!ty_CWE121_Stack_Based_Buffer_Overflow__CWE135_823A3ACWE121_Stack_Based_Buffer_Overflow__CWE135_82_base} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE135_82_bad.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc28)
  cir.func private @wcscpy(!cir.ptr<!s32i>, !cir.ptr<!s32i>) -> !cir.ptr<!s32i> extra(#fn_attr) loc(#loc29)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc30)
  cir.func @_ZN45CWE121_Stack_Based_Buffer_Overflow__CWE135_8249CWE121_Stack_Based_Buffer_Overflow__CWE135_82_bad6actionEPv(%arg0: !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE135_823A3ACWE121_Stack_Based_Buffer_Overflow__CWE135_82_bad> loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_82_bad.cpp":25:57), %arg1: !cir.ptr<!void> loc(fused[#loc10, #loc11])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc33)
    %1 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dest", init] {alignment = 8 : i64} loc(#loc34)
    %2 = cir.alloca !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE135_823A3ACWE121_Stack_Based_Buffer_Overflow__CWE135_82_bad>, !cir.ptr<!cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE135_823A3ACWE121_Stack_Based_Buffer_Overflow__CWE135_82_bad>>, ["this", init] {alignment = 8 : i64} loc(#loc9)
    %3 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data", init] {alignment = 8 : i64} loc(#loc32)
    cir.store %arg0, %2 : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE135_823A3ACWE121_Stack_Based_Buffer_Overflow__CWE135_82_bad>, !cir.ptr<!cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE135_823A3ACWE121_Stack_Based_Buffer_Overflow__CWE135_82_bad>> loc(#loc16)
    cir.store %arg1, %3 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc16)
    %4 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE135_823A3ACWE121_Stack_Based_Buffer_Overflow__CWE135_82_bad>>, !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE135_823A3ACWE121_Stack_Based_Buffer_Overflow__CWE135_82_bad> loc(#loc9)
    cir.br ^bb1 loc(#loc35)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc19)
    %6 = cir.load %3 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc20)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc20)
    %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc19)
    cir.store %8, %0 : !u64i, !cir.ptr<!u64i> loc(#loc33)
    %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc15)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc15)
    %12 = cir.binop(add, %9, %11) : !u64i loc(#loc15)
    %13 = cir.const #cir.int<4> : !u64i loc(#loc15)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc15)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc15)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc15)
    cir.store %16, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc34)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc21)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc21)
    %19 = cir.load %3 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc22)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc22)
    %21 = cir.call @wcscpy(%18, %20) : (!cir.ptr<!s32i>, !cir.ptr<!s32i>) -> !cir.ptr<!s32i> extra(#fn_attr) loc(#loc23)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc24)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc24)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc25)
    cir.br ^bb2 loc(#loc18)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc8)
  } loc(#loc31)
  cir.global external dsolocal @_ZTVN45CWE121_Stack_Based_Buffer_Overflow__CWE135_8249CWE121_Stack_Based_Buffer_Overflow__CWE135_82_badE = #cir.vtable<{#cir.const_array<[#cir.ptr<null> : !cir.ptr<!u8i>, #cir.global_view<@_ZTIN45CWE121_Stack_Based_Buffer_Overflow__CWE135_8249CWE121_Stack_Based_Buffer_Overflow__CWE135_82_badE> : !cir.ptr<!u8i>, #cir.global_view<@_ZN45CWE121_Stack_Based_Buffer_Overflow__CWE135_8249CWE121_Stack_Based_Buffer_Overflow__CWE135_82_bad6actionEPv> : !cir.ptr<!u8i>]> : !cir.array<!cir.ptr<!u8i> x 3>}> : !ty_anon_struct2 {alignment = 8 : i64} loc(#loc36)
  cir.global "private" external @_ZTVN10__cxxabiv120__si_class_type_infoE : !cir.ptr<!cir.ptr<!u8i>> loc(#loc26)
  cir.global external @_ZTSN45CWE121_Stack_Based_Buffer_Overflow__CWE135_8249CWE121_Stack_Based_Buffer_Overflow__CWE135_82_badE = #cir.const_array<"N45CWE121_Stack_Based_Buffer_Overflow__CWE135_8249CWE121_Stack_Based_Buffer_Overflow__CWE135_82_badE" : !cir.array<!s8i x 100>> : !cir.array<!s8i x 100> {alignment = 1 : i64} loc(#loc26)
  cir.global "private" external @_ZTVN10__cxxabiv117__class_type_infoE : !cir.ptr<!cir.ptr<!u8i>> loc(#loc26)
  cir.global linkonce_odr comdat @_ZTSN45CWE121_Stack_Based_Buffer_Overflow__CWE135_8250CWE121_Stack_Based_Buffer_Overflow__CWE135_82_baseE = #cir.const_array<"N45CWE121_Stack_Based_Buffer_Overflow__CWE135_8250CWE121_Stack_Based_Buffer_Overflow__CWE135_82_baseE" : !cir.array<!s8i x 101>> : !cir.array<!s8i x 101> {alignment = 1 : i64} loc(#loc26)
  cir.global constant external @_ZTIN45CWE121_Stack_Based_Buffer_Overflow__CWE135_8250CWE121_Stack_Based_Buffer_Overflow__CWE135_82_baseE = #cir.typeinfo<{#cir.global_view<@_ZTVN10__cxxabiv117__class_type_infoE, [2 : i32]> : !cir.ptr<!u8i>, #cir.global_view<@_ZTSN45CWE121_Stack_Based_Buffer_Overflow__CWE135_8250CWE121_Stack_Based_Buffer_Overflow__CWE135_82_baseE> : !cir.ptr<!u8i>}> : !ty_anon_struct {alignment = 8 : i64} loc(#loc26)
  cir.global constant external @_ZTIN45CWE121_Stack_Based_Buffer_Overflow__CWE135_8249CWE121_Stack_Based_Buffer_Overflow__CWE135_82_badE = #cir.typeinfo<{#cir.global_view<@_ZTVN10__cxxabiv120__si_class_type_infoE, [2 : i32]> : !cir.ptr<!u8i>, #cir.global_view<@_ZTSN45CWE121_Stack_Based_Buffer_Overflow__CWE135_8249CWE121_Stack_Based_Buffer_Overflow__CWE135_82_badE> : !cir.ptr<!u8i>, #cir.global_view<@_ZTIN45CWE121_Stack_Based_Buffer_Overflow__CWE135_8250CWE121_Stack_Based_Buffer_Overflow__CWE135_82_baseE> : !cir.ptr<!u8i>}> : !ty_anon_struct1 {alignment = 8 : i64} loc(#loc26)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE135_82_bad.cpp":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/wchar.h":98:1)
#loc4 = loc("/usr/include/wchar.h":100:14)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_82_bad.cpp":25:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_82_bad.cpp":34:1)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_82_bad.cpp":29:9)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_82_bad.cpp":29:45)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_82_bad.cpp":30:9)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_82_bad.cpp":30:31)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_82_bad.cpp":26:1)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_82_bad.cpp":27:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_82_bad.cpp":33:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_82_bad.cpp":29:26)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_82_bad.cpp":29:41)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_82_bad.cpp":31:33)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_82_bad.cpp":31:50)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_82_bad.cpp":31:15)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_82_bad.cpp":32:27)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_82_bad.cpp":32:9)
#loc26 = loc("./CWE121_Stack_Based_Buffer_Overflow__CWE135_82.h":34:1)
#loc27 = loc("./CWE121_Stack_Based_Buffer_Overflow__CWE135_82.h":38:1)
#loc28 = loc(fused[#loc1, #loc2])
#loc29 = loc(fused[#loc3, #loc4])
#loc30 = loc(fused[#loc5, #loc6])
#loc31 = loc(fused[#loc7, #loc8])
#loc33 = loc(fused[#loc12, #loc13])
#loc34 = loc(fused[#loc14, #loc15])
#loc35 = loc(fused[#loc17, #loc18])
#loc36 = loc(fused[#loc26, #loc27])
