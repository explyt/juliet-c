!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc61 = loc("CWE401_Memory_Leak__strdup_char_17.c":111:10)
#loc62 = loc("CWE401_Memory_Leak__strdup_char_17.c":111:14)
#loc63 = loc("CWE401_Memory_Leak__strdup_char_17.c":111:20)
#loc64 = loc("CWE401_Memory_Leak__strdup_char_17.c":111:32)
#loc183 = loc(fused[#loc61, #loc62])
#loc184 = loc(fused[#loc63, #loc64])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodB2G.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc157)
  cir.global "private" constant cir_private @__const.CWE401_Memory_Leak__strdup_char_17_bad.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc158)
  cir.func private @strdup(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc159)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc160)
  cir.func no_proto @CWE401_Memory_Leak__strdup_char_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc158)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc162)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc163)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc164)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc16)
    cir.store %4, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc165)
    cir.br ^bb1 loc(#loc166)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<0> : !s32i loc(#loc20)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc167)
    cir.br ^bb2 loc(#loc166)
  ^bb2:  // 2 preds: ^bb1, ^bb8
    %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc22)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc168)
    cir.brcond %8 ^bb3, ^bb9 loc(#loc24)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc169)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc170)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @__const.CWE401_Memory_Leak__strdup_char_17_bad.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc158)
    cir.copy %9 to %0 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc158)
    %10 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc28)
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc29)
    %12 = cir.call @strdup(%11) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc28)
    cir.store %12, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc171)
    %13 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc33)
    cir.br ^bb6 loc(#loc27)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc19)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc19)
  ^bb8:  // pred: ^bb7
    %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc35)
    cir.store %15, %1 : !s32i, !cir.ptr<!s32i> loc(#loc172)
    cir.br ^bb2 loc(#loc166)
  ^bb9:  // pred: ^bb2
    cir.br ^bb10 loc(#loc19)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc173)
  ^bb11:  // pred: ^bb10
    %16 = cir.const #cir.int<0> : !s32i loc(#loc38)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc174)
    cir.br ^bb12 loc(#loc173)
  ^bb12:  // 2 preds: ^bb11, ^bb14
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc40)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc175)
    cir.brcond %19 ^bb13, ^bb15 loc(#loc42)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc37)
  ^bb14:  // pred: ^bb13
    %20 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc43)
    %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc44)
    cir.store %21, %2 : !s32i, !cir.ptr<!s32i> loc(#loc176)
    cir.br ^bb12 loc(#loc173)
  ^bb15:  // pred: ^bb12
    cir.br ^bb16 loc(#loc37)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc10)
  } loc(#loc161)
  cir.func no_proto @CWE401_Memory_Leak__strdup_char_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc178)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc179)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    cir.return loc(#loc46)
  } loc(#loc177)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc180)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc181)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc58)
  cir.func @main(%arg0: !s32i loc(fused[#loc61, #loc62]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc63, #loc64])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc183)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc184)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc60)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc65)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc65)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc66)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc67)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc67)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc68)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc55)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %8 = cir.get_global @CWE401_Memory_Leak__strdup_char_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc185)
    cir.call @CWE401_Memory_Leak__strdup_char_17_good() : () -> () loc(#loc70)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc56)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc57)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %13 = cir.get_global @CWE401_Memory_Leak__strdup_char_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc186)
    cir.call @CWE401_Memory_Leak__strdup_char_17_bad() : () -> () loc(#loc74)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc58)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc77)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc187)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc187)
    cir.return %17 : !s32i loc(#loc187)
  } loc(#loc182)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc188)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc157)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc190)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc191)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc192)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc88)
    cir.store %4, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc193)
    cir.br ^bb1 loc(#loc194)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<0> : !s32i loc(#loc92)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc195)
    cir.br ^bb2 loc(#loc194)
  ^bb2:  // 2 preds: ^bb1, ^bb8
    %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc196)
    cir.brcond %8 ^bb3, ^bb9 loc(#loc96)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc197)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc198)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @__const.goodB2G.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc157)
    cir.copy %9 to %0 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc157)
    %10 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc100)
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc101)
    %12 = cir.call @strdup(%11) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc100)
    cir.store %12, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc199)
    %13 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc105)
    cir.br ^bb6 loc(#loc99)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc91)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc91)
  ^bb8:  // pred: ^bb7
    %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc107)
    cir.store %15, %1 : !s32i, !cir.ptr<!s32i> loc(#loc200)
    cir.br ^bb2 loc(#loc194)
  ^bb9:  // pred: ^bb2
    cir.br ^bb10 loc(#loc91)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc201)
  ^bb11:  // pred: ^bb10
    %16 = cir.const #cir.int<0> : !s32i loc(#loc110)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc202)
    cir.br ^bb12 loc(#loc201)
  ^bb12:  // 2 preds: ^bb11, ^bb16
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc113)
    %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc203)
    cir.brcond %19 ^bb13, ^bb17 loc(#loc114)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc204)
  ^bb14:  // pred: ^bb13
    %20 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc116)
    %21 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc117)
    cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc116)
    cir.br ^bb15 loc(#loc109)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc109)
  ^bb16:  // pred: ^bb15
    %23 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    %24 = cir.unary(inc, %23) : !s32i, !s32i loc(#loc119)
    cir.store %24, %2 : !s32i, !cir.ptr<!s32i> loc(#loc205)
    cir.br ^bb12 loc(#loc201)
  ^bb17:  // pred: ^bb12
    cir.br ^bb18 loc(#loc109)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc82)
  } loc(#loc189)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc206)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"a string\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc122)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc208)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc209)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc210)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc130)
    cir.store %3, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc211)
    cir.br ^bb1 loc(#loc212)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc134)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc213)
    cir.br ^bb2 loc(#loc212)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc136)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc137)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc214)
    cir.brcond %7 ^bb3, ^bb7 loc(#loc138)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc215)
  ^bb4:  // pred: ^bb3
    %8 = cir.const #cir.int<100> : !s32i loc(#loc140)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc140)
    %10 = cir.const #cir.int<1> : !u64i loc(#loc140)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc140)
    %12 = cir.alloca !u8i, !cir.ptr<!u8i>, %11 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc140)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc140)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc140)
    cir.store %14, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc216)
    %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc142)
    %16 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
    %17 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc122)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc122)
    %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc142)
    %20 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc145)
    cir.br ^bb5 loc(#loc133)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc133)
  ^bb6:  // pred: ^bb5
    %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc147)
    cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc217)
    cir.br ^bb2 loc(#loc212)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc133)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc218)
  ^bb9:  // pred: ^bb8
    %23 = cir.const #cir.int<0> : !s32i loc(#loc150)
    cir.store %23, %1 : !s32i, !cir.ptr<!s32i> loc(#loc219)
    cir.br ^bb10 loc(#loc218)
  ^bb10:  // 2 preds: ^bb9, ^bb12
    %24 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc153)
    %26 = cir.cmp(lt, %24, %25) : !s32i, !cir.bool loc(#loc220)
    cir.brcond %26 ^bb11, ^bb13 loc(#loc154)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc149)
  ^bb12:  // pred: ^bb11
    %27 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc155)
    %28 = cir.unary(inc, %27) : !s32i, !s32i loc(#loc156)
    cir.store %28, %1 : !s32i, !cir.ptr<!s32i> loc(#loc221)
    cir.br ^bb10 loc(#loc218)
  ^bb13:  // pred: ^bb10
    cir.br ^bb14 loc(#loc149)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc124)
  } loc(#loc207)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_17.c":0:0)
#loc1 = loc("CWE401_Memory_Leak__strdup_char_17.c":60:13)
#loc2 = loc("CWE401_Memory_Leak__strdup_char_17.c":60:31)
#loc3 = loc("CWE401_Memory_Leak__strdup_char_17.c":32:13)
#loc4 = loc("CWE401_Memory_Leak__strdup_char_17.c":32:31)
#loc5 = loc("/usr/include/string.h":187:1)
#loc6 = loc("/usr/include/string.h":188:35)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE401_Memory_Leak__strdup_char_17.c":24:1)
#loc10 = loc("CWE401_Memory_Leak__strdup_char_17.c":45:1)
#loc11 = loc("CWE401_Memory_Leak__strdup_char_17.c":26:5)
#loc12 = loc("CWE401_Memory_Leak__strdup_char_17.c":26:9)
#loc13 = loc("CWE401_Memory_Leak__strdup_char_17.c":26:11)
#loc14 = loc("CWE401_Memory_Leak__strdup_char_17.c":27:5)
#loc15 = loc("CWE401_Memory_Leak__strdup_char_17.c":27:12)
#loc16 = loc("CWE401_Memory_Leak__strdup_char_17.c":28:12)
#loc17 = loc("CWE401_Memory_Leak__strdup_char_17.c":28:5)
#loc18 = loc("CWE401_Memory_Leak__strdup_char_17.c":29:5)
#loc19 = loc("CWE401_Memory_Leak__strdup_char_17.c":38:5)
#loc20 = loc("CWE401_Memory_Leak__strdup_char_17.c":29:13)
#loc21 = loc("CWE401_Memory_Leak__strdup_char_17.c":29:9)
#loc22 = loc("CWE401_Memory_Leak__strdup_char_17.c":29:16)
#loc23 = loc("CWE401_Memory_Leak__strdup_char_17.c":29:20)
#loc24 = loc("CWE401_Memory_Leak__strdup_char_17.c":29:18)
#loc25 = loc("CWE401_Memory_Leak__strdup_char_17.c":30:5)
#loc26 = loc("CWE401_Memory_Leak__strdup_char_17.c":31:9)
#loc27 = loc("CWE401_Memory_Leak__strdup_char_17.c":37:9)
#loc28 = loc("CWE401_Memory_Leak__strdup_char_17.c":34:20)
#loc29 = loc("CWE401_Memory_Leak__strdup_char_17.c":34:27)
#loc30 = loc("CWE401_Memory_Leak__strdup_char_17.c":34:13)
#loc31 = loc("CWE401_Memory_Leak__strdup_char_17.c":34:35)
#loc32 = loc("CWE401_Memory_Leak__strdup_char_17.c":36:23)
#loc33 = loc("CWE401_Memory_Leak__strdup_char_17.c":36:13)
#loc34 = loc("CWE401_Memory_Leak__strdup_char_17.c":29:24)
#loc35 = loc("CWE401_Memory_Leak__strdup_char_17.c":29:23)
#loc36 = loc("CWE401_Memory_Leak__strdup_char_17.c":39:5)
#loc37 = loc("CWE401_Memory_Leak__strdup_char_17.c":44:5)
#loc38 = loc("CWE401_Memory_Leak__strdup_char_17.c":39:13)
#loc39 = loc("CWE401_Memory_Leak__strdup_char_17.c":39:9)
#loc40 = loc("CWE401_Memory_Leak__strdup_char_17.c":39:16)
#loc41 = loc("CWE401_Memory_Leak__strdup_char_17.c":39:20)
#loc42 = loc("CWE401_Memory_Leak__strdup_char_17.c":39:18)
#loc43 = loc("CWE401_Memory_Leak__strdup_char_17.c":39:24)
#loc44 = loc("CWE401_Memory_Leak__strdup_char_17.c":39:23)
#loc45 = loc("CWE401_Memory_Leak__strdup_char_17.c":96:1)
#loc46 = loc("CWE401_Memory_Leak__strdup_char_17.c":100:1)
#loc47 = loc("CWE401_Memory_Leak__strdup_char_17.c":98:5)
#loc48 = loc("CWE401_Memory_Leak__strdup_char_17.c":98:13)
#loc49 = loc("CWE401_Memory_Leak__strdup_char_17.c":99:5)
#loc50 = loc("CWE401_Memory_Leak__strdup_char_17.c":99:13)
#loc51 = loc("/usr/include/stdlib.h":575:1)
#loc52 = loc("/usr/include/stdlib.h":575:41)
#loc53 = loc("/usr/include/time.h":76:1)
#loc54 = loc("/usr/include/time.h":76:38)
#loc55 = loc("CWE401_Memory_Leak__strdup_char_17.c":116:15)
#loc56 = loc("CWE401_Memory_Leak__strdup_char_17.c":118:15)
#loc57 = loc("CWE401_Memory_Leak__strdup_char_17.c":121:15)
#loc58 = loc("CWE401_Memory_Leak__strdup_char_17.c":123:15)
#loc59 = loc("CWE401_Memory_Leak__strdup_char_17.c":111:1)
#loc60 = loc("CWE401_Memory_Leak__strdup_char_17.c":126:1)
#loc65 = loc("CWE401_Memory_Leak__strdup_char_17.c":112:1)
#loc66 = loc("CWE401_Memory_Leak__strdup_char_17.c":114:27)
#loc67 = loc("CWE401_Memory_Leak__strdup_char_17.c":114:22)
#loc68 = loc("CWE401_Memory_Leak__strdup_char_17.c":114:5)
#loc69 = loc("CWE401_Memory_Leak__strdup_char_17.c":116:5)
#loc70 = loc("CWE401_Memory_Leak__strdup_char_17.c":117:5)
#loc71 = loc("CWE401_Memory_Leak__strdup_char_17.c":117:45)
#loc72 = loc("CWE401_Memory_Leak__strdup_char_17.c":118:5)
#loc73 = loc("CWE401_Memory_Leak__strdup_char_17.c":121:5)
#loc74 = loc("CWE401_Memory_Leak__strdup_char_17.c":122:5)
#loc75 = loc("CWE401_Memory_Leak__strdup_char_17.c":122:44)
#loc76 = loc("CWE401_Memory_Leak__strdup_char_17.c":123:5)
#loc77 = loc("CWE401_Memory_Leak__strdup_char_17.c":125:12)
#loc78 = loc("CWE401_Memory_Leak__strdup_char_17.c":125:5)
#loc79 = loc("/usr/include/stdlib.h":687:1)
#loc80 = loc("/usr/include/stdlib.h":687:32)
#loc81 = loc("CWE401_Memory_Leak__strdup_char_17.c":52:1)
#loc82 = loc("CWE401_Memory_Leak__strdup_char_17.c":72:1)
#loc83 = loc("CWE401_Memory_Leak__strdup_char_17.c":54:5)
#loc84 = loc("CWE401_Memory_Leak__strdup_char_17.c":54:9)
#loc85 = loc("CWE401_Memory_Leak__strdup_char_17.c":54:11)
#loc86 = loc("CWE401_Memory_Leak__strdup_char_17.c":55:5)
#loc87 = loc("CWE401_Memory_Leak__strdup_char_17.c":55:12)
#loc88 = loc("CWE401_Memory_Leak__strdup_char_17.c":56:12)
#loc89 = loc("CWE401_Memory_Leak__strdup_char_17.c":56:5)
#loc90 = loc("CWE401_Memory_Leak__strdup_char_17.c":57:5)
#loc91 = loc("CWE401_Memory_Leak__strdup_char_17.c":66:5)
#loc92 = loc("CWE401_Memory_Leak__strdup_char_17.c":57:13)
#loc93 = loc("CWE401_Memory_Leak__strdup_char_17.c":57:9)
#loc94 = loc("CWE401_Memory_Leak__strdup_char_17.c":57:16)
#loc95 = loc("CWE401_Memory_Leak__strdup_char_17.c":57:20)
#loc96 = loc("CWE401_Memory_Leak__strdup_char_17.c":57:18)
#loc97 = loc("CWE401_Memory_Leak__strdup_char_17.c":58:5)
#loc98 = loc("CWE401_Memory_Leak__strdup_char_17.c":59:9)
#loc99 = loc("CWE401_Memory_Leak__strdup_char_17.c":65:9)
#loc100 = loc("CWE401_Memory_Leak__strdup_char_17.c":62:20)
#loc101 = loc("CWE401_Memory_Leak__strdup_char_17.c":62:27)
#loc102 = loc("CWE401_Memory_Leak__strdup_char_17.c":62:13)
#loc103 = loc("CWE401_Memory_Leak__strdup_char_17.c":62:35)
#loc104 = loc("CWE401_Memory_Leak__strdup_char_17.c":64:23)
#loc105 = loc("CWE401_Memory_Leak__strdup_char_17.c":64:13)
#loc106 = loc("CWE401_Memory_Leak__strdup_char_17.c":57:24)
#loc107 = loc("CWE401_Memory_Leak__strdup_char_17.c":57:23)
#loc108 = loc("CWE401_Memory_Leak__strdup_char_17.c":67:5)
#loc109 = loc("CWE401_Memory_Leak__strdup_char_17.c":71:5)
#loc110 = loc("CWE401_Memory_Leak__strdup_char_17.c":67:13)
#loc111 = loc("CWE401_Memory_Leak__strdup_char_17.c":67:9)
#loc112 = loc("CWE401_Memory_Leak__strdup_char_17.c":67:16)
#loc113 = loc("CWE401_Memory_Leak__strdup_char_17.c":67:20)
#loc114 = loc("CWE401_Memory_Leak__strdup_char_17.c":67:18)
#loc115 = loc("CWE401_Memory_Leak__strdup_char_17.c":68:5)
#loc116 = loc("CWE401_Memory_Leak__strdup_char_17.c":70:9)
#loc117 = loc("CWE401_Memory_Leak__strdup_char_17.c":70:14)
#loc118 = loc("CWE401_Memory_Leak__strdup_char_17.c":67:24)
#loc119 = loc("CWE401_Memory_Leak__strdup_char_17.c":67:23)
#loc120 = loc("/usr/include/string.h":141:1)
#loc121 = loc("/usr/include/string.h":142:14)
#loc122 = loc("CWE401_Memory_Leak__strdup_char_17.c":85:22)
#loc123 = loc("CWE401_Memory_Leak__strdup_char_17.c":75:1)
#loc124 = loc("CWE401_Memory_Leak__strdup_char_17.c":94:1)
#loc125 = loc("CWE401_Memory_Leak__strdup_char_17.c":77:5)
#loc126 = loc("CWE401_Memory_Leak__strdup_char_17.c":77:9)
#loc127 = loc("CWE401_Memory_Leak__strdup_char_17.c":77:11)
#loc128 = loc("CWE401_Memory_Leak__strdup_char_17.c":78:5)
#loc129 = loc("CWE401_Memory_Leak__strdup_char_17.c":78:12)
#loc130 = loc("CWE401_Memory_Leak__strdup_char_17.c":79:12)
#loc131 = loc("CWE401_Memory_Leak__strdup_char_17.c":79:5)
#loc132 = loc("CWE401_Memory_Leak__strdup_char_17.c":80:5)
#loc133 = loc("CWE401_Memory_Leak__strdup_char_17.c":87:5)
#loc134 = loc("CWE401_Memory_Leak__strdup_char_17.c":80:13)
#loc135 = loc("CWE401_Memory_Leak__strdup_char_17.c":80:9)
#loc136 = loc("CWE401_Memory_Leak__strdup_char_17.c":80:16)
#loc137 = loc("CWE401_Memory_Leak__strdup_char_17.c":80:20)
#loc138 = loc("CWE401_Memory_Leak__strdup_char_17.c":80:18)
#loc139 = loc("CWE401_Memory_Leak__strdup_char_17.c":81:5)
#loc140 = loc("CWE401_Memory_Leak__strdup_char_17.c":83:24)
#loc141 = loc("CWE401_Memory_Leak__strdup_char_17.c":83:9)
#loc142 = loc("CWE401_Memory_Leak__strdup_char_17.c":85:9)
#loc143 = loc("CWE401_Memory_Leak__strdup_char_17.c":85:16)
#loc144 = loc("CWE401_Memory_Leak__strdup_char_17.c":86:19)
#loc145 = loc("CWE401_Memory_Leak__strdup_char_17.c":86:9)
#loc146 = loc("CWE401_Memory_Leak__strdup_char_17.c":80:24)
#loc147 = loc("CWE401_Memory_Leak__strdup_char_17.c":80:23)
#loc148 = loc("CWE401_Memory_Leak__strdup_char_17.c":88:5)
#loc149 = loc("CWE401_Memory_Leak__strdup_char_17.c":93:5)
#loc150 = loc("CWE401_Memory_Leak__strdup_char_17.c":88:13)
#loc151 = loc("CWE401_Memory_Leak__strdup_char_17.c":88:9)
#loc152 = loc("CWE401_Memory_Leak__strdup_char_17.c":88:16)
#loc153 = loc("CWE401_Memory_Leak__strdup_char_17.c":88:20)
#loc154 = loc("CWE401_Memory_Leak__strdup_char_17.c":88:18)
#loc155 = loc("CWE401_Memory_Leak__strdup_char_17.c":88:24)
#loc156 = loc("CWE401_Memory_Leak__strdup_char_17.c":88:23)
#loc157 = loc(fused[#loc1, #loc2])
#loc158 = loc(fused[#loc3, #loc4])
#loc159 = loc(fused[#loc5, #loc6])
#loc160 = loc(fused[#loc7, #loc8])
#loc161 = loc(fused[#loc9, #loc10])
#loc162 = loc(fused[#loc11, #loc12])
#loc163 = loc(fused[#loc11, #loc13])
#loc164 = loc(fused[#loc14, #loc15])
#loc165 = loc(fused[#loc17, #loc16])
#loc166 = loc(fused[#loc18, #loc19])
#loc167 = loc(fused[#loc21, #loc20])
#loc168 = loc(fused[#loc22, #loc23])
#loc169 = loc(fused[#loc25, #loc19])
#loc170 = loc(fused[#loc26, #loc27])
#loc171 = loc(fused[#loc30, #loc31])
#loc172 = loc(fused[#loc35, #loc34])
#loc173 = loc(fused[#loc36, #loc37])
#loc174 = loc(fused[#loc39, #loc38])
#loc175 = loc(fused[#loc40, #loc41])
#loc176 = loc(fused[#loc44, #loc43])
#loc177 = loc(fused[#loc45, #loc46])
#loc178 = loc(fused[#loc47, #loc48])
#loc179 = loc(fused[#loc49, #loc50])
#loc180 = loc(fused[#loc51, #loc52])
#loc181 = loc(fused[#loc53, #loc54])
#loc182 = loc(fused[#loc59, #loc60])
#loc185 = loc(fused[#loc70, #loc71])
#loc186 = loc(fused[#loc74, #loc75])
#loc187 = loc(fused[#loc78, #loc77])
#loc188 = loc(fused[#loc79, #loc80])
#loc189 = loc(fused[#loc81, #loc82])
#loc190 = loc(fused[#loc83, #loc84])
#loc191 = loc(fused[#loc83, #loc85])
#loc192 = loc(fused[#loc86, #loc87])
#loc193 = loc(fused[#loc89, #loc88])
#loc194 = loc(fused[#loc90, #loc91])
#loc195 = loc(fused[#loc93, #loc92])
#loc196 = loc(fused[#loc94, #loc95])
#loc197 = loc(fused[#loc97, #loc91])
#loc198 = loc(fused[#loc98, #loc99])
#loc199 = loc(fused[#loc102, #loc103])
#loc200 = loc(fused[#loc107, #loc106])
#loc201 = loc(fused[#loc108, #loc109])
#loc202 = loc(fused[#loc111, #loc110])
#loc203 = loc(fused[#loc112, #loc113])
#loc204 = loc(fused[#loc115, #loc109])
#loc205 = loc(fused[#loc119, #loc118])
#loc206 = loc(fused[#loc120, #loc121])
#loc207 = loc(fused[#loc123, #loc124])
#loc208 = loc(fused[#loc125, #loc126])
#loc209 = loc(fused[#loc125, #loc127])
#loc210 = loc(fused[#loc128, #loc129])
#loc211 = loc(fused[#loc131, #loc130])
#loc212 = loc(fused[#loc132, #loc133])
#loc213 = loc(fused[#loc135, #loc134])
#loc214 = loc(fused[#loc136, #loc137])
#loc215 = loc(fused[#loc139, #loc133])
#loc216 = loc(fused[#loc141, #loc140])
#loc217 = loc(fused[#loc147, #loc146])
#loc218 = loc(fused[#loc148, #loc149])
#loc219 = loc(fused[#loc151, #loc150])
#loc220 = loc(fused[#loc152, #loc153])
#loc221 = loc(fused[#loc156, #loc155])
