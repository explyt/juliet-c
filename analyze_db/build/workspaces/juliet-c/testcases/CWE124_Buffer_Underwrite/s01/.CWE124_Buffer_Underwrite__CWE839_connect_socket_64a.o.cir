!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc235)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc236)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc237)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc238)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc239)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc240)
  cir.func private @close(!s32i) -> !s32i loc(#loc241)
  cir.func private @CWE124_Buffer_Underwrite__CWE839_connect_socket_64b_badSink(!cir.ptr<!void>) loc(#loc242)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_connect_socket_64_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc244)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc23)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc245)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc247)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc248)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc249)
      %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc250)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc32)
      %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc32)
      cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc249)
      cir.scope {
        cir.do {
          cir.scope {
            %10 = cir.const #cir.int<2> : !s32i loc(#loc39)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc40)
            %12 = cir.const #cir.int<6> : !s32i loc(#loc41)
            %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc42)
            cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc253)
            cir.scope {
              %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc47)
              %53 = cir.const #cir.int<1> : !s32i loc(#loc48)
              %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc48)
              %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc255)
              cir.if %55 {
                cir.break loc(#loc50)
              } loc(#loc256)
            } loc(#loc254)
            %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc257)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc53)
            %16 = cir.const #cir.int<16> : !u64i loc(#loc258)
            cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc259)
            %17 = cir.const #cir.int<2> : !s32i loc(#loc58)
            %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc58)
            %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc59)
            cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc260)
            %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
            %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
            %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc61)
            %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc62)
            %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc63)
            cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc261)
            %25 = cir.const #cir.int<27015> : !s32i loc(#loc66)
            %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc66)
            %27 = cir.call @htons(%26) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc67)
            %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
            cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc262)
            cir.scope {
              %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc73)
              %53 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc264)
              %54 = cir.const #cir.int<16> : !u64i loc(#loc265)
              %55 = cir.cast(integral, %54 : !u64i), !u32i loc(#loc265)
              %56 = cir.call @connect(%52, %53, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc78)
              %57 = cir.const #cir.int<1> : !s32i loc(#loc79)
              %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc79)
              %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc266)
              cir.if %59 {
                cir.break loc(#loc81)
              } loc(#loc267)
            } loc(#loc263)
            %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc82)
            %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc83)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc83)
            %32 = cir.const #cir.int<3> : !s32i loc(#loc84)
            %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc84)
            %34 = cir.const #cir.int<4> : !u64i loc(#loc84)
            %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc84)
            %36 = cir.const #cir.int<2> : !s32i loc(#loc84)
            %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc84)
            %38 = cir.binop(add, %35, %37) : !u64i loc(#loc84)
            %39 = cir.const #cir.int<1> : !s32i loc(#loc85)
            %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc85)
            %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc268)
            %42 = cir.const #cir.int<0> : !s32i loc(#loc86)
            %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc87)
            %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc87)
            cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc269)
            cir.scope {
              %52 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc92)
              %53 = cir.const #cir.int<1> : !s32i loc(#loc93)
              %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc93)
              %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc271)
              %56 = cir.ternary(%55, true {
                %57 = cir.const #true loc(#loc94)
                cir.yield %57 : !cir.bool loc(#loc94)
              }, false {
                %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc95)
                %58 = cir.const #cir.int<0> : !s32i loc(#loc96)
                %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc272)
                %60 = cir.ternary(%59, true {
                  %61 = cir.const #true loc(#loc94)
                  cir.yield %61 : !cir.bool loc(#loc94)
                }, false {
                  %61 = cir.const #false loc(#loc94)
                  cir.yield %61 : !cir.bool loc(#loc94)
                }) : (!cir.bool) -> !cir.bool loc(#loc94)
                cir.yield %60 : !cir.bool loc(#loc94)
              }) : (!cir.bool) -> !cir.bool loc(#loc94)
              cir.if %56 {
                cir.break loc(#loc98)
              } loc(#loc273)
            } loc(#loc270)
            %45 = cir.const #cir.int<0> : !s32i loc(#loc99)
            %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc99)
            %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc100)
            %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc101)
            %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc101)
            cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc274)
            %50 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc102)
            %51 = cir.call @atoi(%50) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc103)
            cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc275)
          } loc(#loc252)
          cir.yield loc(#loc36)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc106)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc106)
          cir.condition(%11) loc(#loc106)
        } loc(#loc251)
      } loc(#loc251)
      cir.scope {
        %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc109)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc110)
        %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc110)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc277)
        cir.if %13 {
          %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc112)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc113)
        } loc(#loc278)
      } loc(#loc276)
    } loc(#loc246)
    %3 = cir.cast(bitcast, %0 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc279)
    cir.call @CWE124_Buffer_Underwrite__CWE839_connect_socket_64b_badSink(%3) : (!cir.ptr<!void>) -> () loc(#loc116)
    cir.return loc(#loc19)
  } loc(#loc243)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_connect_socket_64_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc281)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc119)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc282)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc121)
    cir.return loc(#loc118)
  } loc(#loc280)
  cir.func private @CWE124_Buffer_Underwrite__CWE839_connect_socket_64b_goodG2BSink(!cir.ptr<!void>) loc(#loc283)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc285)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc129)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc130)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc286)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc132)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc287)
    %4 = cir.cast(bitcast, %0 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc288)
    cir.call @CWE124_Buffer_Underwrite__CWE839_connect_socket_64b_goodG2BSink(%4) : (!cir.ptr<!void>) -> () loc(#loc136)
    cir.return loc(#loc126)
  } loc(#loc284)
  cir.func private @CWE124_Buffer_Underwrite__CWE839_connect_socket_64b_goodB2GSink(!cir.ptr<!void>) loc(#loc289)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc291)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc143)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc144)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc292)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc294)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc295)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc296)
      %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc297)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc153)
      %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc153)
      cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc296)
      cir.scope {
        cir.do {
          cir.scope {
            %10 = cir.const #cir.int<2> : !s32i loc(#loc160)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc161)
            %12 = cir.const #cir.int<6> : !s32i loc(#loc162)
            %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc163)
            cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc300)
            cir.scope {
              %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc168)
              %53 = cir.const #cir.int<1> : !s32i loc(#loc169)
              %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc169)
              %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc302)
              cir.if %55 {
                cir.break loc(#loc171)
              } loc(#loc303)
            } loc(#loc301)
            %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc304)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc174)
            %16 = cir.const #cir.int<16> : !u64i loc(#loc305)
            cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc306)
            %17 = cir.const #cir.int<2> : !s32i loc(#loc179)
            %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc179)
            %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc59)
            cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc307)
            %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc181)
            %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc181)
            %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc182)
            %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc62)
            %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc63)
            cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc308)
            %25 = cir.const #cir.int<27015> : !s32i loc(#loc185)
            %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc185)
            %27 = cir.call @htons(%26) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc186)
            %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
            cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc309)
            cir.scope {
              %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc191)
              %53 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc311)
              %54 = cir.const #cir.int<16> : !u64i loc(#loc312)
              %55 = cir.cast(integral, %54 : !u64i), !u32i loc(#loc312)
              %56 = cir.call @connect(%52, %53, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc196)
              %57 = cir.const #cir.int<1> : !s32i loc(#loc197)
              %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc197)
              %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc313)
              cir.if %59 {
                cir.break loc(#loc199)
              } loc(#loc314)
            } loc(#loc310)
            %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc200)
            %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc201)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc201)
            %32 = cir.const #cir.int<3> : !s32i loc(#loc202)
            %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc202)
            %34 = cir.const #cir.int<4> : !u64i loc(#loc202)
            %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc202)
            %36 = cir.const #cir.int<2> : !s32i loc(#loc202)
            %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc202)
            %38 = cir.binop(add, %35, %37) : !u64i loc(#loc202)
            %39 = cir.const #cir.int<1> : !s32i loc(#loc203)
            %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc203)
            %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc315)
            %42 = cir.const #cir.int<0> : !s32i loc(#loc204)
            %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc205)
            %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc205)
            cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc316)
            cir.scope {
              %52 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc210)
              %53 = cir.const #cir.int<1> : !s32i loc(#loc211)
              %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc211)
              %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc318)
              %56 = cir.ternary(%55, true {
                %57 = cir.const #true loc(#loc212)
                cir.yield %57 : !cir.bool loc(#loc212)
              }, false {
                %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc213)
                %58 = cir.const #cir.int<0> : !s32i loc(#loc214)
                %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc319)
                %60 = cir.ternary(%59, true {
                  %61 = cir.const #true loc(#loc212)
                  cir.yield %61 : !cir.bool loc(#loc212)
                }, false {
                  %61 = cir.const #false loc(#loc212)
                  cir.yield %61 : !cir.bool loc(#loc212)
                }) : (!cir.bool) -> !cir.bool loc(#loc212)
                cir.yield %60 : !cir.bool loc(#loc212)
              }) : (!cir.bool) -> !cir.bool loc(#loc212)
              cir.if %56 {
                cir.break loc(#loc216)
              } loc(#loc320)
            } loc(#loc317)
            %45 = cir.const #cir.int<0> : !s32i loc(#loc217)
            %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc217)
            %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc218)
            %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc219)
            %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc219)
            cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc321)
            %50 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc220)
            %51 = cir.call @atoi(%50) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc221)
            cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc322)
          } loc(#loc299)
          cir.yield loc(#loc157)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc224)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc224)
          cir.condition(%11) loc(#loc224)
        } loc(#loc298)
      } loc(#loc298)
      cir.scope {
        %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc227)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc228)
        %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc228)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc324)
        cir.if %13 {
          %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc230)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc231)
        } loc(#loc325)
      } loc(#loc323)
    } loc(#loc293)
    %3 = cir.cast(bitcast, %0 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc326)
    cir.call @CWE124_Buffer_Underwrite__CWE839_connect_socket_64b_goodB2GSink(%3) : (!cir.ptr<!void>) -> () loc(#loc234)
    cir.return loc(#loc140)
  } loc(#loc290)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":78:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":45:1)
#loc17 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":45:84)
#loc18 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":47:1)
#loc19 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":109:1)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":49:5)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":49:9)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":51:13)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":51:12)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":51:5)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":52:5)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":107:5)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":57:9)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":57:13)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":58:9)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":58:28)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":59:9)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":59:32)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":60:9)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":60:41)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":61:9)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":96:17)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":62:9)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":95:9)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":71:36)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":71:45)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":71:58)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":71:29)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":71:13)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":71:69)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":72:13)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":75:13)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":72:17)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":72:34)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":73:13)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":74:17)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":76:20)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":76:21)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":76:30)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":76:33)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":76:47)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":76:13)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":76:48)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":77:34)
#loc59 = loc("/usr/include/netinet/in.h":249:5)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":77:13)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":78:39)
#loc62 = loc("/usr/include/netinet/in.h":251:20)
#loc63 = loc("/usr/include/netinet/in.h":33:15)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":78:13)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":78:59)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":79:38)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":79:32)
#loc68 = loc("/usr/include/netinet/in.h":250:15)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":79:13)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":79:46)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":80:13)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":83:13)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":80:25)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":80:58)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":80:59)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":80:68)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":80:82)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":80:17)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":80:88)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":81:13)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":82:17)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":86:31)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":86:46)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":86:59)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":86:77)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":86:80)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":86:26)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":86:13)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":86:81)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":87:13)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":90:13)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":87:17)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":87:31)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":87:44)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":87:47)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":87:61)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":88:13)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":89:17)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":92:39)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":92:25)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":92:13)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":94:25)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":94:20)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":94:13)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":94:36)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":96:16)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":97:9)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":100:9)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":97:13)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":97:30)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":98:9)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":99:26)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":99:13)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":108:65)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":108:66)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":108:5)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":196:1)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":200:1)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":198:5)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":198:13)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":199:5)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":199:13)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":116:1)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":116:88)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":118:1)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":127:1)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":120:5)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":120:9)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":122:13)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":122:12)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":122:5)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":125:12)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":125:5)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":126:69)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":126:70)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":126:5)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":130:1)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":130:88)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":132:1)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":194:1)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":134:5)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":134:9)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":136:13)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":136:12)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":136:5)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":137:5)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":192:5)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":142:9)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":142:13)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":143:9)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":143:28)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":144:9)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":144:32)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":145:9)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":145:41)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":146:9)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":181:17)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":147:9)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":180:9)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":156:36)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":156:45)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":156:58)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":156:29)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":156:13)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":156:69)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":157:13)
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":160:13)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":157:17)
#loc169 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":157:34)
#loc170 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":158:13)
#loc171 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":159:17)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":161:20)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":161:21)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":161:30)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":161:33)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":161:47)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":161:13)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":161:48)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":162:34)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":162:13)
#loc181 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":163:49)
#loc182 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":163:39)
#loc183 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":163:13)
#loc184 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":163:59)
#loc185 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":164:38)
#loc186 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":164:32)
#loc187 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":164:13)
#loc188 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":164:46)
#loc189 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":165:13)
#loc190 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":168:13)
#loc191 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":165:25)
#loc192 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":165:58)
#loc193 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":165:59)
#loc194 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":165:68)
#loc195 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":165:82)
#loc196 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":165:17)
#loc197 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":165:88)
#loc198 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":166:13)
#loc199 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":167:17)
#loc200 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":171:31)
#loc201 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":171:46)
#loc202 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":171:59)
#loc203 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":171:77)
#loc204 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":171:80)
#loc205 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":171:26)
#loc206 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":171:13)
#loc207 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":171:81)
#loc208 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":172:13)
#loc209 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":175:13)
#loc210 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":172:17)
#loc211 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":172:31)
#loc212 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":172:44)
#loc213 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":172:47)
#loc214 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":172:61)
#loc215 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":173:13)
#loc216 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":174:17)
#loc217 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":177:39)
#loc218 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":177:25)
#loc219 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":177:13)
#loc220 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":179:25)
#loc221 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":179:20)
#loc222 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":179:13)
#loc223 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":179:36)
#loc224 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":181:16)
#loc225 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":182:9)
#loc226 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":185:9)
#loc227 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":182:13)
#loc228 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":182:30)
#loc229 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":183:9)
#loc230 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":184:26)
#loc231 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":184:13)
#loc232 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":193:69)
#loc233 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":193:70)
#loc234 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_64a.c":193:5)
#loc235 = loc(fused[#loc1, #loc2])
#loc236 = loc(fused[#loc3, #loc4])
#loc237 = loc(fused[#loc6, #loc7])
#loc238 = loc(fused[#loc8, #loc9])
#loc239 = loc(fused[#loc10, #loc11])
#loc240 = loc(fused[#loc12, #loc13])
#loc241 = loc(fused[#loc14, #loc15])
#loc242 = loc(fused[#loc16, #loc17])
#loc243 = loc(fused[#loc18, #loc19])
#loc244 = loc(fused[#loc20, #loc21])
#loc245 = loc(fused[#loc24, #loc22])
#loc246 = loc(fused[#loc25, #loc26])
#loc247 = loc(fused[#loc27, #loc28])
#loc248 = loc(fused[#loc29, #loc30])
#loc249 = loc(fused[#loc31, #loc32])
#loc250 = loc(fused[#loc33, #loc34])
#loc251 = loc(fused[#loc35, #loc36])
#loc252 = loc(fused[#loc37, #loc38])
#loc253 = loc(fused[#loc43, #loc44])
#loc254 = loc(fused[#loc45, #loc46])
#loc255 = loc(fused[#loc47, #loc48])
#loc256 = loc(fused[#loc49, #loc46])
#loc257 = loc(fused[#loc51, #loc52])
#loc258 = loc(fused[#loc54, #loc55])
#loc259 = loc(fused[#loc56, #loc57])
#loc260 = loc(fused[#loc60, #loc58])
#loc261 = loc(fused[#loc64, #loc65])
#loc262 = loc(fused[#loc69, #loc70])
#loc263 = loc(fused[#loc71, #loc72])
#loc264 = loc(fused[#loc74, #loc75])
#loc265 = loc(fused[#loc76, #loc77])
#loc266 = loc(fused[#loc78, #loc79])
#loc267 = loc(fused[#loc80, #loc72])
#loc268 = loc(fused[#loc84, #loc85])
#loc269 = loc(fused[#loc88, #loc89])
#loc270 = loc(fused[#loc90, #loc91])
#loc271 = loc(fused[#loc92, #loc93])
#loc272 = loc(fused[#loc95, #loc96])
#loc273 = loc(fused[#loc97, #loc91])
#loc274 = loc(fused[#loc101, #loc99])
#loc275 = loc(fused[#loc104, #loc105])
#loc276 = loc(fused[#loc107, #loc108])
#loc277 = loc(fused[#loc109, #loc110])
#loc278 = loc(fused[#loc111, #loc108])
#loc279 = loc(fused[#loc114, #loc115])
#loc280 = loc(fused[#loc117, #loc118])
#loc281 = loc(fused[#loc119, #loc120])
#loc282 = loc(fused[#loc121, #loc122])
#loc283 = loc(fused[#loc123, #loc124])
#loc284 = loc(fused[#loc125, #loc126])
#loc285 = loc(fused[#loc127, #loc128])
#loc286 = loc(fused[#loc131, #loc129])
#loc287 = loc(fused[#loc133, #loc132])
#loc288 = loc(fused[#loc134, #loc135])
#loc289 = loc(fused[#loc137, #loc138])
#loc290 = loc(fused[#loc139, #loc140])
#loc291 = loc(fused[#loc141, #loc142])
#loc292 = loc(fused[#loc145, #loc143])
#loc293 = loc(fused[#loc146, #loc147])
#loc294 = loc(fused[#loc148, #loc149])
#loc295 = loc(fused[#loc150, #loc151])
#loc296 = loc(fused[#loc152, #loc153])
#loc297 = loc(fused[#loc154, #loc155])
#loc298 = loc(fused[#loc156, #loc157])
#loc299 = loc(fused[#loc158, #loc159])
#loc300 = loc(fused[#loc164, #loc165])
#loc301 = loc(fused[#loc166, #loc167])
#loc302 = loc(fused[#loc168, #loc169])
#loc303 = loc(fused[#loc170, #loc167])
#loc304 = loc(fused[#loc172, #loc173])
#loc305 = loc(fused[#loc175, #loc176])
#loc306 = loc(fused[#loc177, #loc178])
#loc307 = loc(fused[#loc180, #loc179])
#loc308 = loc(fused[#loc183, #loc184])
#loc309 = loc(fused[#loc187, #loc188])
#loc310 = loc(fused[#loc189, #loc190])
#loc311 = loc(fused[#loc192, #loc193])
#loc312 = loc(fused[#loc194, #loc195])
#loc313 = loc(fused[#loc196, #loc197])
#loc314 = loc(fused[#loc198, #loc190])
#loc315 = loc(fused[#loc202, #loc203])
#loc316 = loc(fused[#loc206, #loc207])
#loc317 = loc(fused[#loc208, #loc209])
#loc318 = loc(fused[#loc210, #loc211])
#loc319 = loc(fused[#loc213, #loc214])
#loc320 = loc(fused[#loc215, #loc209])
#loc321 = loc(fused[#loc219, #loc217])
#loc322 = loc(fused[#loc222, #loc223])
#loc323 = loc(fused[#loc225, #loc226])
#loc324 = loc(fused[#loc227, #loc228])
#loc325 = loc(fused[#loc229, #loc226])
#loc326 = loc(fused[#loc232, #loc233])
