!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc154)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc155)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc156)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc157)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc158)
  cir.func private @printIntLine(!s32i) loc(#loc159)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_323badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc161)
    %1 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc162)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc163)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc164)
    %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc165)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc166)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc167)
    %7 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc168)
    %8 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc169)
    cir.store %6, %7 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc168)
    cir.store %6, %8 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc169)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc34)
    cir.store %10, %6 : !s32i, !cir.ptr<!s32i> loc(#loc170)
    cir.br ^bb1 loc(#loc171)
  ^bb1:  // pred: ^bb0
    %11 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc17)
    %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    cir.br ^bb2 loc(#loc172)
  ^bb2:  // pred: ^bb1
    %13 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc162)
    cir.store %13, %1 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc162)
    cir.br ^bb3 loc(#loc173)
  ^bb3:  // pred: ^bb2
    %14 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc43)
    %15 = cir.const #cir.int<3> : !s32i loc(#loc44)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc44)
    %17 = cir.const #cir.int<4> : !u64i loc(#loc44)
    %18 = cir.binop(mul, %16, %17) : !u64i loc(#loc44)
    %19 = cir.const #cir.int<2> : !s32i loc(#loc44)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc44)
    %21 = cir.binop(add, %18, %20) : !u64i loc(#loc44)
    %22 = cir.cast(integral, %21 : !u64i), !s32i loc(#loc44)
    %23 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc155)
    %24 = cir.load %23 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc45)
    %25 = cir.call @fgets(%14, %22, %24) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc46)
    %26 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc47)
    %27 = cir.cmp(ne, %25, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc174)
    cir.brcond %27 ^bb4, ^bb5 loc(#loc175)
  ^bb4:  // pred: ^bb3
    %28 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc51)
    %29 = cir.call @atoi(%28) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc52)
    cir.store %29, %0 : !s32i, !cir.ptr<!s32i> loc(#loc176)
    cir.br ^bb6 loc(#loc49)
  ^bb5:  // pred: ^bb3
    %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    cir.br ^bb6 loc(#loc42)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc42)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc40)
  ^bb8:  // pred: ^bb7
    %32 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    %33 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc57)
    cir.store %32, %33 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    cir.br ^bb9 loc(#loc37)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc178)
  ^bb10:  // pred: ^bb9
    %34 = cir.load deref %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc21)
    %35 = cir.load %34 : !cir.ptr<!s32i>, !s32i loc(#loc61)
    cir.store %35, %2 : !s32i, !cir.ptr<!s32i> loc(#loc163)
    cir.br ^bb11 loc(#loc179)
  ^bb11:  // pred: ^bb10
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc64)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc64)
    %38 = cir.const #cir.int<4> : !u64i loc(#loc180)
    %39 = cir.binop(mul, %37, %38) : !u64i loc(#loc181)
    cir.store %39, %3 : !u64i, !cir.ptr<!u64i> loc(#loc182)
    %40 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc68)
    %41 = cir.call @_Znam(%40) : (!u64i) -> !cir.ptr<!void> loc(#loc69)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc183)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc183)
    cir.store %43, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc184)
    cir.br ^bb12 loc(#loc185)
  ^bb12:  // pred: ^bb11
    %44 = cir.const #cir.int<0> : !s32i loc(#loc75)
    %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc75)
    cir.store %45, %4 : !u64i, !cir.ptr<!u64i> loc(#loc186)
    cir.br ^bb13 loc(#loc185)
  ^bb13:  // 2 preds: ^bb12, ^bb17
    %46 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc77)
    %47 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc78)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc78)
    %49 = cir.cmp(lt, %46, %48) : !u64i, !cir.bool loc(#loc187)
    cir.brcond %49 ^bb14, ^bb18 loc(#loc187)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc188)
  ^bb15:  // pred: ^bb14
    %50 = cir.const #cir.int<0> : !s32i loc(#loc80)
    %51 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc81)
    %52 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc82)
    %53 = cir.ptr_stride(%51 : !cir.ptr<!s32i>, %52 : !u64i), !cir.ptr<!s32i> loc(#loc83)
    cir.store %50, %53 : !s32i, !cir.ptr<!s32i> loc(#loc189)
    cir.br ^bb16 loc(#loc74)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc74)
  ^bb17:  // pred: ^bb16
    %54 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc84)
    %55 = cir.unary(inc, %54) : !u64i, !u64i loc(#loc85)
    cir.store %55, %4 : !u64i, !cir.ptr<!u64i> loc(#loc190)
    cir.br ^bb13 loc(#loc185)
  ^bb18:  // pred: ^bb13
    cir.br ^bb19 loc(#loc74)
  ^bb19:  // pred: ^bb18
    %56 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc86)
    %57 = cir.const #cir.int<0> : !s32i loc(#loc87)
    %58 = cir.ptr_stride(%56 : !cir.ptr<!s32i>, %57 : !s32i), !cir.ptr<!s32i> loc(#loc88)
    %59 = cir.load %58 : !cir.ptr<!s32i>, !s32i loc(#loc86)
    cir.call @printIntLine(%59) : (!s32i) -> () loc(#loc89)
    %60 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc90)
    cir.delete.array %60 : <!s32i> loc(#loc90)
    cir.br ^bb20 loc(#loc63)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc60)
  ^bb21:  // pred: ^bb20
    cir.return loc(#loc15)
  } loc(#loc160)
  cir.func internal private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc192)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc193)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc194)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc195)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc196)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc197)
    %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc198)
    %7 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc199)
    cir.store %5, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc198)
    cir.store %5, %7 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc199)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc109)
    cir.store %9, %5 : !s32i, !cir.ptr<!s32i> loc(#loc200)
    cir.br ^bb1 loc(#loc201)
  ^bb1:  // pred: ^bb0
    %10 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc94)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc192)
    %12 = cir.const #cir.int<20> : !s32i loc(#loc114)
    cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc202)
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc116)
    %14 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc117)
    cir.store %13, %14 : !s32i, !cir.ptr<!s32i> loc(#loc203)
    cir.br ^bb2 loc(#loc112)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc204)
  ^bb3:  // pred: ^bb2
    %15 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc96)
    %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc121)
    cir.store %16, %1 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    cir.br ^bb4 loc(#loc205)
  ^bb4:  // pred: ^bb3
    %17 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc124)
    %19 = cir.const #cir.int<4> : !u64i loc(#loc206)
    %20 = cir.binop(mul, %18, %19) : !u64i loc(#loc207)
    cir.store %20, %2 : !u64i, !cir.ptr<!u64i> loc(#loc208)
    %21 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc128)
    %22 = cir.call @_Znam(%21) : (!u64i) -> !cir.ptr<!void> loc(#loc129)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc209)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc209)
    cir.store %24, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc210)
    cir.br ^bb5 loc(#loc211)
  ^bb5:  // pred: ^bb4
    %25 = cir.const #cir.int<0> : !s32i loc(#loc135)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc135)
    cir.store %26, %3 : !u64i, !cir.ptr<!u64i> loc(#loc212)
    cir.br ^bb6 loc(#loc211)
  ^bb6:  // 2 preds: ^bb5, ^bb10
    %27 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc137)
    %28 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc138)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc138)
    %30 = cir.cmp(lt, %27, %29) : !u64i, !cir.bool loc(#loc213)
    cir.brcond %30 ^bb7, ^bb11 loc(#loc213)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc214)
  ^bb8:  // pred: ^bb7
    %31 = cir.const #cir.int<0> : !s32i loc(#loc140)
    %32 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc141)
    %33 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc142)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!s32i>, %33 : !u64i), !cir.ptr<!s32i> loc(#loc143)
    cir.store %31, %34 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    cir.br ^bb9 loc(#loc134)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc134)
  ^bb10:  // pred: ^bb9
    %35 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc144)
    %36 = cir.unary(inc, %35) : !u64i, !u64i loc(#loc145)
    cir.store %36, %3 : !u64i, !cir.ptr<!u64i> loc(#loc216)
    cir.br ^bb6 loc(#loc211)
  ^bb11:  // pred: ^bb6
    cir.br ^bb12 loc(#loc134)
  ^bb12:  // pred: ^bb11
    %37 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc146)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc147)
    %39 = cir.ptr_stride(%37 : !cir.ptr<!s32i>, %38 : !s32i), !cir.ptr<!s32i> loc(#loc148)
    %40 = cir.load %39 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    cir.call @printIntLine(%40) : (!s32i) -> () loc(#loc149)
    %41 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc150)
    cir.delete.array %41 : <!s32i> loc(#loc150)
    cir.br ^bb13 loc(#loc123)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc120)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc92)
  } loc(#loc191)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_324goodEv() extra(#fn_attr1) {
    cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32L7goodG2BEv() : () -> () loc(#loc153)
    cir.return loc(#loc152)
  } loc(#loc217)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":45:27)
#loc10 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc11 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc12 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":26:1)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":66:1)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":34:9)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":34:21)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":36:13)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":36:49)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":51:9)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":51:21)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":53:13)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":53:20)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":53:30)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":54:13)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":54:18)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":28:5)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":28:9)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":29:5)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":29:22)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":30:5)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":30:22)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":32:13)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":32:12)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":32:5)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":33:5)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":49:5)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":34:20)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":35:9)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":47:9)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":38:13)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":46:13)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":38:23)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":38:36)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":38:53)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":38:17)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":38:63)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":39:13)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":42:13)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":44:13)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":41:29)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":41:24)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":41:17)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":41:40)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":45:17)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":48:21)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":48:10)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":48:9)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":50:5)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":65:5)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":51:20)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":52:9)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":64:9)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":56:25)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":56:32)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":56:42)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":56:13)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":57:41)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":26:6)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":57:32)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":57:50)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":57:13)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":58:13)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":61:13)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":58:22)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":58:18)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":58:25)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":58:37)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":59:13)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":60:33)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":60:17)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":60:28)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":60:29)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":58:44)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":58:43)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":62:26)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":62:37)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":62:38)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":62:13)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":63:23)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":73:1)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":102:1)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":81:9)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":81:21)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":87:9)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":87:21)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":89:13)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":89:20)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":89:30)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":90:13)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":90:18)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":75:5)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":75:9)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":76:5)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":76:22)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":77:5)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":77:22)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":79:13)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":79:12)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":79:5)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":80:5)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":85:5)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":81:20)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":83:16)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":83:9)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":84:21)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":84:10)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":84:9)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":86:5)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":101:5)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":87:20)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":88:9)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":100:9)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":92:25)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":92:32)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":92:42)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":92:13)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":93:41)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":73:13)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":93:32)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":93:50)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":93:13)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":94:13)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":97:13)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":94:22)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":94:18)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":94:25)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":94:37)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":95:13)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":96:33)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":96:17)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":96:28)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":96:29)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":94:44)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":94:43)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":98:26)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":98:37)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":98:38)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":98:13)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":99:23)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":104:1)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":107:1)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":106:5)
#loc154 = loc(fused[#loc1, #loc2])
#loc155 = loc(fused[#loc3, #loc4])
#loc156 = loc(fused[#loc5, #loc6])
#loc157 = loc(fused[#loc7, #loc8])
#loc158 = loc(fused[#loc10, #loc11])
#loc159 = loc(fused[#loc12, #loc13])
#loc160 = loc(fused[#loc14, #loc15])
#loc161 = loc(fused[#loc16, #loc17])
#loc162 = loc(fused[#loc18, #loc19])
#loc163 = loc(fused[#loc20, #loc21])
#loc164 = loc(fused[#loc22, #loc23])
#loc165 = loc(fused[#loc22, #loc24])
#loc166 = loc(fused[#loc25, #loc26])
#loc167 = loc(fused[#loc27, #loc28])
#loc168 = loc(fused[#loc29, #loc30])
#loc169 = loc(fused[#loc31, #loc32])
#loc170 = loc(fused[#loc35, #loc33])
#loc171 = loc(fused[#loc36, #loc37])
#loc172 = loc(fused[#loc39, #loc40])
#loc173 = loc(fused[#loc41, #loc42])
#loc174 = loc(fused[#loc46, #loc47])
#loc175 = loc(fused[#loc48, #loc49, #loc50, #loc42])
#loc176 = loc(fused[#loc53, #loc54])
#loc177 = loc(fused[#loc58, #loc56])
#loc178 = loc(fused[#loc59, #loc60])
#loc179 = loc(fused[#loc62, #loc63])
#loc180 = loc(fused[#loc65, #loc66])
#loc181 = loc(fused[#loc64, #loc66])
#loc182 = loc(fused[#loc67, #loc66])
#loc183 = loc(fused[#loc70, #loc71])
#loc184 = loc(fused[#loc72, #loc71])
#loc185 = loc(fused[#loc73, #loc74])
#loc186 = loc(fused[#loc76, #loc75])
#loc187 = loc(fused[#loc77, #loc78])
#loc188 = loc(fused[#loc79, #loc74])
#loc189 = loc(fused[#loc81, #loc80])
#loc190 = loc(fused[#loc85, #loc84])
#loc191 = loc(fused[#loc91, #loc92])
#loc192 = loc(fused[#loc93, #loc94])
#loc193 = loc(fused[#loc95, #loc96])
#loc194 = loc(fused[#loc97, #loc98])
#loc195 = loc(fused[#loc97, #loc99])
#loc196 = loc(fused[#loc100, #loc101])
#loc197 = loc(fused[#loc102, #loc103])
#loc198 = loc(fused[#loc104, #loc105])
#loc199 = loc(fused[#loc106, #loc107])
#loc200 = loc(fused[#loc110, #loc108])
#loc201 = loc(fused[#loc111, #loc112])
#loc202 = loc(fused[#loc115, #loc114])
#loc203 = loc(fused[#loc118, #loc116])
#loc204 = loc(fused[#loc119, #loc120])
#loc205 = loc(fused[#loc122, #loc123])
#loc206 = loc(fused[#loc125, #loc126])
#loc207 = loc(fused[#loc124, #loc126])
#loc208 = loc(fused[#loc127, #loc126])
#loc209 = loc(fused[#loc130, #loc131])
#loc210 = loc(fused[#loc132, #loc131])
#loc211 = loc(fused[#loc133, #loc134])
#loc212 = loc(fused[#loc136, #loc135])
#loc213 = loc(fused[#loc137, #loc138])
#loc214 = loc(fused[#loc139, #loc134])
#loc215 = loc(fused[#loc141, #loc140])
#loc216 = loc(fused[#loc145, #loc144])
#loc217 = loc(fused[#loc151, #loc152])
