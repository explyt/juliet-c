!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":73:10)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":73:14)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":73:20)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":73:32)
#loc101 = loc(fused[#loc43, #loc44])
#loc102 = loc(fused[#loc45, #loc46])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fread(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc84)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc85)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc86)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fread failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc88)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc89)
    cir.br ^bb1 loc(#loc90)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc88)
    cir.store %2, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc88)
    %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc13)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc89)
    cir.br ^bb2 loc(#loc91)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @fread : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc18)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc92)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc93)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc23)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc23)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc23)
    %12 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc85)
    %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc25)
    %14 = cir.call @fread(%6, %7, %11, %13) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc18)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc26)
    %17 = cir.cmp(eq, %14, %16) : !u64i, !cir.bool loc(#loc94)
    cir.brcond %17 ^bb3, ^bb4 loc(#loc95)
  ^bb3:  // pred: ^bb2
    %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc7)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc28)
    cir.br ^bb4 loc(#loc17)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc17)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc15)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc9)
  } loc(#loc87)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc97)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc31)
    cir.return loc(#loc30)
  } loc(#loc96)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc98)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc99)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc37)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc38)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc39)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc40)
  cir.func @main(%arg0: !s32i loc(fused[#loc43, #loc44]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc45, #loc46])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc101)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc102)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc42)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc47)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc47)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc48)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc49)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc49)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc50)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc37)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    %8 = cir.get_global @CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01_good : !cir.ptr<!cir.func<!void ()>> loc(#loc103)
    cir.call @CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01_good() : () -> () loc(#loc52)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc38)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc39)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    %13 = cir.get_global @CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc104)
    cir.call @CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01_bad() : () -> () loc(#loc56)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc40)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc59)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc105)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    cir.return %17 : !s32i loc(#loc105)
  } loc(#loc100)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc107)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc108)
    cir.br ^bb1 loc(#loc109)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc107)
    cir.store %2, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc107)
    %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc66)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc108)
    cir.br ^bb2 loc(#loc110)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @fread : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc71)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc111)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc112)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc76)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc77)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc76)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc76)
    %12 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc85)
    %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc78)
    %14 = cir.call @fread(%6, %7, %11, %13) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc71)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc79)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc80)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc79)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc79)
    %19 = cir.cmp(ne, %14, %18) : !u64i, !cir.bool loc(#loc113)
    cir.brcond %19 ^bb3, ^bb4 loc(#loc114)
  ^bb3:  // pred: ^bb2
    %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc82)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    cir.br ^bb4 loc(#loc70)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc70)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc68)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc62)
  } loc(#loc106)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":0:0)
#loc1 = loc("/usr/include/stdio.h":728:1)
#loc2 = loc("/usr/include/stdio.h":730:3)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":35:23)
#loc8 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":24:1)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":38:1)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":29:9)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":29:32)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":30:9)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":30:23)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":26:5)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":37:5)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":33:9)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":36:9)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":33:13)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":33:27)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":33:19)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":33:33)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":33:44)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":33:56)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":33:60)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":33:64)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":33:74)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":34:9)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":35:13)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":59:1)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":62:1)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":61:5)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":61:11)
#loc33 = loc("/usr/include/stdlib.h":575:1)
#loc34 = loc("/usr/include/stdlib.h":575:41)
#loc35 = loc("/usr/include/time.h":76:1)
#loc36 = loc("/usr/include/time.h":76:38)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":78:15)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":80:15)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":83:15)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":85:15)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":73:1)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":88:1)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":74:1)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":76:27)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":76:22)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":76:5)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":78:5)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":79:5)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":79:73)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":80:5)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":83:5)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":84:5)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":84:72)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":85:5)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":87:12)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":87:5)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":44:1)
#loc62 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":57:1)
#loc63 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":49:9)
#loc64 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":49:32)
#loc65 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":50:9)
#loc66 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":50:23)
#loc67 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":46:5)
#loc68 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":56:5)
#loc69 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":52:9)
#loc70 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":55:9)
#loc71 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":52:13)
#loc72 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":52:27)
#loc73 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":52:19)
#loc74 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":52:33)
#loc75 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":52:44)
#loc76 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":52:56)
#loc77 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":52:60)
#loc78 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":52:64)
#loc79 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":52:74)
#loc80 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":52:78)
#loc81 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":53:9)
#loc82 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":54:23)
#loc83 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_01.c":54:13)
#loc84 = loc(fused[#loc1, #loc2])
#loc85 = loc(fused[#loc3, #loc4])
#loc86 = loc(fused[#loc5, #loc6])
#loc87 = loc(fused[#loc8, #loc9])
#loc88 = loc(fused[#loc10, #loc11])
#loc89 = loc(fused[#loc12, #loc13])
#loc90 = loc(fused[#loc14, #loc15])
#loc91 = loc(fused[#loc16, #loc17])
#loc92 = loc(fused[#loc20, #loc19])
#loc93 = loc(fused[#loc21, #loc22])
#loc94 = loc(fused[#loc18, #loc26])
#loc95 = loc(fused[#loc27, #loc17])
#loc96 = loc(fused[#loc29, #loc30])
#loc97 = loc(fused[#loc31, #loc32])
#loc98 = loc(fused[#loc33, #loc34])
#loc99 = loc(fused[#loc35, #loc36])
#loc100 = loc(fused[#loc41, #loc42])
#loc103 = loc(fused[#loc52, #loc53])
#loc104 = loc(fused[#loc56, #loc57])
#loc105 = loc(fused[#loc60, #loc59])
#loc106 = loc(fused[#loc61, #loc62])
#loc107 = loc(fused[#loc63, #loc64])
#loc108 = loc(fused[#loc65, #loc66])
#loc109 = loc(fused[#loc67, #loc68])
#loc110 = loc(fused[#loc69, #loc70])
#loc111 = loc(fused[#loc73, #loc72])
#loc112 = loc(fused[#loc74, #loc75])
#loc113 = loc(fused[#loc71, #loc80])
#loc114 = loc(fused[#loc81, #loc70])
