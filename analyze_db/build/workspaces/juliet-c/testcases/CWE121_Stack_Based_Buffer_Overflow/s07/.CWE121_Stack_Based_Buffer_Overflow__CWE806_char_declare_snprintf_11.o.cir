!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s07/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc129)
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc130)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc131)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc132)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc134)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc135)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc136)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc18)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc137)
    cir.br ^bb1 loc(#loc138)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc139)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc139)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc22)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc22)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc140)
  ^bb2:  // pred: ^bb1
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc25)
    %10 = cir.const #cir.int<65> : !s32i loc(#loc26)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc27)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc27)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc27)
    cir.libc.memset %14 bytes from %9 set to %10 : !cir.ptr<!void>, !s32i, !u64i loc(#loc141)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc31)
    %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc31)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    %18 = cir.const #cir.int<100> : !s32i loc(#loc33)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc33)
    %21 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc35)
    cir.store %16, %21 : !s8i, !cir.ptr<!s8i> loc(#loc142)
    cir.br ^bb3 loc(#loc21)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc21)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc143)
  ^bb5:  // pred: ^bb4
    %22 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc134)
    cir.store %22, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc134)
    %23 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc38)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc39)
    %25 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc40)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
    %27 = cir.call @strlen(%26) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc40)
    %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc7)
    %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc7)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    %31 = cir.call @snprintf(%24, %27, %29, %30) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc38)
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc44)
    cir.br ^bb6 loc(#loc37)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc11)
  } loc(#loc133)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc145)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc47)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc146)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc49)
    cir.return loc(#loc46)
  } loc(#loc144)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc147)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc53)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc149)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc150)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc151)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc62)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
    cir.br ^bb1 loc(#loc153)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc154)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc154)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc66)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc66)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc155)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc53)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    cir.br ^bb4 loc(#loc69)
  ^bb3:  // pred: ^bb1
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc72)
    %12 = cir.const #cir.int<65> : !s32i loc(#loc73)
    %13 = cir.const #cir.int<50> : !s32i loc(#loc74)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc75)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc74)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc74)
    cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc156)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc78)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc78)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
    %20 = cir.const #cir.int<50> : !s32i loc(#loc80)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc81)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc80)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc82)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc157)
    cir.br ^bb4 loc(#loc65)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc65)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc158)
  ^bb6:  // pred: ^bb5
    %24 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc149)
    cir.store %24, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc149)
    %25 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc85)
    %26 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc86)
    %27 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc87)
    %28 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    %29 = cir.call @strlen(%28) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc87)
    %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc89)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc89)
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
    %33 = cir.call @snprintf(%26, %29, %31, %32) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc85)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
    cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    cir.br ^bb7 loc(#loc84)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc55)
  } loc(#loc148)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc160)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc161)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc162)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc101)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc163)
    cir.br ^bb1 loc(#loc164)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc165)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc165)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc105)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc105)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc166)
  ^bb2:  // pred: ^bb1
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc108)
    %10 = cir.const #cir.int<65> : !s32i loc(#loc109)
    %11 = cir.const #cir.int<50> : !s32i loc(#loc110)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc110)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc110)
    cir.libc.memset %14 bytes from %9 set to %10 : !cir.ptr<!void>, !s32i, !u64i loc(#loc167)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc114)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
    %18 = cir.const #cir.int<50> : !s32i loc(#loc116)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc117)
    %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc116)
    %21 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc118)
    cir.store %16, %21 : !s8i, !cir.ptr<!s8i> loc(#loc168)
    cir.br ^bb3 loc(#loc104)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc104)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc169)
  ^bb5:  // pred: ^bb4
    %22 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc160)
    cir.store %22, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc160)
    %23 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc121)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc122)
    %25 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc123)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
    %27 = cir.call @strlen(%26) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc123)
    %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc125)
    %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc125)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
    %31 = cir.call @snprintf(%24, %27, %29, %30) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc121)
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
    cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc128)
    cir.br ^bb6 loc(#loc120)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc94)
  } loc(#loc159)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s07/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/stdio.h":385:1)
#loc4 = loc("/usr/include/stdio.h":387:62)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":43:38)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":29:1)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":46:1)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":41:9)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":41:25)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":31:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":31:12)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":32:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":32:24)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":33:12)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":33:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":34:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":39:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":34:8)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":34:26)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":35:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":37:16)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":37:22)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":37:27)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":37:31)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":37:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":37:32)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":38:23)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":38:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":38:14)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":38:18)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":38:19)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":40:5)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":45:5)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":43:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":43:18)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":43:24)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":43:31)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":43:44)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":44:19)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":44:9)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":97:1)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":101:1)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":99:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":99:14)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":100:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":100:14)
#loc51 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc52 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":61:19)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":53:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":75:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":70:9)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":70:25)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":55:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":55:12)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":56:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":56:24)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":57:12)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":57:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":58:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":68:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":58:8)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":58:27)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":59:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":62:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":64:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":61:9)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":66:16)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":66:22)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":66:27)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":66:30)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":66:9)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":66:31)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":67:22)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":67:9)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":67:14)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":67:17)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":67:18)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":69:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":74:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":72:9)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":72:18)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":72:24)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":72:31)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":72:38)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":72:44)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":73:19)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":73:9)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":78:1)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":95:1)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":90:9)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":90:25)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":80:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":80:12)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":81:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":81:24)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":82:12)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":82:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":83:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":88:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":83:8)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":83:26)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":84:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":86:16)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":86:22)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":86:27)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":86:30)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":86:9)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":86:31)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":87:22)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":87:9)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":87:14)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":87:17)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":87:18)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":89:5)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":94:5)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":92:9)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":92:18)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":92:24)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":92:31)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":92:38)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":92:44)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":93:19)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_11.c":93:9)
#loc129 = loc(fused[#loc1, #loc2])
#loc130 = loc(fused[#loc3, #loc4])
#loc131 = loc(fused[#loc5, #loc6])
#loc132 = loc(fused[#loc8, #loc9])
#loc133 = loc(fused[#loc10, #loc11])
#loc134 = loc(fused[#loc12, #loc13])
#loc135 = loc(fused[#loc14, #loc15])
#loc136 = loc(fused[#loc16, #loc17])
#loc137 = loc(fused[#loc19, #loc18])
#loc138 = loc(fused[#loc20, #loc21])
#loc139 = loc(fused[#loc22, #loc23])
#loc140 = loc(fused[#loc24, #loc21])
#loc141 = loc(fused[#loc29, #loc30])
#loc142 = loc(fused[#loc32, #loc31])
#loc143 = loc(fused[#loc36, #loc37])
#loc144 = loc(fused[#loc45, #loc46])
#loc145 = loc(fused[#loc47, #loc48])
#loc146 = loc(fused[#loc49, #loc50])
#loc147 = loc(fused[#loc51, #loc52])
#loc148 = loc(fused[#loc54, #loc55])
#loc149 = loc(fused[#loc56, #loc57])
#loc150 = loc(fused[#loc58, #loc59])
#loc151 = loc(fused[#loc60, #loc61])
#loc152 = loc(fused[#loc63, #loc62])
#loc153 = loc(fused[#loc64, #loc65])
#loc154 = loc(fused[#loc66, #loc67])
#loc155 = loc(fused[#loc68, #loc69, #loc70, #loc65])
#loc156 = loc(fused[#loc76, #loc77])
#loc157 = loc(fused[#loc79, #loc78])
#loc158 = loc(fused[#loc83, #loc84])
#loc159 = loc(fused[#loc93, #loc94])
#loc160 = loc(fused[#loc95, #loc96])
#loc161 = loc(fused[#loc97, #loc98])
#loc162 = loc(fused[#loc99, #loc100])
#loc163 = loc(fused[#loc102, #loc101])
#loc164 = loc(fused[#loc103, #loc104])
#loc165 = loc(fused[#loc105, #loc106])
#loc166 = loc(fused[#loc107, #loc104])
#loc167 = loc(fused[#loc112, #loc113])
#loc168 = loc(fused[#loc115, #loc114])
#loc169 = loc(fused[#loc119, #loc120])
