!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc296 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":166:27)
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc324)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc325)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc326)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc327)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc328)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc329)
  cir.func private @printIntLine(!s32i) loc(#loc330)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc16)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc331)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc333)
    %1 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc334)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc335)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc336)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc337)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc338)
    %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc339)
    %7 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc340)
    cir.store %5, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc339)
    cir.store %5, %7 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc340)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc38)
    cir.store %9, %5 : !s32i, !cir.ptr<!s32i> loc(#loc341)
    cir.br ^bb1 loc(#loc342)
  ^bb1:  // pred: ^bb0
    %10 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc22)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc42)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc333)
    cir.br ^bb2 loc(#loc343)
  ^bb2:  // pred: ^bb1
    %12 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc334)
    cir.store %12, %1 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc334)
    cir.br ^bb3 loc(#loc344)
  ^bb3:  // pred: ^bb2
    %13 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc47)
    %14 = cir.const #cir.int<3> : !s32i loc(#loc48)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc48)
    %16 = cir.const #cir.int<4> : !u64i loc(#loc48)
    %17 = cir.binop(mul, %15, %16) : !u64i loc(#loc48)
    %18 = cir.const #cir.int<2> : !s32i loc(#loc48)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc48)
    %20 = cir.binop(add, %17, %19) : !u64i loc(#loc48)
    %21 = cir.cast(integral, %20 : !u64i), !s32i loc(#loc48)
    %22 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc325)
    %23 = cir.load %22 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc49)
    %24 = cir.call @fgets(%13, %21, %23) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc50)
    %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc51)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc51)
    %27 = cir.cmp(ne, %24, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc345)
    cir.brcond %27 ^bb4, ^bb5 loc(#loc346)
  ^bb4:  // pred: ^bb3
    %28 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc55)
    %29 = cir.call @atoi(%28) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc56)
    cir.store %29, %0 : !s32i, !cir.ptr<!s32i> loc(#loc347)
    cir.br ^bb6 loc(#loc53)
  ^bb5:  // pred: ^bb3
    %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    cir.br ^bb6 loc(#loc46)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc46)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc44)
  ^bb8:  // pred: ^bb7
    %32 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc60)
    %33 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc61)
    cir.store %32, %33 : !s32i, !cir.ptr<!s32i> loc(#loc348)
    cir.br ^bb9 loc(#loc41)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc349)
  ^bb10:  // pred: ^bb9
    %34 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc26)
    %35 = cir.load %34 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    cir.store %35, %2 : !s32i, !cir.ptr<!s32i> loc(#loc335)
    cir.br ^bb11 loc(#loc350)
  ^bb11:  // pred: ^bb10
    %36 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc68)
    %37 = cir.const #cir.int<10> : !s32i loc(#loc69)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc69)
    %39 = cir.const #cir.int<4> : !u64i loc(#loc351)
    %40 = cir.binop(mul, %38, %39) : !u64i loc(#loc352)
    %41 = cir.call @malloc(%40) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc68)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc353)
    cir.store %42, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc337)
    cir.br ^bb12 loc(#loc354)
  ^bb12:  // pred: ^bb11
    %43 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc74)
    %44 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc75)
    %45 = cir.cast(bitcast, %44 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc75)
    %46 = cir.cmp(eq, %43, %45) : !cir.ptr<!s32i>, !cir.bool loc(#loc355)
    cir.brcond %46 ^bb13, ^bb14 loc(#loc356)
  ^bb13:  // pred: ^bb12
    %47 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc77)
    %48 = cir.const #cir.int<1> : !s32i loc(#loc78)
    %49 = cir.unary(minus, %48) : !s32i, !s32i loc(#loc79)
    cir.call @exit(%49) : (!s32i) -> () extra(#fn_attr) loc(#loc77)
    cir.br ^bb14 loc(#loc73)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc73)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc357)
  ^bb16:  // pred: ^bb15
    %50 = cir.const #cir.int<0> : !s32i loc(#loc82)
    cir.store %50, %3 : !s32i, !cir.ptr<!s32i> loc(#loc358)
    cir.br ^bb17 loc(#loc357)
  ^bb17:  // 2 preds: ^bb16, ^bb21
    %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc84)
    %52 = cir.const #cir.int<10> : !s32i loc(#loc85)
    %53 = cir.cmp(lt, %51, %52) : !s32i, !cir.bool loc(#loc359)
    cir.brcond %53 ^bb18, ^bb22 loc(#loc86)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc360)
  ^bb19:  // pred: ^bb18
    %54 = cir.const #cir.int<0> : !s32i loc(#loc88)
    %55 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc89)
    %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    %57 = cir.ptr_stride(%55 : !cir.ptr<!s32i>, %56 : !s32i), !cir.ptr<!s32i> loc(#loc91)
    cir.store %54, %57 : !s32i, !cir.ptr<!s32i> loc(#loc361)
    cir.br ^bb20 loc(#loc81)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc81)
  ^bb21:  // pred: ^bb20
    %58 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    %59 = cir.unary(inc, %58) : !s32i, !s32i loc(#loc93)
    cir.store %59, %3 : !s32i, !cir.ptr<!s32i> loc(#loc362)
    cir.br ^bb17 loc(#loc357)
  ^bb22:  // pred: ^bb17
    cir.br ^bb23 loc(#loc81)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc363)
  ^bb24:  // pred: ^bb23
    %60 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    %61 = cir.const #cir.int<0> : !s32i loc(#loc97)
    %62 = cir.cmp(ge, %60, %61) : !s32i, !cir.bool loc(#loc364)
    cir.brcond %62 ^bb25, ^bb34 loc(#loc365)
  ^bb25:  // pred: ^bb24
    %63 = cir.const #cir.int<1> : !s32i loc(#loc101)
    %64 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc102)
    %65 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %66 = cir.ptr_stride(%64 : !cir.ptr<!s32i>, %65 : !s32i), !cir.ptr<!s32i> loc(#loc104)
    cir.store %63, %66 : !s32i, !cir.ptr<!s32i> loc(#loc366)
    cir.br ^bb26 loc(#loc367)
  ^bb26:  // pred: ^bb25
    %67 = cir.const #cir.int<0> : !s32i loc(#loc107)
    cir.store %67, %3 : !s32i, !cir.ptr<!s32i> loc(#loc368)
    cir.br ^bb27 loc(#loc367)
  ^bb27:  // 2 preds: ^bb26, ^bb31
    %68 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %69 = cir.const #cir.int<10> : !s32i loc(#loc110)
    %70 = cir.cmp(lt, %68, %69) : !s32i, !cir.bool loc(#loc369)
    cir.brcond %70 ^bb28, ^bb32 loc(#loc111)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc370)
  ^bb29:  // pred: ^bb28
    %71 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc113)
    %72 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    %73 = cir.ptr_stride(%71 : !cir.ptr<!s32i>, %72 : !s32i), !cir.ptr<!s32i> loc(#loc115)
    %74 = cir.load %73 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    cir.call @printIntLine(%74) : (!s32i) -> () loc(#loc116)
    cir.br ^bb30 loc(#loc106)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc106)
  ^bb31:  // pred: ^bb30
    %75 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %76 = cir.unary(inc, %75) : !s32i, !s32i loc(#loc118)
    cir.store %76, %3 : !s32i, !cir.ptr<!s32i> loc(#loc371)
    cir.br ^bb27 loc(#loc367)
  ^bb32:  // pred: ^bb27
    cir.br ^bb33 loc(#loc106)
  ^bb33:  // pred: ^bb32
    cir.br ^bb35 loc(#loc99)
  ^bb34:  // pred: ^bb24
    %77 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc16)
    %78 = cir.cast(array_to_ptrdecay, %77 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc16)
    cir.call @printLine(%78) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    cir.br ^bb35 loc(#loc95)
  ^bb35:  // 2 preds: ^bb33, ^bb34
    cir.br ^bb36 loc(#loc95)
  ^bb36:  // pred: ^bb35
    %79 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc120)
    %80 = cir.cast(bitcast, %79 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc120)
    cir.call @free(%80) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc121)
    cir.br ^bb37 loc(#loc67)
  ^bb37:  // pred: ^bb36
    cir.br ^bb38 loc(#loc64)
  ^bb38:  // pred: ^bb37
    cir.return loc(#loc20)
  } loc(#loc332)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc373)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc124)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc374)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc126)
    cir.return loc(#loc123)
  } loc(#loc372)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc376)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc377)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc378)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc379)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc380)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc381)
    %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc382)
    cir.store %4, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc381)
    cir.store %4, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc382)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc144)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc145)
    cir.store %8, %4 : !s32i, !cir.ptr<!s32i> loc(#loc383)
    cir.br ^bb1 loc(#loc384)
  ^bb1:  // pred: ^bb0
    %9 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc131)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc376)
    %11 = cir.const #cir.int<7> : !s32i loc(#loc150)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc385)
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    %13 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc153)
    cir.store %12, %13 : !s32i, !cir.ptr<!s32i> loc(#loc386)
    cir.br ^bb2 loc(#loc148)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc387)
  ^bb3:  // pred: ^bb2
    %14 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc133)
    %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc157)
    cir.store %15, %1 : !s32i, !cir.ptr<!s32i> loc(#loc377)
    cir.br ^bb4 loc(#loc388)
  ^bb4:  // pred: ^bb3
    %16 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc160)
    %17 = cir.const #cir.int<10> : !s32i loc(#loc161)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc161)
    %19 = cir.const #cir.int<4> : !u64i loc(#loc389)
    %20 = cir.binop(mul, %18, %19) : !u64i loc(#loc390)
    %21 = cir.call @malloc(%20) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc160)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc391)
    cir.store %22, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc379)
    cir.br ^bb5 loc(#loc392)
  ^bb5:  // pred: ^bb4
    %23 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc166)
    %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc167)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc167)
    %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s32i>, !cir.bool loc(#loc393)
    cir.brcond %26 ^bb6, ^bb7 loc(#loc394)
  ^bb6:  // pred: ^bb5
    %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc169)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc170)
    %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc171)
    cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc169)
    cir.br ^bb7 loc(#loc165)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc165)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc395)
  ^bb9:  // pred: ^bb8
    %30 = cir.const #cir.int<0> : !s32i loc(#loc174)
    cir.store %30, %2 : !s32i, !cir.ptr<!s32i> loc(#loc396)
    cir.br ^bb10 loc(#loc395)
  ^bb10:  // 2 preds: ^bb9, ^bb14
    %31 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc176)
    %32 = cir.const #cir.int<10> : !s32i loc(#loc177)
    %33 = cir.cmp(lt, %31, %32) : !s32i, !cir.bool loc(#loc397)
    cir.brcond %33 ^bb11, ^bb15 loc(#loc178)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc398)
  ^bb12:  // pred: ^bb11
    %34 = cir.const #cir.int<0> : !s32i loc(#loc180)
    %35 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc181)
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc182)
    %37 = cir.ptr_stride(%35 : !cir.ptr<!s32i>, %36 : !s32i), !cir.ptr<!s32i> loc(#loc183)
    cir.store %34, %37 : !s32i, !cir.ptr<!s32i> loc(#loc399)
    cir.br ^bb13 loc(#loc173)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc173)
  ^bb14:  // pred: ^bb13
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc184)
    %39 = cir.unary(inc, %38) : !s32i, !s32i loc(#loc185)
    cir.store %39, %2 : !s32i, !cir.ptr<!s32i> loc(#loc400)
    cir.br ^bb10 loc(#loc395)
  ^bb15:  // pred: ^bb10
    cir.br ^bb16 loc(#loc173)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc401)
  ^bb17:  // pred: ^bb16
    %40 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc188)
    %41 = cir.const #cir.int<0> : !s32i loc(#loc189)
    %42 = cir.cmp(ge, %40, %41) : !s32i, !cir.bool loc(#loc402)
    cir.brcond %42 ^bb18, ^bb27 loc(#loc403)
  ^bb18:  // pred: ^bb17
    %43 = cir.const #cir.int<1> : !s32i loc(#loc193)
    %44 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc194)
    %45 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc195)
    %46 = cir.ptr_stride(%44 : !cir.ptr<!s32i>, %45 : !s32i), !cir.ptr<!s32i> loc(#loc196)
    cir.store %43, %46 : !s32i, !cir.ptr<!s32i> loc(#loc404)
    cir.br ^bb19 loc(#loc405)
  ^bb19:  // pred: ^bb18
    %47 = cir.const #cir.int<0> : !s32i loc(#loc199)
    cir.store %47, %2 : !s32i, !cir.ptr<!s32i> loc(#loc406)
    cir.br ^bb20 loc(#loc405)
  ^bb20:  // 2 preds: ^bb19, ^bb24
    %48 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc201)
    %49 = cir.const #cir.int<10> : !s32i loc(#loc202)
    %50 = cir.cmp(lt, %48, %49) : !s32i, !cir.bool loc(#loc407)
    cir.brcond %50 ^bb21, ^bb25 loc(#loc203)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc408)
  ^bb22:  // pred: ^bb21
    %51 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc205)
    %52 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc206)
    %53 = cir.ptr_stride(%51 : !cir.ptr<!s32i>, %52 : !s32i), !cir.ptr<!s32i> loc(#loc207)
    %54 = cir.load %53 : !cir.ptr<!s32i>, !s32i loc(#loc205)
    cir.call @printIntLine(%54) : (!s32i) -> () loc(#loc208)
    cir.br ^bb23 loc(#loc198)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc198)
  ^bb24:  // pred: ^bb23
    %55 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc209)
    %56 = cir.unary(inc, %55) : !s32i, !s32i loc(#loc210)
    cir.store %56, %2 : !s32i, !cir.ptr<!s32i> loc(#loc409)
    cir.br ^bb20 loc(#loc405)
  ^bb25:  // pred: ^bb20
    cir.br ^bb26 loc(#loc198)
  ^bb26:  // pred: ^bb25
    cir.br ^bb28 loc(#loc191)
  ^bb27:  // pred: ^bb17
    %57 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc211)
    %58 = cir.cast(array_to_ptrdecay, %57 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc211)
    cir.call @printLine(%58) : (!cir.ptr<!s8i>) -> () loc(#loc212)
    cir.br ^bb28 loc(#loc187)
  ^bb28:  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc187)
  ^bb29:  // pred: ^bb28
    %59 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc213)
    %60 = cir.cast(bitcast, %59 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc213)
    cir.call @free(%60) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc214)
    cir.br ^bb30 loc(#loc159)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc156)
  ^bb31:  // pred: ^bb30
    cir.return loc(#loc129)
  } loc(#loc375)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc215)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc411)
    %1 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc412)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc413)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc414)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc415)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc416)
    %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc417)
    %7 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc418)
    cir.store %5, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc417)
    cir.store %5, %7 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc418)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc234)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc235)
    cir.store %9, %5 : !s32i, !cir.ptr<!s32i> loc(#loc419)
    cir.br ^bb1 loc(#loc420)
  ^bb1:  // pred: ^bb0
    %10 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc219)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc239)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc411)
    cir.br ^bb2 loc(#loc421)
  ^bb2:  // pred: ^bb1
    %12 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc412)
    cir.store %12, %1 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc412)
    cir.br ^bb3 loc(#loc422)
  ^bb3:  // pred: ^bb2
    %13 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc244)
    %14 = cir.const #cir.int<3> : !s32i loc(#loc245)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc245)
    %16 = cir.const #cir.int<4> : !u64i loc(#loc245)
    %17 = cir.binop(mul, %15, %16) : !u64i loc(#loc245)
    %18 = cir.const #cir.int<2> : !s32i loc(#loc245)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc245)
    %20 = cir.binop(add, %17, %19) : !u64i loc(#loc245)
    %21 = cir.cast(integral, %20 : !u64i), !s32i loc(#loc245)
    %22 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc325)
    %23 = cir.load %22 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc246)
    %24 = cir.call @fgets(%13, %21, %23) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc247)
    %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc248)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc248)
    %27 = cir.cmp(ne, %24, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc423)
    cir.brcond %27 ^bb4, ^bb5 loc(#loc424)
  ^bb4:  // pred: ^bb3
    %28 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc252)
    %29 = cir.call @atoi(%28) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc253)
    cir.store %29, %0 : !s32i, !cir.ptr<!s32i> loc(#loc425)
    cir.br ^bb6 loc(#loc250)
  ^bb5:  // pred: ^bb3
    %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc256)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc256)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc257)
    cir.br ^bb6 loc(#loc243)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc243)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc241)
  ^bb8:  // pred: ^bb7
    %32 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc258)
    %33 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc259)
    cir.store %32, %33 : !s32i, !cir.ptr<!s32i> loc(#loc426)
    cir.br ^bb9 loc(#loc238)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc427)
  ^bb10:  // pred: ^bb9
    %34 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc223)
    %35 = cir.load %34 : !cir.ptr<!s32i>, !s32i loc(#loc263)
    cir.store %35, %2 : !s32i, !cir.ptr<!s32i> loc(#loc413)
    cir.br ^bb11 loc(#loc428)
  ^bb11:  // pred: ^bb10
    %36 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc266)
    %37 = cir.const #cir.int<10> : !s32i loc(#loc267)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc267)
    %39 = cir.const #cir.int<4> : !u64i loc(#loc429)
    %40 = cir.binop(mul, %38, %39) : !u64i loc(#loc430)
    %41 = cir.call @malloc(%40) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc266)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc431)
    cir.store %42, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc415)
    cir.br ^bb12 loc(#loc432)
  ^bb12:  // pred: ^bb11
    %43 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc272)
    %44 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc273)
    %45 = cir.cast(bitcast, %44 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc273)
    %46 = cir.cmp(eq, %43, %45) : !cir.ptr<!s32i>, !cir.bool loc(#loc433)
    cir.brcond %46 ^bb13, ^bb14 loc(#loc434)
  ^bb13:  // pred: ^bb12
    %47 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc275)
    %48 = cir.const #cir.int<1> : !s32i loc(#loc276)
    %49 = cir.unary(minus, %48) : !s32i, !s32i loc(#loc277)
    cir.call @exit(%49) : (!s32i) -> () extra(#fn_attr) loc(#loc275)
    cir.br ^bb14 loc(#loc271)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc271)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc435)
  ^bb16:  // pred: ^bb15
    %50 = cir.const #cir.int<0> : !s32i loc(#loc280)
    cir.store %50, %3 : !s32i, !cir.ptr<!s32i> loc(#loc436)
    cir.br ^bb17 loc(#loc435)
  ^bb17:  // 2 preds: ^bb16, ^bb21
    %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc282)
    %52 = cir.const #cir.int<10> : !s32i loc(#loc283)
    %53 = cir.cmp(lt, %51, %52) : !s32i, !cir.bool loc(#loc437)
    cir.brcond %53 ^bb18, ^bb22 loc(#loc284)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc438)
  ^bb19:  // pred: ^bb18
    %54 = cir.const #cir.int<0> : !s32i loc(#loc286)
    %55 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc287)
    %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc288)
    %57 = cir.ptr_stride(%55 : !cir.ptr<!s32i>, %56 : !s32i), !cir.ptr<!s32i> loc(#loc289)
    cir.store %54, %57 : !s32i, !cir.ptr<!s32i> loc(#loc439)
    cir.br ^bb20 loc(#loc279)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc279)
  ^bb21:  // pred: ^bb20
    %58 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc290)
    %59 = cir.unary(inc, %58) : !s32i, !s32i loc(#loc291)
    cir.store %59, %3 : !s32i, !cir.ptr<!s32i> loc(#loc440)
    cir.br ^bb17 loc(#loc435)
  ^bb22:  // pred: ^bb17
    cir.br ^bb23 loc(#loc279)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc441)
  ^bb24:  // pred: ^bb23
    %60 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc294)
    %61 = cir.const #cir.int<0> : !s32i loc(#loc295)
    %62 = cir.cmp(ge, %60, %61) : !s32i, !cir.bool loc(#loc442)
    cir.brcond %62 ^bb25, ^bb30 loc(#loc296)
  ^bb25:  // pred: ^bb24
    %63 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc297)
    %64 = cir.const #cir.int<10> : !s32i loc(#loc298)
    %65 = cir.cmp(lt, %63, %64) : !s32i, !cir.bool loc(#loc443)
    cir.brcond %65 ^bb26, ^bb27 loc(#loc296)
  ^bb26:  // pred: ^bb25
    %66 = cir.const #true loc(#loc296)
    cir.br ^bb28(%66 : !cir.bool) loc(#loc296)
  ^bb27:  // pred: ^bb25
    %67 = cir.const #false loc(#loc296)
    cir.br ^bb28(%67 : !cir.bool) loc(#loc296)
  ^bb28(%68: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":166:27)):  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc296)
  ^bb29:  // pred: ^bb28
    cir.br ^bb31(%68 : !cir.bool) loc(#loc296)
  ^bb30:  // pred: ^bb24
    %69 = cir.const #false loc(#loc296)
    cir.br ^bb31(%69 : !cir.bool) loc(#loc296)
  ^bb31(%70: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":166:27)):  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc296)
  ^bb32:  // pred: ^bb31
    cir.brcond %70 ^bb33, ^bb42 loc(#loc444)
  ^bb33:  // pred: ^bb32
    %71 = cir.const #cir.int<1> : !s32i loc(#loc303)
    %72 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc304)
    %73 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc305)
    %74 = cir.ptr_stride(%72 : !cir.ptr<!s32i>, %73 : !s32i), !cir.ptr<!s32i> loc(#loc306)
    cir.store %71, %74 : !s32i, !cir.ptr<!s32i> loc(#loc445)
    cir.br ^bb34 loc(#loc446)
  ^bb34:  // pred: ^bb33
    %75 = cir.const #cir.int<0> : !s32i loc(#loc309)
    cir.store %75, %3 : !s32i, !cir.ptr<!s32i> loc(#loc447)
    cir.br ^bb35 loc(#loc446)
  ^bb35:  // 2 preds: ^bb34, ^bb39
    %76 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc311)
    %77 = cir.const #cir.int<10> : !s32i loc(#loc312)
    %78 = cir.cmp(lt, %76, %77) : !s32i, !cir.bool loc(#loc448)
    cir.brcond %78 ^bb36, ^bb40 loc(#loc313)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc449)
  ^bb37:  // pred: ^bb36
    %79 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc315)
    %80 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc316)
    %81 = cir.ptr_stride(%79 : !cir.ptr<!s32i>, %80 : !s32i), !cir.ptr<!s32i> loc(#loc317)
    %82 = cir.load %81 : !cir.ptr<!s32i>, !s32i loc(#loc315)
    cir.call @printIntLine(%82) : (!s32i) -> () loc(#loc318)
    cir.br ^bb38 loc(#loc308)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc308)
  ^bb39:  // pred: ^bb38
    %83 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc319)
    %84 = cir.unary(inc, %83) : !s32i, !s32i loc(#loc320)
    cir.store %84, %3 : !s32i, !cir.ptr<!s32i> loc(#loc450)
    cir.br ^bb35 loc(#loc446)
  ^bb40:  // pred: ^bb35
    cir.br ^bb41 loc(#loc308)
  ^bb41:  // pred: ^bb40
    cir.br ^bb43 loc(#loc301)
  ^bb42:  // pred: ^bb32
    %85 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc215)
    %86 = cir.cast(array_to_ptrdecay, %85 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc215)
    cir.call @printLine(%86) : (!cir.ptr<!s8i>) -> () loc(#loc321)
    cir.br ^bb43 loc(#loc293)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc293)
  ^bb44:  // pred: ^bb43
    %87 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc322)
    %88 = cir.cast(bitcast, %87 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc322)
    cir.call @free(%88) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc323)
    cir.br ^bb45 loc(#loc265)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc262)
  ^bb46:  // pred: ^bb45
    cir.return loc(#loc217)
  } loc(#loc410)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":43:27)
#loc10 = loc("/usr/include/stdlib.h":672:1)
#loc11 = loc("/usr/include/stdlib.h":672:45)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":72:27)
#loc17 = loc("/usr/include/stdlib.h":687:1)
#loc18 = loc("/usr/include/stdlib.h":687:32)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":24:1)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":77:1)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":32:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":32:21)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":34:13)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":34:49)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":49:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":49:21)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":51:13)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":51:17)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":52:13)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":52:58)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":26:5)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":26:9)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":27:5)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":27:22)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":28:5)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":28:22)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":30:13)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":30:12)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":30:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":31:5)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":47:5)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":32:20)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":33:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":45:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":36:13)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":44:13)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":36:23)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":36:36)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":36:53)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":36:17)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":36:63)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":37:13)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":40:13)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":42:13)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":39:29)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":39:24)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":39:17)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":39:40)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":43:17)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":46:21)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":46:10)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":46:9)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":48:5)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":76:5)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":49:20)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":50:9)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":75:9)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":52:35)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":52:42)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":52:47)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":52:57)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":53:13)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":53:43)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":53:17)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":53:27)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":53:33)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":53:34)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":53:40)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":53:39)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":55:13)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":58:13)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":55:22)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":55:18)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":55:25)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":55:29)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":55:27)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":56:13)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":57:29)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":57:17)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":57:24)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":57:25)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":55:34)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":55:33)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":61:13)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":73:13)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":61:17)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":61:25)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":62:13)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":69:13)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":71:13)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":63:32)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":63:17)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":63:24)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":63:28)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":65:17)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":68:17)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":65:25)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":65:21)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":65:28)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":65:32)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":65:30)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":66:17)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":67:34)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":67:41)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":67:42)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":67:21)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":65:37)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":65:36)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":72:17)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":74:18)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":74:13)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":184:1)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":188:1)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":186:5)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":186:13)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":187:5)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":187:13)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":84:1)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":127:1)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":92:9)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":92:21)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":99:9)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":99:21)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":101:13)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":101:17)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":102:13)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":102:58)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":86:5)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":86:9)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":87:5)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":87:22)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":88:5)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":88:22)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":90:13)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":90:12)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":90:5)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":91:5)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":97:5)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":92:20)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":95:16)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":95:9)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":96:21)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":96:10)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":96:9)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":98:5)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":126:5)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":99:20)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":100:9)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":125:9)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":102:35)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":102:42)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":102:47)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":102:57)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":103:13)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":103:43)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":103:17)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":103:27)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":103:33)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":103:34)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":103:40)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":103:39)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":105:13)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":108:13)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":105:22)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":105:18)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":105:25)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":105:29)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":105:27)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":106:13)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":107:29)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":107:17)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":107:24)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":107:25)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":105:34)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":105:33)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":111:13)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":123:13)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":111:17)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":111:25)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":112:13)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":119:13)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":121:13)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":113:32)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":113:17)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":113:24)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":113:28)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":115:17)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":118:17)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":115:25)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":115:21)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":115:28)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":115:32)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":115:30)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":116:17)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":117:34)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":117:41)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":117:42)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":117:21)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":115:37)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":115:36)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":122:27)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":122:17)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":124:18)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":124:13)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":177:27)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":130:1)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":182:1)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":138:9)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":138:21)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":140:13)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":140:49)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":155:9)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":155:21)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":157:13)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":157:17)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":158:13)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":158:58)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":132:5)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":132:9)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":133:5)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":133:22)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":134:5)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":134:22)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":136:13)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":136:12)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":136:5)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":137:5)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":153:5)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":138:20)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":139:9)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":151:9)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":142:13)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":150:13)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":142:23)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":142:36)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":142:53)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":142:17)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":142:63)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":143:13)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":146:13)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":148:13)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":145:29)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":145:24)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":145:17)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":145:40)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":149:27)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":149:17)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":152:21)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":152:10)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":152:9)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":154:5)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":181:5)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":155:20)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":156:9)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":180:9)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":158:35)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":158:42)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":158:47)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":158:57)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":159:13)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":159:43)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":159:17)
#loc273 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":159:27)
#loc274 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":159:33)
#loc275 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":159:34)
#loc276 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":159:40)
#loc277 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":159:39)
#loc278 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":161:13)
#loc279 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":164:13)
#loc280 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":161:22)
#loc281 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":161:18)
#loc282 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":161:25)
#loc283 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":161:29)
#loc284 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":161:27)
#loc285 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":162:13)
#loc286 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":163:29)
#loc287 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":163:17)
#loc288 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":163:24)
#loc289 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":163:25)
#loc290 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":161:34)
#loc291 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":161:33)
#loc292 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":166:13)
#loc293 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":178:13)
#loc294 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":166:17)
#loc295 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":166:25)
#loc297 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":166:30)
#loc298 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":166:38)
#loc299 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":166:40)
#loc300 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":167:13)
#loc301 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":174:13)
#loc302 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":176:13)
#loc303 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":168:32)
#loc304 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":168:17)
#loc305 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":168:24)
#loc306 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":168:28)
#loc307 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":170:17)
#loc308 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":173:17)
#loc309 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":170:25)
#loc310 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":170:21)
#loc311 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":170:28)
#loc312 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":170:32)
#loc313 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":170:30)
#loc314 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":171:17)
#loc315 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":172:34)
#loc316 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":172:41)
#loc317 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":172:42)
#loc318 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":172:21)
#loc319 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":170:37)
#loc320 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":170:36)
#loc321 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":177:17)
#loc322 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":179:18)
#loc323 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_32.c":179:13)
#loc324 = loc(fused[#loc1, #loc2])
#loc325 = loc(fused[#loc3, #loc4])
#loc326 = loc(fused[#loc5, #loc6])
#loc327 = loc(fused[#loc7, #loc8])
#loc328 = loc(fused[#loc10, #loc11])
#loc329 = loc(fused[#loc12, #loc13])
#loc330 = loc(fused[#loc14, #loc15])
#loc331 = loc(fused[#loc17, #loc18])
#loc332 = loc(fused[#loc19, #loc20])
#loc333 = loc(fused[#loc21, #loc22])
#loc334 = loc(fused[#loc23, #loc24])
#loc335 = loc(fused[#loc25, #loc26])
#loc336 = loc(fused[#loc27, #loc28])
#loc337 = loc(fused[#loc29, #loc30])
#loc338 = loc(fused[#loc31, #loc32])
#loc339 = loc(fused[#loc33, #loc34])
#loc340 = loc(fused[#loc35, #loc36])
#loc341 = loc(fused[#loc39, #loc37])
#loc342 = loc(fused[#loc40, #loc41])
#loc343 = loc(fused[#loc43, #loc44])
#loc344 = loc(fused[#loc45, #loc46])
#loc345 = loc(fused[#loc50, #loc51])
#loc346 = loc(fused[#loc52, #loc53, #loc54, #loc46])
#loc347 = loc(fused[#loc57, #loc58])
#loc348 = loc(fused[#loc62, #loc60])
#loc349 = loc(fused[#loc63, #loc64])
#loc350 = loc(fused[#loc66, #loc67])
#loc351 = loc(fused[#loc70, #loc71])
#loc352 = loc(fused[#loc69, #loc71])
#loc353 = loc(fused[#loc68, #loc30])
#loc354 = loc(fused[#loc72, #loc73])
#loc355 = loc(fused[#loc74, #loc75])
#loc356 = loc(fused[#loc76, #loc73])
#loc357 = loc(fused[#loc80, #loc81])
#loc358 = loc(fused[#loc83, #loc82])
#loc359 = loc(fused[#loc84, #loc85])
#loc360 = loc(fused[#loc87, #loc81])
#loc361 = loc(fused[#loc89, #loc88])
#loc362 = loc(fused[#loc93, #loc92])
#loc363 = loc(fused[#loc94, #loc95])
#loc364 = loc(fused[#loc96, #loc97])
#loc365 = loc(fused[#loc98, #loc99, #loc100, #loc95])
#loc366 = loc(fused[#loc102, #loc101])
#loc367 = loc(fused[#loc105, #loc106])
#loc368 = loc(fused[#loc108, #loc107])
#loc369 = loc(fused[#loc109, #loc110])
#loc370 = loc(fused[#loc112, #loc106])
#loc371 = loc(fused[#loc118, #loc117])
#loc372 = loc(fused[#loc122, #loc123])
#loc373 = loc(fused[#loc124, #loc125])
#loc374 = loc(fused[#loc126, #loc127])
#loc375 = loc(fused[#loc128, #loc129])
#loc376 = loc(fused[#loc130, #loc131])
#loc377 = loc(fused[#loc132, #loc133])
#loc378 = loc(fused[#loc134, #loc135])
#loc379 = loc(fused[#loc136, #loc137])
#loc380 = loc(fused[#loc138, #loc139])
#loc381 = loc(fused[#loc140, #loc141])
#loc382 = loc(fused[#loc142, #loc143])
#loc383 = loc(fused[#loc146, #loc144])
#loc384 = loc(fused[#loc147, #loc148])
#loc385 = loc(fused[#loc151, #loc150])
#loc386 = loc(fused[#loc154, #loc152])
#loc387 = loc(fused[#loc155, #loc156])
#loc388 = loc(fused[#loc158, #loc159])
#loc389 = loc(fused[#loc162, #loc163])
#loc390 = loc(fused[#loc161, #loc163])
#loc391 = loc(fused[#loc160, #loc137])
#loc392 = loc(fused[#loc164, #loc165])
#loc393 = loc(fused[#loc166, #loc167])
#loc394 = loc(fused[#loc168, #loc165])
#loc395 = loc(fused[#loc172, #loc173])
#loc396 = loc(fused[#loc175, #loc174])
#loc397 = loc(fused[#loc176, #loc177])
#loc398 = loc(fused[#loc179, #loc173])
#loc399 = loc(fused[#loc181, #loc180])
#loc400 = loc(fused[#loc185, #loc184])
#loc401 = loc(fused[#loc186, #loc187])
#loc402 = loc(fused[#loc188, #loc189])
#loc403 = loc(fused[#loc190, #loc191, #loc192, #loc187])
#loc404 = loc(fused[#loc194, #loc193])
#loc405 = loc(fused[#loc197, #loc198])
#loc406 = loc(fused[#loc200, #loc199])
#loc407 = loc(fused[#loc201, #loc202])
#loc408 = loc(fused[#loc204, #loc198])
#loc409 = loc(fused[#loc210, #loc209])
#loc410 = loc(fused[#loc216, #loc217])
#loc411 = loc(fused[#loc218, #loc219])
#loc412 = loc(fused[#loc220, #loc221])
#loc413 = loc(fused[#loc222, #loc223])
#loc414 = loc(fused[#loc224, #loc225])
#loc415 = loc(fused[#loc226, #loc227])
#loc416 = loc(fused[#loc228, #loc229])
#loc417 = loc(fused[#loc230, #loc231])
#loc418 = loc(fused[#loc232, #loc233])
#loc419 = loc(fused[#loc236, #loc234])
#loc420 = loc(fused[#loc237, #loc238])
#loc421 = loc(fused[#loc240, #loc241])
#loc422 = loc(fused[#loc242, #loc243])
#loc423 = loc(fused[#loc247, #loc248])
#loc424 = loc(fused[#loc249, #loc250, #loc251, #loc243])
#loc425 = loc(fused[#loc254, #loc255])
#loc426 = loc(fused[#loc260, #loc258])
#loc427 = loc(fused[#loc261, #loc262])
#loc428 = loc(fused[#loc264, #loc265])
#loc429 = loc(fused[#loc268, #loc269])
#loc430 = loc(fused[#loc267, #loc269])
#loc431 = loc(fused[#loc266, #loc227])
#loc432 = loc(fused[#loc270, #loc271])
#loc433 = loc(fused[#loc272, #loc273])
#loc434 = loc(fused[#loc274, #loc271])
#loc435 = loc(fused[#loc278, #loc279])
#loc436 = loc(fused[#loc281, #loc280])
#loc437 = loc(fused[#loc282, #loc283])
#loc438 = loc(fused[#loc285, #loc279])
#loc439 = loc(fused[#loc287, #loc286])
#loc440 = loc(fused[#loc291, #loc290])
#loc441 = loc(fused[#loc292, #loc293])
#loc442 = loc(fused[#loc294, #loc295])
#loc443 = loc(fused[#loc297, #loc299])
#loc444 = loc(fused[#loc300, #loc301, #loc302, #loc293])
#loc445 = loc(fused[#loc304, #loc303])
#loc446 = loc(fused[#loc307, #loc308])
#loc447 = loc(fused[#loc310, #loc309])
#loc448 = loc(fused[#loc311, #loc312])
#loc449 = loc(fused[#loc314, #loc308])
#loc450 = loc(fused[#loc320, #loc319])
