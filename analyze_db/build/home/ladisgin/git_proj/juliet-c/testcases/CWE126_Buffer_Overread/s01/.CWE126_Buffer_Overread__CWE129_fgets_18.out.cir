!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc72 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":145:10)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":145:14)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":145:20)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":145:32)
#true = #cir.bool<true> : !cir.bool
#loc193 = loc(fused[#loc72, #loc73])
#loc194 = loc(fused[#loc74, #loc75])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc168)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc169)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc170)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc171)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc172)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc12)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_fgets_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc174)
    %1 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc175)
    %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc176)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc22)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    cir.goto "source" loc(#loc178)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc26)
    %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc175)
    cir.store %5, %1 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc175)
    cir.scope {
      %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc29)
      %8 = cir.const #cir.int<3> : !s32i loc(#loc30)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc30)
      %10 = cir.const #cir.int<4> : !u64i loc(#loc30)
      %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc30)
      %12 = cir.const #cir.int<2> : !s32i loc(#loc30)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc30)
      %14 = cir.binop(add, %11, %13) : !u64i loc(#loc30)
      %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc30)
      %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc169)
      %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc31)
      %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc32)
      %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc33)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc33)
      %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc180)
      cir.if %21 {
        %22 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc37)
        %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc38)
        cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc182)
      } else {
        %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
        %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
        cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc41)
      } loc(#loc181)
    } loc(#loc179)
    cir.goto "sink" loc(#loc183)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc44)
    %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc176)
    cir.store %6, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc176)
    cir.scope {
      %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc47)
      %8 = cir.const #cir.int<0> : !s32i loc(#loc48)
      %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc185)
      cir.if %9 {
        %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc52)
        %11 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc53)
        %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc53)
        %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc53)
        cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc54)
      } else {
        %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc12)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc12)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc55)
      } loc(#loc186)
    } loc(#loc184)
    cir.return loc(#loc14)
  } loc(#loc173)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_fgets_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc188)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc189)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    cir.return loc(#loc57)
  } loc(#loc187)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc190)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc191)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc69)
  cir.func @main(%arg0: !s32i loc(fused[#loc72, #loc73]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc74, #loc75])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc193)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc194)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc71)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc76)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc76)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc77)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc78)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc78)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc79)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc66)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %8 = cir.get_global @CWE126_Buffer_Overread__CWE129_fgets_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc195)
    cir.call @CWE126_Buffer_Overread__CWE129_fgets_18_good() : () -> () loc(#loc81)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc67)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc68)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %13 = cir.get_global @CWE126_Buffer_Overread__CWE129_fgets_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc196)
    cir.call @CWE126_Buffer_Overread__CWE129_fgets_18_bad() : () -> () loc(#loc85)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc69)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc88)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc197)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc197)
    cir.return %17 : !s32i loc(#loc197)
  } loc(#loc192)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc90)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc199)
    %1 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc200)
    %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc201)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc100)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc202)
    cir.goto "source" loc(#loc203)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc104)
    %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc200)
    cir.store %5, %1 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc200)
    cir.scope {
      %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc107)
      %8 = cir.const #cir.int<3> : !s32i loc(#loc108)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc108)
      %10 = cir.const #cir.int<4> : !u64i loc(#loc108)
      %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc108)
      %12 = cir.const #cir.int<2> : !s32i loc(#loc108)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc108)
      %14 = cir.binop(add, %11, %13) : !u64i loc(#loc108)
      %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc108)
      %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc169)
      %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc109)
      %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc110)
      %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc111)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc111)
      %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc205)
      cir.if %21 {
        %22 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc115)
        %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc116)
        cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc207)
      } else {
        %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc119)
        %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc119)
        cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc120)
      } loc(#loc206)
    } loc(#loc204)
    cir.goto "sink" loc(#loc208)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc123)
    %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc201)
    cir.store %6, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc201)
    cir.scope {
      %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc126)
      %8 = cir.const #cir.int<0> : !s32i loc(#loc127)
      %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc210)
      %10 = cir.ternary(%9, true {
        %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc129)
        %12 = cir.const #cir.int<10> : !s32i loc(#loc130)
        %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc211)
        %14 = cir.ternary(%13, true {
          %15 = cir.const #true loc(#loc128)
          cir.yield %15 : !cir.bool loc(#loc128)
        }, false {
          %15 = cir.const #false loc(#loc128)
          cir.yield %15 : !cir.bool loc(#loc128)
        }) : (!cir.bool) -> !cir.bool loc(#loc128)
        cir.yield %14 : !cir.bool loc(#loc128)
      }, false {
        %11 = cir.const #false loc(#loc128)
        cir.yield %11 : !cir.bool loc(#loc128)
      }) : (!cir.bool) -> !cir.bool loc(#loc128)
      cir.if %10 {
        %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc135)
        %12 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc136)
        %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc136)
        %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc136)
        cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc137)
      } else {
        %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc90)
        %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc90)
        cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc138)
      } loc(#loc212)
    } loc(#loc209)
    cir.return loc(#loc92)
  } loc(#loc198)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc214)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc215)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc145)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc146)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc216)
    cir.goto "source" loc(#loc217)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc150)
    %4 = cir.const #cir.int<7> : !s32i loc(#loc151)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc218)
    cir.goto "sink" loc(#loc219)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc155)
    %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc215)
    cir.store %5, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc215)
    cir.scope {
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc158)
      %7 = cir.const #cir.int<0> : !s32i loc(#loc159)
      %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc221)
      cir.if %8 {
        %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc163)
        %10 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc164)
        %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc164)
        %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc164)
        cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc165)
      } else {
        %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc166)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc166)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc167)
      } loc(#loc222)
    } loc(#loc220)
    cir.return loc(#loc140)
  } loc(#loc213)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_18.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":41:23)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":56:23)
#loc13 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":24:1)
#loc14 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":59:1)
#loc15 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":26:5)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":26:9)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":32:9)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":32:45)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":47:9)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":47:30)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":28:13)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":28:12)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":28:5)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":29:5)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":29:10)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":30:1)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":34:9)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":42:9)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":34:19)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":34:32)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":34:49)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":34:13)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":34:59)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":35:9)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":38:9)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":40:9)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":37:25)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":37:20)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":37:13)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":37:36)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":41:13)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":44:5)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":44:10)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":45:1)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":50:9)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":57:9)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":50:13)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":50:21)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":51:9)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":53:9)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":55:9)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":52:33)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":52:26)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":52:13)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":56:13)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":130:1)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":134:1)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":132:5)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":132:13)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":133:5)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":133:13)
#loc62 = loc("/usr/include/stdlib.h":575:1)
#loc63 = loc("/usr/include/stdlib.h":575:41)
#loc64 = loc("/usr/include/time.h":76:1)
#loc65 = loc("/usr/include/time.h":76:38)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":150:15)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":152:15)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":155:15)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":157:15)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":145:1)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":160:1)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":146:1)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":148:27)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":148:22)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":148:5)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":150:5)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":151:5)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":151:50)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":152:5)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":155:5)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":156:5)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":156:49)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":157:5)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":159:12)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":159:5)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":97:23)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":66:1)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":100:1)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":68:5)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":68:9)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":74:9)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":74:45)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":89:9)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":89:30)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":70:13)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":70:12)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":70:5)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":71:5)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":71:10)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":72:1)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":76:9)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":84:9)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":76:19)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":76:32)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":76:49)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":76:13)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":76:59)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":77:9)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":80:9)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":82:9)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":79:25)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":79:20)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":79:13)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":79:36)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":83:23)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":83:13)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":86:5)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":86:10)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":87:1)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":91:9)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":98:9)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":91:13)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":91:21)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":91:23)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":91:26)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":91:34)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":91:36)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":92:9)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":94:9)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":96:9)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":93:33)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":93:26)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":93:13)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":97:13)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":103:1)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":128:1)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":105:5)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":105:9)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":116:9)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":116:30)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":107:13)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":107:12)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":107:5)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":108:5)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":108:10)
#loc150 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":109:1)
#loc151 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":112:12)
#loc152 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":112:5)
#loc153 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":113:5)
#loc154 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":113:10)
#loc155 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":114:1)
#loc156 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":119:9)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":126:9)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":119:13)
#loc159 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":119:21)
#loc160 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":120:9)
#loc161 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":122:9)
#loc162 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":124:9)
#loc163 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":121:33)
#loc164 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":121:26)
#loc165 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":121:13)
#loc166 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":125:23)
#loc167 = loc("CWE126_Buffer_Overread__CWE129_fgets_18.c":125:13)
#loc168 = loc(fused[#loc1, #loc2])
#loc169 = loc(fused[#loc3, #loc4])
#loc170 = loc(fused[#loc5, #loc6])
#loc171 = loc(fused[#loc7, #loc8])
#loc172 = loc(fused[#loc10, #loc11])
#loc173 = loc(fused[#loc13, #loc14])
#loc174 = loc(fused[#loc15, #loc16])
#loc175 = loc(fused[#loc17, #loc18])
#loc176 = loc(fused[#loc19, #loc20])
#loc177 = loc(fused[#loc23, #loc21])
#loc178 = loc(fused[#loc24, #loc25])
#loc179 = loc(fused[#loc27, #loc28])
#loc180 = loc(fused[#loc32, #loc33])
#loc181 = loc(fused[#loc34, #loc35, #loc36, #loc28])
#loc182 = loc(fused[#loc39, #loc40])
#loc183 = loc(fused[#loc42, #loc43])
#loc184 = loc(fused[#loc45, #loc46])
#loc185 = loc(fused[#loc47, #loc48])
#loc186 = loc(fused[#loc49, #loc50, #loc51, #loc46])
#loc187 = loc(fused[#loc56, #loc57])
#loc188 = loc(fused[#loc58, #loc59])
#loc189 = loc(fused[#loc60, #loc61])
#loc190 = loc(fused[#loc62, #loc63])
#loc191 = loc(fused[#loc64, #loc65])
#loc192 = loc(fused[#loc70, #loc71])
#loc195 = loc(fused[#loc81, #loc82])
#loc196 = loc(fused[#loc85, #loc86])
#loc197 = loc(fused[#loc89, #loc88])
#loc198 = loc(fused[#loc91, #loc92])
#loc199 = loc(fused[#loc93, #loc94])
#loc200 = loc(fused[#loc95, #loc96])
#loc201 = loc(fused[#loc97, #loc98])
#loc202 = loc(fused[#loc101, #loc99])
#loc203 = loc(fused[#loc102, #loc103])
#loc204 = loc(fused[#loc105, #loc106])
#loc205 = loc(fused[#loc110, #loc111])
#loc206 = loc(fused[#loc112, #loc113, #loc114, #loc106])
#loc207 = loc(fused[#loc117, #loc118])
#loc208 = loc(fused[#loc121, #loc122])
#loc209 = loc(fused[#loc124, #loc125])
#loc210 = loc(fused[#loc126, #loc127])
#loc211 = loc(fused[#loc129, #loc131])
#loc212 = loc(fused[#loc132, #loc133, #loc134, #loc125])
#loc213 = loc(fused[#loc139, #loc140])
#loc214 = loc(fused[#loc141, #loc142])
#loc215 = loc(fused[#loc143, #loc144])
#loc216 = loc(fused[#loc147, #loc145])
#loc217 = loc(fused[#loc148, #loc149])
#loc218 = loc(fused[#loc152, #loc151])
#loc219 = loc(fused[#loc153, #loc154])
#loc220 = loc(fused[#loc156, #loc157])
#loc221 = loc(fused[#loc158, #loc159])
#loc222 = loc(fused[#loc160, #loc161, #loc162, #loc157])
