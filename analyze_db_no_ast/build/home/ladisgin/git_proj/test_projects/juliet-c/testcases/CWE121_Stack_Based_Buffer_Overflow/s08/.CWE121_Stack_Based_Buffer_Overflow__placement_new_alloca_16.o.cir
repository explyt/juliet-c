!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc1 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc37 = loc("../../../testcasesupport/std_testcase.h":68:7)
!ty_OneIntClass = !cir.struct<class "OneIntClass" {!s32i} #cir.record.decl.ast>
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func linkonce_odr  @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc1)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc1)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc1)
    cir.return loc(#loc1)
  } loc(#loc1)
  cir.func private  @printIntLine(!s32i) loc(#loc103)
  cir.func  @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_163badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc105)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc106)
    %2 = cir.const #cir.int<4> : !u64i loc(#loc9)
    %3 = cir.alloca !u8i, !cir.ptr<!u8i>, %2 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc9)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc107)
    %5 = cir.cast(bitcast, %3 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc9)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc9)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc106)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc11)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc11)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc11)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc11)
    cir.store %10, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc107)
    cir.scope {
      cir.while {
        %11 = cir.const #cir.int<1> : !s32i loc(#loc14)
        %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc14)
        cir.condition(%12) loc(#loc14)
      } do {
        %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc109)
        cir.break loc(#loc17)
      } loc(#loc108)
    } loc(#loc108)
    cir.scope {
      cir.while {
        %11 = cir.const #cir.int<1> : !s32i loc(#loc20)
        %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc20)
        cir.condition(%12) loc(#loc20)
      } do {
        cir.scope {
          %11 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc112)
          %12 = cir.const #cir.int<8> : !u64i loc(#loc113)
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc26)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc113)
          cir.call @_ZN12TwoIntsClassC2Ev(%15) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc24)
          cir.store %15, %11 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc112)
          %16 = cir.const #cir.int<5> : !s32i loc(#loc27)
          %17 = cir.load %11 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc28)
          %18 = cir.get_member %17[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
          cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc114)
          %19 = cir.const #cir.int<10> : !s32i loc(#loc30)
          %20 = cir.load %11 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc31)
          %21 = cir.get_member %20[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc32)
          cir.store %19, %21 : !s32i, !cir.ptr<!s32i> loc(#loc115)
          %22 = cir.load %11 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc33)
          %23 = cir.get_member %22[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
          %24 = cir.load %23 : !cir.ptr<!s32i>, !s32i loc(#loc34)
          cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc35)
        } loc(#loc111)
        cir.break loc(#loc36)
      } loc(#loc110)
    } loc(#loc110)
    cir.return loc(#loc5)
  } loc(#loc104)
  cir.func linkonce_odr  @_ZN11OneIntClassC2Ev(%arg0: !cir.ptr<!ty_OneIntClass> loc("../../../testcasesupport/std_testcase.h":68:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["this", init] {alignment = 8 : i64} loc(#loc37)
    cir.store %arg0, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc37)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc37)
    cir.return loc(#loc37)
  } loc(#loc37)
  cir.func internal private  @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc117)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc118)
    %2 = cir.const #cir.int<4> : !u64i loc(#loc43)
    %3 = cir.alloca !u8i, !cir.ptr<!u8i>, %2 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc43)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc119)
    %5 = cir.cast(bitcast, %3 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc43)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc43)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc118)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc45)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc45)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc45)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc45)
    cir.store %10, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc119)
    cir.scope {
      cir.while {
        %11 = cir.const #cir.int<1> : !s32i loc(#loc48)
        %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc48)
        cir.condition(%12) loc(#loc48)
      } do {
        %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc121)
        cir.break loc(#loc51)
      } loc(#loc120)
    } loc(#loc120)
    cir.scope {
      cir.while {
        %11 = cir.const #cir.int<1> : !s32i loc(#loc54)
        %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc54)
        cir.condition(%12) loc(#loc54)
      } do {
        cir.scope {
          %11 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc124)
          %12 = cir.const #cir.int<4> : !u64i loc(#loc125)
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc60)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc125)
          cir.call @_ZN11OneIntClassC2Ev(%15) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr2) loc(#loc58)
          cir.store %15, %11 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc124)
          %16 = cir.const #cir.int<5> : !s32i loc(#loc61)
          %17 = cir.load %11 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc62)
          %18 = cir.get_member %17[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc63)
          cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc126)
          %19 = cir.load %11 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc64)
          %20 = cir.get_member %19[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc63)
          %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc65)
          cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc66)
        } loc(#loc123)
        cir.break loc(#loc67)
      } loc(#loc122)
    } loc(#loc122)
    cir.return loc(#loc39)
  } loc(#loc116)
  cir.func internal private  @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc128)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc129)
    %2 = cir.const #cir.int<4> : !u64i loc(#loc73)
    %3 = cir.alloca !u8i, !cir.ptr<!u8i>, %2 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc73)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc130)
    %5 = cir.cast(bitcast, %3 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc73)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc73)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc129)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc75)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc75)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc75)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc75)
    cir.store %10, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc130)
    cir.scope {
      cir.while {
        %11 = cir.const #cir.int<1> : !s32i loc(#loc78)
        %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc78)
        cir.condition(%12) loc(#loc78)
      } do {
        %11 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
        cir.break loc(#loc81)
      } loc(#loc131)
    } loc(#loc131)
    cir.scope {
      cir.while {
        %11 = cir.const #cir.int<1> : !s32i loc(#loc84)
        %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc84)
        cir.condition(%12) loc(#loc84)
      } do {
        cir.scope {
          %11 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc135)
          %12 = cir.const #cir.int<8> : !u64i loc(#loc136)
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc90)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc136)
          cir.call @_ZN12TwoIntsClassC2Ev(%15) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc88)
          cir.store %15, %11 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc135)
          %16 = cir.const #cir.int<5> : !s32i loc(#loc91)
          %17 = cir.load %11 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc92)
          %18 = cir.get_member %17[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
          cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc137)
          %19 = cir.const #cir.int<10> : !s32i loc(#loc93)
          %20 = cir.load %11 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc94)
          %21 = cir.get_member %20[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc32)
          cir.store %19, %21 : !s32i, !cir.ptr<!s32i> loc(#loc138)
          %22 = cir.load %11 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc95)
          %23 = cir.get_member %22[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
          %24 = cir.load %23 : !cir.ptr<!s32i>, !s32i loc(#loc96)
          cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc97)
        } loc(#loc134)
        cir.break loc(#loc98)
      } loc(#loc133)
    } loc(#loc133)
    cir.return loc(#loc69)
  } loc(#loc127)
  cir.func  @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_164goodEv() extra(#fn_attr1) {
    cir.call @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16L7goodB2GEv() : () -> () loc(#loc101)
    cir.call @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16L7goodG2BEv() : () -> () loc(#loc102)
    cir.return loc(#loc100)
  } loc(#loc139)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":0:0)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":24:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":52:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":26:5)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":26:12)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":27:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":27:36)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":28:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":28:37)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":29:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":34:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":29:11)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":32:16)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":32:9)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":33:9)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":35:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":51:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":35:11)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":37:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":49:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":43:13)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":43:49)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":43:39)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":43:43)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":45:32)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":45:13)
#loc29 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":46:32)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":46:13)
#loc32 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":47:26)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":47:36)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":47:13)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":50:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":59:1)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":85:1)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":61:5)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":61:12)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":62:5)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":62:36)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":63:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":63:37)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":64:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":69:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":64:11)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":67:16)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":67:9)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":68:9)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":70:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":84:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":70:11)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":72:9)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":82:9)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":78:13)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":78:48)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":78:38)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":78:42)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":80:32)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":80:13)
#loc63 = loc("../../../testcasesupport/std_testcase.h":71:13)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":81:26)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":81:36)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":81:13)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":83:9)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":88:1)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":116:1)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":90:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":90:12)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":91:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":91:36)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":92:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":92:37)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":93:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":98:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":93:11)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":96:16)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":96:9)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":97:9)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":99:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":115:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":99:11)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":101:9)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":113:9)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":107:13)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":107:49)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":107:39)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":107:43)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":109:32)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":109:13)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":110:32)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":110:13)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":111:26)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":111:36)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":111:13)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":114:9)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":118:1)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":122:1)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":120:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_16.cpp":121:5)
#loc103 = loc(fused[#loc2, #loc3])
#loc104 = loc(fused[#loc4, #loc5])
#loc105 = loc(fused[#loc6, #loc7])
#loc106 = loc(fused[#loc8, #loc9])
#loc107 = loc(fused[#loc10, #loc11])
#loc108 = loc(fused[#loc12, #loc13])
#loc109 = loc(fused[#loc16, #loc15])
#loc110 = loc(fused[#loc18, #loc19])
#loc111 = loc(fused[#loc21, #loc22])
#loc112 = loc(fused[#loc23, #loc24])
#loc113 = loc(fused[#loc25, #loc24])
#loc114 = loc(fused[#loc28, #loc27])
#loc115 = loc(fused[#loc31, #loc30])
#loc116 = loc(fused[#loc38, #loc39])
#loc117 = loc(fused[#loc40, #loc41])
#loc118 = loc(fused[#loc42, #loc43])
#loc119 = loc(fused[#loc44, #loc45])
#loc120 = loc(fused[#loc46, #loc47])
#loc121 = loc(fused[#loc50, #loc49])
#loc122 = loc(fused[#loc52, #loc53])
#loc123 = loc(fused[#loc55, #loc56])
#loc124 = loc(fused[#loc57, #loc58])
#loc125 = loc(fused[#loc59, #loc58])
#loc126 = loc(fused[#loc62, #loc61])
#loc127 = loc(fused[#loc68, #loc69])
#loc128 = loc(fused[#loc70, #loc71])
#loc129 = loc(fused[#loc72, #loc73])
#loc130 = loc(fused[#loc74, #loc75])
#loc131 = loc(fused[#loc76, #loc77])
#loc132 = loc(fused[#loc80, #loc79])
#loc133 = loc(fused[#loc82, #loc83])
#loc134 = loc(fused[#loc85, #loc86])
#loc135 = loc(fused[#loc87, #loc88])
#loc136 = loc(fused[#loc89, #loc88])
#loc137 = loc(fused[#loc92, #loc91])
#loc138 = loc(fused[#loc94, #loc93])
#loc139 = loc(fused[#loc99, #loc100])
