!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":84:10)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":84:14)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":84:20)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":84:32)
#loc121 = loc(fused[#loc52, #loc53])
#loc122 = loc(fused[#loc54, #loc55])
!ty_CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34_unionType = !cir.struct<union "CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34_unionType" {!cir.ptr<!s32i>, !cir.ptr<!s32i>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printIntLine(!s32i) loc(#loc101)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc103)
    %1 = cir.alloca !ty_CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34_unionType, !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc104)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc9)
    cir.store %2, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc105)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc11)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc11)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc11)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc11)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc11)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc106)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc13)
    %9 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34_unionType> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc14)
    cir.store %8, %9 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc107)
    cir.scope {
      %10 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc109)
      %11 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34_unionType> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc20)
      %12 = cir.load %11 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc19)
      cir.store %12, %10 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc109)
      cir.scope {
        %13 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["source"] {alignment = 16 : i64} loc(#loc111)
        %14 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc111)
        cir.store %14, %13 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc111)
        %15 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc25)
        %16 = cir.cast(bitcast, %15 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc25)
        %17 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc26)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc26)
        %19 = cir.const #cir.int<10> : !s32i loc(#loc27)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc27)
        %21 = cir.const #cir.int<4> : !u64i loc(#loc112)
        %22 = cir.binop(mul, %20, %21) : !u64i loc(#loc113)
        cir.libc.memcpy %22 bytes from %18 to %16 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc114)
        %23 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc32)
        %24 = cir.const #cir.int<0> : !s32i loc(#loc33)
        %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !s32i), !cir.ptr<!s32i> loc(#loc34)
        %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc32)
        cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc35)
      } loc(#loc110)
    } loc(#loc108)
    cir.return loc(#loc4)
  } loc(#loc102)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc116)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    cir.return loc(#loc37)
  } loc(#loc115)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc117)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc118)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc119)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc49)
  cir.func @main(%arg0: !s32i loc(fused[#loc52, #loc53]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc54, #loc55])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc121)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc122)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc51)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc56)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc56)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc57)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc58)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc58)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc59)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc46)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34_good : !cir.ptr<!cir.func<!void ()>> loc(#loc123)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34_good() : () -> () loc(#loc61)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc47)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc48)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc124)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34_bad() : () -> () loc(#loc65)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc49)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc68)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc125)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    cir.return %17 : !s32i loc(#loc125)
  } loc(#loc120)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc127)
    %1 = cir.alloca !ty_CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34_unionType, !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc128)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc76)
    cir.store %2, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc129)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc78)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc78)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc78)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc78)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc78)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc78)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc78)
    cir.store %9, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc130)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc80)
    %11 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34_unionType> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc14)
    cir.store %10, %11 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc131)
    cir.scope {
      %12 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc133)
      %13 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34_unionType> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc20)
      %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc85)
      cir.store %14, %12 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc133)
      cir.scope {
        %15 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["source"] {alignment = 16 : i64} loc(#loc135)
        %16 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc135)
        cir.store %16, %15 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc135)
        %17 = cir.load %12 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc90)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc90)
        %19 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc91)
        %20 = cir.cast(bitcast, %19 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc91)
        %21 = cir.const #cir.int<10> : !s32i loc(#loc92)
        %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc92)
        %23 = cir.const #cir.int<4> : !u64i loc(#loc136)
        %24 = cir.binop(mul, %22, %23) : !u64i loc(#loc137)
        cir.libc.memcpy %24 bytes from %20 to %18 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc138)
        %25 = cir.load %12 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc97)
        %26 = cir.const #cir.int<0> : !s32i loc(#loc98)
        %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc99)
        %28 = cir.load %27 : !cir.ptr<!s32i>, !s32i loc(#loc97)
        cir.call @printIntLine(%28) : (!s32i) -> () loc(#loc100)
      } loc(#loc134)
    } loc(#loc132)
    cir.return loc(#loc71)
  } loc(#loc126)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":27:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":44:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":29:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":29:11)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":30:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":30:68)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":31:12)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":31:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":33:19)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":33:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":34:26)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":21:11)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":34:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":35:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":43:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":36:9)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":36:30)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":22:11)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":37:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":42:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":38:13)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":38:32)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":40:20)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":40:26)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":40:34)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":40:37)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":40:47)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":40:13)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":40:48)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":41:26)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":41:31)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":41:32)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":41:13)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":70:1)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":73:1)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":72:5)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":72:13)
#loc40 = loc("/usr/include/stdlib.h":575:1)
#loc41 = loc("/usr/include/stdlib.h":575:41)
#loc42 = loc("/usr/include/time.h":76:1)
#loc43 = loc("/usr/include/time.h":76:38)
#loc44 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc45 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":89:15)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":91:15)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":94:15)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":96:15)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":84:1)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":99:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":85:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":87:27)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":87:22)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":87:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":89:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":90:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":90:63)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":91:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":94:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":95:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":95:62)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":96:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":98:12)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":98:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":51:1)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":68:1)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":53:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":53:11)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":54:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":54:68)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":55:12)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":55:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":57:19)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":57:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":58:26)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":58:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":59:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":67:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":60:9)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":60:30)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":61:9)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":66:9)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":62:13)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":62:32)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":64:20)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":64:26)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":64:34)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":64:37)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":64:47)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":64:13)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":64:48)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":65:26)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":65:31)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":65:32)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE131_memcpy_34.c":65:13)
#loc101 = loc(fused[#loc1, #loc2])
#loc102 = loc(fused[#loc3, #loc4])
#loc103 = loc(fused[#loc5, #loc6])
#loc104 = loc(fused[#loc7, #loc8])
#loc105 = loc(fused[#loc10, #loc9])
#loc106 = loc(fused[#loc12, #loc11])
#loc107 = loc(fused[#loc15, #loc13])
#loc108 = loc(fused[#loc16, #loc17])
#loc109 = loc(fused[#loc18, #loc19])
#loc110 = loc(fused[#loc21, #loc22])
#loc111 = loc(fused[#loc23, #loc24])
#loc112 = loc(fused[#loc28, #loc29])
#loc113 = loc(fused[#loc27, #loc29])
#loc114 = loc(fused[#loc30, #loc31])
#loc115 = loc(fused[#loc36, #loc37])
#loc116 = loc(fused[#loc38, #loc39])
#loc117 = loc(fused[#loc40, #loc41])
#loc118 = loc(fused[#loc42, #loc43])
#loc119 = loc(fused[#loc44, #loc45])
#loc120 = loc(fused[#loc50, #loc51])
#loc123 = loc(fused[#loc61, #loc62])
#loc124 = loc(fused[#loc65, #loc66])
#loc125 = loc(fused[#loc69, #loc68])
#loc126 = loc(fused[#loc70, #loc71])
#loc127 = loc(fused[#loc72, #loc73])
#loc128 = loc(fused[#loc74, #loc75])
#loc129 = loc(fused[#loc77, #loc76])
#loc130 = loc(fused[#loc79, #loc78])
#loc131 = loc(fused[#loc81, #loc80])
#loc132 = loc(fused[#loc82, #loc83])
#loc133 = loc(fused[#loc84, #loc85])
#loc134 = loc(fused[#loc86, #loc87])
#loc135 = loc(fused[#loc88, #loc89])
#loc136 = loc(fused[#loc93, #loc94])
#loc137 = loc(fused[#loc92, #loc94])
#loc138 = loc(fused[#loc95, #loc96])
