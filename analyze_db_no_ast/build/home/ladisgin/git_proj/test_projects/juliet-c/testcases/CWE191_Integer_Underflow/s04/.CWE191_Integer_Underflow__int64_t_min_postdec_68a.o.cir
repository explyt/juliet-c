!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__int64_t_min_postdec_68a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global  external dsolocal @CWE191_Integer_Underflow__int64_t_min_postdec_68_badData = #cir.int<0> : !s64i {alignment = 8 : i64} loc(#loc56)
  cir.func no_proto private  @CWE191_Integer_Underflow__int64_t_min_postdec_68b_badSink(...) loc(#loc57)
  cir.func no_proto  @CWE191_Integer_Underflow__int64_t_min_postdec_68_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc59)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc9)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc60)
    %2 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc11)
    %3 = cir.unary(minus, %2) : !s64i, !s64i loc(#loc11)
    %4 = cir.const #cir.int<1> : !s64i loc(#loc11)
    %5 = cir.binop(sub, %3, %4) nsw : !s64i loc(#loc11)
    cir.store %5, %0 : !s64i, !cir.ptr<!s64i> loc(#loc61)
    %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc13)
    %7 = cir.get_global @CWE191_Integer_Underflow__int64_t_min_postdec_68_badData : !cir.ptr<!s64i> loc(#loc56)
    cir.store %6, %7 : !s64i, !cir.ptr<!s64i> loc(#loc62)
    %8 = cir.get_global @CWE191_Integer_Underflow__int64_t_min_postdec_68b_badSink : !cir.ptr<!cir.func<!void (...)>> loc(#loc63)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!cir.func<!void (...)>>), !cir.ptr<!cir.func<!void ()>> loc(#loc63)
    cir.call %9() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc15)
    cir.return loc(#loc6)
  } loc(#loc58)
  cir.func no_proto  @CWE191_Integer_Underflow__int64_t_min_postdec_68_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc65)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc19)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc66)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc21)
    cir.return loc(#loc18)
  } loc(#loc64)
  cir.global  external dsolocal @CWE191_Integer_Underflow__int64_t_min_postdec_68_goodG2BData = #cir.int<0> : !s64i {alignment = 8 : i64} loc(#loc67)
  cir.global  external dsolocal @CWE191_Integer_Underflow__int64_t_min_postdec_68_goodB2GData = #cir.int<0> : !s64i {alignment = 8 : i64} loc(#loc68)
  cir.func no_proto private  @CWE191_Integer_Underflow__int64_t_min_postdec_68b_goodG2BSink(...) loc(#loc69)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc71)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc33)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc72)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc35)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc36)
    %4 = cir.cast(integral, %3 : !s32i), !s64i loc(#loc36)
    cir.store %4, %0 : !s64i, !cir.ptr<!s64i> loc(#loc73)
    %5 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc38)
    %6 = cir.get_global @CWE191_Integer_Underflow__int64_t_min_postdec_68_goodG2BData : !cir.ptr<!s64i> loc(#loc67)
    cir.store %5, %6 : !s64i, !cir.ptr<!s64i> loc(#loc74)
    %7 = cir.get_global @CWE191_Integer_Underflow__int64_t_min_postdec_68b_goodG2BSink : !cir.ptr<!cir.func<!void (...)>> loc(#loc75)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!cir.func<!void (...)>>), !cir.ptr<!cir.func<!void ()>> loc(#loc75)
    cir.call %8() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc30)
  } loc(#loc70)
  cir.func no_proto private  @CWE191_Integer_Underflow__int64_t_min_postdec_68b_goodB2GSink(...) loc(#loc76)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc78)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc48)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc79)
    %2 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc50)
    %3 = cir.unary(minus, %2) : !s64i, !s64i loc(#loc50)
    %4 = cir.const #cir.int<1> : !s64i loc(#loc50)
    %5 = cir.binop(sub, %3, %4) nsw : !s64i loc(#loc50)
    cir.store %5, %0 : !s64i, !cir.ptr<!s64i> loc(#loc80)
    %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc52)
    %7 = cir.get_global @CWE191_Integer_Underflow__int64_t_min_postdec_68_goodB2GData : !cir.ptr<!s64i> loc(#loc68)
    cir.store %6, %7 : !s64i, !cir.ptr<!s64i> loc(#loc81)
    %8 = cir.get_global @CWE191_Integer_Underflow__int64_t_min_postdec_68b_goodB2GSink : !cir.ptr<!cir.func<!void (...)>> loc(#loc82)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!cir.func<!void (...)>>), !cir.ptr<!cir.func<!void ()>> loc(#loc82)
    cir.call %9() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    cir.return loc(#loc45)
  } loc(#loc77)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":0:0)
#loc1 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":20:1)
#loc2 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":20:9)
#loc3 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":27:1)
#loc4 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":27:64)
#loc5 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":29:1)
#loc6 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":37:1)
#loc7 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":31:5)
#loc8 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":31:13)
#loc9 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":32:12)
#loc10 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":32:5)
#loc11 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":34:12)
#loc12 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":34:5)
#loc13 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":35:64)
#loc14 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":35:5)
#loc15 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":36:5)
#loc16 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":36:63)
#loc17 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":69:1)
#loc18 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":73:1)
#loc19 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":71:5)
#loc20 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":71:13)
#loc21 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":72:5)
#loc22 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":72:13)
#loc23 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":21:1)
#loc24 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":21:9)
#loc25 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":22:1)
#loc26 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":22:9)
#loc27 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":44:1)
#loc28 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":44:68)
#loc29 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":48:1)
#loc30 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":56:1)
#loc31 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":50:5)
#loc32 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":50:13)
#loc33 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":51:12)
#loc34 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":51:5)
#loc35 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":53:13)
#loc36 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":53:12)
#loc37 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":53:5)
#loc38 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":54:68)
#loc39 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":54:5)
#loc40 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":55:5)
#loc41 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":55:67)
#loc42 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":45:1)
#loc43 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":45:68)
#loc44 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":59:1)
#loc45 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":67:1)
#loc46 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":61:5)
#loc47 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":61:13)
#loc48 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":62:12)
#loc49 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":62:5)
#loc50 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":64:12)
#loc51 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":64:5)
#loc52 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":65:68)
#loc53 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":65:5)
#loc54 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":66:5)
#loc55 = loc("CWE191_Integer_Underflow__int64_t_min_postdec_68a.c":66:67)
#loc56 = loc(fused[#loc1, #loc2])
#loc57 = loc(fused[#loc3, #loc4])
#loc58 = loc(fused[#loc5, #loc6])
#loc59 = loc(fused[#loc7, #loc8])
#loc60 = loc(fused[#loc10, #loc9])
#loc61 = loc(fused[#loc12, #loc11])
#loc62 = loc(fused[#loc14, #loc13])
#loc63 = loc(fused[#loc15, #loc16])
#loc64 = loc(fused[#loc17, #loc18])
#loc65 = loc(fused[#loc19, #loc20])
#loc66 = loc(fused[#loc21, #loc22])
#loc67 = loc(fused[#loc23, #loc24])
#loc68 = loc(fused[#loc25, #loc26])
#loc69 = loc(fused[#loc27, #loc28])
#loc70 = loc(fused[#loc29, #loc30])
#loc71 = loc(fused[#loc31, #loc32])
#loc72 = loc(fused[#loc34, #loc33])
#loc73 = loc(fused[#loc37, #loc35])
#loc74 = loc(fused[#loc39, #loc38])
#loc75 = loc(fused[#loc40, #loc41])
#loc76 = loc(fused[#loc42, #loc43])
#loc77 = loc(fused[#loc44, #loc45])
#loc78 = loc(fused[#loc46, #loc47])
#loc79 = loc(fused[#loc49, #loc48])
#loc80 = loc(fused[#loc51, #loc50])
#loc81 = loc(fused[#loc53, #loc52])
#loc82 = loc(fused[#loc54, #loc55])
