!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc117)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc118)
  cir.func private @printIntLine(!s32i) loc(#loc119)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc120)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc122)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc123)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc124)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc18)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc125)
    cir.br ^bb1 loc(#loc126)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<2147483647> : !s32i loc(#loc22)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc23)
    %7 = cir.binop(div, %5, %6) : !s32i loc(#loc127)
    %8 = cir.const #cir.int<2> : !s32i loc(#loc24)
    %9 = cir.binop(add, %7, %8) nsw : !s32i loc(#loc127)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc128)
    cir.br ^bb2 loc(#loc129)
  ^bb2:  // pred: ^bb1
    %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc28)
    %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc29)
    %13 = cir.const #cir.int<4> : !u64i loc(#loc130)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc131)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc28)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc132)
    cir.store %16, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc133)
    cir.br ^bb3 loc(#loc134)
  ^bb3:  // pred: ^bb2
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc36)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc37)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc37)
    %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s32i>, !cir.bool loc(#loc135)
    cir.brcond %20 ^bb4, ^bb5 loc(#loc136)
  ^bb4:  // pred: ^bb3
    %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc39)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc41)
    cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc39)
    cir.br ^bb5 loc(#loc35)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc35)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc137)
  ^bb7:  // pred: ^bb6
    %24 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc44)
    cir.store %25, %0 : !u64i, !cir.ptr<!u64i> loc(#loc138)
    cir.br ^bb8 loc(#loc137)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %26 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc46)
    %27 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc47)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc47)
    %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc139)
    cir.brcond %29 ^bb9, ^bb13 loc(#loc48)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc140)
  ^bb10:  // pred: ^bb9
    %30 = cir.const #cir.int<0> : !s32i loc(#loc50)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc51)
    %32 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc52)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s32i>, %32 : !u64i), !cir.ptr<!s32i> loc(#loc53)
    cir.store %30, %33 : !s32i, !cir.ptr<!s32i> loc(#loc141)
    cir.br ^bb11 loc(#loc43)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc43)
  ^bb12:  // pred: ^bb11
    %34 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc54)
    %35 = cir.unary(inc, %34) : !u64i, !u64i loc(#loc55)
    cir.store %35, %0 : !u64i, !cir.ptr<!u64i> loc(#loc142)
    cir.br ^bb8 loc(#loc137)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc43)
  ^bb14:  // pred: ^bb13
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc56)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %38 = cir.ptr_stride(%36 : !cir.ptr<!s32i>, %37 : !s32i), !cir.ptr<!s32i> loc(#loc58)
    %39 = cir.load %38 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    cir.call @printIntLine(%39) : (!s32i) -> () loc(#loc59)
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc60)
    %41 = cir.cast(bitcast, %40 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc60)
    cir.call @free(%41) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc61)
    cir.br ^bb15 loc(#loc27)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc10)
  } loc(#loc121)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc144)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc64)
    cir.return loc(#loc63)
  } loc(#loc143)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc146)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc147)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc148)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc74)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc75)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc149)
    cir.br ^bb1 loc(#loc150)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<20> : !s32i loc(#loc79)
    cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc151)
    cir.br ^bb2 loc(#loc152)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc83)
    %7 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc84)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc84)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc153)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc154)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc83)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc155)
    cir.store %12, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc156)
    cir.br ^bb3 loc(#loc157)
  ^bb3:  // pred: ^bb2
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc91)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc92)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc92)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc158)
    cir.brcond %16 ^bb4, ^bb5 loc(#loc159)
  ^bb4:  // pred: ^bb3
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc94)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc96)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc94)
    cir.br ^bb5 loc(#loc90)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc90)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc160)
  ^bb7:  // pred: ^bb6
    %20 = cir.const #cir.int<0> : !s32i loc(#loc99)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc99)
    cir.store %21, %0 : !u64i, !cir.ptr<!u64i> loc(#loc161)
    cir.br ^bb8 loc(#loc160)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %22 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc101)
    %23 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc102)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc102)
    %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc162)
    cir.brcond %25 ^bb9, ^bb13 loc(#loc103)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc163)
  ^bb10:  // pred: ^bb9
    %26 = cir.const #cir.int<0> : !s32i loc(#loc105)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc106)
    %28 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc107)
    %29 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %28 : !u64i), !cir.ptr<!s32i> loc(#loc108)
    cir.store %26, %29 : !s32i, !cir.ptr<!s32i> loc(#loc164)
    cir.br ^bb11 loc(#loc98)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc98)
  ^bb12:  // pred: ^bb11
    %30 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc109)
    %31 = cir.unary(inc, %30) : !u64i, !u64i loc(#loc110)
    cir.store %31, %0 : !u64i, !cir.ptr<!u64i> loc(#loc165)
    cir.br ^bb8 loc(#loc160)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc98)
  ^bb14:  // pred: ^bb13
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc111)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!s32i>, %33 : !s32i), !cir.ptr<!s32i> loc(#loc113)
    %35 = cir.load %34 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    cir.call @printIntLine(%35) : (!s32i) -> () loc(#loc114)
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc115)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc115)
    cir.call @free(%37) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc116)
    cir.br ^bb15 loc(#loc82)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc67)
  } loc(#loc145)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":21:1)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":46:1)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":33:9)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":33:16)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":34:9)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":34:14)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":23:5)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":23:9)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":25:13)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":25:12)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":25:5)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":26:5)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":26:10)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":29:12)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":29:22)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":29:26)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":29:5)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":32:5)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":45:5)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":37:28)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":37:35)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":37:42)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":37:52)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":37:53)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":37:9)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":38:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":38:43)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":38:13)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":38:27)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":38:33)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":38:34)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":38:40)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":38:39)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":39:9)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":42:9)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":39:18)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":39:14)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":39:21)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":39:33)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":39:23)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":40:9)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":41:29)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":41:13)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":41:24)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":41:25)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":39:40)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":39:39)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":43:22)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":43:33)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":43:34)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":43:9)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":44:14)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":44:9)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":78:1)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":81:1)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":80:5)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":80:13)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":53:1)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":76:1)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":63:9)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":63:16)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":64:9)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":64:14)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":55:5)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":55:9)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":57:13)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":57:12)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":57:5)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":58:5)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":58:10)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":61:12)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":61:5)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":62:5)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":75:5)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":67:28)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":67:35)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":67:42)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":67:52)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":67:53)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":67:9)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":68:9)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":68:43)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":68:13)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":68:27)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":68:33)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":68:34)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":68:40)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":68:39)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":69:9)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":72:9)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":69:18)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":69:14)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":69:21)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":69:33)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":69:23)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":70:9)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":71:29)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":71:13)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":71:24)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":71:25)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":69:40)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":69:39)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":73:22)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":73:33)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":73:34)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":73:9)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":74:14)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fixed_18.c":74:9)
#loc117 = loc(fused[#loc1, #loc2])
#loc118 = loc(fused[#loc3, #loc4])
#loc119 = loc(fused[#loc5, #loc6])
#loc120 = loc(fused[#loc7, #loc8])
#loc121 = loc(fused[#loc9, #loc10])
#loc122 = loc(fused[#loc11, #loc12])
#loc123 = loc(fused[#loc13, #loc14])
#loc124 = loc(fused[#loc15, #loc16])
#loc125 = loc(fused[#loc19, #loc17])
#loc126 = loc(fused[#loc20, #loc21])
#loc127 = loc(fused[#loc22, #loc23])
#loc128 = loc(fused[#loc25, #loc24])
#loc129 = loc(fused[#loc26, #loc27])
#loc130 = loc(fused[#loc30, #loc31])
#loc131 = loc(fused[#loc29, #loc31])
#loc132 = loc(fused[#loc28, #loc32])
#loc133 = loc(fused[#loc33, #loc32])
#loc134 = loc(fused[#loc34, #loc35])
#loc135 = loc(fused[#loc36, #loc37])
#loc136 = loc(fused[#loc38, #loc35])
#loc137 = loc(fused[#loc42, #loc43])
#loc138 = loc(fused[#loc45, #loc44])
#loc139 = loc(fused[#loc46, #loc47])
#loc140 = loc(fused[#loc49, #loc43])
#loc141 = loc(fused[#loc51, #loc50])
#loc142 = loc(fused[#loc55, #loc54])
#loc143 = loc(fused[#loc62, #loc63])
#loc144 = loc(fused[#loc64, #loc65])
#loc145 = loc(fused[#loc66, #loc67])
#loc146 = loc(fused[#loc68, #loc69])
#loc147 = loc(fused[#loc70, #loc71])
#loc148 = loc(fused[#loc72, #loc73])
#loc149 = loc(fused[#loc76, #loc74])
#loc150 = loc(fused[#loc77, #loc78])
#loc151 = loc(fused[#loc80, #loc79])
#loc152 = loc(fused[#loc81, #loc82])
#loc153 = loc(fused[#loc85, #loc86])
#loc154 = loc(fused[#loc84, #loc86])
#loc155 = loc(fused[#loc83, #loc87])
#loc156 = loc(fused[#loc88, #loc87])
#loc157 = loc(fused[#loc89, #loc90])
#loc158 = loc(fused[#loc91, #loc92])
#loc159 = loc(fused[#loc93, #loc90])
#loc160 = loc(fused[#loc97, #loc98])
#loc161 = loc(fused[#loc100, #loc99])
#loc162 = loc(fused[#loc101, #loc102])
#loc163 = loc(fused[#loc104, #loc98])
#loc164 = loc(fused[#loc106, #loc105])
#loc165 = loc(fused[#loc110, #loc109])
