!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc6 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":31:22)
#loc7 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":31:26)
#loc53 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":103:10)
#loc54 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":103:14)
#loc55 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":103:20)
#loc56 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":103:32)
#loc73 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":70:26)
#loc74 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":70:30)
#loc102 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":53:26)
#loc103 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":53:30)
#loc129 = loc(fused[#loc6, #loc7])
#loc146 = loc(fused[#loc53, #loc54])
#loc147 = loc(fused[#loc55, #loc56])
#loc152 = loc(fused[#loc73, #loc74])
#loc162 = loc(fused[#loc102, #loc103])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__open_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc127)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"BadSource_open.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc3)
  cir.func internal private @badSource(%arg0: !s32i loc(fused[#loc6, #loc7])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc129)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc5)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc8)
    %2 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc3)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc3)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc9)
    %5 = cir.const #cir.int<64> : !s32i loc(#loc10)
    %6 = cir.binop(or, %4, %5) : !s32i loc(#loc130)
    %7 = cir.const #cir.int<256> : !s32i loc(#loc11)
    %8 = cir.const #cir.int<128> : !s32i loc(#loc12)
    %9 = cir.binop(or, %7, %8) : !s32i loc(#loc131)
    %10 = cir.call @open(%3, %6, %9) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc13)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc132)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc16)
    %12 = cir.call @close(%11) : (!s32i) -> !s32i loc(#loc17)
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc18)
    cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc133)
    %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    cir.return %14 : !s32i loc(#loc133)
  } loc(#loc128)
  cir.func private @close(!s32i) -> !s32i loc(#loc134)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__open_42_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc136)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc27)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc137)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    %4 = cir.call @badSource(%3) : (!s32i) -> !s32i loc(#loc30)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc33)
    %6 = cir.call @close(%5) : (!s32i) -> !s32i loc(#loc34)
    cir.return loc(#loc23)
  } loc(#loc135)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__open_42_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc140)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc37)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc141)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc39)
    cir.return loc(#loc36)
  } loc(#loc139)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc142)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc143)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc144)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc50)
  cir.func @main(%arg0: !s32i loc(fused[#loc53, #loc54]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc55, #loc56])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc146)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc147)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc52)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc57)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc57)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc58)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc59)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc59)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc60)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc47)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %8 = cir.get_global @CWE675_Duplicate_Operations_on_Resource__open_42_good : !cir.ptr<!cir.func<!void ()>> loc(#loc148)
    cir.call @CWE675_Duplicate_Operations_on_Resource__open_42_good() : () -> () loc(#loc62)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc48)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc49)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %13 = cir.get_global @CWE675_Duplicate_Operations_on_Resource__open_42_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc149)
    cir.call @CWE675_Duplicate_Operations_on_Resource__open_42_bad() : () -> () loc(#loc66)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc50)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc69)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc150)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    cir.return %17 : !s32i loc(#loc150)
  } loc(#loc145)
  cir.func internal private @goodB2GSource(%arg0: !s32i loc(fused[#loc73, #loc74])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc152)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc72)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc75)
    %2 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc76)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc76)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc77)
    %5 = cir.const #cir.int<64> : !s32i loc(#loc78)
    %6 = cir.binop(or, %4, %5) : !s32i loc(#loc153)
    %7 = cir.const #cir.int<256> : !s32i loc(#loc79)
    %8 = cir.const #cir.int<128> : !s32i loc(#loc80)
    %9 = cir.binop(or, %7, %8) : !s32i loc(#loc154)
    %10 = cir.call @open(%3, %6, %9) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc81)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc155)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc84)
    %12 = cir.call @close(%11) : (!s32i) -> !s32i loc(#loc85)
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc86)
    cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    cir.return %14 : !s32i loc(#loc156)
  } loc(#loc151)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc158)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc92)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc93)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc159)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %4 = cir.call @goodB2GSource(%3) : (!s32i) -> !s32i loc(#loc96)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc160)
    cir.return loc(#loc89)
  } loc(#loc157)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"GoodSource_open.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc99)
  cir.func internal private @goodG2BSource(%arg0: !s32i loc(fused[#loc102, #loc103])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc162)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc101)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc104)
    %2 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc99)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc99)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc105)
    %5 = cir.const #cir.int<64> : !s32i loc(#loc106)
    %6 = cir.binop(or, %4, %5) : !s32i loc(#loc163)
    %7 = cir.const #cir.int<256> : !s32i loc(#loc107)
    %8 = cir.const #cir.int<128> : !s32i loc(#loc108)
    %9 = cir.binop(or, %7, %8) : !s32i loc(#loc164)
    %10 = cir.call @open(%3, %6, %9) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc109)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc165)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    cir.store %11, %1 : !s32i, !cir.ptr<!s32i> loc(#loc166)
    %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    cir.return %12 : !s32i loc(#loc166)
  } loc(#loc161)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc168)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc118)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc119)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc121)
    %4 = cir.call @goodG2BSource(%3) : (!s32i) -> !s32i loc(#loc122)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc170)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %6 = cir.call @close(%5) : (!s32i) -> !s32i loc(#loc126)
    cir.return loc(#loc115)
  } loc(#loc167)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__open_42.c":0:0)
#loc1 = loc("/usr/include/fcntl.h":209:1)
#loc2 = loc("/usr/include/fcntl.h":209:56)
#loc3 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":33:17)
#loc4 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":31:1)
#loc5 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":37:1)
#loc8 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":32:1)
#loc9 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":33:39)
#loc10 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":33:46)
#loc11 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":33:55)
#loc12 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":33:63)
#loc13 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":33:12)
#loc14 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":33:5)
#loc15 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":33:71)
#loc16 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":35:11)
#loc17 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":35:5)
#loc18 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":36:12)
#loc19 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":36:5)
#loc20 = loc("/usr/include/unistd.h":358:1)
#loc21 = loc("/usr/include/unistd.h":358:27)
#loc22 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":39:1)
#loc23 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":46:1)
#loc24 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":41:5)
#loc25 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":41:9)
#loc26 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":42:13)
#loc27 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":42:12)
#loc28 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":42:5)
#loc29 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":43:22)
#loc30 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":43:12)
#loc31 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":43:5)
#loc32 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":43:26)
#loc33 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":45:11)
#loc34 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":45:5)
#loc35 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":88:1)
#loc36 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":92:1)
#loc37 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":90:5)
#loc38 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":90:13)
#loc39 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":91:5)
#loc40 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":91:13)
#loc41 = loc("/usr/include/stdlib.h":575:1)
#loc42 = loc("/usr/include/stdlib.h":575:41)
#loc43 = loc("/usr/include/time.h":76:1)
#loc44 = loc("/usr/include/time.h":76:38)
#loc45 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc46 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc47 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":108:15)
#loc48 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":110:15)
#loc49 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":113:15)
#loc50 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":115:15)
#loc51 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":103:1)
#loc52 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":118:1)
#loc57 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":104:1)
#loc58 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":106:27)
#loc59 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":106:22)
#loc60 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":106:5)
#loc61 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":108:5)
#loc62 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":109:5)
#loc63 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":109:59)
#loc64 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":110:5)
#loc65 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":113:5)
#loc66 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":114:5)
#loc67 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":114:58)
#loc68 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":115:5)
#loc69 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":117:12)
#loc70 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":117:5)
#loc71 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":70:1)
#loc72 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":76:1)
#loc75 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":71:1)
#loc76 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":72:17)
#loc77 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":72:39)
#loc78 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":72:46)
#loc79 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":72:55)
#loc80 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":72:63)
#loc81 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":72:12)
#loc82 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":72:5)
#loc83 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":72:71)
#loc84 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":74:11)
#loc85 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":74:5)
#loc86 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":75:12)
#loc87 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":75:5)
#loc88 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":78:1)
#loc89 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":86:1)
#loc90 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":80:5)
#loc91 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":80:9)
#loc92 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":81:13)
#loc93 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":81:12)
#loc94 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":81:5)
#loc95 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":82:26)
#loc96 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":82:12)
#loc97 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":82:5)
#loc98 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":82:30)
#loc99 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":56:17)
#loc100 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":53:1)
#loc101 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":58:1)
#loc104 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":54:1)
#loc105 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":56:40)
#loc106 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":56:47)
#loc107 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":56:56)
#loc108 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":56:64)
#loc109 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":56:12)
#loc110 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":56:5)
#loc111 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":56:72)
#loc112 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":57:12)
#loc113 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":57:5)
#loc114 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":60:1)
#loc115 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":67:1)
#loc116 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":62:5)
#loc117 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":62:9)
#loc118 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":63:13)
#loc119 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":63:12)
#loc120 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":63:5)
#loc121 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":64:26)
#loc122 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":64:12)
#loc123 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":64:5)
#loc124 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":64:30)
#loc125 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":66:11)
#loc126 = loc("CWE675_Duplicate_Operations_on_Resource__open_42.c":66:5)
#loc127 = loc(fused[#loc1, #loc2])
#loc128 = loc(fused[#loc4, #loc5])
#loc130 = loc(fused[#loc9, #loc10])
#loc131 = loc(fused[#loc11, #loc12])
#loc132 = loc(fused[#loc14, #loc15])
#loc133 = loc(fused[#loc19, #loc18])
#loc134 = loc(fused[#loc20, #loc21])
#loc135 = loc(fused[#loc22, #loc23])
#loc136 = loc(fused[#loc24, #loc25])
#loc137 = loc(fused[#loc28, #loc26])
#loc138 = loc(fused[#loc31, #loc32])
#loc139 = loc(fused[#loc35, #loc36])
#loc140 = loc(fused[#loc37, #loc38])
#loc141 = loc(fused[#loc39, #loc40])
#loc142 = loc(fused[#loc41, #loc42])
#loc143 = loc(fused[#loc43, #loc44])
#loc144 = loc(fused[#loc45, #loc46])
#loc145 = loc(fused[#loc51, #loc52])
#loc148 = loc(fused[#loc62, #loc63])
#loc149 = loc(fused[#loc66, #loc67])
#loc150 = loc(fused[#loc70, #loc69])
#loc151 = loc(fused[#loc71, #loc72])
#loc153 = loc(fused[#loc77, #loc78])
#loc154 = loc(fused[#loc79, #loc80])
#loc155 = loc(fused[#loc82, #loc83])
#loc156 = loc(fused[#loc87, #loc86])
#loc157 = loc(fused[#loc88, #loc89])
#loc158 = loc(fused[#loc90, #loc91])
#loc159 = loc(fused[#loc94, #loc92])
#loc160 = loc(fused[#loc97, #loc98])
#loc161 = loc(fused[#loc100, #loc101])
#loc163 = loc(fused[#loc105, #loc106])
#loc164 = loc(fused[#loc107, #loc108])
#loc165 = loc(fused[#loc110, #loc111])
#loc166 = loc(fused[#loc113, #loc112])
#loc167 = loc(fused[#loc114, #loc115])
#loc168 = loc(fused[#loc116, #loc117])
#loc169 = loc(fused[#loc120, #loc118])
#loc170 = loc(fused[#loc123, #loc124])
