!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc83)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc84)
  cir.func no_proto @CWE758_Undefined_Behavior__char_pointer_alloca_use_11_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc87)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc87)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc9)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc9)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc90)
          %5 = cir.const #cir.int<8> : !u64i loc(#loc15)
          %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc15)
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc91)
          %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc15)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc15)
          cir.store %9, %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc90)
          %10 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc17)
          %11 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
          cir.store %11, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc91)
          %12 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
          cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc20)
        } loc(#loc89)
      } loc(#loc88)
    } loc(#loc86)
    cir.return loc(#loc6)
  } loc(#loc85)
  cir.func no_proto @CWE758_Undefined_Behavior__char_pointer_alloca_use_11_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc93)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc23)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc94)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc25)
    cir.return loc(#loc22)
  } loc(#loc92)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc95)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc29)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc30)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc98)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc98)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc35)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc35)
      cir.if %3 {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc29)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc29)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc40)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc101)
          %5 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc102)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc46)
          %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc46)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc46)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc46)
          cir.store %9, %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc102)
          %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc30)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc30)
          cir.store %11, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc103)
          %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
          %13 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc49)
          cir.store %12, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc104)
          cir.scope {
            %14 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc106)
            %15 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc54)
            %16 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
            cir.store %16, %14 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc106)
            %17 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
            cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc57)
          } loc(#loc105)
        } loc(#loc100)
      } loc(#loc99)
    } loc(#loc97)
    cir.return loc(#loc32)
  } loc(#loc96)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc109)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc109)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc62)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc62)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc112)
          %5 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc113)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc70)
          %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc70)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc70)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc70)
          cir.store %9, %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc113)
          %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc71)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc71)
          cir.store %11, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc114)
          %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
          %13 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc74)
          cir.store %12, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
          cir.scope {
            %14 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc117)
            %15 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc79)
            %16 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
            cir.store %16, %14 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
            %17 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
            cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc82)
          } loc(#loc116)
        } loc(#loc111)
      } loc(#loc110)
    } loc(#loc108)
    cir.return loc(#loc59)
  } loc(#loc107)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":20:1)
#loc6 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":30:1)
#loc7 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":22:5)
#loc8 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":29:5)
#loc9 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":22:8)
#loc10 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":22:26)
#loc11 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":23:5)
#loc12 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":24:9)
#loc13 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":28:9)
#loc14 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":25:13)
#loc15 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":25:42)
#loc16 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":26:13)
#loc17 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":26:28)
#loc18 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":26:27)
#loc19 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":27:23)
#loc20 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":27:13)
#loc21 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":77:1)
#loc22 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":81:1)
#loc23 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":79:5)
#loc24 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":79:11)
#loc25 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":80:5)
#loc26 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":80:11)
#loc27 = loc("../../testcasesupport/std_testcase_io.h":50:1)
#loc28 = loc("../../testcasesupport/std_testcase_io.h":50:24)
#loc29 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":42:19)
#loc30 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":49:20)
#loc31 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":37:1)
#loc32 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":57:1)
#loc33 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":39:5)
#loc34 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":56:5)
#loc35 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":39:8)
#loc36 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":39:27)
#loc37 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":40:5)
#loc38 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":43:5)
#loc39 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":45:5)
#loc40 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":42:9)
#loc41 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":46:9)
#loc42 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":55:9)
#loc43 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":47:13)
#loc44 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":47:20)
#loc45 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":48:13)
#loc46 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":48:42)
#loc47 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":49:13)
#loc48 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":50:24)
#loc49 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":50:14)
#loc50 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":50:13)
#loc51 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":51:13)
#loc52 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":54:13)
#loc53 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":52:17)
#loc54 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":52:32)
#loc55 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":52:31)
#loc56 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":53:27)
#loc57 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":53:17)
#loc58 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":60:1)
#loc59 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":75:1)
#loc60 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":62:5)
#loc61 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":74:5)
#loc62 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":62:8)
#loc63 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":62:26)
#loc64 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":63:5)
#loc65 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":64:9)
#loc66 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":73:9)
#loc67 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":65:13)
#loc68 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":65:20)
#loc69 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":66:13)
#loc70 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":66:42)
#loc71 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":67:20)
#loc72 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":67:13)
#loc73 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":68:24)
#loc74 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":68:14)
#loc75 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":68:13)
#loc76 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":69:13)
#loc77 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":72:13)
#loc78 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":70:17)
#loc79 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":70:32)
#loc80 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":70:31)
#loc81 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":71:27)
#loc82 = loc("CWE758_Undefined_Behavior__char_pointer_alloca_use_11.c":71:17)
#loc83 = loc(fused[#loc1, #loc2])
#loc84 = loc(fused[#loc3, #loc4])
#loc85 = loc(fused[#loc5, #loc6])
#loc86 = loc(fused[#loc7, #loc8])
#loc87 = loc(fused[#loc9, #loc10])
#loc88 = loc(fused[#loc11, #loc8])
#loc89 = loc(fused[#loc12, #loc13])
#loc90 = loc(fused[#loc14, #loc15])
#loc91 = loc(fused[#loc16, #loc17])
#loc92 = loc(fused[#loc21, #loc22])
#loc93 = loc(fused[#loc23, #loc24])
#loc94 = loc(fused[#loc25, #loc26])
#loc95 = loc(fused[#loc27, #loc28])
#loc96 = loc(fused[#loc31, #loc32])
#loc97 = loc(fused[#loc33, #loc34])
#loc98 = loc(fused[#loc35, #loc36])
#loc99 = loc(fused[#loc37, #loc38, #loc39, #loc34])
#loc100 = loc(fused[#loc41, #loc42])
#loc101 = loc(fused[#loc43, #loc44])
#loc102 = loc(fused[#loc45, #loc46])
#loc103 = loc(fused[#loc47, #loc30])
#loc104 = loc(fused[#loc50, #loc48])
#loc105 = loc(fused[#loc51, #loc52])
#loc106 = loc(fused[#loc53, #loc54])
#loc107 = loc(fused[#loc58, #loc59])
#loc108 = loc(fused[#loc60, #loc61])
#loc109 = loc(fused[#loc62, #loc63])
#loc110 = loc(fused[#loc64, #loc61])
#loc111 = loc(fused[#loc65, #loc66])
#loc112 = loc(fused[#loc67, #loc68])
#loc113 = loc(fused[#loc69, #loc70])
#loc114 = loc(fused[#loc72, #loc71])
#loc115 = loc(fused[#loc75, #loc73])
#loc116 = loc(fused[#loc76, #loc77])
#loc117 = loc(fused[#loc78, #loc79])
