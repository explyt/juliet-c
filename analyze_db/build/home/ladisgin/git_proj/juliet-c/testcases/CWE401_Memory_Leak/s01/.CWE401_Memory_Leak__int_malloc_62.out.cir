!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc9 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":27:16)
#loc10 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":27:23)
#loc36 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":42:20)
#loc37 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":42:27)
#loc51 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":52:20)
#loc52 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":52:27)
#loc80 = loc(fused[#loc9, #loc10])
#loc90 = loc(fused[#loc36, #loc37])
#loc94 = loc(fused[#loc51, #loc52])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_62b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc76)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc77)
  cir.func private @printIntLine(!s32i) loc(#loc78)
  cir.func @_ZN33CWE401_Memory_Leak__int_malloc_629badSourceERPi(%arg0: !cir.ptr<!cir.ptr<!s32i>> loc(fused[#loc9, #loc10])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc80)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc11)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc12)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc13)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc13)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc81)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc82)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc12)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc83)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc17)
    cir.store %7, %8 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc84)
    cir.scope {
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc20)
      %20 = cir.load %19 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc20)
      %21 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc21)
      %22 = cir.cmp(eq, %20, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc86)
      cir.if %22 {
        %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc23)
        %24 = cir.const #cir.int<1> : !s32i loc(#loc24)
        %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc25)
        cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc23)
      } loc(#loc87)
    } loc(#loc85)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc26)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc27)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc27)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc29)
    cir.store %9, %13 : !s32i, !cir.ptr<!s32i> loc(#loc88)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc30)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc30)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc31)
    %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc32)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc33)
    cir.return loc(#loc8)
  } loc(#loc79)
  cir.func @_ZN33CWE401_Memory_Leak__int_malloc_6213goodG2BSourceERPi(%arg0: !cir.ptr<!cir.ptr<!s32i>> loc(fused[#loc36, #loc37])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc90)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc38)
    %1 = cir.const #cir.int<100> : !s32i loc(#loc39)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc39)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc39)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc39)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc39)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc39)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc39)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc40)
    cir.store %7, %8 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc91)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc41)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc42)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc42)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc43)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc44)
    cir.store %9, %13 : !s32i, !cir.ptr<!s32i> loc(#loc92)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc45)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc45)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc46)
    %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc47)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc45)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc48)
    cir.return loc(#loc35)
  } loc(#loc89)
  cir.func @_ZN33CWE401_Memory_Leak__int_malloc_6213goodB2GSourceERPi(%arg0: !cir.ptr<!cir.ptr<!s32i>> loc(fused[#loc51, #loc52])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc94)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc53)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc54)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc55)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc55)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc95)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc96)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc54)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc97)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc59)
    cir.store %7, %8 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc98)
    cir.scope {
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc62)
      %20 = cir.load %19 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc62)
      %21 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc63)
      %22 = cir.cmp(eq, %20, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc100)
      cir.if %22 {
        %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc65)
        %24 = cir.const #cir.int<1> : !s32i loc(#loc66)
        %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc67)
        cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc65)
      } loc(#loc101)
    } loc(#loc99)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc68)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc69)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc69)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc71)
    cir.store %9, %13 : !s32i, !cir.ptr<!s32i> loc(#loc102)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc72)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc72)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc73)
    %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc74)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc75)
    cir.return loc(#loc50)
  } loc(#loc93)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_62b.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":27:1)
#loc8 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":35:1)
#loc11 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":28:1)
#loc12 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":30:19)
#loc13 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":30:26)
#loc14 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":30:30)
#loc15 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":30:40)
#loc16 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":30:41)
#loc17 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":30:5)
#loc18 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":31:5)
#loc19 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":31:33)
#loc20 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":31:9)
#loc21 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":31:17)
#loc22 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":31:23)
#loc23 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":31:24)
#loc24 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":31:30)
#loc25 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":31:29)
#loc26 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":33:15)
#loc27 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":33:5)
#loc28 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":33:10)
#loc29 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":33:11)
#loc30 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":34:18)
#loc31 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":34:23)
#loc32 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":34:24)
#loc33 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":34:5)
#loc34 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":42:1)
#loc35 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":49:1)
#loc38 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":43:1)
#loc39 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":45:19)
#loc40 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":45:5)
#loc41 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":47:15)
#loc42 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":47:5)
#loc43 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":47:10)
#loc44 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":47:11)
#loc45 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":48:18)
#loc46 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":48:23)
#loc47 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":48:24)
#loc48 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":48:5)
#loc49 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":52:1)
#loc50 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":60:1)
#loc53 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":53:1)
#loc54 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":55:19)
#loc55 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":55:26)
#loc56 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":55:30)
#loc57 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":55:40)
#loc58 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":55:41)
#loc59 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":55:5)
#loc60 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":56:5)
#loc61 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":56:33)
#loc62 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":56:9)
#loc63 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":56:17)
#loc64 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":56:23)
#loc65 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":56:24)
#loc66 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":56:30)
#loc67 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":56:29)
#loc68 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":58:15)
#loc69 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":58:5)
#loc70 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":58:10)
#loc71 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":58:11)
#loc72 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":59:18)
#loc73 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":59:23)
#loc74 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":59:24)
#loc75 = loc("CWE401_Memory_Leak__int_malloc_62b.cpp":59:5)
#loc76 = loc(fused[#loc1, #loc2])
#loc77 = loc(fused[#loc3, #loc4])
#loc78 = loc(fused[#loc5, #loc6])
#loc79 = loc(fused[#loc7, #loc8])
#loc81 = loc(fused[#loc14, #loc15])
#loc82 = loc(fused[#loc13, #loc15])
#loc83 = loc(fused[#loc12, #loc16])
#loc84 = loc(fused[#loc17, #loc16])
#loc85 = loc(fused[#loc18, #loc19])
#loc86 = loc(fused[#loc20, #loc21])
#loc87 = loc(fused[#loc22, #loc19])
#loc88 = loc(fused[#loc27, #loc26])
#loc89 = loc(fused[#loc34, #loc35])
#loc91 = loc(fused[#loc40, #loc39])
#loc92 = loc(fused[#loc42, #loc41])
#loc93 = loc(fused[#loc49, #loc50])
#loc95 = loc(fused[#loc56, #loc57])
#loc96 = loc(fused[#loc55, #loc57])
#loc97 = loc(fused[#loc54, #loc58])
#loc98 = loc(fused[#loc59, #loc58])
#loc99 = loc(fused[#loc60, #loc61])
#loc100 = loc(fused[#loc62, #loc63])
#loc101 = loc(fused[#loc64, #loc61])
#loc102 = loc(fused[#loc69, #loc68])
