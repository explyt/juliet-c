!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s03/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_ZN59CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_619badSourceEPi(!cir.ptr<!s32i>) -> !cir.ptr<!s32i> loc(#loc62)
  cir.func private @printIntLine(!s32i) loc(#loc63)
  cir.func @_ZN59CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_613badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc65)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc9)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc66)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc11)
    %3 = cir.call @_ZN59CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_619badSourceEPi(%2) : (!cir.ptr<!s32i>) -> !cir.ptr<!s32i> loc(#loc12)
    cir.store %3, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc67)
    cir.scope {
      %4 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc69)
      %5 = cir.const #cir.zero : !cir.array<!s32i x 100> loc(#loc69)
      cir.store %5, %4 : !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>> loc(#loc69)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc19)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc19)
      %8 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc20)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc20)
      %10 = cir.const #cir.int<100> : !s32i loc(#loc21)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc21)
      %12 = cir.const #cir.int<4> : !u64i loc(#loc70)
      %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc71)
      cir.libc.memcpy %13 bytes from %9 to %7 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc72)
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc26)
      %15 = cir.const #cir.int<0> : !s32i loc(#loc27)
      %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc28)
      %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc26)
      cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc29)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc30)
      cir.delete.array %18 : <!s32i> loc(#loc30)
    } loc(#loc68)
    cir.return loc(#loc6)
  } loc(#loc64)
  cir.func private @_ZN59CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_6113goodG2BSourceEPi(!cir.ptr<!s32i>) -> !cir.ptr<!s32i> loc(#loc73)
  cir.func internal private @_ZN59CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc75)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc37)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc76)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc39)
    %3 = cir.call @_ZN59CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_6113goodG2BSourceEPi(%2) : (!cir.ptr<!s32i>) -> !cir.ptr<!s32i> loc(#loc40)
    cir.store %3, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc77)
    cir.scope {
      %4 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc79)
      %5 = cir.const #cir.zero : !cir.array<!s32i x 100> loc(#loc79)
      cir.store %5, %4 : !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>> loc(#loc79)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc47)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc47)
      %8 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc48)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc48)
      %10 = cir.const #cir.int<100> : !s32i loc(#loc49)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc49)
      %12 = cir.const #cir.int<4> : !u64i loc(#loc80)
      %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc81)
      cir.libc.memcpy %13 bytes from %9 to %7 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc82)
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc54)
      %15 = cir.const #cir.int<0> : !s32i loc(#loc55)
      %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc56)
      %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc54)
      cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc57)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc58)
      cir.delete.array %18 : <!s32i> loc(#loc58)
    } loc(#loc78)
    cir.return loc(#loc34)
  } loc(#loc74)
  cir.func @_ZN59CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_614goodEv() extra(#fn_attr) {
    cir.call @_ZN59CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61L7goodG2BEv() : () -> () loc(#loc61)
    cir.return loc(#loc60)
  } loc(#loc83)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s03/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":25:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":25:27)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":27:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":39:1)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":29:5)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":29:11)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":30:12)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":30:5)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":31:22)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":31:12)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":31:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":31:26)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":32:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":38:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":33:9)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":33:29)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":35:16)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":35:22)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":35:30)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":35:34)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":35:44)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":35:9)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":35:45)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":36:22)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":36:27)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":36:28)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":36:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":37:19)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":46:1)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":46:31)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":48:1)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":60:1)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":50:5)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":50:11)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":51:12)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":51:5)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":52:26)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":52:12)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":52:5)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":52:30)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":53:5)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":59:5)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":54:9)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":54:29)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":56:16)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":56:22)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":56:30)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":56:34)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":56:44)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":56:9)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":56:45)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":57:22)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":57:27)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":57:28)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":57:9)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":58:19)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":62:1)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":65:1)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_memcpy_61a.cpp":64:5)
#loc62 = loc(fused[#loc1, #loc2])
#loc63 = loc(fused[#loc3, #loc4])
#loc64 = loc(fused[#loc5, #loc6])
#loc65 = loc(fused[#loc7, #loc8])
#loc66 = loc(fused[#loc10, #loc9])
#loc67 = loc(fused[#loc13, #loc14])
#loc68 = loc(fused[#loc15, #loc16])
#loc69 = loc(fused[#loc17, #loc18])
#loc70 = loc(fused[#loc22, #loc23])
#loc71 = loc(fused[#loc21, #loc23])
#loc72 = loc(fused[#loc24, #loc25])
#loc73 = loc(fused[#loc31, #loc32])
#loc74 = loc(fused[#loc33, #loc34])
#loc75 = loc(fused[#loc35, #loc36])
#loc76 = loc(fused[#loc38, #loc37])
#loc77 = loc(fused[#loc41, #loc42])
#loc78 = loc(fused[#loc43, #loc44])
#loc79 = loc(fused[#loc45, #loc46])
#loc80 = loc(fused[#loc50, #loc51])
#loc81 = loc(fused[#loc49, #loc51])
#loc82 = loc(fused[#loc52, #loc53])
#loc83 = loc(fused[#loc59, #loc60])
