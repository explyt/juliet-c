!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc5 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":22:61)
#loc6 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":22:67)
#loc18 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":37:65)
#loc19 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":37:71)
#loc34 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":48:65)
#loc35 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":48:71)
#loc54 = loc(fused[#loc5, #loc6])
#loc59 = loc(fused[#loc18, #loc19])
#loc65 = loc(fused[#loc34, #loc35])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_min_predec_52c.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printIntLine(!s32i) loc(#loc52)
  cir.func  @CWE191_Integer_Underflow__short_min_predec_52c_badSink(%arg0: !s16i loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc54)
    cir.store %arg0, %0 : !s16i, !cir.ptr<!s16i> loc(#loc7)
    cir.scope {
      %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc56)
      %2 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc12)
      %3 = cir.unary(dec, %2) : !s16i, !s16i loc(#loc12)
      cir.store %3, %0 : !s16i, !cir.ptr<!s16i> loc(#loc57)
      %4 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc11)
      cir.store %4, %1 : !s16i, !cir.ptr<!s16i> loc(#loc56)
      %5 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc14)
      %6 = cir.cast(integral, %5 : !s16i), !s32i loc(#loc14)
      cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc15)
    } loc(#loc55)
    cir.return loc(#loc4)
  } loc(#loc53)
  cir.func  @CWE191_Integer_Underflow__short_min_predec_52c_goodG2BSink(%arg0: !s16i loc(fused[#loc18, #loc19])) extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc59)
    cir.store %arg0, %0 : !s16i, !cir.ptr<!s16i> loc(#loc20)
    cir.scope {
      %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc61)
      %2 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc25)
      %3 = cir.unary(dec, %2) : !s16i, !s16i loc(#loc25)
      cir.store %3, %0 : !s16i, !cir.ptr<!s16i> loc(#loc62)
      %4 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc24)
      cir.store %4, %1 : !s16i, !cir.ptr<!s16i> loc(#loc61)
      %5 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc27)
      %6 = cir.cast(integral, %5 : !s16i), !s32i loc(#loc27)
      cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc28)
    } loc(#loc60)
    cir.return loc(#loc17)
  } loc(#loc58)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc63)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc31)
  cir.func  @CWE191_Integer_Underflow__short_min_predec_52c_goodB2GSink(%arg0: !s16i loc(fused[#loc34, #loc35])) extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc65)
    cir.store %arg0, %0 : !s16i, !cir.ptr<!s16i> loc(#loc36)
    cir.scope {
      %1 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc39)
      %2 = cir.cast(integral, %1 : !s16i), !s32i loc(#loc39)
      %3 = cir.const #cir.int<32767> : !s32i loc(#loc40)
      %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc40)
      %5 = cir.const #cir.int<1> : !s32i loc(#loc40)
      %6 = cir.binop(sub, %4, %5) nsw : !s32i loc(#loc40)
      %7 = cir.cmp(gt, %2, %6) : !s32i, !s32i loc(#loc67)
      %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc41)
      cir.if %8 {
        %9 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc69)
        %10 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc47)
        %11 = cir.unary(dec, %10) : !s16i, !s16i loc(#loc47)
        cir.store %11, %0 : !s16i, !cir.ptr<!s16i> loc(#loc70)
        %12 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc46)
        cir.store %12, %9 : !s16i, !cir.ptr<!s16i> loc(#loc69)
        %13 = cir.load %9 : !cir.ptr<!s16i>, !s16i loc(#loc49)
        %14 = cir.cast(integral, %13 : !s16i), !s32i loc(#loc49)
        cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc50)
      } else {
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc31)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc31)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc51)
      } loc(#loc68)
    } loc(#loc66)
    cir.return loc(#loc33)
  } loc(#loc64)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_min_predec_52c.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":22:1)
#loc4 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":30:1)
#loc7 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":23:1)
#loc8 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":24:5)
#loc9 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":29:5)
#loc10 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":27:9)
#loc11 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":27:24)
#loc12 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":26:9)
#loc13 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":26:11)
#loc14 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":28:22)
#loc15 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":28:9)
#loc16 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":37:1)
#loc17 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":45:1)
#loc20 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":38:1)
#loc21 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":39:5)
#loc22 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":44:5)
#loc23 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":42:9)
#loc24 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":42:24)
#loc25 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":41:9)
#loc26 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":41:11)
#loc27 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":43:22)
#loc28 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":43:9)
#loc29 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc30 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc31 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":59:19)
#loc32 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":48:1)
#loc33 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":61:1)
#loc36 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":49:1)
#loc37 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":51:5)
#loc38 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":60:5)
#loc39 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":51:9)
#loc40 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":51:16)
#loc41 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":51:14)
#loc42 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":52:5)
#loc43 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":56:5)
#loc44 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":58:5)
#loc45 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":54:9)
#loc46 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":54:24)
#loc47 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":53:9)
#loc48 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":53:11)
#loc49 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":55:22)
#loc50 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":55:9)
#loc51 = loc("CWE191_Integer_Underflow__short_min_predec_52c.c":59:9)
#loc52 = loc(fused[#loc1, #loc2])
#loc53 = loc(fused[#loc3, #loc4])
#loc55 = loc(fused[#loc8, #loc9])
#loc56 = loc(fused[#loc10, #loc11])
#loc57 = loc(fused[#loc12, #loc13])
#loc58 = loc(fused[#loc16, #loc17])
#loc60 = loc(fused[#loc21, #loc22])
#loc61 = loc(fused[#loc23, #loc24])
#loc62 = loc(fused[#loc25, #loc26])
#loc63 = loc(fused[#loc29, #loc30])
#loc64 = loc(fused[#loc32, #loc33])
#loc66 = loc(fused[#loc37, #loc38])
#loc67 = loc(fused[#loc39, #loc40])
#loc68 = loc(fused[#loc42, #loc43, #loc44, #loc38])
#loc69 = loc(fused[#loc45, #loc46])
#loc70 = loc(fused[#loc47, #loc48])
