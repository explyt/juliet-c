!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc157)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc158)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc159)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc160)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.global "private" internal dsolocal @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45_badData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc161)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc163)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc17)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc164)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc166)
      %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc166)
      cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc166)
      cir.scope {
        %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc25)
        %9 = cir.const #cir.int<3> : !s32i loc(#loc26)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc26)
        %11 = cir.const #cir.int<4> : !u64i loc(#loc26)
        %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc26)
        %13 = cir.const #cir.int<2> : !s32i loc(#loc26)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc26)
        %15 = cir.binop(add, %12, %14) : !u64i loc(#loc26)
        %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc26)
        %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc158)
        %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc27)
        %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc28)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc29)
        %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc168)
        cir.if %22 {
          %23 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc33)
          %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc34)
          cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc170)
        } else {
          %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc37)
        } loc(#loc169)
      } loc(#loc167)
    } loc(#loc165)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    %4 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45_badData : !cir.ptr<!s32i> loc(#loc161)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc171)
    %5 = cir.get_global @badSink : !cir.ptr<!cir.func<()>> loc(#loc172)
    cir.call %5() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc40)
    cir.return loc(#loc13)
  } loc(#loc162)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc174)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc44)
    cir.return loc(#loc43)
  } loc(#loc173)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc175)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc176)
  cir.func private @printIntLine(!s32i) loc(#loc177)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc178)
  cir.func no_proto internal private @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc180)
    %1 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45_badData : !cir.ptr<!s32i> loc(#loc161)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc57)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc182)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc183)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc64)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc65)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc65)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc184)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc185)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc64)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc186)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc187)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc72)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc73)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc73)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc189)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc75)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc76)
          %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc77)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc75)
        } loc(#loc190)
      } loc(#loc188)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc80)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc80)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc192)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc82)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc83)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc83)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc193)
          cir.condition(%24) loc(#loc84)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc86)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc87)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc88)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc89)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc195)
          } loc(#loc194)
          cir.yield loc(#loc79)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc90)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc91)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc196)
          cir.yield loc(#loc191)
        } loc(#loc191)
      } loc(#loc191)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc92)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc93)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc94)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc92)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc95)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc96)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc97)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc97)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc96)
    } loc(#loc181)
    cir.return loc(#loc55)
  } loc(#loc179)
  cir.global "private" internal dsolocal @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45_goodG2BData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc197)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc199)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc105)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc200)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc107)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc201)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %5 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45_goodG2BData : !cir.ptr<!s32i> loc(#loc197)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc202)
    %6 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<()>> loc(#loc203)
    cir.call %6() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc111)
    cir.return loc(#loc101)
  } loc(#loc198)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc205)
    %1 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45_goodG2BData : !cir.ptr<!s32i> loc(#loc197)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc116)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc205)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc207)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc208)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc123)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc124)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc124)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc209)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc210)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc123)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc211)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc212)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc131)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc132)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc132)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc214)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc134)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc135)
          %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc136)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc134)
        } loc(#loc215)
      } loc(#loc213)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc139)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc139)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc217)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc141)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc142)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc142)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc218)
          cir.condition(%24) loc(#loc143)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc145)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc146)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc147)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc148)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc220)
          } loc(#loc219)
          cir.yield loc(#loc138)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc149)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc150)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc221)
          cir.yield loc(#loc216)
        } loc(#loc216)
      } loc(#loc216)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc151)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc152)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc153)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc151)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc154)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc155)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc156)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc156)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc155)
    } loc(#loc206)
    cir.return loc(#loc114)
  } loc(#loc204)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":60:23)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":21:1)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":21:12)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":45:1)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":65:1)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":47:5)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":47:9)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":49:13)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":49:12)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":49:5)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":50:5)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":62:5)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":51:9)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":51:45)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":53:9)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":61:9)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":53:19)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":53:32)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":53:49)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":53:13)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":53:59)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":54:9)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":57:9)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":59:9)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":56:25)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":56:20)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":56:13)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":56:36)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":60:13)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":63:75)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":63:5)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":64:5)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":64:13)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":102:1)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":105:1)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":104:5)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":104:13)
#loc46 = loc("/usr/include/stdlib.h":672:1)
#loc47 = loc("/usr/include/stdlib.h":672:45)
#loc48 = loc("/usr/include/stdlib.h":756:1)
#loc49 = loc("/usr/include/stdlib.h":756:70)
#loc50 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc51 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc52 = loc("/usr/include/stdlib.h":687:1)
#loc53 = loc("/usr/include/stdlib.h":687:32)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":26:1)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":43:1)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":28:5)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":28:16)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":29:5)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":42:5)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":30:9)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":30:16)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":31:9)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":31:14)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":34:28)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":34:35)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":34:42)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":34:52)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":34:53)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":34:9)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":35:9)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":35:43)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":35:13)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":35:27)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":35:33)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":35:34)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":35:40)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":35:39)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":36:9)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":39:9)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":36:18)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":36:14)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":36:21)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":36:33)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":36:23)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":37:9)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":38:29)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":38:13)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":38:24)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":38:25)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":36:40)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":36:39)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":40:22)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":40:33)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":40:34)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":40:9)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":41:9)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":41:14)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":22:1)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":22:12)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":91:1)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":100:1)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":93:5)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":93:9)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":95:13)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":95:12)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":95:5)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":97:12)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":97:5)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":98:79)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":98:5)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":99:5)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":99:17)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":72:1)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":89:1)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":74:5)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":74:16)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":75:5)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":88:5)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":76:9)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":76:16)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":77:9)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":77:14)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":80:28)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":80:35)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":80:42)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":80:52)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":80:53)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":80:9)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":81:9)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":81:43)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":81:13)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":81:27)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":81:33)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":81:34)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":81:40)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":81:39)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":82:9)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":85:9)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":82:18)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":82:14)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":82:21)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":82:33)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":82:23)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":83:9)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":84:29)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":84:13)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":84:24)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":84:25)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":82:40)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":82:39)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":86:22)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":86:33)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":86:34)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":86:9)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":87:9)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_45.c":87:14)
#loc157 = loc(fused[#loc1, #loc2])
#loc158 = loc(fused[#loc3, #loc4])
#loc159 = loc(fused[#loc5, #loc6])
#loc160 = loc(fused[#loc7, #loc8])
#loc161 = loc(fused[#loc10, #loc11])
#loc162 = loc(fused[#loc12, #loc13])
#loc163 = loc(fused[#loc14, #loc15])
#loc164 = loc(fused[#loc18, #loc16])
#loc165 = loc(fused[#loc19, #loc20])
#loc166 = loc(fused[#loc21, #loc22])
#loc167 = loc(fused[#loc23, #loc24])
#loc168 = loc(fused[#loc28, #loc29])
#loc169 = loc(fused[#loc30, #loc31, #loc32, #loc24])
#loc170 = loc(fused[#loc35, #loc36])
#loc171 = loc(fused[#loc39, #loc38])
#loc172 = loc(fused[#loc40, #loc41])
#loc173 = loc(fused[#loc42, #loc43])
#loc174 = loc(fused[#loc44, #loc45])
#loc175 = loc(fused[#loc46, #loc47])
#loc176 = loc(fused[#loc48, #loc49])
#loc177 = loc(fused[#loc50, #loc51])
#loc178 = loc(fused[#loc52, #loc53])
#loc179 = loc(fused[#loc54, #loc55])
#loc180 = loc(fused[#loc56, #loc57])
#loc181 = loc(fused[#loc58, #loc59])
#loc182 = loc(fused[#loc60, #loc61])
#loc183 = loc(fused[#loc62, #loc63])
#loc184 = loc(fused[#loc66, #loc67])
#loc185 = loc(fused[#loc65, #loc67])
#loc186 = loc(fused[#loc64, #loc68])
#loc187 = loc(fused[#loc69, #loc68])
#loc188 = loc(fused[#loc70, #loc71])
#loc189 = loc(fused[#loc72, #loc73])
#loc190 = loc(fused[#loc74, #loc71])
#loc191 = loc(fused[#loc78, #loc79])
#loc192 = loc(fused[#loc81, #loc80])
#loc193 = loc(fused[#loc82, #loc83])
#loc194 = loc(fused[#loc85, #loc79])
#loc195 = loc(fused[#loc87, #loc86])
#loc196 = loc(fused[#loc91, #loc90])
#loc197 = loc(fused[#loc98, #loc99])
#loc198 = loc(fused[#loc100, #loc101])
#loc199 = loc(fused[#loc102, #loc103])
#loc200 = loc(fused[#loc106, #loc104])
#loc201 = loc(fused[#loc108, #loc107])
#loc202 = loc(fused[#loc110, #loc109])
#loc203 = loc(fused[#loc111, #loc112])
#loc204 = loc(fused[#loc113, #loc114])
#loc205 = loc(fused[#loc115, #loc116])
#loc206 = loc(fused[#loc117, #loc118])
#loc207 = loc(fused[#loc119, #loc120])
#loc208 = loc(fused[#loc121, #loc122])
#loc209 = loc(fused[#loc125, #loc126])
#loc210 = loc(fused[#loc124, #loc126])
#loc211 = loc(fused[#loc123, #loc127])
#loc212 = loc(fused[#loc128, #loc127])
#loc213 = loc(fused[#loc129, #loc130])
#loc214 = loc(fused[#loc131, #loc132])
#loc215 = loc(fused[#loc133, #loc130])
#loc216 = loc(fused[#loc137, #loc138])
#loc217 = loc(fused[#loc140, #loc139])
#loc218 = loc(fused[#loc141, #loc142])
#loc219 = loc(fused[#loc144, #loc138])
#loc220 = loc(fused[#loc146, #loc145])
#loc221 = loc(fused[#loc150, #loc149])
