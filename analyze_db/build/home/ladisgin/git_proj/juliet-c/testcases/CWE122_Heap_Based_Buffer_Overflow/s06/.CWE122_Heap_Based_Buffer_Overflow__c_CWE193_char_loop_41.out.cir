!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":28:71)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":28:78)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":59:75)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":59:82)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":102:10)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":102:14)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":102:20)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":102:32)
#loc169 = loc(fused[#loc13, #loc14])
#loc194 = loc(fused[#loc74, #loc75])
#loc211 = loc(fused[#loc121, #loc122])
#loc212 = loc(fused[#loc123, #loc124])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41_goodG2BSink.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc163)
  cir.global "private" constant cir_private @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41_badSink.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc164)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc165)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc166)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc167)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc13, #loc14])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc169)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc15)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc164)
      %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc171)
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc172)
      %4 = cir.get_global @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41_badSink.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc164)
      cir.copy %4 to %1 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc164)
      %5 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc21)
      %6 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc22)
      %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc21)
      cir.store %7, %3 : !u64i, !cir.ptr<!u64i> loc(#loc173)
      cir.scope {
        %12 = cir.const #cir.int<0> : !s32i loc(#loc27)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc27)
        cir.store %13, %2 : !u64i, !cir.ptr<!u64i> loc(#loc175)
        cir.for : cond {
          %14 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc29)
          %15 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc30)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc31)
          %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc31)
          %18 = cir.binop(add, %15, %17) : !u64i loc(#loc176)
          %19 = cir.cmp(lt, %14, %18) : !u64i, !cir.bool loc(#loc177)
          cir.condition(%19) loc(#loc32)
        } body {
          cir.scope {
            %14 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc34)
            %15 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc35)
            %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !u64i), !cir.ptr<!s8i> loc(#loc35)
            %17 = cir.load %16 : !cir.ptr<!s8i>, !s8i loc(#loc35)
            %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
            %19 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc37)
            %20 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %19 : !u64i), !cir.ptr<!s8i> loc(#loc38)
            cir.store %17, %20 : !s8i, !cir.ptr<!s8i> loc(#loc179)
          } loc(#loc178)
          cir.yield loc(#loc26)
        } step {
          %14 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc40)
          %15 = cir.unary(inc, %14) : !u64i, !u64i loc(#loc41)
          cir.store %15, %2 : !u64i, !cir.ptr<!u64i> loc(#loc180)
          cir.yield loc(#loc174)
        } loc(#loc174)
      } loc(#loc174)
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
      cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc43)
      %9 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc44)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc45)
      cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc44)
    } loc(#loc170)
    cir.return loc(#loc12)
  } loc(#loc168)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc181)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc182)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc184)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc54)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc185)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc56)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc57)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc57)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc186)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc187)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc56)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc188)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc189)
    cir.scope {
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
      %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc65)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc65)
      %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s8i>, !cir.bool loc(#loc191)
      cir.if %13 {
        %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc67)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc68)
        %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc69)
        cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc67)
      } loc(#loc192)
    } loc(#loc190)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41_badSink(%9) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    cir.return loc(#loc51)
  } loc(#loc183)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc74, #loc75])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc194)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc76)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc163)
      %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc196)
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc197)
      %4 = cir.get_global @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41_goodG2BSink.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc163)
      cir.copy %4 to %1 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc163)
      %5 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc82)
      %6 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc83)
      %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc82)
      cir.store %7, %3 : !u64i, !cir.ptr<!u64i> loc(#loc198)
      cir.scope {
        %12 = cir.const #cir.int<0> : !s32i loc(#loc88)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc88)
        cir.store %13, %2 : !u64i, !cir.ptr<!u64i> loc(#loc200)
        cir.for : cond {
          %14 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc90)
          %15 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc91)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc92)
          %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc92)
          %18 = cir.binop(add, %15, %17) : !u64i loc(#loc201)
          %19 = cir.cmp(lt, %14, %18) : !u64i, !cir.bool loc(#loc202)
          cir.condition(%19) loc(#loc93)
        } body {
          cir.scope {
            %14 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc95)
            %15 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc96)
            %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !u64i), !cir.ptr<!s8i> loc(#loc96)
            %17 = cir.load %16 : !cir.ptr<!s8i>, !s8i loc(#loc96)
            %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
            %19 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc98)
            %20 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %19 : !u64i), !cir.ptr<!s8i> loc(#loc99)
            cir.store %17, %20 : !s8i, !cir.ptr<!s8i> loc(#loc204)
          } loc(#loc203)
          cir.yield loc(#loc87)
        } step {
          %14 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc101)
          %15 = cir.unary(inc, %14) : !u64i, !u64i loc(#loc102)
          cir.store %15, %2 : !u64i, !cir.ptr<!u64i> loc(#loc205)
          cir.yield loc(#loc199)
        } loc(#loc199)
      } loc(#loc199)
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
      cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc104)
      %9 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc105)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc106)
      cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc105)
    } loc(#loc195)
    cir.return loc(#loc73)
  } loc(#loc193)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc207)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc109)
    cir.return loc(#loc108)
  } loc(#loc206)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc208)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc209)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc115)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc116)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc117)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc118)
  cir.func @main(%arg0: !s32i loc(fused[#loc121, #loc122]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc123, #loc124])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc211)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc212)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc120)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc125)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc125)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc126)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc127)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc127)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc128)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc115)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc115)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc129)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41_good : !cir.ptr<!cir.func<!void ()>> loc(#loc213)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41_good() : () -> () loc(#loc130)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc116)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc116)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc132)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc117)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc117)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc133)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc214)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41_bad() : () -> () loc(#loc134)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc118)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc118)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc136)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc137)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc215)
    cir.return %17 : !s32i loc(#loc215)
  } loc(#loc210)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc217)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc143)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc218)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc145)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc146)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc147)
    %5 = cir.binop(add, %3, %4) nsw : !s32i loc(#loc146)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc146)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc219)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc220)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc145)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc221)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc222)
    cir.scope {
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc156)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc156)
      %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc224)
      cir.if %15 {
        %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc158)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc159)
        %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc160)
        cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc158)
      } loc(#loc225)
    } loc(#loc223)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41_goodG2BSink(%11) : (!cir.ptr<!s8i>) -> () loc(#loc162)
    cir.return loc(#loc140)
  } loc(#loc216)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":62:9)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":62:29)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":31:9)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":31:29)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":28:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":43:1)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":29:1)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":30:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":42:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":32:9)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":32:16)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":32:19)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":33:21)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":33:28)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":33:9)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":33:34)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":36:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":39:9)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":36:18)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":36:14)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":36:21)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":36:25)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":36:37)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":36:23)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":37:9)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":38:30)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":38:23)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":38:13)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":38:18)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":38:19)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":38:31)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":36:41)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":36:40)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":40:19)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":40:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":41:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":41:14)
#loc46 = loc("/usr/include/stdlib.h":672:1)
#loc47 = loc("/usr/include/stdlib.h":672:45)
#loc48 = loc("/usr/include/stdlib.h":756:1)
#loc49 = loc("/usr/include/stdlib.h":756:70)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":45:1)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":53:1)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":47:5)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":47:12)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":48:12)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":48:5)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":50:20)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":50:27)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":50:30)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":50:41)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":50:42)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":50:5)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":51:5)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":51:33)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":51:9)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":51:17)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":51:23)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":51:24)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":51:30)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":51:29)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":52:70)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":52:5)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":59:1)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":74:1)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":60:1)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":61:5)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":73:5)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":63:9)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":63:16)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":63:19)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":64:21)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":64:28)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":64:9)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":64:34)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":67:9)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":70:9)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":67:18)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":67:14)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":67:21)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":67:25)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":67:37)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":67:23)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":68:9)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":69:30)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":69:23)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":69:13)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":69:18)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":69:19)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":69:31)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":67:41)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":67:40)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":71:19)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":71:9)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":72:9)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":72:14)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":87:1)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":90:1)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":89:5)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":89:13)
#loc111 = loc("/usr/include/stdlib.h":575:1)
#loc112 = loc("/usr/include/stdlib.h":575:41)
#loc113 = loc("/usr/include/time.h":76:1)
#loc114 = loc("/usr/include/time.h":76:38)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":107:15)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":109:15)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":112:15)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":114:15)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":102:1)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":117:1)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":103:1)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":105:27)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":105:22)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":105:5)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":107:5)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":108:5)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":108:67)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":109:5)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":112:5)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":113:5)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":113:66)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":114:5)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":116:12)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":116:5)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":77:1)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":85:1)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":79:5)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":79:12)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":80:12)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":80:5)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":82:20)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":82:28)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":82:31)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":82:34)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":82:45)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":82:27)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":82:46)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":82:5)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":83:5)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":83:33)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":83:9)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":83:17)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":83:23)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":83:24)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":83:30)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":83:29)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":84:74)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_41.c":84:5)
#loc163 = loc(fused[#loc1, #loc2])
#loc164 = loc(fused[#loc3, #loc4])
#loc165 = loc(fused[#loc5, #loc6])
#loc166 = loc(fused[#loc7, #loc8])
#loc167 = loc(fused[#loc9, #loc10])
#loc168 = loc(fused[#loc11, #loc12])
#loc170 = loc(fused[#loc16, #loc17])
#loc171 = loc(fused[#loc18, #loc19])
#loc172 = loc(fused[#loc18, #loc20])
#loc173 = loc(fused[#loc23, #loc24])
#loc174 = loc(fused[#loc25, #loc26])
#loc175 = loc(fused[#loc28, #loc27])
#loc176 = loc(fused[#loc30, #loc31])
#loc177 = loc(fused[#loc29, #loc31])
#loc178 = loc(fused[#loc33, #loc26])
#loc179 = loc(fused[#loc36, #loc39])
#loc180 = loc(fused[#loc41, #loc40])
#loc181 = loc(fused[#loc46, #loc47])
#loc182 = loc(fused[#loc48, #loc49])
#loc183 = loc(fused[#loc50, #loc51])
#loc184 = loc(fused[#loc52, #loc53])
#loc185 = loc(fused[#loc55, #loc54])
#loc186 = loc(fused[#loc58, #loc59])
#loc187 = loc(fused[#loc57, #loc59])
#loc188 = loc(fused[#loc56, #loc60])
#loc189 = loc(fused[#loc61, #loc60])
#loc190 = loc(fused[#loc62, #loc63])
#loc191 = loc(fused[#loc64, #loc65])
#loc192 = loc(fused[#loc66, #loc63])
#loc193 = loc(fused[#loc72, #loc73])
#loc195 = loc(fused[#loc77, #loc78])
#loc196 = loc(fused[#loc79, #loc80])
#loc197 = loc(fused[#loc79, #loc81])
#loc198 = loc(fused[#loc84, #loc85])
#loc199 = loc(fused[#loc86, #loc87])
#loc200 = loc(fused[#loc89, #loc88])
#loc201 = loc(fused[#loc91, #loc92])
#loc202 = loc(fused[#loc90, #loc92])
#loc203 = loc(fused[#loc94, #loc87])
#loc204 = loc(fused[#loc97, #loc100])
#loc205 = loc(fused[#loc102, #loc101])
#loc206 = loc(fused[#loc107, #loc108])
#loc207 = loc(fused[#loc109, #loc110])
#loc208 = loc(fused[#loc111, #loc112])
#loc209 = loc(fused[#loc113, #loc114])
#loc210 = loc(fused[#loc119, #loc120])
#loc213 = loc(fused[#loc130, #loc131])
#loc214 = loc(fused[#loc134, #loc135])
#loc215 = loc(fused[#loc138, #loc137])
#loc216 = loc(fused[#loc139, #loc140])
#loc217 = loc(fused[#loc141, #loc142])
#loc218 = loc(fused[#loc144, #loc143])
#loc219 = loc(fused[#loc148, #loc149])
#loc220 = loc(fused[#loc150, #loc149])
#loc221 = loc(fused[#loc145, #loc151])
#loc222 = loc(fused[#loc152, #loc151])
#loc223 = loc(fused[#loc153, #loc154])
#loc224 = loc(fused[#loc155, #loc156])
#loc225 = loc(fused[#loc157, #loc154])
