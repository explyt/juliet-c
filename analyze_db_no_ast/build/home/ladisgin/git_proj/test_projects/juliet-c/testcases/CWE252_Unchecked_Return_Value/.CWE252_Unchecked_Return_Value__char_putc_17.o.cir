!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_putc_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @putc(!s32i, !cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc52)
  cir.global "private"  external @stdout : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc53)
  cir.func no_proto  @CWE252_Unchecked_Return_Value__char_putc_17_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc55)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc11)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc57)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc13)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc14)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !s32i loc(#loc58)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc15)
        cir.condition(%5) loc(#loc15)
      } body {
        cir.scope {
          %2 = cir.const #cir.int<65> : !s32i loc(#loc17)
          %3 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc53)
          %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc18)
          %5 = cir.call @putc(%2, %4) : (!s32i, !cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc19)
        } loc(#loc59)
        cir.yield loc(#loc10)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc20)
        %3 = cir.unary(inc, %2) : !s32i, !s32i loc(#loc21)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc60)
        cir.yield loc(#loc56)
      } loc(#loc56)
    } loc(#loc56)
    cir.return loc(#loc6)
  } loc(#loc54)
  cir.func no_proto  @CWE252_Unchecked_Return_Value__char_putc_17_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc62)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc24)
    cir.return loc(#loc23)
  } loc(#loc61)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc63)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"putc failed!\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc28)
  cir.func no_proto internal private  @good1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc65)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc35)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc67)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc37)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc38)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !s32i loc(#loc68)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc39)
        cir.condition(%5) loc(#loc39)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.const #cir.int<65> : !s32i loc(#loc43)
            %3 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc53)
            %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc44)
            %5 = cir.call @putc(%2, %4) : (!s32i, !cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc45)
            %6 = cir.const #cir.int<1> : !s32i loc(#loc46)
            %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc46)
            %8 = cir.cmp(eq, %5, %7) : !s32i, !s32i loc(#loc71)
            %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc47)
            cir.if %9 {
              %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc28)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc28)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc49)
            } loc(#loc72)
          } loc(#loc70)
        } loc(#loc69)
        cir.yield loc(#loc34)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc50)
        %3 = cir.unary(inc, %2) : !s32i, !s32i loc(#loc51)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc73)
        cir.yield loc(#loc66)
      } loc(#loc66)
    } loc(#loc66)
    cir.return loc(#loc30)
  } loc(#loc64)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_putc_17.c":0:0)
#loc1 = loc("/usr/include/stdio.h":612:1)
#loc2 = loc("/usr/include/stdio.h":612:43)
#loc3 = loc("/usr/include/stdio.h":150:1)
#loc4 = loc("/usr/include/stdio.h":150:14)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":24:1)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":32:1)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":26:5)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":26:9)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":27:5)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":31:5)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":27:13)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":27:9)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":27:16)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":27:20)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":27:18)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":28:5)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":30:19)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":30:24)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":30:9)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":27:24)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":27:23)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":52:1)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":55:1)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":54:5)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":54:11)
#loc26 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc27 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":47:23)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":39:1)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":50:1)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":41:5)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":41:9)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":42:5)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":49:5)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":42:13)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":42:9)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":42:16)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":42:20)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":42:18)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":43:5)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":45:9)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":48:9)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":45:23)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":45:28)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":45:13)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":45:39)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":45:36)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":46:9)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":47:13)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":42:24)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_putc_17.c":42:23)
#loc52 = loc(fused[#loc1, #loc2])
#loc53 = loc(fused[#loc3, #loc4])
#loc54 = loc(fused[#loc5, #loc6])
#loc55 = loc(fused[#loc7, #loc8])
#loc56 = loc(fused[#loc9, #loc10])
#loc57 = loc(fused[#loc12, #loc11])
#loc58 = loc(fused[#loc13, #loc14])
#loc59 = loc(fused[#loc16, #loc10])
#loc60 = loc(fused[#loc21, #loc20])
#loc61 = loc(fused[#loc22, #loc23])
#loc62 = loc(fused[#loc24, #loc25])
#loc63 = loc(fused[#loc26, #loc27])
#loc64 = loc(fused[#loc29, #loc30])
#loc65 = loc(fused[#loc31, #loc32])
#loc66 = loc(fused[#loc33, #loc34])
#loc67 = loc(fused[#loc36, #loc35])
#loc68 = loc(fused[#loc37, #loc38])
#loc69 = loc(fused[#loc40, #loc34])
#loc70 = loc(fused[#loc41, #loc42])
#loc71 = loc(fused[#loc45, #loc46])
#loc72 = loc(fused[#loc48, #loc42])
#loc73 = loc(fused[#loc51, #loc50])
