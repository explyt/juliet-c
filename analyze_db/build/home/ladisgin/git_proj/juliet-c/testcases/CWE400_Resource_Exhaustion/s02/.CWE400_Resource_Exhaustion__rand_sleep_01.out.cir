!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc15 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":36:13)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":94:10)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":94:14)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":94:20)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":94:32)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":66:13)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":68:19)
#true = #cir.bool<true> : !cir.bool
#loc105 = loc(fused[#loc36, #loc37])
#loc106 = loc(fused[#loc38, #loc39])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_sleep_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc92)
  cir.func private @usleep(!u32i) -> !s32i loc(#loc93)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc94)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_sleep_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc96)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc12)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc13)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc97)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc15)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %5 = cir.binop(and, %3, %4) : !s32i loc(#loc15)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc15)
    cir.brcond %6 ^bb1, ^bb2 loc(#loc15)
  ^bb1:  // pred: ^bb0
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc15)
    %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc15)
    %9 = cir.const #cir.int<30> : !s32i loc(#loc15)
    %10 = cir.shift(left, %8 : !u32i, %9 : !s32i) -> !u32i loc(#loc15)
    %11 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc15)
    %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc15)
    %13 = cir.const #cir.int<15> : !s32i loc(#loc15)
    %14 = cir.shift(left, %12 : !u32i, %13 : !s32i) -> !u32i loc(#loc15)
    %15 = cir.binop(xor, %10, %14) : !u32i loc(#loc15)
    %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc15)
    %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc15)
    %18 = cir.binop(xor, %15, %17) : !u32i loc(#loc15)
    cir.br ^bb3(%18 : !u32i) loc(#loc15)
  ^bb2:  // pred: ^bb0
    %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc15)
    %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc15)
    %21 = cir.const #cir.int<30> : !s32i loc(#loc15)
    %22 = cir.shift(left, %20 : !u32i, %21 : !s32i) -> !u32i loc(#loc15)
    %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc15)
    %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc15)
    %25 = cir.const #cir.int<15> : !s32i loc(#loc15)
    %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc15)
    %27 = cir.binop(xor, %22, %26) : !u32i loc(#loc15)
    %28 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc15)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc15)
    %30 = cir.binop(xor, %27, %29) : !u32i loc(#loc15)
    %31 = cir.unary(minus, %30) : !u32i, !u32i loc(#loc15)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc15)
    %34 = cir.binop(sub, %31, %33) : !u32i loc(#loc15)
    cir.br ^bb3(%34 : !u32i) loc(#loc15)
  ^bb3(%35: !u32i loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":36:13)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc15)
  ^bb4:  // pred: ^bb3
    %36 = cir.cast(integral, %35 : !u32i), !s32i loc(#loc15)
    cir.store %36, %0 : !s32i, !cir.ptr<!s32i> loc(#loc98)
    %37 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc17)
    %38 = cir.cast(integral, %37 : !s32i), !u32i loc(#loc17)
    %39 = cir.call @usleep(%38) : (!u32i) -> !s32i loc(#loc18)
    %40 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc7)
    %41 = cir.cast(array_to_ptrdecay, %40 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%41) : (!cir.ptr<!s8i>) -> () loc(#loc19)
    cir.return loc(#loc9)
  } loc(#loc95)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_sleep_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc100)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc22)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc101)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc24)
    cir.return loc(#loc21)
  } loc(#loc99)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc102)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc103)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc30)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc31)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc32)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc33)
  cir.func @main(%arg0: !s32i loc(fused[#loc36, #loc37]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc38, #loc39])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc105)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc106)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc35)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc40)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc40)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc41)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc42)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc42)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc43)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc30)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc30)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc44)
    %8 = cir.get_global @CWE400_Resource_Exhaustion__rand_sleep_01_good : !cir.ptr<!cir.func<!void ()>> loc(#loc107)
    cir.call @CWE400_Resource_Exhaustion__rand_sleep_01_good() : () -> () loc(#loc45)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc31)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc31)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc47)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc32)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc32)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    %13 = cir.get_global @CWE400_Resource_Exhaustion__rand_sleep_01_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc108)
    cir.call @CWE400_Resource_Exhaustion__rand_sleep_01_bad() : () -> () loc(#loc49)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc33)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc33)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc52)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc109)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    cir.return %17 : !s32i loc(#loc109)
  } loc(#loc104)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc111)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc58)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc59)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc112)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc61)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc113)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc63)
    %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc63)
    %6 = cir.call @usleep(%5) : (!u32i) -> !s32i loc(#loc64)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc65)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    cir.return loc(#loc55)
  } loc(#loc110)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc68)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc115)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc73)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc74)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc116)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc76)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc76)
    %5 = cir.binop(and, %3, %4) : !s32i loc(#loc76)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc76)
    cir.brcond %6 ^bb1, ^bb2 loc(#loc76)
  ^bb1:  // pred: ^bb0
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc76)
    %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc76)
    %9 = cir.const #cir.int<30> : !s32i loc(#loc76)
    %10 = cir.shift(left, %8 : !u32i, %9 : !s32i) -> !u32i loc(#loc76)
    %11 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc76)
    %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc76)
    %13 = cir.const #cir.int<15> : !s32i loc(#loc76)
    %14 = cir.shift(left, %12 : !u32i, %13 : !s32i) -> !u32i loc(#loc76)
    %15 = cir.binop(xor, %10, %14) : !u32i loc(#loc76)
    %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc76)
    %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc76)
    %18 = cir.binop(xor, %15, %17) : !u32i loc(#loc76)
    cir.br ^bb3(%18 : !u32i) loc(#loc76)
  ^bb2:  // pred: ^bb0
    %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc76)
    %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc76)
    %21 = cir.const #cir.int<30> : !s32i loc(#loc76)
    %22 = cir.shift(left, %20 : !u32i, %21 : !s32i) -> !u32i loc(#loc76)
    %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc76)
    %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc76)
    %25 = cir.const #cir.int<15> : !s32i loc(#loc76)
    %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc76)
    %27 = cir.binop(xor, %22, %26) : !u32i loc(#loc76)
    %28 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc76)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc76)
    %30 = cir.binop(xor, %27, %29) : !u32i loc(#loc76)
    %31 = cir.unary(minus, %30) : !u32i, !u32i loc(#loc76)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc76)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc76)
    %34 = cir.binop(sub, %31, %33) : !u32i loc(#loc76)
    cir.br ^bb3(%34 : !u32i) loc(#loc76)
  ^bb3(%35: !u32i loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":66:13)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc76)
  ^bb4:  // pred: ^bb3
    %36 = cir.cast(integral, %35 : !u32i), !s32i loc(#loc76)
    cir.store %36, %0 : !s32i, !cir.ptr<!s32i> loc(#loc117)
    cir.br ^bb5 loc(#loc118)
  ^bb5:  // pred: ^bb4
    %37 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc80)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc81)
    %39 = cir.cmp(gt, %37, %38) : !s32i, !cir.bool loc(#loc119)
    cir.brcond %39 ^bb6, ^bb11 loc(#loc82)
  ^bb6:  // pred: ^bb5
    %40 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    %41 = cir.const #cir.int<2000> : !s32i loc(#loc84)
    %42 = cir.cmp(le, %40, %41) : !s32i, !cir.bool loc(#loc120)
    cir.brcond %42 ^bb7, ^bb8 loc(#loc82)
  ^bb7:  // pred: ^bb6
    %43 = cir.const #true loc(#loc82)
    cir.br ^bb9(%43 : !cir.bool) loc(#loc82)
  ^bb8:  // pred: ^bb6
    %44 = cir.const #false loc(#loc82)
    cir.br ^bb9(%44 : !cir.bool) loc(#loc82)
  ^bb9(%45: !cir.bool loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":68:19)):  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc82)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12(%45 : !cir.bool) loc(#loc82)
  ^bb11:  // pred: ^bb5
    %46 = cir.const #false loc(#loc82)
    cir.br ^bb12(%46 : !cir.bool) loc(#loc82)
  ^bb12(%47: !cir.bool loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":68:19)):  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc82)
  ^bb13:  // pred: ^bb12
    cir.brcond %47 ^bb14, ^bb15 loc(#loc121)
  ^bb14:  // pred: ^bb13
    %48 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    %49 = cir.cast(integral, %48 : !s32i), !u32i loc(#loc88)
    %50 = cir.call @usleep(%49) : (!u32i) -> !s32i loc(#loc89)
    %51 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc67)
    %52 = cir.cast(array_to_ptrdecay, %51 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%52) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    cir.br ^bb16 loc(#loc86)
  ^bb15:  // pred: ^bb13
    %53 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc68)
    %54 = cir.cast(array_to_ptrdecay, %53 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%54) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    cir.br ^bb16 loc(#loc79)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc79)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc70)
  } loc(#loc114)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_sleep_01.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("/usr/include/unistd.h":480:1)
#loc4 = loc("/usr/include/unistd.h":480:43)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":39:15)
#loc8 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":30:1)
#loc9 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":40:1)
#loc10 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":32:5)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":32:9)
#loc12 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":34:14)
#loc13 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":34:13)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":34:5)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":36:5)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":38:11)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":38:5)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":39:5)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":79:1)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":83:1)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":81:5)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":81:13)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":82:5)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":82:13)
#loc26 = loc("/usr/include/stdlib.h":575:1)
#loc27 = loc("/usr/include/stdlib.h":575:41)
#loc28 = loc("/usr/include/time.h":76:1)
#loc29 = loc("/usr/include/time.h":76:38)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":99:15)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":101:15)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":104:15)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":106:15)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":94:1)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":109:1)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":95:1)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":97:27)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":97:22)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":97:5)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":99:5)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":100:5)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":100:52)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":101:5)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":104:5)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":105:5)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":105:51)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":106:5)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":108:12)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":108:5)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":47:1)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":57:1)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":49:5)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":49:9)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":51:14)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":51:13)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":51:5)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":53:13)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":53:5)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":55:11)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":55:5)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":56:15)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":56:5)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":71:19)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":75:19)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":60:1)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":77:1)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":62:5)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":62:9)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":64:14)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":64:13)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":64:5)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":66:5)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":68:5)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":76:5)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":68:9)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":68:17)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":68:22)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":68:31)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":69:5)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":72:5)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":74:5)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":70:15)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":70:9)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":71:9)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_sleep_01.c":75:9)
#loc92 = loc(fused[#loc1, #loc2])
#loc93 = loc(fused[#loc3, #loc4])
#loc94 = loc(fused[#loc5, #loc6])
#loc95 = loc(fused[#loc8, #loc9])
#loc96 = loc(fused[#loc10, #loc11])
#loc97 = loc(fused[#loc14, #loc12])
#loc98 = loc(fused[#loc16, #loc15])
#loc99 = loc(fused[#loc20, #loc21])
#loc100 = loc(fused[#loc22, #loc23])
#loc101 = loc(fused[#loc24, #loc25])
#loc102 = loc(fused[#loc26, #loc27])
#loc103 = loc(fused[#loc28, #loc29])
#loc104 = loc(fused[#loc34, #loc35])
#loc107 = loc(fused[#loc45, #loc46])
#loc108 = loc(fused[#loc49, #loc50])
#loc109 = loc(fused[#loc53, #loc52])
#loc110 = loc(fused[#loc54, #loc55])
#loc111 = loc(fused[#loc56, #loc57])
#loc112 = loc(fused[#loc60, #loc58])
#loc113 = loc(fused[#loc62, #loc61])
#loc114 = loc(fused[#loc69, #loc70])
#loc115 = loc(fused[#loc71, #loc72])
#loc116 = loc(fused[#loc75, #loc73])
#loc117 = loc(fused[#loc77, #loc76])
#loc118 = loc(fused[#loc78, #loc79])
#loc119 = loc(fused[#loc80, #loc81])
#loc120 = loc(fused[#loc83, #loc84])
#loc121 = loc(fused[#loc85, #loc86, #loc87, #loc79])
