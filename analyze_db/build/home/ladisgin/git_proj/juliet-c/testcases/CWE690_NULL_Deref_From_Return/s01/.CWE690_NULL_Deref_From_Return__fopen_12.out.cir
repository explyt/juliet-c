!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc50 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":88:10)
#loc51 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":88:14)
#loc52 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":88:20)
#loc53 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":88:32)
#loc119 = loc(fused[#loc50, #loc51])
#loc120 = loc(fused[#loc52, #loc53])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__fopen_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc100)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc4)
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc101)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc102)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__fopen_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc104)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc105)
    %2 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc15)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc3)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc3)
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc4)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc4)
    %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc15)
    cir.store %7, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc106)
    cir.scope {
      %8 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc108)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc108)
      %10 = cir.call %9() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc20)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc20)
      cir.if %11 {
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc25)
        %13 = cir.call @fclose(%12) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc26)
      } else {
        cir.scope {
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc29)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc30)
          %15 = cir.cmp(ne, %12, %14) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc111)
          cir.if %15 {
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc32)
            %17 = cir.call @fclose(%16) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc33)
          } loc(#loc112)
        } loc(#loc110)
      } loc(#loc109)
    } loc(#loc107)
    cir.return loc(#loc10)
  } loc(#loc103)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__fopen_12_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc114)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    cir.return loc(#loc35)
  } loc(#loc113)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc115)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc116)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc117)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc44)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc47)
  cir.func @main(%arg0: !s32i loc(fused[#loc50, #loc51]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc52, #loc53])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc119)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc120)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc49)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc54)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc54)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc55)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc56)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc56)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc57)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc44)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %8 = cir.get_global @CWE690_NULL_Deref_From_Return__fopen_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc121)
    cir.call @CWE690_NULL_Deref_From_Return__fopen_12_good() : () -> () loc(#loc59)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc45)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc46)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %13 = cir.get_global @CWE690_NULL_Deref_From_Return__fopen_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc122)
    cir.call @CWE690_NULL_Deref_From_Return__fopen_12_bad() : () -> () loc(#loc63)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc47)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc66)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc123)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    cir.return %17 : !s32i loc(#loc123)
  } loc(#loc118)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc125)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc72)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc126)
    %2 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc74)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc75)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc75)
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc76)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc76)
    %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc74)
    cir.store %7, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc127)
    cir.scope {
      %8 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc129)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc129)
      %10 = cir.call %9() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc81)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc81)
      cir.if %11 {
        cir.scope {
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc88)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc89)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc89)
          %15 = cir.cmp(ne, %12, %14) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc132)
          cir.if %15 {
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc91)
            %17 = cir.call @fclose(%16) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc92)
          } loc(#loc133)
        } loc(#loc131)
      } else {
        cir.scope {
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc95)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc96)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc96)
          %15 = cir.cmp(ne, %12, %14) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc135)
          cir.if %15 {
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc98)
            %17 = cir.call @fclose(%16) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc99)
          } loc(#loc136)
        } loc(#loc134)
      } loc(#loc130)
    } loc(#loc128)
    cir.return loc(#loc69)
  } loc(#loc124)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__fopen_12.c":0:0)
#loc1 = loc("/usr/include/stdio.h":264:1)
#loc2 = loc("/usr/include/stdio.h":266:3)
#loc3 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":27:18)
#loc4 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":27:30)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc7 = loc("/usr/include/stdio.h":184:1)
#loc8 = loc("/usr/include/stdio.h":184:36)
#loc9 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":21:1)
#loc10 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":41:1)
#loc11 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":23:5)
#loc12 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":23:12)
#loc13 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":25:12)
#loc14 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":25:5)
#loc15 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":27:12)
#loc16 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":27:5)
#loc17 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":27:34)
#loc18 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":28:5)
#loc19 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":40:5)
#loc20 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":28:8)
#loc21 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":28:33)
#loc22 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":29:5)
#loc23 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":32:5)
#loc24 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":34:5)
#loc25 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":31:16)
#loc26 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":31:9)
#loc27 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":36:9)
#loc28 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":39:9)
#loc29 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":36:13)
#loc30 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":36:21)
#loc31 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":37:9)
#loc32 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":38:20)
#loc33 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":38:13)
#loc34 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":74:1)
#loc35 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":77:1)
#loc36 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":76:5)
#loc37 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":76:13)
#loc38 = loc("/usr/include/stdlib.h":575:1)
#loc39 = loc("/usr/include/stdlib.h":575:41)
#loc40 = loc("/usr/include/time.h":76:1)
#loc41 = loc("/usr/include/time.h":76:38)
#loc42 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc43 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc44 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":93:15)
#loc45 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":95:15)
#loc46 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":98:15)
#loc47 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":100:15)
#loc48 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":88:1)
#loc49 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":103:1)
#loc54 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":89:1)
#loc55 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":91:27)
#loc56 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":91:22)
#loc57 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":91:5)
#loc58 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":93:5)
#loc59 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":94:5)
#loc60 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":94:50)
#loc61 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":95:5)
#loc62 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":98:5)
#loc63 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":99:5)
#loc64 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":99:49)
#loc65 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":100:5)
#loc66 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":102:12)
#loc67 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":102:5)
#loc68 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":49:1)
#loc69 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":72:1)
#loc70 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":51:5)
#loc71 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":51:12)
#loc72 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":53:12)
#loc73 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":53:5)
#loc74 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":55:12)
#loc75 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":55:18)
#loc76 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":55:30)
#loc77 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":55:5)
#loc78 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":55:34)
#loc79 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":56:5)
#loc80 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":71:5)
#loc81 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":56:8)
#loc82 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":56:33)
#loc83 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":57:5)
#loc84 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":63:5)
#loc85 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":65:5)
#loc86 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":59:9)
#loc87 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":62:9)
#loc88 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":59:13)
#loc89 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":59:21)
#loc90 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":60:9)
#loc91 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":61:20)
#loc92 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":61:13)
#loc93 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":67:9)
#loc94 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":70:9)
#loc95 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":67:13)
#loc96 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":67:21)
#loc97 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":68:9)
#loc98 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":69:20)
#loc99 = loc("CWE690_NULL_Deref_From_Return__fopen_12.c":69:13)
#loc100 = loc(fused[#loc1, #loc2])
#loc101 = loc(fused[#loc5, #loc6])
#loc102 = loc(fused[#loc7, #loc8])
#loc103 = loc(fused[#loc9, #loc10])
#loc104 = loc(fused[#loc11, #loc12])
#loc105 = loc(fused[#loc14, #loc13])
#loc106 = loc(fused[#loc16, #loc17])
#loc107 = loc(fused[#loc18, #loc19])
#loc108 = loc(fused[#loc20, #loc21])
#loc109 = loc(fused[#loc22, #loc23, #loc24, #loc19])
#loc110 = loc(fused[#loc27, #loc28])
#loc111 = loc(fused[#loc29, #loc30])
#loc112 = loc(fused[#loc31, #loc28])
#loc113 = loc(fused[#loc34, #loc35])
#loc114 = loc(fused[#loc36, #loc37])
#loc115 = loc(fused[#loc38, #loc39])
#loc116 = loc(fused[#loc40, #loc41])
#loc117 = loc(fused[#loc42, #loc43])
#loc118 = loc(fused[#loc48, #loc49])
#loc121 = loc(fused[#loc59, #loc60])
#loc122 = loc(fused[#loc63, #loc64])
#loc123 = loc(fused[#loc67, #loc66])
#loc124 = loc(fused[#loc68, #loc69])
#loc125 = loc(fused[#loc70, #loc71])
#loc126 = loc(fused[#loc73, #loc72])
#loc127 = loc(fused[#loc77, #loc78])
#loc128 = loc(fused[#loc79, #loc80])
#loc129 = loc(fused[#loc81, #loc82])
#loc130 = loc(fused[#loc83, #loc84, #loc85, #loc80])
#loc131 = loc(fused[#loc86, #loc87])
#loc132 = loc(fused[#loc88, #loc89])
#loc133 = loc(fused[#loc90, #loc87])
#loc134 = loc(fused[#loc93, #loc94])
#loc135 = loc(fused[#loc95, #loc96])
#loc136 = loc(fused[#loc97, #loc94])
