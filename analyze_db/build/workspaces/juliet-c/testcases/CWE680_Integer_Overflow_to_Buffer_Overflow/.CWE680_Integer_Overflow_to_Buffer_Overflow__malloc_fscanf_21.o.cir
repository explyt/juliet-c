!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":24:22)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":24:26)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":66:27)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":66:31)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":105:27)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":105:31)
#loc234 = loc(fused[#loc10, #loc11])
#loc269 = loc(fused[#loc95, #loc96])
#loc297 = loc(fused[#loc166, #loc167])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc230)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc231)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc232)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc7)
  cir.func internal private @badSource(%arg0: !s32i loc(fused[#loc10, #loc11])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc234)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc9)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc12)
    cir.scope {
      %4 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc230)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc15)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc15)
      cir.if %6 {
        %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc17)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc232)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc18)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc7)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc7)
        %12 = cir.call @__isoc99_fscanf(%9, %11, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc17)
      } loc(#loc236)
    } loc(#loc235)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc237)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc237)
    cir.return %3 : !s32i loc(#loc237)
  } loc(#loc233)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc238)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc239)
  cir.func private @printIntLine(!s32i) loc(#loc240)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc241)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc243)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc34)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %4 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc230)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc245)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    %6 = cir.call @badSource(%5) : (!s32i) -> !s32i loc(#loc39)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc246)
    cir.scope {
      %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc248)
      %8 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc249)
      %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc48)
      %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc49)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc49)
      %12 = cir.const #cir.int<4> : !u64i loc(#loc250)
      %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc251)
      %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc48)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc252)
      cir.store %15, %8 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc253)
      cir.scope {
        %23 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc56)
        %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc57)
        %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc57)
        %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s32i>, !cir.bool loc(#loc255)
        cir.if %26 {
          %27 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc59)
          %28 = cir.const #cir.int<1> : !s32i loc(#loc60)
          %29 = cir.unary(minus, %28) nsw : !s32i, !s32i loc(#loc61)
          cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr1) loc(#loc59)
        } loc(#loc256)
      } loc(#loc254)
      cir.scope {
        %23 = cir.const #cir.int<0> : !s32i loc(#loc64)
        %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc64)
        cir.store %24, %7 : !u64i, !cir.ptr<!u64i> loc(#loc258)
        cir.for : cond {
          %25 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc66)
          %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc67)
          %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc67)
          %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc259)
          cir.condition(%28) loc(#loc68)
        } body {
          cir.scope {
            %25 = cir.const #cir.int<0> : !s32i loc(#loc70)
            %26 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc71)
            %27 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc72)
            %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !u64i), !cir.ptr<!s32i> loc(#loc73)
            cir.store %25, %28 : !s32i, !cir.ptr<!s32i> loc(#loc261)
          } loc(#loc260)
          cir.yield loc(#loc63)
        } step {
          %25 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc74)
          %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc75)
          cir.store %26, %7 : !u64i, !cir.ptr<!u64i> loc(#loc262)
          cir.yield loc(#loc257)
        } loc(#loc257)
      } loc(#loc257)
      %16 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc76)
      %17 = cir.const #cir.int<0> : !s32i loc(#loc77)
      %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc78)
      %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc76)
      cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc79)
      %20 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc80)
      %21 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc81)
      %22 = cir.cast(bitcast, %21 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc81)
      cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc80)
    } loc(#loc247)
    cir.return loc(#loc30)
  } loc(#loc242)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc264)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc84)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc265)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc86)
    cir.return loc(#loc83)
  } loc(#loc263)
  cir.global "private" internal dsolocal @goodG2B1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc266)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc267)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc92)
  cir.func internal private @goodG2B1Source(%arg0: !s32i loc(fused[#loc95, #loc96])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc269)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc94)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc97)
    cir.scope {
      %4 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc266)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc100)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc100)
      cir.if %6 {
        %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc92)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc92)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc104)
      } else {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc105)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc272)
      } loc(#loc271)
    } loc(#loc270)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc273)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc273)
    cir.return %3 : !s32i loc(#loc273)
  } loc(#loc268)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc275)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc113)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc114)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc276)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc116)
    %4 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc266)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc277)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    %6 = cir.call @goodG2B1Source(%5) : (!s32i) -> !s32i loc(#loc119)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc278)
    cir.scope {
      %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc280)
      %8 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc281)
      %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc128)
      %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc129)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc129)
      %12 = cir.const #cir.int<4> : !u64i loc(#loc282)
      %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc283)
      %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc128)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc284)
      cir.store %15, %8 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc285)
      cir.scope {
        %23 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc136)
        %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc137)
        %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc137)
        %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s32i>, !cir.bool loc(#loc287)
        cir.if %26 {
          %27 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc139)
          %28 = cir.const #cir.int<1> : !s32i loc(#loc140)
          %29 = cir.unary(minus, %28) nsw : !s32i, !s32i loc(#loc141)
          cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr1) loc(#loc139)
        } loc(#loc288)
      } loc(#loc286)
      cir.scope {
        %23 = cir.const #cir.int<0> : !s32i loc(#loc144)
        %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc144)
        cir.store %24, %7 : !u64i, !cir.ptr<!u64i> loc(#loc290)
        cir.for : cond {
          %25 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc146)
          %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc147)
          %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc147)
          %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc291)
          cir.condition(%28) loc(#loc148)
        } body {
          cir.scope {
            %25 = cir.const #cir.int<0> : !s32i loc(#loc150)
            %26 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc151)
            %27 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc152)
            %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !u64i), !cir.ptr<!s32i> loc(#loc153)
            cir.store %25, %28 : !s32i, !cir.ptr<!s32i> loc(#loc293)
          } loc(#loc292)
          cir.yield loc(#loc143)
        } step {
          %25 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc154)
          %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc155)
          cir.store %26, %7 : !u64i, !cir.ptr<!u64i> loc(#loc294)
          cir.yield loc(#loc289)
        } loc(#loc289)
      } loc(#loc289)
      %16 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc156)
      %17 = cir.const #cir.int<0> : !s32i loc(#loc157)
      %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc158)
      %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc156)
      cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc159)
      %20 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc160)
      %21 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc161)
      %22 = cir.cast(bitcast, %21 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc161)
      cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc160)
    } loc(#loc279)
    cir.return loc(#loc110)
  } loc(#loc274)
  cir.global "private" internal dsolocal @goodG2B2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc295)
  cir.func internal private @goodG2B2Source(%arg0: !s32i loc(fused[#loc166, #loc167])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc297)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc165)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc168)
    cir.scope {
      %4 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc295)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc171)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc171)
      cir.if %6 {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc173)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc300)
      } loc(#loc299)
    } loc(#loc298)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc301)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc301)
    cir.return %3 : !s32i loc(#loc301)
  } loc(#loc296)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc303)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc181)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc182)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc304)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc184)
    %4 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc295)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc305)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc186)
    %6 = cir.call @goodG2B2Source(%5) : (!s32i) -> !s32i loc(#loc187)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc306)
    cir.scope {
      %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc308)
      %8 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc309)
      %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc196)
      %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc197)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc197)
      %12 = cir.const #cir.int<4> : !u64i loc(#loc310)
      %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc311)
      %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc196)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc312)
      cir.store %15, %8 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc313)
      cir.scope {
        %23 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc204)
        %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc205)
        %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc205)
        %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s32i>, !cir.bool loc(#loc315)
        cir.if %26 {
          %27 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc207)
          %28 = cir.const #cir.int<1> : !s32i loc(#loc208)
          %29 = cir.unary(minus, %28) nsw : !s32i, !s32i loc(#loc209)
          cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr1) loc(#loc207)
        } loc(#loc316)
      } loc(#loc314)
      cir.scope {
        %23 = cir.const #cir.int<0> : !s32i loc(#loc212)
        %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc212)
        cir.store %24, %7 : !u64i, !cir.ptr<!u64i> loc(#loc318)
        cir.for : cond {
          %25 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc214)
          %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc215)
          %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc215)
          %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc319)
          cir.condition(%28) loc(#loc216)
        } body {
          cir.scope {
            %25 = cir.const #cir.int<0> : !s32i loc(#loc218)
            %26 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc219)
            %27 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc220)
            %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !u64i), !cir.ptr<!s32i> loc(#loc221)
            cir.store %25, %28 : !s32i, !cir.ptr<!s32i> loc(#loc321)
          } loc(#loc320)
          cir.yield loc(#loc211)
        } step {
          %25 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc222)
          %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc223)
          cir.store %26, %7 : !u64i, !cir.ptr<!u64i> loc(#loc322)
          cir.yield loc(#loc317)
        } loc(#loc317)
      } loc(#loc317)
      %16 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc224)
      %17 = cir.const #cir.int<0> : !s32i loc(#loc225)
      %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc226)
      %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc224)
      cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc227)
      %20 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc228)
      %21 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc229)
      %22 = cir.cast(bitcast, %21 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc229)
      cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc228)
    } loc(#loc307)
    cir.return loc(#loc178)
  } loc(#loc302)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":0:0)
#loc1 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":22:1)
#loc2 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":22:24)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":29:23)
#loc8 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":24:1)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":32:1)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":25:1)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":26:5)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":30:5)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":26:8)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":27:5)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":29:9)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":29:16)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":31:12)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":31:5)
#loc21 = loc("/usr/include/stdlib.h":672:1)
#loc22 = loc("/usr/include/stdlib.h":672:45)
#loc23 = loc("/usr/include/stdlib.h":756:1)
#loc24 = loc("/usr/include/stdlib.h":756:70)
#loc25 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc26 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc27 = loc("/usr/include/stdlib.h":687:1)
#loc28 = loc("/usr/include/stdlib.h":687:32)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":34:1)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":55:1)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":36:5)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":36:9)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":38:13)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":38:12)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":38:5)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":39:17)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":39:5)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":40:22)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":40:12)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":40:5)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":40:26)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":41:5)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":54:5)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":42:9)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":42:16)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":43:9)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":43:14)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":46:28)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":46:35)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":46:42)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":46:52)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":46:53)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":46:9)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":47:9)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":47:43)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":47:13)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":47:27)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":47:33)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":47:34)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":47:40)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":47:39)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":48:9)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":51:9)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":48:18)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":48:14)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":48:21)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":48:33)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":48:23)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":49:9)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":50:29)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":50:13)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":50:24)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":50:25)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":48:40)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":48:39)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":52:22)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":52:33)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":52:34)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":52:9)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":53:9)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":53:14)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":138:1)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":142:1)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":140:5)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":140:14)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":141:5)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":141:14)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":62:1)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":62:29)
#loc90 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc91 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":71:19)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":66:1)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":79:1)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":67:1)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":68:5)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":77:5)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":68:8)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":69:5)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":72:5)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":74:5)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":71:9)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":76:16)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":76:9)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":78:12)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":78:5)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":81:1)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":102:1)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":83:5)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":83:9)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":85:13)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":85:12)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":85:5)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":86:22)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":86:5)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":87:27)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":87:12)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":87:5)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":87:31)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":88:5)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":101:5)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":89:9)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":89:16)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":90:9)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":90:14)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":93:28)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":93:35)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":93:42)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":93:52)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":93:53)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":93:9)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":94:9)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":94:43)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":94:13)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":94:27)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":94:33)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":94:34)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":94:40)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":94:39)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":95:9)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":98:9)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":95:18)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":95:14)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":95:21)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":95:33)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":95:23)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":96:9)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":97:29)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":97:13)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":97:24)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":97:25)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":95:40)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":95:39)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":99:22)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":99:33)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":99:34)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":99:9)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":100:9)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":100:14)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":63:1)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":63:29)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":105:1)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":113:1)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":106:1)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":107:5)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":111:5)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":107:8)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":108:5)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":110:16)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":110:9)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":112:12)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":112:5)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":115:1)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":136:1)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":117:5)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":117:9)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":119:13)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":119:12)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":119:5)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":120:22)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":120:5)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":121:27)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":121:12)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":121:5)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":121:31)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":122:5)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":135:5)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":123:9)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":123:16)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":124:9)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":124:14)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":127:28)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":127:35)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":127:42)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":127:52)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":127:53)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":127:9)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":128:9)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":128:43)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":128:13)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":128:27)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":128:33)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":128:34)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":128:40)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":128:39)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":129:9)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":132:9)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":129:18)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":129:14)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":129:21)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":129:33)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":129:23)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":130:9)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":131:29)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":131:13)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":131:24)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":131:25)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":129:40)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":129:39)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":133:22)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":133:33)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":133:34)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":133:9)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":134:9)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_21.c":134:14)
#loc230 = loc(fused[#loc1, #loc2])
#loc231 = loc(fused[#loc3, #loc4])
#loc232 = loc(fused[#loc5, #loc6])
#loc233 = loc(fused[#loc8, #loc9])
#loc235 = loc(fused[#loc13, #loc14])
#loc236 = loc(fused[#loc16, #loc14])
#loc237 = loc(fused[#loc20, #loc19])
#loc238 = loc(fused[#loc21, #loc22])
#loc239 = loc(fused[#loc23, #loc24])
#loc240 = loc(fused[#loc25, #loc26])
#loc241 = loc(fused[#loc27, #loc28])
#loc242 = loc(fused[#loc29, #loc30])
#loc243 = loc(fused[#loc31, #loc32])
#loc244 = loc(fused[#loc35, #loc33])
#loc245 = loc(fused[#loc37, #loc36])
#loc246 = loc(fused[#loc40, #loc41])
#loc247 = loc(fused[#loc42, #loc43])
#loc248 = loc(fused[#loc44, #loc45])
#loc249 = loc(fused[#loc46, #loc47])
#loc250 = loc(fused[#loc50, #loc51])
#loc251 = loc(fused[#loc49, #loc51])
#loc252 = loc(fused[#loc48, #loc52])
#loc253 = loc(fused[#loc53, #loc52])
#loc254 = loc(fused[#loc54, #loc55])
#loc255 = loc(fused[#loc56, #loc57])
#loc256 = loc(fused[#loc58, #loc55])
#loc257 = loc(fused[#loc62, #loc63])
#loc258 = loc(fused[#loc65, #loc64])
#loc259 = loc(fused[#loc66, #loc67])
#loc260 = loc(fused[#loc69, #loc63])
#loc261 = loc(fused[#loc71, #loc70])
#loc262 = loc(fused[#loc75, #loc74])
#loc263 = loc(fused[#loc82, #loc83])
#loc264 = loc(fused[#loc84, #loc85])
#loc265 = loc(fused[#loc86, #loc87])
#loc266 = loc(fused[#loc88, #loc89])
#loc267 = loc(fused[#loc90, #loc91])
#loc268 = loc(fused[#loc93, #loc94])
#loc270 = loc(fused[#loc98, #loc99])
#loc271 = loc(fused[#loc101, #loc102, #loc103, #loc99])
#loc272 = loc(fused[#loc106, #loc105])
#loc273 = loc(fused[#loc108, #loc107])
#loc274 = loc(fused[#loc109, #loc110])
#loc275 = loc(fused[#loc111, #loc112])
#loc276 = loc(fused[#loc115, #loc113])
#loc277 = loc(fused[#loc117, #loc116])
#loc278 = loc(fused[#loc120, #loc121])
#loc279 = loc(fused[#loc122, #loc123])
#loc280 = loc(fused[#loc124, #loc125])
#loc281 = loc(fused[#loc126, #loc127])
#loc282 = loc(fused[#loc130, #loc131])
#loc283 = loc(fused[#loc129, #loc131])
#loc284 = loc(fused[#loc128, #loc132])
#loc285 = loc(fused[#loc133, #loc132])
#loc286 = loc(fused[#loc134, #loc135])
#loc287 = loc(fused[#loc136, #loc137])
#loc288 = loc(fused[#loc138, #loc135])
#loc289 = loc(fused[#loc142, #loc143])
#loc290 = loc(fused[#loc145, #loc144])
#loc291 = loc(fused[#loc146, #loc147])
#loc292 = loc(fused[#loc149, #loc143])
#loc293 = loc(fused[#loc151, #loc150])
#loc294 = loc(fused[#loc155, #loc154])
#loc295 = loc(fused[#loc162, #loc163])
#loc296 = loc(fused[#loc164, #loc165])
#loc298 = loc(fused[#loc169, #loc170])
#loc299 = loc(fused[#loc172, #loc170])
#loc300 = loc(fused[#loc174, #loc173])
#loc301 = loc(fused[#loc176, #loc175])
#loc302 = loc(fused[#loc177, #loc178])
#loc303 = loc(fused[#loc179, #loc180])
#loc304 = loc(fused[#loc183, #loc181])
#loc305 = loc(fused[#loc185, #loc184])
#loc306 = loc(fused[#loc188, #loc189])
#loc307 = loc(fused[#loc190, #loc191])
#loc308 = loc(fused[#loc192, #loc193])
#loc309 = loc(fused[#loc194, #loc195])
#loc310 = loc(fused[#loc198, #loc199])
#loc311 = loc(fused[#loc197, #loc199])
#loc312 = loc(fused[#loc196, #loc200])
#loc313 = loc(fused[#loc201, #loc200])
#loc314 = loc(fused[#loc202, #loc203])
#loc315 = loc(fused[#loc204, #loc205])
#loc316 = loc(fused[#loc206, #loc203])
#loc317 = loc(fused[#loc210, #loc211])
#loc318 = loc(fused[#loc213, #loc212])
#loc319 = loc(fused[#loc214, #loc215])
#loc320 = loc(fused[#loc217, #loc211])
#loc321 = loc(fused[#loc219, #loc218])
#loc322 = loc(fused[#loc223, #loc222])
