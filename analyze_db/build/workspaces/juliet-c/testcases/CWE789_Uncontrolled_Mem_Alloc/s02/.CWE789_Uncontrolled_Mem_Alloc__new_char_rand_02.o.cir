!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc237)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc238)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc239)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc240)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc10)
  cir.func @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_023badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc242)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc15)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc15)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc243)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc19)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc19)
      cir.if %4 {
        %5 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc21)
        cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc246)
      } loc(#loc245)
    } loc(#loc244)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc26)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc26)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc250)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc34)
            %7 = cir.const #cir.int<5> : !u64i loc(#loc252)
            %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc253)
            cir.if %8 {
              %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc40)
              %10 = cir.call @_Znam(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc41)
              %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc255)
              cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc256)
              %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc45)
              %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
              %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc7)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc7)
              %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc45)
              %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
              cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc48)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
              cir.delete.array %18 : <!s8i> loc(#loc49)
            } else {
              %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc10)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc10)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc50)
            } loc(#loc254)
          } loc(#loc251)
        } loc(#loc249)
      } loc(#loc248)
    } loc(#loc247)
    cir.return loc(#loc12)
  } loc(#loc241)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc52)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc258)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc57)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc259)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc61)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc61)
      cir.if %4 {
        %5 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc63)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc63)
        cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc262)
      } loc(#loc261)
    } loc(#loc260)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc68)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc68)
      cir.if %4 {
        %5 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc51)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc51)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc72)
      } else {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc266)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc79)
            %7 = cir.const #cir.int<5> : !u64i loc(#loc268)
            %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc269)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc83)
              %11 = cir.const #cir.int<100> : !s32i loc(#loc84)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc84)
              %13 = cir.cmp(lt, %10, %12) : !u64i, !cir.bool loc(#loc270)
              %14 = cir.ternary(%13, true {
                %15 = cir.const #true loc(#loc82)
                cir.yield %15 : !cir.bool loc(#loc82)
              }, false {
                %15 = cir.const #false loc(#loc82)
                cir.yield %15 : !cir.bool loc(#loc82)
              }) : (!cir.bool) -> !cir.bool loc(#loc82)
              cir.yield %14 : !cir.bool loc(#loc82)
            }, false {
              %10 = cir.const #false loc(#loc82)
              cir.yield %10 : !cir.bool loc(#loc82)
            }) : (!cir.bool) -> !cir.bool loc(#loc82)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc88)
              %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc89)
              %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc272)
              cir.store %12, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc273)
              %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc93)
              %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
              %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc95)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc95)
              %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc93)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc97)
              %19 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
              cir.delete.array %19 : <!s8i> loc(#loc98)
            } else {
              %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc52)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc52)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc99)
            } loc(#loc271)
          } loc(#loc267)
        } loc(#loc265)
      } loc(#loc264)
    } loc(#loc263)
    cir.return loc(#loc54)
  } loc(#loc257)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc275)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc104)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc104)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc276)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc108)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc108)
      cir.if %4 {
        %5 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc110)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc110)
        cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc279)
      } loc(#loc278)
    } loc(#loc277)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc115)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc115)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc283)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc123)
            %7 = cir.const #cir.int<5> : !u64i loc(#loc285)
            %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc286)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc127)
              %11 = cir.const #cir.int<100> : !s32i loc(#loc128)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc128)
              %13 = cir.cmp(lt, %10, %12) : !u64i, !cir.bool loc(#loc287)
              %14 = cir.ternary(%13, true {
                %15 = cir.const #true loc(#loc126)
                cir.yield %15 : !cir.bool loc(#loc126)
              }, false {
                %15 = cir.const #false loc(#loc126)
                cir.yield %15 : !cir.bool loc(#loc126)
              }) : (!cir.bool) -> !cir.bool loc(#loc126)
              cir.yield %14 : !cir.bool loc(#loc126)
            }, false {
              %10 = cir.const #false loc(#loc126)
              cir.yield %10 : !cir.bool loc(#loc126)
            }) : (!cir.bool) -> !cir.bool loc(#loc126)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc132)
              %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc133)
              %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc289)
              cir.store %12, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc290)
              %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc137)
              %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
              %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc139)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc139)
              %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc137)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc141)
              %19 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
              cir.delete.array %19 : <!s8i> loc(#loc142)
            } else {
              %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc143)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc143)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc144)
            } loc(#loc288)
          } loc(#loc284)
        } loc(#loc282)
      } loc(#loc281)
    } loc(#loc280)
    cir.return loc(#loc101)
  } loc(#loc274)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc292)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc149)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc149)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc293)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc153)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc153)
      cir.if %4 {
        %5 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc157)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc157)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc158)
      } else {
        %5 = cir.const #cir.int<20> : !s32i loc(#loc159)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc159)
        cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc296)
      } loc(#loc295)
    } loc(#loc294)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc163)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc163)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc300)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc171)
            %7 = cir.const #cir.int<5> : !u64i loc(#loc302)
            %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc303)
            cir.if %8 {
              %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc177)
              %10 = cir.call @_Znam(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc178)
              %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc305)
              cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc306)
              %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc182)
              %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc183)
              %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc184)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc184)
              %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc182)
              %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc185)
              cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc186)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc187)
              cir.delete.array %18 : <!s8i> loc(#loc187)
            } else {
              %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc188)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc188)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc189)
            } loc(#loc304)
          } loc(#loc301)
        } loc(#loc299)
      } loc(#loc298)
    } loc(#loc297)
    cir.return loc(#loc146)
  } loc(#loc291)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc308)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc194)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc194)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc309)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc198)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc198)
      cir.if %4 {
        %5 = cir.const #cir.int<20> : !s32i loc(#loc200)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc200)
        cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc312)
      } loc(#loc311)
    } loc(#loc310)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc204)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc204)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc316)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc212)
            %7 = cir.const #cir.int<5> : !u64i loc(#loc318)
            %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc319)
            cir.if %8 {
              %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc218)
              %10 = cir.call @_Znam(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc219)
              %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc321)
              cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc322)
              %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc223)
              %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc224)
              %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc225)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc225)
              %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc223)
              %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc226)
              cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc227)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc228)
              cir.delete.array %18 : <!s8i> loc(#loc228)
            } else {
              %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc229)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc229)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc230)
            } loc(#loc320)
          } loc(#loc317)
        } loc(#loc315)
      } loc(#loc314)
    } loc(#loc313)
    cir.return loc(#loc191)
  } loc(#loc307)
  cir.func @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_024goodEv() extra(#fn_attr1) {
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02L8goodB2G1Ev() : () -> () loc(#loc233)
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02L8goodB2G2Ev() : () -> () loc(#loc234)
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02L8goodG2B1Ev() : () -> () loc(#loc235)
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02L8goodG2B2Ev() : () -> () loc(#loc236)
    cir.return loc(#loc232)
  } loc(#loc323)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":52:34)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":58:27)
#loc11 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":31:1)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":62:1)
#loc13 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":33:5)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":33:12)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":35:12)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":35:5)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":36:5)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":40:5)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":36:8)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":37:5)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":39:16)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":39:9)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":39:21)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":41:5)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":61:5)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":41:8)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":42:5)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":43:9)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":60:9)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":44:13)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":44:20)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":48:13)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":59:13)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":48:17)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":48:24)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":48:43)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":49:13)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":55:13)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":57:13)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":50:37)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":31:6)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":50:28)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":50:41)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":50:17)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":52:17)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":52:24)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":53:27)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":53:17)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":54:27)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":58:17)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":82:19)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":101:27)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":69:1)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":105:1)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":71:5)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":71:12)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":73:12)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":73:5)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":74:5)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":78:5)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":74:8)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":75:5)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":77:16)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":77:9)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":77:21)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":79:5)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":104:5)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":79:8)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":80:5)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":83:5)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":85:5)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":82:9)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":86:9)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":103:9)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":87:13)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":87:20)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":91:13)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":102:13)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":91:17)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":91:24)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":91:43)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":91:45)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":91:48)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":91:55)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":92:13)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":98:13)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":100:13)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":93:37)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":69:13)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":93:28)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":93:41)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":93:17)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":95:17)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":95:24)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":95:34)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":96:27)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":96:17)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":97:27)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":101:17)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":108:1)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":139:1)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":110:5)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":110:12)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":112:12)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":112:5)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":113:5)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":117:5)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":113:8)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":114:5)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":116:16)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":116:9)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":116:21)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":118:5)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":138:5)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":118:8)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":119:5)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":120:9)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":137:9)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":121:13)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":121:20)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":125:13)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":136:13)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":125:17)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":125:24)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":125:43)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":125:45)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":125:48)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":125:55)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":126:13)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":132:13)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":134:13)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":127:37)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":108:13)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":127:28)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":127:41)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":127:17)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":129:17)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":129:24)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":129:34)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":130:27)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":130:17)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":131:27)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":135:27)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":135:17)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":142:1)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":178:1)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":144:5)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":144:12)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":146:12)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":146:5)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":147:5)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":156:5)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":147:8)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":148:5)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":151:5)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":153:5)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":150:19)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":150:9)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":155:16)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":155:9)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":157:5)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":177:5)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":157:8)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":158:5)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":159:9)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":176:9)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":160:13)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":160:20)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":164:13)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":175:13)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":164:17)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":164:24)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":164:43)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":165:13)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":171:13)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":173:13)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":166:37)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":142:13)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":166:28)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":166:41)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":166:17)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":168:17)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":168:24)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":168:34)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":169:27)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":169:17)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":170:27)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":174:27)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":174:17)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":181:1)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":212:1)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":183:5)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":183:12)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":185:12)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":185:5)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":186:5)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":190:5)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":186:8)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":187:5)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":189:16)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":189:9)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":191:5)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":211:5)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":191:8)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":192:5)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":193:9)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":210:9)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":194:13)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":194:20)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":198:13)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":209:13)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":198:17)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":198:24)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":198:43)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":199:13)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":205:13)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":207:13)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":200:37)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":181:13)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":200:28)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":200:41)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":200:17)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":202:17)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":202:24)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":202:34)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":203:27)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":203:17)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":204:27)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":208:27)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":208:17)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":214:1)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":220:1)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":216:5)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":217:5)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":218:5)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_02.cpp":219:5)
#loc237 = loc(fused[#loc1, #loc2])
#loc238 = loc(fused[#loc3, #loc4])
#loc239 = loc(fused[#loc5, #loc6])
#loc240 = loc(fused[#loc8, #loc9])
#loc241 = loc(fused[#loc11, #loc12])
#loc242 = loc(fused[#loc13, #loc14])
#loc243 = loc(fused[#loc16, #loc15])
#loc244 = loc(fused[#loc17, #loc18])
#loc245 = loc(fused[#loc20, #loc18])
#loc246 = loc(fused[#loc22, #loc23])
#loc247 = loc(fused[#loc24, #loc25])
#loc248 = loc(fused[#loc27, #loc25])
#loc249 = loc(fused[#loc28, #loc29])
#loc250 = loc(fused[#loc30, #loc31])
#loc251 = loc(fused[#loc32, #loc33])
#loc252 = loc(fused[#loc35, #loc36])
#loc253 = loc(fused[#loc34, #loc36])
#loc254 = loc(fused[#loc37, #loc38, #loc39, #loc33])
#loc255 = loc(fused[#loc42, #loc43])
#loc256 = loc(fused[#loc44, #loc43])
#loc257 = loc(fused[#loc53, #loc54])
#loc258 = loc(fused[#loc55, #loc56])
#loc259 = loc(fused[#loc58, #loc57])
#loc260 = loc(fused[#loc59, #loc60])
#loc261 = loc(fused[#loc62, #loc60])
#loc262 = loc(fused[#loc64, #loc65])
#loc263 = loc(fused[#loc66, #loc67])
#loc264 = loc(fused[#loc69, #loc70, #loc71, #loc67])
#loc265 = loc(fused[#loc73, #loc74])
#loc266 = loc(fused[#loc75, #loc76])
#loc267 = loc(fused[#loc77, #loc78])
#loc268 = loc(fused[#loc80, #loc81])
#loc269 = loc(fused[#loc79, #loc81])
#loc270 = loc(fused[#loc83, #loc84])
#loc271 = loc(fused[#loc85, #loc86, #loc87, #loc78])
#loc272 = loc(fused[#loc90, #loc91])
#loc273 = loc(fused[#loc92, #loc91])
#loc274 = loc(fused[#loc100, #loc101])
#loc275 = loc(fused[#loc102, #loc103])
#loc276 = loc(fused[#loc105, #loc104])
#loc277 = loc(fused[#loc106, #loc107])
#loc278 = loc(fused[#loc109, #loc107])
#loc279 = loc(fused[#loc111, #loc112])
#loc280 = loc(fused[#loc113, #loc114])
#loc281 = loc(fused[#loc116, #loc114])
#loc282 = loc(fused[#loc117, #loc118])
#loc283 = loc(fused[#loc119, #loc120])
#loc284 = loc(fused[#loc121, #loc122])
#loc285 = loc(fused[#loc124, #loc125])
#loc286 = loc(fused[#loc123, #loc125])
#loc287 = loc(fused[#loc127, #loc128])
#loc288 = loc(fused[#loc129, #loc130, #loc131, #loc122])
#loc289 = loc(fused[#loc134, #loc135])
#loc290 = loc(fused[#loc136, #loc135])
#loc291 = loc(fused[#loc145, #loc146])
#loc292 = loc(fused[#loc147, #loc148])
#loc293 = loc(fused[#loc150, #loc149])
#loc294 = loc(fused[#loc151, #loc152])
#loc295 = loc(fused[#loc154, #loc155, #loc156, #loc152])
#loc296 = loc(fused[#loc160, #loc159])
#loc297 = loc(fused[#loc161, #loc162])
#loc298 = loc(fused[#loc164, #loc162])
#loc299 = loc(fused[#loc165, #loc166])
#loc300 = loc(fused[#loc167, #loc168])
#loc301 = loc(fused[#loc169, #loc170])
#loc302 = loc(fused[#loc172, #loc173])
#loc303 = loc(fused[#loc171, #loc173])
#loc304 = loc(fused[#loc174, #loc175, #loc176, #loc170])
#loc305 = loc(fused[#loc179, #loc180])
#loc306 = loc(fused[#loc181, #loc180])
#loc307 = loc(fused[#loc190, #loc191])
#loc308 = loc(fused[#loc192, #loc193])
#loc309 = loc(fused[#loc195, #loc194])
#loc310 = loc(fused[#loc196, #loc197])
#loc311 = loc(fused[#loc199, #loc197])
#loc312 = loc(fused[#loc201, #loc200])
#loc313 = loc(fused[#loc202, #loc203])
#loc314 = loc(fused[#loc205, #loc203])
#loc315 = loc(fused[#loc206, #loc207])
#loc316 = loc(fused[#loc208, #loc209])
#loc317 = loc(fused[#loc210, #loc211])
#loc318 = loc(fused[#loc213, #loc214])
#loc319 = loc(fused[#loc212, #loc214])
#loc320 = loc(fused[#loc215, #loc216, #loc217, #loc211])
#loc321 = loc(fused[#loc220, #loc221])
#loc322 = loc(fused[#loc222, #loc221])
#loc323 = loc(fused[#loc231, #loc232])
