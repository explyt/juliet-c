!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc3 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":27:23)
#loc4 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":27:30)
#loc26 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":50:27)
#loc27 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":50:34)
#loc47 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":69:27)
#loc48 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":69:34)
#loc54 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/std_abs.h":56:7)
#loc55 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/std_abs.h":56:12)
#loc102 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":111:10)
#loc103 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":111:14)
#loc104 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":111:20)
#loc105 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":111:32)
#loc119 = loc(fused[#loc3, #loc4])
#loc128 = loc(fused[#loc26, #loc27])
#loc136 = loc(fused[#loc47, #loc48])
#loc139 = loc(fused[#loc54, #loc55])
#loc153 = loc(fused[#loc102, #loc103])
#loc154 = loc(fused[#loc104, #loc105])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_max_square_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func internal private @_ZN44CWE190_Integer_Overflow__short_max_square_43L9badSourceERs(%arg0: !cir.ptr<!s16i> loc(fused[#loc3, #loc4])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc119)
    cir.store %arg0, %0 : !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>> loc(#loc5)
    %1 = cir.const #cir.int<32767> : !s32i loc(#loc6)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc6)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc7)
    cir.store %2, %3 : !s16i, !cir.ptr<!s16i> loc(#loc120)
    cir.return loc(#loc2)
  } loc(#loc118)
  cir.func private @printIntLine(!s32i) loc(#loc121)
  cir.func @_ZN44CWE190_Integer_Overflow__short_max_square_433badEv() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc123)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc14)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc14)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc124)
    cir.call @_ZN44CWE190_Integer_Overflow__short_max_square_43L9badSourceERs(%0) : (!cir.ptr<!s16i>) -> () loc(#loc16)
    cir.scope {
      %3 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc126)
      %4 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc21)
      %5 = cir.cast(integral, %4 : !s16i), !s32i loc(#loc21)
      %6 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc20)
      %7 = cir.cast(integral, %6 : !s16i), !s32i loc(#loc20)
      %8 = cir.binop(mul, %5, %7) nsw : !s32i loc(#loc21)
      %9 = cir.cast(integral, %8 : !s32i), !s16i loc(#loc21)
      cir.store %9, %3 : !s16i, !cir.ptr<!s16i> loc(#loc126)
      %10 = cir.load %3 : !cir.ptr<!s16i>, !s16i loc(#loc22)
      %11 = cir.cast(integral, %10 : !s16i), !s32i loc(#loc22)
      cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc23)
    } loc(#loc125)
    cir.return loc(#loc11)
  } loc(#loc122)
  cir.func internal private @_ZN44CWE190_Integer_Overflow__short_max_square_43L13goodG2BSourceERs(%arg0: !cir.ptr<!s16i> loc(fused[#loc26, #loc27])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc128)
    cir.store %arg0, %0 : !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>> loc(#loc28)
    %1 = cir.const #cir.int<2> : !s32i loc(#loc29)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc29)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc30)
    cir.store %2, %3 : !s16i, !cir.ptr<!s16i> loc(#loc129)
    cir.return loc(#loc25)
  } loc(#loc127)
  cir.func internal private @_ZN44CWE190_Integer_Overflow__short_max_square_43L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc131)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc35)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc35)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc132)
    cir.call @_ZN44CWE190_Integer_Overflow__short_max_square_43L13goodG2BSourceERs(%0) : (!cir.ptr<!s16i>) -> () loc(#loc37)
    cir.scope {
      %3 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc134)
      %4 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc42)
      %5 = cir.cast(integral, %4 : !s16i), !s32i loc(#loc42)
      %6 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc41)
      %7 = cir.cast(integral, %6 : !s16i), !s32i loc(#loc41)
      %8 = cir.binop(mul, %5, %7) nsw : !s32i loc(#loc42)
      %9 = cir.cast(integral, %8 : !s32i), !s16i loc(#loc42)
      cir.store %9, %3 : !s16i, !cir.ptr<!s16i> loc(#loc134)
      %10 = cir.load %3 : !cir.ptr<!s16i>, !s16i loc(#loc43)
      %11 = cir.cast(integral, %10 : !s16i), !s32i loc(#loc43)
      cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc44)
    } loc(#loc133)
    cir.return loc(#loc32)
  } loc(#loc130)
  cir.func internal private @_ZN44CWE190_Integer_Overflow__short_max_square_43L13goodB2GSourceERs(%arg0: !cir.ptr<!s16i> loc(fused[#loc47, #loc48])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc136)
    cir.store %arg0, %0 : !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>> loc(#loc49)
    %1 = cir.const #cir.int<32767> : !s32i loc(#loc50)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc50)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc51)
    cir.store %2, %3 : !s16i, !cir.ptr<!s16i> loc(#loc137)
    cir.return loc(#loc46)
  } loc(#loc135)
  cir.func linkonce_odr @_ZSt3absl(%arg0: !s64i loc(fused[#loc54, #loc55])) -> !s64i extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["__i", init] {alignment = 8 : i64} loc(#loc139)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["__retval"] {alignment = 8 : i64} loc(#loc53)
    cir.store %arg0, %0 : !s64i, !cir.ptr<!s64i> loc(#loc56)
    %2 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc57)
    %3 = cir.abs %2 poison : !s64i loc(#loc58)
    cir.store %3, %1 : !s64i, !cir.ptr<!s64i> loc(#loc140)
    %4 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc140)
    cir.return %4 : !s64i loc(#loc140)
  } loc(#loc138)
  cir.func private @sqrt(!cir.double) -> !cir.double extra(#fn_attr1) loc(#loc61)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc62)
  cir.func internal private @_ZN44CWE190_Integer_Overflow__short_max_square_43L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc142)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc67)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc67)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc143)
    cir.call @_ZN44CWE190_Integer_Overflow__short_max_square_43L13goodB2GSourceERs(%0) : (!cir.ptr<!s16i>) -> () loc(#loc69)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc72)
      %4 = cir.cast(integral, %3 : !s16i), !s64i loc(#loc72)
      %5 = cir.call @_ZSt3absl(%4) : (!s64i) -> !s64i loc(#loc73)
      %6 = cir.get_global @sqrt : !cir.ptr<!cir.func<!cir.double (!cir.double)>> loc(#loc74)
      %7 = cir.const #cir.int<32767> : !s32i loc(#loc75)
      %8 = cir.cast(int_to_float, %7 : !s32i), !cir.double loc(#loc75)
      %9 = cir.call @sqrt(%8) : (!cir.double) -> !cir.double extra(#fn_attr1) loc(#loc74)
      %10 = cir.cast(float_to_int, %9 : !cir.double), !s64i loc(#loc74)
      %11 = cir.cmp(le, %5, %10) : !s64i, !cir.bool loc(#loc145)
      cir.if %11 {
        %12 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc147)
        %13 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc82)
        %14 = cir.cast(integral, %13 : !s16i), !s32i loc(#loc82)
        %15 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc81)
        %16 = cir.cast(integral, %15 : !s16i), !s32i loc(#loc81)
        %17 = cir.binop(mul, %14, %16) nsw : !s32i loc(#loc82)
        %18 = cir.cast(integral, %17 : !s32i), !s16i loc(#loc82)
        cir.store %18, %12 : !s16i, !cir.ptr<!s16i> loc(#loc147)
        %19 = cir.load %12 : !cir.ptr<!s16i>, !s16i loc(#loc83)
        %20 = cir.cast(integral, %19 : !s16i), !s32i loc(#loc83)
        cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc84)
      } else {
        %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc62)
        %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc62)
        cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc85)
      } loc(#loc146)
    } loc(#loc144)
    cir.return loc(#loc64)
  } loc(#loc141)
  cir.func @_ZN44CWE190_Integer_Overflow__short_max_square_434goodEv() extra(#fn_attr) {
    cir.call @_ZN44CWE190_Integer_Overflow__short_max_square_43L7goodG2BEv() : () -> () loc(#loc88)
    cir.call @_ZN44CWE190_Integer_Overflow__short_max_square_43L7goodB2GEv() : () -> () loc(#loc89)
    cir.return loc(#loc87)
  } loc(#loc148)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc149)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc150)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc151)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc96)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc97)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc98)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc99)
  cir.func @main(%arg0: !s32i loc(fused[#loc102, #loc103]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc104, #loc105])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc153)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc154)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc101)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc106)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc106)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc107)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc108)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc108)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc109)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc96)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc96)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc110)
    cir.call @_ZN44CWE190_Integer_Overflow__short_max_square_434goodEv() : () -> () loc(#loc111)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc97)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc98)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc98)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc113)
    cir.call @_ZN44CWE190_Integer_Overflow__short_max_square_433badEv() : () -> () loc(#loc114)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc99)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc116)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc155)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc155)
    cir.return %15 : !s32i loc(#loc155)
  } loc(#loc152)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_max_square_43.cpp":0:0)
#loc1 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":27:1)
#loc2 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":31:1)
#loc5 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":28:1)
#loc6 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":30:12)
#loc7 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":30:5)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc10 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":33:1)
#loc11 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":43:1)
#loc12 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":35:5)
#loc13 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":35:11)
#loc14 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":36:12)
#loc15 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":36:5)
#loc16 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":37:5)
#loc17 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":38:5)
#loc18 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":42:5)
#loc19 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":40:9)
#loc20 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":40:31)
#loc21 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":40:24)
#loc22 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":41:22)
#loc23 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":41:9)
#loc24 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":50:1)
#loc25 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":54:1)
#loc28 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":51:1)
#loc29 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":53:12)
#loc30 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":53:5)
#loc31 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":56:1)
#loc32 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":66:1)
#loc33 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":58:5)
#loc34 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":58:11)
#loc35 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":59:12)
#loc36 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":59:5)
#loc37 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":60:5)
#loc38 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":61:5)
#loc39 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":65:5)
#loc40 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":63:9)
#loc41 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":63:31)
#loc42 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":63:24)
#loc43 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":64:22)
#loc44 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":64:9)
#loc45 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":69:1)
#loc46 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":73:1)
#loc49 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":70:1)
#loc50 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":72:12)
#loc51 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":72:5)
#loc52 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/std_abs.h":55:3)
#loc53 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/std_abs.h":56:47)
#loc56 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/std_abs.h":56:17)
#loc57 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/std_abs.h":56:41)
#loc58 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/std_abs.h":56:26)
#loc59 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/std_abs.h":56:19)
#loc60 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/std_abs.h":56:44)
#loc61 = loc("/usr/include/bits/mathcalls.h":158:1)
#loc62 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":88:19)
#loc63 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":75:1)
#loc64 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":90:1)
#loc65 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":77:5)
#loc66 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":77:11)
#loc67 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":78:12)
#loc68 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":78:5)
#loc69 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":79:5)
#loc70 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":81:5)
#loc71 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":89:5)
#loc72 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":81:19)
#loc73 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":81:9)
#loc74 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":81:34)
#loc75 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":81:47)
#loc76 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":81:55)
#loc77 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":82:5)
#loc78 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":85:5)
#loc79 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":87:5)
#loc80 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":83:9)
#loc81 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":83:31)
#loc82 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":83:24)
#loc83 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":84:22)
#loc84 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":84:9)
#loc85 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":88:9)
#loc86 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":92:1)
#loc87 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":96:1)
#loc88 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":94:5)
#loc89 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":95:5)
#loc90 = loc("/usr/include/stdlib.h":575:1)
#loc91 = loc("/usr/include/stdlib.h":575:41)
#loc92 = loc("/usr/include/time.h":76:1)
#loc93 = loc("/usr/include/time.h":76:38)
#loc94 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc95 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc96 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":116:15)
#loc97 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":118:15)
#loc98 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":121:15)
#loc99 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":123:15)
#loc100 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":111:1)
#loc101 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":126:1)
#loc106 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":112:1)
#loc107 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":114:27)
#loc108 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":114:22)
#loc109 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":114:5)
#loc110 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":116:5)
#loc111 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":117:5)
#loc112 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":118:5)
#loc113 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":121:5)
#loc114 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":122:5)
#loc115 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":123:5)
#loc116 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":125:12)
#loc117 = loc("CWE190_Integer_Overflow__short_max_square_43.cpp":125:5)
#loc118 = loc(fused[#loc1, #loc2])
#loc120 = loc(fused[#loc7, #loc6])
#loc121 = loc(fused[#loc8, #loc9])
#loc122 = loc(fused[#loc10, #loc11])
#loc123 = loc(fused[#loc12, #loc13])
#loc124 = loc(fused[#loc15, #loc14])
#loc125 = loc(fused[#loc17, #loc18])
#loc126 = loc(fused[#loc19, #loc20])
#loc127 = loc(fused[#loc24, #loc25])
#loc129 = loc(fused[#loc30, #loc29])
#loc130 = loc(fused[#loc31, #loc32])
#loc131 = loc(fused[#loc33, #loc34])
#loc132 = loc(fused[#loc36, #loc35])
#loc133 = loc(fused[#loc38, #loc39])
#loc134 = loc(fused[#loc40, #loc41])
#loc135 = loc(fused[#loc45, #loc46])
#loc137 = loc(fused[#loc51, #loc50])
#loc138 = loc(fused[#loc52, #loc53])
#loc140 = loc(fused[#loc59, #loc60])
#loc141 = loc(fused[#loc63, #loc64])
#loc142 = loc(fused[#loc65, #loc66])
#loc143 = loc(fused[#loc68, #loc67])
#loc144 = loc(fused[#loc70, #loc71])
#loc145 = loc(fused[#loc73, #loc76])
#loc146 = loc(fused[#loc77, #loc78, #loc79, #loc71])
#loc147 = loc(fused[#loc80, #loc81])
#loc148 = loc(fused[#loc86, #loc87])
#loc149 = loc(fused[#loc90, #loc91])
#loc150 = loc(fused[#loc92, #loc93])
#loc151 = loc(fused[#loc94, #loc95])
#loc152 = loc(fused[#loc100, #loc101])
#loc155 = loc(fused[#loc117, #loc116])
