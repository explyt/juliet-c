!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s01/CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc147)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc148)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc149)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc150)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc151)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc152)
  cir.func private @close(!s32i) -> !s32i loc(#loc153)
  cir.func private @CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63b_badSink(!cir.ptr<!s16i>) loc(#loc154)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc156)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc22)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc22)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc157)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc159)
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["tempInt"] {alignment = 4 : i64} loc(#loc160)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc161)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc162)
      %7 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc163)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc33)
      %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc33)
      cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc162)
      cir.scope {
        cir.do {
          cir.scope {
            %10 = cir.const #cir.int<2> : !s32i loc(#loc40)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc41)
            %12 = cir.const #cir.int<6> : !s32i loc(#loc42)
            %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc43)
            cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc166)
            cir.scope {
              %46 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc48)
              %47 = cir.const #cir.int<1> : !s32i loc(#loc49)
              %48 = cir.unary(minus, %47) nsw : !s32i, !s32i loc(#loc49)
              %49 = cir.cmp(eq, %46, %48) : !s32i, !cir.bool loc(#loc168)
              cir.if %49 {
                cir.break loc(#loc51)
              } loc(#loc169)
            } loc(#loc167)
            %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc170)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc54)
            %16 = cir.const #cir.int<16> : !u64i loc(#loc171)
            cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc172)
            %17 = cir.const #cir.int<2> : !s32i loc(#loc59)
            %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc59)
            %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc60)
            cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc173)
            %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
            %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
            %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc62)
            %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc63)
            %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc64)
            cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc174)
            %25 = cir.const #cir.int<27015> : !s32i loc(#loc67)
            %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc67)
            %27 = cir.call @htons(%26) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc68)
            %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
            cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc175)
            cir.scope {
              %46 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc74)
              %47 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc177)
              %48 = cir.const #cir.int<16> : !u64i loc(#loc178)
              %49 = cir.cast(integral, %48 : !u64i), !u32i loc(#loc178)
              %50 = cir.call @connect(%46, %47, %49) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc79)
              %51 = cir.const #cir.int<1> : !s32i loc(#loc80)
              %52 = cir.unary(minus, %51) nsw : !s32i, !s32i loc(#loc80)
              %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc179)
              cir.if %53 {
                cir.break loc(#loc82)
              } loc(#loc180)
            } loc(#loc176)
            %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc83)
            %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc84)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc84)
            %32 = cir.const #cir.int<8> : !s32i loc(#loc85)
            %33 = cir.const #cir.int<1> : !s32i loc(#loc86)
            %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc85)
            %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc85)
            %36 = cir.const #cir.int<0> : !s32i loc(#loc87)
            %37 = cir.call @recv(%29, %31, %35, %36) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc88)
            %38 = cir.cast(integral, %37 : !s64i), !s32i loc(#loc88)
            cir.store %38, %3 : !s32i, !cir.ptr<!s32i> loc(#loc181)
            cir.scope {
              %46 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc93)
              %47 = cir.const #cir.int<1> : !s32i loc(#loc94)
              %48 = cir.unary(minus, %47) nsw : !s32i, !s32i loc(#loc94)
              %49 = cir.cmp(eq, %46, %48) : !s32i, !cir.bool loc(#loc183)
              %50 = cir.ternary(%49, true {
                %51 = cir.const #true loc(#loc95)
                cir.yield %51 : !cir.bool loc(#loc95)
              }, false {
                %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc96)
                %52 = cir.const #cir.int<0> : !s32i loc(#loc97)
                %53 = cir.cmp(eq, %51, %52) : !s32i, !cir.bool loc(#loc184)
                %54 = cir.ternary(%53, true {
                  %55 = cir.const #true loc(#loc95)
                  cir.yield %55 : !cir.bool loc(#loc95)
                }, false {
                  %55 = cir.const #false loc(#loc95)
                  cir.yield %55 : !cir.bool loc(#loc95)
                }) : (!cir.bool) -> !cir.bool loc(#loc95)
                cir.yield %54 : !cir.bool loc(#loc95)
              }) : (!cir.bool) -> !cir.bool loc(#loc95)
              cir.if %50 {
                cir.break loc(#loc99)
              } loc(#loc185)
            } loc(#loc182)
            %39 = cir.const #cir.int<0> : !s32i loc(#loc100)
            %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc100)
            %41 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc101)
            %42 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc102)
            %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !s32i), !cir.ptr<!s8i> loc(#loc102)
            cir.store %40, %43 : !s8i, !cir.ptr<!s8i> loc(#loc186)
            %44 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc103)
            %45 = cir.call @atoi(%44) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc104)
            cir.store %45, %4 : !s32i, !cir.ptr<!s32i> loc(#loc187)
            cir.scope {
              %46 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc109)
              %47 = cir.const #cir.int<32767> : !s32i loc(#loc110)
              %48 = cir.cmp(gt, %46, %47) : !s32i, !cir.bool loc(#loc189)
              %49 = cir.ternary(%48, true {
                %50 = cir.const #true loc(#loc111)
                cir.yield %50 : !cir.bool loc(#loc111)
              }, false {
                %50 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc112)
                %51 = cir.const #cir.int<32767> : !s32i loc(#loc113)
                %52 = cir.unary(minus, %51) nsw : !s32i, !s32i loc(#loc113)
                %53 = cir.const #cir.int<1> : !s32i loc(#loc113)
                %54 = cir.binop(sub, %52, %53) nsw : !s32i loc(#loc113)
                %55 = cir.cmp(lt, %50, %54) : !s32i, !cir.bool loc(#loc190)
                %56 = cir.ternary(%55, true {
                  %57 = cir.const #true loc(#loc111)
                  cir.yield %57 : !cir.bool loc(#loc111)
                }, false {
                  %57 = cir.const #false loc(#loc111)
                  cir.yield %57 : !cir.bool loc(#loc111)
                }) : (!cir.bool) -> !cir.bool loc(#loc111)
                cir.yield %56 : !cir.bool loc(#loc111)
              }) : (!cir.bool) -> !cir.bool loc(#loc111)
              cir.if %49 {
                %50 = cir.const #cir.int<1> : !s32i loc(#loc117)
                %51 = cir.unary(minus, %50) nsw : !s32i, !s32i loc(#loc118)
                %52 = cir.cast(integral, %51 : !s32i), !s16i loc(#loc118)
                cir.store %52, %0 : !s16i, !cir.ptr<!s16i> loc(#loc192)
              } else {
                %50 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc120)
                %51 = cir.cast(integral, %50 : !s32i), !s16i loc(#loc120)
                cir.store %51, %0 : !s16i, !cir.ptr<!s16i> loc(#loc193)
              } loc(#loc191)
            } loc(#loc188)
          } loc(#loc165)
          cir.yield loc(#loc37)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc122)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc122)
          cir.condition(%11) loc(#loc122)
        } loc(#loc164)
      } loc(#loc164)
      cir.scope {
        %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc125)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc126)
        %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc126)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc195)
        cir.if %13 {
          %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc128)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc129)
        } loc(#loc196)
      } loc(#loc194)
    } loc(#loc158)
    cir.call @CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63b_badSink(%0) : (!cir.ptr<!s16i>) -> () loc(#loc130)
    cir.return loc(#loc19)
  } loc(#loc155)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc198)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc133)
    cir.return loc(#loc132)
  } loc(#loc197)
  cir.func private @CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63b_goodG2BSink(!cir.ptr<!s16i>) loc(#loc199)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc201)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc141)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc141)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc202)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc143)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc144)
    %5 = cir.binop(sub, %3, %4) nsw : !s32i loc(#loc143)
    %6 = cir.cast(integral, %5 : !s32i), !s16i loc(#loc143)
    cir.store %6, %0 : !s16i, !cir.ptr<!s16i> loc(#loc203)
    cir.call @CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63b_goodG2BSink(%0) : (!cir.ptr<!s16i>) -> () loc(#loc146)
    cir.return loc(#loc138)
  } loc(#loc200)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s01/CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":78:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":45:1)
#loc17 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":45:89)
#loc18 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":47:1)
#loc19 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":119:1)
#loc20 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":49:5)
#loc21 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":49:11)
#loc22 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":51:12)
#loc23 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":51:5)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":52:5)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":117:5)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":57:9)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":57:13)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":58:9)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":58:13)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":59:9)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":59:28)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":60:9)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":60:32)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":61:9)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":61:41)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":62:9)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":106:17)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":63:9)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":105:9)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":71:36)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":71:45)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":71:58)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":71:29)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":71:13)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":71:69)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":72:13)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":75:13)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":72:17)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":72:34)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":73:13)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":74:17)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":76:20)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":76:21)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":76:30)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":76:33)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":76:47)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":76:13)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":76:48)
#loc59 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":77:34)
#loc60 = loc("/usr/include/netinet/in.h":249:5)
#loc61 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":77:13)
#loc62 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":78:39)
#loc63 = loc("/usr/include/netinet/in.h":251:20)
#loc64 = loc("/usr/include/netinet/in.h":33:15)
#loc65 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":78:13)
#loc66 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":78:59)
#loc67 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":79:38)
#loc68 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":79:32)
#loc69 = loc("/usr/include/netinet/in.h":250:15)
#loc70 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":79:13)
#loc71 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":79:46)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":80:13)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":83:13)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":80:25)
#loc75 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":80:58)
#loc76 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":80:59)
#loc77 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":80:68)
#loc78 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":80:82)
#loc79 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":80:17)
#loc80 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":80:88)
#loc81 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":81:13)
#loc82 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":82:17)
#loc83 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":87:31)
#loc84 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":87:46)
#loc85 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":87:59)
#loc86 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":87:77)
#loc87 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":87:80)
#loc88 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":87:26)
#loc89 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":87:13)
#loc90 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":87:81)
#loc91 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":88:13)
#loc92 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":91:13)
#loc93 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":88:17)
#loc94 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":88:31)
#loc95 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":88:44)
#loc96 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":88:47)
#loc97 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":88:61)
#loc98 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":89:13)
#loc99 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":90:17)
#loc100 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":93:39)
#loc101 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":93:25)
#loc102 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":93:13)
#loc103 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":96:28)
#loc104 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":96:23)
#loc105 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":96:13)
#loc106 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":96:39)
#loc107 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":97:13)
#loc108 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":104:13)
#loc109 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":97:17)
#loc110 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":97:27)
#loc111 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":97:36)
#loc112 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":97:39)
#loc113 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":97:49)
#loc114 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":98:13)
#loc115 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":100:13)
#loc116 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":102:13)
#loc117 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":99:25)
#loc118 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":99:24)
#loc119 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":99:17)
#loc120 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":103:24)
#loc121 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":103:17)
#loc122 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":106:16)
#loc123 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":107:9)
#loc124 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":110:9)
#loc125 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":107:13)
#loc126 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":107:30)
#loc127 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":108:9)
#loc128 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":109:26)
#loc129 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":109:13)
#loc130 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":118:5)
#loc131 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":138:1)
#loc132 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":141:1)
#loc133 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":140:5)
#loc134 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":140:13)
#loc135 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":126:1)
#loc136 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":126:90)
#loc137 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":128:1)
#loc138 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":136:1)
#loc139 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":130:5)
#loc140 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":130:11)
#loc141 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":132:12)
#loc142 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":132:5)
#loc143 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":134:12)
#loc144 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":134:16)
#loc145 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":134:5)
#loc146 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_memcpy_63a.c":135:5)
#loc147 = loc(fused[#loc1, #loc2])
#loc148 = loc(fused[#loc3, #loc4])
#loc149 = loc(fused[#loc6, #loc7])
#loc150 = loc(fused[#loc8, #loc9])
#loc151 = loc(fused[#loc10, #loc11])
#loc152 = loc(fused[#loc12, #loc13])
#loc153 = loc(fused[#loc14, #loc15])
#loc154 = loc(fused[#loc16, #loc17])
#loc155 = loc(fused[#loc18, #loc19])
#loc156 = loc(fused[#loc20, #loc21])
#loc157 = loc(fused[#loc23, #loc22])
#loc158 = loc(fused[#loc24, #loc25])
#loc159 = loc(fused[#loc26, #loc27])
#loc160 = loc(fused[#loc28, #loc29])
#loc161 = loc(fused[#loc30, #loc31])
#loc162 = loc(fused[#loc32, #loc33])
#loc163 = loc(fused[#loc34, #loc35])
#loc164 = loc(fused[#loc36, #loc37])
#loc165 = loc(fused[#loc38, #loc39])
#loc166 = loc(fused[#loc44, #loc45])
#loc167 = loc(fused[#loc46, #loc47])
#loc168 = loc(fused[#loc48, #loc49])
#loc169 = loc(fused[#loc50, #loc47])
#loc170 = loc(fused[#loc52, #loc53])
#loc171 = loc(fused[#loc55, #loc56])
#loc172 = loc(fused[#loc57, #loc58])
#loc173 = loc(fused[#loc61, #loc59])
#loc174 = loc(fused[#loc65, #loc66])
#loc175 = loc(fused[#loc70, #loc71])
#loc176 = loc(fused[#loc72, #loc73])
#loc177 = loc(fused[#loc75, #loc76])
#loc178 = loc(fused[#loc77, #loc78])
#loc179 = loc(fused[#loc79, #loc80])
#loc180 = loc(fused[#loc81, #loc73])
#loc181 = loc(fused[#loc89, #loc90])
#loc182 = loc(fused[#loc91, #loc92])
#loc183 = loc(fused[#loc93, #loc94])
#loc184 = loc(fused[#loc96, #loc97])
#loc185 = loc(fused[#loc98, #loc92])
#loc186 = loc(fused[#loc102, #loc100])
#loc187 = loc(fused[#loc105, #loc106])
#loc188 = loc(fused[#loc107, #loc108])
#loc189 = loc(fused[#loc109, #loc110])
#loc190 = loc(fused[#loc112, #loc113])
#loc191 = loc(fused[#loc114, #loc115, #loc116, #loc108])
#loc192 = loc(fused[#loc119, #loc117])
#loc193 = loc(fused[#loc121, #loc120])
#loc194 = loc(fused[#loc123, #loc124])
#loc195 = loc(fused[#loc125, #loc126])
#loc196 = loc(fused[#loc127, #loc124])
#loc197 = loc(fused[#loc131, #loc132])
#loc198 = loc(fused[#loc133, #loc134])
#loc199 = loc(fused[#loc135, #loc136])
#loc200 = loc(fused[#loc137, #loc138])
#loc201 = loc(fused[#loc139, #loc140])
#loc202 = loc(fused[#loc142, #loc141])
#loc203 = loc(fused[#loc145, #loc144])
