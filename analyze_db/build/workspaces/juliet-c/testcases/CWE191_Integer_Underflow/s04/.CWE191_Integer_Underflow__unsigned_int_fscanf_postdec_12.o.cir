!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc164)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc165)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc166)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%u\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printUnsignedLine(!u32i) loc(#loc167)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc168)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc12)
  cir.func no_proto @CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc170)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc17)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc17)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc171)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc173)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc173)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc21)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc21)
      cir.if %6 {
        %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc26)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc166)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc27)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc7)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc7)
        %12 = cir.call @__isoc99_fscanf(%9, %11, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u32i>) -> !s32i loc(#loc26)
      } else {
        %7 = cir.const #cir.int<2> : !s32i loc(#loc28)
        %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc29)
        %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc29)
        cir.store %9, %0 : !u32i, !cir.ptr<!u32i> loc(#loc175)
      } loc(#loc174)
    } loc(#loc172)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc177)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc177)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc33)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc33)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc180)
          %8 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc42)
          %9 = cir.unary(dec, %8) : !u32i, !u32i loc(#loc43)
          cir.store %9, %0 : !u32i, !cir.ptr<!u32i> loc(#loc181)
          %10 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc41)
          cir.store %10, %7 : !u32i, !cir.ptr<!u32i> loc(#loc180)
          %11 = cir.load %7 : !cir.ptr<!u32i>, !u32i loc(#loc44)
          cir.call @printUnsignedLine(%11) : (!u32i) -> () loc(#loc45)
        } loc(#loc179)
      } else {
        cir.scope {
          %7 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc48)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc49)
          %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc49)
          %10 = cir.cmp(gt, %7, %9) : !u32i, !cir.bool loc(#loc183)
          cir.if %10 {
            %11 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc185)
            %12 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc55)
            %13 = cir.unary(dec, %12) : !u32i, !u32i loc(#loc56)
            cir.store %13, %0 : !u32i, !cir.ptr<!u32i> loc(#loc186)
            %14 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc54)
            cir.store %14, %11 : !u32i, !cir.ptr<!u32i> loc(#loc185)
            %15 = cir.load %11 : !cir.ptr<!u32i>, !u32i loc(#loc57)
            cir.call @printUnsignedLine(%15) : (!u32i) -> () loc(#loc58)
          } else {
            %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc12)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc12)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc59)
          } loc(#loc184)
        } loc(#loc182)
      } loc(#loc178)
    } loc(#loc176)
    cir.return loc(#loc14)
  } loc(#loc169)
  cir.func no_proto @CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc188)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc62)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc189)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc64)
    cir.return loc(#loc61)
  } loc(#loc187)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc191)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc70)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc192)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc194)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc194)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc74)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc74)
      cir.if %6 {
        %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc79)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc166)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc80)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc81)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc81)
        %12 = cir.call @__isoc99_fscanf(%9, %11, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u32i>) -> !s32i loc(#loc79)
      } else {
        %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc82)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc166)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc83)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc84)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc84)
        %12 = cir.call @__isoc99_fscanf(%9, %11, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u32i>) -> !s32i loc(#loc82)
      } loc(#loc195)
    } loc(#loc193)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc197)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc197)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc87)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc87)
      cir.if %6 {
        cir.scope {
          %7 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc94)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc95)
          %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc95)
          %10 = cir.cmp(gt, %7, %9) : !u32i, !cir.bool loc(#loc200)
          cir.if %10 {
            %11 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc202)
            %12 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc101)
            %13 = cir.unary(dec, %12) : !u32i, !u32i loc(#loc102)
            cir.store %13, %0 : !u32i, !cir.ptr<!u32i> loc(#loc203)
            %14 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc100)
            cir.store %14, %11 : !u32i, !cir.ptr<!u32i> loc(#loc202)
            %15 = cir.load %11 : !cir.ptr<!u32i>, !u32i loc(#loc103)
            cir.call @printUnsignedLine(%15) : (!u32i) -> () loc(#loc104)
          } else {
            %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc105)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc105)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc106)
          } loc(#loc201)
        } loc(#loc199)
      } else {
        cir.scope {
          %7 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc109)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc110)
          %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc110)
          %10 = cir.cmp(gt, %7, %9) : !u32i, !cir.bool loc(#loc205)
          cir.if %10 {
            %11 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc207)
            %12 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc116)
            %13 = cir.unary(dec, %12) : !u32i, !u32i loc(#loc117)
            cir.store %13, %0 : !u32i, !cir.ptr<!u32i> loc(#loc208)
            %14 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc115)
            cir.store %14, %11 : !u32i, !cir.ptr<!u32i> loc(#loc207)
            %15 = cir.load %11 : !cir.ptr<!u32i>, !u32i loc(#loc118)
            cir.call @printUnsignedLine(%15) : (!u32i) -> () loc(#loc119)
          } else {
            %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc120)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc120)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc121)
          } loc(#loc206)
        } loc(#loc204)
      } loc(#loc198)
    } loc(#loc196)
    cir.return loc(#loc67)
  } loc(#loc190)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc210)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc126)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc126)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc211)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc213)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc213)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc130)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc130)
      cir.if %6 {
        %7 = cir.const #cir.int<2> : !s32i loc(#loc135)
        %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc136)
        %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc136)
        cir.store %9, %0 : !u32i, !cir.ptr<!u32i> loc(#loc215)
      } else {
        %7 = cir.const #cir.int<2> : !s32i loc(#loc138)
        %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc139)
        %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc139)
        cir.store %9, %0 : !u32i, !cir.ptr<!u32i> loc(#loc216)
      } loc(#loc214)
    } loc(#loc212)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc218)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc218)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc143)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc143)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc221)
          %8 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc152)
          %9 = cir.unary(dec, %8) : !u32i, !u32i loc(#loc153)
          cir.store %9, %0 : !u32i, !cir.ptr<!u32i> loc(#loc222)
          %10 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc151)
          cir.store %10, %7 : !u32i, !cir.ptr<!u32i> loc(#loc221)
          %11 = cir.load %7 : !cir.ptr<!u32i>, !u32i loc(#loc154)
          cir.call @printUnsignedLine(%11) : (!u32i) -> () loc(#loc155)
        } loc(#loc220)
      } else {
        cir.scope {
          %7 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc224)
          %8 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc160)
          %9 = cir.unary(dec, %8) : !u32i, !u32i loc(#loc161)
          cir.store %9, %0 : !u32i, !cir.ptr<!u32i> loc(#loc225)
          %10 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc159)
          cir.store %10, %7 : !u32i, !cir.ptr<!u32i> loc(#loc224)
          %11 = cir.load %7 : !cir.ptr<!u32i>, !u32i loc(#loc162)
          cir.call @printUnsignedLine(%11) : (!u32i) -> () loc(#loc163)
        } loc(#loc223)
      } loc(#loc219)
    } loc(#loc217)
    cir.return loc(#loc123)
  } loc(#loc209)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":29:24)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":34:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":34:47)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":56:23)
#loc13 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":22:1)
#loc14 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":59:1)
#loc15 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":24:5)
#loc16 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":24:18)
#loc17 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":25:12)
#loc18 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":25:5)
#loc19 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":26:5)
#loc20 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":35:5)
#loc21 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":26:8)
#loc22 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":26:33)
#loc23 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":27:5)
#loc24 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":30:5)
#loc25 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":32:5)
#loc26 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":29:9)
#loc27 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":29:17)
#loc28 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":34:17)
#loc29 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":34:16)
#loc30 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":34:9)
#loc31 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":36:5)
#loc32 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":58:5)
#loc33 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":36:8)
#loc34 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":36:33)
#loc35 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":37:5)
#loc36 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":44:5)
#loc37 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":46:5)
#loc38 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":38:9)
#loc39 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":43:9)
#loc40 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":41:13)
#loc41 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":41:35)
#loc42 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":40:17)
#loc43 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":40:13)
#loc44 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":42:31)
#loc45 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":42:13)
#loc46 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":48:9)
#loc47 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":57:9)
#loc48 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":48:13)
#loc49 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":48:20)
#loc50 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":49:9)
#loc51 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":53:9)
#loc52 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":55:9)
#loc53 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":51:13)
#loc54 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":51:35)
#loc55 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":50:17)
#loc56 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":50:13)
#loc57 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":52:31)
#loc58 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":52:13)
#loc59 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":56:13)
#loc60 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":149:1)
#loc61 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":153:1)
#loc62 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":151:5)
#loc63 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":151:13)
#loc64 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":152:5)
#loc65 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":152:13)
#loc66 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":68:1)
#loc67 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":110:1)
#loc68 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":70:5)
#loc69 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":70:18)
#loc70 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":71:12)
#loc71 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":71:5)
#loc72 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":72:5)
#loc73 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":81:5)
#loc74 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":72:8)
#loc75 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":72:33)
#loc76 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":73:5)
#loc77 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":76:5)
#loc78 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":78:5)
#loc79 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":75:9)
#loc80 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":75:17)
#loc81 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":75:24)
#loc82 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":80:9)
#loc83 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":80:17)
#loc84 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":80:24)
#loc85 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":82:5)
#loc86 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":109:5)
#loc87 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":82:8)
#loc88 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":82:33)
#loc89 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":83:5)
#loc90 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":95:5)
#loc91 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":97:5)
#loc92 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":85:9)
#loc93 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":94:9)
#loc94 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":85:13)
#loc95 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":85:20)
#loc96 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":86:9)
#loc97 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":90:9)
#loc98 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":92:9)
#loc99 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":88:13)
#loc100 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":88:35)
#loc101 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":87:17)
#loc102 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":87:13)
#loc103 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":89:31)
#loc104 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":89:13)
#loc105 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":93:23)
#loc106 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":93:13)
#loc107 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":99:9)
#loc108 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":108:9)
#loc109 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":99:13)
#loc110 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":99:20)
#loc111 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":100:9)
#loc112 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":104:9)
#loc113 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":106:9)
#loc114 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":102:13)
#loc115 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":102:35)
#loc116 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":101:17)
#loc117 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":101:13)
#loc118 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":103:31)
#loc119 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":103:13)
#loc120 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":107:23)
#loc121 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":107:13)
#loc122 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":115:1)
#loc123 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":147:1)
#loc124 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":117:5)
#loc125 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":117:18)
#loc126 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":118:12)
#loc127 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":118:5)
#loc128 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":119:5)
#loc129 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":128:5)
#loc130 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":119:8)
#loc131 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":119:33)
#loc132 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":120:5)
#loc133 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":123:5)
#loc134 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":125:5)
#loc135 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":122:17)
#loc136 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":122:16)
#loc137 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":122:9)
#loc138 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":127:17)
#loc139 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":127:16)
#loc140 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":127:9)
#loc141 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":129:5)
#loc142 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":146:5)
#loc143 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":129:8)
#loc144 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":129:33)
#loc145 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":130:5)
#loc146 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":137:5)
#loc147 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":139:5)
#loc148 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":131:9)
#loc149 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":136:9)
#loc150 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":134:13)
#loc151 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":134:35)
#loc152 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":133:17)
#loc153 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":133:13)
#loc154 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":135:31)
#loc155 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":135:13)
#loc156 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":140:9)
#loc157 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":145:9)
#loc158 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":143:13)
#loc159 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":143:35)
#loc160 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":142:17)
#loc161 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":142:13)
#loc162 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":144:31)
#loc163 = loc("CWE191_Integer_Underflow__unsigned_int_fscanf_postdec_12.c":144:13)
#loc164 = loc(fused[#loc1, #loc2])
#loc165 = loc(fused[#loc3, #loc4])
#loc166 = loc(fused[#loc5, #loc6])
#loc167 = loc(fused[#loc8, #loc9])
#loc168 = loc(fused[#loc10, #loc11])
#loc169 = loc(fused[#loc13, #loc14])
#loc170 = loc(fused[#loc15, #loc16])
#loc171 = loc(fused[#loc18, #loc17])
#loc172 = loc(fused[#loc19, #loc20])
#loc173 = loc(fused[#loc21, #loc22])
#loc174 = loc(fused[#loc23, #loc24, #loc25, #loc20])
#loc175 = loc(fused[#loc30, #loc28])
#loc176 = loc(fused[#loc31, #loc32])
#loc177 = loc(fused[#loc33, #loc34])
#loc178 = loc(fused[#loc35, #loc36, #loc37, #loc32])
#loc179 = loc(fused[#loc38, #loc39])
#loc180 = loc(fused[#loc40, #loc41])
#loc181 = loc(fused[#loc43, #loc42])
#loc182 = loc(fused[#loc46, #loc47])
#loc183 = loc(fused[#loc48, #loc49])
#loc184 = loc(fused[#loc50, #loc51, #loc52, #loc47])
#loc185 = loc(fused[#loc53, #loc54])
#loc186 = loc(fused[#loc56, #loc55])
#loc187 = loc(fused[#loc60, #loc61])
#loc188 = loc(fused[#loc62, #loc63])
#loc189 = loc(fused[#loc64, #loc65])
#loc190 = loc(fused[#loc66, #loc67])
#loc191 = loc(fused[#loc68, #loc69])
#loc192 = loc(fused[#loc71, #loc70])
#loc193 = loc(fused[#loc72, #loc73])
#loc194 = loc(fused[#loc74, #loc75])
#loc195 = loc(fused[#loc76, #loc77, #loc78, #loc73])
#loc196 = loc(fused[#loc85, #loc86])
#loc197 = loc(fused[#loc87, #loc88])
#loc198 = loc(fused[#loc89, #loc90, #loc91, #loc86])
#loc199 = loc(fused[#loc92, #loc93])
#loc200 = loc(fused[#loc94, #loc95])
#loc201 = loc(fused[#loc96, #loc97, #loc98, #loc93])
#loc202 = loc(fused[#loc99, #loc100])
#loc203 = loc(fused[#loc102, #loc101])
#loc204 = loc(fused[#loc107, #loc108])
#loc205 = loc(fused[#loc109, #loc110])
#loc206 = loc(fused[#loc111, #loc112, #loc113, #loc108])
#loc207 = loc(fused[#loc114, #loc115])
#loc208 = loc(fused[#loc117, #loc116])
#loc209 = loc(fused[#loc122, #loc123])
#loc210 = loc(fused[#loc124, #loc125])
#loc211 = loc(fused[#loc127, #loc126])
#loc212 = loc(fused[#loc128, #loc129])
#loc213 = loc(fused[#loc130, #loc131])
#loc214 = loc(fused[#loc132, #loc133, #loc134, #loc129])
#loc215 = loc(fused[#loc137, #loc135])
#loc216 = loc(fused[#loc140, #loc138])
#loc217 = loc(fused[#loc141, #loc142])
#loc218 = loc(fused[#loc143, #loc144])
#loc219 = loc(fused[#loc145, #loc146, #loc147, #loc142])
#loc220 = loc(fused[#loc148, #loc149])
#loc221 = loc(fused[#loc150, #loc151])
#loc222 = loc(fused[#loc153, #loc152])
#loc223 = loc(fused[#loc156, #loc157])
#loc224 = loc(fused[#loc158, #loc159])
#loc225 = loc(fused[#loc161, #loc160])
