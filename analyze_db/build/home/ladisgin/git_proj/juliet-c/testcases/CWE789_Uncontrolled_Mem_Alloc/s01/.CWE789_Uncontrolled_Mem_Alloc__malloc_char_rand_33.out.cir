!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":116:45)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":151:10)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":151:14)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":151:20)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":151:32)
#true = #cir.bool<true> : !cir.bool
#loc266 = loc(fused[#loc179, #loc180])
#loc267 = loc(fused[#loc181, #loc182])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc195)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc196)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc197)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc198)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc199)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc200)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc14)
  cir.func @_ZN50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc202)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc203)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc204)
    %3 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc205)
    cir.store %2, %3 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc24)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc25)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc25)
    cir.store %5, %2 : !u64i, !cir.ptr<!u64i> loc(#loc206)
    %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc27)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc27)
    cir.store %7, %2 : !u64i, !cir.ptr<!u64i> loc(#loc207)
    cir.br ^bb1 loc(#loc208)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %3 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc18)
    %9 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc18)
    cir.store %9, %0 : !u64i, !cir.ptr<!u64i> loc(#loc202)
    cir.br ^bb2 loc(#loc209)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc210)
  ^bb3:  // pred: ^bb2
    %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc36)
    %11 = cir.const #cir.int<5> : !u64i loc(#loc211)
    %12 = cir.cmp(gt, %10, %11) : !u64i, !cir.bool loc(#loc212)
    cir.brcond %12 ^bb4, ^bb9 loc(#loc213)
  ^bb4:  // pred: ^bb3
    %13 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc42)
    %14 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc43)
    %15 = cir.const #cir.int<1> : !u64i loc(#loc214)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc215)
    %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc42)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc216)
    cir.store %18, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc217)
    cir.br ^bb5 loc(#loc218)
  ^bb5:  // pred: ^bb4
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc51)
    %21 = cir.cmp(eq, %19, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc219)
    cir.brcond %21 ^bb6, ^bb7 loc(#loc220)
  ^bb6:  // pred: ^bb5
    %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc53)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc55)
    cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc53)
    cir.br ^bb7 loc(#loc49)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc49)
  ^bb8:  // pred: ^bb7
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc9)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc9)
    %28 = cir.call @strcpy(%25, %27) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc57)
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc60)
    cir.call @free(%31) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc61)
    cir.br ^bb10 loc(#loc40)
  ^bb9:  // pred: ^bb3
    %32 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc14)
    %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc14)
    cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    cir.br ^bb10 loc(#loc35)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc35)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc33)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc31)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc16)
  } loc(#loc201)
  cir.func internal private @_ZN50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc222)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc223)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc224)
    %3 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc225)
    cir.store %2, %3 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc72)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc73)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc73)
    cir.store %5, %2 : !u64i, !cir.ptr<!u64i> loc(#loc226)
    %6 = cir.const #cir.int<20> : !s32i loc(#loc75)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc75)
    cir.store %7, %2 : !u64i, !cir.ptr<!u64i> loc(#loc227)
    cir.br ^bb1 loc(#loc228)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %3 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc66)
    %9 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc66)
    cir.store %9, %0 : !u64i, !cir.ptr<!u64i> loc(#loc222)
    cir.br ^bb2 loc(#loc229)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc230)
  ^bb3:  // pred: ^bb2
    %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc83)
    %11 = cir.const #cir.int<5> : !u64i loc(#loc231)
    %12 = cir.cmp(gt, %10, %11) : !u64i, !cir.bool loc(#loc232)
    cir.brcond %12 ^bb4, ^bb9 loc(#loc233)
  ^bb4:  // pred: ^bb3
    %13 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc89)
    %14 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc90)
    %15 = cir.const #cir.int<1> : !u64i loc(#loc234)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc235)
    %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc89)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc236)
    cir.store %18, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc237)
    cir.br ^bb5 loc(#loc238)
  ^bb5:  // pred: ^bb4
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc98)
    %21 = cir.cmp(eq, %19, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc239)
    cir.brcond %21 ^bb6, ^bb7 loc(#loc240)
  ^bb6:  // pred: ^bb5
    %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc100)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc101)
    %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc102)
    cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc100)
    cir.br ^bb7 loc(#loc96)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc96)
  ^bb8:  // pred: ^bb7
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc104)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc104)
    %28 = cir.call @strcpy(%25, %27) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc105)
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc108)
    cir.call @free(%31) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc109)
    cir.br ^bb10 loc(#loc87)
  ^bb9:  // pred: ^bb3
    %32 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc110)
    %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc110)
    cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    cir.br ^bb10 loc(#loc82)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc82)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc80)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc78)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc64)
  } loc(#loc221)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc112)
  cir.func internal private @_ZN50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc242)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc243)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc244)
    %3 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc245)
    cir.store %2, %3 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc122)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc123)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc123)
    cir.store %5, %2 : !u64i, !cir.ptr<!u64i> loc(#loc246)
    %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc125)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc125)
    cir.store %7, %2 : !u64i, !cir.ptr<!u64i> loc(#loc247)
    cir.br ^bb1 loc(#loc248)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %3 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc116)
    %9 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc116)
    cir.store %9, %0 : !u64i, !cir.ptr<!u64i> loc(#loc242)
    cir.br ^bb2 loc(#loc249)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc250)
  ^bb3:  // pred: ^bb2
    %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc134)
    %11 = cir.const #cir.int<5> : !u64i loc(#loc251)
    %12 = cir.cmp(gt, %10, %11) : !u64i, !cir.bool loc(#loc252)
    cir.brcond %12 ^bb4, ^bb9 loc(#loc137)
  ^bb4:  // pred: ^bb3
    %13 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc138)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc139)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc139)
    %16 = cir.cmp(lt, %13, %15) : !u64i, !cir.bool loc(#loc253)
    cir.brcond %16 ^bb5, ^bb6 loc(#loc137)
  ^bb5:  // pred: ^bb4
    %17 = cir.const #true loc(#loc137)
    cir.br ^bb7(%17 : !cir.bool) loc(#loc137)
  ^bb6:  // pred: ^bb4
    %18 = cir.const #false loc(#loc137)
    cir.br ^bb7(%18 : !cir.bool) loc(#loc137)
  ^bb7(%19: !cir.bool loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":116:45)):  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc137)
  ^bb8:  // pred: ^bb7
    cir.br ^bb10(%19 : !cir.bool) loc(#loc137)
  ^bb9:  // pred: ^bb3
    %20 = cir.const #false loc(#loc137)
    cir.br ^bb10(%20 : !cir.bool) loc(#loc137)
  ^bb10(%21: !cir.bool loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":116:45)):  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc137)
  ^bb11:  // pred: ^bb10
    cir.brcond %21 ^bb12, ^bb17 loc(#loc254)
  ^bb12:  // pred: ^bb11
    %22 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc143)
    %23 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc144)
    %24 = cir.const #cir.int<1> : !u64i loc(#loc255)
    %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc256)
    %26 = cir.call @malloc(%25) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc143)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc257)
    cir.store %27, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc258)
    cir.br ^bb13 loc(#loc259)
  ^bb13:  // pred: ^bb12
    %28 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
    %29 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc152)
    %30 = cir.cmp(eq, %28, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc260)
    cir.brcond %30 ^bb14, ^bb15 loc(#loc261)
  ^bb14:  // pred: ^bb13
    %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc154)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc155)
    %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc156)
    cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc154)
    cir.br ^bb15 loc(#loc150)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc150)
  ^bb16:  // pred: ^bb15
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
    %35 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc158)
    %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc158)
    %37 = cir.call @strcpy(%34, %36) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc159)
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
    cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc161)
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc162)
    cir.call @free(%40) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc163)
    cir.br ^bb18 loc(#loc141)
  ^bb17:  // pred: ^bb11
    %41 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc112)
    %42 = cir.cast(array_to_ptrdecay, %41 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc112)
    cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc164)
    cir.br ^bb18 loc(#loc133)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc133)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc131)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc129)
  ^bb21:  // pred: ^bb20
    cir.return loc(#loc114)
  } loc(#loc241)
  cir.func @_ZN50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33L7goodG2BEv() : () -> () loc(#loc167)
    cir.call @_ZN50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33L7goodB2GEv() : () -> () loc(#loc168)
    cir.return loc(#loc166)
  } loc(#loc262)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc263)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc264)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc173)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc174)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc175)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc176)
  cir.func @main(%arg0: !s32i loc(fused[#loc179, #loc180]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc181, #loc182])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc266)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc267)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc178)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc183)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc183)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc184)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc185)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc185)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc186)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc173)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc173)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc187)
    cir.call @_ZN50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_334goodEv() : () -> () loc(#loc188)
    %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc174)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc174)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc189)
    %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc175)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc175)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc190)
    cir.call @_ZN50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_333badEv() : () -> () loc(#loc191)
    %12 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc176)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc176)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc192)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc193)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc268)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc268)
    cir.return %15 : !s32i loc(#loc268)
  } loc(#loc265)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/string.h":141:1)
#loc8 = loc("/usr/include/string.h":142:14)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":51:34)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("/usr/include/stdlib.h":687:1)
#loc13 = loc("/usr/include/stdlib.h":687:32)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":57:27)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":31:1)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":61:1)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":40:9)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":40:23)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":42:13)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":42:20)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":33:5)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":33:12)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":34:5)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":34:23)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":36:12)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":36:5)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":38:12)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":38:5)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":38:17)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":39:5)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":60:5)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":41:9)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":59:9)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":46:13)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":58:13)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":46:17)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":46:24)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":46:43)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":47:13)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":54:13)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":56:13)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":48:36)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":48:43)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":48:48)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":48:59)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":48:60)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":48:17)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":49:17)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":49:49)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":49:21)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":49:33)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":49:39)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":49:40)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":49:46)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":49:45)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":51:24)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":51:17)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":52:27)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":52:17)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":53:22)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":53:17)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":57:17)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":68:1)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":98:1)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":77:9)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":77:23)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":79:13)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":79:20)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":70:5)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":70:12)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":71:5)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":71:23)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":73:12)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":73:5)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":75:12)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":75:5)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":76:5)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":97:5)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":78:9)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":96:9)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":83:13)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":95:13)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":83:17)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":83:24)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":83:43)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":84:13)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":91:13)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":93:13)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":85:36)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":85:43)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":85:48)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":85:59)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":85:60)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":85:17)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":86:17)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":86:49)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":86:21)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":86:33)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":86:39)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":86:40)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":86:46)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":86:45)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":88:24)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":88:34)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":88:17)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":89:27)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":89:17)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":90:22)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":90:17)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":94:27)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":94:17)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":127:27)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":101:1)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":131:1)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":110:9)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":110:23)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":112:13)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":112:20)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":103:5)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":103:12)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":104:5)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":104:23)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":106:12)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":106:5)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":108:12)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":108:5)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":108:17)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":109:5)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":130:5)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":111:9)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":129:9)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":116:13)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":128:13)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":116:17)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":116:24)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":116:43)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":116:48)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":116:55)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":117:13)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":124:13)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":126:13)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":118:36)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":118:43)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":118:48)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":118:59)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":118:60)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":118:17)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":119:17)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":119:49)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":119:21)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":119:33)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":119:39)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":119:40)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":119:46)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":119:45)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":121:24)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":121:34)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":121:17)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":122:27)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":122:17)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":123:22)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":123:17)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":127:17)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":133:1)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":137:1)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":135:5)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":136:5)
#loc169 = loc("/usr/include/stdlib.h":575:1)
#loc170 = loc("/usr/include/stdlib.h":575:41)
#loc171 = loc("/usr/include/time.h":76:1)
#loc172 = loc("/usr/include/time.h":76:38)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":156:15)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":158:15)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":161:15)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":163:15)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":151:1)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":166:1)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":152:1)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":154:27)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":154:22)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":154:5)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":156:5)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":157:5)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":158:5)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":161:5)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":162:5)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":163:5)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":165:12)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_33.cpp":165:5)
#loc195 = loc(fused[#loc1, #loc2])
#loc196 = loc(fused[#loc3, #loc4])
#loc197 = loc(fused[#loc5, #loc6])
#loc198 = loc(fused[#loc7, #loc8])
#loc199 = loc(fused[#loc10, #loc11])
#loc200 = loc(fused[#loc12, #loc13])
#loc201 = loc(fused[#loc15, #loc16])
#loc202 = loc(fused[#loc17, #loc18])
#loc203 = loc(fused[#loc19, #loc20])
#loc204 = loc(fused[#loc21, #loc22])
#loc205 = loc(fused[#loc23, #loc24])
#loc206 = loc(fused[#loc26, #loc25])
#loc207 = loc(fused[#loc28, #loc29])
#loc208 = loc(fused[#loc30, #loc31])
#loc209 = loc(fused[#loc32, #loc33])
#loc210 = loc(fused[#loc34, #loc35])
#loc211 = loc(fused[#loc37, #loc38])
#loc212 = loc(fused[#loc36, #loc38])
#loc213 = loc(fused[#loc39, #loc40, #loc41, #loc35])
#loc214 = loc(fused[#loc44, #loc45])
#loc215 = loc(fused[#loc43, #loc45])
#loc216 = loc(fused[#loc42, #loc46])
#loc217 = loc(fused[#loc47, #loc46])
#loc218 = loc(fused[#loc48, #loc49])
#loc219 = loc(fused[#loc50, #loc51])
#loc220 = loc(fused[#loc52, #loc49])
#loc221 = loc(fused[#loc63, #loc64])
#loc222 = loc(fused[#loc65, #loc66])
#loc223 = loc(fused[#loc67, #loc68])
#loc224 = loc(fused[#loc69, #loc70])
#loc225 = loc(fused[#loc71, #loc72])
#loc226 = loc(fused[#loc74, #loc73])
#loc227 = loc(fused[#loc76, #loc75])
#loc228 = loc(fused[#loc77, #loc78])
#loc229 = loc(fused[#loc79, #loc80])
#loc230 = loc(fused[#loc81, #loc82])
#loc231 = loc(fused[#loc84, #loc85])
#loc232 = loc(fused[#loc83, #loc85])
#loc233 = loc(fused[#loc86, #loc87, #loc88, #loc82])
#loc234 = loc(fused[#loc91, #loc92])
#loc235 = loc(fused[#loc90, #loc92])
#loc236 = loc(fused[#loc89, #loc93])
#loc237 = loc(fused[#loc94, #loc93])
#loc238 = loc(fused[#loc95, #loc96])
#loc239 = loc(fused[#loc97, #loc98])
#loc240 = loc(fused[#loc99, #loc96])
#loc241 = loc(fused[#loc113, #loc114])
#loc242 = loc(fused[#loc115, #loc116])
#loc243 = loc(fused[#loc117, #loc118])
#loc244 = loc(fused[#loc119, #loc120])
#loc245 = loc(fused[#loc121, #loc122])
#loc246 = loc(fused[#loc124, #loc123])
#loc247 = loc(fused[#loc126, #loc127])
#loc248 = loc(fused[#loc128, #loc129])
#loc249 = loc(fused[#loc130, #loc131])
#loc250 = loc(fused[#loc132, #loc133])
#loc251 = loc(fused[#loc135, #loc136])
#loc252 = loc(fused[#loc134, #loc136])
#loc253 = loc(fused[#loc138, #loc139])
#loc254 = loc(fused[#loc140, #loc141, #loc142, #loc133])
#loc255 = loc(fused[#loc145, #loc146])
#loc256 = loc(fused[#loc144, #loc146])
#loc257 = loc(fused[#loc143, #loc147])
#loc258 = loc(fused[#loc148, #loc147])
#loc259 = loc(fused[#loc149, #loc150])
#loc260 = loc(fused[#loc151, #loc152])
#loc261 = loc(fused[#loc153, #loc150])
#loc262 = loc(fused[#loc165, #loc166])
#loc263 = loc(fused[#loc169, #loc170])
#loc264 = loc(fused[#loc171, #loc172])
#loc265 = loc(fused[#loc177, #loc178])
#loc268 = loc(fused[#loc194, #loc193])
