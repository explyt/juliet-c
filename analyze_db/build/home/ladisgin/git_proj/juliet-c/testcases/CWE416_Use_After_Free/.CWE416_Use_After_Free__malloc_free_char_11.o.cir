!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_char_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc248)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc249)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc250)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc251)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc252)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_char_11_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc254)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc15)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc255)
    cir.br ^bb1 loc(#loc256)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc257)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc257)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc19)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %5 ^bb2, ^bb7 loc(#loc258)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc22)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc23)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc23)
    %9 = cir.const #cir.int<1> : !u64i loc(#loc259)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc260)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc22)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc261)
    cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc262)
    cir.br ^bb3 loc(#loc263)
  ^bb3:  // pred: ^bb2
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc31)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc31)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc264)
    cir.brcond %16 ^bb4, ^bb5 loc(#loc265)
  ^bb4:  // pred: ^bb3
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc33)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc35)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc33)
    cir.br ^bb5 loc(#loc29)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc29)
  ^bb6:  // pred: ^bb5
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc36)
    %22 = cir.const #cir.int<65> : !s32i loc(#loc37)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc38)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc38)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc38)
    cir.libc.memset %26 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc266)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %28 = cir.cast(integral, %27 : !s32i), !s8i loc(#loc42)
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
    %30 = cir.const #cir.int<100> : !s32i loc(#loc44)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc45)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc44)
    %33 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc46)
    cir.store %28, %33 : !s8i, !cir.ptr<!s8i> loc(#loc267)
    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc47)
    cir.call @free(%35) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc48)
    cir.br ^bb7 loc(#loc18)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc18)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc268)
  ^bb9:  // pred: ^bb8
    %36 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc269)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc269)
    %38 = cir.call %37() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc51)
    %39 = cir.cast(int_to_bool, %38 : !s32i), !cir.bool loc(#loc51)
    cir.brcond %39 ^bb10, ^bb11 loc(#loc270)
  ^bb10:  // pred: ^bb9
    %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%40) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    cir.br ^bb11 loc(#loc50)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc50)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc12)
  } loc(#loc253)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_char_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc272)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc273)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc274)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc62)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc275)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc64)
    cir.return loc(#loc57)
  } loc(#loc271)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc276)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc68)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc278)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc73)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc279)
    cir.br ^bb1 loc(#loc280)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc281)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc281)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc77)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc77)
    cir.brcond %5 ^bb2, ^bb7 loc(#loc282)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc80)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc81)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc81)
    %9 = cir.const #cir.int<1> : !u64i loc(#loc283)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc284)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc80)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc285)
    cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc286)
    cir.br ^bb3 loc(#loc287)
  ^bb3:  // pred: ^bb2
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc89)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc89)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc288)
    cir.brcond %16 ^bb4, ^bb5 loc(#loc289)
  ^bb4:  // pred: ^bb3
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc91)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc92)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc93)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc91)
    cir.br ^bb5 loc(#loc87)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc87)
  ^bb6:  // pred: ^bb5
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc94)
    %22 = cir.const #cir.int<65> : !s32i loc(#loc95)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc96)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc96)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc96)
    cir.libc.memset %26 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc290)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc100)
    %28 = cir.cast(integral, %27 : !s32i), !s8i loc(#loc100)
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
    %30 = cir.const #cir.int<100> : !s32i loc(#loc102)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc103)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc102)
    %33 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc104)
    cir.store %28, %33 : !s8i, !cir.ptr<!s8i> loc(#loc291)
    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc105)
    cir.call @free(%35) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc106)
    cir.br ^bb7 loc(#loc76)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc76)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc292)
  ^bb9:  // pred: ^bb8
    %36 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc293)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc293)
    %38 = cir.call %37() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc109)
    %39 = cir.cast(int_to_bool, %38 : !s32i), !cir.bool loc(#loc109)
    cir.brcond %39 ^bb10, ^bb11 loc(#loc294)
  ^bb10:  // pred: ^bb9
    %40 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc68)
    %41 = cir.cast(array_to_ptrdecay, %40 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%41) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    cir.br ^bb12 loc(#loc112)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc108)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc108)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc70)
  } loc(#loc277)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc296)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc119)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc297)
    cir.br ^bb1 loc(#loc298)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc299)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc299)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc123)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc123)
    cir.brcond %5 ^bb2, ^bb7 loc(#loc300)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc126)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc127)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc127)
    %9 = cir.const #cir.int<1> : !u64i loc(#loc301)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc302)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc126)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc303)
    cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc304)
    cir.br ^bb3 loc(#loc305)
  ^bb3:  // pred: ^bb2
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc135)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc135)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc306)
    cir.brcond %16 ^bb4, ^bb5 loc(#loc307)
  ^bb4:  // pred: ^bb3
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc137)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc138)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc139)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc137)
    cir.br ^bb5 loc(#loc133)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc133)
  ^bb6:  // pred: ^bb5
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc140)
    %22 = cir.const #cir.int<65> : !s32i loc(#loc141)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc142)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc143)
    %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc142)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc142)
    cir.libc.memset %26 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc308)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc146)
    %28 = cir.cast(integral, %27 : !s32i), !s8i loc(#loc146)
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
    %30 = cir.const #cir.int<100> : !s32i loc(#loc148)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc149)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc148)
    %33 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc150)
    cir.store %28, %33 : !s8i, !cir.ptr<!s8i> loc(#loc309)
    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc151)
    cir.call @free(%35) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc152)
    cir.br ^bb7 loc(#loc122)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc122)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc310)
  ^bb9:  // pred: ^bb8
    %36 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc311)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc311)
    %38 = cir.call %37() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc155)
    %39 = cir.cast(int_to_bool, %38 : !s32i), !cir.bool loc(#loc155)
    cir.brcond %39 ^bb10, ^bb11 loc(#loc312)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc154)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc154)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc116)
  } loc(#loc295)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc314)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc162)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc315)
    cir.br ^bb1 loc(#loc316)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc317)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc317)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc166)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc166)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc318)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc171)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc171)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc172)
    cir.br ^bb8 loc(#loc169)
  ^bb3:  // pred: ^bb1
    %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc173)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc174)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc174)
    %11 = cir.const #cir.int<1> : !u64i loc(#loc319)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc320)
    %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc173)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc321)
    cir.store %14, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc322)
    cir.br ^bb4 loc(#loc323)
  ^bb4:  // pred: ^bb3
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc181)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc182)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc182)
    %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc324)
    cir.brcond %18 ^bb5, ^bb6 loc(#loc325)
  ^bb5:  // pred: ^bb4
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc184)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc185)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc186)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc184)
    cir.br ^bb6 loc(#loc180)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc180)
  ^bb7:  // pred: ^bb6
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc187)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc187)
    %24 = cir.const #cir.int<65> : !s32i loc(#loc188)
    %25 = cir.const #cir.int<100> : !s32i loc(#loc189)
    %26 = cir.const #cir.int<1> : !s32i loc(#loc190)
    %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc189)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc189)
    cir.libc.memset %28 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc326)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc193)
    %30 = cir.cast(integral, %29 : !s32i), !s8i loc(#loc193)
    %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc194)
    %32 = cir.const #cir.int<100> : !s32i loc(#loc195)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc196)
    %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc195)
    %35 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %34 : !s32i), !cir.ptr<!s8i> loc(#loc197)
    cir.store %30, %35 : !s8i, !cir.ptr<!s8i> loc(#loc327)
    cir.br ^bb8 loc(#loc165)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc165)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc328)
  ^bb10:  // pred: ^bb9
    %36 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc329)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc329)
    %38 = cir.call %37() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc200)
    %39 = cir.cast(int_to_bool, %38 : !s32i), !cir.bool loc(#loc200)
    cir.brcond %39 ^bb11, ^bb12 loc(#loc330)
  ^bb11:  // pred: ^bb10
    %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc203)
    cir.call @printLine(%40) : (!cir.ptr<!s8i>) -> () loc(#loc204)
    cir.br ^bb12 loc(#loc199)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc199)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc159)
  } loc(#loc313)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc332)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc209)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc333)
    cir.br ^bb1 loc(#loc334)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc335)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc335)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc213)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc213)
    cir.brcond %5 ^bb2, ^bb7 loc(#loc336)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc216)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc217)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc217)
    %9 = cir.const #cir.int<1> : !u64i loc(#loc337)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc338)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc216)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc339)
    cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc340)
    cir.br ^bb3 loc(#loc341)
  ^bb3:  // pred: ^bb2
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc224)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc225)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc225)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc342)
    cir.brcond %16 ^bb4, ^bb5 loc(#loc343)
  ^bb4:  // pred: ^bb3
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc227)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc228)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc229)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc227)
    cir.br ^bb5 loc(#loc223)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc223)
  ^bb6:  // pred: ^bb5
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc230)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc230)
    %22 = cir.const #cir.int<65> : !s32i loc(#loc231)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc232)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc233)
    %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc232)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc232)
    cir.libc.memset %26 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc344)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc236)
    %28 = cir.cast(integral, %27 : !s32i), !s8i loc(#loc236)
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc237)
    %30 = cir.const #cir.int<100> : !s32i loc(#loc238)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc239)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc238)
    %33 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc240)
    cir.store %28, %33 : !s8i, !cir.ptr<!s8i> loc(#loc345)
    cir.br ^bb7 loc(#loc212)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc212)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc346)
  ^bb9:  // pred: ^bb8
    %34 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc347)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc347)
    %36 = cir.call %35() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc243)
    %37 = cir.cast(int_to_bool, %36 : !s32i), !cir.bool loc(#loc243)
    cir.brcond %37 ^bb10, ^bb11 loc(#loc348)
  ^bb10:  // pred: ^bb9
    %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc246)
    cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc247)
    cir.br ^bb11 loc(#loc242)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc242)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc206)
  } loc(#loc331)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_char_11.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":24:1)
#loc12 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":44:1)
#loc13 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":26:5)
#loc14 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":26:12)
#loc15 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":28:12)
#loc16 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":28:5)
#loc17 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":29:5)
#loc18 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":37:5)
#loc19 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":29:8)
#loc20 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":29:26)
#loc21 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":30:5)
#loc22 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":31:24)
#loc23 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":31:31)
#loc24 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":31:35)
#loc25 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":31:46)
#loc26 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":31:47)
#loc27 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":31:9)
#loc28 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":32:9)
#loc29 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":32:37)
#loc30 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":32:13)
#loc31 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":32:21)
#loc32 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":32:27)
#loc33 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":32:28)
#loc34 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":32:34)
#loc35 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":32:33)
#loc36 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":33:16)
#loc37 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":33:22)
#loc38 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":33:27)
#loc39 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":33:31)
#loc40 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":33:9)
#loc41 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":33:32)
#loc42 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":34:23)
#loc43 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":34:9)
#loc44 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":34:14)
#loc45 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":34:18)
#loc46 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":34:19)
#loc47 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":36:14)
#loc48 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":36:9)
#loc49 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":38:5)
#loc50 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":43:5)
#loc51 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":38:8)
#loc52 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":38:26)
#loc53 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":39:5)
#loc54 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":41:19)
#loc55 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":41:9)
#loc56 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":152:1)
#loc57 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":158:1)
#loc58 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":154:5)
#loc59 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":154:14)
#loc60 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":155:5)
#loc61 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":155:14)
#loc62 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":156:5)
#loc63 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":156:14)
#loc64 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":157:5)
#loc65 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":157:14)
#loc66 = loc("../../testcasesupport/std_testcase_io.h":50:1)
#loc67 = loc("../../testcasesupport/std_testcase_io.h":50:24)
#loc68 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":68:19)
#loc69 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":51:1)
#loc70 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":77:1)
#loc71 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":53:5)
#loc72 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":53:12)
#loc73 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":55:12)
#loc74 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":55:5)
#loc75 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":56:5)
#loc76 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":64:5)
#loc77 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":56:8)
#loc78 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":56:26)
#loc79 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":57:5)
#loc80 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":58:24)
#loc81 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":58:31)
#loc82 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":58:35)
#loc83 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":58:46)
#loc84 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":58:47)
#loc85 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":58:9)
#loc86 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":59:9)
#loc87 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":59:37)
#loc88 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":59:13)
#loc89 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":59:21)
#loc90 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":59:27)
#loc91 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":59:28)
#loc92 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":59:34)
#loc93 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":59:33)
#loc94 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":60:16)
#loc95 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":60:22)
#loc96 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":60:27)
#loc97 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":60:31)
#loc98 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":60:9)
#loc99 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":60:32)
#loc100 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":61:23)
#loc101 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":61:9)
#loc102 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":61:14)
#loc103 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":61:18)
#loc104 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":61:19)
#loc105 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":63:14)
#loc106 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":63:9)
#loc107 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":65:5)
#loc108 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":76:5)
#loc109 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":65:8)
#loc110 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":65:27)
#loc111 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":66:5)
#loc112 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":69:5)
#loc113 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":71:5)
#loc114 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":68:9)
#loc115 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":80:1)
#loc116 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":101:1)
#loc117 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":82:5)
#loc118 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":82:12)
#loc119 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":84:12)
#loc120 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":84:5)
#loc121 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":85:5)
#loc122 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":93:5)
#loc123 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":85:8)
#loc124 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":85:26)
#loc125 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":86:5)
#loc126 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":87:24)
#loc127 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":87:31)
#loc128 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":87:35)
#loc129 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":87:46)
#loc130 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":87:47)
#loc131 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":87:9)
#loc132 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":88:9)
#loc133 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":88:37)
#loc134 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":88:13)
#loc135 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":88:21)
#loc136 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":88:27)
#loc137 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":88:28)
#loc138 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":88:34)
#loc139 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":88:33)
#loc140 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":89:16)
#loc141 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":89:22)
#loc142 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":89:27)
#loc143 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":89:31)
#loc144 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":89:9)
#loc145 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":89:32)
#loc146 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":90:23)
#loc147 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":90:9)
#loc148 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":90:14)
#loc149 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":90:18)
#loc150 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":90:19)
#loc151 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":92:14)
#loc152 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":92:9)
#loc153 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":94:5)
#loc154 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":100:5)
#loc155 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":94:8)
#loc156 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":94:26)
#loc157 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":95:5)
#loc158 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":104:1)
#loc159 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":128:1)
#loc160 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":106:5)
#loc161 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":106:12)
#loc162 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":108:12)
#loc163 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":108:5)
#loc164 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":109:5)
#loc165 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":121:5)
#loc166 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":109:8)
#loc167 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":109:27)
#loc168 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":110:5)
#loc169 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":113:5)
#loc170 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":115:5)
#loc171 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":112:19)
#loc172 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":112:9)
#loc173 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":116:24)
#loc174 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":116:31)
#loc175 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":116:35)
#loc176 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":116:46)
#loc177 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":116:47)
#loc178 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":116:9)
#loc179 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":117:9)
#loc180 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":117:37)
#loc181 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":117:13)
#loc182 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":117:21)
#loc183 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":117:27)
#loc184 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":117:28)
#loc185 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":117:34)
#loc186 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":117:33)
#loc187 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":118:16)
#loc188 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":118:22)
#loc189 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":118:27)
#loc190 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":118:31)
#loc191 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":118:9)
#loc192 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":118:32)
#loc193 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":119:23)
#loc194 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":119:9)
#loc195 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":119:14)
#loc196 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":119:18)
#loc197 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":119:19)
#loc198 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":122:5)
#loc199 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":127:5)
#loc200 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":122:8)
#loc201 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":122:26)
#loc202 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":123:5)
#loc203 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":125:19)
#loc204 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":125:9)
#loc205 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":131:1)
#loc206 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":150:1)
#loc207 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":133:5)
#loc208 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":133:12)
#loc209 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":135:12)
#loc210 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":135:5)
#loc211 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":136:5)
#loc212 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":143:5)
#loc213 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":136:8)
#loc214 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":136:26)
#loc215 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":137:5)
#loc216 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":138:24)
#loc217 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":138:31)
#loc218 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":138:35)
#loc219 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":138:46)
#loc220 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":138:47)
#loc221 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":138:9)
#loc222 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":139:9)
#loc223 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":139:37)
#loc224 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":139:13)
#loc225 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":139:21)
#loc226 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":139:27)
#loc227 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":139:28)
#loc228 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":139:34)
#loc229 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":139:33)
#loc230 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":140:16)
#loc231 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":140:22)
#loc232 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":140:27)
#loc233 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":140:31)
#loc234 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":140:9)
#loc235 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":140:32)
#loc236 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":141:23)
#loc237 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":141:9)
#loc238 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":141:14)
#loc239 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":141:18)
#loc240 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":141:19)
#loc241 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":144:5)
#loc242 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":149:5)
#loc243 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":144:8)
#loc244 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":144:26)
#loc245 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":145:5)
#loc246 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":147:19)
#loc247 = loc("CWE416_Use_After_Free__malloc_free_char_11.c":147:9)
#loc248 = loc(fused[#loc1, #loc2])
#loc249 = loc(fused[#loc3, #loc4])
#loc250 = loc(fused[#loc5, #loc6])
#loc251 = loc(fused[#loc7, #loc8])
#loc252 = loc(fused[#loc9, #loc10])
#loc253 = loc(fused[#loc11, #loc12])
#loc254 = loc(fused[#loc13, #loc14])
#loc255 = loc(fused[#loc16, #loc15])
#loc256 = loc(fused[#loc17, #loc18])
#loc257 = loc(fused[#loc19, #loc20])
#loc258 = loc(fused[#loc21, #loc18])
#loc259 = loc(fused[#loc24, #loc25])
#loc260 = loc(fused[#loc23, #loc25])
#loc261 = loc(fused[#loc22, #loc26])
#loc262 = loc(fused[#loc27, #loc26])
#loc263 = loc(fused[#loc28, #loc29])
#loc264 = loc(fused[#loc30, #loc31])
#loc265 = loc(fused[#loc32, #loc29])
#loc266 = loc(fused[#loc40, #loc41])
#loc267 = loc(fused[#loc43, #loc42])
#loc268 = loc(fused[#loc49, #loc50])
#loc269 = loc(fused[#loc51, #loc52])
#loc270 = loc(fused[#loc53, #loc50])
#loc271 = loc(fused[#loc56, #loc57])
#loc272 = loc(fused[#loc58, #loc59])
#loc273 = loc(fused[#loc60, #loc61])
#loc274 = loc(fused[#loc62, #loc63])
#loc275 = loc(fused[#loc64, #loc65])
#loc276 = loc(fused[#loc66, #loc67])
#loc277 = loc(fused[#loc69, #loc70])
#loc278 = loc(fused[#loc71, #loc72])
#loc279 = loc(fused[#loc74, #loc73])
#loc280 = loc(fused[#loc75, #loc76])
#loc281 = loc(fused[#loc77, #loc78])
#loc282 = loc(fused[#loc79, #loc76])
#loc283 = loc(fused[#loc82, #loc83])
#loc284 = loc(fused[#loc81, #loc83])
#loc285 = loc(fused[#loc80, #loc84])
#loc286 = loc(fused[#loc85, #loc84])
#loc287 = loc(fused[#loc86, #loc87])
#loc288 = loc(fused[#loc88, #loc89])
#loc289 = loc(fused[#loc90, #loc87])
#loc290 = loc(fused[#loc98, #loc99])
#loc291 = loc(fused[#loc101, #loc100])
#loc292 = loc(fused[#loc107, #loc108])
#loc293 = loc(fused[#loc109, #loc110])
#loc294 = loc(fused[#loc111, #loc112, #loc113, #loc108])
#loc295 = loc(fused[#loc115, #loc116])
#loc296 = loc(fused[#loc117, #loc118])
#loc297 = loc(fused[#loc120, #loc119])
#loc298 = loc(fused[#loc121, #loc122])
#loc299 = loc(fused[#loc123, #loc124])
#loc300 = loc(fused[#loc125, #loc122])
#loc301 = loc(fused[#loc128, #loc129])
#loc302 = loc(fused[#loc127, #loc129])
#loc303 = loc(fused[#loc126, #loc130])
#loc304 = loc(fused[#loc131, #loc130])
#loc305 = loc(fused[#loc132, #loc133])
#loc306 = loc(fused[#loc134, #loc135])
#loc307 = loc(fused[#loc136, #loc133])
#loc308 = loc(fused[#loc144, #loc145])
#loc309 = loc(fused[#loc147, #loc146])
#loc310 = loc(fused[#loc153, #loc154])
#loc311 = loc(fused[#loc155, #loc156])
#loc312 = loc(fused[#loc157, #loc154])
#loc313 = loc(fused[#loc158, #loc159])
#loc314 = loc(fused[#loc160, #loc161])
#loc315 = loc(fused[#loc163, #loc162])
#loc316 = loc(fused[#loc164, #loc165])
#loc317 = loc(fused[#loc166, #loc167])
#loc318 = loc(fused[#loc168, #loc169, #loc170, #loc165])
#loc319 = loc(fused[#loc175, #loc176])
#loc320 = loc(fused[#loc174, #loc176])
#loc321 = loc(fused[#loc173, #loc177])
#loc322 = loc(fused[#loc178, #loc177])
#loc323 = loc(fused[#loc179, #loc180])
#loc324 = loc(fused[#loc181, #loc182])
#loc325 = loc(fused[#loc183, #loc180])
#loc326 = loc(fused[#loc191, #loc192])
#loc327 = loc(fused[#loc194, #loc193])
#loc328 = loc(fused[#loc198, #loc199])
#loc329 = loc(fused[#loc200, #loc201])
#loc330 = loc(fused[#loc202, #loc199])
#loc331 = loc(fused[#loc205, #loc206])
#loc332 = loc(fused[#loc207, #loc208])
#loc333 = loc(fused[#loc210, #loc209])
#loc334 = loc(fused[#loc211, #loc212])
#loc335 = loc(fused[#loc213, #loc214])
#loc336 = loc(fused[#loc215, #loc212])
#loc337 = loc(fused[#loc218, #loc219])
#loc338 = loc(fused[#loc217, #loc219])
#loc339 = loc(fused[#loc216, #loc220])
#loc340 = loc(fused[#loc221, #loc220])
#loc341 = loc(fused[#loc222, #loc223])
#loc342 = loc(fused[#loc224, #loc225])
#loc343 = loc(fused[#loc226, #loc223])
#loc344 = loc(fused[#loc234, #loc235])
#loc345 = loc(fused[#loc237, #loc236])
#loc346 = loc(fused[#loc241, #loc242])
#loc347 = loc(fused[#loc243, #loc244])
#loc348 = loc(fused[#loc245, #loc242])
