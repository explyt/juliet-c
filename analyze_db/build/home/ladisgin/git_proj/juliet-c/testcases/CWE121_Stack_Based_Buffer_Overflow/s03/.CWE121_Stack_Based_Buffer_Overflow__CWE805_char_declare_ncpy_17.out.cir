!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":90:10)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":90:14)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":90:20)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":90:32)
#loc165 = loc(fused[#loc71, #loc72])
#loc166 = loc(fused[#loc73, #loc74])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc141)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc142)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc144)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc145)
    %2 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc146)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc147)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc17)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc149)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc19)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc20)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc150)
        cir.condition(%7) loc(#loc21)
      } body {
        cir.scope {
          %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc23)
          cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc25)
          %7 = cir.cast(integral, %6 : !s32i), !s8i loc(#loc25)
          %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
          %9 = cir.const #cir.int<0> : !s32i loc(#loc27)
          %10 = cir.ptr_stride(%8 : !cir.ptr<!s8i>, %9 : !s32i), !cir.ptr<!s8i> loc(#loc28)
          cir.store %7, %10 : !s8i, !cir.ptr<!s8i> loc(#loc153)
        } loc(#loc151)
        cir.yield loc(#loc16)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc29)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc30)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc154)
        cir.yield loc(#loc148)
      } loc(#loc148)
    } loc(#loc148)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc156)
      %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc35)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc35)
      %7 = cir.const #cir.int<67> : !s32i loc(#loc36)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc37)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc38)
      %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc37)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc37)
      cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc157)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc41)
      %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc41)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc42)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc43)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc42)
      %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc44)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc44)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc158)
      %19 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc45)
      %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
      %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
      %22 = cir.const #cir.int<100> : !s32i loc(#loc48)
      %23 = cir.const #cir.int<1> : !s32i loc(#loc49)
      %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc48)
      %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc48)
      %26 = cir.call @strncpy(%20, %21, %25) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc45)
      %27 = cir.const #cir.int<0> : !s32i loc(#loc50)
      %28 = cir.cast(integral, %27 : !s32i), !s8i loc(#loc50)
      %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
      %30 = cir.const #cir.int<100> : !s32i loc(#loc52)
      %31 = cir.const #cir.int<1> : !s32i loc(#loc53)
      %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc52)
      %33 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc54)
      cir.store %28, %33 : !s8i, !cir.ptr<!s8i> loc(#loc159)
      %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
      cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    } loc(#loc155)
    cir.return loc(#loc6)
  } loc(#loc143)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc161)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc59)
    cir.return loc(#loc58)
  } loc(#loc160)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc162)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc163)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc68)
  cir.func @main(%arg0: !s32i loc(fused[#loc71, #loc72]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc73, #loc74])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc165)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc166)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc70)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc75)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc75)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc76)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc77)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc77)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc78)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc65)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc167)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17_good() : () -> () loc(#loc80)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc66)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc67)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc168)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17_bad() : () -> () loc(#loc84)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc68)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc87)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc169)
    cir.return %17 : !s32i loc(#loc169)
  } loc(#loc164)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc171)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc172)
    %2 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc173)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc174)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc101)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc176)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc103)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc104)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc177)
        cir.condition(%7) loc(#loc105)
      } body {
        cir.scope {
          %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc107)
          cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc179)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc109)
          %7 = cir.cast(integral, %6 : !s32i), !s8i loc(#loc109)
          %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
          %9 = cir.const #cir.int<0> : !s32i loc(#loc111)
          %10 = cir.ptr_stride(%8 : !cir.ptr<!s8i>, %9 : !s32i), !cir.ptr<!s8i> loc(#loc112)
          cir.store %7, %10 : !s8i, !cir.ptr<!s8i> loc(#loc180)
        } loc(#loc178)
        cir.yield loc(#loc100)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc113)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc114)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc181)
        cir.yield loc(#loc175)
      } loc(#loc175)
    } loc(#loc175)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc183)
      %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc119)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc119)
      %7 = cir.const #cir.int<67> : !s32i loc(#loc120)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc121)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc122)
      %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc121)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc121)
      cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc184)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc125)
      %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc125)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc126)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc127)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc126)
      %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc128)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc128)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc185)
      %19 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc129)
      %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
      %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc131)
      %22 = cir.const #cir.int<100> : !s32i loc(#loc132)
      %23 = cir.const #cir.int<1> : !s32i loc(#loc133)
      %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc132)
      %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc132)
      %26 = cir.call @strncpy(%20, %21, %25) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc129)
      %27 = cir.const #cir.int<0> : !s32i loc(#loc134)
      %28 = cir.cast(integral, %27 : !s32i), !s8i loc(#loc134)
      %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
      %30 = cir.const #cir.int<100> : !s32i loc(#loc136)
      %31 = cir.const #cir.int<1> : !s32i loc(#loc137)
      %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc136)
      %33 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc138)
      cir.store %28, %33 : !s8i, !cir.ptr<!s8i> loc(#loc186)
      %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
      cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc140)
    } loc(#loc182)
    cir.return loc(#loc90)
  } loc(#loc170)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":0:0)
#loc1 = loc("/usr/include/string.h":144:1)
#loc2 = loc("/usr/include/string.h":146:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":23:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":45:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":25:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":25:9)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":26:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":26:12)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":27:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":27:26)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":28:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":28:28)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":29:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":35:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":29:13)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":29:9)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":29:16)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":29:20)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":29:18)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":30:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":33:16)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":33:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":34:19)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":34:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":34:14)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":34:15)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":29:24)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":29:23)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":36:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":44:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":37:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":37:24)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":38:16)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":38:24)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":38:29)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":38:33)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":38:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":38:34)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":39:25)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":39:16)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":39:20)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":39:9)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":41:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":41:17)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":41:23)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":41:31)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":41:35)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":42:23)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":42:9)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":42:14)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":42:18)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":42:19)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":43:19)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":43:9)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":75:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":78:1)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":77:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":77:13)
#loc61 = loc("/usr/include/stdlib.h":575:1)
#loc62 = loc("/usr/include/stdlib.h":575:41)
#loc63 = loc("/usr/include/time.h":76:1)
#loc64 = loc("/usr/include/time.h":76:38)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":95:15)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":97:15)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":100:15)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":102:15)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":90:1)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":105:1)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":91:1)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":93:27)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":93:22)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":93:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":95:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":96:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":96:74)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":97:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":100:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":101:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":101:73)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":102:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":104:12)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":104:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":52:1)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":73:1)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":54:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":54:9)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":55:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":55:12)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":56:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":56:26)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":57:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":57:28)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":58:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":63:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":58:13)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":58:9)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":58:16)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":58:20)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":58:18)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":59:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":61:16)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":61:9)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":62:19)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":62:9)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":62:14)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":62:15)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":58:24)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":58:23)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":64:5)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":72:5)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":65:9)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":65:24)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":66:16)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":66:24)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":66:29)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":66:33)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":66:9)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":66:34)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":67:25)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":67:16)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":67:20)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":67:9)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":69:9)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":69:17)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":69:23)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":69:31)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":69:35)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":70:23)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":70:9)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":70:14)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":70:18)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":70:19)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":71:19)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_ncpy_17.c":71:9)
#loc141 = loc(fused[#loc1, #loc2])
#loc142 = loc(fused[#loc3, #loc4])
#loc143 = loc(fused[#loc5, #loc6])
#loc144 = loc(fused[#loc7, #loc8])
#loc145 = loc(fused[#loc9, #loc10])
#loc146 = loc(fused[#loc11, #loc12])
#loc147 = loc(fused[#loc13, #loc14])
#loc148 = loc(fused[#loc15, #loc16])
#loc149 = loc(fused[#loc18, #loc17])
#loc150 = loc(fused[#loc19, #loc20])
#loc151 = loc(fused[#loc22, #loc16])
#loc152 = loc(fused[#loc24, #loc23])
#loc153 = loc(fused[#loc26, #loc25])
#loc154 = loc(fused[#loc30, #loc29])
#loc155 = loc(fused[#loc31, #loc32])
#loc156 = loc(fused[#loc33, #loc34])
#loc157 = loc(fused[#loc39, #loc40])
#loc158 = loc(fused[#loc44, #loc41])
#loc159 = loc(fused[#loc51, #loc50])
#loc160 = loc(fused[#loc57, #loc58])
#loc161 = loc(fused[#loc59, #loc60])
#loc162 = loc(fused[#loc61, #loc62])
#loc163 = loc(fused[#loc63, #loc64])
#loc164 = loc(fused[#loc69, #loc70])
#loc167 = loc(fused[#loc80, #loc81])
#loc168 = loc(fused[#loc84, #loc85])
#loc169 = loc(fused[#loc88, #loc87])
#loc170 = loc(fused[#loc89, #loc90])
#loc171 = loc(fused[#loc91, #loc92])
#loc172 = loc(fused[#loc93, #loc94])
#loc173 = loc(fused[#loc95, #loc96])
#loc174 = loc(fused[#loc97, #loc98])
#loc175 = loc(fused[#loc99, #loc100])
#loc176 = loc(fused[#loc102, #loc101])
#loc177 = loc(fused[#loc103, #loc104])
#loc178 = loc(fused[#loc106, #loc100])
#loc179 = loc(fused[#loc108, #loc107])
#loc180 = loc(fused[#loc110, #loc109])
#loc181 = loc(fused[#loc114, #loc113])
#loc182 = loc(fused[#loc115, #loc116])
#loc183 = loc(fused[#loc117, #loc118])
#loc184 = loc(fused[#loc123, #loc124])
#loc185 = loc(fused[#loc128, #loc125])
#loc186 = loc(fused[#loc135, #loc134])
