!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc64 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":112:10)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":112:14)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":112:20)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":112:32)
#loc158 = loc(fused[#loc64, #loc65])
#loc159 = loc(fused[#loc66, #loc67])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_snprintf_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc131)
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc132)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\0A\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc5)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc6)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc133)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"snprintf failed!\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc9)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_snprintf_12_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc136)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc136)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc14)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc14)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc139)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc140)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc139)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc139)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc24)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc140)
          %8 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc25)
          %9 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
          %10 = cir.const #cir.int<100> : !s32i loc(#loc27)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc27)
          %12 = cir.const #cir.int<6> : !u64i loc(#loc141)
          %13 = cir.binop(sub, %11, %12) : !u64i loc(#loc142)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc30)
          %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc30)
          %16 = cir.binop(sub, %13, %15) : !u64i loc(#loc143)
          %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc5)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc5)
          %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc6)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc6)
          %21 = cir.call @snprintf(%9, %16, %18, %20) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc25)
        } loc(#loc138)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc145)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc146)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc145)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc145)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
          cir.scope {
            %8 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc39)
            %9 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
            %10 = cir.const #cir.int<100> : !s32i loc(#loc41)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc41)
            %12 = cir.const #cir.int<6> : !u64i loc(#loc148)
            %13 = cir.binop(sub, %11, %12) : !u64i loc(#loc149)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc44)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc44)
            %16 = cir.binop(sub, %13, %15) : !u64i loc(#loc150)
            %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc45)
            %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc45)
            %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc46)
            %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc46)
            %21 = cir.call @snprintf(%9, %16, %18, %20) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc39)
            %22 = cir.const #cir.int<0> : !s32i loc(#loc47)
            %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc151)
            cir.if %23 {
              %24 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc9)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc49)
            } loc(#loc152)
          } loc(#loc147)
        } loc(#loc144)
      } loc(#loc137)
    } loc(#loc135)
    cir.return loc(#loc11)
  } loc(#loc134)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_snprintf_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc154)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc52)
    cir.return loc(#loc51)
  } loc(#loc153)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc155)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc156)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc58)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc60)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc61)
  cir.func @main(%arg0: !s32i loc(fused[#loc64, #loc65]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc66, #loc67])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc158)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc159)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc63)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc68)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc68)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc69)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc70)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc70)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc71)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc58)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %8 = cir.get_global @CWE252_Unchecked_Return_Value__char_snprintf_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc160)
    cir.call @CWE252_Unchecked_Return_Value__char_snprintf_12_good() : () -> () loc(#loc73)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc59)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc60)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %13 = cir.get_global @CWE252_Unchecked_Return_Value__char_snprintf_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc161)
    cir.call @CWE252_Unchecked_Return_Value__char_snprintf_12_bad() : () -> () loc(#loc77)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc61)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc80)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc162)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    cir.return %17 : !s32i loc(#loc162)
  } loc(#loc157)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc165)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc165)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc86)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc86)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc168)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc169)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc168)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc168)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc96)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc169)
          cir.scope {
            %8 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc99)
            %9 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
            %10 = cir.const #cir.int<100> : !s32i loc(#loc101)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc101)
            %12 = cir.const #cir.int<6> : !u64i loc(#loc171)
            %13 = cir.binop(sub, %11, %12) : !u64i loc(#loc172)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc104)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc104)
            %16 = cir.binop(sub, %13, %15) : !u64i loc(#loc173)
            %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc105)
            %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc105)
            %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc106)
            %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc106)
            %21 = cir.call @snprintf(%9, %16, %18, %20) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc99)
            %22 = cir.const #cir.int<0> : !s32i loc(#loc107)
            %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc174)
            cir.if %23 {
              %24 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc109)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc109)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc110)
            } loc(#loc175)
          } loc(#loc170)
        } loc(#loc167)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc177)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc178)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc177)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc177)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc116)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc178)
          cir.scope {
            %8 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc119)
            %9 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
            %10 = cir.const #cir.int<100> : !s32i loc(#loc121)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc121)
            %12 = cir.const #cir.int<6> : !u64i loc(#loc180)
            %13 = cir.binop(sub, %11, %12) : !u64i loc(#loc181)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc124)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc124)
            %16 = cir.binop(sub, %13, %15) : !u64i loc(#loc182)
            %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc125)
            %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc125)
            %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc126)
            %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc126)
            %21 = cir.call @snprintf(%9, %16, %18, %20) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc119)
            %22 = cir.const #cir.int<0> : !s32i loc(#loc127)
            %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc183)
            cir.if %23 {
              %24 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc129)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc129)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc130)
            } loc(#loc184)
          } loc(#loc179)
        } loc(#loc176)
      } loc(#loc166)
    } loc(#loc164)
    cir.return loc(#loc83)
  } loc(#loc163)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_snprintf_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":385:1)
#loc4 = loc("/usr/include/stdio.h":387:62)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":42:46)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":42:54)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":55:27)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":32:1)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":59:1)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":34:5)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":58:5)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":34:8)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":34:33)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":35:5)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":44:5)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":46:5)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":36:9)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":43:9)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":39:13)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":39:36)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":40:13)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":40:27)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":42:13)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":42:22)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":42:27)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":42:31)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":42:41)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":42:43)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":47:9)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":57:9)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":50:13)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":50:36)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":51:13)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":51:27)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":53:13)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":56:13)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":53:17)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":53:26)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":53:31)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":53:35)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":53:45)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":53:47)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":53:50)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":53:58)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":53:65)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":54:13)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":55:17)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":98:1)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":101:1)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":100:5)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":100:11)
#loc54 = loc("/usr/include/stdlib.h":575:1)
#loc55 = loc("/usr/include/stdlib.h":575:41)
#loc56 = loc("/usr/include/time.h":76:1)
#loc57 = loc("/usr/include/time.h":76:38)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":117:15)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":119:15)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":122:15)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":124:15)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":112:1)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":127:1)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":113:1)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":115:27)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":115:22)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":115:5)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":117:5)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":118:5)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":118:58)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":119:5)
#loc76 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":122:5)
#loc77 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":123:5)
#loc78 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":123:57)
#loc79 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":124:5)
#loc80 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":126:12)
#loc81 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":126:5)
#loc82 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":66:1)
#loc83 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":96:1)
#loc84 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":68:5)
#loc85 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":95:5)
#loc86 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":68:8)
#loc87 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":68:33)
#loc88 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":69:5)
#loc89 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":81:5)
#loc90 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":83:5)
#loc91 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":70:9)
#loc92 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":80:9)
#loc93 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":73:13)
#loc94 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":73:36)
#loc95 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":74:13)
#loc96 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":74:27)
#loc97 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":76:13)
#loc98 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":79:13)
#loc99 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":76:17)
#loc100 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":76:26)
#loc101 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":76:31)
#loc102 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":76:35)
#loc103 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":76:45)
#loc104 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":76:47)
#loc105 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":76:50)
#loc106 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":76:58)
#loc107 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":76:65)
#loc108 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":77:13)
#loc109 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":78:27)
#loc110 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":78:17)
#loc111 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":84:9)
#loc112 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":94:9)
#loc113 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":87:13)
#loc114 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":87:36)
#loc115 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":88:13)
#loc116 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":88:27)
#loc117 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":90:13)
#loc118 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":93:13)
#loc119 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":90:17)
#loc120 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":90:26)
#loc121 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":90:31)
#loc122 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":90:35)
#loc123 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":90:45)
#loc124 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":90:47)
#loc125 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":90:50)
#loc126 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":90:58)
#loc127 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":90:65)
#loc128 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":91:13)
#loc129 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":92:27)
#loc130 = loc("CWE252_Unchecked_Return_Value__char_snprintf_12.c":92:17)
#loc131 = loc(fused[#loc1, #loc2])
#loc132 = loc(fused[#loc3, #loc4])
#loc133 = loc(fused[#loc7, #loc8])
#loc134 = loc(fused[#loc10, #loc11])
#loc135 = loc(fused[#loc12, #loc13])
#loc136 = loc(fused[#loc14, #loc15])
#loc137 = loc(fused[#loc16, #loc17, #loc18, #loc13])
#loc138 = loc(fused[#loc19, #loc20])
#loc139 = loc(fused[#loc21, #loc22])
#loc140 = loc(fused[#loc23, #loc24])
#loc141 = loc(fused[#loc28, #loc29])
#loc142 = loc(fused[#loc27, #loc29])
#loc143 = loc(fused[#loc27, #loc30])
#loc144 = loc(fused[#loc31, #loc32])
#loc145 = loc(fused[#loc33, #loc34])
#loc146 = loc(fused[#loc35, #loc36])
#loc147 = loc(fused[#loc37, #loc38])
#loc148 = loc(fused[#loc42, #loc43])
#loc149 = loc(fused[#loc41, #loc43])
#loc150 = loc(fused[#loc41, #loc44])
#loc151 = loc(fused[#loc39, #loc47])
#loc152 = loc(fused[#loc48, #loc38])
#loc153 = loc(fused[#loc50, #loc51])
#loc154 = loc(fused[#loc52, #loc53])
#loc155 = loc(fused[#loc54, #loc55])
#loc156 = loc(fused[#loc56, #loc57])
#loc157 = loc(fused[#loc62, #loc63])
#loc160 = loc(fused[#loc73, #loc74])
#loc161 = loc(fused[#loc77, #loc78])
#loc162 = loc(fused[#loc81, #loc80])
#loc163 = loc(fused[#loc82, #loc83])
#loc164 = loc(fused[#loc84, #loc85])
#loc165 = loc(fused[#loc86, #loc87])
#loc166 = loc(fused[#loc88, #loc89, #loc90, #loc85])
#loc167 = loc(fused[#loc91, #loc92])
#loc168 = loc(fused[#loc93, #loc94])
#loc169 = loc(fused[#loc95, #loc96])
#loc170 = loc(fused[#loc97, #loc98])
#loc171 = loc(fused[#loc102, #loc103])
#loc172 = loc(fused[#loc101, #loc103])
#loc173 = loc(fused[#loc101, #loc104])
#loc174 = loc(fused[#loc99, #loc107])
#loc175 = loc(fused[#loc108, #loc98])
#loc176 = loc(fused[#loc111, #loc112])
#loc177 = loc(fused[#loc113, #loc114])
#loc178 = loc(fused[#loc115, #loc116])
#loc179 = loc(fused[#loc117, #loc118])
#loc180 = loc(fused[#loc122, #loc123])
#loc181 = loc(fused[#loc121, #loc123])
#loc182 = loc(fused[#loc121, #loc124])
#loc183 = loc(fused[#loc119, #loc127])
#loc184 = loc(fused[#loc128, #loc118])
