!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":30:15)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":30:19)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":61:20)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":61:24)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":77:20)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":77:24)
#loc82 = loc(fused[#loc14, #loc15])
#loc94 = loc(fused[#loc47, #loc48])
#loc101 = loc(fused[#loc65, #loc66])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" external @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_229badGlobalE : !s32i {alignment = 4 : i64} loc(#loc76)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc77)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc78)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc79)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc80)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc11)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_229badSourceEi(%arg0: !s32i loc(fused[#loc14, #loc15])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc83)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc82)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc13)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc18)
    cir.br ^bb1 loc(#loc84)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_229badGlobalE : !cir.ptr<!s32i> loc(#loc76)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc21)
    cir.brcond %5 ^bb2, ^bb10 loc(#loc85)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc86)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc83)
    cir.store %6, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc83)
    cir.br ^bb4 loc(#loc87)
  ^bb4:  // pred: ^bb3
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc27)
    %8 = cir.const #cir.int<3> : !s32i loc(#loc28)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc28)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc28)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc28)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc28)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc28)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc28)
    %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc28)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc78)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc29)
    %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc30)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc31)
    %20 = cir.cmp(ne, %18, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc88)
    cir.brcond %20 ^bb5, ^bb6 loc(#loc89)
  ^bb5:  // pred: ^bb4
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc35)
    %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc36)
    cir.store %22, %1 : !s32i, !cir.ptr<!s32i> loc(#loc90)
    cir.br ^bb7 loc(#loc33)
  ^bb6:  // pred: ^bb4
    %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc11)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc11)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc39)
    cir.br ^bb7 loc(#loc26)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc26)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc24)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc20)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc20)
  ^bb11:  // pred: ^bb10
    %25 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc40)
    cir.store %25, %2 : !s32i, !cir.ptr<!s32i> loc(#loc91)
    %26 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    cir.return %26 : !s32i loc(#loc91)
  } loc(#loc81)
  cir.global "private" external @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_2214goodG2B1GlobalE : !s32i {alignment = 4 : i64} loc(#loc92)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc44)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_2214goodG2B1SourceEi(%arg0: !s32i loc(fused[#loc47, #loc48])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc94)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc46)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc49)
    cir.br ^bb1 loc(#loc95)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_2214goodG2B1GlobalE : !cir.ptr<!s32i> loc(#loc92)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc52)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc52)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc96)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc44)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    cir.br ^bb4 loc(#loc54)
  ^bb3:  // pred: ^bb1
    %7 = cir.const #cir.int<20> : !s32i loc(#loc57)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc97)
    cir.br ^bb4 loc(#loc51)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc51)
  ^bb5:  // pred: ^bb4
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc59)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc98)
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    cir.return %9 : !s32i loc(#loc98)
  } loc(#loc93)
  cir.global "private" external @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_2214goodG2B2GlobalE : !s32i {alignment = 4 : i64} loc(#loc99)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_2214goodG2B2SourceEi(%arg0: !s32i loc(fused[#loc65, #loc66])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc101)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc64)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc67)
    cir.br ^bb1 loc(#loc102)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_2214goodG2B2GlobalE : !cir.ptr<!s32i> loc(#loc99)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc70)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc70)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc103)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<20> : !s32i loc(#loc72)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc104)
    cir.br ^bb3 loc(#loc69)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc69)
  ^bb4:  // pred: ^bb3
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc74)
    cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc105)
    %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    cir.return %7 : !s32i loc(#loc105)
  } loc(#loc100)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":0:0)
#loc1 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":28:1)
#loc2 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":28:12)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("/usr/include/stdlib.h":105:1)
#loc8 = loc("/usr/include/stdlib.h":106:33)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":44:27)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":30:1)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":49:1)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":35:13)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":35:49)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":31:1)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":32:5)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":47:5)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":32:8)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":33:5)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":34:9)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":46:9)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":37:13)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":45:13)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":37:23)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":37:36)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":37:53)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":37:17)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":37:63)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":38:13)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":41:13)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":43:13)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":40:29)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":40:24)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":40:17)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":40:40)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":44:17)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":48:12)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":48:5)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":57:1)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":57:12)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":66:19)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":61:1)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":74:1)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":62:1)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":63:5)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":72:5)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":63:8)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":64:5)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":67:5)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":69:5)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":66:9)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":71:16)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":71:9)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":73:12)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":73:5)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":58:1)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":58:12)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":77:1)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":85:1)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":78:1)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":79:5)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":83:5)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":79:8)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":80:5)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":82:16)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":82:9)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":84:12)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_22b.cpp":84:5)
#loc76 = loc(fused[#loc1, #loc2])
#loc77 = loc(fused[#loc3, #loc4])
#loc78 = loc(fused[#loc5, #loc6])
#loc79 = loc(fused[#loc7, #loc8])
#loc80 = loc(fused[#loc9, #loc10])
#loc81 = loc(fused[#loc12, #loc13])
#loc83 = loc(fused[#loc16, #loc17])
#loc84 = loc(fused[#loc19, #loc20])
#loc85 = loc(fused[#loc22, #loc20])
#loc86 = loc(fused[#loc23, #loc24])
#loc87 = loc(fused[#loc25, #loc26])
#loc88 = loc(fused[#loc30, #loc31])
#loc89 = loc(fused[#loc32, #loc33, #loc34, #loc26])
#loc90 = loc(fused[#loc37, #loc38])
#loc91 = loc(fused[#loc41, #loc40])
#loc92 = loc(fused[#loc42, #loc43])
#loc93 = loc(fused[#loc45, #loc46])
#loc95 = loc(fused[#loc50, #loc51])
#loc96 = loc(fused[#loc53, #loc54, #loc55, #loc51])
#loc97 = loc(fused[#loc58, #loc57])
#loc98 = loc(fused[#loc60, #loc59])
#loc99 = loc(fused[#loc61, #loc62])
#loc100 = loc(fused[#loc63, #loc64])
#loc102 = loc(fused[#loc68, #loc69])
#loc103 = loc(fused[#loc71, #loc69])
#loc104 = loc(fused[#loc73, #loc72])
#loc105 = loc(fused[#loc75, #loc74])
