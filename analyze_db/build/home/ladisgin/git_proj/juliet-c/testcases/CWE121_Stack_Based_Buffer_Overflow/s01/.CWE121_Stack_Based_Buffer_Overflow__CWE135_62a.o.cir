!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @_ZN45CWE121_Stack_Based_Buffer_Overflow__CWE135_629badSourceERPv(!cir.ptr<!cir.ptr<!void>>) loc(#loc83)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc84)
  cir.func private @wcscpy(!cir.ptr<!s32i>, !cir.ptr<!s32i>) -> !cir.ptr<!s32i> extra(#fn_attr) loc(#loc85)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc86)
  cir.func @_ZN45CWE121_Stack_Based_Buffer_Overflow__CWE135_623badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc88)
    %1 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dest", init] {alignment = 8 : i64} loc(#loc89)
    %2 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc90)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc17)
    cir.store %3, %2 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc91)
    cir.call @_ZN45CWE121_Stack_Based_Buffer_Overflow__CWE135_629badSourceERPv(%2) : (!cir.ptr<!cir.ptr<!void>>) -> () loc(#loc19)
    cir.br ^bb1 loc(#loc92)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc22)
    %5 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc23)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc23)
    %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc22)
    cir.store %7, %0 : !u64i, !cir.ptr<!u64i> loc(#loc88)
    %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc14)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc14)
    %11 = cir.binop(add, %8, %10) : !u64i loc(#loc14)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc14)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc14)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    cir.store %15, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc89)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc24)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc24)
    %18 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc25)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc25)
    %20 = cir.call @wcscpy(%17, %19) : (!cir.ptr<!s32i>, !cir.ptr<!s32i>) -> !cir.ptr<!s32i> extra(#fn_attr) loc(#loc26)
    %21 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc27)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc27)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc28)
    cir.br ^bb2 loc(#loc21)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc10)
  } loc(#loc87)
  cir.func private @_ZN45CWE121_Stack_Based_Buffer_Overflow__CWE135_6213goodG2BSourceERPv(!cir.ptr<!cir.ptr<!void>>) loc(#loc93)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc94)
  cir.func internal private @_ZN45CWE121_Stack_Based_Buffer_Overflow__CWE135_62L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc96)
    %1 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dest", init] {alignment = 8 : i64} loc(#loc97)
    %2 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc98)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
    cir.store %3, %2 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc99)
    cir.call @_ZN45CWE121_Stack_Based_Buffer_Overflow__CWE135_6213goodG2BSourceERPv(%2) : (!cir.ptr<!cir.ptr<!void>>) -> () loc(#loc43)
    cir.br ^bb1 loc(#loc100)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc46)
    %5 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc47)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc47)
    %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc46)
    cir.store %7, %0 : !u64i, !cir.ptr<!u64i> loc(#loc96)
    %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc38)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc38)
    %11 = cir.binop(add, %8, %10) : !u64i loc(#loc38)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc38)
    %14 = cir.binop(mul, %11, %13) : !u64i loc(#loc38)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc38)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc38)
    cir.store %16, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc97)
    %17 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc48)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc49)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc49)
    %20 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc50)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc50)
    %22 = cir.call @strcpy(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc48)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc51)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    cir.br ^bb2 loc(#loc45)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc34)
  } loc(#loc95)
  cir.func private @_ZN45CWE121_Stack_Based_Buffer_Overflow__CWE135_6213goodB2GSourceERPv(!cir.ptr<!cir.ptr<!void>>) loc(#loc101)
  cir.func private @wcslen(!cir.ptr<!s32i>) -> !u64i extra(#fn_attr) loc(#loc102)
  cir.func private @printWLine(!cir.ptr<!s32i>) loc(#loc103)
  cir.func internal private @_ZN45CWE121_Stack_Based_Buffer_Overflow__CWE135_62L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc105)
    %1 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dest", init] {alignment = 8 : i64} loc(#loc106)
    %2 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc107)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc67)
    cir.store %3, %2 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc108)
    cir.call @_ZN45CWE121_Stack_Based_Buffer_Overflow__CWE135_6213goodB2GSourceERPv(%2) : (!cir.ptr<!cir.ptr<!void>>) -> () loc(#loc69)
    cir.br ^bb1 loc(#loc109)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @wcslen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s32i>)>> loc(#loc72)
    %5 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc73)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc73)
    %7 = cir.call @wcslen(%6) : (!cir.ptr<!s32i>) -> !u64i extra(#fn_attr) loc(#loc72)
    cir.store %7, %0 : !u64i, !cir.ptr<!u64i> loc(#loc105)
    %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc64)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc64)
    %11 = cir.binop(add, %8, %10) : !u64i loc(#loc64)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc64)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc64)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc64)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc64)
    cir.store %15, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc106)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc74)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc74)
    %18 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc75)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc75)
    %20 = cir.call @wcscpy(%17, %19) : (!cir.ptr<!s32i>, !cir.ptr<!s32i>) -> !cir.ptr<!s32i> extra(#fn_attr) loc(#loc76)
    %21 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc77)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc77)
    cir.call @printWLine(%22) : (!cir.ptr<!s32i>) -> () loc(#loc78)
    cir.br ^bb2 loc(#loc71)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc60)
  } loc(#loc104)
  cir.func @_ZN45CWE121_Stack_Based_Buffer_Overflow__CWE135_624goodEv() extra(#fn_attr1) {
    cir.call @_ZN45CWE121_Stack_Based_Buffer_Overflow__CWE135_62L7goodG2BEv() : () -> () loc(#loc81)
    cir.call @_ZN45CWE121_Stack_Based_Buffer_Overflow__CWE135_62L7goodB2GEv() : () -> () loc(#loc82)
    cir.return loc(#loc80)
  } loc(#loc110)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":28:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":28:28)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("/usr/include/wchar.h":98:1)
#loc6 = loc("/usr/include/wchar.h":100:14)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":30:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":42:1)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":37:9)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":37:45)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":38:9)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":38:31)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":32:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":32:12)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":33:12)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":33:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":34:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":35:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":41:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":37:26)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":37:41)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":39:33)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":39:50)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":39:15)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":40:27)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":40:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":49:1)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":49:32)
#loc31 = loc("/usr/include/string.h":141:1)
#loc32 = loc("/usr/include/string.h":142:14)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":51:1)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":63:1)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":58:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":58:45)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":59:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":59:31)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":53:5)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":53:12)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":54:12)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":54:5)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":55:5)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":56:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":62:5)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":58:26)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":58:41)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":60:15)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":60:30)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":60:44)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":61:27)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":61:9)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":66:1)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":66:32)
#loc55 = loc("/usr/include/wchar.h":247:1)
#loc56 = loc("/usr/include/wchar.h":247:51)
#loc57 = loc("../../../testcasesupport/std_testcase_io.h":16:1)
#loc58 = loc("../../../testcasesupport/std_testcase_io.h":16:37)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":68:1)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":80:1)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":75:9)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":75:48)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":76:9)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":76:31)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":70:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":70:12)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":71:12)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":71:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":72:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":73:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":79:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":75:26)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":75:44)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":77:33)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":77:50)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":77:15)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":78:31)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":78:9)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":82:1)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":86:1)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":84:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62a.cpp":85:5)
#loc83 = loc(fused[#loc1, #loc2])
#loc84 = loc(fused[#loc3, #loc4])
#loc85 = loc(fused[#loc5, #loc6])
#loc86 = loc(fused[#loc7, #loc8])
#loc87 = loc(fused[#loc9, #loc10])
#loc88 = loc(fused[#loc11, #loc12])
#loc89 = loc(fused[#loc13, #loc14])
#loc90 = loc(fused[#loc15, #loc16])
#loc91 = loc(fused[#loc18, #loc17])
#loc92 = loc(fused[#loc20, #loc21])
#loc93 = loc(fused[#loc29, #loc30])
#loc94 = loc(fused[#loc31, #loc32])
#loc95 = loc(fused[#loc33, #loc34])
#loc96 = loc(fused[#loc35, #loc36])
#loc97 = loc(fused[#loc37, #loc38])
#loc98 = loc(fused[#loc39, #loc40])
#loc99 = loc(fused[#loc42, #loc41])
#loc100 = loc(fused[#loc44, #loc45])
#loc101 = loc(fused[#loc53, #loc54])
#loc102 = loc(fused[#loc55, #loc56])
#loc103 = loc(fused[#loc57, #loc58])
#loc104 = loc(fused[#loc59, #loc60])
#loc105 = loc(fused[#loc61, #loc62])
#loc106 = loc(fused[#loc63, #loc64])
#loc107 = loc(fused[#loc65, #loc66])
#loc108 = loc(fused[#loc68, #loc67])
#loc109 = loc(fused[#loc70, #loc71])
#loc110 = loc(fused[#loc79, #loc80])
