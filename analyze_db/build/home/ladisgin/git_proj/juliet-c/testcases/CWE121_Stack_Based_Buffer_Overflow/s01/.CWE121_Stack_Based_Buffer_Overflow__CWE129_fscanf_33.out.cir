!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":110:27)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":145:10)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":145:14)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":145:20)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":145:32)
#true = #cir.bool<true> : !cir.bool
#loc238 = loc(fused[#loc161, #loc162])
#loc239 = loc(fused[#loc163, #loc164])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc23_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc177)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc178)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printIntLine(!s32i) loc(#loc179)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc180)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc10)
  cir.func @_ZN52CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_333badEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc182)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc183)
    %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc184)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc185)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc186)
    cir.store %3, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc22)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc24)
    cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc187)
    %7 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc26)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc178)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc27)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %12 = cir.call @__isoc23_fscanf(%9, %11, %3) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc26)
    cir.br ^bb1 loc(#loc188)
  ^bb1:  // pred: ^bb0
    %13 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc14)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc14)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc182)
    cir.br ^bb2 loc(#loc189)
  ^bb2:  // pred: ^bb1
    %15 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc184)
    cir.store %15, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc184)
    cir.br ^bb3 loc(#loc190)
  ^bb3:  // pred: ^bb2
    %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc35)
    %18 = cir.cmp(ge, %16, %17) : !s32i, !cir.bool loc(#loc191)
    cir.brcond %18 ^bb4, ^bb11 loc(#loc192)
  ^bb4:  // pred: ^bb3
    %19 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc40)
    %21 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc41)
    %22 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc41)
    cir.store %19, %22 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    cir.br ^bb5 loc(#loc194)
  ^bb5:  // pred: ^bb4
    %23 = cir.const #cir.int<0> : !s32i loc(#loc44)
    cir.store %23, %1 : !s32i, !cir.ptr<!s32i> loc(#loc195)
    cir.br ^bb6 loc(#loc194)
  ^bb6:  // 2 preds: ^bb5, ^bb8
    %24 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc46)
    %25 = cir.const #cir.int<10> : !s32i loc(#loc47)
    %26 = cir.cmp(lt, %24, %25) : !s32i, !cir.bool loc(#loc196)
    cir.brcond %26 ^bb7, ^bb9 loc(#loc196)
  ^bb7:  // pred: ^bb6
    %27 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc48)
    %28 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc49)
    %29 = cir.ptr_stride(%28 : !cir.ptr<!s32i>, %27 : !s32i), !cir.ptr<!s32i> loc(#loc49)
    %30 = cir.load %29 : !cir.ptr<!s32i>, !s32i loc(#loc49)
    cir.call @printIntLine(%30) : (!s32i) -> () loc(#loc50)
    cir.br ^bb8 loc(#loc43)
  ^bb8:  // pred: ^bb7
    %31 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc51)
    %32 = cir.unary(inc, %31) : !s32i, !s32i loc(#loc52)
    cir.store %32, %1 : !s32i, !cir.ptr<!s32i> loc(#loc197)
    cir.br ^bb6 loc(#loc194)
  ^bb9:  // pred: ^bb6
    cir.br ^bb10 loc(#loc43)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12 loc(#loc37)
  ^bb11:  // pred: ^bb3
    %33 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc10)
    %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc10)
    cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    cir.br ^bb12 loc(#loc33)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc33)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc31)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc29)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc12)
  } loc(#loc181)
  cir.func internal private @_ZN52CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc199)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc200)
    %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc201)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc202)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc203)
    cir.store %3, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc65)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc66)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc67)
    cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc204)
    %7 = cir.const #cir.int<7> : !s32i loc(#loc69)
    cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc205)
    cir.br ^bb1 loc(#loc206)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc57)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc57)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc199)
    cir.br ^bb2 loc(#loc207)
  ^bb2:  // pred: ^bb1
    %10 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc201)
    cir.store %10, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc201)
    cir.br ^bb3 loc(#loc208)
  ^bb3:  // pred: ^bb2
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc77)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc78)
    %13 = cir.cmp(ge, %11, %12) : !s32i, !cir.bool loc(#loc209)
    cir.brcond %13 ^bb4, ^bb11 loc(#loc210)
  ^bb4:  // pred: ^bb3
    %14 = cir.const #cir.int<1> : !s32i loc(#loc82)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    %16 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc84)
    %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc84)
    cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc211)
    cir.br ^bb5 loc(#loc212)
  ^bb5:  // pred: ^bb4
    %18 = cir.const #cir.int<0> : !s32i loc(#loc87)
    cir.store %18, %1 : !s32i, !cir.ptr<!s32i> loc(#loc213)
    cir.br ^bb6 loc(#loc212)
  ^bb6:  // 2 preds: ^bb5, ^bb8
    %19 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc89)
    %20 = cir.const #cir.int<10> : !s32i loc(#loc90)
    %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc214)
    cir.brcond %21 ^bb7, ^bb9 loc(#loc214)
  ^bb7:  // pred: ^bb6
    %22 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    %23 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc92)
    %24 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %22 : !s32i), !cir.ptr<!s32i> loc(#loc92)
    %25 = cir.load %24 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    cir.call @printIntLine(%25) : (!s32i) -> () loc(#loc93)
    cir.br ^bb8 loc(#loc86)
  ^bb8:  // pred: ^bb7
    %26 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    %27 = cir.unary(inc, %26) : !s32i, !s32i loc(#loc95)
    cir.store %27, %1 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    cir.br ^bb6 loc(#loc212)
  ^bb9:  // pred: ^bb6
    cir.br ^bb10 loc(#loc86)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12 loc(#loc80)
  ^bb11:  // pred: ^bb3
    %28 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc96)
    %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc96)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    cir.br ^bb12 loc(#loc76)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc76)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc74)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc72)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc55)
  } loc(#loc198)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc98)
  cir.func internal private @_ZN52CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc217)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc218)
    %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc219)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc220)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc221)
    cir.store %3, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc110)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc112)
    cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc222)
    %7 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc114)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc178)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc115)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc116)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc116)
    %12 = cir.call @__isoc23_fscanf(%9, %11, %3) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc114)
    cir.br ^bb1 loc(#loc223)
  ^bb1:  // pred: ^bb0
    %13 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc102)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc102)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc217)
    cir.br ^bb2 loc(#loc224)
  ^bb2:  // pred: ^bb1
    %15 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc219)
    cir.store %15, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc219)
    cir.br ^bb3 loc(#loc225)
  ^bb3:  // pred: ^bb2
    %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc124)
    %18 = cir.cmp(ge, %16, %17) : !s32i, !cir.bool loc(#loc226)
    cir.brcond %18 ^bb4, ^bb9 loc(#loc125)
  ^bb4:  // pred: ^bb3
    %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    %20 = cir.const #cir.int<10> : !s32i loc(#loc127)
    %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc227)
    cir.brcond %21 ^bb5, ^bb6 loc(#loc125)
  ^bb5:  // pred: ^bb4
    %22 = cir.const #true loc(#loc125)
    cir.br ^bb7(%22 : !cir.bool) loc(#loc125)
  ^bb6:  // pred: ^bb4
    %23 = cir.const #false loc(#loc125)
    cir.br ^bb7(%23 : !cir.bool) loc(#loc125)
  ^bb7(%24: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":110:27)):  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc125)
  ^bb8:  // pred: ^bb7
    cir.br ^bb10(%24 : !cir.bool) loc(#loc125)
  ^bb9:  // pred: ^bb3
    %25 = cir.const #false loc(#loc125)
    cir.br ^bb10(%25 : !cir.bool) loc(#loc125)
  ^bb10(%26: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":110:27)):  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc125)
  ^bb11:  // pred: ^bb10
    cir.brcond %26 ^bb12, ^bb19 loc(#loc228)
  ^bb12:  // pred: ^bb11
    %27 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %28 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    %29 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc134)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %28 : !s32i), !cir.ptr<!s32i> loc(#loc134)
    cir.store %27, %30 : !s32i, !cir.ptr<!s32i> loc(#loc229)
    cir.br ^bb13 loc(#loc230)
  ^bb13:  // pred: ^bb12
    %31 = cir.const #cir.int<0> : !s32i loc(#loc137)
    cir.store %31, %1 : !s32i, !cir.ptr<!s32i> loc(#loc231)
    cir.br ^bb14 loc(#loc230)
  ^bb14:  // 2 preds: ^bb13, ^bb16
    %32 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc139)
    %33 = cir.const #cir.int<10> : !s32i loc(#loc140)
    %34 = cir.cmp(lt, %32, %33) : !s32i, !cir.bool loc(#loc232)
    cir.brcond %34 ^bb15, ^bb17 loc(#loc232)
  ^bb15:  // pred: ^bb14
    %35 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc141)
    %36 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc142)
    %37 = cir.ptr_stride(%36 : !cir.ptr<!s32i>, %35 : !s32i), !cir.ptr<!s32i> loc(#loc142)
    %38 = cir.load %37 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    cir.call @printIntLine(%38) : (!s32i) -> () loc(#loc143)
    cir.br ^bb16 loc(#loc136)
  ^bb16:  // pred: ^bb15
    %39 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    %40 = cir.unary(inc, %39) : !s32i, !s32i loc(#loc145)
    cir.store %40, %1 : !s32i, !cir.ptr<!s32i> loc(#loc233)
    cir.br ^bb14 loc(#loc230)
  ^bb17:  // pred: ^bb14
    cir.br ^bb18 loc(#loc136)
  ^bb18:  // pred: ^bb17
    cir.br ^bb20 loc(#loc130)
  ^bb19:  // pred: ^bb11
    %41 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc98)
    %42 = cir.cast(array_to_ptrdecay, %41 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc98)
    cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc146)
    cir.br ^bb20 loc(#loc122)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc122)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc120)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc118)
  ^bb23:  // pred: ^bb22
    cir.return loc(#loc100)
  } loc(#loc216)
  cir.func @_ZN52CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_334goodEv() extra(#fn_attr) {
    cir.call @_ZN52CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33L7goodG2BEv() : () -> () loc(#loc149)
    cir.call @_ZN52CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33L7goodB2GEv() : () -> () loc(#loc150)
    cir.return loc(#loc148)
  } loc(#loc234)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc235)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc236)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc155)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc156)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc157)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc158)
  cir.func @main(%arg0: !s32i loc(fused[#loc161, #loc162]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc163, #loc164])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc238)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc239)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc160)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc165)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc165)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc166)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc167)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc167)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc168)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc155)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc155)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc169)
    cir.call @_ZN52CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_334goodEv() : () -> () loc(#loc170)
    %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc156)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc156)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc171)
    %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc157)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc157)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc172)
    cir.call @_ZN52CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_333badEv() : () -> () loc(#loc173)
    %12 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc158)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc158)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc174)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc175)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc240)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc240)
    cir.return %15 : !s32i loc(#loc240)
  } loc(#loc237)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":442:1)
#loc2 = loc("/usr/include/stdio.h":444:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":32:19)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":51:27)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":25:1)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":55:1)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":34:9)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":34:20)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":36:13)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":36:17)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":37:13)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":37:34)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":27:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":27:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":28:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":28:20)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":30:13)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":30:12)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":30:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":32:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":32:12)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":33:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":54:5)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":35:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":53:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":40:13)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":52:13)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":40:17)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":40:25)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":41:13)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":48:13)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":50:13)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":42:32)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":42:24)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":42:17)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":44:17)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":47:17)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":44:25)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":44:21)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":44:28)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":44:32)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":46:41)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":46:34)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":46:21)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":44:37)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":44:36)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":51:17)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":62:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":93:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":72:9)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":72:20)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":74:13)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":74:17)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":75:13)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":75:34)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":64:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":64:9)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":65:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":65:20)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":67:13)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":67:12)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":67:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":70:12)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":70:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":71:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":92:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":73:9)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":91:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":78:13)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":90:13)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":78:17)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":78:25)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":79:13)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":86:13)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":88:13)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":80:32)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":80:24)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":80:17)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":82:17)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":85:17)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":82:25)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":82:21)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":82:28)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":82:32)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":84:41)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":84:34)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":84:21)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":82:37)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":82:36)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":89:27)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":89:17)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":121:27)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":96:1)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":125:1)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":105:9)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":105:20)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":107:13)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":107:17)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":108:13)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":108:34)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":98:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":98:9)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":99:5)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":99:20)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":101:13)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":101:12)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":101:5)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":103:5)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":103:12)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":103:19)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":104:5)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":124:5)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":106:9)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":123:9)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":110:13)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":122:13)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":110:17)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":110:25)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":110:30)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":110:38)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":110:40)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":111:13)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":118:13)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":120:13)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":112:32)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":112:24)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":112:17)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":114:17)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":117:17)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":114:25)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":114:21)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":114:28)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":114:32)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":116:41)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":116:34)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":116:21)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":114:37)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":114:36)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":121:17)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":127:1)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":131:1)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":129:5)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":130:5)
#loc151 = loc("/usr/include/stdlib.h":575:1)
#loc152 = loc("/usr/include/stdlib.h":575:41)
#loc153 = loc("/usr/include/time.h":76:1)
#loc154 = loc("/usr/include/time.h":76:38)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":150:15)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":152:15)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":155:15)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":157:15)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":145:1)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":160:1)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":146:1)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":148:27)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":148:22)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":148:5)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":150:5)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":151:5)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":152:5)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":155:5)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":156:5)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":157:5)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":159:12)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_33.cpp":159:5)
#loc177 = loc(fused[#loc1, #loc2])
#loc178 = loc(fused[#loc3, #loc4])
#loc179 = loc(fused[#loc6, #loc7])
#loc180 = loc(fused[#loc8, #loc9])
#loc181 = loc(fused[#loc11, #loc12])
#loc182 = loc(fused[#loc13, #loc14])
#loc183 = loc(fused[#loc15, #loc16])
#loc184 = loc(fused[#loc17, #loc18])
#loc185 = loc(fused[#loc19, #loc20])
#loc186 = loc(fused[#loc21, #loc22])
#loc187 = loc(fused[#loc25, #loc23])
#loc188 = loc(fused[#loc28, #loc29])
#loc189 = loc(fused[#loc30, #loc31])
#loc190 = loc(fused[#loc32, #loc33])
#loc191 = loc(fused[#loc34, #loc35])
#loc192 = loc(fused[#loc36, #loc37, #loc38, #loc33])
#loc193 = loc(fused[#loc41, #loc39])
#loc194 = loc(fused[#loc42, #loc43])
#loc195 = loc(fused[#loc45, #loc44])
#loc196 = loc(fused[#loc46, #loc47])
#loc197 = loc(fused[#loc52, #loc51])
#loc198 = loc(fused[#loc54, #loc55])
#loc199 = loc(fused[#loc56, #loc57])
#loc200 = loc(fused[#loc58, #loc59])
#loc201 = loc(fused[#loc60, #loc61])
#loc202 = loc(fused[#loc62, #loc63])
#loc203 = loc(fused[#loc64, #loc65])
#loc204 = loc(fused[#loc68, #loc66])
#loc205 = loc(fused[#loc70, #loc69])
#loc206 = loc(fused[#loc71, #loc72])
#loc207 = loc(fused[#loc73, #loc74])
#loc208 = loc(fused[#loc75, #loc76])
#loc209 = loc(fused[#loc77, #loc78])
#loc210 = loc(fused[#loc79, #loc80, #loc81, #loc76])
#loc211 = loc(fused[#loc84, #loc82])
#loc212 = loc(fused[#loc85, #loc86])
#loc213 = loc(fused[#loc88, #loc87])
#loc214 = loc(fused[#loc89, #loc90])
#loc215 = loc(fused[#loc95, #loc94])
#loc216 = loc(fused[#loc99, #loc100])
#loc217 = loc(fused[#loc101, #loc102])
#loc218 = loc(fused[#loc103, #loc104])
#loc219 = loc(fused[#loc105, #loc106])
#loc220 = loc(fused[#loc107, #loc108])
#loc221 = loc(fused[#loc109, #loc110])
#loc222 = loc(fused[#loc113, #loc111])
#loc223 = loc(fused[#loc117, #loc118])
#loc224 = loc(fused[#loc119, #loc120])
#loc225 = loc(fused[#loc121, #loc122])
#loc226 = loc(fused[#loc123, #loc124])
#loc227 = loc(fused[#loc126, #loc128])
#loc228 = loc(fused[#loc129, #loc130, #loc131, #loc122])
#loc229 = loc(fused[#loc134, #loc132])
#loc230 = loc(fused[#loc135, #loc136])
#loc231 = loc(fused[#loc138, #loc137])
#loc232 = loc(fused[#loc139, #loc140])
#loc233 = loc(fused[#loc145, #loc144])
#loc234 = loc(fused[#loc147, #loc148])
#loc235 = loc(fused[#loc151, #loc152])
#loc236 = loc(fused[#loc153, #loc154])
#loc237 = loc(fused[#loc159, #loc160])
#loc240 = loc(fused[#loc176, #loc175])
