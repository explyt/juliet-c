!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__stdThreadLock = !cir.struct<struct "_stdThreadLock" incomplete>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc61 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":128:10)
#loc62 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":128:14)
#loc63 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":128:20)
#loc64 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":128:32)
#loc167 = loc(fused[#loc61, #loc62])
#loc168 = loc(fused[#loc63, #loc64])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE832_Unlock_of_Resource_That_is_Not_Locked/CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @good2.goodLock = #cir.ptr<null> : !cir.ptr<!ty__stdThreadLock> {alignment = 8 : i64} loc(#loc1)
  cir.global "private" internal dsolocal @good1.goodLock = #cir.ptr<null> : !cir.ptr<!ty__stdThreadLock> {alignment = 8 : i64} loc(#loc2)
  cir.global "private" internal dsolocal @CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15_bad.badLock = #cir.ptr<null> : !cir.ptr<!ty__stdThreadLock> {alignment = 8 : i64} loc(#loc3)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc151)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Creating lock...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc6)
  cir.func private @stdThreadLockCreate(!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc152)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Could not create lock\00" : !cir.array<!s8i x 22>> : !cir.array<!s8i x 22> {alignment = 1 : i64} loc(#loc9)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc153)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Releasing lock...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc12)
  cir.func private @stdThreadLockRelease(!cir.ptr<!ty__stdThreadLock>) loc(#loc154)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Destroying lock...\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc15)
  cir.func private @stdThreadLockDestroy(!cir.ptr<!ty__stdThreadLock>) loc(#loc155)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc18)
  cir.func no_proto @CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc23)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.get_global @CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15_bad.badLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc3)
            %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc6)
            %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc6)
            cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc27)
            cir.scope {
              %10 = cir.call @stdThreadLockCreate(%1) : (!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc30)
              %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc30)
              %12 = cir.unary(not, %11) : !cir.bool, !cir.bool loc(#loc30)
              cir.if %12 {
                %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 22>> loc(#loc9)
                %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 22>>), !cir.ptr<!s8i> loc(#loc9)
                cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc32)
                %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc33)
                %16 = cir.const #cir.int<1> : !s32i loc(#loc34)
                cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc33)
              } loc(#loc160)
            } loc(#loc159)
            %4 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc12)
            %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc12)
            cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc35)
            %6 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc36)
            cir.call @stdThreadLockRelease(%6) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc37)
            %7 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc15)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc15)
            cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc38)
            %9 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc39)
            cir.call @stdThreadLockDestroy(%9) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc40)
          } loc(#loc158)
          cir.break loc(#loc41)
        } loc(#loc24)
        cir.case(default, []) {
          %1 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc18)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc18)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc43)
          cir.break loc(#loc44)
        } loc(#loc42)
        cir.yield loc(#loc21)
      } loc(#loc21)
    } loc(#loc157)
    cir.return loc(#loc20)
  } loc(#loc156)
  cir.func no_proto @CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc162)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc163)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    cir.return loc(#loc46)
  } loc(#loc161)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc164)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc165)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.8" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc58)
  cir.func @main(%arg0: !s32i loc(fused[#loc61, #loc62]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc63, #loc64])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc167)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc168)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc60)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc65)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc65)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc66)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc67)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc67)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc68)
    %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc55)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %8 = cir.get_global @CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc169)
    cir.call @CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15_good() : () -> () loc(#loc70)
    %9 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc56)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %11 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc57)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %13 = cir.get_global @CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc170)
    cir.call @CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15_bad() : () -> () loc(#loc74)
    %14 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc58)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc77)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc171)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc171)
    cir.return %17 : !s32i loc(#loc171)
  } loc(#loc166)
  cir.global "private" constant cir_private dsolocal @".str.9" = #cir.const_array<"Acquiring lock...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc79)
  cir.func private @stdThreadLockAcquire(!cir.ptr<!ty__stdThreadLock>) loc(#loc172)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc86)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %1 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc88)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc88)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc89)
          cir.break loc(#loc90)
        } loc(#loc87)
        cir.case(default, []) {
          cir.scope {
            %1 = cir.get_global @good1.goodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc2)
            %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc94)
            %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc94)
            cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc95)
            cir.scope {
              %13 = cir.call @stdThreadLockCreate(%1) : (!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc98)
              %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc98)
              %15 = cir.unary(not, %14) : !cir.bool, !cir.bool loc(#loc98)
              cir.if %15 {
                %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 22>> loc(#loc100)
                %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 22>>), !cir.ptr<!s8i> loc(#loc100)
                cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc101)
                %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc102)
                %19 = cir.const #cir.int<1> : !s32i loc(#loc103)
                cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc102)
              } loc(#loc177)
            } loc(#loc176)
            %4 = cir.get_global @".str.9" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc79)
            %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc79)
            cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc104)
            %6 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc105)
            cir.call @stdThreadLockAcquire(%6) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc106)
            %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc107)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc107)
            cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc108)
            %9 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc109)
            cir.call @stdThreadLockRelease(%9) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc110)
            %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc111)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc111)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc112)
            %12 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc113)
            cir.call @stdThreadLockDestroy(%12) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc114)
          } loc(#loc175)
          cir.break loc(#loc115)
        } loc(#loc91)
        cir.yield loc(#loc84)
      } loc(#loc84)
    } loc(#loc174)
    cir.return loc(#loc83)
  } loc(#loc173)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc120)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.get_global @good2.goodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc1)
            %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc124)
            %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc124)
            cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc125)
            cir.scope {
              %13 = cir.call @stdThreadLockCreate(%1) : (!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc128)
              %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc128)
              %15 = cir.unary(not, %14) : !cir.bool, !cir.bool loc(#loc128)
              cir.if %15 {
                %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 22>> loc(#loc130)
                %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 22>>), !cir.ptr<!s8i> loc(#loc130)
                cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc131)
                %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc132)
                %19 = cir.const #cir.int<1> : !s32i loc(#loc133)
                cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc132)
              } loc(#loc182)
            } loc(#loc181)
            %4 = cir.get_global @".str.9" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc134)
            %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc134)
            cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc135)
            %6 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc136)
            cir.call @stdThreadLockAcquire(%6) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc137)
            %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc138)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc138)
            cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc139)
            %9 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc140)
            cir.call @stdThreadLockRelease(%9) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc141)
            %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc142)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc142)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc143)
            %12 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc144)
            cir.call @stdThreadLockDestroy(%12) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc145)
          } loc(#loc180)
          cir.break loc(#loc146)
        } loc(#loc121)
        cir.case(default, []) {
          %1 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc148)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc148)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc149)
          cir.break loc(#loc150)
        } loc(#loc147)
        cir.yield loc(#loc118)
      } loc(#loc118)
    } loc(#loc179)
    cir.return loc(#loc117)
  } loc(#loc178)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE832_Unlock_of_Resource_That_is_Not_Locked/CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":0:0)
#loc1 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":90:30)
#loc2 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":64:30)
#loc3 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":28:30)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":29:19)
#loc7 = loc("../../testcasesupport/std_thread.h":18:1)
#loc8 = loc("../../testcasesupport/std_thread.h":18:44)
#loc9 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":32:23)
#loc10 = loc("/usr/include/stdlib.h":756:1)
#loc11 = loc("/usr/include/stdlib.h":756:70)
#loc12 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":36:19)
#loc13 = loc("../../testcasesupport/std_thread.h":20:1)
#loc14 = loc("../../testcasesupport/std_thread.h":20:45)
#loc15 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":38:19)
#loc16 = loc("../../testcasesupport/std_thread.h":21:1)
#loc17 = loc("../../testcasesupport/std_thread.h":21:45)
#loc18 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":44:19)
#loc19 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":22:1)
#loc20 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":47:1)
#loc21 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":24:5)
#loc22 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":46:5)
#loc23 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":24:12)
#loc24 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":26:5)
#loc25 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":27:5)
#loc26 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":40:5)
#loc27 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":29:9)
#loc28 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":30:9)
#loc29 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":34:9)
#loc30 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":30:14)
#loc31 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":31:9)
#loc32 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":32:13)
#loc33 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":33:13)
#loc34 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":33:18)
#loc35 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":36:9)
#loc36 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":37:30)
#loc37 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":37:9)
#loc38 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":38:9)
#loc39 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":39:30)
#loc40 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":39:9)
#loc41 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":41:5)
#loc42 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":42:5)
#loc43 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":44:9)
#loc44 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":45:9)
#loc45 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":113:1)
#loc46 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":117:1)
#loc47 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":115:5)
#loc48 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":115:11)
#loc49 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":116:5)
#loc50 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":116:11)
#loc51 = loc("/usr/include/stdlib.h":575:1)
#loc52 = loc("/usr/include/stdlib.h":575:41)
#loc53 = loc("/usr/include/time.h":76:1)
#loc54 = loc("/usr/include/time.h":76:38)
#loc55 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":133:15)
#loc56 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":135:15)
#loc57 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":138:15)
#loc58 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":140:15)
#loc59 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":128:1)
#loc60 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":143:1)
#loc65 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":129:1)
#loc66 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":131:27)
#loc67 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":131:22)
#loc68 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":131:5)
#loc69 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":133:5)
#loc70 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":134:5)
#loc71 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":134:65)
#loc72 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":135:5)
#loc73 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":138:5)
#loc74 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":139:5)
#loc75 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":139:64)
#loc76 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":140:5)
#loc77 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":142:12)
#loc78 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":142:5)
#loc79 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":72:19)
#loc80 = loc("../../testcasesupport/std_thread.h":19:1)
#loc81 = loc("../../testcasesupport/std_thread.h":19:45)
#loc82 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":54:1)
#loc83 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":81:1)
#loc84 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":56:5)
#loc85 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":80:5)
#loc86 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":56:12)
#loc87 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":58:5)
#loc88 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":60:19)
#loc89 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":60:9)
#loc90 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":61:9)
#loc91 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":62:5)
#loc92 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":63:5)
#loc93 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":78:5)
#loc94 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":65:19)
#loc95 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":65:9)
#loc96 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":66:9)
#loc97 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":70:9)
#loc98 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":66:14)
#loc99 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":67:9)
#loc100 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":68:23)
#loc101 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":68:13)
#loc102 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":69:13)
#loc103 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":69:18)
#loc104 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":72:9)
#loc105 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":73:30)
#loc106 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":73:9)
#loc107 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":74:19)
#loc108 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":74:9)
#loc109 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":75:30)
#loc110 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":75:9)
#loc111 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":76:19)
#loc112 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":76:9)
#loc113 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":77:30)
#loc114 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":77:9)
#loc115 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":79:5)
#loc116 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":84:1)
#loc117 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":111:1)
#loc118 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":86:5)
#loc119 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":110:5)
#loc120 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":86:12)
#loc121 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":88:5)
#loc122 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":89:5)
#loc123 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":104:5)
#loc124 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":91:19)
#loc125 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":91:9)
#loc126 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":92:9)
#loc127 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":96:9)
#loc128 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":92:14)
#loc129 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":93:9)
#loc130 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":94:23)
#loc131 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":94:13)
#loc132 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":95:13)
#loc133 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":95:18)
#loc134 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":98:19)
#loc135 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":98:9)
#loc136 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":99:30)
#loc137 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":99:9)
#loc138 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":100:19)
#loc139 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":100:9)
#loc140 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":101:30)
#loc141 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":101:9)
#loc142 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":102:19)
#loc143 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":102:9)
#loc144 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":103:30)
#loc145 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":103:9)
#loc146 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":105:5)
#loc147 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":106:5)
#loc148 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":108:19)
#loc149 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":108:9)
#loc150 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_15.c":109:9)
#loc151 = loc(fused[#loc4, #loc5])
#loc152 = loc(fused[#loc7, #loc8])
#loc153 = loc(fused[#loc10, #loc11])
#loc154 = loc(fused[#loc13, #loc14])
#loc155 = loc(fused[#loc16, #loc17])
#loc156 = loc(fused[#loc19, #loc20])
#loc157 = loc(fused[#loc21, #loc22])
#loc158 = loc(fused[#loc25, #loc26])
#loc159 = loc(fused[#loc28, #loc29])
#loc160 = loc(fused[#loc31, #loc29])
#loc161 = loc(fused[#loc45, #loc46])
#loc162 = loc(fused[#loc47, #loc48])
#loc163 = loc(fused[#loc49, #loc50])
#loc164 = loc(fused[#loc51, #loc52])
#loc165 = loc(fused[#loc53, #loc54])
#loc166 = loc(fused[#loc59, #loc60])
#loc169 = loc(fused[#loc70, #loc71])
#loc170 = loc(fused[#loc74, #loc75])
#loc171 = loc(fused[#loc78, #loc77])
#loc172 = loc(fused[#loc80, #loc81])
#loc173 = loc(fused[#loc82, #loc83])
#loc174 = loc(fused[#loc84, #loc85])
#loc175 = loc(fused[#loc92, #loc93])
#loc176 = loc(fused[#loc96, #loc97])
#loc177 = loc(fused[#loc99, #loc97])
#loc178 = loc(fused[#loc116, #loc117])
#loc179 = loc(fused[#loc118, #loc119])
#loc180 = loc(fused[#loc122, #loc123])
#loc181 = loc(fused[#loc126, #loc127])
#loc182 = loc(fused[#loc129, #loc127])
