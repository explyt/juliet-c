!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc7 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":23:58)
#loc8 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":23:65)
#loc88 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":60:62)
#loc89 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":60:69)
#loc174 = loc(fused[#loc7, #loc8])
#loc199 = loc(fused[#loc88, #loc89])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_loop_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc171)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc172)
  cir.func @CWE126_Buffer_Overread__char_alloca_loop_41_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc175)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc176)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc177)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc174)
    cir.store %arg0, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc14)
    cir.br ^bb1 loc(#loc178)
  ^bb1:  // pred: ^bb0
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc17)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc17)
    %6 = cir.const #cir.int<67> : !s32i loc(#loc18)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc19)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc19)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc19)
    cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc179)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc23)
    %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc23)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc24)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc24)
    %16 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc26)
    %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc26)
    cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc180)
    %18 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc27)
    %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc28)
    %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc27)
    cir.store %20, %1 : !u64i, !cir.ptr<!u64i> loc(#loc181)
    cir.br ^bb2 loc(#loc182)
  ^bb2:  // pred: ^bb1
    %21 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc33)
    cir.store %22, %0 : !u64i, !cir.ptr<!u64i> loc(#loc183)
    cir.br ^bb3 loc(#loc182)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %23 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc35)
    %24 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc36)
    %25 = cir.cmp(lt, %23, %24) : !u64i, !cir.bool loc(#loc184)
    cir.brcond %25 ^bb4, ^bb8 loc(#loc37)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc185)
  ^bb5:  // pred: ^bb4
    %26 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
    %27 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc40)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %27 : !u64i), !cir.ptr<!s8i> loc(#loc41)
    %29 = cir.load %28 : !cir.ptr<!s8i>, !s8i loc(#loc39)
    %30 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc42)
    %31 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc43)
    %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !u64i), !cir.ptr<!s8i> loc(#loc43)
    cir.store %29, %32 : !s8i, !cir.ptr<!s8i> loc(#loc186)
    cir.br ^bb6 loc(#loc32)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc32)
  ^bb7:  // pred: ^bb6
    %33 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc44)
    %34 = cir.unary(inc, %33) : !u64i, !u64i loc(#loc45)
    cir.store %34, %0 : !u64i, !cir.ptr<!u64i> loc(#loc187)
    cir.br ^bb3 loc(#loc182)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc32)
  ^bb9:  // pred: ^bb8
    %35 = cir.const #cir.int<0> : !s32i loc(#loc46)
    %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc46)
    %37 = cir.const #cir.int<100> : !s32i loc(#loc47)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %39 = cir.binop(sub, %37, %38) nsw : !s32i loc(#loc47)
    %40 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc49)
    %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !s32i), !cir.ptr<!s8i> loc(#loc49)
    cir.store %36, %41 : !s8i, !cir.ptr<!s8i> loc(#loc188)
    %42 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    cir.br ^bb10 loc(#loc16)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc6)
  } loc(#loc173)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_loop_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc190)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc191)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc57)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc57)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc57)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc57)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc57)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc192)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc57)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc57)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc191)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc59)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc59)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc59)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc59)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc59)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc59)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc59)
    cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc192)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc60)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc61)
    %20 = cir.const #cir.int<50> : !s32i loc(#loc62)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc63)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc62)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc62)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc193)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc66)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc66)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
    %27 = cir.const #cir.int<50> : !s32i loc(#loc68)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc68)
    %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc70)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc194)
    %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc71)
    %33 = cir.const #cir.int<65> : !s32i loc(#loc72)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc73)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc74)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc73)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc73)
    cir.libc.memset %37 bytes from %32 set to %33 : !cir.ptr<!void>, !s32i, !u64i loc(#loc195)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc77)
    %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc77)
    %40 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
    %41 = cir.const #cir.int<100> : !s32i loc(#loc79)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc80)
    %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc79)
    %44 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc81)
    cir.store %39, %44 : !s8i, !cir.ptr<!s8i> loc(#loc196)
    %45 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
    cir.store %45, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc197)
    %46 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
    cir.call @CWE126_Buffer_Overread__char_alloca_loop_41_badSink(%46) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    cir.return loc(#loc53)
  } loc(#loc189)
  cir.func @CWE126_Buffer_Overread__char_alloca_loop_41_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc88, #loc89])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc200)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc201)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc202)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc199)
    cir.store %arg0, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc95)
    cir.br ^bb1 loc(#loc203)
  ^bb1:  // pred: ^bb0
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc98)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc98)
    %6 = cir.const #cir.int<67> : !s32i loc(#loc99)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc100)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc101)
    %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc100)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc100)
    cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc204)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc104)
    %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc104)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc105)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc105)
    %16 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc107)
    %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc107)
    cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc205)
    %18 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc108)
    %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc109)
    %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc108)
    cir.store %20, %1 : !u64i, !cir.ptr<!u64i> loc(#loc206)
    cir.br ^bb2 loc(#loc207)
  ^bb2:  // pred: ^bb1
    %21 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc114)
    cir.store %22, %0 : !u64i, !cir.ptr<!u64i> loc(#loc208)
    cir.br ^bb3 loc(#loc207)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %23 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc116)
    %24 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc117)
    %25 = cir.cmp(lt, %23, %24) : !u64i, !cir.bool loc(#loc209)
    cir.brcond %25 ^bb4, ^bb8 loc(#loc118)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc210)
  ^bb5:  // pred: ^bb4
    %26 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
    %27 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc121)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %27 : !u64i), !cir.ptr<!s8i> loc(#loc122)
    %29 = cir.load %28 : !cir.ptr<!s8i>, !s8i loc(#loc120)
    %30 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc123)
    %31 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc124)
    %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !u64i), !cir.ptr<!s8i> loc(#loc124)
    cir.store %29, %32 : !s8i, !cir.ptr<!s8i> loc(#loc211)
    cir.br ^bb6 loc(#loc113)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc113)
  ^bb7:  // pred: ^bb6
    %33 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc125)
    %34 = cir.unary(inc, %33) : !u64i, !u64i loc(#loc126)
    cir.store %34, %0 : !u64i, !cir.ptr<!u64i> loc(#loc212)
    cir.br ^bb3 loc(#loc207)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc113)
  ^bb9:  // pred: ^bb8
    %35 = cir.const #cir.int<0> : !s32i loc(#loc127)
    %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc127)
    %37 = cir.const #cir.int<100> : !s32i loc(#loc128)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc129)
    %39 = cir.binop(sub, %37, %38) nsw : !s32i loc(#loc128)
    %40 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc130)
    %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !s32i), !cir.ptr<!s8i> loc(#loc130)
    cir.store %36, %41 : !s8i, !cir.ptr<!s8i> loc(#loc213)
    %42 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc131)
    cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc132)
    cir.br ^bb10 loc(#loc97)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc87)
  } loc(#loc198)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_loop_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc215)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc135)
    cir.return loc(#loc134)
  } loc(#loc214)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc217)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc218)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc142)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc142)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc142)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc142)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc142)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc219)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc142)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc142)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc218)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc144)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc144)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc144)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc144)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc144)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc144)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc144)
    cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc219)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc145)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc146)
    %20 = cir.const #cir.int<50> : !s32i loc(#loc147)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc148)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc147)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc147)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc220)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc151)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc151)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
    %27 = cir.const #cir.int<50> : !s32i loc(#loc153)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc154)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc153)
    %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc155)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc221)
    %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc156)
    %33 = cir.const #cir.int<65> : !s32i loc(#loc157)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc158)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc159)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc158)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc158)
    cir.libc.memset %37 bytes from %32 set to %33 : !cir.ptr<!void>, !s32i, !u64i loc(#loc222)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc162)
    %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc162)
    %40 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
    %41 = cir.const #cir.int<100> : !s32i loc(#loc164)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc165)
    %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc164)
    %44 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc166)
    cir.store %39, %44 : !s8i, !cir.ptr<!s8i> loc(#loc223)
    %45 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
    cir.store %45, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc224)
    %46 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
    cir.call @CWE126_Buffer_Overread__char_alloca_loop_41_goodG2BSink(%46) : (!cir.ptr<!s8i>) -> () loc(#loc170)
    cir.return loc(#loc138)
  } loc(#loc216)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_loop_41.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":23:1)
#loc6 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":40:1)
#loc9 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":26:9)
#loc10 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":26:16)
#loc11 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":26:19)
#loc12 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":27:9)
#loc13 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":27:22)
#loc14 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":24:1)
#loc15 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":25:5)
#loc16 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":39:5)
#loc17 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":28:16)
#loc18 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":28:22)
#loc19 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":28:27)
#loc20 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":28:31)
#loc21 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":28:9)
#loc22 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":28:32)
#loc23 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":29:23)
#loc24 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":29:14)
#loc25 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":29:18)
#loc26 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":29:9)
#loc27 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":30:19)
#loc28 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":30:26)
#loc29 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":30:9)
#loc30 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":30:30)
#loc31 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":33:9)
#loc32 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":36:9)
#loc33 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":33:18)
#loc34 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":33:14)
#loc35 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":33:21)
#loc36 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":33:25)
#loc37 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":33:23)
#loc38 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":34:9)
#loc39 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":35:23)
#loc40 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":35:28)
#loc41 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":35:29)
#loc42 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":35:18)
#loc43 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":35:13)
#loc44 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":33:35)
#loc45 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":33:34)
#loc46 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":37:23)
#loc47 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":37:14)
#loc48 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":37:18)
#loc49 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":37:9)
#loc50 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":38:19)
#loc51 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":38:9)
#loc52 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":42:1)
#loc53 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":54:1)
#loc54 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":44:5)
#loc55 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":44:12)
#loc56 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":45:5)
#loc57 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":45:36)
#loc58 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":46:5)
#loc59 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":46:37)
#loc60 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":47:12)
#loc61 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":47:27)
#loc62 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":47:32)
#loc63 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":47:35)
#loc64 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":47:5)
#loc65 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":47:36)
#loc66 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":48:27)
#loc67 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":48:5)
#loc68 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":48:19)
#loc69 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":48:22)
#loc70 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":48:23)
#loc71 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":49:12)
#loc72 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":49:28)
#loc73 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":49:33)
#loc74 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":49:37)
#loc75 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":49:5)
#loc76 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":49:38)
#loc77 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":50:29)
#loc78 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":50:5)
#loc79 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":50:20)
#loc80 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":50:24)
#loc81 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":50:25)
#loc82 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":52:12)
#loc83 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":52:5)
#loc84 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":53:57)
#loc85 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":53:5)
#loc86 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":60:1)
#loc87 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":77:1)
#loc90 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":63:9)
#loc91 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":63:16)
#loc92 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":63:19)
#loc93 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":64:9)
#loc94 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":64:22)
#loc95 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":61:1)
#loc96 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":62:5)
#loc97 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":76:5)
#loc98 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":65:16)
#loc99 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":65:22)
#loc100 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":65:27)
#loc101 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":65:31)
#loc102 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":65:9)
#loc103 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":65:32)
#loc104 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":66:23)
#loc105 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":66:14)
#loc106 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":66:18)
#loc107 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":66:9)
#loc108 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":67:19)
#loc109 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":67:26)
#loc110 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":67:9)
#loc111 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":67:30)
#loc112 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":70:9)
#loc113 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":73:9)
#loc114 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":70:18)
#loc115 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":70:14)
#loc116 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":70:21)
#loc117 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":70:25)
#loc118 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":70:23)
#loc119 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":71:9)
#loc120 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":72:23)
#loc121 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":72:28)
#loc122 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":72:29)
#loc123 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":72:18)
#loc124 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":72:13)
#loc125 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":70:35)
#loc126 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":70:34)
#loc127 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":74:23)
#loc128 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":74:14)
#loc129 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":74:18)
#loc130 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":74:9)
#loc131 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":75:19)
#loc132 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":75:9)
#loc133 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":94:1)
#loc134 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":97:1)
#loc135 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":96:5)
#loc136 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":96:13)
#loc137 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":80:1)
#loc138 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":92:1)
#loc139 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":82:5)
#loc140 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":82:12)
#loc141 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":83:5)
#loc142 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":83:36)
#loc143 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":84:5)
#loc144 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":84:37)
#loc145 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":85:12)
#loc146 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":85:27)
#loc147 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":85:32)
#loc148 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":85:35)
#loc149 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":85:5)
#loc150 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":85:36)
#loc151 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":86:27)
#loc152 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":86:5)
#loc153 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":86:19)
#loc154 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":86:22)
#loc155 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":86:23)
#loc156 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":87:12)
#loc157 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":87:28)
#loc158 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":87:33)
#loc159 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":87:37)
#loc160 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":87:5)
#loc161 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":87:38)
#loc162 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":88:29)
#loc163 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":88:5)
#loc164 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":88:20)
#loc165 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":88:24)
#loc166 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":88:25)
#loc167 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":90:12)
#loc168 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":90:5)
#loc169 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":91:61)
#loc170 = loc("CWE126_Buffer_Overread__char_alloca_loop_41.c":91:5)
#loc171 = loc(fused[#loc1, #loc2])
#loc172 = loc(fused[#loc3, #loc4])
#loc173 = loc(fused[#loc5, #loc6])
#loc175 = loc(fused[#loc9, #loc10])
#loc176 = loc(fused[#loc9, #loc11])
#loc177 = loc(fused[#loc12, #loc13])
#loc178 = loc(fused[#loc15, #loc16])
#loc179 = loc(fused[#loc21, #loc22])
#loc180 = loc(fused[#loc26, #loc23])
#loc181 = loc(fused[#loc29, #loc30])
#loc182 = loc(fused[#loc31, #loc32])
#loc183 = loc(fused[#loc34, #loc33])
#loc184 = loc(fused[#loc35, #loc36])
#loc185 = loc(fused[#loc38, #loc32])
#loc186 = loc(fused[#loc43, #loc41])
#loc187 = loc(fused[#loc45, #loc44])
#loc188 = loc(fused[#loc49, #loc46])
#loc189 = loc(fused[#loc52, #loc53])
#loc190 = loc(fused[#loc54, #loc55])
#loc191 = loc(fused[#loc56, #loc57])
#loc192 = loc(fused[#loc58, #loc59])
#loc193 = loc(fused[#loc64, #loc65])
#loc194 = loc(fused[#loc67, #loc66])
#loc195 = loc(fused[#loc75, #loc76])
#loc196 = loc(fused[#loc78, #loc77])
#loc197 = loc(fused[#loc83, #loc82])
#loc198 = loc(fused[#loc86, #loc87])
#loc200 = loc(fused[#loc90, #loc91])
#loc201 = loc(fused[#loc90, #loc92])
#loc202 = loc(fused[#loc93, #loc94])
#loc203 = loc(fused[#loc96, #loc97])
#loc204 = loc(fused[#loc102, #loc103])
#loc205 = loc(fused[#loc107, #loc104])
#loc206 = loc(fused[#loc110, #loc111])
#loc207 = loc(fused[#loc112, #loc113])
#loc208 = loc(fused[#loc115, #loc114])
#loc209 = loc(fused[#loc116, #loc117])
#loc210 = loc(fused[#loc119, #loc113])
#loc211 = loc(fused[#loc124, #loc122])
#loc212 = loc(fused[#loc126, #loc125])
#loc213 = loc(fused[#loc130, #loc127])
#loc214 = loc(fused[#loc133, #loc134])
#loc215 = loc(fused[#loc135, #loc136])
#loc216 = loc(fused[#loc137, #loc138])
#loc217 = loc(fused[#loc139, #loc140])
#loc218 = loc(fused[#loc141, #loc142])
#loc219 = loc(fused[#loc143, #loc144])
#loc220 = loc(fused[#loc149, #loc150])
#loc221 = loc(fused[#loc152, #loc151])
#loc222 = loc(fused[#loc160, #loc161])
#loc223 = loc(fused[#loc163, #loc162])
#loc224 = loc(fused[#loc168, #loc167])
