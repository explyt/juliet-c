!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE605_Multiple_Binds_Same_Port/CWE605_Multiple_Binds_Same_Port__basic_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc645)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc646)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc647)
  cir.func private @setsockopt(!s32i, !s32i, !s32i, !cir.ptr<!void>, !u32i) -> !s32i extra(#fn_attr) loc(#loc648)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc649)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc650)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc651)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc652)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc653)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc654)
  cir.func private @close(!s32i) -> !s32i loc(#loc655)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc656)
  cir.func no_proto @CWE605_Multiple_Binds_Same_Port__basic_12_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc659)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc659)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc29)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc29)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data"] {alignment = 16 : i64} loc(#loc662)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc663)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc664)
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc665)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc666)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc667)
          %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc668)
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["bOptVal", init] {alignment = 4 : i64} loc(#loc669)
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["bOptLen", init] {alignment = 4 : i64} loc(#loc670)
          %13 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc662)
          cir.store %13, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc662)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc45)
          %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc45)
          cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc666)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc47)
          %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc47)
          cir.store %17, %9 : !s32i, !cir.ptr<!s32i> loc(#loc667)
          %18 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc54)
          %19 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc55)
          %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc54)
          cir.store %20, %10 : !u64i, !cir.ptr<!u64i> loc(#loc668)
          %21 = cir.const #cir.int<1> : !s32i loc(#loc51)
          cir.store %21, %11 : !s32i, !cir.ptr<!s32i> loc(#loc669)
          %22 = cir.const #cir.int<4> : !u64i loc(#loc671)
          %23 = cir.cast(integral, %22 : !u64i), !s32i loc(#loc671)
          cir.store %23, %12 : !s32i, !cir.ptr<!s32i> loc(#loc670)
          cir.scope {
            cir.do {
              cir.scope {
                %25 = cir.const #cir.int<2> : !s32i loc(#loc61)
                %26 = cir.const #cir.int<1> : !s32i loc(#loc62)
                %27 = cir.const #cir.int<6> : !s32i loc(#loc63)
                %28 = cir.call @socket(%25, %26, %27) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc64)
                cir.store %28, %8 : !s32i, !cir.ptr<!s32i> loc(#loc674)
                cir.scope {
                  %77 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc69)
                  %78 = cir.const #cir.int<1> : !s32i loc(#loc70)
                  %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc70)
                  %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc676)
                  cir.if %80 {
                    cir.break loc(#loc72)
                  } loc(#loc677)
                } loc(#loc675)
                cir.scope {
                  %77 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc75)
                  %78 = cir.const #cir.int<1> : !s32i loc(#loc76)
                  %79 = cir.const #cir.int<2> : !s32i loc(#loc77)
                  %80 = cir.cast(bitcast, %11 : !cir.ptr<!s32i>), !cir.ptr<!s8i> loc(#loc679)
                  %81 = cir.cast(bitcast, %80 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc680)
                  %82 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc81)
                  %83 = cir.cast(integral, %82 : !s32i), !u32i loc(#loc81)
                  %84 = cir.call @setsockopt(%77, %78, %79, %81, %83) : (!s32i, !s32i, !s32i, !cir.ptr<!void>, !u32i) -> !s32i extra(#fn_attr) loc(#loc82)
                  %85 = cir.const #cir.int<0> : !s32i loc(#loc83)
                  %86 = cir.cmp(ne, %84, %85) : !s32i, !cir.bool loc(#loc681)
                  cir.if %86 {
                    cir.break loc(#loc85)
                  } loc(#loc682)
                } loc(#loc678)
                %29 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc683)
                %30 = cir.const #cir.int<0> : !s32i loc(#loc88)
                %31 = cir.const #cir.int<16> : !u64i loc(#loc684)
                cir.libc.memset %31 bytes from %29 set to %30 : !cir.ptr<!void>, !s32i, !u64i loc(#loc685)
                %32 = cir.const #cir.int<2> : !s32i loc(#loc93)
                %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc93)
                %34 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc94)
                cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc686)
                %35 = cir.const #cir.int<0> : !s32i loc(#loc96)
                %36 = cir.cast(integral, %35 : !s32i), !u32i loc(#loc96)
                %37 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc97)
                %38 = cir.get_member %37[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc98)
                cir.store %36, %38 : !u32i, !cir.ptr<!u32i> loc(#loc687)
                %39 = cir.const #cir.int<27015> : !s32i loc(#loc100)
                %40 = cir.cast(integral, %39 : !s32i), !u16i loc(#loc100)
                %41 = cir.call @htons(%40) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc101)
                %42 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc102)
                cir.store %41, %42 : !u16i, !cir.ptr<!u16i> loc(#loc688)
                cir.scope {
                  %77 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc107)
                  %78 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc690)
                  %79 = cir.const #cir.int<16> : !u64i loc(#loc691)
                  %80 = cir.cast(integral, %79 : !u64i), !u32i loc(#loc691)
                  %81 = cir.call @bind(%77, %78, %80) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc112)
                  %82 = cir.const #cir.int<1> : !s32i loc(#loc113)
                  %83 = cir.unary(minus, %82) nsw : !s32i, !s32i loc(#loc113)
                  %84 = cir.cmp(eq, %81, %83) : !s32i, !cir.bool loc(#loc692)
                  cir.if %84 {
                    cir.break loc(#loc115)
                  } loc(#loc693)
                } loc(#loc689)
                cir.scope {
                  %77 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc118)
                  %78 = cir.const #cir.int<5> : !s32i loc(#loc119)
                  %79 = cir.call @listen(%77, %78) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc120)
                  %80 = cir.const #cir.int<1> : !s32i loc(#loc121)
                  %81 = cir.unary(minus, %80) nsw : !s32i, !s32i loc(#loc121)
                  %82 = cir.cmp(eq, %79, %81) : !s32i, !cir.bool loc(#loc695)
                  cir.if %82 {
                    cir.break loc(#loc123)
                  } loc(#loc696)
                } loc(#loc694)
                %43 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc124)
                %44 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc125)
                %45 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc126)
                %46 = cir.call @accept(%43, %44, %45) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc127)
                cir.store %46, %9 : !s32i, !cir.ptr<!s32i> loc(#loc697)
                cir.scope {
                  %77 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc132)
                  %78 = cir.const #cir.int<1> : !s32i loc(#loc133)
                  %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc133)
                  %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc699)
                  cir.if %80 {
                    cir.break loc(#loc135)
                  } loc(#loc700)
                } loc(#loc698)
                %47 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc136)
                %48 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc137)
                %49 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc138)
                %50 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %49 : !u64i), !cir.ptr<!s8i> loc(#loc139)
                %51 = cir.cast(bitcast, %50 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc701)
                %52 = cir.const #cir.int<100> : !s32i loc(#loc140)
                %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc140)
                %54 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc141)
                %55 = cir.binop(sub, %53, %54) : !u64i loc(#loc702)
                %56 = cir.const #cir.int<1> : !s32i loc(#loc142)
                %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc142)
                %58 = cir.binop(sub, %55, %57) : !u64i loc(#loc703)
                %59 = cir.cast(integral, %58 : !u64i), !s32i loc(#loc703)
                %60 = cir.cast(integral, %59 : !s32i), !u64i loc(#loc703)
                %61 = cir.const #cir.int<0> : !s32i loc(#loc143)
                %62 = cir.call @recv(%47, %51, %60, %61) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc144)
                %63 = cir.cast(integral, %62 : !s64i), !s32i loc(#loc144)
                cir.store %63, %5 : !s32i, !cir.ptr<!s32i> loc(#loc704)
                cir.scope {
                  %77 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc149)
                  %78 = cir.const #cir.int<1> : !s32i loc(#loc150)
                  %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc150)
                  %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc706)
                  %81 = cir.ternary(%80, true {
                    %82 = cir.const #true loc(#loc151)
                    cir.yield %82 : !cir.bool loc(#loc151)
                  }, false {
                    %82 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc152)
                    %83 = cir.const #cir.int<0> : !s32i loc(#loc153)
                    %84 = cir.cmp(eq, %82, %83) : !s32i, !cir.bool loc(#loc707)
                    %85 = cir.ternary(%84, true {
                      %86 = cir.const #true loc(#loc151)
                      cir.yield %86 : !cir.bool loc(#loc151)
                    }, false {
                      %86 = cir.const #false loc(#loc151)
                      cir.yield %86 : !cir.bool loc(#loc151)
                    }) : (!cir.bool) -> !cir.bool loc(#loc151)
                    cir.yield %85 : !cir.bool loc(#loc151)
                  }) : (!cir.bool) -> !cir.bool loc(#loc151)
                  cir.if %81 {
                    cir.break loc(#loc155)
                  } loc(#loc708)
                } loc(#loc705)
                %64 = cir.const #cir.int<0> : !s32i loc(#loc156)
                %65 = cir.cast(integral, %64 : !s32i), !s8i loc(#loc156)
                %66 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc157)
                %67 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc158)
                %68 = cir.ptr_stride(%67 : !cir.ptr<!s8i>, %66 : !s32i), !cir.ptr<!s8i> loc(#loc158)
                cir.store %65, %68 : !s8i, !cir.ptr<!s8i> loc(#loc709)
                %69 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc159)
                %70 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc160)
                %71 = cir.const #cir.int<13> : !s32i loc(#loc161)
                %72 = cir.call @strchr(%70, %71) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc159)
                cir.store %72, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc710)
                cir.scope {
                  %77 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
                  %78 = cir.cast(ptr_to_bool, %77 : !cir.ptr<!s8i>), !cir.bool loc(#loc166)
                  cir.if %78 {
                    %79 = cir.const #cir.int<0> : !s32i loc(#loc168)
                    %80 = cir.cast(integral, %79 : !s32i), !s8i loc(#loc168)
                    %81 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
                    cir.store %80, %81 : !s8i, !cir.ptr<!s8i> loc(#loc713)
                  } loc(#loc712)
                } loc(#loc711)
                %73 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc171)
                %74 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc172)
                %75 = cir.const #cir.int<10> : !s32i loc(#loc173)
                %76 = cir.call @strchr(%74, %75) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc171)
                cir.store %76, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc714)
                cir.scope {
                  %77 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc178)
                  %78 = cir.cast(ptr_to_bool, %77 : !cir.ptr<!s8i>), !cir.bool loc(#loc178)
                  cir.if %78 {
                    %79 = cir.const #cir.int<0> : !s32i loc(#loc180)
                    %80 = cir.cast(integral, %79 : !s32i), !s8i loc(#loc180)
                    %81 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc181)
                    cir.store %80, %81 : !s8i, !cir.ptr<!s8i> loc(#loc717)
                  } loc(#loc716)
                } loc(#loc715)
              } loc(#loc673)
              cir.yield loc(#loc58)
            } while {
              %25 = cir.const #cir.int<0> : !s32i loc(#loc183)
              %26 = cir.cast(int_to_bool, %25 : !s32i), !cir.bool loc(#loc183)
              cir.condition(%26) loc(#loc183)
            } loc(#loc672)
          } loc(#loc672)
          cir.scope {
            %25 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc186)
            %26 = cir.const #cir.int<1> : !s32i loc(#loc187)
            %27 = cir.unary(minus, %26) nsw : !s32i, !s32i loc(#loc187)
            %28 = cir.cmp(ne, %25, %27) : !s32i, !cir.bool loc(#loc719)
            cir.if %28 {
              %29 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc189)
              %30 = cir.call @close(%29) : (!s32i) -> !s32i loc(#loc190)
            } loc(#loc720)
          } loc(#loc718)
          cir.scope {
            %25 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc193)
            %26 = cir.const #cir.int<1> : !s32i loc(#loc194)
            %27 = cir.unary(minus, %26) nsw : !s32i, !s32i loc(#loc194)
            %28 = cir.cmp(ne, %25, %27) : !s32i, !cir.bool loc(#loc722)
            cir.if %28 {
              %29 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc196)
              %30 = cir.call @close(%29) : (!s32i) -> !s32i loc(#loc197)
            } loc(#loc723)
          } loc(#loc721)
          %24 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc198)
          cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc199)
        } loc(#loc661)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data"] {alignment = 16 : i64} loc(#loc725)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc726)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc727)
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc728)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc729)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc730)
          %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc731)
          %11 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc725)
          cir.store %11, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc725)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc211)
          %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc211)
          cir.store %13, %8 : !s32i, !cir.ptr<!s32i> loc(#loc729)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc213)
          %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc213)
          cir.store %15, %9 : !s32i, !cir.ptr<!s32i> loc(#loc730)
          %16 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc216)
          %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc217)
          %18 = cir.call @strlen(%17) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc216)
          cir.store %18, %10 : !u64i, !cir.ptr<!u64i> loc(#loc731)
          cir.scope {
            cir.do {
              cir.scope {
                %20 = cir.const #cir.int<2> : !s32i loc(#loc222)
                %21 = cir.const #cir.int<1> : !s32i loc(#loc223)
                %22 = cir.const #cir.int<6> : !s32i loc(#loc224)
                %23 = cir.call @socket(%20, %21, %22) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc225)
                cir.store %23, %8 : !s32i, !cir.ptr<!s32i> loc(#loc734)
                cir.scope {
                  %72 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc230)
                  %73 = cir.const #cir.int<1> : !s32i loc(#loc231)
                  %74 = cir.unary(minus, %73) nsw : !s32i, !s32i loc(#loc231)
                  %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc736)
                  cir.if %75 {
                    cir.break loc(#loc233)
                  } loc(#loc737)
                } loc(#loc735)
                %24 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc738)
                %25 = cir.const #cir.int<0> : !s32i loc(#loc236)
                %26 = cir.const #cir.int<16> : !u64i loc(#loc739)
                cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc740)
                %27 = cir.const #cir.int<2> : !s32i loc(#loc241)
                %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc241)
                %29 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc94)
                cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc741)
                %30 = cir.const #cir.int<0> : !s32i loc(#loc243)
                %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc243)
                %32 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc97)
                %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc98)
                cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc742)
                %34 = cir.const #cir.int<27015> : !s32i loc(#loc245)
                %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc245)
                %36 = cir.call @htons(%35) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc246)
                %37 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc102)
                cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc743)
                cir.scope {
                  %72 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc251)
                  %73 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc745)
                  %74 = cir.const #cir.int<16> : !u64i loc(#loc746)
                  %75 = cir.cast(integral, %74 : !u64i), !u32i loc(#loc746)
                  %76 = cir.call @bind(%72, %73, %75) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc256)
                  %77 = cir.const #cir.int<1> : !s32i loc(#loc257)
                  %78 = cir.unary(minus, %77) nsw : !s32i, !s32i loc(#loc257)
                  %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc747)
                  cir.if %79 {
                    cir.break loc(#loc259)
                  } loc(#loc748)
                } loc(#loc744)
                cir.scope {
                  %72 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc262)
                  %73 = cir.const #cir.int<5> : !s32i loc(#loc263)
                  %74 = cir.call @listen(%72, %73) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc264)
                  %75 = cir.const #cir.int<1> : !s32i loc(#loc265)
                  %76 = cir.unary(minus, %75) nsw : !s32i, !s32i loc(#loc265)
                  %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc750)
                  cir.if %77 {
                    cir.break loc(#loc267)
                  } loc(#loc751)
                } loc(#loc749)
                %38 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc268)
                %39 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc269)
                %40 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc270)
                %41 = cir.call @accept(%38, %39, %40) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc271)
                cir.store %41, %9 : !s32i, !cir.ptr<!s32i> loc(#loc752)
                cir.scope {
                  %72 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc276)
                  %73 = cir.const #cir.int<1> : !s32i loc(#loc277)
                  %74 = cir.unary(minus, %73) nsw : !s32i, !s32i loc(#loc277)
                  %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc754)
                  cir.if %75 {
                    cir.break loc(#loc279)
                  } loc(#loc755)
                } loc(#loc753)
                %42 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc280)
                %43 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc281)
                %44 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc282)
                %45 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc283)
                %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc756)
                %47 = cir.const #cir.int<100> : !s32i loc(#loc284)
                %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc284)
                %49 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc285)
                %50 = cir.binop(sub, %48, %49) : !u64i loc(#loc757)
                %51 = cir.const #cir.int<1> : !s32i loc(#loc286)
                %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc286)
                %53 = cir.binop(sub, %50, %52) : !u64i loc(#loc758)
                %54 = cir.cast(integral, %53 : !u64i), !s32i loc(#loc758)
                %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc758)
                %56 = cir.const #cir.int<0> : !s32i loc(#loc287)
                %57 = cir.call @recv(%42, %46, %55, %56) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc288)
                %58 = cir.cast(integral, %57 : !s64i), !s32i loc(#loc288)
                cir.store %58, %5 : !s32i, !cir.ptr<!s32i> loc(#loc759)
                cir.scope {
                  %72 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc293)
                  %73 = cir.const #cir.int<1> : !s32i loc(#loc294)
                  %74 = cir.unary(minus, %73) nsw : !s32i, !s32i loc(#loc294)
                  %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc761)
                  %76 = cir.ternary(%75, true {
                    %77 = cir.const #true loc(#loc295)
                    cir.yield %77 : !cir.bool loc(#loc295)
                  }, false {
                    %77 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc296)
                    %78 = cir.const #cir.int<0> : !s32i loc(#loc297)
                    %79 = cir.cmp(eq, %77, %78) : !s32i, !cir.bool loc(#loc762)
                    %80 = cir.ternary(%79, true {
                      %81 = cir.const #true loc(#loc295)
                      cir.yield %81 : !cir.bool loc(#loc295)
                    }, false {
                      %81 = cir.const #false loc(#loc295)
                      cir.yield %81 : !cir.bool loc(#loc295)
                    }) : (!cir.bool) -> !cir.bool loc(#loc295)
                    cir.yield %80 : !cir.bool loc(#loc295)
                  }) : (!cir.bool) -> !cir.bool loc(#loc295)
                  cir.if %76 {
                    cir.break loc(#loc299)
                  } loc(#loc763)
                } loc(#loc760)
                %59 = cir.const #cir.int<0> : !s32i loc(#loc300)
                %60 = cir.cast(integral, %59 : !s32i), !s8i loc(#loc300)
                %61 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc301)
                %62 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc302)
                %63 = cir.ptr_stride(%62 : !cir.ptr<!s8i>, %61 : !s32i), !cir.ptr<!s8i> loc(#loc302)
                cir.store %60, %63 : !s8i, !cir.ptr<!s8i> loc(#loc764)
                %64 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc303)
                %65 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc304)
                %66 = cir.const #cir.int<13> : !s32i loc(#loc305)
                %67 = cir.call @strchr(%65, %66) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc303)
                cir.store %67, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc765)
                cir.scope {
                  %72 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc310)
                  %73 = cir.cast(ptr_to_bool, %72 : !cir.ptr<!s8i>), !cir.bool loc(#loc310)
                  cir.if %73 {
                    %74 = cir.const #cir.int<0> : !s32i loc(#loc312)
                    %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc312)
                    %76 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc313)
                    cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc768)
                  } loc(#loc767)
                } loc(#loc766)
                %68 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc315)
                %69 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc316)
                %70 = cir.const #cir.int<10> : !s32i loc(#loc317)
                %71 = cir.call @strchr(%69, %70) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc315)
                cir.store %71, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc769)
                cir.scope {
                  %72 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc322)
                  %73 = cir.cast(ptr_to_bool, %72 : !cir.ptr<!s8i>), !cir.bool loc(#loc322)
                  cir.if %73 {
                    %74 = cir.const #cir.int<0> : !s32i loc(#loc324)
                    %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc324)
                    %76 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc325)
                    cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc772)
                  } loc(#loc771)
                } loc(#loc770)
              } loc(#loc733)
              cir.yield loc(#loc219)
            } while {
              %20 = cir.const #cir.int<0> : !s32i loc(#loc327)
              %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc327)
              cir.condition(%21) loc(#loc327)
            } loc(#loc732)
          } loc(#loc732)
          cir.scope {
            %20 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc330)
            %21 = cir.const #cir.int<1> : !s32i loc(#loc331)
            %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc331)
            %23 = cir.cmp(ne, %20, %22) : !s32i, !cir.bool loc(#loc774)
            cir.if %23 {
              %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc333)
              %25 = cir.call @close(%24) : (!s32i) -> !s32i loc(#loc334)
            } loc(#loc775)
          } loc(#loc773)
          cir.scope {
            %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc337)
            %21 = cir.const #cir.int<1> : !s32i loc(#loc338)
            %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc338)
            %23 = cir.cmp(ne, %20, %22) : !s32i, !cir.bool loc(#loc777)
            cir.if %23 {
              %24 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc340)
              %25 = cir.call @close(%24) : (!s32i) -> !s32i loc(#loc341)
            } loc(#loc778)
          } loc(#loc776)
          %19 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc342)
          cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc343)
        } loc(#loc724)
      } loc(#loc660)
    } loc(#loc658)
    cir.return loc(#loc26)
  } loc(#loc657)
  cir.func no_proto @CWE605_Multiple_Binds_Same_Port__basic_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc780)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc346)
    cir.return loc(#loc345)
  } loc(#loc779)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc783)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc783)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc352)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc352)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data"] {alignment = 16 : i64} loc(#loc786)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc787)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc788)
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc789)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc790)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc791)
          %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc792)
          %11 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc786)
          cir.store %11, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc786)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc368)
          %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc368)
          cir.store %13, %8 : !s32i, !cir.ptr<!s32i> loc(#loc790)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc370)
          %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc370)
          cir.store %15, %9 : !s32i, !cir.ptr<!s32i> loc(#loc791)
          %16 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc373)
          %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc374)
          %18 = cir.call @strlen(%17) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc373)
          cir.store %18, %10 : !u64i, !cir.ptr<!u64i> loc(#loc792)
          cir.scope {
            cir.do {
              cir.scope {
                %20 = cir.const #cir.int<2> : !s32i loc(#loc379)
                %21 = cir.const #cir.int<1> : !s32i loc(#loc380)
                %22 = cir.const #cir.int<6> : !s32i loc(#loc381)
                %23 = cir.call @socket(%20, %21, %22) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc382)
                cir.store %23, %8 : !s32i, !cir.ptr<!s32i> loc(#loc795)
                cir.scope {
                  %72 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc387)
                  %73 = cir.const #cir.int<1> : !s32i loc(#loc388)
                  %74 = cir.unary(minus, %73) nsw : !s32i, !s32i loc(#loc388)
                  %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc797)
                  cir.if %75 {
                    cir.break loc(#loc390)
                  } loc(#loc798)
                } loc(#loc796)
                %24 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc799)
                %25 = cir.const #cir.int<0> : !s32i loc(#loc393)
                %26 = cir.const #cir.int<16> : !u64i loc(#loc800)
                cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc801)
                %27 = cir.const #cir.int<2> : !s32i loc(#loc398)
                %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc398)
                %29 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc94)
                cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc802)
                %30 = cir.const #cir.int<0> : !s32i loc(#loc400)
                %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc400)
                %32 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc97)
                %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc98)
                cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc803)
                %34 = cir.const #cir.int<27015> : !s32i loc(#loc402)
                %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc402)
                %36 = cir.call @htons(%35) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc403)
                %37 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc102)
                cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc804)
                cir.scope {
                  %72 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc408)
                  %73 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc806)
                  %74 = cir.const #cir.int<16> : !u64i loc(#loc807)
                  %75 = cir.cast(integral, %74 : !u64i), !u32i loc(#loc807)
                  %76 = cir.call @bind(%72, %73, %75) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc413)
                  %77 = cir.const #cir.int<1> : !s32i loc(#loc414)
                  %78 = cir.unary(minus, %77) nsw : !s32i, !s32i loc(#loc414)
                  %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc808)
                  cir.if %79 {
                    cir.break loc(#loc416)
                  } loc(#loc809)
                } loc(#loc805)
                cir.scope {
                  %72 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc419)
                  %73 = cir.const #cir.int<5> : !s32i loc(#loc420)
                  %74 = cir.call @listen(%72, %73) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc421)
                  %75 = cir.const #cir.int<1> : !s32i loc(#loc422)
                  %76 = cir.unary(minus, %75) nsw : !s32i, !s32i loc(#loc422)
                  %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc811)
                  cir.if %77 {
                    cir.break loc(#loc424)
                  } loc(#loc812)
                } loc(#loc810)
                %38 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc425)
                %39 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc426)
                %40 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc427)
                %41 = cir.call @accept(%38, %39, %40) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc428)
                cir.store %41, %9 : !s32i, !cir.ptr<!s32i> loc(#loc813)
                cir.scope {
                  %72 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc433)
                  %73 = cir.const #cir.int<1> : !s32i loc(#loc434)
                  %74 = cir.unary(minus, %73) nsw : !s32i, !s32i loc(#loc434)
                  %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc815)
                  cir.if %75 {
                    cir.break loc(#loc436)
                  } loc(#loc816)
                } loc(#loc814)
                %42 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc437)
                %43 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc438)
                %44 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc439)
                %45 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc440)
                %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc817)
                %47 = cir.const #cir.int<100> : !s32i loc(#loc441)
                %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc441)
                %49 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc442)
                %50 = cir.binop(sub, %48, %49) : !u64i loc(#loc818)
                %51 = cir.const #cir.int<1> : !s32i loc(#loc443)
                %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc443)
                %53 = cir.binop(sub, %50, %52) : !u64i loc(#loc819)
                %54 = cir.cast(integral, %53 : !u64i), !s32i loc(#loc819)
                %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc819)
                %56 = cir.const #cir.int<0> : !s32i loc(#loc444)
                %57 = cir.call @recv(%42, %46, %55, %56) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc445)
                %58 = cir.cast(integral, %57 : !s64i), !s32i loc(#loc445)
                cir.store %58, %5 : !s32i, !cir.ptr<!s32i> loc(#loc820)
                cir.scope {
                  %72 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc450)
                  %73 = cir.const #cir.int<1> : !s32i loc(#loc451)
                  %74 = cir.unary(minus, %73) nsw : !s32i, !s32i loc(#loc451)
                  %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc822)
                  %76 = cir.ternary(%75, true {
                    %77 = cir.const #true loc(#loc452)
                    cir.yield %77 : !cir.bool loc(#loc452)
                  }, false {
                    %77 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc453)
                    %78 = cir.const #cir.int<0> : !s32i loc(#loc454)
                    %79 = cir.cmp(eq, %77, %78) : !s32i, !cir.bool loc(#loc823)
                    %80 = cir.ternary(%79, true {
                      %81 = cir.const #true loc(#loc452)
                      cir.yield %81 : !cir.bool loc(#loc452)
                    }, false {
                      %81 = cir.const #false loc(#loc452)
                      cir.yield %81 : !cir.bool loc(#loc452)
                    }) : (!cir.bool) -> !cir.bool loc(#loc452)
                    cir.yield %80 : !cir.bool loc(#loc452)
                  }) : (!cir.bool) -> !cir.bool loc(#loc452)
                  cir.if %76 {
                    cir.break loc(#loc456)
                  } loc(#loc824)
                } loc(#loc821)
                %59 = cir.const #cir.int<0> : !s32i loc(#loc457)
                %60 = cir.cast(integral, %59 : !s32i), !s8i loc(#loc457)
                %61 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc458)
                %62 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc459)
                %63 = cir.ptr_stride(%62 : !cir.ptr<!s8i>, %61 : !s32i), !cir.ptr<!s8i> loc(#loc459)
                cir.store %60, %63 : !s8i, !cir.ptr<!s8i> loc(#loc825)
                %64 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc460)
                %65 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc461)
                %66 = cir.const #cir.int<13> : !s32i loc(#loc462)
                %67 = cir.call @strchr(%65, %66) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc460)
                cir.store %67, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc826)
                cir.scope {
                  %72 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc467)
                  %73 = cir.cast(ptr_to_bool, %72 : !cir.ptr<!s8i>), !cir.bool loc(#loc467)
                  cir.if %73 {
                    %74 = cir.const #cir.int<0> : !s32i loc(#loc469)
                    %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc469)
                    %76 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc470)
                    cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc829)
                  } loc(#loc828)
                } loc(#loc827)
                %68 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc472)
                %69 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc473)
                %70 = cir.const #cir.int<10> : !s32i loc(#loc474)
                %71 = cir.call @strchr(%69, %70) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc472)
                cir.store %71, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc830)
                cir.scope {
                  %72 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc479)
                  %73 = cir.cast(ptr_to_bool, %72 : !cir.ptr<!s8i>), !cir.bool loc(#loc479)
                  cir.if %73 {
                    %74 = cir.const #cir.int<0> : !s32i loc(#loc481)
                    %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc481)
                    %76 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc482)
                    cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc833)
                  } loc(#loc832)
                } loc(#loc831)
              } loc(#loc794)
              cir.yield loc(#loc376)
            } while {
              %20 = cir.const #cir.int<0> : !s32i loc(#loc484)
              %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc484)
              cir.condition(%21) loc(#loc484)
            } loc(#loc793)
          } loc(#loc793)
          cir.scope {
            %20 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc487)
            %21 = cir.const #cir.int<1> : !s32i loc(#loc488)
            %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc488)
            %23 = cir.cmp(ne, %20, %22) : !s32i, !cir.bool loc(#loc835)
            cir.if %23 {
              %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc490)
              %25 = cir.call @close(%24) : (!s32i) -> !s32i loc(#loc491)
            } loc(#loc836)
          } loc(#loc834)
          cir.scope {
            %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc494)
            %21 = cir.const #cir.int<1> : !s32i loc(#loc495)
            %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc495)
            %23 = cir.cmp(ne, %20, %22) : !s32i, !cir.bool loc(#loc838)
            cir.if %23 {
              %24 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc497)
              %25 = cir.call @close(%24) : (!s32i) -> !s32i loc(#loc498)
            } loc(#loc839)
          } loc(#loc837)
          %19 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc499)
          cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc500)
        } loc(#loc785)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data"] {alignment = 16 : i64} loc(#loc841)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc842)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc843)
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc844)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc845)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc846)
          %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc847)
          %11 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc841)
          cir.store %11, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc841)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc512)
          %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc512)
          cir.store %13, %8 : !s32i, !cir.ptr<!s32i> loc(#loc845)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc514)
          %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc514)
          cir.store %15, %9 : !s32i, !cir.ptr<!s32i> loc(#loc846)
          %16 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc517)
          %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc518)
          %18 = cir.call @strlen(%17) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc517)
          cir.store %18, %10 : !u64i, !cir.ptr<!u64i> loc(#loc847)
          cir.scope {
            cir.do {
              cir.scope {
                %20 = cir.const #cir.int<2> : !s32i loc(#loc523)
                %21 = cir.const #cir.int<1> : !s32i loc(#loc524)
                %22 = cir.const #cir.int<6> : !s32i loc(#loc525)
                %23 = cir.call @socket(%20, %21, %22) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc526)
                cir.store %23, %8 : !s32i, !cir.ptr<!s32i> loc(#loc850)
                cir.scope {
                  %72 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc531)
                  %73 = cir.const #cir.int<1> : !s32i loc(#loc532)
                  %74 = cir.unary(minus, %73) nsw : !s32i, !s32i loc(#loc532)
                  %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc852)
                  cir.if %75 {
                    cir.break loc(#loc534)
                  } loc(#loc853)
                } loc(#loc851)
                %24 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc854)
                %25 = cir.const #cir.int<0> : !s32i loc(#loc537)
                %26 = cir.const #cir.int<16> : !u64i loc(#loc855)
                cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc856)
                %27 = cir.const #cir.int<2> : !s32i loc(#loc542)
                %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc542)
                %29 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc94)
                cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc857)
                %30 = cir.const #cir.int<0> : !s32i loc(#loc544)
                %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc544)
                %32 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc97)
                %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc98)
                cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc858)
                %34 = cir.const #cir.int<27015> : !s32i loc(#loc546)
                %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc546)
                %36 = cir.call @htons(%35) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc547)
                %37 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc102)
                cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc859)
                cir.scope {
                  %72 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc552)
                  %73 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc861)
                  %74 = cir.const #cir.int<16> : !u64i loc(#loc862)
                  %75 = cir.cast(integral, %74 : !u64i), !u32i loc(#loc862)
                  %76 = cir.call @bind(%72, %73, %75) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc557)
                  %77 = cir.const #cir.int<1> : !s32i loc(#loc558)
                  %78 = cir.unary(minus, %77) nsw : !s32i, !s32i loc(#loc558)
                  %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc863)
                  cir.if %79 {
                    cir.break loc(#loc560)
                  } loc(#loc864)
                } loc(#loc860)
                cir.scope {
                  %72 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc563)
                  %73 = cir.const #cir.int<5> : !s32i loc(#loc564)
                  %74 = cir.call @listen(%72, %73) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc565)
                  %75 = cir.const #cir.int<1> : !s32i loc(#loc566)
                  %76 = cir.unary(minus, %75) nsw : !s32i, !s32i loc(#loc566)
                  %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc866)
                  cir.if %77 {
                    cir.break loc(#loc568)
                  } loc(#loc867)
                } loc(#loc865)
                %38 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc569)
                %39 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc570)
                %40 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc571)
                %41 = cir.call @accept(%38, %39, %40) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc572)
                cir.store %41, %9 : !s32i, !cir.ptr<!s32i> loc(#loc868)
                cir.scope {
                  %72 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc577)
                  %73 = cir.const #cir.int<1> : !s32i loc(#loc578)
                  %74 = cir.unary(minus, %73) nsw : !s32i, !s32i loc(#loc578)
                  %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc870)
                  cir.if %75 {
                    cir.break loc(#loc580)
                  } loc(#loc871)
                } loc(#loc869)
                %42 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc581)
                %43 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc582)
                %44 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc583)
                %45 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc584)
                %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc872)
                %47 = cir.const #cir.int<100> : !s32i loc(#loc585)
                %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc585)
                %49 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc586)
                %50 = cir.binop(sub, %48, %49) : !u64i loc(#loc873)
                %51 = cir.const #cir.int<1> : !s32i loc(#loc587)
                %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc587)
                %53 = cir.binop(sub, %50, %52) : !u64i loc(#loc874)
                %54 = cir.cast(integral, %53 : !u64i), !s32i loc(#loc874)
                %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc874)
                %56 = cir.const #cir.int<0> : !s32i loc(#loc588)
                %57 = cir.call @recv(%42, %46, %55, %56) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc589)
                %58 = cir.cast(integral, %57 : !s64i), !s32i loc(#loc589)
                cir.store %58, %5 : !s32i, !cir.ptr<!s32i> loc(#loc875)
                cir.scope {
                  %72 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc594)
                  %73 = cir.const #cir.int<1> : !s32i loc(#loc595)
                  %74 = cir.unary(minus, %73) nsw : !s32i, !s32i loc(#loc595)
                  %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc877)
                  %76 = cir.ternary(%75, true {
                    %77 = cir.const #true loc(#loc596)
                    cir.yield %77 : !cir.bool loc(#loc596)
                  }, false {
                    %77 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc597)
                    %78 = cir.const #cir.int<0> : !s32i loc(#loc598)
                    %79 = cir.cmp(eq, %77, %78) : !s32i, !cir.bool loc(#loc878)
                    %80 = cir.ternary(%79, true {
                      %81 = cir.const #true loc(#loc596)
                      cir.yield %81 : !cir.bool loc(#loc596)
                    }, false {
                      %81 = cir.const #false loc(#loc596)
                      cir.yield %81 : !cir.bool loc(#loc596)
                    }) : (!cir.bool) -> !cir.bool loc(#loc596)
                    cir.yield %80 : !cir.bool loc(#loc596)
                  }) : (!cir.bool) -> !cir.bool loc(#loc596)
                  cir.if %76 {
                    cir.break loc(#loc600)
                  } loc(#loc879)
                } loc(#loc876)
                %59 = cir.const #cir.int<0> : !s32i loc(#loc601)
                %60 = cir.cast(integral, %59 : !s32i), !s8i loc(#loc601)
                %61 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc602)
                %62 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc603)
                %63 = cir.ptr_stride(%62 : !cir.ptr<!s8i>, %61 : !s32i), !cir.ptr<!s8i> loc(#loc603)
                cir.store %60, %63 : !s8i, !cir.ptr<!s8i> loc(#loc880)
                %64 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc604)
                %65 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc605)
                %66 = cir.const #cir.int<13> : !s32i loc(#loc606)
                %67 = cir.call @strchr(%65, %66) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc604)
                cir.store %67, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc881)
                cir.scope {
                  %72 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc611)
                  %73 = cir.cast(ptr_to_bool, %72 : !cir.ptr<!s8i>), !cir.bool loc(#loc611)
                  cir.if %73 {
                    %74 = cir.const #cir.int<0> : !s32i loc(#loc613)
                    %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc613)
                    %76 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc614)
                    cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc884)
                  } loc(#loc883)
                } loc(#loc882)
                %68 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc616)
                %69 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc617)
                %70 = cir.const #cir.int<10> : !s32i loc(#loc618)
                %71 = cir.call @strchr(%69, %70) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc616)
                cir.store %71, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc885)
                cir.scope {
                  %72 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc623)
                  %73 = cir.cast(ptr_to_bool, %72 : !cir.ptr<!s8i>), !cir.bool loc(#loc623)
                  cir.if %73 {
                    %74 = cir.const #cir.int<0> : !s32i loc(#loc625)
                    %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc625)
                    %76 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc626)
                    cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc888)
                  } loc(#loc887)
                } loc(#loc886)
              } loc(#loc849)
              cir.yield loc(#loc520)
            } while {
              %20 = cir.const #cir.int<0> : !s32i loc(#loc628)
              %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc628)
              cir.condition(%21) loc(#loc628)
            } loc(#loc848)
          } loc(#loc848)
          cir.scope {
            %20 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc631)
            %21 = cir.const #cir.int<1> : !s32i loc(#loc632)
            %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc632)
            %23 = cir.cmp(ne, %20, %22) : !s32i, !cir.bool loc(#loc890)
            cir.if %23 {
              %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc634)
              %25 = cir.call @close(%24) : (!s32i) -> !s32i loc(#loc635)
            } loc(#loc891)
          } loc(#loc889)
          cir.scope {
            %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc638)
            %21 = cir.const #cir.int<1> : !s32i loc(#loc639)
            %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc639)
            %23 = cir.cmp(ne, %20, %22) : !s32i, !cir.bool loc(#loc893)
            cir.if %23 {
              %24 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc641)
              %25 = cir.call @close(%24) : (!s32i) -> !s32i loc(#loc642)
            } loc(#loc894)
          } loc(#loc892)
          %19 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc643)
          cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc644)
        } loc(#loc840)
      } loc(#loc784)
    } loc(#loc782)
    cir.return loc(#loc349)
  } loc(#loc781)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE605_Multiple_Binds_Same_Port/CWE605_Multiple_Binds_Same_Port__basic_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":277:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":278:52)
#loc9 = loc("/usr/include/netinet/in.h":402:1)
#loc10 = loc("/usr/include/netinet/in.h":403:40)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc15 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc17 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc18 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc19 = loc("/usr/include/string.h":246:1)
#loc20 = loc("/usr/include/string.h":247:33)
#loc21 = loc("/usr/include/unistd.h":358:1)
#loc22 = loc("/usr/include/unistd.h":358:27)
#loc23 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc24 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc25 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":44:1)
#loc26 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":225:1)
#loc27 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":46:5)
#loc28 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":224:5)
#loc29 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":46:8)
#loc30 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":46:33)
#loc31 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":47:5)
#loc32 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":140:5)
#loc33 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":142:5)
#loc34 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":48:9)
#loc35 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":139:9)
#loc36 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":49:13)
#loc37 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":49:30)
#loc38 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":54:13)
#loc39 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":54:17)
#loc40 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":55:13)
#loc41 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":55:32)
#loc42 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":56:13)
#loc43 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":56:19)
#loc44 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":57:13)
#loc45 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":57:35)
#loc46 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":58:13)
#loc47 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":58:35)
#loc48 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":59:13)
#loc49 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":59:41)
#loc50 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":64:13)
#loc51 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":64:27)
#loc52 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":65:13)
#loc53 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":65:37)
#loc54 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":59:30)
#loc55 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":59:37)
#loc56 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":65:27)
#loc57 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":67:13)
#loc58 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":123:21)
#loc59 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":68:13)
#loc60 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":122:13)
#loc61 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":76:39)
#loc62 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":76:48)
#loc63 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":76:61)
#loc64 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":76:32)
#loc65 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":76:17)
#loc66 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":76:72)
#loc67 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":77:17)
#loc68 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":80:17)
#loc69 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":77:21)
#loc70 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":77:37)
#loc71 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":78:17)
#loc72 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":79:21)
#loc73 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":82:17)
#loc74 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":85:17)
#loc75 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":82:32)
#loc76 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":82:46)
#loc77 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":82:58)
#loc78 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":82:79)
#loc79 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":82:80)
#loc80 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":82:72)
#loc81 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":82:89)
#loc82 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":82:21)
#loc83 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":82:101)
#loc84 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":83:17)
#loc85 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":84:21)
#loc86 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":86:24)
#loc87 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":86:25)
#loc88 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":86:34)
#loc89 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":86:37)
#loc90 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":86:51)
#loc91 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":86:17)
#loc92 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":86:52)
#loc93 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":87:38)
#loc94 = loc("/usr/include/netinet/in.h":249:5)
#loc95 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":87:17)
#loc96 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":88:43)
#loc97 = loc("/usr/include/netinet/in.h":251:20)
#loc98 = loc("/usr/include/netinet/in.h":33:15)
#loc99 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":88:17)
#loc100 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":89:42)
#loc101 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":89:36)
#loc102 = loc("/usr/include/netinet/in.h":250:15)
#loc103 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":89:17)
#loc104 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":89:50)
#loc105 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":90:17)
#loc106 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":93:17)
#loc107 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":90:26)
#loc108 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":90:58)
#loc109 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":90:59)
#loc110 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":90:68)
#loc111 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":90:82)
#loc112 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":90:21)
#loc113 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":90:88)
#loc114 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":91:17)
#loc115 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":92:21)
#loc116 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":94:17)
#loc117 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":97:17)
#loc118 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":94:28)
#loc119 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":94:42)
#loc120 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":94:21)
#loc121 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":94:61)
#loc122 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":95:17)
#loc123 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":96:21)
#loc124 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":98:39)
#loc125 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":98:53)
#loc126 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":98:59)
#loc127 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":98:32)
#loc128 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":98:17)
#loc129 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":98:63)
#loc130 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":99:17)
#loc131 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":102:17)
#loc132 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":99:21)
#loc133 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":99:37)
#loc134 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":100:17)
#loc135 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":101:21)
#loc136 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":104:35)
#loc137 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":104:49)
#loc138 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":104:54)
#loc139 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":104:53)
#loc140 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":104:69)
#loc141 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":104:73)
#loc142 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":104:81)
#loc143 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":104:85)
#loc144 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":104:30)
#loc145 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":104:17)
#loc146 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":104:86)
#loc147 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":105:17)
#loc148 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":108:17)
#loc149 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":105:21)
#loc150 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":105:35)
#loc151 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":105:48)
#loc152 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":105:51)
#loc153 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":105:65)
#loc154 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":106:17)
#loc155 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":107:21)
#loc156 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":110:36)
#loc157 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":110:22)
#loc158 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":110:17)
#loc159 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":112:27)
#loc160 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":112:34)
#loc161 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":112:40)
#loc162 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":112:17)
#loc163 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":112:44)
#loc164 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":113:17)
#loc165 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":116:17)
#loc166 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":113:21)
#loc167 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":114:17)
#loc168 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":115:32)
#loc169 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":115:22)
#loc170 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":115:21)
#loc171 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":117:27)
#loc172 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":117:34)
#loc173 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":117:40)
#loc174 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":117:17)
#loc175 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":117:44)
#loc176 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":118:17)
#loc177 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":121:17)
#loc178 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":118:21)
#loc179 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":119:17)
#loc180 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":120:32)
#loc181 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":120:22)
#loc182 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":120:21)
#loc183 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":123:20)
#loc184 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":124:13)
#loc185 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":127:13)
#loc186 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":124:17)
#loc187 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":124:33)
#loc188 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":125:13)
#loc189 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":126:30)
#loc190 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":126:17)
#loc191 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":128:13)
#loc192 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":131:13)
#loc193 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":128:17)
#loc194 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":128:33)
#loc195 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":129:13)
#loc196 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":130:30)
#loc197 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":130:17)
#loc198 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":138:23)
#loc199 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":138:13)
#loc200 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":143:9)
#loc201 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":223:9)
#loc202 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":144:13)
#loc203 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":144:30)
#loc204 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":149:13)
#loc205 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":149:17)
#loc206 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":150:13)
#loc207 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":150:32)
#loc208 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":151:13)
#loc209 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":151:19)
#loc210 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":152:13)
#loc211 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":152:35)
#loc212 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":153:13)
#loc213 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":153:35)
#loc214 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":154:13)
#loc215 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":154:41)
#loc216 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":154:30)
#loc217 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":154:37)
#loc218 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":155:13)
#loc219 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":207:21)
#loc220 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":156:13)
#loc221 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":206:13)
#loc222 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":164:39)
#loc223 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":164:48)
#loc224 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":164:61)
#loc225 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":164:32)
#loc226 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":164:17)
#loc227 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":164:72)
#loc228 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":165:17)
#loc229 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":168:17)
#loc230 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":165:21)
#loc231 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":165:37)
#loc232 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":166:17)
#loc233 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":167:21)
#loc234 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":170:24)
#loc235 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":170:25)
#loc236 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":170:34)
#loc237 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":170:37)
#loc238 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":170:51)
#loc239 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":170:17)
#loc240 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":170:52)
#loc241 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":171:38)
#loc242 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":171:17)
#loc243 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":172:43)
#loc244 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":172:17)
#loc245 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":173:42)
#loc246 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":173:36)
#loc247 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":173:17)
#loc248 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":173:50)
#loc249 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":174:17)
#loc250 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":177:17)
#loc251 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":174:26)
#loc252 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":174:58)
#loc253 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":174:59)
#loc254 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":174:68)
#loc255 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":174:82)
#loc256 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":174:21)
#loc257 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":174:88)
#loc258 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":175:17)
#loc259 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":176:21)
#loc260 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":178:17)
#loc261 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":181:17)
#loc262 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":178:28)
#loc263 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":178:42)
#loc264 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":178:21)
#loc265 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":178:61)
#loc266 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":179:17)
#loc267 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":180:21)
#loc268 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":182:39)
#loc269 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":182:53)
#loc270 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":182:59)
#loc271 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":182:32)
#loc272 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":182:17)
#loc273 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":182:63)
#loc274 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":183:17)
#loc275 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":186:17)
#loc276 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":183:21)
#loc277 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":183:37)
#loc278 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":184:17)
#loc279 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":185:21)
#loc280 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":188:35)
#loc281 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":188:49)
#loc282 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":188:54)
#loc283 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":188:53)
#loc284 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":188:69)
#loc285 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":188:73)
#loc286 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":188:81)
#loc287 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":188:85)
#loc288 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":188:30)
#loc289 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":188:17)
#loc290 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":188:86)
#loc291 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":189:17)
#loc292 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":192:17)
#loc293 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":189:21)
#loc294 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":189:35)
#loc295 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":189:48)
#loc296 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":189:51)
#loc297 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":189:65)
#loc298 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":190:17)
#loc299 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":191:21)
#loc300 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":194:36)
#loc301 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":194:22)
#loc302 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":194:17)
#loc303 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":196:27)
#loc304 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":196:34)
#loc305 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":196:40)
#loc306 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":196:17)
#loc307 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":196:44)
#loc308 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":197:17)
#loc309 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":200:17)
#loc310 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":197:21)
#loc311 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":198:17)
#loc312 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":199:32)
#loc313 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":199:22)
#loc314 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":199:21)
#loc315 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":201:27)
#loc316 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":201:34)
#loc317 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":201:40)
#loc318 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":201:17)
#loc319 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":201:44)
#loc320 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":202:17)
#loc321 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":205:17)
#loc322 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":202:21)
#loc323 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":203:17)
#loc324 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":204:32)
#loc325 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":204:22)
#loc326 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":204:21)
#loc327 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":207:20)
#loc328 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":208:13)
#loc329 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":211:13)
#loc330 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":208:17)
#loc331 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":208:33)
#loc332 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":209:13)
#loc333 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":210:30)
#loc334 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":210:17)
#loc335 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":212:13)
#loc336 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":215:13)
#loc337 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":212:17)
#loc338 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":212:33)
#loc339 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":213:13)
#loc340 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":214:30)
#loc341 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":214:17)
#loc342 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":222:23)
#loc343 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":222:13)
#loc344 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":404:1)
#loc345 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":407:1)
#loc346 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":406:5)
#loc347 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":406:11)
#loc348 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":232:1)
#loc349 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":402:1)
#loc350 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":234:5)
#loc351 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":401:5)
#loc352 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":234:8)
#loc353 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":234:33)
#loc354 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":235:5)
#loc355 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":317:5)
#loc356 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":319:5)
#loc357 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":236:9)
#loc358 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":316:9)
#loc359 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":237:13)
#loc360 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":237:30)
#loc361 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":242:13)
#loc362 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":242:17)
#loc363 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":243:13)
#loc364 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":243:32)
#loc365 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":244:13)
#loc366 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":244:19)
#loc367 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":245:13)
#loc368 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":245:35)
#loc369 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":246:13)
#loc370 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":246:35)
#loc371 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":247:13)
#loc372 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":247:41)
#loc373 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":247:30)
#loc374 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":247:37)
#loc375 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":248:13)
#loc376 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":300:21)
#loc377 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":249:13)
#loc378 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":299:13)
#loc379 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":257:39)
#loc380 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":257:48)
#loc381 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":257:61)
#loc382 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":257:32)
#loc383 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":257:17)
#loc384 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":257:72)
#loc385 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":258:17)
#loc386 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":261:17)
#loc387 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":258:21)
#loc388 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":258:37)
#loc389 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":259:17)
#loc390 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":260:21)
#loc391 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":263:24)
#loc392 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":263:25)
#loc393 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":263:34)
#loc394 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":263:37)
#loc395 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":263:51)
#loc396 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":263:17)
#loc397 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":263:52)
#loc398 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":264:38)
#loc399 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":264:17)
#loc400 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":265:43)
#loc401 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":265:17)
#loc402 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":266:42)
#loc403 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":266:36)
#loc404 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":266:17)
#loc405 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":266:50)
#loc406 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":267:17)
#loc407 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":270:17)
#loc408 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":267:26)
#loc409 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":267:58)
#loc410 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":267:59)
#loc411 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":267:68)
#loc412 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":267:82)
#loc413 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":267:21)
#loc414 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":267:88)
#loc415 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":268:17)
#loc416 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":269:21)
#loc417 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":271:17)
#loc418 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":274:17)
#loc419 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":271:28)
#loc420 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":271:42)
#loc421 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":271:21)
#loc422 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":271:61)
#loc423 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":272:17)
#loc424 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":273:21)
#loc425 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":275:39)
#loc426 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":275:53)
#loc427 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":275:59)
#loc428 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":275:32)
#loc429 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":275:17)
#loc430 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":275:63)
#loc431 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":276:17)
#loc432 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":279:17)
#loc433 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":276:21)
#loc434 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":276:37)
#loc435 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":277:17)
#loc436 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":278:21)
#loc437 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":281:35)
#loc438 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":281:49)
#loc439 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":281:54)
#loc440 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":281:53)
#loc441 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":281:69)
#loc442 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":281:73)
#loc443 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":281:81)
#loc444 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":281:85)
#loc445 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":281:30)
#loc446 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":281:17)
#loc447 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":281:86)
#loc448 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":282:17)
#loc449 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":285:17)
#loc450 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":282:21)
#loc451 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":282:35)
#loc452 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":282:48)
#loc453 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":282:51)
#loc454 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":282:65)
#loc455 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":283:17)
#loc456 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":284:21)
#loc457 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":287:36)
#loc458 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":287:22)
#loc459 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":287:17)
#loc460 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":289:27)
#loc461 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":289:34)
#loc462 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":289:40)
#loc463 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":289:17)
#loc464 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":289:44)
#loc465 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":290:17)
#loc466 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":293:17)
#loc467 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":290:21)
#loc468 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":291:17)
#loc469 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":292:32)
#loc470 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":292:22)
#loc471 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":292:21)
#loc472 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":294:27)
#loc473 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":294:34)
#loc474 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":294:40)
#loc475 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":294:17)
#loc476 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":294:44)
#loc477 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":295:17)
#loc478 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":298:17)
#loc479 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":295:21)
#loc480 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":296:17)
#loc481 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":297:32)
#loc482 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":297:22)
#loc483 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":297:21)
#loc484 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":300:20)
#loc485 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":301:13)
#loc486 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":304:13)
#loc487 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":301:17)
#loc488 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":301:33)
#loc489 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":302:13)
#loc490 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":303:30)
#loc491 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":303:17)
#loc492 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":305:13)
#loc493 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":308:13)
#loc494 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":305:17)
#loc495 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":305:33)
#loc496 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":306:13)
#loc497 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":307:30)
#loc498 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":307:17)
#loc499 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":315:23)
#loc500 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":315:13)
#loc501 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":320:9)
#loc502 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":400:9)
#loc503 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":321:13)
#loc504 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":321:30)
#loc505 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":326:13)
#loc506 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":326:17)
#loc507 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":327:13)
#loc508 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":327:32)
#loc509 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":328:13)
#loc510 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":328:19)
#loc511 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":329:13)
#loc512 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":329:35)
#loc513 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":330:13)
#loc514 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":330:35)
#loc515 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":331:13)
#loc516 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":331:41)
#loc517 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":331:30)
#loc518 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":331:37)
#loc519 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":332:13)
#loc520 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":384:21)
#loc521 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":333:13)
#loc522 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":383:13)
#loc523 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":341:39)
#loc524 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":341:48)
#loc525 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":341:61)
#loc526 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":341:32)
#loc527 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":341:17)
#loc528 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":341:72)
#loc529 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":342:17)
#loc530 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":345:17)
#loc531 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":342:21)
#loc532 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":342:37)
#loc533 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":343:17)
#loc534 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":344:21)
#loc535 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":347:24)
#loc536 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":347:25)
#loc537 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":347:34)
#loc538 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":347:37)
#loc539 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":347:51)
#loc540 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":347:17)
#loc541 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":347:52)
#loc542 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":348:38)
#loc543 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":348:17)
#loc544 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":349:43)
#loc545 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":349:17)
#loc546 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":350:42)
#loc547 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":350:36)
#loc548 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":350:17)
#loc549 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":350:50)
#loc550 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":351:17)
#loc551 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":354:17)
#loc552 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":351:26)
#loc553 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":351:58)
#loc554 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":351:59)
#loc555 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":351:68)
#loc556 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":351:82)
#loc557 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":351:21)
#loc558 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":351:88)
#loc559 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":352:17)
#loc560 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":353:21)
#loc561 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":355:17)
#loc562 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":358:17)
#loc563 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":355:28)
#loc564 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":355:42)
#loc565 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":355:21)
#loc566 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":355:61)
#loc567 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":356:17)
#loc568 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":357:21)
#loc569 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":359:39)
#loc570 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":359:53)
#loc571 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":359:59)
#loc572 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":359:32)
#loc573 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":359:17)
#loc574 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":359:63)
#loc575 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":360:17)
#loc576 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":363:17)
#loc577 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":360:21)
#loc578 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":360:37)
#loc579 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":361:17)
#loc580 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":362:21)
#loc581 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":365:35)
#loc582 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":365:49)
#loc583 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":365:54)
#loc584 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":365:53)
#loc585 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":365:69)
#loc586 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":365:73)
#loc587 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":365:81)
#loc588 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":365:85)
#loc589 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":365:30)
#loc590 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":365:17)
#loc591 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":365:86)
#loc592 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":366:17)
#loc593 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":369:17)
#loc594 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":366:21)
#loc595 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":366:35)
#loc596 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":366:48)
#loc597 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":366:51)
#loc598 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":366:65)
#loc599 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":367:17)
#loc600 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":368:21)
#loc601 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":371:36)
#loc602 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":371:22)
#loc603 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":371:17)
#loc604 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":373:27)
#loc605 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":373:34)
#loc606 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":373:40)
#loc607 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":373:17)
#loc608 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":373:44)
#loc609 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":374:17)
#loc610 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":377:17)
#loc611 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":374:21)
#loc612 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":375:17)
#loc613 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":376:32)
#loc614 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":376:22)
#loc615 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":376:21)
#loc616 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":378:27)
#loc617 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":378:34)
#loc618 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":378:40)
#loc619 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":378:17)
#loc620 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":378:44)
#loc621 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":379:17)
#loc622 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":382:17)
#loc623 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":379:21)
#loc624 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":380:17)
#loc625 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":381:32)
#loc626 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":381:22)
#loc627 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":381:21)
#loc628 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":384:20)
#loc629 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":385:13)
#loc630 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":388:13)
#loc631 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":385:17)
#loc632 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":385:33)
#loc633 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":386:13)
#loc634 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":387:30)
#loc635 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":387:17)
#loc636 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":389:13)
#loc637 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":392:13)
#loc638 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":389:17)
#loc639 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":389:33)
#loc640 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":390:13)
#loc641 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":391:30)
#loc642 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":391:17)
#loc643 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":399:23)
#loc644 = loc("CWE605_Multiple_Binds_Same_Port__basic_12.c":399:13)
#loc645 = loc(fused[#loc1, #loc2])
#loc646 = loc(fused[#loc3, #loc4])
#loc647 = loc(fused[#loc5, #loc6])
#loc648 = loc(fused[#loc7, #loc8])
#loc649 = loc(fused[#loc9, #loc10])
#loc650 = loc(fused[#loc11, #loc12])
#loc651 = loc(fused[#loc13, #loc14])
#loc652 = loc(fused[#loc15, #loc16])
#loc653 = loc(fused[#loc17, #loc18])
#loc654 = loc(fused[#loc19, #loc20])
#loc655 = loc(fused[#loc21, #loc22])
#loc656 = loc(fused[#loc23, #loc24])
#loc657 = loc(fused[#loc25, #loc26])
#loc658 = loc(fused[#loc27, #loc28])
#loc659 = loc(fused[#loc29, #loc30])
#loc660 = loc(fused[#loc31, #loc32, #loc33, #loc28])
#loc661 = loc(fused[#loc34, #loc35])
#loc662 = loc(fused[#loc36, #loc37])
#loc663 = loc(fused[#loc38, #loc39])
#loc664 = loc(fused[#loc40, #loc41])
#loc665 = loc(fused[#loc42, #loc43])
#loc666 = loc(fused[#loc44, #loc45])
#loc667 = loc(fused[#loc46, #loc47])
#loc668 = loc(fused[#loc48, #loc49])
#loc669 = loc(fused[#loc50, #loc51])
#loc670 = loc(fused[#loc52, #loc53])
#loc671 = loc(fused[#loc56, #loc53])
#loc672 = loc(fused[#loc57, #loc58])
#loc673 = loc(fused[#loc59, #loc60])
#loc674 = loc(fused[#loc65, #loc66])
#loc675 = loc(fused[#loc67, #loc68])
#loc676 = loc(fused[#loc69, #loc70])
#loc677 = loc(fused[#loc71, #loc68])
#loc678 = loc(fused[#loc73, #loc74])
#loc679 = loc(fused[#loc78, #loc79])
#loc680 = loc(fused[#loc80, #loc79])
#loc681 = loc(fused[#loc82, #loc83])
#loc682 = loc(fused[#loc84, #loc74])
#loc683 = loc(fused[#loc86, #loc87])
#loc684 = loc(fused[#loc89, #loc90])
#loc685 = loc(fused[#loc91, #loc92])
#loc686 = loc(fused[#loc95, #loc93])
#loc687 = loc(fused[#loc99, #loc96])
#loc688 = loc(fused[#loc103, #loc104])
#loc689 = loc(fused[#loc105, #loc106])
#loc690 = loc(fused[#loc108, #loc109])
#loc691 = loc(fused[#loc110, #loc111])
#loc692 = loc(fused[#loc112, #loc113])
#loc693 = loc(fused[#loc114, #loc106])
#loc694 = loc(fused[#loc116, #loc117])
#loc695 = loc(fused[#loc120, #loc121])
#loc696 = loc(fused[#loc122, #loc117])
#loc697 = loc(fused[#loc128, #loc129])
#loc698 = loc(fused[#loc130, #loc131])
#loc699 = loc(fused[#loc132, #loc133])
#loc700 = loc(fused[#loc134, #loc131])
#loc701 = loc(fused[#loc137, #loc138])
#loc702 = loc(fused[#loc140, #loc141])
#loc703 = loc(fused[#loc140, #loc142])
#loc704 = loc(fused[#loc145, #loc146])
#loc705 = loc(fused[#loc147, #loc148])
#loc706 = loc(fused[#loc149, #loc150])
#loc707 = loc(fused[#loc152, #loc153])
#loc708 = loc(fused[#loc154, #loc148])
#loc709 = loc(fused[#loc158, #loc156])
#loc710 = loc(fused[#loc162, #loc163])
#loc711 = loc(fused[#loc164, #loc165])
#loc712 = loc(fused[#loc167, #loc165])
#loc713 = loc(fused[#loc170, #loc168])
#loc714 = loc(fused[#loc174, #loc175])
#loc715 = loc(fused[#loc176, #loc177])
#loc716 = loc(fused[#loc179, #loc177])
#loc717 = loc(fused[#loc182, #loc180])
#loc718 = loc(fused[#loc184, #loc185])
#loc719 = loc(fused[#loc186, #loc187])
#loc720 = loc(fused[#loc188, #loc185])
#loc721 = loc(fused[#loc191, #loc192])
#loc722 = loc(fused[#loc193, #loc194])
#loc723 = loc(fused[#loc195, #loc192])
#loc724 = loc(fused[#loc200, #loc201])
#loc725 = loc(fused[#loc202, #loc203])
#loc726 = loc(fused[#loc204, #loc205])
#loc727 = loc(fused[#loc206, #loc207])
#loc728 = loc(fused[#loc208, #loc209])
#loc729 = loc(fused[#loc210, #loc211])
#loc730 = loc(fused[#loc212, #loc213])
#loc731 = loc(fused[#loc214, #loc215])
#loc732 = loc(fused[#loc218, #loc219])
#loc733 = loc(fused[#loc220, #loc221])
#loc734 = loc(fused[#loc226, #loc227])
#loc735 = loc(fused[#loc228, #loc229])
#loc736 = loc(fused[#loc230, #loc231])
#loc737 = loc(fused[#loc232, #loc229])
#loc738 = loc(fused[#loc234, #loc235])
#loc739 = loc(fused[#loc237, #loc238])
#loc740 = loc(fused[#loc239, #loc240])
#loc741 = loc(fused[#loc242, #loc241])
#loc742 = loc(fused[#loc244, #loc243])
#loc743 = loc(fused[#loc247, #loc248])
#loc744 = loc(fused[#loc249, #loc250])
#loc745 = loc(fused[#loc252, #loc253])
#loc746 = loc(fused[#loc254, #loc255])
#loc747 = loc(fused[#loc256, #loc257])
#loc748 = loc(fused[#loc258, #loc250])
#loc749 = loc(fused[#loc260, #loc261])
#loc750 = loc(fused[#loc264, #loc265])
#loc751 = loc(fused[#loc266, #loc261])
#loc752 = loc(fused[#loc272, #loc273])
#loc753 = loc(fused[#loc274, #loc275])
#loc754 = loc(fused[#loc276, #loc277])
#loc755 = loc(fused[#loc278, #loc275])
#loc756 = loc(fused[#loc281, #loc282])
#loc757 = loc(fused[#loc284, #loc285])
#loc758 = loc(fused[#loc284, #loc286])
#loc759 = loc(fused[#loc289, #loc290])
#loc760 = loc(fused[#loc291, #loc292])
#loc761 = loc(fused[#loc293, #loc294])
#loc762 = loc(fused[#loc296, #loc297])
#loc763 = loc(fused[#loc298, #loc292])
#loc764 = loc(fused[#loc302, #loc300])
#loc765 = loc(fused[#loc306, #loc307])
#loc766 = loc(fused[#loc308, #loc309])
#loc767 = loc(fused[#loc311, #loc309])
#loc768 = loc(fused[#loc314, #loc312])
#loc769 = loc(fused[#loc318, #loc319])
#loc770 = loc(fused[#loc320, #loc321])
#loc771 = loc(fused[#loc323, #loc321])
#loc772 = loc(fused[#loc326, #loc324])
#loc773 = loc(fused[#loc328, #loc329])
#loc774 = loc(fused[#loc330, #loc331])
#loc775 = loc(fused[#loc332, #loc329])
#loc776 = loc(fused[#loc335, #loc336])
#loc777 = loc(fused[#loc337, #loc338])
#loc778 = loc(fused[#loc339, #loc336])
#loc779 = loc(fused[#loc344, #loc345])
#loc780 = loc(fused[#loc346, #loc347])
#loc781 = loc(fused[#loc348, #loc349])
#loc782 = loc(fused[#loc350, #loc351])
#loc783 = loc(fused[#loc352, #loc353])
#loc784 = loc(fused[#loc354, #loc355, #loc356, #loc351])
#loc785 = loc(fused[#loc357, #loc358])
#loc786 = loc(fused[#loc359, #loc360])
#loc787 = loc(fused[#loc361, #loc362])
#loc788 = loc(fused[#loc363, #loc364])
#loc789 = loc(fused[#loc365, #loc366])
#loc790 = loc(fused[#loc367, #loc368])
#loc791 = loc(fused[#loc369, #loc370])
#loc792 = loc(fused[#loc371, #loc372])
#loc793 = loc(fused[#loc375, #loc376])
#loc794 = loc(fused[#loc377, #loc378])
#loc795 = loc(fused[#loc383, #loc384])
#loc796 = loc(fused[#loc385, #loc386])
#loc797 = loc(fused[#loc387, #loc388])
#loc798 = loc(fused[#loc389, #loc386])
#loc799 = loc(fused[#loc391, #loc392])
#loc800 = loc(fused[#loc394, #loc395])
#loc801 = loc(fused[#loc396, #loc397])
#loc802 = loc(fused[#loc399, #loc398])
#loc803 = loc(fused[#loc401, #loc400])
#loc804 = loc(fused[#loc404, #loc405])
#loc805 = loc(fused[#loc406, #loc407])
#loc806 = loc(fused[#loc409, #loc410])
#loc807 = loc(fused[#loc411, #loc412])
#loc808 = loc(fused[#loc413, #loc414])
#loc809 = loc(fused[#loc415, #loc407])
#loc810 = loc(fused[#loc417, #loc418])
#loc811 = loc(fused[#loc421, #loc422])
#loc812 = loc(fused[#loc423, #loc418])
#loc813 = loc(fused[#loc429, #loc430])
#loc814 = loc(fused[#loc431, #loc432])
#loc815 = loc(fused[#loc433, #loc434])
#loc816 = loc(fused[#loc435, #loc432])
#loc817 = loc(fused[#loc438, #loc439])
#loc818 = loc(fused[#loc441, #loc442])
#loc819 = loc(fused[#loc441, #loc443])
#loc820 = loc(fused[#loc446, #loc447])
#loc821 = loc(fused[#loc448, #loc449])
#loc822 = loc(fused[#loc450, #loc451])
#loc823 = loc(fused[#loc453, #loc454])
#loc824 = loc(fused[#loc455, #loc449])
#loc825 = loc(fused[#loc459, #loc457])
#loc826 = loc(fused[#loc463, #loc464])
#loc827 = loc(fused[#loc465, #loc466])
#loc828 = loc(fused[#loc468, #loc466])
#loc829 = loc(fused[#loc471, #loc469])
#loc830 = loc(fused[#loc475, #loc476])
#loc831 = loc(fused[#loc477, #loc478])
#loc832 = loc(fused[#loc480, #loc478])
#loc833 = loc(fused[#loc483, #loc481])
#loc834 = loc(fused[#loc485, #loc486])
#loc835 = loc(fused[#loc487, #loc488])
#loc836 = loc(fused[#loc489, #loc486])
#loc837 = loc(fused[#loc492, #loc493])
#loc838 = loc(fused[#loc494, #loc495])
#loc839 = loc(fused[#loc496, #loc493])
#loc840 = loc(fused[#loc501, #loc502])
#loc841 = loc(fused[#loc503, #loc504])
#loc842 = loc(fused[#loc505, #loc506])
#loc843 = loc(fused[#loc507, #loc508])
#loc844 = loc(fused[#loc509, #loc510])
#loc845 = loc(fused[#loc511, #loc512])
#loc846 = loc(fused[#loc513, #loc514])
#loc847 = loc(fused[#loc515, #loc516])
#loc848 = loc(fused[#loc519, #loc520])
#loc849 = loc(fused[#loc521, #loc522])
#loc850 = loc(fused[#loc527, #loc528])
#loc851 = loc(fused[#loc529, #loc530])
#loc852 = loc(fused[#loc531, #loc532])
#loc853 = loc(fused[#loc533, #loc530])
#loc854 = loc(fused[#loc535, #loc536])
#loc855 = loc(fused[#loc538, #loc539])
#loc856 = loc(fused[#loc540, #loc541])
#loc857 = loc(fused[#loc543, #loc542])
#loc858 = loc(fused[#loc545, #loc544])
#loc859 = loc(fused[#loc548, #loc549])
#loc860 = loc(fused[#loc550, #loc551])
#loc861 = loc(fused[#loc553, #loc554])
#loc862 = loc(fused[#loc555, #loc556])
#loc863 = loc(fused[#loc557, #loc558])
#loc864 = loc(fused[#loc559, #loc551])
#loc865 = loc(fused[#loc561, #loc562])
#loc866 = loc(fused[#loc565, #loc566])
#loc867 = loc(fused[#loc567, #loc562])
#loc868 = loc(fused[#loc573, #loc574])
#loc869 = loc(fused[#loc575, #loc576])
#loc870 = loc(fused[#loc577, #loc578])
#loc871 = loc(fused[#loc579, #loc576])
#loc872 = loc(fused[#loc582, #loc583])
#loc873 = loc(fused[#loc585, #loc586])
#loc874 = loc(fused[#loc585, #loc587])
#loc875 = loc(fused[#loc590, #loc591])
#loc876 = loc(fused[#loc592, #loc593])
#loc877 = loc(fused[#loc594, #loc595])
#loc878 = loc(fused[#loc597, #loc598])
#loc879 = loc(fused[#loc599, #loc593])
#loc880 = loc(fused[#loc603, #loc601])
#loc881 = loc(fused[#loc607, #loc608])
#loc882 = loc(fused[#loc609, #loc610])
#loc883 = loc(fused[#loc612, #loc610])
#loc884 = loc(fused[#loc615, #loc613])
#loc885 = loc(fused[#loc619, #loc620])
#loc886 = loc(fused[#loc621, #loc622])
#loc887 = loc(fused[#loc624, #loc622])
#loc888 = loc(fused[#loc627, #loc625])
#loc889 = loc(fused[#loc629, #loc630])
#loc890 = loc(fused[#loc631, #loc632])
#loc891 = loc(fused[#loc633, #loc630])
#loc892 = loc(fused[#loc636, #loc637])
#loc893 = loc(fused[#loc638, #loc639])
#loc894 = loc(fused[#loc640, #loc637])
