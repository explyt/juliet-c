!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc3 = loc("../../../testcasesupport/std_testcase.h":96:16)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i}>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_16.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc87)
  cir.func linkonce_odr  @_ZN14_twoIntsStructC2Ev(%arg0: !cir.ptr<!ty__twoIntsStruct> loc("../../../testcasesupport/std_testcase.h":96:16)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc3)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc3)
    cir.return loc(#loc3)
  } loc(#loc3)
  cir.func private  @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc88)
  cir.func  @_ZN40CWE401_Memory_Leak__new_twoIntsStruct_163badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc90)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc10)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc91)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc14)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc14)
        cir.condition(%3) loc(#loc14)
      } do {
        %2 = cir.const #cir.int<8> : !u64i loc(#loc93)
        %3 = cir.call @_Znwm(%2) : (!u64i) -> !cir.ptr<!void> loc(#loc17)
        %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc93)
        cir.call @_ZN14_twoIntsStructC2Ev(%4) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr2) loc(#loc16)
        cir.store %4, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc94)
        %5 = cir.const #cir.int<0> : !s32i loc(#loc19)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc20)
        %7 = cir.get_member %6[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc21)
        cir.store %5, %7 : !s32i, !cir.ptr<!s32i> loc(#loc95)
        %8 = cir.const #cir.int<0> : !s32i loc(#loc22)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc23)
        %10 = cir.get_member %9[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc24)
        cir.store %8, %10 : !s32i, !cir.ptr<!s32i> loc(#loc96)
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc25)
        cir.call @printStructLine(%11) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc26)
        cir.break loc(#loc27)
      } loc(#loc92)
    } loc(#loc92)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc30)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc30)
        cir.condition(%3) loc(#loc30)
      } do {
        cir.break loc(#loc31)
      } loc(#loc97)
    } loc(#loc97)
    cir.return loc(#loc7)
  } loc(#loc89)
  cir.func private  @_ZdlPvm(!cir.ptr<!void>, !u64i) extra(#fn_attr2) loc(#loc98)
  cir.func internal private  @_ZN40CWE401_Memory_Leak__new_twoIntsStruct_16L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc100)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc38)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc101)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc42)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc42)
        cir.condition(%3) loc(#loc42)
      } do {
        %2 = cir.const #cir.int<8> : !u64i loc(#loc103)
        %3 = cir.call @_Znwm(%2) : (!u64i) -> !cir.ptr<!void> loc(#loc45)
        %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc103)
        cir.call @_ZN14_twoIntsStructC2Ev(%4) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr2) loc(#loc44)
        cir.store %4, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc104)
        %5 = cir.const #cir.int<0> : !s32i loc(#loc47)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc48)
        %7 = cir.get_member %6[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc21)
        cir.store %5, %7 : !s32i, !cir.ptr<!s32i> loc(#loc105)
        %8 = cir.const #cir.int<0> : !s32i loc(#loc49)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
        %10 = cir.get_member %9[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc24)
        cir.store %8, %10 : !s32i, !cir.ptr<!s32i> loc(#loc106)
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc51)
        cir.call @printStructLine(%11) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc52)
        cir.break loc(#loc53)
      } loc(#loc102)
    } loc(#loc102)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc56)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc56)
        cir.condition(%3) loc(#loc56)
      } do {
        %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc57)
        %3 = cir.cast(bitcast, %2 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc57)
        %4 = cir.const #cir.int<8> : !u64i loc(#loc45)
        cir.call @_ZdlPvm(%3, %4) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr2) loc(#loc45)
        cir.break loc(#loc58)
      } loc(#loc107)
    } loc(#loc107)
    cir.return loc(#loc35)
  } loc(#loc99)
  cir.func internal private  @_ZN40CWE401_Memory_Leak__new_twoIntsStruct_16L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc109)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc63)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc110)
    cir.scope {
      %2 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["dataGoodBuffer"] {alignment = 4 : i64} loc(#loc112)
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc69)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc69)
        cir.condition(%4) loc(#loc69)
      } do {
        cir.store %2, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc113)
        %3 = cir.const #cir.int<0> : !s32i loc(#loc72)
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc73)
        %5 = cir.get_member %4[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc21)
        cir.store %3, %5 : !s32i, !cir.ptr<!s32i> loc(#loc114)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc74)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc75)
        %8 = cir.get_member %7[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc24)
        cir.store %6, %8 : !s32i, !cir.ptr<!s32i> loc(#loc115)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc76)
        cir.call @printStructLine(%9) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc77)
        cir.break loc(#loc78)
      } loc(#loc111)
    } loc(#loc111)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc81)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc81)
        cir.condition(%3) loc(#loc81)
      } do {
        cir.break loc(#loc82)
      } loc(#loc116)
    } loc(#loc116)
    cir.return loc(#loc60)
  } loc(#loc108)
  cir.func  @_ZN40CWE401_Memory_Leak__new_twoIntsStruct_164goodEv() extra(#fn_attr1) {
    cir.call @_ZN40CWE401_Memory_Leak__new_twoIntsStruct_16L7goodB2GEv() : () -> () loc(#loc85)
    cir.call @_ZN40CWE401_Memory_Leak__new_twoIntsStruct_16L7goodG2BEv() : () -> () loc(#loc86)
    cir.return loc(#loc84)
  } loc(#loc117)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc2 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc6 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":28:1)
#loc7 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":48:1)
#loc8 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":30:5)
#loc9 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":30:21)
#loc10 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":31:12)
#loc11 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":31:5)
#loc12 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":32:5)
#loc13 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":41:5)
#loc14 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":32:11)
#loc15 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":35:16)
#loc16 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":35:20)
#loc17 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":28:6)
#loc18 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":35:9)
#loc19 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":37:24)
#loc20 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":37:9)
#loc21 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc22 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":38:24)
#loc23 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":38:9)
#loc24 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc25 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":39:25)
#loc26 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":39:9)
#loc27 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":40:9)
#loc28 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":42:5)
#loc29 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":47:5)
#loc30 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":42:11)
#loc31 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":46:9)
#loc32 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":140:1)
#loc33 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":141:41)
#loc34 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":55:1)
#loc35 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":75:1)
#loc36 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":57:5)
#loc37 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":57:21)
#loc38 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":58:12)
#loc39 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":58:5)
#loc40 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":59:5)
#loc41 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":68:5)
#loc42 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":59:11)
#loc43 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":62:16)
#loc44 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":62:20)
#loc45 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":55:13)
#loc46 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":62:9)
#loc47 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":64:24)
#loc48 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":64:9)
#loc49 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":65:24)
#loc50 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":65:9)
#loc51 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":66:25)
#loc52 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":66:9)
#loc53 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":67:9)
#loc54 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":69:5)
#loc55 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":74:5)
#loc56 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":69:11)
#loc57 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":72:16)
#loc58 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":73:9)
#loc59 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":78:1)
#loc60 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":99:1)
#loc61 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":80:5)
#loc62 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":80:21)
#loc63 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":81:12)
#loc64 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":81:5)
#loc65 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":82:5)
#loc66 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":92:5)
#loc67 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":85:9)
#loc68 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":85:23)
#loc69 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":82:11)
#loc70 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":86:9)
#loc71 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":86:17)
#loc72 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":88:24)
#loc73 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":88:9)
#loc74 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":89:24)
#loc75 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":89:9)
#loc76 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":90:25)
#loc77 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":90:9)
#loc78 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":91:9)
#loc79 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":93:5)
#loc80 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":98:5)
#loc81 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":93:11)
#loc82 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":97:9)
#loc83 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":101:1)
#loc84 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":105:1)
#loc85 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":103:5)
#loc86 = loc("CWE401_Memory_Leak__new_twoIntsStruct_16.cpp":104:5)
#loc87 = loc(fused[#loc1, #loc2])
#loc88 = loc(fused[#loc4, #loc5])
#loc89 = loc(fused[#loc6, #loc7])
#loc90 = loc(fused[#loc8, #loc9])
#loc91 = loc(fused[#loc11, #loc10])
#loc92 = loc(fused[#loc12, #loc13])
#loc93 = loc(fused[#loc15, #loc16])
#loc94 = loc(fused[#loc18, #loc16])
#loc95 = loc(fused[#loc20, #loc19])
#loc96 = loc(fused[#loc23, #loc22])
#loc97 = loc(fused[#loc28, #loc29])
#loc98 = loc(fused[#loc32, #loc33])
#loc99 = loc(fused[#loc34, #loc35])
#loc100 = loc(fused[#loc36, #loc37])
#loc101 = loc(fused[#loc39, #loc38])
#loc102 = loc(fused[#loc40, #loc41])
#loc103 = loc(fused[#loc43, #loc44])
#loc104 = loc(fused[#loc46, #loc44])
#loc105 = loc(fused[#loc48, #loc47])
#loc106 = loc(fused[#loc50, #loc49])
#loc107 = loc(fused[#loc54, #loc55])
#loc108 = loc(fused[#loc59, #loc60])
#loc109 = loc(fused[#loc61, #loc62])
#loc110 = loc(fused[#loc64, #loc63])
#loc111 = loc(fused[#loc65, #loc66])
#loc112 = loc(fused[#loc67, #loc68])
#loc113 = loc(fused[#loc70, #loc71])
#loc114 = loc(fused[#loc73, #loc72])
#loc115 = loc(fused[#loc75, #loc74])
#loc116 = loc(fused[#loc79, #loc80])
#loc117 = loc(fused[#loc83, #loc84])
