!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc8 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":25:23)
#loc9 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":25:28)
#loc35 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":50:27)
#loc36 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":50:32)
#loc59 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":71:27)
#loc60 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":71:32)
#loc110 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":117:10)
#loc111 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":117:14)
#loc112 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":117:20)
#loc113 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":117:32)
#loc129 = loc(fused[#loc8, #loc9])
#loc139 = loc(fused[#loc35, #loc36])
#loc149 = loc(fused[#loc59, #loc60])
#loc166 = loc(fused[#loc110, #loc111])
#loc167 = loc(fused[#loc112, #loc113])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc23_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc126)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc127)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func internal private @_ZN47CWE190_Integer_Overflow__int_fscanf_multiply_43L9badSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc8, #loc9])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc129)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc10)
    %1 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc11)
    %2 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc127)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc12)
    %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc13)
    %7 = cir.call @__isoc23_fscanf(%3, %5, %6) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc11)
    cir.return loc(#loc7)
  } loc(#loc128)
  cir.func private @printIntLine(!s32i) loc(#loc130)
  cir.func @_ZN47CWE190_Integer_Overflow__int_fscanf_multiply_433badEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc132)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc20)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc133)
    cir.call @_ZN47CWE190_Integer_Overflow__int_fscanf_multiply_43L9badSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc22)
    cir.scope {
      %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc25)
      %3 = cir.const #cir.int<0> : !s32i loc(#loc26)
      %4 = cir.cmp(gt, %2, %3) : !s32i, !cir.bool loc(#loc135)
      cir.if %4 {
        %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc137)
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc30)
        %7 = cir.const #cir.int<2> : !s32i loc(#loc29)
        %8 = cir.binop(mul, %6, %7) nsw : !s32i loc(#loc30)
        cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc137)
        %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc31)
        cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc32)
      } loc(#loc136)
    } loc(#loc134)
    cir.return loc(#loc17)
  } loc(#loc131)
  cir.func internal private @_ZN47CWE190_Integer_Overflow__int_fscanf_multiply_43L13goodG2BSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc35, #loc36])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc139)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc37)
    %1 = cir.const #cir.int<2> : !s32i loc(#loc38)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc39)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc140)
    cir.return loc(#loc34)
  } loc(#loc138)
  cir.func internal private @_ZN47CWE190_Integer_Overflow__int_fscanf_multiply_43L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc142)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc44)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc143)
    cir.call @_ZN47CWE190_Integer_Overflow__int_fscanf_multiply_43L13goodG2BSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc46)
    cir.scope {
      %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc49)
      %3 = cir.const #cir.int<0> : !s32i loc(#loc50)
      %4 = cir.cmp(gt, %2, %3) : !s32i, !cir.bool loc(#loc145)
      cir.if %4 {
        %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc147)
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc54)
        %7 = cir.const #cir.int<2> : !s32i loc(#loc53)
        %8 = cir.binop(mul, %6, %7) nsw : !s32i loc(#loc54)
        cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc147)
        %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc55)
        cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc56)
      } loc(#loc146)
    } loc(#loc144)
    cir.return loc(#loc41)
  } loc(#loc141)
  cir.func internal private @_ZN47CWE190_Integer_Overflow__int_fscanf_multiply_43L13goodB2GSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc59, #loc60])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc149)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc61)
    %1 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc62)
    %2 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc127)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc63)
    %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc64)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc64)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc65)
    %7 = cir.call @__isoc23_fscanf(%3, %5, %6) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc62)
    cir.return loc(#loc58)
  } loc(#loc148)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc66)
  cir.func internal private @_ZN47CWE190_Integer_Overflow__int_fscanf_multiply_43L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc151)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc71)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    cir.call @_ZN47CWE190_Integer_Overflow__int_fscanf_multiply_43L13goodB2GSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc73)
    cir.scope {
      %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc76)
      %3 = cir.const #cir.int<0> : !s32i loc(#loc77)
      %4 = cir.cmp(gt, %2, %3) : !s32i, !cir.bool loc(#loc154)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc81)
          %6 = cir.const #cir.int<2147483647> : !s32i loc(#loc82)
          %7 = cir.const #cir.int<2> : !s32i loc(#loc83)
          %8 = cir.binop(div, %6, %7) : !s32i loc(#loc157)
          %9 = cir.cmp(lt, %5, %8) : !s32i, !cir.bool loc(#loc158)
          cir.if %9 {
            %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc160)
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc90)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc89)
            %13 = cir.binop(mul, %11, %12) nsw : !s32i loc(#loc90)
            cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc160)
            %14 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc91)
            cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc92)
          } else {
            %10 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc66)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc66)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc93)
          } loc(#loc159)
        } loc(#loc156)
      } loc(#loc155)
    } loc(#loc153)
    cir.return loc(#loc68)
  } loc(#loc150)
  cir.func @_ZN47CWE190_Integer_Overflow__int_fscanf_multiply_434goodEv() extra(#fn_attr) {
    cir.call @_ZN47CWE190_Integer_Overflow__int_fscanf_multiply_43L7goodG2BEv() : () -> () loc(#loc96)
    cir.call @_ZN47CWE190_Integer_Overflow__int_fscanf_multiply_43L7goodB2GEv() : () -> () loc(#loc97)
    cir.return loc(#loc95)
  } loc(#loc161)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc162)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc163)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc164)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc104)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc105)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc106)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc107)
  cir.func @main(%arg0: !s32i loc(fused[#loc110, #loc111]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc112, #loc113])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc166)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc167)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc109)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc114)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc114)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc115)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc116)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc116)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc117)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc104)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc104)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    cir.call @_ZN47CWE190_Integer_Overflow__int_fscanf_multiply_434goodEv() : () -> () loc(#loc119)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc105)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc105)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc106)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc106)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc121)
    cir.call @_ZN47CWE190_Integer_Overflow__int_fscanf_multiply_433badEv() : () -> () loc(#loc122)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc107)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc107)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc123)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc124)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc168)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc168)
    cir.return %15 : !s32i loc(#loc168)
  } loc(#loc165)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":442:1)
#loc2 = loc("/usr/include/stdio.h":444:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":28:19)
#loc6 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":25:1)
#loc7 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":29:1)
#loc10 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":26:1)
#loc11 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":28:5)
#loc12 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":28:12)
#loc13 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":28:26)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc16 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":31:1)
#loc17 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":43:1)
#loc18 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":33:5)
#loc19 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":33:9)
#loc20 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":35:12)
#loc21 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":35:5)
#loc22 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":36:5)
#loc23 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":37:5)
#loc24 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":42:5)
#loc25 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":37:8)
#loc26 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":37:15)
#loc27 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":38:5)
#loc28 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":40:9)
#loc29 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":40:29)
#loc30 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":40:22)
#loc31 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":41:22)
#loc32 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":41:9)
#loc33 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":50:1)
#loc34 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":54:1)
#loc37 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":51:1)
#loc38 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":53:12)
#loc39 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":53:5)
#loc40 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":56:1)
#loc41 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":68:1)
#loc42 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":58:5)
#loc43 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":58:9)
#loc44 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":60:12)
#loc45 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":60:5)
#loc46 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":61:5)
#loc47 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":62:5)
#loc48 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":67:5)
#loc49 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":62:8)
#loc50 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":62:15)
#loc51 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":63:5)
#loc52 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":65:9)
#loc53 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":65:29)
#loc54 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":65:22)
#loc55 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":66:22)
#loc56 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":66:9)
#loc57 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":71:1)
#loc58 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":75:1)
#loc61 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":72:1)
#loc62 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":74:5)
#loc63 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":74:12)
#loc64 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":74:19)
#loc65 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":74:26)
#loc66 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":93:23)
#loc67 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":77:1)
#loc68 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":96:1)
#loc69 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":79:5)
#loc70 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":79:9)
#loc71 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":81:12)
#loc72 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":81:5)
#loc73 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":82:5)
#loc74 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":83:5)
#loc75 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":95:5)
#loc76 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":83:8)
#loc77 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":83:15)
#loc78 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":84:5)
#loc79 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":86:9)
#loc80 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":94:9)
#loc81 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":86:13)
#loc82 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":86:21)
#loc83 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":86:29)
#loc84 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":86:30)
#loc85 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":87:9)
#loc86 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":90:9)
#loc87 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":92:9)
#loc88 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":88:13)
#loc89 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":88:33)
#loc90 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":88:26)
#loc91 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":89:26)
#loc92 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":89:13)
#loc93 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":93:13)
#loc94 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":98:1)
#loc95 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":102:1)
#loc96 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":100:5)
#loc97 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":101:5)
#loc98 = loc("/usr/include/stdlib.h":575:1)
#loc99 = loc("/usr/include/stdlib.h":575:41)
#loc100 = loc("/usr/include/time.h":76:1)
#loc101 = loc("/usr/include/time.h":76:38)
#loc102 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc103 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc104 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":122:15)
#loc105 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":124:15)
#loc106 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":127:15)
#loc107 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":129:15)
#loc108 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":117:1)
#loc109 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":132:1)
#loc114 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":118:1)
#loc115 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":120:27)
#loc116 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":120:22)
#loc117 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":120:5)
#loc118 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":122:5)
#loc119 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":123:5)
#loc120 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":124:5)
#loc121 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":127:5)
#loc122 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":128:5)
#loc123 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":129:5)
#loc124 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":131:12)
#loc125 = loc("CWE190_Integer_Overflow__int_fscanf_multiply_43.cpp":131:5)
#loc126 = loc(fused[#loc1, #loc2])
#loc127 = loc(fused[#loc3, #loc4])
#loc128 = loc(fused[#loc6, #loc7])
#loc130 = loc(fused[#loc14, #loc15])
#loc131 = loc(fused[#loc16, #loc17])
#loc132 = loc(fused[#loc18, #loc19])
#loc133 = loc(fused[#loc21, #loc20])
#loc134 = loc(fused[#loc23, #loc24])
#loc135 = loc(fused[#loc25, #loc26])
#loc136 = loc(fused[#loc27, #loc24])
#loc137 = loc(fused[#loc28, #loc29])
#loc138 = loc(fused[#loc33, #loc34])
#loc140 = loc(fused[#loc39, #loc38])
#loc141 = loc(fused[#loc40, #loc41])
#loc142 = loc(fused[#loc42, #loc43])
#loc143 = loc(fused[#loc45, #loc44])
#loc144 = loc(fused[#loc47, #loc48])
#loc145 = loc(fused[#loc49, #loc50])
#loc146 = loc(fused[#loc51, #loc48])
#loc147 = loc(fused[#loc52, #loc53])
#loc148 = loc(fused[#loc57, #loc58])
#loc150 = loc(fused[#loc67, #loc68])
#loc151 = loc(fused[#loc69, #loc70])
#loc152 = loc(fused[#loc72, #loc71])
#loc153 = loc(fused[#loc74, #loc75])
#loc154 = loc(fused[#loc76, #loc77])
#loc155 = loc(fused[#loc78, #loc75])
#loc156 = loc(fused[#loc79, #loc80])
#loc157 = loc(fused[#loc82, #loc83])
#loc158 = loc(fused[#loc81, #loc84])
#loc159 = loc(fused[#loc85, #loc86, #loc87, #loc80])
#loc160 = loc(fused[#loc88, #loc89])
#loc161 = loc(fused[#loc94, #loc95])
#loc162 = loc(fused[#loc98, #loc99])
#loc163 = loc(fused[#loc100, #loc101])
#loc164 = loc(fused[#loc102, #loc103])
#loc165 = loc(fused[#loc108, #loc109])
#loc168 = loc(fused[#loc125, #loc124])
