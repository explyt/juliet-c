!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc93 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":154:10)
#loc94 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":154:14)
#loc95 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":154:20)
#loc96 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":154:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc268 = loc(fused[#loc93, #loc94])
#loc269 = loc(fused[#loc95, #loc96])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc235)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc236)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc237)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc238)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc239)
  cir.func no_proto @CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc241)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc15)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc242)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc244)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc244)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc19)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc19)
      cir.if %5 {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc24)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc25)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc25)
        %9 = cir.const #cir.int<8> : !u64i loc(#loc246)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc247)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc24)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc248)
        cir.store %12, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc249)
        cir.scope {
          %26 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
          %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc33)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc33)
          %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc251)
          cir.if %29 {
            %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc35)
            %31 = cir.const #cir.int<1> : !s32i loc(#loc36)
            %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc37)
            cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc35)
          } loc(#loc252)
        } loc(#loc250)
        %13 = cir.const #cir.int<0> : !s32i loc(#loc38)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
        %15 = cir.const #cir.int<0> : !s32i loc(#loc40)
        %16 = cir.ptr_stride(%14 : !cir.ptr<!ty__twoIntsStruct>, %15 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
        %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
        cir.store %13, %17 : !s32i, !cir.ptr<!s32i> loc(#loc253)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc43)
        %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc44)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc45)
        %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc46)
        %22 = cir.get_member %21[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc47)
        cir.store %18, %22 : !s32i, !cir.ptr<!s32i> loc(#loc254)
        %23 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc48)
        %24 = cir.const #cir.int<0> : !s32i loc(#loc49)
        %25 = cir.ptr_stride(%23 : !cir.ptr<!ty__twoIntsStruct>, %24 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
        cir.call @printStructLine(%25) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc51)
      } else {
        %6 = cir.const #cir.int<100> : !s32i loc(#loc52)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc52)
        %8 = cir.const #cir.int<8> : !u64i loc(#loc52)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc52)
        %10 = cir.alloca !u8i, !cir.ptr<!u8i>, %9 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc52)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc52)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc52)
        cir.store %12, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc255)
        %13 = cir.const #cir.int<0> : !s32i loc(#loc54)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc55)
        %15 = cir.const #cir.int<0> : !s32i loc(#loc56)
        %16 = cir.ptr_stride(%14 : !cir.ptr<!ty__twoIntsStruct>, %15 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc57)
        %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
        cir.store %13, %17 : !s32i, !cir.ptr<!s32i> loc(#loc256)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc58)
        %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc59)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc60)
        %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc61)
        %22 = cir.get_member %21[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc47)
        cir.store %18, %22 : !s32i, !cir.ptr<!s32i> loc(#loc257)
        %23 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc62)
        %24 = cir.const #cir.int<0> : !s32i loc(#loc63)
        %25 = cir.ptr_stride(%23 : !cir.ptr<!ty__twoIntsStruct>, %24 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc64)
        cir.call @printStructLine(%25) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc65)
      } loc(#loc245)
    } loc(#loc243)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc259)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc259)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc68)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc68)
      cir.if %5 {
      } else {
        %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc73)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc74)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc74)
        cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc73)
      } loc(#loc260)
    } loc(#loc258)
    cir.return loc(#loc12)
  } loc(#loc240)
  cir.func no_proto @CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc262)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc77)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc263)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc79)
    cir.return loc(#loc76)
  } loc(#loc261)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc264)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc265)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc266)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc87)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc88)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc89)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc90)
  cir.func @main(%arg0: !s32i loc(fused[#loc93, #loc94]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc95, #loc96])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc268)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc269)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc92)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc97)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc97)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc98)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc99)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc99)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc100)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc87)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    %8 = cir.get_global @CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc270)
    cir.call @CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12_good() : () -> () loc(#loc102)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc88)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc89)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc89)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc105)
    %13 = cir.get_global @CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc271)
    cir.call @CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12_bad() : () -> () loc(#loc106)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc90)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc90)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc109)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc272)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc272)
    cir.return %17 : !s32i loc(#loc272)
  } loc(#loc267)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc274)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc115)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc275)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc277)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc277)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc119)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc119)
      cir.if %5 {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc124)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc125)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc125)
        %9 = cir.const #cir.int<8> : !u64i loc(#loc279)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc280)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc124)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc281)
        cir.store %12, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc282)
        cir.scope {
          %26 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc132)
          %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc133)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc133)
          %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc284)
          cir.if %29 {
            %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc135)
            %31 = cir.const #cir.int<1> : !s32i loc(#loc136)
            %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc137)
            cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc135)
          } loc(#loc285)
        } loc(#loc283)
        %13 = cir.const #cir.int<0> : !s32i loc(#loc138)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc139)
        %15 = cir.const #cir.int<0> : !s32i loc(#loc140)
        %16 = cir.ptr_stride(%14 : !cir.ptr<!ty__twoIntsStruct>, %15 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc141)
        %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
        cir.store %13, %17 : !s32i, !cir.ptr<!s32i> loc(#loc286)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc142)
        %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc143)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc144)
        %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc145)
        %22 = cir.get_member %21[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc47)
        cir.store %18, %22 : !s32i, !cir.ptr<!s32i> loc(#loc287)
        %23 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc146)
        %24 = cir.const #cir.int<0> : !s32i loc(#loc147)
        %25 = cir.ptr_stride(%23 : !cir.ptr<!ty__twoIntsStruct>, %24 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc148)
        cir.call @printStructLine(%25) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc149)
      } else {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc150)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc151)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc151)
        %9 = cir.const #cir.int<8> : !u64i loc(#loc288)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc289)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc150)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc290)
        cir.store %12, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc291)
        cir.scope {
          %26 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc158)
          %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc159)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc159)
          %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc293)
          cir.if %29 {
            %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc161)
            %31 = cir.const #cir.int<1> : !s32i loc(#loc162)
            %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc163)
            cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc161)
          } loc(#loc294)
        } loc(#loc292)
        %13 = cir.const #cir.int<0> : !s32i loc(#loc164)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc165)
        %15 = cir.const #cir.int<0> : !s32i loc(#loc166)
        %16 = cir.ptr_stride(%14 : !cir.ptr<!ty__twoIntsStruct>, %15 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc167)
        %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
        cir.store %13, %17 : !s32i, !cir.ptr<!s32i> loc(#loc295)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc168)
        %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc169)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc170)
        %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc171)
        %22 = cir.get_member %21[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc47)
        cir.store %18, %22 : !s32i, !cir.ptr<!s32i> loc(#loc296)
        %23 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc172)
        %24 = cir.const #cir.int<0> : !s32i loc(#loc173)
        %25 = cir.ptr_stride(%23 : !cir.ptr<!ty__twoIntsStruct>, %24 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc174)
        cir.call @printStructLine(%25) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc175)
      } loc(#loc278)
    } loc(#loc276)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc298)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc298)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc178)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc178)
      cir.if %5 {
        %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc183)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc184)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc184)
        cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc183)
      } else {
        %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc185)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc186)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc186)
        cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc185)
      } loc(#loc299)
    } loc(#loc297)
    cir.return loc(#loc112)
  } loc(#loc273)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc301)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc191)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc302)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc304)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc304)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc195)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc195)
      cir.if %5 {
        %6 = cir.const #cir.int<100> : !s32i loc(#loc200)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc200)
        %8 = cir.const #cir.int<8> : !u64i loc(#loc200)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc200)
        %10 = cir.alloca !u8i, !cir.ptr<!u8i>, %9 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc200)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc200)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc200)
        cir.store %12, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc306)
        %13 = cir.const #cir.int<0> : !s32i loc(#loc202)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc203)
        %15 = cir.const #cir.int<0> : !s32i loc(#loc204)
        %16 = cir.ptr_stride(%14 : !cir.ptr<!ty__twoIntsStruct>, %15 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc205)
        %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
        cir.store %13, %17 : !s32i, !cir.ptr<!s32i> loc(#loc307)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc206)
        %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc207)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc208)
        %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc209)
        %22 = cir.get_member %21[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc47)
        cir.store %18, %22 : !s32i, !cir.ptr<!s32i> loc(#loc308)
        %23 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc210)
        %24 = cir.const #cir.int<0> : !s32i loc(#loc211)
        %25 = cir.ptr_stride(%23 : !cir.ptr<!ty__twoIntsStruct>, %24 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc212)
        cir.call @printStructLine(%25) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc213)
      } else {
        %6 = cir.const #cir.int<100> : !s32i loc(#loc214)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc214)
        %8 = cir.const #cir.int<8> : !u64i loc(#loc214)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc214)
        %10 = cir.alloca !u8i, !cir.ptr<!u8i>, %9 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc214)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc214)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc214)
        cir.store %12, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc309)
        %13 = cir.const #cir.int<0> : !s32i loc(#loc216)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc217)
        %15 = cir.const #cir.int<0> : !s32i loc(#loc218)
        %16 = cir.ptr_stride(%14 : !cir.ptr<!ty__twoIntsStruct>, %15 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc219)
        %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
        cir.store %13, %17 : !s32i, !cir.ptr<!s32i> loc(#loc310)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc220)
        %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc221)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc222)
        %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc223)
        %22 = cir.get_member %21[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc47)
        cir.store %18, %22 : !s32i, !cir.ptr<!s32i> loc(#loc311)
        %23 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc224)
        %24 = cir.const #cir.int<0> : !s32i loc(#loc225)
        %25 = cir.ptr_stride(%23 : !cir.ptr<!ty__twoIntsStruct>, %24 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc226)
        cir.call @printStructLine(%25) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc227)
      } loc(#loc305)
    } loc(#loc303)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc313)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc313)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc230)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc230)
      cir.if %5 {
      } else {
      } loc(#loc314)
    } loc(#loc312)
    cir.return loc(#loc188)
  } loc(#loc300)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":24:1)
#loc12 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":57:1)
#loc13 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":26:5)
#loc14 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":26:29)
#loc15 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":27:12)
#loc16 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":27:5)
#loc17 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":28:5)
#loc18 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":46:5)
#loc19 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":28:8)
#loc20 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":28:33)
#loc21 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":29:5)
#loc22 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":37:5)
#loc23 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":39:5)
#loc24 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":31:41)
#loc25 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":31:48)
#loc26 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":31:52)
#loc27 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":31:80)
#loc28 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":31:81)
#loc29 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":31:9)
#loc30 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":32:9)
#loc31 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":32:37)
#loc32 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":32:13)
#loc33 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":32:21)
#loc34 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":32:27)
#loc35 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":32:28)
#loc36 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":32:34)
#loc37 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":32:33)
#loc38 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":34:26)
#loc39 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":34:9)
#loc40 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":34:14)
#loc41 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":34:15)
#loc42 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc43 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":35:26)
#loc44 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":35:9)
#loc45 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":35:14)
#loc46 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":35:15)
#loc47 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc48 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":36:43)
#loc49 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":36:48)
#loc50 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":36:49)
#loc51 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":36:9)
#loc52 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":41:41)
#loc53 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":41:9)
#loc54 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":43:26)
#loc55 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":43:9)
#loc56 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":43:14)
#loc57 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":43:15)
#loc58 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":44:26)
#loc59 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":44:9)
#loc60 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":44:14)
#loc61 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":44:15)
#loc62 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":45:43)
#loc63 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":45:48)
#loc64 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":45:49)
#loc65 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":45:9)
#loc66 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":47:5)
#loc67 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":56:5)
#loc68 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":47:8)
#loc69 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":47:33)
#loc70 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":48:5)
#loc71 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":51:5)
#loc72 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":53:5)
#loc73 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":55:9)
#loc74 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":55:14)
#loc75 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":139:1)
#loc76 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":143:1)
#loc77 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":141:5)
#loc78 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":141:13)
#loc79 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":142:5)
#loc80 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":142:13)
#loc81 = loc("/usr/include/stdlib.h":575:1)
#loc82 = loc("/usr/include/stdlib.h":575:41)
#loc83 = loc("/usr/include/time.h":76:1)
#loc84 = loc("/usr/include/time.h":76:38)
#loc85 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc86 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc87 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":159:15)
#loc88 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":161:15)
#loc89 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":164:15)
#loc90 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":166:15)
#loc91 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":154:1)
#loc92 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":169:1)
#loc97 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":155:1)
#loc98 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":157:27)
#loc99 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":157:22)
#loc100 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":157:5)
#loc101 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":159:5)
#loc102 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":160:5)
#loc103 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":160:61)
#loc104 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":161:5)
#loc105 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":164:5)
#loc106 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":165:5)
#loc107 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":165:60)
#loc108 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":166:5)
#loc109 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":168:12)
#loc110 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":168:5)
#loc111 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":66:1)
#loc112 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":100:1)
#loc113 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":68:5)
#loc114 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":68:29)
#loc115 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":69:12)
#loc116 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":69:5)
#loc117 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":70:5)
#loc118 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":89:5)
#loc119 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":70:8)
#loc120 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":70:33)
#loc121 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":71:5)
#loc122 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":79:5)
#loc123 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":81:5)
#loc124 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":73:41)
#loc125 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":73:48)
#loc126 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":73:52)
#loc127 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":73:80)
#loc128 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":73:81)
#loc129 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":73:9)
#loc130 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":74:9)
#loc131 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":74:37)
#loc132 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":74:13)
#loc133 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":74:21)
#loc134 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":74:27)
#loc135 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":74:28)
#loc136 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":74:34)
#loc137 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":74:33)
#loc138 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":76:26)
#loc139 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":76:9)
#loc140 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":76:14)
#loc141 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":76:15)
#loc142 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":77:26)
#loc143 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":77:9)
#loc144 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":77:14)
#loc145 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":77:15)
#loc146 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":78:43)
#loc147 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":78:48)
#loc148 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":78:49)
#loc149 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":78:9)
#loc150 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":83:41)
#loc151 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":83:48)
#loc152 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":83:52)
#loc153 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":83:80)
#loc154 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":83:81)
#loc155 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":83:9)
#loc156 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":84:9)
#loc157 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":84:37)
#loc158 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":84:13)
#loc159 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":84:21)
#loc160 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":84:27)
#loc161 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":84:28)
#loc162 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":84:34)
#loc163 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":84:33)
#loc164 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":86:26)
#loc165 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":86:9)
#loc166 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":86:14)
#loc167 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":86:15)
#loc168 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":87:26)
#loc169 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":87:9)
#loc170 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":87:14)
#loc171 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":87:15)
#loc172 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":88:43)
#loc173 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":88:48)
#loc174 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":88:49)
#loc175 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":88:9)
#loc176 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":90:5)
#loc177 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":99:5)
#loc178 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":90:8)
#loc179 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":90:33)
#loc180 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":91:5)
#loc181 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":94:5)
#loc182 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":96:5)
#loc183 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":93:9)
#loc184 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":93:14)
#loc185 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":98:9)
#loc186 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":98:14)
#loc187 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":105:1)
#loc188 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":137:1)
#loc189 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":107:5)
#loc190 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":107:29)
#loc191 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":108:12)
#loc192 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":108:5)
#loc193 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":109:5)
#loc194 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":126:5)
#loc195 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":109:8)
#loc196 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":109:33)
#loc197 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":110:5)
#loc198 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":117:5)
#loc199 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":119:5)
#loc200 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":112:41)
#loc201 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":112:9)
#loc202 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":114:26)
#loc203 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":114:9)
#loc204 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":114:14)
#loc205 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":114:15)
#loc206 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":115:26)
#loc207 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":115:9)
#loc208 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":115:14)
#loc209 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":115:15)
#loc210 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":116:43)
#loc211 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":116:48)
#loc212 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":116:49)
#loc213 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":116:9)
#loc214 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":121:41)
#loc215 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":121:9)
#loc216 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":123:26)
#loc217 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":123:9)
#loc218 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":123:14)
#loc219 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":123:15)
#loc220 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":124:26)
#loc221 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":124:9)
#loc222 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":124:14)
#loc223 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":124:15)
#loc224 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":125:43)
#loc225 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":125:48)
#loc226 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":125:49)
#loc227 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":125:9)
#loc228 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":127:5)
#loc229 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":136:5)
#loc230 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":127:8)
#loc231 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":127:33)
#loc232 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":128:5)
#loc233 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":131:5)
#loc234 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c":133:5)
#loc235 = loc(fused[#loc1, #loc2])
#loc236 = loc(fused[#loc3, #loc4])
#loc237 = loc(fused[#loc5, #loc6])
#loc238 = loc(fused[#loc7, #loc8])
#loc239 = loc(fused[#loc9, #loc10])
#loc240 = loc(fused[#loc11, #loc12])
#loc241 = loc(fused[#loc13, #loc14])
#loc242 = loc(fused[#loc16, #loc15])
#loc243 = loc(fused[#loc17, #loc18])
#loc244 = loc(fused[#loc19, #loc20])
#loc245 = loc(fused[#loc21, #loc22, #loc23, #loc18])
#loc246 = loc(fused[#loc26, #loc27])
#loc247 = loc(fused[#loc25, #loc27])
#loc248 = loc(fused[#loc24, #loc28])
#loc249 = loc(fused[#loc29, #loc28])
#loc250 = loc(fused[#loc30, #loc31])
#loc251 = loc(fused[#loc32, #loc33])
#loc252 = loc(fused[#loc34, #loc31])
#loc253 = loc(fused[#loc39, #loc38])
#loc254 = loc(fused[#loc44, #loc43])
#loc255 = loc(fused[#loc53, #loc52])
#loc256 = loc(fused[#loc55, #loc54])
#loc257 = loc(fused[#loc59, #loc58])
#loc258 = loc(fused[#loc66, #loc67])
#loc259 = loc(fused[#loc68, #loc69])
#loc260 = loc(fused[#loc70, #loc71, #loc72, #loc67])
#loc261 = loc(fused[#loc75, #loc76])
#loc262 = loc(fused[#loc77, #loc78])
#loc263 = loc(fused[#loc79, #loc80])
#loc264 = loc(fused[#loc81, #loc82])
#loc265 = loc(fused[#loc83, #loc84])
#loc266 = loc(fused[#loc85, #loc86])
#loc267 = loc(fused[#loc91, #loc92])
#loc270 = loc(fused[#loc102, #loc103])
#loc271 = loc(fused[#loc106, #loc107])
#loc272 = loc(fused[#loc110, #loc109])
#loc273 = loc(fused[#loc111, #loc112])
#loc274 = loc(fused[#loc113, #loc114])
#loc275 = loc(fused[#loc116, #loc115])
#loc276 = loc(fused[#loc117, #loc118])
#loc277 = loc(fused[#loc119, #loc120])
#loc278 = loc(fused[#loc121, #loc122, #loc123, #loc118])
#loc279 = loc(fused[#loc126, #loc127])
#loc280 = loc(fused[#loc125, #loc127])
#loc281 = loc(fused[#loc124, #loc128])
#loc282 = loc(fused[#loc129, #loc128])
#loc283 = loc(fused[#loc130, #loc131])
#loc284 = loc(fused[#loc132, #loc133])
#loc285 = loc(fused[#loc134, #loc131])
#loc286 = loc(fused[#loc139, #loc138])
#loc287 = loc(fused[#loc143, #loc142])
#loc288 = loc(fused[#loc152, #loc153])
#loc289 = loc(fused[#loc151, #loc153])
#loc290 = loc(fused[#loc150, #loc154])
#loc291 = loc(fused[#loc155, #loc154])
#loc292 = loc(fused[#loc156, #loc157])
#loc293 = loc(fused[#loc158, #loc159])
#loc294 = loc(fused[#loc160, #loc157])
#loc295 = loc(fused[#loc165, #loc164])
#loc296 = loc(fused[#loc169, #loc168])
#loc297 = loc(fused[#loc176, #loc177])
#loc298 = loc(fused[#loc178, #loc179])
#loc299 = loc(fused[#loc180, #loc181, #loc182, #loc177])
#loc300 = loc(fused[#loc187, #loc188])
#loc301 = loc(fused[#loc189, #loc190])
#loc302 = loc(fused[#loc192, #loc191])
#loc303 = loc(fused[#loc193, #loc194])
#loc304 = loc(fused[#loc195, #loc196])
#loc305 = loc(fused[#loc197, #loc198, #loc199, #loc194])
#loc306 = loc(fused[#loc201, #loc200])
#loc307 = loc(fused[#loc203, #loc202])
#loc308 = loc(fused[#loc207, #loc206])
#loc309 = loc(fused[#loc215, #loc214])
#loc310 = loc(fused[#loc217, #loc216])
#loc311 = loc(fused[#loc221, #loc220])
#loc312 = loc(fused[#loc228, #loc229])
#loc313 = loc(fused[#loc230, #loc231])
#loc314 = loc(fused[#loc232, #loc233, #loc234, #loc229])
