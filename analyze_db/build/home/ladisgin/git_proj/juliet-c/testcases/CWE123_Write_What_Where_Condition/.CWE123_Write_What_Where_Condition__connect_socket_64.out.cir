!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc105 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":101:44)
#loc136 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":157:10)
#loc137 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":157:14)
#loc138 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":157:20)
#loc139 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":157:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc231 = loc(fused[#loc136, #loc137])
#loc232 = loc(fused[#loc138, #loc139])
!ty__linkedList = !cir.struct<struct "_linkedList" {!cir.ptr<!cir.struct<struct "_linkedList">>, !cir.ptr<!cir.struct<struct "_linkedList">>}>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
!ty__badStruct = !cir.struct<struct "_badStruct" {!ty__linkedList}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE123_Write_What_Where_Condition/CWE123_Write_What_Where_Condition__connect_socket_64a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc177)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc178)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc179)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc180)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc181)
  cir.func private @close(!s32i) -> !s32i loc(#loc182)
  cir.func private @CWE123_Write_What_Where_Condition__connect_socket_64b_badSink(!cir.ptr<!void>) loc(#loc183)
  cir.func no_proto @CWE123_Write_What_Where_Condition__connect_socket_64_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc185)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc186)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc187)
    %3 = cir.alloca !ty__badStruct, !cir.ptr<!ty__badStruct>, ["data"] {alignment = 8 : i64} loc(#loc188)
    %4 = cir.alloca !ty__linkedList, !cir.ptr<!ty__linkedList>, ["head", init] {alignment = 8 : i64} loc(#loc189)
    %5 = cir.get_member %4[0] {name = "next"} : !cir.ptr<!ty__linkedList> -> !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc28)
    cir.store %4, %5 : !cir.ptr<!ty__linkedList>, !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc190)
    %6 = cir.get_member %4[1] {name = "prev"} : !cir.ptr<!ty__linkedList> -> !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc31)
    cir.store %4, %6 : !cir.ptr<!ty__linkedList>, !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc191)
    %7 = cir.get_member %4[0] {name = "next"} : !cir.ptr<!ty__linkedList> -> !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc28)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__linkedList>>, !cir.ptr<!ty__linkedList> loc(#loc34)
    %9 = cir.get_member %3[0] {name = "list"} : !cir.ptr<!ty__badStruct> -> !cir.ptr<!ty__linkedList> loc(#loc35)
    %10 = cir.get_member %9[0] {name = "next"} : !cir.ptr<!ty__linkedList> -> !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc28)
    cir.store %8, %10 : !cir.ptr<!ty__linkedList>, !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc192)
    %11 = cir.get_member %4[1] {name = "prev"} : !cir.ptr<!ty__linkedList> -> !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc31)
    %12 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__linkedList>>, !cir.ptr<!ty__linkedList> loc(#loc37)
    %13 = cir.get_member %3[0] {name = "list"} : !cir.ptr<!ty__badStruct> -> !cir.ptr<!ty__linkedList> loc(#loc35)
    %14 = cir.get_member %13[1] {name = "prev"} : !cir.ptr<!ty__linkedList> -> !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc31)
    cir.store %12, %14 : !cir.ptr<!ty__linkedList>, !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc193)
    %15 = cir.get_member %3[0] {name = "list"} : !cir.ptr<!ty__badStruct> -> !cir.ptr<!ty__linkedList> loc(#loc35)
    %16 = cir.get_member %4[0] {name = "next"} : !cir.ptr<!ty__linkedList> -> !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc28)
    cir.store %15, %16 : !cir.ptr<!ty__linkedList>, !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc194)
    %17 = cir.get_member %3[0] {name = "list"} : !cir.ptr<!ty__badStruct> -> !cir.ptr<!ty__linkedList> loc(#loc35)
    %18 = cir.get_member %4[1] {name = "prev"} : !cir.ptr<!ty__linkedList> -> !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc31)
    cir.store %17, %18 : !cir.ptr<!ty__linkedList>, !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc195)
    cir.br ^bb1 loc(#loc196)
  ^bb1:  // pred: ^bb0
    %19 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc23)
    cir.store %20, %2 : !s32i, !cir.ptr<!s32i> loc(#loc187)
    cir.br ^bb2 loc(#loc197)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc197)
  ^bb3:  // pred: ^bb24
    %21 = cir.const #cir.int<0> : !s32i loc(#loc47)
    %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc47)
    cir.brcond %22 ^bb4, ^bb25 loc(#loc47)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %23 = cir.const #cir.int<2> : !s32i loc(#loc48)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %25 = cir.const #cir.int<6> : !s32i loc(#loc50)
    %26 = cir.call @socket(%23, %24, %25) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc51)
    cir.store %26, %2 : !s32i, !cir.ptr<!s32i> loc(#loc198)
    cir.br ^bb5 loc(#loc199)
  ^bb5:  // pred: ^bb4
    %27 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc57)
    %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc57)
    %30 = cir.cmp(eq, %27, %29) : !s32i, !cir.bool loc(#loc200)
    cir.brcond %30 ^bb6, ^bb7 loc(#loc201)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc59)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc55)
  ^bb8:  // pred: ^bb7
    %31 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc202)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %33 = cir.const #cir.int<16> : !u64i loc(#loc203)
    cir.libc.memset %33 bytes from %31 set to %32 : !cir.ptr<!void>, !s32i, !u64i loc(#loc204)
    %34 = cir.const #cir.int<2> : !s32i loc(#loc67)
    %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc67)
    %36 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
    cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc205)
    %37 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %38 = cir.cast(array_to_ptrdecay, %37 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %39 = cir.call @inet_addr(%38) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc70)
    %40 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
    %41 = cir.get_member %40[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
    cir.store %39, %41 : !u32i, !cir.ptr<!u32i> loc(#loc206)
    %42 = cir.const #cir.int<27015> : !s32i loc(#loc75)
    %43 = cir.cast(integral, %42 : !s32i), !u16i loc(#loc75)
    %44 = cir.call @htons(%43) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc76)
    %45 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
    cir.store %44, %45 : !u16i, !cir.ptr<!u16i> loc(#loc207)
    cir.br ^bb9 loc(#loc208)
  ^bb9:  // pred: ^bb8
    %46 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc82)
    %47 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc209)
    %48 = cir.const #cir.int<16> : !u64i loc(#loc210)
    %49 = cir.cast(integral, %48 : !u64i), !u32i loc(#loc210)
    %50 = cir.call @connect(%46, %47, %49) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc87)
    %51 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %52 = cir.unary(minus, %51) : !s32i, !s32i loc(#loc88)
    %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc211)
    cir.brcond %53 ^bb10, ^bb11 loc(#loc212)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc90)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc81)
  ^bb12:  // pred: ^bb11
    %54 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    %55 = cir.cast(bitcast, %3 : !cir.ptr<!ty__badStruct>), !cir.ptr<!s8i> loc(#loc213)
    %56 = cir.cast(bitcast, %55 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc214)
    %57 = cir.const #cir.int<16> : !u64i loc(#loc215)
    %58 = cir.const #cir.int<0> : !s32i loc(#loc97)
    %59 = cir.call @recv(%54, %56, %57, %58) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc98)
    %60 = cir.cast(integral, %59 : !s64i), !s32i loc(#loc98)
    cir.store %60, %0 : !s32i, !cir.ptr<!s32i> loc(#loc216)
    cir.br ^bb13 loc(#loc217)
  ^bb13:  // pred: ^bb12
    %61 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %62 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc104)
    %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc218)
    cir.brcond %64 ^bb14, ^bb15 loc(#loc105)
  ^bb14:  // pred: ^bb13
    %65 = cir.const #true loc(#loc105)
    cir.br ^bb20(%65 : !cir.bool) loc(#loc105)
  ^bb15:  // pred: ^bb13
    %66 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    %67 = cir.const #cir.int<0> : !s32i loc(#loc107)
    %68 = cir.cmp(eq, %66, %67) : !s32i, !cir.bool loc(#loc219)
    cir.brcond %68 ^bb16, ^bb17 loc(#loc105)
  ^bb16:  // pred: ^bb15
    %69 = cir.const #true loc(#loc105)
    cir.br ^bb18(%69 : !cir.bool) loc(#loc105)
  ^bb17:  // pred: ^bb15
    %70 = cir.const #false loc(#loc105)
    cir.br ^bb18(%70 : !cir.bool) loc(#loc105)
  ^bb18(%71: !cir.bool loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":101:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc105)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%71 : !cir.bool) loc(#loc105)
  ^bb20(%72: !cir.bool loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":101:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc105)
  ^bb21:  // pred: ^bb20
    cir.brcond %72 ^bb22, ^bb23 loc(#loc220)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc109)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc102)
  ^bb24:  // pred: ^bb23
    cir.br ^bb3 loc(#loc46)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc46)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc221)
  ^bb27:  // pred: ^bb26
    %73 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %74 = cir.const #cir.int<1> : !s32i loc(#loc113)
    %75 = cir.unary(minus, %74) : !s32i, !s32i loc(#loc113)
    %76 = cir.cmp(ne, %73, %75) : !s32i, !cir.bool loc(#loc222)
    cir.brcond %76 ^bb28, ^bb29 loc(#loc223)
  ^bb28:  // pred: ^bb27
    %77 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc115)
    %78 = cir.call @close(%77) : (!s32i) -> !s32i loc(#loc116)
    cir.br ^bb29 loc(#loc111)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc111)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc44)
  ^bb31:  // pred: ^bb30
    %79 = cir.cast(bitcast, %3 : !cir.ptr<!ty__badStruct>), !cir.ptr<!void> loc(#loc224)
    cir.call @CWE123_Write_What_Where_Condition__connect_socket_64b_badSink(%79) : (!cir.ptr<!void>) -> () loc(#loc119)
    cir.return loc(#loc17)
  } loc(#loc184)
  cir.func no_proto @CWE123_Write_What_Where_Condition__connect_socket_64_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc226)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc122)
    cir.return loc(#loc121)
  } loc(#loc225)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc227)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc228)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc229)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc130)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc131)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc132)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc133)
  cir.func @main(%arg0: !s32i loc(fused[#loc136, #loc137]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc138, #loc139])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc231)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc232)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc135)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc140)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc140)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc141)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc142)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc142)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc143)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc130)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc130)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc144)
    %8 = cir.get_global @CWE123_Write_What_Where_Condition__connect_socket_64_good : !cir.ptr<!cir.func<!void ()>> loc(#loc233)
    cir.call @CWE123_Write_What_Where_Condition__connect_socket_64_good() : () -> () loc(#loc145)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc131)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc131)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc147)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc132)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc132)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc148)
    %13 = cir.get_global @CWE123_Write_What_Where_Condition__connect_socket_64_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc234)
    cir.call @CWE123_Write_What_Where_Condition__connect_socket_64_bad() : () -> () loc(#loc149)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc133)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc133)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc151)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc152)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc235)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc235)
    cir.return %17 : !s32i loc(#loc235)
  } loc(#loc230)
  cir.func private @CWE123_Write_What_Where_Condition__connect_socket_64b_goodG2BSink(!cir.ptr<!void>) loc(#loc236)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !ty__badStruct, !cir.ptr<!ty__badStruct>, ["data"] {alignment = 8 : i64} loc(#loc238)
    %1 = cir.alloca !ty__linkedList, !cir.ptr<!ty__linkedList>, ["head", init] {alignment = 8 : i64} loc(#loc239)
    %2 = cir.get_member %1[0] {name = "next"} : !cir.ptr<!ty__linkedList> -> !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc28)
    cir.store %1, %2 : !cir.ptr<!ty__linkedList>, !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc240)
    %3 = cir.get_member %1[1] {name = "prev"} : !cir.ptr<!ty__linkedList> -> !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc31)
    cir.store %1, %3 : !cir.ptr<!ty__linkedList>, !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc241)
    %4 = cir.get_member %1[0] {name = "next"} : !cir.ptr<!ty__linkedList> -> !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc28)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__linkedList>>, !cir.ptr<!ty__linkedList> loc(#loc166)
    %6 = cir.get_member %0[0] {name = "list"} : !cir.ptr<!ty__badStruct> -> !cir.ptr<!ty__linkedList> loc(#loc35)
    %7 = cir.get_member %6[0] {name = "next"} : !cir.ptr<!ty__linkedList> -> !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc28)
    cir.store %5, %7 : !cir.ptr<!ty__linkedList>, !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc242)
    %8 = cir.get_member %1[1] {name = "prev"} : !cir.ptr<!ty__linkedList> -> !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc31)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__linkedList>>, !cir.ptr<!ty__linkedList> loc(#loc168)
    %10 = cir.get_member %0[0] {name = "list"} : !cir.ptr<!ty__badStruct> -> !cir.ptr<!ty__linkedList> loc(#loc35)
    %11 = cir.get_member %10[1] {name = "prev"} : !cir.ptr<!ty__linkedList> -> !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc31)
    cir.store %9, %11 : !cir.ptr<!ty__linkedList>, !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc243)
    %12 = cir.get_member %0[0] {name = "list"} : !cir.ptr<!ty__badStruct> -> !cir.ptr<!ty__linkedList> loc(#loc35)
    %13 = cir.get_member %1[0] {name = "next"} : !cir.ptr<!ty__linkedList> -> !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc28)
    cir.store %12, %13 : !cir.ptr<!ty__linkedList>, !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc244)
    %14 = cir.get_member %0[0] {name = "list"} : !cir.ptr<!ty__badStruct> -> !cir.ptr<!ty__linkedList> loc(#loc35)
    %15 = cir.get_member %1[1] {name = "prev"} : !cir.ptr<!ty__linkedList> -> !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc31)
    cir.store %14, %15 : !cir.ptr<!ty__linkedList>, !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc245)
    %16 = cir.cast(bitcast, %0 : !cir.ptr<!ty__badStruct>), !cir.ptr<!void> loc(#loc246)
    cir.call @CWE123_Write_What_Where_Condition__connect_socket_64b_goodG2BSink(%16) : (!cir.ptr<!void>) -> () loc(#loc176)
    cir.return loc(#loc157)
  } loc(#loc237)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE123_Write_What_Where_Condition/CWE123_Write_What_Where_Condition__connect_socket_64a.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":91:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/unistd.h":358:1)
#loc13 = loc("/usr/include/unistd.h":358:27)
#loc14 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":56:1)
#loc15 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":56:86)
#loc16 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":58:1)
#loc17 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":119:1)
#loc18 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":72:9)
#loc19 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":72:13)
#loc20 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":73:9)
#loc21 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":73:28)
#loc22 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":74:9)
#loc23 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":74:32)
#loc24 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":60:5)
#loc25 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":60:15)
#loc26 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":61:5)
#loc27 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":61:38)
#loc28 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":21:25)
#loc29 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":61:25)
#loc30 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":61:26)
#loc31 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":22:25)
#loc32 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":61:32)
#loc33 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":61:33)
#loc34 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":63:27)
#loc35 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":27:16)
#loc36 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":63:5)
#loc37 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":64:27)
#loc38 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":64:5)
#loc39 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":65:5)
#loc40 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":65:23)
#loc41 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":66:5)
#loc42 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":66:23)
#loc43 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":67:5)
#loc44 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":117:5)
#loc45 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":75:9)
#loc46 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":106:17)
#loc47 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":106:16)
#loc48 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":84:36)
#loc49 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":84:45)
#loc50 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":84:58)
#loc51 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":84:29)
#loc52 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":84:13)
#loc53 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":84:69)
#loc54 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":85:13)
#loc55 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":88:13)
#loc56 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":85:17)
#loc57 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":85:34)
#loc58 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":86:13)
#loc59 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":87:17)
#loc60 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":89:20)
#loc61 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":89:21)
#loc62 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":89:30)
#loc63 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":89:33)
#loc64 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":89:47)
#loc65 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":89:13)
#loc66 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":89:48)
#loc67 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":90:34)
#loc68 = loc("/usr/include/netinet/in.h":249:5)
#loc69 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":90:13)
#loc70 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":91:39)
#loc71 = loc("/usr/include/netinet/in.h":251:20)
#loc72 = loc("/usr/include/netinet/in.h":33:15)
#loc73 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":91:13)
#loc74 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":91:59)
#loc75 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":92:38)
#loc76 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":92:32)
#loc77 = loc("/usr/include/netinet/in.h":250:15)
#loc78 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":92:13)
#loc79 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":92:46)
#loc80 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":93:13)
#loc81 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":96:13)
#loc82 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":93:25)
#loc83 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":93:58)
#loc84 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":93:59)
#loc85 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":93:68)
#loc86 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":93:82)
#loc87 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":93:17)
#loc88 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":93:88)
#loc89 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":94:13)
#loc90 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":95:17)
#loc91 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":100:31)
#loc92 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":100:53)
#loc93 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":100:54)
#loc94 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":100:46)
#loc95 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":100:60)
#loc96 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":100:71)
#loc97 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":100:74)
#loc98 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":100:26)
#loc99 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":100:13)
#loc100 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":100:75)
#loc101 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":101:13)
#loc102 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":104:13)
#loc103 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":101:17)
#loc104 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":101:31)
#loc106 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":101:47)
#loc107 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":101:61)
#loc108 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":102:13)
#loc109 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":103:17)
#loc110 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":107:9)
#loc111 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":110:9)
#loc112 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":107:13)
#loc113 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":107:30)
#loc114 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":108:9)
#loc115 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":109:26)
#loc116 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":109:13)
#loc117 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":118:67)
#loc118 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":118:68)
#loc119 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":118:5)
#loc120 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":142:1)
#loc121 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":145:1)
#loc122 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":144:5)
#loc123 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":144:13)
#loc124 = loc("/usr/include/stdlib.h":575:1)
#loc125 = loc("/usr/include/stdlib.h":575:41)
#loc126 = loc("/usr/include/time.h":76:1)
#loc127 = loc("/usr/include/time.h":76:38)
#loc128 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc129 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc130 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":162:15)
#loc131 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":164:15)
#loc132 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":167:15)
#loc133 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":169:15)
#loc134 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":157:1)
#loc135 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":172:1)
#loc140 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":158:1)
#loc141 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":160:27)
#loc142 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":160:22)
#loc143 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":160:5)
#loc144 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":162:5)
#loc145 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":163:5)
#loc146 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":163:63)
#loc147 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":164:5)
#loc148 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":167:5)
#loc149 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":168:5)
#loc150 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":168:62)
#loc151 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":169:5)
#loc152 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":171:12)
#loc153 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":171:5)
#loc154 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":126:1)
#loc155 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":126:90)
#loc156 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":128:1)
#loc157 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":140:1)
#loc158 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":130:5)
#loc159 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":130:15)
#loc160 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":131:5)
#loc161 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":131:38)
#loc162 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":131:25)
#loc163 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":131:26)
#loc164 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":131:32)
#loc165 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":131:33)
#loc166 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":133:27)
#loc167 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":133:5)
#loc168 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":134:27)
#loc169 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":134:5)
#loc170 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":135:5)
#loc171 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":135:23)
#loc172 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":136:5)
#loc173 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":136:23)
#loc174 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":139:71)
#loc175 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":139:72)
#loc176 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":139:5)
#loc177 = loc(fused[#loc1, #loc2])
#loc178 = loc(fused[#loc3, #loc4])
#loc179 = loc(fused[#loc6, #loc7])
#loc180 = loc(fused[#loc8, #loc9])
#loc181 = loc(fused[#loc10, #loc11])
#loc182 = loc(fused[#loc12, #loc13])
#loc183 = loc(fused[#loc14, #loc15])
#loc184 = loc(fused[#loc16, #loc17])
#loc185 = loc(fused[#loc18, #loc19])
#loc186 = loc(fused[#loc20, #loc21])
#loc187 = loc(fused[#loc22, #loc23])
#loc188 = loc(fused[#loc24, #loc25])
#loc189 = loc(fused[#loc26, #loc27])
#loc190 = loc(fused[#loc29, #loc30])
#loc191 = loc(fused[#loc32, #loc33])
#loc192 = loc(fused[#loc36, #loc34])
#loc193 = loc(fused[#loc38, #loc37])
#loc194 = loc(fused[#loc39, #loc40])
#loc195 = loc(fused[#loc41, #loc42])
#loc196 = loc(fused[#loc43, #loc44])
#loc197 = loc(fused[#loc45, #loc46])
#loc198 = loc(fused[#loc52, #loc53])
#loc199 = loc(fused[#loc54, #loc55])
#loc200 = loc(fused[#loc56, #loc57])
#loc201 = loc(fused[#loc58, #loc55])
#loc202 = loc(fused[#loc60, #loc61])
#loc203 = loc(fused[#loc63, #loc64])
#loc204 = loc(fused[#loc65, #loc66])
#loc205 = loc(fused[#loc69, #loc67])
#loc206 = loc(fused[#loc73, #loc74])
#loc207 = loc(fused[#loc78, #loc79])
#loc208 = loc(fused[#loc80, #loc81])
#loc209 = loc(fused[#loc83, #loc84])
#loc210 = loc(fused[#loc85, #loc86])
#loc211 = loc(fused[#loc87, #loc88])
#loc212 = loc(fused[#loc89, #loc81])
#loc213 = loc(fused[#loc92, #loc93])
#loc214 = loc(fused[#loc94, #loc93])
#loc215 = loc(fused[#loc95, #loc96])
#loc216 = loc(fused[#loc99, #loc100])
#loc217 = loc(fused[#loc101, #loc102])
#loc218 = loc(fused[#loc103, #loc104])
#loc219 = loc(fused[#loc106, #loc107])
#loc220 = loc(fused[#loc108, #loc102])
#loc221 = loc(fused[#loc110, #loc111])
#loc222 = loc(fused[#loc112, #loc113])
#loc223 = loc(fused[#loc114, #loc111])
#loc224 = loc(fused[#loc117, #loc118])
#loc225 = loc(fused[#loc120, #loc121])
#loc226 = loc(fused[#loc122, #loc123])
#loc227 = loc(fused[#loc124, #loc125])
#loc228 = loc(fused[#loc126, #loc127])
#loc229 = loc(fused[#loc128, #loc129])
#loc230 = loc(fused[#loc134, #loc135])
#loc233 = loc(fused[#loc145, #loc146])
#loc234 = loc(fused[#loc149, #loc150])
#loc235 = loc(fused[#loc153, #loc152])
#loc236 = loc(fused[#loc154, #loc155])
#loc237 = loc(fused[#loc156, #loc157])
#loc238 = loc(fused[#loc158, #loc159])
#loc239 = loc(fused[#loc160, #loc161])
#loc240 = loc(fused[#loc162, #loc163])
#loc241 = loc(fused[#loc164, #loc165])
#loc242 = loc(fused[#loc167, #loc166])
#loc243 = loc(fused[#loc169, #loc168])
#loc244 = loc(fused[#loc170, #loc171])
#loc245 = loc(fused[#loc172, #loc173])
#loc246 = loc(fused[#loc174, #loc175])
