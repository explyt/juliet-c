!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s01/CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc260)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc261)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc262)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc263)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc264)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc265)
  cir.func private @close(!s32i) -> !s32i loc(#loc266)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc267)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc269)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc23)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc270)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc272)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc27)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc27)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc275)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc276)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc277)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc278)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc37)
          %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc37)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc277)
          cir.scope {
            cir.do {
              cir.scope {
                %12 = cir.const #cir.int<2> : !s32i loc(#loc44)
                %13 = cir.const #cir.int<1> : !s32i loc(#loc45)
                %14 = cir.const #cir.int<6> : !s32i loc(#loc46)
                %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc47)
                cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc281)
                cir.scope {
                  %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc52)
                  %55 = cir.const #cir.int<1> : !s32i loc(#loc53)
                  %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc53)
                  %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc283)
                  cir.if %57 {
                    cir.break loc(#loc55)
                  } loc(#loc284)
                } loc(#loc282)
                %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc285)
                %17 = cir.const #cir.int<0> : !s32i loc(#loc58)
                %18 = cir.const #cir.int<16> : !u64i loc(#loc286)
                cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc287)
                %19 = cir.const #cir.int<2> : !s32i loc(#loc63)
                %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc63)
                %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
                cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc288)
                %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
                %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
                %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc66)
                %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc67)
                %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc68)
                cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc289)
                %27 = cir.const #cir.int<27015> : !s32i loc(#loc71)
                %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc71)
                %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc72)
                %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
                cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc290)
                cir.scope {
                  %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc78)
                  %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc292)
                  %56 = cir.const #cir.int<16> : !u64i loc(#loc293)
                  %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc293)
                  %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc83)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc84)
                  %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc84)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc294)
                  cir.if %61 {
                    cir.break loc(#loc86)
                  } loc(#loc295)
                } loc(#loc291)
                %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc87)
                %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc88)
                %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc88)
                %34 = cir.const #cir.int<3> : !s32i loc(#loc89)
                %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc89)
                %36 = cir.const #cir.int<4> : !u64i loc(#loc89)
                %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc89)
                %38 = cir.const #cir.int<2> : !s32i loc(#loc89)
                %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc89)
                %40 = cir.binop(add, %37, %39) : !u64i loc(#loc89)
                %41 = cir.const #cir.int<1> : !s32i loc(#loc90)
                %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc90)
                %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc296)
                %44 = cir.const #cir.int<0> : !s32i loc(#loc91)
                %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc92)
                %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc92)
                cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc297)
                cir.scope {
                  %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc97)
                  %55 = cir.const #cir.int<1> : !s32i loc(#loc98)
                  %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc98)
                  %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc299)
                  %58 = cir.ternary(%57, true {
                    %59 = cir.const #true loc(#loc99)
                    cir.yield %59 : !cir.bool loc(#loc99)
                  }, false {
                    %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc100)
                    %60 = cir.const #cir.int<0> : !s32i loc(#loc101)
                    %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc300)
                    %62 = cir.ternary(%61, true {
                      %63 = cir.const #true loc(#loc99)
                      cir.yield %63 : !cir.bool loc(#loc99)
                    }, false {
                      %63 = cir.const #false loc(#loc99)
                      cir.yield %63 : !cir.bool loc(#loc99)
                    }) : (!cir.bool) -> !cir.bool loc(#loc99)
                    cir.yield %62 : !cir.bool loc(#loc99)
                  }) : (!cir.bool) -> !cir.bool loc(#loc99)
                  cir.if %58 {
                    cir.break loc(#loc103)
                  } loc(#loc301)
                } loc(#loc298)
                %47 = cir.const #cir.int<0> : !s32i loc(#loc104)
                %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc104)
                %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc105)
                %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc106)
                %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc106)
                cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc302)
                %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc107)
                %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc108)
                cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc303)
              } loc(#loc280)
              cir.yield loc(#loc41)
            } while {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc111)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc111)
              cir.condition(%13) loc(#loc111)
            } loc(#loc279)
          } loc(#loc279)
          cir.scope {
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc114)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc115)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc115)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc305)
            cir.if %15 {
              %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc117)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc118)
            } loc(#loc306)
          } loc(#loc304)
        } loc(#loc274)
      } loc(#loc273)
    } loc(#loc271)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc308)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc309)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc309)
      cir.store %5, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc309)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc125)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc125)
      %8 = cir.const #cir.int<65> : !s32i loc(#loc126)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc127)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc128)
      %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc127)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc127)
      cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc310)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc131)
      %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc131)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc132)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc133)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc132)
      %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc134)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc134)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc311)
      cir.scope {
        %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc137)
        %22 = cir.const #cir.int<100> : !s32i loc(#loc138)
        %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc313)
        cir.if %23 {
          %24 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc140)
          %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc140)
          %26 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc141)
          %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc141)
          %28 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc142)
          %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc142)
          cir.libc.memcpy %29 bytes from %27 to %25 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc315)
          %30 = cir.const #cir.int<0> : !s32i loc(#loc145)
          %31 = cir.cast(integral, %30 : !s32i), !s8i loc(#loc145)
          %32 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc146)
          %33 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc147)
          %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc147)
          cir.store %31, %34 : !s8i, !cir.ptr<!s8i> loc(#loc316)
        } loc(#loc314)
      } loc(#loc312)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc148)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc149)
    } loc(#loc307)
    cir.return loc(#loc19)
  } loc(#loc268)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc318)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc152)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc319)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc154)
    cir.return loc(#loc151)
  } loc(#loc317)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc157)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc158)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc321)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc321)
    cir.return %2 : !s32i loc(#loc321)
  } loc(#loc320)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc160)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc323)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc165)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc166)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc324)
    cir.scope {
      %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc326)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc170)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc170)
      cir.if %5 {
        %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc160)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc160)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc175)
      } else {
        %6 = cir.const #cir.int<100> : !s32i loc(#loc176)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc177)
        %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc176)
        cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc328)
      } loc(#loc327)
    } loc(#loc325)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc330)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc331)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc331)
      cir.store %5, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc331)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc185)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc185)
      %8 = cir.const #cir.int<65> : !s32i loc(#loc186)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc187)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc188)
      %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc187)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc187)
      cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc332)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc191)
      %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc191)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc192)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc193)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc192)
      %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc194)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc194)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc333)
      cir.scope {
        %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc197)
        %22 = cir.const #cir.int<100> : !s32i loc(#loc198)
        %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc335)
        cir.if %23 {
          %24 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc200)
          %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc200)
          %26 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc201)
          %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc201)
          %28 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc202)
          %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc202)
          cir.libc.memcpy %29 bytes from %27 to %25 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc337)
          %30 = cir.const #cir.int<0> : !s32i loc(#loc205)
          %31 = cir.cast(integral, %30 : !s32i), !s8i loc(#loc205)
          %32 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc206)
          %33 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc207)
          %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc207)
          cir.store %31, %34 : !s8i, !cir.ptr<!s8i> loc(#loc338)
        } loc(#loc336)
      } loc(#loc334)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc208)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc209)
    } loc(#loc329)
    cir.return loc(#loc162)
  } loc(#loc322)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc211)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc212)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc340)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc340)
    cir.return %2 : !s32i loc(#loc340)
  } loc(#loc339)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc342)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc218)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc219)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc343)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc345)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc223)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc223)
      cir.if %5 {
        %6 = cir.const #cir.int<100> : !s32i loc(#loc226)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc227)
        %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc226)
        cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc347)
      } loc(#loc346)
    } loc(#loc344)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc349)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc350)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc350)
      cir.store %5, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc350)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc235)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc235)
      %8 = cir.const #cir.int<65> : !s32i loc(#loc236)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc237)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc238)
      %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc237)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc237)
      cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc351)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc241)
      %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc241)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc242)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc243)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc242)
      %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc244)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc244)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc352)
      cir.scope {
        %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc247)
        %22 = cir.const #cir.int<100> : !s32i loc(#loc248)
        %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc354)
        cir.if %23 {
          %24 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc250)
          %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc250)
          %26 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc251)
          %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc251)
          %28 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc252)
          %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc252)
          cir.libc.memcpy %29 bytes from %27 to %25 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc356)
          %30 = cir.const #cir.int<0> : !s32i loc(#loc255)
          %31 = cir.cast(integral, %30 : !s32i), !s8i loc(#loc255)
          %32 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc256)
          %33 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc257)
          %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc257)
          cir.store %31, %34 : !s8i, !cir.ptr<!s8i> loc(#loc357)
        } loc(#loc355)
      } loc(#loc353)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc258)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc259)
    } loc(#loc348)
    cir.return loc(#loc215)
  } loc(#loc341)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s01/CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":90:53)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc18 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":57:1)
#loc19 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":135:1)
#loc20 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":59:5)
#loc21 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":59:9)
#loc22 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":61:13)
#loc23 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":61:12)
#loc24 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":61:5)
#loc25 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":62:5)
#loc26 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":120:5)
#loc27 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":62:8)
#loc28 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":62:26)
#loc29 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":63:5)
#loc30 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":64:9)
#loc31 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":119:9)
#loc32 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":69:13)
#loc33 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":69:17)
#loc34 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":70:13)
#loc35 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":70:32)
#loc36 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":71:13)
#loc37 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":71:36)
#loc38 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":72:13)
#loc39 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":72:45)
#loc40 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":73:13)
#loc41 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":108:21)
#loc42 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":74:13)
#loc43 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":107:13)
#loc44 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":83:40)
#loc45 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":83:49)
#loc46 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":83:62)
#loc47 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":83:33)
#loc48 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":83:17)
#loc49 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":83:73)
#loc50 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":84:17)
#loc51 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":87:17)
#loc52 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":84:21)
#loc53 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":84:38)
#loc54 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":85:17)
#loc55 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":86:21)
#loc56 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":88:24)
#loc57 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":88:25)
#loc58 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":88:34)
#loc59 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":88:37)
#loc60 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":88:51)
#loc61 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":88:17)
#loc62 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":88:52)
#loc63 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":89:38)
#loc64 = loc("/usr/include/netinet/in.h":249:5)
#loc65 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":89:17)
#loc66 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":90:43)
#loc67 = loc("/usr/include/netinet/in.h":251:20)
#loc68 = loc("/usr/include/netinet/in.h":33:15)
#loc69 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":90:17)
#loc70 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":90:63)
#loc71 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":91:42)
#loc72 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":91:36)
#loc73 = loc("/usr/include/netinet/in.h":250:15)
#loc74 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":91:17)
#loc75 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":91:50)
#loc76 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":92:17)
#loc77 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":95:17)
#loc78 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":92:29)
#loc79 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":92:62)
#loc80 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":92:63)
#loc81 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":92:72)
#loc82 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":92:86)
#loc83 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":92:21)
#loc84 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":92:92)
#loc85 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":93:17)
#loc86 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":94:21)
#loc87 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":98:35)
#loc88 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":98:50)
#loc89 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":98:63)
#loc90 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":98:81)
#loc91 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":98:84)
#loc92 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":98:30)
#loc93 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":98:17)
#loc94 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":98:85)
#loc95 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":99:17)
#loc96 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":102:17)
#loc97 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":99:21)
#loc98 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":99:35)
#loc99 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":99:48)
#loc100 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":99:51)
#loc101 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":99:65)
#loc102 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":100:17)
#loc103 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":101:21)
#loc104 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":104:43)
#loc105 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":104:29)
#loc106 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":104:17)
#loc107 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":106:29)
#loc108 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":106:24)
#loc109 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":106:17)
#loc110 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":106:40)
#loc111 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":108:20)
#loc112 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":109:13)
#loc113 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":112:13)
#loc114 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":109:17)
#loc115 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":109:34)
#loc116 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":110:13)
#loc117 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":111:30)
#loc118 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":111:17)
#loc119 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":121:5)
#loc120 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":134:5)
#loc121 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":122:9)
#loc122 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":122:24)
#loc123 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":123:9)
#loc124 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":123:26)
#loc125 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":124:16)
#loc126 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":124:24)
#loc127 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":124:29)
#loc128 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":124:33)
#loc129 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":124:9)
#loc130 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":124:34)
#loc131 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":125:25)
#loc132 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":125:16)
#loc133 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":125:20)
#loc134 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":125:9)
#loc135 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":126:9)
#loc136 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":132:9)
#loc137 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":126:13)
#loc138 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":126:20)
#loc139 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":127:9)
#loc140 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":130:20)
#loc141 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":130:26)
#loc142 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":130:34)
#loc143 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":130:13)
#loc144 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":130:38)
#loc145 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":131:26)
#loc146 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":131:18)
#loc147 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":131:13)
#loc148 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":133:19)
#loc149 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":133:9)
#loc150 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":200:1)
#loc151 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":204:1)
#loc152 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":202:5)
#loc153 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":202:14)
#loc154 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":203:5)
#loc155 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":203:14)
#loc156 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":45:1)
#loc157 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":48:1)
#loc158 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":47:12)
#loc159 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":47:5)
#loc160 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":150:19)
#loc161 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":142:1)
#loc162 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":171:1)
#loc163 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":144:5)
#loc164 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":144:9)
#loc165 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":146:13)
#loc166 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":146:12)
#loc167 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":146:5)
#loc168 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":147:5)
#loc169 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":156:5)
#loc170 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":147:8)
#loc171 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":147:27)
#loc172 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":148:5)
#loc173 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":151:5)
#loc174 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":153:5)
#loc175 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":150:9)
#loc176 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":155:16)
#loc177 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":155:20)
#loc178 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":155:9)
#loc179 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":157:5)
#loc180 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":170:5)
#loc181 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":158:9)
#loc182 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":158:24)
#loc183 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":159:9)
#loc184 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":159:26)
#loc185 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":160:16)
#loc186 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":160:24)
#loc187 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":160:29)
#loc188 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":160:33)
#loc189 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":160:9)
#loc190 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":160:34)
#loc191 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":161:25)
#loc192 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":161:16)
#loc193 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":161:20)
#loc194 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":161:9)
#loc195 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":162:9)
#loc196 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":168:9)
#loc197 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":162:13)
#loc198 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":162:20)
#loc199 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":163:9)
#loc200 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":166:20)
#loc201 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":166:26)
#loc202 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":166:34)
#loc203 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":166:13)
#loc204 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":166:38)
#loc205 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":167:26)
#loc206 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":167:18)
#loc207 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":167:13)
#loc208 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":169:19)
#loc209 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":169:9)
#loc210 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":50:1)
#loc211 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":53:1)
#loc212 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":52:12)
#loc213 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":52:5)
#loc214 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":174:1)
#loc215 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":198:1)
#loc216 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":176:5)
#loc217 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":176:9)
#loc218 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":178:13)
#loc219 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":178:12)
#loc220 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":178:5)
#loc221 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":179:5)
#loc222 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":183:5)
#loc223 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":179:8)
#loc224 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":179:26)
#loc225 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":180:5)
#loc226 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":182:16)
#loc227 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":182:20)
#loc228 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":182:9)
#loc229 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":184:5)
#loc230 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":197:5)
#loc231 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":185:9)
#loc232 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":185:24)
#loc233 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":186:9)
#loc234 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":186:26)
#loc235 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":187:16)
#loc236 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":187:24)
#loc237 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":187:29)
#loc238 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":187:33)
#loc239 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":187:9)
#loc240 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":187:34)
#loc241 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":188:25)
#loc242 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":188:16)
#loc243 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":188:20)
#loc244 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":188:9)
#loc245 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":189:9)
#loc246 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":195:9)
#loc247 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":189:13)
#loc248 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":189:20)
#loc249 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":190:9)
#loc250 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":193:20)
#loc251 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":193:26)
#loc252 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":193:34)
#loc253 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":193:13)
#loc254 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":193:38)
#loc255 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":194:26)
#loc256 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":194:18)
#loc257 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":194:13)
#loc258 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":196:19)
#loc259 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__connect_socket_memcpy_08.c":196:9)
#loc260 = loc(fused[#loc1, #loc2])
#loc261 = loc(fused[#loc3, #loc4])
#loc262 = loc(fused[#loc6, #loc7])
#loc263 = loc(fused[#loc8, #loc9])
#loc264 = loc(fused[#loc10, #loc11])
#loc265 = loc(fused[#loc12, #loc13])
#loc266 = loc(fused[#loc14, #loc15])
#loc267 = loc(fused[#loc16, #loc17])
#loc268 = loc(fused[#loc18, #loc19])
#loc269 = loc(fused[#loc20, #loc21])
#loc270 = loc(fused[#loc24, #loc22])
#loc271 = loc(fused[#loc25, #loc26])
#loc272 = loc(fused[#loc27, #loc28])
#loc273 = loc(fused[#loc29, #loc26])
#loc274 = loc(fused[#loc30, #loc31])
#loc275 = loc(fused[#loc32, #loc33])
#loc276 = loc(fused[#loc34, #loc35])
#loc277 = loc(fused[#loc36, #loc37])
#loc278 = loc(fused[#loc38, #loc39])
#loc279 = loc(fused[#loc40, #loc41])
#loc280 = loc(fused[#loc42, #loc43])
#loc281 = loc(fused[#loc48, #loc49])
#loc282 = loc(fused[#loc50, #loc51])
#loc283 = loc(fused[#loc52, #loc53])
#loc284 = loc(fused[#loc54, #loc51])
#loc285 = loc(fused[#loc56, #loc57])
#loc286 = loc(fused[#loc59, #loc60])
#loc287 = loc(fused[#loc61, #loc62])
#loc288 = loc(fused[#loc65, #loc63])
#loc289 = loc(fused[#loc69, #loc70])
#loc290 = loc(fused[#loc74, #loc75])
#loc291 = loc(fused[#loc76, #loc77])
#loc292 = loc(fused[#loc79, #loc80])
#loc293 = loc(fused[#loc81, #loc82])
#loc294 = loc(fused[#loc83, #loc84])
#loc295 = loc(fused[#loc85, #loc77])
#loc296 = loc(fused[#loc89, #loc90])
#loc297 = loc(fused[#loc93, #loc94])
#loc298 = loc(fused[#loc95, #loc96])
#loc299 = loc(fused[#loc97, #loc98])
#loc300 = loc(fused[#loc100, #loc101])
#loc301 = loc(fused[#loc102, #loc96])
#loc302 = loc(fused[#loc106, #loc104])
#loc303 = loc(fused[#loc109, #loc110])
#loc304 = loc(fused[#loc112, #loc113])
#loc305 = loc(fused[#loc114, #loc115])
#loc306 = loc(fused[#loc116, #loc113])
#loc307 = loc(fused[#loc119, #loc120])
#loc308 = loc(fused[#loc121, #loc122])
#loc309 = loc(fused[#loc123, #loc124])
#loc310 = loc(fused[#loc129, #loc130])
#loc311 = loc(fused[#loc134, #loc131])
#loc312 = loc(fused[#loc135, #loc136])
#loc313 = loc(fused[#loc137, #loc138])
#loc314 = loc(fused[#loc139, #loc136])
#loc315 = loc(fused[#loc143, #loc144])
#loc316 = loc(fused[#loc147, #loc145])
#loc317 = loc(fused[#loc150, #loc151])
#loc318 = loc(fused[#loc152, #loc153])
#loc319 = loc(fused[#loc154, #loc155])
#loc320 = loc(fused[#loc156, #loc157])
#loc321 = loc(fused[#loc159, #loc158])
#loc322 = loc(fused[#loc161, #loc162])
#loc323 = loc(fused[#loc163, #loc164])
#loc324 = loc(fused[#loc167, #loc165])
#loc325 = loc(fused[#loc168, #loc169])
#loc326 = loc(fused[#loc170, #loc171])
#loc327 = loc(fused[#loc172, #loc173, #loc174, #loc169])
#loc328 = loc(fused[#loc178, #loc177])
#loc329 = loc(fused[#loc179, #loc180])
#loc330 = loc(fused[#loc181, #loc182])
#loc331 = loc(fused[#loc183, #loc184])
#loc332 = loc(fused[#loc189, #loc190])
#loc333 = loc(fused[#loc194, #loc191])
#loc334 = loc(fused[#loc195, #loc196])
#loc335 = loc(fused[#loc197, #loc198])
#loc336 = loc(fused[#loc199, #loc196])
#loc337 = loc(fused[#loc203, #loc204])
#loc338 = loc(fused[#loc207, #loc205])
#loc339 = loc(fused[#loc210, #loc211])
#loc340 = loc(fused[#loc213, #loc212])
#loc341 = loc(fused[#loc214, #loc215])
#loc342 = loc(fused[#loc216, #loc217])
#loc343 = loc(fused[#loc220, #loc218])
#loc344 = loc(fused[#loc221, #loc222])
#loc345 = loc(fused[#loc223, #loc224])
#loc346 = loc(fused[#loc225, #loc222])
#loc347 = loc(fused[#loc228, #loc227])
#loc348 = loc(fused[#loc229, #loc230])
#loc349 = loc(fused[#loc231, #loc232])
#loc350 = loc(fused[#loc233, #loc234])
#loc351 = loc(fused[#loc239, #loc240])
#loc352 = loc(fused[#loc244, #loc241])
#loc353 = loc(fused[#loc245, #loc246])
#loc354 = loc(fused[#loc247, #loc248])
#loc355 = loc(fused[#loc249, #loc246])
#loc356 = loc(fused[#loc253, #loc254])
#loc357 = loc(fused[#loc257, #loc255])
