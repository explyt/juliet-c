!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":168:10)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":168:14)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":168:20)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":168:32)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":136:27)
#true = #cir.bool<true> : !cir.bool
!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34_unionType = !cir.struct<union "CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34_unionType" {!s32i, !s32i}>
#loc335 = loc(fused[#loc112, #loc113])
#loc336 = loc(fused[#loc114, #loc115])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc291)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc292)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc293)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc294)
  cir.func private @printIntLine(!s32i) loc(#loc295)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc296)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc14)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc297)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc299)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc300)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc301)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc302)
    %4 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34_unionType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc303)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc30)
    cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc304)
    %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc32)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc292)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc33)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %12 = cir.call @__isoc99_fscanf(%9, %11, %3) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc32)
    %13 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    %14 = cir.get_member %4[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34_unionType> -> !cir.ptr<!s32i> loc(#loc35)
    cir.store %13, %14 : !s32i, !cir.ptr<!s32i> loc(#loc305)
    cir.br ^bb1 loc(#loc306)
  ^bb1:  // pred: ^bb0
    %15 = cir.get_member %4[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34_unionType> -> !cir.ptr<!s32i> loc(#loc39)
    %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc20)
    cir.store %16, %0 : !s32i, !cir.ptr<!s32i> loc(#loc299)
    cir.br ^bb2 loc(#loc307)
  ^bb2:  // pred: ^bb1
    %17 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc42)
    %18 = cir.const #cir.int<10> : !s32i loc(#loc43)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc43)
    %20 = cir.const #cir.int<4> : !u64i loc(#loc308)
    %21 = cir.binop(mul, %19, %20) : !u64i loc(#loc309)
    %22 = cir.call @malloc(%21) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc42)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc310)
    cir.store %23, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc301)
    cir.br ^bb3 loc(#loc311)
  ^bb3:  // pred: ^bb2
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc48)
    %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc49)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc49)
    %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s32i>, !cir.bool loc(#loc312)
    cir.brcond %27 ^bb4, ^bb5 loc(#loc313)
  ^bb4:  // pred: ^bb3
    %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc51)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc52)
    %30 = cir.unary(minus, %29) : !s32i, !s32i loc(#loc53)
    cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc51)
    cir.br ^bb5 loc(#loc47)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc47)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc314)
  ^bb7:  // pred: ^bb6
    %31 = cir.const #cir.int<0> : !s32i loc(#loc56)
    cir.store %31, %1 : !s32i, !cir.ptr<!s32i> loc(#loc315)
    cir.br ^bb8 loc(#loc314)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %32 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc58)
    %33 = cir.const #cir.int<10> : !s32i loc(#loc59)
    %34 = cir.cmp(lt, %32, %33) : !s32i, !cir.bool loc(#loc316)
    cir.brcond %34 ^bb9, ^bb13 loc(#loc60)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc317)
  ^bb10:  // pred: ^bb9
    %35 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %36 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc63)
    %37 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc64)
    %38 = cir.ptr_stride(%36 : !cir.ptr<!s32i>, %37 : !s32i), !cir.ptr<!s32i> loc(#loc65)
    cir.store %35, %38 : !s32i, !cir.ptr<!s32i> loc(#loc318)
    cir.br ^bb11 loc(#loc55)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc55)
  ^bb12:  // pred: ^bb11
    %39 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc66)
    %40 = cir.unary(inc, %39) : !s32i, !s32i loc(#loc67)
    cir.store %40, %1 : !s32i, !cir.ptr<!s32i> loc(#loc319)
    cir.br ^bb8 loc(#loc314)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc55)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc320)
  ^bb15:  // pred: ^bb14
    %41 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc70)
    %42 = cir.const #cir.int<0> : !s32i loc(#loc71)
    %43 = cir.cmp(ge, %41, %42) : !s32i, !cir.bool loc(#loc321)
    cir.brcond %43 ^bb16, ^bb25 loc(#loc322)
  ^bb16:  // pred: ^bb15
    %44 = cir.const #cir.int<1> : !s32i loc(#loc75)
    %45 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc76)
    %46 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc77)
    %47 = cir.ptr_stride(%45 : !cir.ptr<!s32i>, %46 : !s32i), !cir.ptr<!s32i> loc(#loc78)
    cir.store %44, %47 : !s32i, !cir.ptr<!s32i> loc(#loc323)
    cir.br ^bb17 loc(#loc324)
  ^bb17:  // pred: ^bb16
    %48 = cir.const #cir.int<0> : !s32i loc(#loc81)
    cir.store %48, %1 : !s32i, !cir.ptr<!s32i> loc(#loc325)
    cir.br ^bb18 loc(#loc324)
  ^bb18:  // 2 preds: ^bb17, ^bb22
    %49 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    %50 = cir.const #cir.int<10> : !s32i loc(#loc84)
    %51 = cir.cmp(lt, %49, %50) : !s32i, !cir.bool loc(#loc326)
    cir.brcond %51 ^bb19, ^bb23 loc(#loc85)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc327)
  ^bb20:  // pred: ^bb19
    %52 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc87)
    %53 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    %54 = cir.ptr_stride(%52 : !cir.ptr<!s32i>, %53 : !s32i), !cir.ptr<!s32i> loc(#loc89)
    %55 = cir.load %54 : !cir.ptr<!s32i>, !s32i loc(#loc87)
    cir.call @printIntLine(%55) : (!s32i) -> () loc(#loc90)
    cir.br ^bb21 loc(#loc80)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc80)
  ^bb22:  // pred: ^bb21
    %56 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    %57 = cir.unary(inc, %56) : !s32i, !s32i loc(#loc92)
    cir.store %57, %1 : !s32i, !cir.ptr<!s32i> loc(#loc328)
    cir.br ^bb18 loc(#loc324)
  ^bb23:  // pred: ^bb18
    cir.br ^bb24 loc(#loc80)
  ^bb24:  // pred: ^bb23
    cir.br ^bb26 loc(#loc73)
  ^bb25:  // pred: ^bb15
    %58 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc14)
    %59 = cir.cast(array_to_ptrdecay, %58 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc14)
    cir.call @printLine(%59) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    cir.br ^bb26 loc(#loc69)
  ^bb26:  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc69)
  ^bb27:  // pred: ^bb26
    %60 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc94)
    %61 = cir.cast(bitcast, %60 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc94)
    cir.call @free(%61) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc95)
    cir.br ^bb28 loc(#loc41)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc38)
  ^bb29:  // pred: ^bb28
    cir.return loc(#loc18)
  } loc(#loc298)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc330)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc98)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc331)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc100)
    cir.return loc(#loc97)
  } loc(#loc329)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc332)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc333)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc106)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc107)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc108)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc109)
  cir.func @main(%arg0: !s32i loc(fused[#loc112, #loc113]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc114, #loc115])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc335)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc336)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc111)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc116)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc116)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc117)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc118)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc118)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc119)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc106)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc106)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34_good : !cir.ptr<!cir.func<!void ()>> loc(#loc337)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34_good() : () -> () loc(#loc121)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc107)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc107)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc123)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc108)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc108)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc124)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc338)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34_bad() : () -> () loc(#loc125)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc109)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc109)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc127)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc128)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc339)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc339)
    cir.return %17 : !s32i loc(#loc339)
  } loc(#loc334)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc341)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc342)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc343)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc344)
    %4 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34_unionType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc345)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc142)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc143)
    cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc346)
    %7 = cir.const #cir.int<7> : !s32i loc(#loc145)
    cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc347)
    %8 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc147)
    %9 = cir.get_member %4[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34_unionType> -> !cir.ptr<!s32i> loc(#loc35)
    cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc348)
    cir.br ^bb1 loc(#loc349)
  ^bb1:  // pred: ^bb0
    %10 = cir.get_member %4[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34_unionType> -> !cir.ptr<!s32i> loc(#loc39)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc341)
    cir.br ^bb2 loc(#loc350)
  ^bb2:  // pred: ^bb1
    %12 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc153)
    %13 = cir.const #cir.int<10> : !s32i loc(#loc154)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc154)
    %15 = cir.const #cir.int<4> : !u64i loc(#loc351)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc352)
    %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc153)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc353)
    cir.store %18, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc343)
    cir.br ^bb3 loc(#loc354)
  ^bb3:  // pred: ^bb2
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc159)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc160)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc160)
    %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc355)
    cir.brcond %22 ^bb4, ^bb5 loc(#loc356)
  ^bb4:  // pred: ^bb3
    %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc162)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc163)
    %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc164)
    cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc162)
    cir.br ^bb5 loc(#loc158)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc158)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc357)
  ^bb7:  // pred: ^bb6
    %26 = cir.const #cir.int<0> : !s32i loc(#loc167)
    cir.store %26, %1 : !s32i, !cir.ptr<!s32i> loc(#loc358)
    cir.br ^bb8 loc(#loc357)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %27 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc169)
    %28 = cir.const #cir.int<10> : !s32i loc(#loc170)
    %29 = cir.cmp(lt, %27, %28) : !s32i, !cir.bool loc(#loc359)
    cir.brcond %29 ^bb9, ^bb13 loc(#loc171)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc360)
  ^bb10:  // pred: ^bb9
    %30 = cir.const #cir.int<0> : !s32i loc(#loc173)
    %31 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc174)
    %32 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s32i>, %32 : !s32i), !cir.ptr<!s32i> loc(#loc176)
    cir.store %30, %33 : !s32i, !cir.ptr<!s32i> loc(#loc361)
    cir.br ^bb11 loc(#loc166)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc166)
  ^bb12:  // pred: ^bb11
    %34 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc177)
    %35 = cir.unary(inc, %34) : !s32i, !s32i loc(#loc178)
    cir.store %35, %1 : !s32i, !cir.ptr<!s32i> loc(#loc362)
    cir.br ^bb8 loc(#loc357)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc166)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc363)
  ^bb15:  // pred: ^bb14
    %36 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc181)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc182)
    %38 = cir.cmp(ge, %36, %37) : !s32i, !cir.bool loc(#loc364)
    cir.brcond %38 ^bb16, ^bb25 loc(#loc365)
  ^bb16:  // pred: ^bb15
    %39 = cir.const #cir.int<1> : !s32i loc(#loc186)
    %40 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc187)
    %41 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc188)
    %42 = cir.ptr_stride(%40 : !cir.ptr<!s32i>, %41 : !s32i), !cir.ptr<!s32i> loc(#loc189)
    cir.store %39, %42 : !s32i, !cir.ptr<!s32i> loc(#loc366)
    cir.br ^bb17 loc(#loc367)
  ^bb17:  // pred: ^bb16
    %43 = cir.const #cir.int<0> : !s32i loc(#loc192)
    cir.store %43, %1 : !s32i, !cir.ptr<!s32i> loc(#loc368)
    cir.br ^bb18 loc(#loc367)
  ^bb18:  // 2 preds: ^bb17, ^bb22
    %44 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc194)
    %45 = cir.const #cir.int<10> : !s32i loc(#loc195)
    %46 = cir.cmp(lt, %44, %45) : !s32i, !cir.bool loc(#loc369)
    cir.brcond %46 ^bb19, ^bb23 loc(#loc196)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc370)
  ^bb20:  // pred: ^bb19
    %47 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc198)
    %48 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc199)
    %49 = cir.ptr_stride(%47 : !cir.ptr<!s32i>, %48 : !s32i), !cir.ptr<!s32i> loc(#loc200)
    %50 = cir.load %49 : !cir.ptr<!s32i>, !s32i loc(#loc198)
    cir.call @printIntLine(%50) : (!s32i) -> () loc(#loc201)
    cir.br ^bb21 loc(#loc191)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc191)
  ^bb22:  // pred: ^bb21
    %51 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc202)
    %52 = cir.unary(inc, %51) : !s32i, !s32i loc(#loc203)
    cir.store %52, %1 : !s32i, !cir.ptr<!s32i> loc(#loc371)
    cir.br ^bb18 loc(#loc367)
  ^bb23:  // pred: ^bb18
    cir.br ^bb24 loc(#loc191)
  ^bb24:  // pred: ^bb23
    cir.br ^bb26 loc(#loc184)
  ^bb25:  // pred: ^bb15
    %53 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc204)
    %54 = cir.cast(array_to_ptrdecay, %53 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc204)
    cir.call @printLine(%54) : (!cir.ptr<!s8i>) -> () loc(#loc205)
    cir.br ^bb26 loc(#loc180)
  ^bb26:  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc180)
  ^bb27:  // pred: ^bb26
    %55 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc206)
    %56 = cir.cast(bitcast, %55 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc206)
    cir.call @free(%56) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc207)
    cir.br ^bb28 loc(#loc152)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc150)
  ^bb29:  // pred: ^bb28
    cir.return loc(#loc131)
  } loc(#loc340)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc208)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc373)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc374)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc375)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc376)
    %4 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34_unionType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc377)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc221)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc222)
    cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc378)
    %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc224)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc292)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc225)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc226)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc226)
    %12 = cir.call @__isoc99_fscanf(%9, %11, %3) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc224)
    %13 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc227)
    %14 = cir.get_member %4[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34_unionType> -> !cir.ptr<!s32i> loc(#loc35)
    cir.store %13, %14 : !s32i, !cir.ptr<!s32i> loc(#loc379)
    cir.br ^bb1 loc(#loc380)
  ^bb1:  // pred: ^bb0
    %15 = cir.get_member %4[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34_unionType> -> !cir.ptr<!s32i> loc(#loc39)
    %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc212)
    cir.store %16, %0 : !s32i, !cir.ptr<!s32i> loc(#loc373)
    cir.br ^bb2 loc(#loc381)
  ^bb2:  // pred: ^bb1
    %17 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc233)
    %18 = cir.const #cir.int<10> : !s32i loc(#loc234)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc234)
    %20 = cir.const #cir.int<4> : !u64i loc(#loc382)
    %21 = cir.binop(mul, %19, %20) : !u64i loc(#loc383)
    %22 = cir.call @malloc(%21) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc233)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc384)
    cir.store %23, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc375)
    cir.br ^bb3 loc(#loc385)
  ^bb3:  // pred: ^bb2
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc239)
    %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc240)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc240)
    %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s32i>, !cir.bool loc(#loc386)
    cir.brcond %27 ^bb4, ^bb5 loc(#loc387)
  ^bb4:  // pred: ^bb3
    %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc242)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc243)
    %30 = cir.unary(minus, %29) : !s32i, !s32i loc(#loc244)
    cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc242)
    cir.br ^bb5 loc(#loc238)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc238)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc388)
  ^bb7:  // pred: ^bb6
    %31 = cir.const #cir.int<0> : !s32i loc(#loc247)
    cir.store %31, %1 : !s32i, !cir.ptr<!s32i> loc(#loc389)
    cir.br ^bb8 loc(#loc388)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %32 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc249)
    %33 = cir.const #cir.int<10> : !s32i loc(#loc250)
    %34 = cir.cmp(lt, %32, %33) : !s32i, !cir.bool loc(#loc390)
    cir.brcond %34 ^bb9, ^bb13 loc(#loc251)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc391)
  ^bb10:  // pred: ^bb9
    %35 = cir.const #cir.int<0> : !s32i loc(#loc253)
    %36 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc254)
    %37 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc255)
    %38 = cir.ptr_stride(%36 : !cir.ptr<!s32i>, %37 : !s32i), !cir.ptr<!s32i> loc(#loc256)
    cir.store %35, %38 : !s32i, !cir.ptr<!s32i> loc(#loc392)
    cir.br ^bb11 loc(#loc246)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc246)
  ^bb12:  // pred: ^bb11
    %39 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc257)
    %40 = cir.unary(inc, %39) : !s32i, !s32i loc(#loc258)
    cir.store %40, %1 : !s32i, !cir.ptr<!s32i> loc(#loc393)
    cir.br ^bb8 loc(#loc388)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc246)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc394)
  ^bb15:  // pred: ^bb14
    %41 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc261)
    %42 = cir.const #cir.int<0> : !s32i loc(#loc262)
    %43 = cir.cmp(ge, %41, %42) : !s32i, !cir.bool loc(#loc395)
    cir.brcond %43 ^bb16, ^bb21 loc(#loc263)
  ^bb16:  // pred: ^bb15
    %44 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc264)
    %45 = cir.const #cir.int<10> : !s32i loc(#loc265)
    %46 = cir.cmp(lt, %44, %45) : !s32i, !cir.bool loc(#loc396)
    cir.brcond %46 ^bb17, ^bb18 loc(#loc263)
  ^bb17:  // pred: ^bb16
    %47 = cir.const #true loc(#loc263)
    cir.br ^bb19(%47 : !cir.bool) loc(#loc263)
  ^bb18:  // pred: ^bb16
    %48 = cir.const #false loc(#loc263)
    cir.br ^bb19(%48 : !cir.bool) loc(#loc263)
  ^bb19(%49: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":136:27)):  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc263)
  ^bb20:  // pred: ^bb19
    cir.br ^bb22(%49 : !cir.bool) loc(#loc263)
  ^bb21:  // pred: ^bb15
    %50 = cir.const #false loc(#loc263)
    cir.br ^bb22(%50 : !cir.bool) loc(#loc263)
  ^bb22(%51: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":136:27)):  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc263)
  ^bb23:  // pred: ^bb22
    cir.brcond %51 ^bb24, ^bb33 loc(#loc397)
  ^bb24:  // pred: ^bb23
    %52 = cir.const #cir.int<1> : !s32i loc(#loc270)
    %53 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc271)
    %54 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc272)
    %55 = cir.ptr_stride(%53 : !cir.ptr<!s32i>, %54 : !s32i), !cir.ptr<!s32i> loc(#loc273)
    cir.store %52, %55 : !s32i, !cir.ptr<!s32i> loc(#loc398)
    cir.br ^bb25 loc(#loc399)
  ^bb25:  // pred: ^bb24
    %56 = cir.const #cir.int<0> : !s32i loc(#loc276)
    cir.store %56, %1 : !s32i, !cir.ptr<!s32i> loc(#loc400)
    cir.br ^bb26 loc(#loc399)
  ^bb26:  // 2 preds: ^bb25, ^bb30
    %57 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc278)
    %58 = cir.const #cir.int<10> : !s32i loc(#loc279)
    %59 = cir.cmp(lt, %57, %58) : !s32i, !cir.bool loc(#loc401)
    cir.brcond %59 ^bb27, ^bb31 loc(#loc280)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28 loc(#loc402)
  ^bb28:  // pred: ^bb27
    %60 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc282)
    %61 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc283)
    %62 = cir.ptr_stride(%60 : !cir.ptr<!s32i>, %61 : !s32i), !cir.ptr<!s32i> loc(#loc284)
    %63 = cir.load %62 : !cir.ptr<!s32i>, !s32i loc(#loc282)
    cir.call @printIntLine(%63) : (!s32i) -> () loc(#loc285)
    cir.br ^bb29 loc(#loc275)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc275)
  ^bb30:  // pred: ^bb29
    %64 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc286)
    %65 = cir.unary(inc, %64) : !s32i, !s32i loc(#loc287)
    cir.store %65, %1 : !s32i, !cir.ptr<!s32i> loc(#loc403)
    cir.br ^bb26 loc(#loc399)
  ^bb31:  // pred: ^bb26
    cir.br ^bb32 loc(#loc275)
  ^bb32:  // pred: ^bb31
    cir.br ^bb34 loc(#loc268)
  ^bb33:  // pred: ^bb23
    %66 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc208)
    %67 = cir.cast(array_to_ptrdecay, %66 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc208)
    cir.call @printLine(%67) : (!cir.ptr<!s8i>) -> () loc(#loc288)
    cir.br ^bb34 loc(#loc260)
  ^bb34:  // 2 preds: ^bb32, ^bb33
    cir.br ^bb35 loc(#loc260)
  ^bb35:  // pred: ^bb34
    %68 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc289)
    %69 = cir.cast(bitcast, %68 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc289)
    cir.call @free(%69) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc290)
    cir.br ^bb36 loc(#loc232)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc230)
  ^bb37:  // pred: ^bb36
    cir.return loc(#loc210)
  } loc(#loc372)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":35:19)
#loc6 = loc("/usr/include/stdlib.h":672:1)
#loc7 = loc("/usr/include/stdlib.h":672:45)
#loc8 = loc("/usr/include/stdlib.h":756:1)
#loc9 = loc("/usr/include/stdlib.h":756:70)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":61:27)
#loc15 = loc("/usr/include/stdlib.h":687:1)
#loc16 = loc("/usr/include/stdlib.h":687:32)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":28:1)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":66:1)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":38:9)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":38:28)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":40:13)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":40:17)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":41:13)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":41:58)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":30:5)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":30:9)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":31:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":31:69)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":33:13)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":33:12)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":33:5)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":35:5)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":35:12)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":36:26)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":22:9)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":36:5)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":37:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":65:5)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":23:9)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":39:9)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":64:9)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":41:35)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":41:42)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":41:47)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":41:57)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":42:13)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":42:43)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":42:17)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":42:27)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":42:33)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":42:34)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":42:40)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":42:39)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":44:13)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":47:13)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":44:22)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":44:18)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":44:25)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":44:29)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":44:27)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":45:13)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":46:29)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":46:17)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":46:24)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":46:25)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":44:34)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":44:33)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":50:13)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":62:13)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":50:17)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":50:25)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":51:13)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":58:13)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":60:13)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":52:32)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":52:17)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":52:24)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":52:28)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":54:17)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":57:17)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":54:25)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":54:21)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":54:28)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":54:32)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":54:30)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":55:17)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":56:34)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":56:41)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":56:42)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":56:21)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":54:37)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":54:36)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":61:17)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":63:18)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":63:13)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":154:1)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":158:1)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":156:5)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":156:13)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":157:5)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":157:13)
#loc102 = loc("/usr/include/stdlib.h":575:1)
#loc103 = loc("/usr/include/stdlib.h":575:41)
#loc104 = loc("/usr/include/time.h":76:1)
#loc105 = loc("/usr/include/time.h":76:38)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":173:15)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":175:15)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":178:15)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":180:15)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":168:1)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":183:1)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":169:1)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":171:27)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":171:22)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":171:5)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":173:5)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":174:5)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":174:64)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":175:5)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":178:5)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":179:5)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":179:63)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":180:5)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":182:12)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":182:5)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":73:1)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":112:1)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":84:9)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":84:28)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":86:13)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":86:17)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":87:13)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":87:58)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":75:5)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":75:9)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":76:5)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":76:69)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":78:13)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":78:12)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":78:5)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":81:12)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":81:5)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":82:26)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":82:5)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":83:5)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":111:5)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":85:9)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":110:9)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":87:35)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":87:42)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":87:47)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":87:57)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":88:13)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":88:43)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":88:17)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":88:27)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":88:33)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":88:34)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":88:40)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":88:39)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":90:13)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":93:13)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":90:22)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":90:18)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":90:25)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":90:29)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":90:27)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":91:13)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":92:29)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":92:17)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":92:24)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":92:25)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":90:34)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":90:33)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":96:13)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":108:13)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":96:17)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":96:25)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":97:13)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":104:13)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":106:13)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":98:32)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":98:17)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":98:24)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":98:28)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":100:17)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":103:17)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":100:25)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":100:21)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":100:28)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":100:32)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":100:30)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":101:17)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":102:34)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":102:41)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":102:42)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":102:21)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":100:37)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":100:36)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":107:27)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":107:17)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":109:18)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":109:13)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":147:27)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":115:1)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":152:1)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":125:9)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":125:28)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":127:13)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":127:17)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":128:13)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":128:58)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":117:5)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":117:9)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":118:5)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":118:69)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":120:13)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":120:12)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":120:5)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":122:5)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":122:12)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":122:19)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":123:26)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":123:5)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":124:5)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":151:5)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":126:9)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":150:9)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":128:35)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":128:42)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":128:47)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":128:57)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":129:13)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":129:43)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":129:17)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":129:27)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":129:33)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":129:34)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":129:40)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":129:39)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":131:13)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":134:13)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":131:22)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":131:18)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":131:25)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":131:29)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":131:27)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":132:13)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":133:29)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":133:17)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":133:24)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":133:25)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":131:34)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":131:33)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":136:13)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":148:13)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":136:17)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":136:25)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":136:30)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":136:38)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":136:40)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":137:13)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":144:13)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":146:13)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":138:32)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":138:17)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":138:24)
#loc273 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":138:28)
#loc274 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":140:17)
#loc275 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":143:17)
#loc276 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":140:25)
#loc277 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":140:21)
#loc278 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":140:28)
#loc279 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":140:32)
#loc280 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":140:30)
#loc281 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":141:17)
#loc282 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":142:34)
#loc283 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":142:41)
#loc284 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":142:42)
#loc285 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":142:21)
#loc286 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":140:37)
#loc287 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":140:36)
#loc288 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":147:17)
#loc289 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":149:18)
#loc290 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_34.c":149:13)
#loc291 = loc(fused[#loc1, #loc2])
#loc292 = loc(fused[#loc3, #loc4])
#loc293 = loc(fused[#loc6, #loc7])
#loc294 = loc(fused[#loc8, #loc9])
#loc295 = loc(fused[#loc10, #loc11])
#loc296 = loc(fused[#loc12, #loc13])
#loc297 = loc(fused[#loc15, #loc16])
#loc298 = loc(fused[#loc17, #loc18])
#loc299 = loc(fused[#loc19, #loc20])
#loc300 = loc(fused[#loc21, #loc22])
#loc301 = loc(fused[#loc23, #loc24])
#loc302 = loc(fused[#loc25, #loc26])
#loc303 = loc(fused[#loc27, #loc28])
#loc304 = loc(fused[#loc31, #loc29])
#loc305 = loc(fused[#loc36, #loc34])
#loc306 = loc(fused[#loc37, #loc38])
#loc307 = loc(fused[#loc40, #loc41])
#loc308 = loc(fused[#loc44, #loc45])
#loc309 = loc(fused[#loc43, #loc45])
#loc310 = loc(fused[#loc42, #loc24])
#loc311 = loc(fused[#loc46, #loc47])
#loc312 = loc(fused[#loc48, #loc49])
#loc313 = loc(fused[#loc50, #loc47])
#loc314 = loc(fused[#loc54, #loc55])
#loc315 = loc(fused[#loc57, #loc56])
#loc316 = loc(fused[#loc58, #loc59])
#loc317 = loc(fused[#loc61, #loc55])
#loc318 = loc(fused[#loc63, #loc62])
#loc319 = loc(fused[#loc67, #loc66])
#loc320 = loc(fused[#loc68, #loc69])
#loc321 = loc(fused[#loc70, #loc71])
#loc322 = loc(fused[#loc72, #loc73, #loc74, #loc69])
#loc323 = loc(fused[#loc76, #loc75])
#loc324 = loc(fused[#loc79, #loc80])
#loc325 = loc(fused[#loc82, #loc81])
#loc326 = loc(fused[#loc83, #loc84])
#loc327 = loc(fused[#loc86, #loc80])
#loc328 = loc(fused[#loc92, #loc91])
#loc329 = loc(fused[#loc96, #loc97])
#loc330 = loc(fused[#loc98, #loc99])
#loc331 = loc(fused[#loc100, #loc101])
#loc332 = loc(fused[#loc102, #loc103])
#loc333 = loc(fused[#loc104, #loc105])
#loc334 = loc(fused[#loc110, #loc111])
#loc337 = loc(fused[#loc121, #loc122])
#loc338 = loc(fused[#loc125, #loc126])
#loc339 = loc(fused[#loc129, #loc128])
#loc340 = loc(fused[#loc130, #loc131])
#loc341 = loc(fused[#loc132, #loc133])
#loc342 = loc(fused[#loc134, #loc135])
#loc343 = loc(fused[#loc136, #loc137])
#loc344 = loc(fused[#loc138, #loc139])
#loc345 = loc(fused[#loc140, #loc141])
#loc346 = loc(fused[#loc144, #loc142])
#loc347 = loc(fused[#loc146, #loc145])
#loc348 = loc(fused[#loc148, #loc147])
#loc349 = loc(fused[#loc149, #loc150])
#loc350 = loc(fused[#loc151, #loc152])
#loc351 = loc(fused[#loc155, #loc156])
#loc352 = loc(fused[#loc154, #loc156])
#loc353 = loc(fused[#loc153, #loc137])
#loc354 = loc(fused[#loc157, #loc158])
#loc355 = loc(fused[#loc159, #loc160])
#loc356 = loc(fused[#loc161, #loc158])
#loc357 = loc(fused[#loc165, #loc166])
#loc358 = loc(fused[#loc168, #loc167])
#loc359 = loc(fused[#loc169, #loc170])
#loc360 = loc(fused[#loc172, #loc166])
#loc361 = loc(fused[#loc174, #loc173])
#loc362 = loc(fused[#loc178, #loc177])
#loc363 = loc(fused[#loc179, #loc180])
#loc364 = loc(fused[#loc181, #loc182])
#loc365 = loc(fused[#loc183, #loc184, #loc185, #loc180])
#loc366 = loc(fused[#loc187, #loc186])
#loc367 = loc(fused[#loc190, #loc191])
#loc368 = loc(fused[#loc193, #loc192])
#loc369 = loc(fused[#loc194, #loc195])
#loc370 = loc(fused[#loc197, #loc191])
#loc371 = loc(fused[#loc203, #loc202])
#loc372 = loc(fused[#loc209, #loc210])
#loc373 = loc(fused[#loc211, #loc212])
#loc374 = loc(fused[#loc213, #loc214])
#loc375 = loc(fused[#loc215, #loc216])
#loc376 = loc(fused[#loc217, #loc218])
#loc377 = loc(fused[#loc219, #loc220])
#loc378 = loc(fused[#loc223, #loc221])
#loc379 = loc(fused[#loc228, #loc227])
#loc380 = loc(fused[#loc229, #loc230])
#loc381 = loc(fused[#loc231, #loc232])
#loc382 = loc(fused[#loc235, #loc236])
#loc383 = loc(fused[#loc234, #loc236])
#loc384 = loc(fused[#loc233, #loc216])
#loc385 = loc(fused[#loc237, #loc238])
#loc386 = loc(fused[#loc239, #loc240])
#loc387 = loc(fused[#loc241, #loc238])
#loc388 = loc(fused[#loc245, #loc246])
#loc389 = loc(fused[#loc248, #loc247])
#loc390 = loc(fused[#loc249, #loc250])
#loc391 = loc(fused[#loc252, #loc246])
#loc392 = loc(fused[#loc254, #loc253])
#loc393 = loc(fused[#loc258, #loc257])
#loc394 = loc(fused[#loc259, #loc260])
#loc395 = loc(fused[#loc261, #loc262])
#loc396 = loc(fused[#loc264, #loc266])
#loc397 = loc(fused[#loc267, #loc268, #loc269, #loc260])
#loc398 = loc(fused[#loc271, #loc270])
#loc399 = loc(fused[#loc274, #loc275])
#loc400 = loc(fused[#loc277, #loc276])
#loc401 = loc(fused[#loc278, #loc279])
#loc402 = loc(fused[#loc281, #loc275])
#loc403 = loc(fused[#loc287, #loc286])
