!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__char_realloc_14.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc111)
  cir.global "private"  external @globalFive : !s32i {alignment = 4 : i64} loc(#loc112)
  cir.func private  @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc113)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Initialize\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> {alignment = 1 : i64} loc(#loc7)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc114)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc115)
  cir.func no_proto  @CWE690_NULL_Deref_From_Return__char_realloc_14_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc117)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc16)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc118)
    %2 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc18)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc19)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc20)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc20)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc119)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc120)
    %9 = cir.call @realloc(%4, %8) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc18)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc121)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
    cir.scope {
      %11 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc112)
      %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc27)
      %13 = cir.const #cir.int<5> : !s32i loc(#loc28)
      %14 = cir.cmp(eq, %12, %13) : !s32i, !s32i loc(#loc124)
      %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc29)
      cir.if %15 {
        %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc31)
        %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
        %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc7)
        %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc7)
        %20 = cir.call @strcpy(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc31)
        %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
        cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc34)
        %22 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc35)
        %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
        %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc36)
        cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc35)
      } loc(#loc125)
    } loc(#loc123)
    cir.return loc(#loc13)
  } loc(#loc116)
  cir.func no_proto  @CWE690_NULL_Deref_From_Return__char_realloc_14_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc127)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc39)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc128)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    cir.return loc(#loc38)
  } loc(#loc126)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc43)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc130)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc48)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
    %2 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc50)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc51)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc52)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc52)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc132)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc133)
    %9 = cir.call @realloc(%4, %8) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc50)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc134)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc135)
    cir.scope {
      %11 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc112)
      %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc59)
      %13 = cir.const #cir.int<5> : !s32i loc(#loc60)
      %14 = cir.cmp(ne, %12, %13) : !s32i, !s32i loc(#loc137)
      %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc61)
      cir.if %15 {
        %16 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc43)
        %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc43)
        cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc65)
      } else {
        cir.scope {
          %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
          %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc69)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc69)
          %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !s32i loc(#loc140)
          %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc70)
          cir.if %20 {
            %21 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc72)
            %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
            %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc74)
            %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc74)
            %25 = cir.call @strcpy(%22, %24) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc72)
            %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
            cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc76)
            %27 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc77)
            %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc78)
            cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc77)
          } loc(#loc141)
        } loc(#loc139)
      } loc(#loc138)
    } loc(#loc136)
    cir.return loc(#loc45)
  } loc(#loc129)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc143)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc83)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc144)
    %2 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc85)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc86)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc87)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc87)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc145)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc146)
    %9 = cir.call @realloc(%4, %8) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc85)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc147)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc148)
    cir.scope {
      %11 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc112)
      %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc94)
      %13 = cir.const #cir.int<5> : !s32i loc(#loc95)
      %14 = cir.cmp(eq, %12, %13) : !s32i, !s32i loc(#loc150)
      %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc96)
      cir.if %15 {
        cir.scope {
          %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
          %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc101)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc101)
          %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !s32i loc(#loc153)
          %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc102)
          cir.if %20 {
            %21 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc104)
            %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
            %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc106)
            %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc106)
            %25 = cir.call @strcpy(%22, %24) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc104)
            %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
            cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc108)
            %27 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc109)
            %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc110)
            cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc109)
          } loc(#loc154)
        } loc(#loc152)
      } loc(#loc151)
    } loc(#loc149)
    cir.return loc(#loc80)
  } loc(#loc142)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__char_realloc_14.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":683:1)
#loc2 = loc("/usr/include/stdlib.h":684:14)
#loc3 = loc("../../../testcasesupport/std_testcase.h":118:1)
#loc4 = loc("../../../testcasesupport/std_testcase.h":118:12)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":32:22)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("/usr/include/stdlib.h":687:1)
#loc11 = loc("/usr/include/stdlib.h":687:32)
#loc12 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":23:1)
#loc13 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":36:1)
#loc14 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":25:5)
#loc15 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":25:12)
#loc16 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":26:12)
#loc17 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":26:5)
#loc18 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":28:20)
#loc19 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":28:28)
#loc20 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":28:34)
#loc21 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":28:37)
#loc22 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":28:48)
#loc23 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":28:49)
#loc24 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":28:5)
#loc25 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":29:5)
#loc26 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":35:5)
#loc27 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":29:8)
#loc28 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":29:20)
#loc29 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":29:18)
#loc30 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":30:5)
#loc31 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":32:9)
#loc32 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":32:16)
#loc33 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":33:19)
#loc34 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":33:9)
#loc35 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":34:9)
#loc36 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":34:14)
#loc37 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":85:1)
#loc38 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":89:1)
#loc39 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":87:5)
#loc40 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":87:14)
#loc41 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":88:5)
#loc42 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":88:14)
#loc43 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":52:19)
#loc44 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":43:1)
#loc45 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":64:1)
#loc46 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":45:5)
#loc47 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":45:12)
#loc48 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":46:12)
#loc49 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":46:5)
#loc50 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":48:20)
#loc51 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":48:28)
#loc52 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":48:34)
#loc53 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":48:37)
#loc54 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":48:48)
#loc55 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":48:49)
#loc56 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":48:5)
#loc57 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":49:5)
#loc58 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":63:5)
#loc59 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":49:8)
#loc60 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":49:20)
#loc61 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":49:18)
#loc62 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":50:5)
#loc63 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":53:5)
#loc64 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":55:5)
#loc65 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":52:9)
#loc66 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":57:9)
#loc67 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":62:9)
#loc68 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":57:13)
#loc69 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":57:21)
#loc70 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":57:18)
#loc71 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":58:9)
#loc72 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":59:13)
#loc73 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":59:20)
#loc74 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":59:26)
#loc75 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":60:23)
#loc76 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":60:13)
#loc77 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":61:13)
#loc78 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":61:18)
#loc79 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":67:1)
#loc80 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":83:1)
#loc81 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":69:5)
#loc82 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":69:12)
#loc83 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":70:12)
#loc84 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":70:5)
#loc85 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":72:20)
#loc86 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":72:28)
#loc87 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":72:34)
#loc88 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":72:37)
#loc89 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":72:48)
#loc90 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":72:49)
#loc91 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":72:5)
#loc92 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":73:5)
#loc93 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":82:5)
#loc94 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":73:8)
#loc95 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":73:20)
#loc96 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":73:18)
#loc97 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":74:5)
#loc98 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":76:9)
#loc99 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":81:9)
#loc100 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":76:13)
#loc101 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":76:21)
#loc102 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":76:18)
#loc103 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":77:9)
#loc104 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":78:13)
#loc105 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":78:20)
#loc106 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":78:26)
#loc107 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":79:23)
#loc108 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":79:13)
#loc109 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":80:13)
#loc110 = loc("CWE690_NULL_Deref_From_Return__char_realloc_14.c":80:18)
#loc111 = loc(fused[#loc1, #loc2])
#loc112 = loc(fused[#loc3, #loc4])
#loc113 = loc(fused[#loc5, #loc6])
#loc114 = loc(fused[#loc8, #loc9])
#loc115 = loc(fused[#loc10, #loc11])
#loc116 = loc(fused[#loc12, #loc13])
#loc117 = loc(fused[#loc14, #loc15])
#loc118 = loc(fused[#loc17, #loc16])
#loc119 = loc(fused[#loc21, #loc22])
#loc120 = loc(fused[#loc20, #loc22])
#loc121 = loc(fused[#loc18, #loc23])
#loc122 = loc(fused[#loc24, #loc23])
#loc123 = loc(fused[#loc25, #loc26])
#loc124 = loc(fused[#loc27, #loc28])
#loc125 = loc(fused[#loc30, #loc26])
#loc126 = loc(fused[#loc37, #loc38])
#loc127 = loc(fused[#loc39, #loc40])
#loc128 = loc(fused[#loc41, #loc42])
#loc129 = loc(fused[#loc44, #loc45])
#loc130 = loc(fused[#loc46, #loc47])
#loc131 = loc(fused[#loc49, #loc48])
#loc132 = loc(fused[#loc53, #loc54])
#loc133 = loc(fused[#loc52, #loc54])
#loc134 = loc(fused[#loc50, #loc55])
#loc135 = loc(fused[#loc56, #loc55])
#loc136 = loc(fused[#loc57, #loc58])
#loc137 = loc(fused[#loc59, #loc60])
#loc138 = loc(fused[#loc62, #loc63, #loc64, #loc58])
#loc139 = loc(fused[#loc66, #loc67])
#loc140 = loc(fused[#loc68, #loc69])
#loc141 = loc(fused[#loc71, #loc67])
#loc142 = loc(fused[#loc79, #loc80])
#loc143 = loc(fused[#loc81, #loc82])
#loc144 = loc(fused[#loc84, #loc83])
#loc145 = loc(fused[#loc88, #loc89])
#loc146 = loc(fused[#loc87, #loc89])
#loc147 = loc(fused[#loc85, #loc90])
#loc148 = loc(fused[#loc91, #loc90])
#loc149 = loc(fused[#loc92, #loc93])
#loc150 = loc(fused[#loc94, #loc95])
#loc151 = loc(fused[#loc97, #loc93])
#loc152 = loc(fused[#loc98, #loc99])
#loc153 = loc(fused[#loc100, #loc101])
#loc154 = loc(fused[#loc103, #loc99])
