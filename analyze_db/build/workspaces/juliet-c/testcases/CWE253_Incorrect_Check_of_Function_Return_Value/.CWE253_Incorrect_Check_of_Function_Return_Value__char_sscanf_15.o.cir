!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc92)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc4)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc93)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"sscanf failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc7)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc8)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc13)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc97)
            %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc98)
            %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc97)
            cir.store %3, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc97)
            %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc20)
            cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc98)
            cir.scope {
              %5 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc23)
              %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc3)
              %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc3)
              %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc4)
              %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc4)
              %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
              %11 = cir.call @__isoc99_sscanf(%7, %9, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc23)
              %12 = cir.const #cir.int<0> : !s32i loc(#loc25)
              %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc100)
              cir.if %13 {
                %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc7)
                %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc7)
                cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc27)
              } loc(#loc101)
            } loc(#loc99)
          } loc(#loc96)
          cir.break loc(#loc28)
        } loc(#loc14)
        cir.case(default, []) {
          %1 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc8)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc8)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc30)
          cir.break loc(#loc31)
        } loc(#loc29)
        cir.yield loc(#loc11)
      } loc(#loc11)
    } loc(#loc95)
    cir.return loc(#loc10)
  } loc(#loc94)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc103)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc34)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc104)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc36)
    cir.return loc(#loc33)
  } loc(#loc102)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc42)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %1 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc44)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc44)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc45)
          cir.break loc(#loc46)
        } loc(#loc43)
        cir.case(default, []) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc108)
            %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc109)
            %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc108)
            cir.store %3, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc108)
            %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc53)
            cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc109)
            cir.scope {
              %5 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc56)
              %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc57)
              %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc57)
              %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc58)
              %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc58)
              %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
              %11 = cir.call @__isoc99_sscanf(%7, %9, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc56)
              %12 = cir.const #cir.int<1> : !s32i loc(#loc60)
              %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc60)
              %14 = cir.cmp(eq, %11, %13) : !s32i, !cir.bool loc(#loc111)
              cir.if %14 {
                %15 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc62)
                %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc62)
                cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc63)
              } loc(#loc112)
            } loc(#loc110)
          } loc(#loc107)
          cir.break loc(#loc64)
        } loc(#loc47)
        cir.yield loc(#loc40)
      } loc(#loc40)
    } loc(#loc106)
    cir.return loc(#loc39)
  } loc(#loc105)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc69)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc116)
            %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc117)
            %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc116)
            cir.store %3, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc116)
            %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc76)
            cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
            cir.scope {
              %5 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc79)
              %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc80)
              %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc80)
              %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc81)
              %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc81)
              %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
              %11 = cir.call @__isoc99_sscanf(%7, %9, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc79)
              %12 = cir.const #cir.int<1> : !s32i loc(#loc83)
              %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc83)
              %14 = cir.cmp(eq, %11, %13) : !s32i, !cir.bool loc(#loc119)
              cir.if %14 {
                %15 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc85)
                %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc85)
                cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc86)
              } loc(#loc120)
            } loc(#loc118)
          } loc(#loc115)
          cir.break loc(#loc87)
        } loc(#loc70)
        cir.case(default, []) {
          %1 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc89)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc89)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc90)
          cir.break loc(#loc91)
        } loc(#loc88)
        cir.yield loc(#loc67)
      } loc(#loc67)
    } loc(#loc114)
    cir.return loc(#loc66)
  } loc(#loc113)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":468:1)
#loc2 = loc("/usr/include/stdio.h":468:12)
#loc3 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":38:20)
#loc4 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":38:32)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":40:23)
#loc8 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":46:19)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":26:1)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":49:1)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":28:5)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":48:5)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":28:12)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":30:5)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":31:5)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":42:5)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":34:9)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":34:32)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":35:9)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":35:23)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":38:9)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":41:9)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":38:13)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":38:42)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":38:51)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":39:9)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":40:13)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":43:5)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":44:5)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":46:9)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":47:9)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":105:1)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":109:1)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":107:5)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":107:11)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":108:5)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":108:11)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":56:1)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":78:1)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":58:5)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":77:5)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":58:12)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":60:5)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":62:19)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":62:9)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":63:9)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":64:5)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":65:5)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":75:5)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":68:9)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":68:32)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":69:9)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":69:23)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":71:9)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":74:9)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":71:13)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":71:20)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":71:32)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":71:42)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":71:51)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":72:9)
#loc62 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":73:23)
#loc63 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":73:13)
#loc64 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":76:5)
#loc65 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":81:1)
#loc66 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":103:1)
#loc67 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":83:5)
#loc68 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":102:5)
#loc69 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":83:12)
#loc70 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":85:5)
#loc71 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":86:5)
#loc72 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":96:5)
#loc73 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":89:9)
#loc74 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":89:32)
#loc75 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":90:9)
#loc76 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":90:23)
#loc77 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":92:9)
#loc78 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":95:9)
#loc79 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":92:13)
#loc80 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":92:20)
#loc81 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":92:32)
#loc82 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":92:42)
#loc83 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":92:51)
#loc84 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":93:9)
#loc85 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":94:23)
#loc86 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":94:13)
#loc87 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":97:5)
#loc88 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":98:5)
#loc89 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":100:19)
#loc90 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":100:9)
#loc91 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_15.c":101:9)
#loc92 = loc(fused[#loc1, #loc2])
#loc93 = loc(fused[#loc5, #loc6])
#loc94 = loc(fused[#loc9, #loc10])
#loc95 = loc(fused[#loc11, #loc12])
#loc96 = loc(fused[#loc15, #loc16])
#loc97 = loc(fused[#loc17, #loc18])
#loc98 = loc(fused[#loc19, #loc20])
#loc99 = loc(fused[#loc21, #loc22])
#loc100 = loc(fused[#loc23, #loc25])
#loc101 = loc(fused[#loc26, #loc22])
#loc102 = loc(fused[#loc32, #loc33])
#loc103 = loc(fused[#loc34, #loc35])
#loc104 = loc(fused[#loc36, #loc37])
#loc105 = loc(fused[#loc38, #loc39])
#loc106 = loc(fused[#loc40, #loc41])
#loc107 = loc(fused[#loc48, #loc49])
#loc108 = loc(fused[#loc50, #loc51])
#loc109 = loc(fused[#loc52, #loc53])
#loc110 = loc(fused[#loc54, #loc55])
#loc111 = loc(fused[#loc56, #loc60])
#loc112 = loc(fused[#loc61, #loc55])
#loc113 = loc(fused[#loc65, #loc66])
#loc114 = loc(fused[#loc67, #loc68])
#loc115 = loc(fused[#loc71, #loc72])
#loc116 = loc(fused[#loc73, #loc74])
#loc117 = loc(fused[#loc75, #loc76])
#loc118 = loc(fused[#loc77, #loc78])
#loc119 = loc(fused[#loc79, #loc83])
#loc120 = loc(fused[#loc84, #loc78])
