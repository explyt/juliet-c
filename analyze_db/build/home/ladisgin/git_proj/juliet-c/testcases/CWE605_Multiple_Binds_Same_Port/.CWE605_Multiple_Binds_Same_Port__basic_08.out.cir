!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc210 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":358:10)
#loc211 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":358:14)
#loc212 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":358:20)
#loc213 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":358:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc621 = loc(fused[#loc210, #loc211])
#loc622 = loc(fused[#loc212, #loc213])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE605_Multiple_Binds_Same_Port/CWE605_Multiple_Binds_Same_Port__basic_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc538)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc539)
  cir.func private @setsockopt(!s32i, !s32i, !s32i, !cir.ptr<!void>, !u32i) -> !s32i extra(#fn_attr) loc(#loc540)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc541)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc542)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc543)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc544)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc545)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc546)
  cir.func private @close(!s32i) -> !s32i loc(#loc547)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc548)
  cir.func no_proto @CWE605_Multiple_Binds_Same_Port__basic_08_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc551)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc27)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc27)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data"] {alignment = 16 : i64} loc(#loc554)
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc555)
          %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc556)
          %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc557)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc558)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc559)
          %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc560)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["bOptVal", init] {alignment = 4 : i64} loc(#loc561)
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["bOptLen", init] {alignment = 4 : i64} loc(#loc562)
          %12 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc554)
          cir.store %12, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc554)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc41)
          %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc41)
          cir.store %14, %7 : !s32i, !cir.ptr<!s32i> loc(#loc558)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc43)
          %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc43)
          cir.store %16, %8 : !s32i, !cir.ptr<!s32i> loc(#loc559)
          %17 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc50)
          %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc51)
          %19 = cir.call @strlen(%18) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc50)
          cir.store %19, %9 : !u64i, !cir.ptr<!u64i> loc(#loc560)
          %20 = cir.const #cir.int<1> : !s32i loc(#loc47)
          cir.store %20, %10 : !s32i, !cir.ptr<!s32i> loc(#loc561)
          %21 = cir.const #cir.int<4> : !u64i loc(#loc563)
          %22 = cir.cast(integral, %21 : !u64i), !s32i loc(#loc563)
          cir.store %22, %11 : !s32i, !cir.ptr<!s32i> loc(#loc562)
          cir.scope {
            cir.do {
              %24 = cir.const #cir.int<2> : !s32i loc(#loc55)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc56)
              %26 = cir.const #cir.int<6> : !s32i loc(#loc57)
              %27 = cir.call @socket(%24, %25, %26) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc58)
              cir.store %27, %7 : !s32i, !cir.ptr<!s32i> loc(#loc565)
              cir.scope {
                %76 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc63)
                %77 = cir.const #cir.int<1> : !s32i loc(#loc64)
                %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc64)
                %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc567)
                cir.if %79 {
                  cir.break loc(#loc66)
                } loc(#loc568)
              } loc(#loc566)
              cir.scope {
                %76 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc69)
                %77 = cir.const #cir.int<1> : !s32i loc(#loc70)
                %78 = cir.const #cir.int<2> : !s32i loc(#loc71)
                %79 = cir.cast(bitcast, %10 : !cir.ptr<!s32i>), !cir.ptr<!s8i> loc(#loc570)
                %80 = cir.cast(bitcast, %79 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc571)
                %81 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc75)
                %82 = cir.cast(integral, %81 : !s32i), !u32i loc(#loc75)
                %83 = cir.call @setsockopt(%76, %77, %78, %80, %82) : (!s32i, !s32i, !s32i, !cir.ptr<!void>, !u32i) -> !s32i extra(#fn_attr) loc(#loc76)
                %84 = cir.const #cir.int<0> : !s32i loc(#loc77)
                %85 = cir.cmp(ne, %83, %84) : !s32i, !cir.bool loc(#loc572)
                cir.if %85 {
                  cir.break loc(#loc79)
                } loc(#loc573)
              } loc(#loc569)
              %28 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc574)
              %29 = cir.const #cir.int<0> : !s32i loc(#loc82)
              %30 = cir.const #cir.int<16> : !u64i loc(#loc575)
              cir.libc.memset %30 bytes from %28 set to %29 : !cir.ptr<!void>, !s32i, !u64i loc(#loc576)
              %31 = cir.const #cir.int<2> : !s32i loc(#loc87)
              %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc87)
              %33 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc88)
              cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc577)
              %34 = cir.const #cir.int<0> : !s32i loc(#loc90)
              %35 = cir.cast(integral, %34 : !s32i), !u32i loc(#loc90)
              %36 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc91)
              %37 = cir.get_member %36[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc92)
              cir.store %35, %37 : !u32i, !cir.ptr<!u32i> loc(#loc578)
              %38 = cir.const #cir.int<27015> : !s32i loc(#loc94)
              %39 = cir.cast(integral, %38 : !s32i), !u16i loc(#loc94)
              %40 = cir.call @htons(%39) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc95)
              %41 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc96)
              cir.store %40, %41 : !u16i, !cir.ptr<!u16i> loc(#loc579)
              cir.scope {
                %76 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc101)
                %77 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc581)
                %78 = cir.const #cir.int<16> : !u64i loc(#loc582)
                %79 = cir.cast(integral, %78 : !u64i), !u32i loc(#loc582)
                %80 = cir.call @bind(%76, %77, %79) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc106)
                %81 = cir.const #cir.int<1> : !s32i loc(#loc107)
                %82 = cir.unary(minus, %81) : !s32i, !s32i loc(#loc107)
                %83 = cir.cmp(eq, %80, %82) : !s32i, !cir.bool loc(#loc583)
                cir.if %83 {
                  cir.break loc(#loc109)
                } loc(#loc584)
              } loc(#loc580)
              cir.scope {
                %76 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc112)
                %77 = cir.const #cir.int<5> : !s32i loc(#loc113)
                %78 = cir.call @listen(%76, %77) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc114)
                %79 = cir.const #cir.int<1> : !s32i loc(#loc115)
                %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc115)
                %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc586)
                cir.if %81 {
                  cir.break loc(#loc117)
                } loc(#loc587)
              } loc(#loc585)
              %42 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc118)
              %43 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc119)
              %44 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc120)
              %45 = cir.call @accept(%42, %43, %44) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc121)
              cir.store %45, %8 : !s32i, !cir.ptr<!s32i> loc(#loc588)
              cir.scope {
                %76 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc126)
                %77 = cir.const #cir.int<1> : !s32i loc(#loc127)
                %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc127)
                %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc590)
                cir.if %79 {
                  cir.break loc(#loc129)
                } loc(#loc591)
              } loc(#loc589)
              %46 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc130)
              %47 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc131)
              %48 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc132)
              %49 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %48 : !u64i), !cir.ptr<!s8i> loc(#loc133)
              %50 = cir.cast(bitcast, %49 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc592)
              %51 = cir.const #cir.int<100> : !s32i loc(#loc134)
              %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc134)
              %53 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc135)
              %54 = cir.binop(sub, %52, %53) : !u64i loc(#loc593)
              %55 = cir.const #cir.int<1> : !s32i loc(#loc136)
              %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc136)
              %57 = cir.binop(sub, %54, %56) : !u64i loc(#loc594)
              %58 = cir.cast(integral, %57 : !u64i), !s32i loc(#loc594)
              %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc594)
              %60 = cir.const #cir.int<0> : !s32i loc(#loc137)
              %61 = cir.call @recv(%46, %50, %59, %60) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc138)
              %62 = cir.cast(integral, %61 : !s64i), !s32i loc(#loc138)
              cir.store %62, %4 : !s32i, !cir.ptr<!s32i> loc(#loc595)
              cir.scope {
                %76 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc143)
                %77 = cir.const #cir.int<1> : !s32i loc(#loc144)
                %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc144)
                %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc597)
                %80 = cir.ternary(%79, true {
                  %81 = cir.const #true loc(#loc145)
                  cir.yield %81 : !cir.bool loc(#loc145)
                }, false {
                  %81 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc146)
                  %82 = cir.const #cir.int<0> : !s32i loc(#loc147)
                  %83 = cir.cmp(eq, %81, %82) : !s32i, !cir.bool loc(#loc598)
                  %84 = cir.ternary(%83, true {
                    %85 = cir.const #true loc(#loc145)
                    cir.yield %85 : !cir.bool loc(#loc145)
                  }, false {
                    %85 = cir.const #false loc(#loc145)
                    cir.yield %85 : !cir.bool loc(#loc145)
                  }) : (!cir.bool) -> !cir.bool loc(#loc145)
                  cir.yield %84 : !cir.bool loc(#loc145)
                }) : (!cir.bool) -> !cir.bool loc(#loc145)
                cir.if %80 {
                  cir.break loc(#loc149)
                } loc(#loc599)
              } loc(#loc596)
              %63 = cir.const #cir.int<0> : !s32i loc(#loc150)
              %64 = cir.cast(integral, %63 : !s32i), !s8i loc(#loc150)
              %65 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc151)
              %66 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc152)
              %67 = cir.ptr_stride(%66 : !cir.ptr<!s8i>, %65 : !s32i), !cir.ptr<!s8i> loc(#loc152)
              cir.store %64, %67 : !s8i, !cir.ptr<!s8i> loc(#loc600)
              %68 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc153)
              %69 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc154)
              %70 = cir.const #cir.int<13> : !s32i loc(#loc155)
              %71 = cir.call @strchr(%69, %70) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc153)
              cir.store %71, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc601)
              cir.scope {
                %76 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
                %77 = cir.cast(ptr_to_bool, %76 : !cir.ptr<!s8i>), !cir.bool loc(#loc160)
                cir.if %77 {
                  %78 = cir.const #cir.int<0> : !s32i loc(#loc162)
                  %79 = cir.cast(integral, %78 : !s32i), !s8i loc(#loc162)
                  %80 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
                  cir.store %79, %80 : !s8i, !cir.ptr<!s8i> loc(#loc604)
                } loc(#loc603)
              } loc(#loc602)
              %72 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc165)
              %73 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc166)
              %74 = cir.const #cir.int<10> : !s32i loc(#loc167)
              %75 = cir.call @strchr(%73, %74) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc165)
              cir.store %75, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc605)
              cir.scope {
                %76 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
                %77 = cir.cast(ptr_to_bool, %76 : !cir.ptr<!s8i>), !cir.bool loc(#loc172)
                cir.if %77 {
                  %78 = cir.const #cir.int<0> : !s32i loc(#loc174)
                  %79 = cir.cast(integral, %78 : !s32i), !s8i loc(#loc174)
                  %80 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc175)
                  cir.store %79, %80 : !s8i, !cir.ptr<!s8i> loc(#loc608)
                } loc(#loc607)
              } loc(#loc606)
              cir.yield loc(#loc54)
            } while {
              %24 = cir.const #cir.int<0> : !s32i loc(#loc177)
              %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc177)
              cir.condition(%25) loc(#loc177)
            } loc(#loc564)
          } loc(#loc564)
          cir.scope {
            %24 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc180)
            %25 = cir.const #cir.int<1> : !s32i loc(#loc181)
            %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc181)
            %27 = cir.cmp(ne, %24, %26) : !s32i, !cir.bool loc(#loc610)
            cir.if %27 {
              %28 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc183)
              %29 = cir.call @close(%28) : (!s32i) -> !s32i loc(#loc184)
            } loc(#loc611)
          } loc(#loc609)
          cir.scope {
            %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc187)
            %25 = cir.const #cir.int<1> : !s32i loc(#loc188)
            %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc188)
            %27 = cir.cmp(ne, %24, %26) : !s32i, !cir.bool loc(#loc613)
            cir.if %27 {
              %28 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc190)
              %29 = cir.call @close(%28) : (!s32i) -> !s32i loc(#loc191)
            } loc(#loc614)
          } loc(#loc612)
          %23 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc192)
          cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc193)
        } loc(#loc553)
      } loc(#loc552)
    } loc(#loc550)
    cir.return loc(#loc24)
  } loc(#loc549)
  cir.func no_proto @CWE605_Multiple_Binds_Same_Port__basic_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc616)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc196)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc617)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc198)
    cir.return loc(#loc195)
  } loc(#loc615)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc618)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc619)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc204)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc205)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc206)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc207)
  cir.func @main(%arg0: !s32i loc(fused[#loc210, #loc211]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc212, #loc213])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc621)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc622)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc209)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc214)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc214)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc215)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc216)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc216)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc217)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc204)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc204)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc218)
    %8 = cir.get_global @CWE605_Multiple_Binds_Same_Port__basic_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc623)
    cir.call @CWE605_Multiple_Binds_Same_Port__basic_08_good() : () -> () loc(#loc219)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc205)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc205)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc221)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc206)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc206)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc222)
    %13 = cir.get_global @CWE605_Multiple_Binds_Same_Port__basic_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc624)
    cir.call @CWE605_Multiple_Binds_Same_Port__basic_08_bad() : () -> () loc(#loc223)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc207)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc207)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc225)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc226)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc625)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc625)
    cir.return %17 : !s32i loc(#loc625)
  } loc(#loc620)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc229)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc230)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc627)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc627)
    cir.return %2 : !s32i loc(#loc627)
  } loc(#loc626)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc232)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc630)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc237)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc237)
      cir.if %2 {
        %3 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc232)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc232)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc242)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data"] {alignment = 16 : i64} loc(#loc633)
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc634)
          %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc635)
          %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc636)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc637)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc638)
          %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc639)
          %10 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc633)
          cir.store %10, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc633)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc254)
          %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc254)
          cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc637)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc256)
          %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc256)
          cir.store %14, %8 : !s32i, !cir.ptr<!s32i> loc(#loc638)
          %15 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc259)
          %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc260)
          %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc259)
          cir.store %17, %9 : !u64i, !cir.ptr<!u64i> loc(#loc639)
          cir.scope {
            cir.do {
              %19 = cir.const #cir.int<2> : !s32i loc(#loc263)
              %20 = cir.const #cir.int<1> : !s32i loc(#loc264)
              %21 = cir.const #cir.int<6> : !s32i loc(#loc265)
              %22 = cir.call @socket(%19, %20, %21) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc266)
              cir.store %22, %7 : !s32i, !cir.ptr<!s32i> loc(#loc641)
              cir.scope {
                %71 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc271)
                %72 = cir.const #cir.int<1> : !s32i loc(#loc272)
                %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc272)
                %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc643)
                cir.if %74 {
                  cir.break loc(#loc274)
                } loc(#loc644)
              } loc(#loc642)
              %23 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc645)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc277)
              %25 = cir.const #cir.int<16> : !u64i loc(#loc646)
              cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc647)
              %26 = cir.const #cir.int<2> : !s32i loc(#loc282)
              %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc282)
              %28 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc88)
              cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc648)
              %29 = cir.const #cir.int<0> : !s32i loc(#loc284)
              %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc284)
              %31 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc91)
              %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc92)
              cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc649)
              %33 = cir.const #cir.int<27015> : !s32i loc(#loc286)
              %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc286)
              %35 = cir.call @htons(%34) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc287)
              %36 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc96)
              cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc650)
              cir.scope {
                %71 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc292)
                %72 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc652)
                %73 = cir.const #cir.int<16> : !u64i loc(#loc653)
                %74 = cir.cast(integral, %73 : !u64i), !u32i loc(#loc653)
                %75 = cir.call @bind(%71, %72, %74) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc297)
                %76 = cir.const #cir.int<1> : !s32i loc(#loc298)
                %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc298)
                %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc654)
                cir.if %78 {
                  cir.break loc(#loc300)
                } loc(#loc655)
              } loc(#loc651)
              cir.scope {
                %71 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc303)
                %72 = cir.const #cir.int<5> : !s32i loc(#loc304)
                %73 = cir.call @listen(%71, %72) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc305)
                %74 = cir.const #cir.int<1> : !s32i loc(#loc306)
                %75 = cir.unary(minus, %74) : !s32i, !s32i loc(#loc306)
                %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc657)
                cir.if %76 {
                  cir.break loc(#loc308)
                } loc(#loc658)
              } loc(#loc656)
              %37 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc309)
              %38 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc310)
              %39 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc311)
              %40 = cir.call @accept(%37, %38, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc312)
              cir.store %40, %8 : !s32i, !cir.ptr<!s32i> loc(#loc659)
              cir.scope {
                %71 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc317)
                %72 = cir.const #cir.int<1> : !s32i loc(#loc318)
                %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc318)
                %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc661)
                cir.if %74 {
                  cir.break loc(#loc320)
                } loc(#loc662)
              } loc(#loc660)
              %41 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc321)
              %42 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc322)
              %43 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc323)
              %44 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc324)
              %45 = cir.cast(bitcast, %44 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc663)
              %46 = cir.const #cir.int<100> : !s32i loc(#loc325)
              %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc325)
              %48 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc326)
              %49 = cir.binop(sub, %47, %48) : !u64i loc(#loc664)
              %50 = cir.const #cir.int<1> : !s32i loc(#loc327)
              %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc327)
              %52 = cir.binop(sub, %49, %51) : !u64i loc(#loc665)
              %53 = cir.cast(integral, %52 : !u64i), !s32i loc(#loc665)
              %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc665)
              %55 = cir.const #cir.int<0> : !s32i loc(#loc328)
              %56 = cir.call @recv(%41, %45, %54, %55) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc329)
              %57 = cir.cast(integral, %56 : !s64i), !s32i loc(#loc329)
              cir.store %57, %4 : !s32i, !cir.ptr<!s32i> loc(#loc666)
              cir.scope {
                %71 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc334)
                %72 = cir.const #cir.int<1> : !s32i loc(#loc335)
                %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc335)
                %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc668)
                %75 = cir.ternary(%74, true {
                  %76 = cir.const #true loc(#loc336)
                  cir.yield %76 : !cir.bool loc(#loc336)
                }, false {
                  %76 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc337)
                  %77 = cir.const #cir.int<0> : !s32i loc(#loc338)
                  %78 = cir.cmp(eq, %76, %77) : !s32i, !cir.bool loc(#loc669)
                  %79 = cir.ternary(%78, true {
                    %80 = cir.const #true loc(#loc336)
                    cir.yield %80 : !cir.bool loc(#loc336)
                  }, false {
                    %80 = cir.const #false loc(#loc336)
                    cir.yield %80 : !cir.bool loc(#loc336)
                  }) : (!cir.bool) -> !cir.bool loc(#loc336)
                  cir.yield %79 : !cir.bool loc(#loc336)
                }) : (!cir.bool) -> !cir.bool loc(#loc336)
                cir.if %75 {
                  cir.break loc(#loc340)
                } loc(#loc670)
              } loc(#loc667)
              %58 = cir.const #cir.int<0> : !s32i loc(#loc341)
              %59 = cir.cast(integral, %58 : !s32i), !s8i loc(#loc341)
              %60 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc342)
              %61 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc343)
              %62 = cir.ptr_stride(%61 : !cir.ptr<!s8i>, %60 : !s32i), !cir.ptr<!s8i> loc(#loc343)
              cir.store %59, %62 : !s8i, !cir.ptr<!s8i> loc(#loc671)
              %63 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc344)
              %64 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc345)
              %65 = cir.const #cir.int<13> : !s32i loc(#loc346)
              %66 = cir.call @strchr(%64, %65) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc344)
              cir.store %66, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc672)
              cir.scope {
                %71 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc351)
                %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc351)
                cir.if %72 {
                  %73 = cir.const #cir.int<0> : !s32i loc(#loc353)
                  %74 = cir.cast(integral, %73 : !s32i), !s8i loc(#loc353)
                  %75 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc354)
                  cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc675)
                } loc(#loc674)
              } loc(#loc673)
              %67 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc356)
              %68 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc357)
              %69 = cir.const #cir.int<10> : !s32i loc(#loc358)
              %70 = cir.call @strchr(%68, %69) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc356)
              cir.store %70, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc676)
              cir.scope {
                %71 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc363)
                %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc363)
                cir.if %72 {
                  %73 = cir.const #cir.int<0> : !s32i loc(#loc365)
                  %74 = cir.cast(integral, %73 : !s32i), !s8i loc(#loc365)
                  %75 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc366)
                  cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc679)
                } loc(#loc678)
              } loc(#loc677)
              cir.yield loc(#loc262)
            } while {
              %19 = cir.const #cir.int<0> : !s32i loc(#loc368)
              %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc368)
              cir.condition(%20) loc(#loc368)
            } loc(#loc640)
          } loc(#loc640)
          cir.scope {
            %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc371)
            %20 = cir.const #cir.int<1> : !s32i loc(#loc372)
            %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc372)
            %22 = cir.cmp(ne, %19, %21) : !s32i, !cir.bool loc(#loc681)
            cir.if %22 {
              %23 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc374)
              %24 = cir.call @close(%23) : (!s32i) -> !s32i loc(#loc375)
            } loc(#loc682)
          } loc(#loc680)
          cir.scope {
            %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc378)
            %20 = cir.const #cir.int<1> : !s32i loc(#loc379)
            %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc379)
            %22 = cir.cmp(ne, %19, %21) : !s32i, !cir.bool loc(#loc684)
            cir.if %22 {
              %23 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc381)
              %24 = cir.call @close(%23) : (!s32i) -> !s32i loc(#loc382)
            } loc(#loc685)
          } loc(#loc683)
          %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc383)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc384)
        } loc(#loc632)
      } loc(#loc631)
    } loc(#loc629)
    cir.return loc(#loc234)
  } loc(#loc628)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc386)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc387)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc687)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc687)
    cir.return %2 : !s32i loc(#loc687)
  } loc(#loc686)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc690)
      %1 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc393)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc393)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data"] {alignment = 16 : i64} loc(#loc693)
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc694)
          %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc695)
          %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc696)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc697)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc698)
          %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc699)
          %10 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc693)
          cir.store %10, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc693)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc407)
          %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc407)
          cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc697)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc409)
          %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc409)
          cir.store %14, %8 : !s32i, !cir.ptr<!s32i> loc(#loc698)
          %15 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc412)
          %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc413)
          %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc412)
          cir.store %17, %9 : !u64i, !cir.ptr<!u64i> loc(#loc699)
          cir.scope {
            cir.do {
              %19 = cir.const #cir.int<2> : !s32i loc(#loc416)
              %20 = cir.const #cir.int<1> : !s32i loc(#loc417)
              %21 = cir.const #cir.int<6> : !s32i loc(#loc418)
              %22 = cir.call @socket(%19, %20, %21) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc419)
              cir.store %22, %7 : !s32i, !cir.ptr<!s32i> loc(#loc701)
              cir.scope {
                %71 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc424)
                %72 = cir.const #cir.int<1> : !s32i loc(#loc425)
                %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc425)
                %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc703)
                cir.if %74 {
                  cir.break loc(#loc427)
                } loc(#loc704)
              } loc(#loc702)
              %23 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc705)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc430)
              %25 = cir.const #cir.int<16> : !u64i loc(#loc706)
              cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc707)
              %26 = cir.const #cir.int<2> : !s32i loc(#loc435)
              %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc435)
              %28 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc88)
              cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc708)
              %29 = cir.const #cir.int<0> : !s32i loc(#loc437)
              %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc437)
              %31 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc91)
              %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc92)
              cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc709)
              %33 = cir.const #cir.int<27015> : !s32i loc(#loc439)
              %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc439)
              %35 = cir.call @htons(%34) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc440)
              %36 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc96)
              cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc710)
              cir.scope {
                %71 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc445)
                %72 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc712)
                %73 = cir.const #cir.int<16> : !u64i loc(#loc713)
                %74 = cir.cast(integral, %73 : !u64i), !u32i loc(#loc713)
                %75 = cir.call @bind(%71, %72, %74) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc450)
                %76 = cir.const #cir.int<1> : !s32i loc(#loc451)
                %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc451)
                %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc714)
                cir.if %78 {
                  cir.break loc(#loc453)
                } loc(#loc715)
              } loc(#loc711)
              cir.scope {
                %71 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc456)
                %72 = cir.const #cir.int<5> : !s32i loc(#loc457)
                %73 = cir.call @listen(%71, %72) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc458)
                %74 = cir.const #cir.int<1> : !s32i loc(#loc459)
                %75 = cir.unary(minus, %74) : !s32i, !s32i loc(#loc459)
                %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc717)
                cir.if %76 {
                  cir.break loc(#loc461)
                } loc(#loc718)
              } loc(#loc716)
              %37 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc462)
              %38 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc463)
              %39 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc464)
              %40 = cir.call @accept(%37, %38, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc465)
              cir.store %40, %8 : !s32i, !cir.ptr<!s32i> loc(#loc719)
              cir.scope {
                %71 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc470)
                %72 = cir.const #cir.int<1> : !s32i loc(#loc471)
                %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc471)
                %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc721)
                cir.if %74 {
                  cir.break loc(#loc473)
                } loc(#loc722)
              } loc(#loc720)
              %41 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc474)
              %42 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc475)
              %43 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc476)
              %44 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc477)
              %45 = cir.cast(bitcast, %44 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc723)
              %46 = cir.const #cir.int<100> : !s32i loc(#loc478)
              %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc478)
              %48 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc479)
              %49 = cir.binop(sub, %47, %48) : !u64i loc(#loc724)
              %50 = cir.const #cir.int<1> : !s32i loc(#loc480)
              %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc480)
              %52 = cir.binop(sub, %49, %51) : !u64i loc(#loc725)
              %53 = cir.cast(integral, %52 : !u64i), !s32i loc(#loc725)
              %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc725)
              %55 = cir.const #cir.int<0> : !s32i loc(#loc481)
              %56 = cir.call @recv(%41, %45, %54, %55) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc482)
              %57 = cir.cast(integral, %56 : !s64i), !s32i loc(#loc482)
              cir.store %57, %4 : !s32i, !cir.ptr<!s32i> loc(#loc726)
              cir.scope {
                %71 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc487)
                %72 = cir.const #cir.int<1> : !s32i loc(#loc488)
                %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc488)
                %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc728)
                %75 = cir.ternary(%74, true {
                  %76 = cir.const #true loc(#loc489)
                  cir.yield %76 : !cir.bool loc(#loc489)
                }, false {
                  %76 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc490)
                  %77 = cir.const #cir.int<0> : !s32i loc(#loc491)
                  %78 = cir.cmp(eq, %76, %77) : !s32i, !cir.bool loc(#loc729)
                  %79 = cir.ternary(%78, true {
                    %80 = cir.const #true loc(#loc489)
                    cir.yield %80 : !cir.bool loc(#loc489)
                  }, false {
                    %80 = cir.const #false loc(#loc489)
                    cir.yield %80 : !cir.bool loc(#loc489)
                  }) : (!cir.bool) -> !cir.bool loc(#loc489)
                  cir.yield %79 : !cir.bool loc(#loc489)
                }) : (!cir.bool) -> !cir.bool loc(#loc489)
                cir.if %75 {
                  cir.break loc(#loc493)
                } loc(#loc730)
              } loc(#loc727)
              %58 = cir.const #cir.int<0> : !s32i loc(#loc494)
              %59 = cir.cast(integral, %58 : !s32i), !s8i loc(#loc494)
              %60 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc495)
              %61 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc496)
              %62 = cir.ptr_stride(%61 : !cir.ptr<!s8i>, %60 : !s32i), !cir.ptr<!s8i> loc(#loc496)
              cir.store %59, %62 : !s8i, !cir.ptr<!s8i> loc(#loc731)
              %63 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc497)
              %64 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc498)
              %65 = cir.const #cir.int<13> : !s32i loc(#loc499)
              %66 = cir.call @strchr(%64, %65) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc497)
              cir.store %66, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc732)
              cir.scope {
                %71 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc504)
                %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc504)
                cir.if %72 {
                  %73 = cir.const #cir.int<0> : !s32i loc(#loc506)
                  %74 = cir.cast(integral, %73 : !s32i), !s8i loc(#loc506)
                  %75 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc507)
                  cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc735)
                } loc(#loc734)
              } loc(#loc733)
              %67 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc509)
              %68 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc510)
              %69 = cir.const #cir.int<10> : !s32i loc(#loc511)
              %70 = cir.call @strchr(%68, %69) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc509)
              cir.store %70, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc736)
              cir.scope {
                %71 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc516)
                %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc516)
                cir.if %72 {
                  %73 = cir.const #cir.int<0> : !s32i loc(#loc518)
                  %74 = cir.cast(integral, %73 : !s32i), !s8i loc(#loc518)
                  %75 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc519)
                  cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc739)
                } loc(#loc738)
              } loc(#loc737)
              cir.yield loc(#loc415)
            } while {
              %19 = cir.const #cir.int<0> : !s32i loc(#loc521)
              %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc521)
              cir.condition(%20) loc(#loc521)
            } loc(#loc700)
          } loc(#loc700)
          cir.scope {
            %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc524)
            %20 = cir.const #cir.int<1> : !s32i loc(#loc525)
            %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc525)
            %22 = cir.cmp(ne, %19, %21) : !s32i, !cir.bool loc(#loc741)
            cir.if %22 {
              %23 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc527)
              %24 = cir.call @close(%23) : (!s32i) -> !s32i loc(#loc528)
            } loc(#loc742)
          } loc(#loc740)
          cir.scope {
            %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc531)
            %20 = cir.const #cir.int<1> : !s32i loc(#loc532)
            %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc532)
            %22 = cir.cmp(ne, %19, %21) : !s32i, !cir.bool loc(#loc744)
            cir.if %22 {
              %23 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc534)
              %24 = cir.call @close(%23) : (!s32i) -> !s32i loc(#loc535)
            } loc(#loc745)
          } loc(#loc743)
          %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc536)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc537)
        } loc(#loc692)
      } loc(#loc691)
    } loc(#loc689)
    cir.return loc(#loc390)
  } loc(#loc688)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE605_Multiple_Binds_Same_Port/CWE605_Multiple_Binds_Same_Port__basic_08.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/sys/socket.h":277:1)
#loc6 = loc("/usr/include/sys/socket.h":278:52)
#loc7 = loc("/usr/include/netinet/in.h":404:1)
#loc8 = loc("/usr/include/netinet/in.h":405:40)
#loc9 = loc("/usr/include/sys/socket.h":112:1)
#loc10 = loc("/usr/include/sys/socket.h":113:6)
#loc11 = loc("/usr/include/sys/socket.h":296:1)
#loc12 = loc("/usr/include/sys/socket.h":296:39)
#loc13 = loc("/usr/include/sys/socket.h":306:1)
#loc14 = loc("/usr/include/sys/socket.h":307:38)
#loc15 = loc("/usr/include/sys/socket.h":145:1)
#loc16 = loc("/usr/include/sys/socket.h":145:68)
#loc17 = loc("/usr/include/string.h":246:1)
#loc18 = loc("/usr/include/string.h":247:33)
#loc19 = loc("/usr/include/unistd.h":358:1)
#loc20 = loc("/usr/include/unistd.h":358:27)
#loc21 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc23 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":57:1)
#loc24 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":154:1)
#loc25 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":59:5)
#loc26 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":153:5)
#loc27 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":59:8)
#loc28 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":59:26)
#loc29 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":60:5)
#loc30 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":61:9)
#loc31 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":152:9)
#loc32 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":62:13)
#loc33 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":62:30)
#loc34 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":67:13)
#loc35 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":67:17)
#loc36 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":68:13)
#loc37 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":68:32)
#loc38 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":69:13)
#loc39 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":69:19)
#loc40 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":70:13)
#loc41 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":70:35)
#loc42 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":71:13)
#loc43 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":71:35)
#loc44 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":72:13)
#loc45 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":72:41)
#loc46 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":77:13)
#loc47 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":77:27)
#loc48 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":78:13)
#loc49 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":78:37)
#loc50 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":72:30)
#loc51 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":72:37)
#loc52 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":78:27)
#loc53 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":80:13)
#loc54 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":136:21)
#loc55 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":89:39)
#loc56 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":89:48)
#loc57 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":89:61)
#loc58 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":89:32)
#loc59 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":89:17)
#loc60 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":89:72)
#loc61 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":90:17)
#loc62 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":93:17)
#loc63 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":90:21)
#loc64 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":90:37)
#loc65 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":91:17)
#loc66 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":92:21)
#loc67 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":95:17)
#loc68 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":98:17)
#loc69 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":95:32)
#loc70 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":95:46)
#loc71 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":95:58)
#loc72 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":95:79)
#loc73 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":95:80)
#loc74 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":95:72)
#loc75 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":95:89)
#loc76 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":95:21)
#loc77 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":95:101)
#loc78 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":96:17)
#loc79 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":97:21)
#loc80 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":99:24)
#loc81 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":99:25)
#loc82 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":99:34)
#loc83 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":99:37)
#loc84 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":99:51)
#loc85 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":99:17)
#loc86 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":99:52)
#loc87 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":100:38)
#loc88 = loc("/usr/include/netinet/in.h":249:5)
#loc89 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":100:17)
#loc90 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":101:43)
#loc91 = loc("/usr/include/netinet/in.h":251:20)
#loc92 = loc("/usr/include/netinet/in.h":33:15)
#loc93 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":101:17)
#loc94 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":102:42)
#loc95 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":102:36)
#loc96 = loc("/usr/include/netinet/in.h":250:15)
#loc97 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":102:17)
#loc98 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":102:50)
#loc99 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":103:17)
#loc100 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":106:17)
#loc101 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":103:26)
#loc102 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":103:58)
#loc103 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":103:59)
#loc104 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":103:68)
#loc105 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":103:82)
#loc106 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":103:21)
#loc107 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":103:88)
#loc108 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":104:17)
#loc109 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":105:21)
#loc110 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":107:17)
#loc111 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":110:17)
#loc112 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":107:28)
#loc113 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":107:42)
#loc114 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":107:21)
#loc115 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":107:61)
#loc116 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":108:17)
#loc117 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":109:21)
#loc118 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":111:39)
#loc119 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":111:53)
#loc120 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":111:59)
#loc121 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":111:32)
#loc122 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":111:17)
#loc123 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":111:63)
#loc124 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":112:17)
#loc125 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":115:17)
#loc126 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":112:21)
#loc127 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":112:37)
#loc128 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":113:17)
#loc129 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":114:21)
#loc130 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":117:35)
#loc131 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":117:49)
#loc132 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":117:54)
#loc133 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":117:53)
#loc134 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":117:69)
#loc135 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":117:73)
#loc136 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":117:81)
#loc137 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":117:85)
#loc138 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":117:30)
#loc139 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":117:17)
#loc140 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":117:86)
#loc141 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":118:17)
#loc142 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":121:17)
#loc143 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":118:21)
#loc144 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":118:35)
#loc145 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":118:48)
#loc146 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":118:51)
#loc147 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":118:65)
#loc148 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":119:17)
#loc149 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":120:21)
#loc150 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":123:36)
#loc151 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":123:22)
#loc152 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":123:17)
#loc153 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":125:27)
#loc154 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":125:34)
#loc155 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":125:40)
#loc156 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":125:17)
#loc157 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":125:44)
#loc158 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":126:17)
#loc159 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":129:17)
#loc160 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":126:21)
#loc161 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":127:17)
#loc162 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":128:32)
#loc163 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":128:22)
#loc164 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":128:21)
#loc165 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":130:27)
#loc166 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":130:34)
#loc167 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":130:40)
#loc168 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":130:17)
#loc169 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":130:44)
#loc170 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":131:17)
#loc171 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":134:17)
#loc172 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":131:21)
#loc173 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":132:17)
#loc174 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":133:32)
#loc175 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":133:22)
#loc176 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":133:21)
#loc177 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":136:20)
#loc178 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":137:13)
#loc179 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":140:13)
#loc180 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":137:17)
#loc181 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":137:33)
#loc182 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":138:13)
#loc183 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":139:30)
#loc184 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":139:17)
#loc185 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":141:13)
#loc186 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":144:13)
#loc187 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":141:17)
#loc188 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":141:33)
#loc189 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":142:13)
#loc190 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":143:30)
#loc191 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":143:17)
#loc192 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":151:23)
#loc193 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":151:13)
#loc194 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":343:1)
#loc195 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":347:1)
#loc196 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":345:5)
#loc197 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":345:11)
#loc198 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":346:5)
#loc199 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":346:11)
#loc200 = loc("/usr/include/stdlib.h":575:1)
#loc201 = loc("/usr/include/stdlib.h":575:41)
#loc202 = loc("/usr/include/time.h":76:1)
#loc203 = loc("/usr/include/time.h":76:38)
#loc204 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":363:15)
#loc205 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":365:15)
#loc206 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":368:15)
#loc207 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":370:15)
#loc208 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":358:1)
#loc209 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":373:1)
#loc214 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":359:1)
#loc215 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":361:27)
#loc216 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":361:22)
#loc217 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":361:5)
#loc218 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":363:5)
#loc219 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":364:5)
#loc220 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":364:52)
#loc221 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":365:5)
#loc222 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":368:5)
#loc223 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":369:5)
#loc224 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":369:51)
#loc225 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":370:5)
#loc226 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":372:12)
#loc227 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":372:5)
#loc228 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":45:1)
#loc229 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":48:1)
#loc230 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":47:12)
#loc231 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":47:5)
#loc232 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":166:19)
#loc233 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":161:1)
#loc234 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":252:1)
#loc235 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":163:5)
#loc236 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":251:5)
#loc237 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":163:8)
#loc238 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":163:27)
#loc239 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":164:5)
#loc240 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":167:5)
#loc241 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":169:5)
#loc242 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":166:9)
#loc243 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":170:9)
#loc244 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":250:9)
#loc245 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":171:13)
#loc246 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":171:30)
#loc247 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":176:13)
#loc248 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":176:17)
#loc249 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":177:13)
#loc250 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":177:32)
#loc251 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":178:13)
#loc252 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":178:19)
#loc253 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":179:13)
#loc254 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":179:35)
#loc255 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":180:13)
#loc256 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":180:35)
#loc257 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":181:13)
#loc258 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":181:41)
#loc259 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":181:30)
#loc260 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":181:37)
#loc261 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":182:13)
#loc262 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":234:21)
#loc263 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":191:39)
#loc264 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":191:48)
#loc265 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":191:61)
#loc266 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":191:32)
#loc267 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":191:17)
#loc268 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":191:72)
#loc269 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":192:17)
#loc270 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":195:17)
#loc271 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":192:21)
#loc272 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":192:37)
#loc273 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":193:17)
#loc274 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":194:21)
#loc275 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":197:24)
#loc276 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":197:25)
#loc277 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":197:34)
#loc278 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":197:37)
#loc279 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":197:51)
#loc280 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":197:17)
#loc281 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":197:52)
#loc282 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":198:38)
#loc283 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":198:17)
#loc284 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":199:43)
#loc285 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":199:17)
#loc286 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":200:42)
#loc287 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":200:36)
#loc288 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":200:17)
#loc289 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":200:50)
#loc290 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":201:17)
#loc291 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":204:17)
#loc292 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":201:26)
#loc293 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":201:58)
#loc294 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":201:59)
#loc295 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":201:68)
#loc296 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":201:82)
#loc297 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":201:21)
#loc298 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":201:88)
#loc299 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":202:17)
#loc300 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":203:21)
#loc301 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":205:17)
#loc302 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":208:17)
#loc303 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":205:28)
#loc304 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":205:42)
#loc305 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":205:21)
#loc306 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":205:61)
#loc307 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":206:17)
#loc308 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":207:21)
#loc309 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":209:39)
#loc310 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":209:53)
#loc311 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":209:59)
#loc312 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":209:32)
#loc313 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":209:17)
#loc314 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":209:63)
#loc315 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":210:17)
#loc316 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":213:17)
#loc317 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":210:21)
#loc318 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":210:37)
#loc319 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":211:17)
#loc320 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":212:21)
#loc321 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":215:35)
#loc322 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":215:49)
#loc323 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":215:54)
#loc324 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":215:53)
#loc325 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":215:69)
#loc326 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":215:73)
#loc327 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":215:81)
#loc328 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":215:85)
#loc329 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":215:30)
#loc330 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":215:17)
#loc331 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":215:86)
#loc332 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":216:17)
#loc333 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":219:17)
#loc334 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":216:21)
#loc335 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":216:35)
#loc336 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":216:48)
#loc337 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":216:51)
#loc338 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":216:65)
#loc339 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":217:17)
#loc340 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":218:21)
#loc341 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":221:36)
#loc342 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":221:22)
#loc343 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":221:17)
#loc344 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":223:27)
#loc345 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":223:34)
#loc346 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":223:40)
#loc347 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":223:17)
#loc348 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":223:44)
#loc349 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":224:17)
#loc350 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":227:17)
#loc351 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":224:21)
#loc352 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":225:17)
#loc353 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":226:32)
#loc354 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":226:22)
#loc355 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":226:21)
#loc356 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":228:27)
#loc357 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":228:34)
#loc358 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":228:40)
#loc359 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":228:17)
#loc360 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":228:44)
#loc361 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":229:17)
#loc362 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":232:17)
#loc363 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":229:21)
#loc364 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":230:17)
#loc365 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":231:32)
#loc366 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":231:22)
#loc367 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":231:21)
#loc368 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":234:20)
#loc369 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":235:13)
#loc370 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":238:13)
#loc371 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":235:17)
#loc372 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":235:33)
#loc373 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":236:13)
#loc374 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":237:30)
#loc375 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":237:17)
#loc376 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":239:13)
#loc377 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":242:13)
#loc378 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":239:17)
#loc379 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":239:33)
#loc380 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":240:13)
#loc381 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":241:30)
#loc382 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":241:17)
#loc383 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":249:23)
#loc384 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":249:13)
#loc385 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":50:1)
#loc386 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":53:1)
#loc387 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":52:12)
#loc388 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":52:5)
#loc389 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":255:1)
#loc390 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":341:1)
#loc391 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":257:5)
#loc392 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":340:5)
#loc393 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":257:8)
#loc394 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":257:26)
#loc395 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":258:5)
#loc396 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":259:9)
#loc397 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":339:9)
#loc398 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":260:13)
#loc399 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":260:30)
#loc400 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":265:13)
#loc401 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":265:17)
#loc402 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":266:13)
#loc403 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":266:32)
#loc404 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":267:13)
#loc405 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":267:19)
#loc406 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":268:13)
#loc407 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":268:35)
#loc408 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":269:13)
#loc409 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":269:35)
#loc410 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":270:13)
#loc411 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":270:41)
#loc412 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":270:30)
#loc413 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":270:37)
#loc414 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":271:13)
#loc415 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":323:21)
#loc416 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":280:39)
#loc417 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":280:48)
#loc418 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":280:61)
#loc419 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":280:32)
#loc420 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":280:17)
#loc421 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":280:72)
#loc422 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":281:17)
#loc423 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":284:17)
#loc424 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":281:21)
#loc425 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":281:37)
#loc426 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":282:17)
#loc427 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":283:21)
#loc428 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":286:24)
#loc429 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":286:25)
#loc430 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":286:34)
#loc431 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":286:37)
#loc432 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":286:51)
#loc433 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":286:17)
#loc434 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":286:52)
#loc435 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":287:38)
#loc436 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":287:17)
#loc437 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":288:43)
#loc438 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":288:17)
#loc439 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":289:42)
#loc440 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":289:36)
#loc441 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":289:17)
#loc442 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":289:50)
#loc443 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":290:17)
#loc444 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":293:17)
#loc445 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":290:26)
#loc446 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":290:58)
#loc447 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":290:59)
#loc448 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":290:68)
#loc449 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":290:82)
#loc450 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":290:21)
#loc451 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":290:88)
#loc452 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":291:17)
#loc453 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":292:21)
#loc454 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":294:17)
#loc455 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":297:17)
#loc456 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":294:28)
#loc457 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":294:42)
#loc458 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":294:21)
#loc459 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":294:61)
#loc460 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":295:17)
#loc461 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":296:21)
#loc462 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":298:39)
#loc463 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":298:53)
#loc464 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":298:59)
#loc465 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":298:32)
#loc466 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":298:17)
#loc467 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":298:63)
#loc468 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":299:17)
#loc469 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":302:17)
#loc470 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":299:21)
#loc471 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":299:37)
#loc472 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":300:17)
#loc473 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":301:21)
#loc474 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":304:35)
#loc475 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":304:49)
#loc476 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":304:54)
#loc477 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":304:53)
#loc478 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":304:69)
#loc479 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":304:73)
#loc480 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":304:81)
#loc481 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":304:85)
#loc482 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":304:30)
#loc483 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":304:17)
#loc484 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":304:86)
#loc485 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":305:17)
#loc486 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":308:17)
#loc487 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":305:21)
#loc488 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":305:35)
#loc489 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":305:48)
#loc490 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":305:51)
#loc491 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":305:65)
#loc492 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":306:17)
#loc493 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":307:21)
#loc494 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":310:36)
#loc495 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":310:22)
#loc496 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":310:17)
#loc497 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":312:27)
#loc498 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":312:34)
#loc499 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":312:40)
#loc500 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":312:17)
#loc501 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":312:44)
#loc502 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":313:17)
#loc503 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":316:17)
#loc504 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":313:21)
#loc505 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":314:17)
#loc506 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":315:32)
#loc507 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":315:22)
#loc508 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":315:21)
#loc509 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":317:27)
#loc510 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":317:34)
#loc511 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":317:40)
#loc512 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":317:17)
#loc513 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":317:44)
#loc514 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":318:17)
#loc515 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":321:17)
#loc516 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":318:21)
#loc517 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":319:17)
#loc518 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":320:32)
#loc519 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":320:22)
#loc520 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":320:21)
#loc521 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":323:20)
#loc522 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":324:13)
#loc523 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":327:13)
#loc524 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":324:17)
#loc525 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":324:33)
#loc526 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":325:13)
#loc527 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":326:30)
#loc528 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":326:17)
#loc529 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":328:13)
#loc530 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":331:13)
#loc531 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":328:17)
#loc532 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":328:33)
#loc533 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":329:13)
#loc534 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":330:30)
#loc535 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":330:17)
#loc536 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":338:23)
#loc537 = loc("CWE605_Multiple_Binds_Same_Port__basic_08.c":338:13)
#loc538 = loc(fused[#loc1, #loc2])
#loc539 = loc(fused[#loc3, #loc4])
#loc540 = loc(fused[#loc5, #loc6])
#loc541 = loc(fused[#loc7, #loc8])
#loc542 = loc(fused[#loc9, #loc10])
#loc543 = loc(fused[#loc11, #loc12])
#loc544 = loc(fused[#loc13, #loc14])
#loc545 = loc(fused[#loc15, #loc16])
#loc546 = loc(fused[#loc17, #loc18])
#loc547 = loc(fused[#loc19, #loc20])
#loc548 = loc(fused[#loc21, #loc22])
#loc549 = loc(fused[#loc23, #loc24])
#loc550 = loc(fused[#loc25, #loc26])
#loc551 = loc(fused[#loc27, #loc28])
#loc552 = loc(fused[#loc29, #loc26])
#loc553 = loc(fused[#loc30, #loc31])
#loc554 = loc(fused[#loc32, #loc33])
#loc555 = loc(fused[#loc34, #loc35])
#loc556 = loc(fused[#loc36, #loc37])
#loc557 = loc(fused[#loc38, #loc39])
#loc558 = loc(fused[#loc40, #loc41])
#loc559 = loc(fused[#loc42, #loc43])
#loc560 = loc(fused[#loc44, #loc45])
#loc561 = loc(fused[#loc46, #loc47])
#loc562 = loc(fused[#loc48, #loc49])
#loc563 = loc(fused[#loc52, #loc49])
#loc564 = loc(fused[#loc53, #loc54])
#loc565 = loc(fused[#loc59, #loc60])
#loc566 = loc(fused[#loc61, #loc62])
#loc567 = loc(fused[#loc63, #loc64])
#loc568 = loc(fused[#loc65, #loc62])
#loc569 = loc(fused[#loc67, #loc68])
#loc570 = loc(fused[#loc72, #loc73])
#loc571 = loc(fused[#loc74, #loc73])
#loc572 = loc(fused[#loc76, #loc77])
#loc573 = loc(fused[#loc78, #loc68])
#loc574 = loc(fused[#loc80, #loc81])
#loc575 = loc(fused[#loc83, #loc84])
#loc576 = loc(fused[#loc85, #loc86])
#loc577 = loc(fused[#loc89, #loc87])
#loc578 = loc(fused[#loc93, #loc90])
#loc579 = loc(fused[#loc97, #loc98])
#loc580 = loc(fused[#loc99, #loc100])
#loc581 = loc(fused[#loc102, #loc103])
#loc582 = loc(fused[#loc104, #loc105])
#loc583 = loc(fused[#loc106, #loc107])
#loc584 = loc(fused[#loc108, #loc100])
#loc585 = loc(fused[#loc110, #loc111])
#loc586 = loc(fused[#loc114, #loc115])
#loc587 = loc(fused[#loc116, #loc111])
#loc588 = loc(fused[#loc122, #loc123])
#loc589 = loc(fused[#loc124, #loc125])
#loc590 = loc(fused[#loc126, #loc127])
#loc591 = loc(fused[#loc128, #loc125])
#loc592 = loc(fused[#loc131, #loc132])
#loc593 = loc(fused[#loc134, #loc135])
#loc594 = loc(fused[#loc134, #loc136])
#loc595 = loc(fused[#loc139, #loc140])
#loc596 = loc(fused[#loc141, #loc142])
#loc597 = loc(fused[#loc143, #loc144])
#loc598 = loc(fused[#loc146, #loc147])
#loc599 = loc(fused[#loc148, #loc142])
#loc600 = loc(fused[#loc152, #loc150])
#loc601 = loc(fused[#loc156, #loc157])
#loc602 = loc(fused[#loc158, #loc159])
#loc603 = loc(fused[#loc161, #loc159])
#loc604 = loc(fused[#loc164, #loc162])
#loc605 = loc(fused[#loc168, #loc169])
#loc606 = loc(fused[#loc170, #loc171])
#loc607 = loc(fused[#loc173, #loc171])
#loc608 = loc(fused[#loc176, #loc174])
#loc609 = loc(fused[#loc178, #loc179])
#loc610 = loc(fused[#loc180, #loc181])
#loc611 = loc(fused[#loc182, #loc179])
#loc612 = loc(fused[#loc185, #loc186])
#loc613 = loc(fused[#loc187, #loc188])
#loc614 = loc(fused[#loc189, #loc186])
#loc615 = loc(fused[#loc194, #loc195])
#loc616 = loc(fused[#loc196, #loc197])
#loc617 = loc(fused[#loc198, #loc199])
#loc618 = loc(fused[#loc200, #loc201])
#loc619 = loc(fused[#loc202, #loc203])
#loc620 = loc(fused[#loc208, #loc209])
#loc623 = loc(fused[#loc219, #loc220])
#loc624 = loc(fused[#loc223, #loc224])
#loc625 = loc(fused[#loc227, #loc226])
#loc626 = loc(fused[#loc228, #loc229])
#loc627 = loc(fused[#loc231, #loc230])
#loc628 = loc(fused[#loc233, #loc234])
#loc629 = loc(fused[#loc235, #loc236])
#loc630 = loc(fused[#loc237, #loc238])
#loc631 = loc(fused[#loc239, #loc240, #loc241, #loc236])
#loc632 = loc(fused[#loc243, #loc244])
#loc633 = loc(fused[#loc245, #loc246])
#loc634 = loc(fused[#loc247, #loc248])
#loc635 = loc(fused[#loc249, #loc250])
#loc636 = loc(fused[#loc251, #loc252])
#loc637 = loc(fused[#loc253, #loc254])
#loc638 = loc(fused[#loc255, #loc256])
#loc639 = loc(fused[#loc257, #loc258])
#loc640 = loc(fused[#loc261, #loc262])
#loc641 = loc(fused[#loc267, #loc268])
#loc642 = loc(fused[#loc269, #loc270])
#loc643 = loc(fused[#loc271, #loc272])
#loc644 = loc(fused[#loc273, #loc270])
#loc645 = loc(fused[#loc275, #loc276])
#loc646 = loc(fused[#loc278, #loc279])
#loc647 = loc(fused[#loc280, #loc281])
#loc648 = loc(fused[#loc283, #loc282])
#loc649 = loc(fused[#loc285, #loc284])
#loc650 = loc(fused[#loc288, #loc289])
#loc651 = loc(fused[#loc290, #loc291])
#loc652 = loc(fused[#loc293, #loc294])
#loc653 = loc(fused[#loc295, #loc296])
#loc654 = loc(fused[#loc297, #loc298])
#loc655 = loc(fused[#loc299, #loc291])
#loc656 = loc(fused[#loc301, #loc302])
#loc657 = loc(fused[#loc305, #loc306])
#loc658 = loc(fused[#loc307, #loc302])
#loc659 = loc(fused[#loc313, #loc314])
#loc660 = loc(fused[#loc315, #loc316])
#loc661 = loc(fused[#loc317, #loc318])
#loc662 = loc(fused[#loc319, #loc316])
#loc663 = loc(fused[#loc322, #loc323])
#loc664 = loc(fused[#loc325, #loc326])
#loc665 = loc(fused[#loc325, #loc327])
#loc666 = loc(fused[#loc330, #loc331])
#loc667 = loc(fused[#loc332, #loc333])
#loc668 = loc(fused[#loc334, #loc335])
#loc669 = loc(fused[#loc337, #loc338])
#loc670 = loc(fused[#loc339, #loc333])
#loc671 = loc(fused[#loc343, #loc341])
#loc672 = loc(fused[#loc347, #loc348])
#loc673 = loc(fused[#loc349, #loc350])
#loc674 = loc(fused[#loc352, #loc350])
#loc675 = loc(fused[#loc355, #loc353])
#loc676 = loc(fused[#loc359, #loc360])
#loc677 = loc(fused[#loc361, #loc362])
#loc678 = loc(fused[#loc364, #loc362])
#loc679 = loc(fused[#loc367, #loc365])
#loc680 = loc(fused[#loc369, #loc370])
#loc681 = loc(fused[#loc371, #loc372])
#loc682 = loc(fused[#loc373, #loc370])
#loc683 = loc(fused[#loc376, #loc377])
#loc684 = loc(fused[#loc378, #loc379])
#loc685 = loc(fused[#loc380, #loc377])
#loc686 = loc(fused[#loc385, #loc386])
#loc687 = loc(fused[#loc388, #loc387])
#loc688 = loc(fused[#loc389, #loc390])
#loc689 = loc(fused[#loc391, #loc392])
#loc690 = loc(fused[#loc393, #loc394])
#loc691 = loc(fused[#loc395, #loc392])
#loc692 = loc(fused[#loc396, #loc397])
#loc693 = loc(fused[#loc398, #loc399])
#loc694 = loc(fused[#loc400, #loc401])
#loc695 = loc(fused[#loc402, #loc403])
#loc696 = loc(fused[#loc404, #loc405])
#loc697 = loc(fused[#loc406, #loc407])
#loc698 = loc(fused[#loc408, #loc409])
#loc699 = loc(fused[#loc410, #loc411])
#loc700 = loc(fused[#loc414, #loc415])
#loc701 = loc(fused[#loc420, #loc421])
#loc702 = loc(fused[#loc422, #loc423])
#loc703 = loc(fused[#loc424, #loc425])
#loc704 = loc(fused[#loc426, #loc423])
#loc705 = loc(fused[#loc428, #loc429])
#loc706 = loc(fused[#loc431, #loc432])
#loc707 = loc(fused[#loc433, #loc434])
#loc708 = loc(fused[#loc436, #loc435])
#loc709 = loc(fused[#loc438, #loc437])
#loc710 = loc(fused[#loc441, #loc442])
#loc711 = loc(fused[#loc443, #loc444])
#loc712 = loc(fused[#loc446, #loc447])
#loc713 = loc(fused[#loc448, #loc449])
#loc714 = loc(fused[#loc450, #loc451])
#loc715 = loc(fused[#loc452, #loc444])
#loc716 = loc(fused[#loc454, #loc455])
#loc717 = loc(fused[#loc458, #loc459])
#loc718 = loc(fused[#loc460, #loc455])
#loc719 = loc(fused[#loc466, #loc467])
#loc720 = loc(fused[#loc468, #loc469])
#loc721 = loc(fused[#loc470, #loc471])
#loc722 = loc(fused[#loc472, #loc469])
#loc723 = loc(fused[#loc475, #loc476])
#loc724 = loc(fused[#loc478, #loc479])
#loc725 = loc(fused[#loc478, #loc480])
#loc726 = loc(fused[#loc483, #loc484])
#loc727 = loc(fused[#loc485, #loc486])
#loc728 = loc(fused[#loc487, #loc488])
#loc729 = loc(fused[#loc490, #loc491])
#loc730 = loc(fused[#loc492, #loc486])
#loc731 = loc(fused[#loc496, #loc494])
#loc732 = loc(fused[#loc500, #loc501])
#loc733 = loc(fused[#loc502, #loc503])
#loc734 = loc(fused[#loc505, #loc503])
#loc735 = loc(fused[#loc508, #loc506])
#loc736 = loc(fused[#loc512, #loc513])
#loc737 = loc(fused[#loc514, #loc515])
#loc738 = loc(fused[#loc517, #loc515])
#loc739 = loc(fused[#loc520, #loc518])
#loc740 = loc(fused[#loc522, #loc523])
#loc741 = loc(fused[#loc524, #loc525])
#loc742 = loc(fused[#loc526, #loc523])
#loc743 = loc(fused[#loc529, #loc530])
#loc744 = loc(fused[#loc531, #loc532])
#loc745 = loc(fused[#loc533, #loc530])
