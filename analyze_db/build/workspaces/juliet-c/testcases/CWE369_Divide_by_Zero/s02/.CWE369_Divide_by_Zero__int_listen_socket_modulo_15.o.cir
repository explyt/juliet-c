!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc124 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":96:44)
#loc273 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":197:44)
#loc420 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":301:44)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc526)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc527)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc528)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc529)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc530)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc531)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc532)
  cir.func private @close(!s32i) -> !s32i loc(#loc533)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc534)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc19)
  cir.func private @printIntLine(!s32i) loc(#loc535)
  cir.func no_proto @CWE369_Divide_by_Zero__int_listen_socket_modulo_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc537)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc538)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc539)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc540)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc541)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc542)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc37)
    cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc543)
    cir.br ^bb1 loc(#loc544)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.int<6> : !s32i loc(#loc41)
    cir.br ^bb2 loc(#loc39)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %8 : !s32i, ^bb50 [
      6: ^bb4
    ] loc(#loc39)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc42)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc545)
  ^bb5:  // pred: ^bb4
    %9 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc29)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc539)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc31)
    cir.store %12, %3 : !s32i, !cir.ptr<!s32i> loc(#loc540)
    cir.br ^bb6 loc(#loc546)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc546)
  ^bb7:  // pred: ^bb38
    %13 = cir.const #cir.int<0> : !s32i loc(#loc47)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc47)
    cir.brcond %14 ^bb8, ^bb39 loc(#loc47)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc547)
  ^bb9:  // pred: ^bb8
    %15 = cir.const #cir.int<2> : !s32i loc(#loc50)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %17 = cir.const #cir.int<6> : !s32i loc(#loc52)
    %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc53)
    cir.store %18, %2 : !s32i, !cir.ptr<!s32i> loc(#loc548)
    cir.br ^bb10 loc(#loc549)
  ^bb10:  // pred: ^bb9
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc58)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc59)
    %22 = cir.cmp(eq, %19, %21) : !s32i, !cir.bool loc(#loc550)
    cir.brcond %22 ^bb11, ^bb12 loc(#loc551)
  ^bb11:  // pred: ^bb10
    cir.br ^bb39 loc(#loc61)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc57)
  ^bb13:  // pred: ^bb12
    %23 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc552)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc64)
    %25 = cir.const #cir.int<16> : !u64i loc(#loc553)
    cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc554)
    %26 = cir.const #cir.int<2> : !s32i loc(#loc69)
    %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc69)
    %28 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
    cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc555)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc72)
    %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc72)
    %31 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc73)
    %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc74)
    cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc556)
    %33 = cir.const #cir.int<27015> : !s32i loc(#loc76)
    %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc76)
    %35 = cir.call @htons(%34) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc77)
    %36 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
    cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc557)
    cir.br ^bb14 loc(#loc558)
  ^bb14:  // pred: ^bb13
    %37 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    %38 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc559)
    %39 = cir.const #cir.int<16> : !u64i loc(#loc560)
    %40 = cir.cast(integral, %39 : !u64i), !u32i loc(#loc560)
    %41 = cir.call @bind(%37, %38, %40) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc88)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc89)
    %43 = cir.unary(minus, %42) nsw : !s32i, !s32i loc(#loc89)
    %44 = cir.cmp(eq, %41, %43) : !s32i, !cir.bool loc(#loc561)
    cir.brcond %44 ^bb15, ^bb16 loc(#loc562)
  ^bb15:  // pred: ^bb14
    cir.br ^bb39 loc(#loc91)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc82)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc563)
  ^bb18:  // pred: ^bb17
    %45 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    %46 = cir.const #cir.int<5> : !s32i loc(#loc95)
    %47 = cir.call @listen(%45, %46) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc96)
    %48 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %49 = cir.unary(minus, %48) nsw : !s32i, !s32i loc(#loc97)
    %50 = cir.cmp(eq, %47, %49) : !s32i, !cir.bool loc(#loc564)
    cir.brcond %50 ^bb19, ^bb20 loc(#loc565)
  ^bb19:  // pred: ^bb18
    cir.br ^bb39 loc(#loc99)
  ^bb20:  // pred: ^bb18
    cir.br ^bb21 loc(#loc93)
  ^bb21:  // pred: ^bb20
    %51 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    %52 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc101)
    %53 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc102)
    %54 = cir.call @accept(%51, %52, %53) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc103)
    cir.store %54, %3 : !s32i, !cir.ptr<!s32i> loc(#loc566)
    cir.br ^bb22 loc(#loc567)
  ^bb22:  // pred: ^bb21
    %55 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc108)
    %56 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc109)
    %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc568)
    cir.brcond %58 ^bb23, ^bb24 loc(#loc569)
  ^bb23:  // pred: ^bb22
    cir.br ^bb39 loc(#loc111)
  ^bb24:  // pred: ^bb22
    cir.br ^bb25 loc(#loc107)
  ^bb25:  // pred: ^bb24
    %59 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %60 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc113)
    %61 = cir.cast(bitcast, %60 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc113)
    %62 = cir.const #cir.int<3> : !s32i loc(#loc114)
    %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc114)
    %64 = cir.const #cir.int<4> : !u64i loc(#loc114)
    %65 = cir.binop(mul, %63, %64) : !u64i loc(#loc114)
    %66 = cir.const #cir.int<2> : !s32i loc(#loc114)
    %67 = cir.cast(integral, %66 : !s32i), !u64i loc(#loc114)
    %68 = cir.binop(add, %65, %67) : !u64i loc(#loc114)
    %69 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %70 = cir.cast(integral, %69 : !s32i), !u64i loc(#loc115)
    %71 = cir.binop(sub, %68, %70) : !u64i loc(#loc570)
    %72 = cir.const #cir.int<0> : !s32i loc(#loc116)
    %73 = cir.call @recv(%59, %61, %71, %72) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc117)
    %74 = cir.cast(integral, %73 : !s64i), !s32i loc(#loc117)
    cir.store %74, %0 : !s32i, !cir.ptr<!s32i> loc(#loc571)
    cir.br ^bb26 loc(#loc572)
  ^bb26:  // pred: ^bb25
    %75 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    %76 = cir.const #cir.int<1> : !s32i loc(#loc123)
    %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc123)
    %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc573)
    cir.brcond %78 ^bb27, ^bb28 loc(#loc124)
  ^bb27:  // pred: ^bb26
    %79 = cir.const #true loc(#loc124)
    cir.br ^bb33(%79 : !cir.bool) loc(#loc124)
  ^bb28:  // pred: ^bb26
    %80 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %81 = cir.const #cir.int<0> : !s32i loc(#loc126)
    %82 = cir.cmp(eq, %80, %81) : !s32i, !cir.bool loc(#loc574)
    cir.brcond %82 ^bb29, ^bb30 loc(#loc124)
  ^bb29:  // pred: ^bb28
    %83 = cir.const #true loc(#loc124)
    cir.br ^bb31(%83 : !cir.bool) loc(#loc124)
  ^bb30:  // pred: ^bb28
    %84 = cir.const #false loc(#loc124)
    cir.br ^bb31(%84 : !cir.bool) loc(#loc124)
  ^bb31(%85: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":96:44)):  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc124)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33(%85 : !cir.bool) loc(#loc124)
  ^bb33(%86: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":96:44)):  // 2 preds: ^bb27, ^bb32
    cir.br ^bb34 loc(#loc124)
  ^bb34:  // pred: ^bb33
    cir.brcond %86 ^bb35, ^bb36 loc(#loc575)
  ^bb35:  // pred: ^bb34
    cir.br ^bb39 loc(#loc128)
  ^bb36:  // pred: ^bb34
    cir.br ^bb37 loc(#loc121)
  ^bb37:  // pred: ^bb36
    %87 = cir.const #cir.int<0> : !s32i loc(#loc129)
    %88 = cir.cast(integral, %87 : !s32i), !s8i loc(#loc129)
    %89 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    %90 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc131)
    %91 = cir.ptr_stride(%90 : !cir.ptr<!s8i>, %89 : !s32i), !cir.ptr<!s8i> loc(#loc131)
    cir.store %88, %91 : !s8i, !cir.ptr<!s8i> loc(#loc576)
    %92 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc132)
    %93 = cir.call @atoi(%92) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc133)
    cir.store %93, %5 : !s32i, !cir.ptr<!s32i> loc(#loc577)
    cir.br ^bb38 loc(#loc49)
  ^bb38:  // pred: ^bb37
    cir.br ^bb7 loc(#loc46)
  ^bb39:  // 6 preds: ^bb7, ^bb11, ^bb15, ^bb19, ^bb23, ^bb35
    cir.br ^bb40 loc(#loc46)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc578)
  ^bb41:  // pred: ^bb40
    %94 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc138)
    %95 = cir.const #cir.int<1> : !s32i loc(#loc139)
    %96 = cir.unary(minus, %95) nsw : !s32i, !s32i loc(#loc139)
    %97 = cir.cmp(ne, %94, %96) : !s32i, !cir.bool loc(#loc579)
    cir.brcond %97 ^bb42, ^bb43 loc(#loc580)
  ^bb42:  // pred: ^bb41
    %98 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc141)
    %99 = cir.call @close(%98) : (!s32i) -> !s32i loc(#loc142)
    cir.br ^bb43 loc(#loc137)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc137)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc581)
  ^bb45:  // pred: ^bb44
    %100 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc145)
    %101 = cir.const #cir.int<1> : !s32i loc(#loc146)
    %102 = cir.unary(minus, %101) nsw : !s32i, !s32i loc(#loc146)
    %103 = cir.cmp(ne, %100, %102) : !s32i, !cir.bool loc(#loc582)
    cir.brcond %103 ^bb46, ^bb47 loc(#loc583)
  ^bb46:  // pred: ^bb45
    %104 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc148)
    %105 = cir.call @close(%104) : (!s32i) -> !s32i loc(#loc149)
    cir.br ^bb47 loc(#loc144)
  ^bb47:  // 2 preds: ^bb45, ^bb46
    cir.br ^bb48 loc(#loc144)
  ^bb48:  // pred: ^bb47
    cir.br ^bb49 loc(#loc44)
  ^bb49:  // pred: ^bb48
    cir.br ^bb51 loc(#loc150)
  ^bb50:  // pred: ^bb2
    %106 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc19)
    %107 = cir.cast(array_to_ptrdecay, %106 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc19)
    cir.call @printLine(%107) : (!cir.ptr<!s8i>) -> () loc(#loc151)
    cir.br ^bb51 loc(#loc152)
  ^bb51:  // 2 preds: ^bb49, ^bb50
    cir.br ^bb52 loc(#loc40)
  ^bb52:  // pred: ^bb51
    cir.br ^bb53 loc(#loc584)
  ^bb53:  // pred: ^bb52
    %108 = cir.const #cir.int<7> : !s32i loc(#loc155)
    cir.br ^bb54 loc(#loc153)
  ^bb54:  // pred: ^bb53
    cir.switch.flat %108 : !s32i, ^bb57 [
      7: ^bb56
    ] loc(#loc153)
  ^bb55:  // no predecessors
    cir.br ^bb56 loc(#loc156)
  ^bb56:  // 2 preds: ^bb54, ^bb55
    %109 = cir.const #cir.int<100> : !s32i loc(#loc157)
    %110 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    %111 = cir.binop(rem, %109, %110) : !s32i loc(#loc585)
    cir.call @printIntLine(%111) : (!s32i) -> () loc(#loc159)
    cir.br ^bb58 loc(#loc160)
  ^bb57:  // pred: ^bb54
    %112 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc161)
    %113 = cir.cast(array_to_ptrdecay, %112 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc161)
    cir.call @printLine(%113) : (!cir.ptr<!s8i>) -> () loc(#loc162)
    cir.br ^bb58 loc(#loc163)
  ^bb58:  // 2 preds: ^bb56, ^bb57
    cir.br ^bb59 loc(#loc154)
  ^bb59:  // pred: ^bb58
    cir.return loc(#loc23)
  } loc(#loc536)
  cir.func no_proto @CWE369_Divide_by_Zero__int_listen_socket_modulo_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc587)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc166)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc588)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc168)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc589)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc170)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc590)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc172)
    cir.return loc(#loc165)
  } loc(#loc586)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc174)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc592)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc593)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc594)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc595)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc596)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc597)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc189)
    %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc190)
    cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc598)
    cir.br ^bb1 loc(#loc599)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.int<6> : !s32i loc(#loc194)
    cir.br ^bb2 loc(#loc192)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %8 : !s32i, ^bb50 [
      6: ^bb4
    ] loc(#loc192)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc195)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc600)
  ^bb5:  // pred: ^bb4
    %9 = cir.const #cir.int<1> : !s32i loc(#loc182)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc182)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc594)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc184)
    %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc184)
    cir.store %12, %3 : !s32i, !cir.ptr<!s32i> loc(#loc595)
    cir.br ^bb6 loc(#loc601)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc601)
  ^bb7:  // pred: ^bb38
    %13 = cir.const #cir.int<0> : !s32i loc(#loc200)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc200)
    cir.brcond %14 ^bb8, ^bb39 loc(#loc200)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc602)
  ^bb9:  // pred: ^bb8
    %15 = cir.const #cir.int<2> : !s32i loc(#loc203)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc204)
    %17 = cir.const #cir.int<6> : !s32i loc(#loc205)
    %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc206)
    cir.store %18, %2 : !s32i, !cir.ptr<!s32i> loc(#loc603)
    cir.br ^bb10 loc(#loc604)
  ^bb10:  // pred: ^bb9
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc211)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc212)
    %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc212)
    %22 = cir.cmp(eq, %19, %21) : !s32i, !cir.bool loc(#loc605)
    cir.brcond %22 ^bb11, ^bb12 loc(#loc606)
  ^bb11:  // pred: ^bb10
    cir.br ^bb39 loc(#loc214)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc210)
  ^bb13:  // pred: ^bb12
    %23 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc607)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc217)
    %25 = cir.const #cir.int<16> : !u64i loc(#loc608)
    cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc609)
    %26 = cir.const #cir.int<2> : !s32i loc(#loc222)
    %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc222)
    %28 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
    cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc610)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc224)
    %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc224)
    %31 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc73)
    %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc74)
    cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc611)
    %33 = cir.const #cir.int<27015> : !s32i loc(#loc226)
    %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc226)
    %35 = cir.call @htons(%34) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc227)
    %36 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
    cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc612)
    cir.br ^bb14 loc(#loc613)
  ^bb14:  // pred: ^bb13
    %37 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc232)
    %38 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc614)
    %39 = cir.const #cir.int<16> : !u64i loc(#loc615)
    %40 = cir.cast(integral, %39 : !u64i), !u32i loc(#loc615)
    %41 = cir.call @bind(%37, %38, %40) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc237)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc238)
    %43 = cir.unary(minus, %42) nsw : !s32i, !s32i loc(#loc238)
    %44 = cir.cmp(eq, %41, %43) : !s32i, !cir.bool loc(#loc616)
    cir.brcond %44 ^bb15, ^bb16 loc(#loc617)
  ^bb15:  // pred: ^bb14
    cir.br ^bb39 loc(#loc240)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc231)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc618)
  ^bb18:  // pred: ^bb17
    %45 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc243)
    %46 = cir.const #cir.int<5> : !s32i loc(#loc244)
    %47 = cir.call @listen(%45, %46) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc245)
    %48 = cir.const #cir.int<1> : !s32i loc(#loc246)
    %49 = cir.unary(minus, %48) nsw : !s32i, !s32i loc(#loc246)
    %50 = cir.cmp(eq, %47, %49) : !s32i, !cir.bool loc(#loc619)
    cir.brcond %50 ^bb19, ^bb20 loc(#loc620)
  ^bb19:  // pred: ^bb18
    cir.br ^bb39 loc(#loc248)
  ^bb20:  // pred: ^bb18
    cir.br ^bb21 loc(#loc242)
  ^bb21:  // pred: ^bb20
    %51 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc249)
    %52 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc250)
    %53 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc251)
    %54 = cir.call @accept(%51, %52, %53) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc252)
    cir.store %54, %3 : !s32i, !cir.ptr<!s32i> loc(#loc621)
    cir.br ^bb22 loc(#loc622)
  ^bb22:  // pred: ^bb21
    %55 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc257)
    %56 = cir.const #cir.int<1> : !s32i loc(#loc258)
    %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc258)
    %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc623)
    cir.brcond %58 ^bb23, ^bb24 loc(#loc624)
  ^bb23:  // pred: ^bb22
    cir.br ^bb39 loc(#loc260)
  ^bb24:  // pred: ^bb22
    cir.br ^bb25 loc(#loc256)
  ^bb25:  // pred: ^bb24
    %59 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc261)
    %60 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc262)
    %61 = cir.cast(bitcast, %60 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc262)
    %62 = cir.const #cir.int<3> : !s32i loc(#loc263)
    %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc263)
    %64 = cir.const #cir.int<4> : !u64i loc(#loc263)
    %65 = cir.binop(mul, %63, %64) : !u64i loc(#loc263)
    %66 = cir.const #cir.int<2> : !s32i loc(#loc263)
    %67 = cir.cast(integral, %66 : !s32i), !u64i loc(#loc263)
    %68 = cir.binop(add, %65, %67) : !u64i loc(#loc263)
    %69 = cir.const #cir.int<1> : !s32i loc(#loc264)
    %70 = cir.cast(integral, %69 : !s32i), !u64i loc(#loc264)
    %71 = cir.binop(sub, %68, %70) : !u64i loc(#loc625)
    %72 = cir.const #cir.int<0> : !s32i loc(#loc265)
    %73 = cir.call @recv(%59, %61, %71, %72) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc266)
    %74 = cir.cast(integral, %73 : !s64i), !s32i loc(#loc266)
    cir.store %74, %0 : !s32i, !cir.ptr<!s32i> loc(#loc626)
    cir.br ^bb26 loc(#loc627)
  ^bb26:  // pred: ^bb25
    %75 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc271)
    %76 = cir.const #cir.int<1> : !s32i loc(#loc272)
    %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc272)
    %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc628)
    cir.brcond %78 ^bb27, ^bb28 loc(#loc273)
  ^bb27:  // pred: ^bb26
    %79 = cir.const #true loc(#loc273)
    cir.br ^bb33(%79 : !cir.bool) loc(#loc273)
  ^bb28:  // pred: ^bb26
    %80 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc274)
    %81 = cir.const #cir.int<0> : !s32i loc(#loc275)
    %82 = cir.cmp(eq, %80, %81) : !s32i, !cir.bool loc(#loc629)
    cir.brcond %82 ^bb29, ^bb30 loc(#loc273)
  ^bb29:  // pred: ^bb28
    %83 = cir.const #true loc(#loc273)
    cir.br ^bb31(%83 : !cir.bool) loc(#loc273)
  ^bb30:  // pred: ^bb28
    %84 = cir.const #false loc(#loc273)
    cir.br ^bb31(%84 : !cir.bool) loc(#loc273)
  ^bb31(%85: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":197:44)):  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc273)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33(%85 : !cir.bool) loc(#loc273)
  ^bb33(%86: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":197:44)):  // 2 preds: ^bb27, ^bb32
    cir.br ^bb34 loc(#loc273)
  ^bb34:  // pred: ^bb33
    cir.brcond %86 ^bb35, ^bb36 loc(#loc630)
  ^bb35:  // pred: ^bb34
    cir.br ^bb39 loc(#loc277)
  ^bb36:  // pred: ^bb34
    cir.br ^bb37 loc(#loc270)
  ^bb37:  // pred: ^bb36
    %87 = cir.const #cir.int<0> : !s32i loc(#loc278)
    %88 = cir.cast(integral, %87 : !s32i), !s8i loc(#loc278)
    %89 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc279)
    %90 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc280)
    %91 = cir.ptr_stride(%90 : !cir.ptr<!s8i>, %89 : !s32i), !cir.ptr<!s8i> loc(#loc280)
    cir.store %88, %91 : !s8i, !cir.ptr<!s8i> loc(#loc631)
    %92 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc281)
    %93 = cir.call @atoi(%92) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc282)
    cir.store %93, %5 : !s32i, !cir.ptr<!s32i> loc(#loc632)
    cir.br ^bb38 loc(#loc202)
  ^bb38:  // pred: ^bb37
    cir.br ^bb7 loc(#loc199)
  ^bb39:  // 6 preds: ^bb7, ^bb11, ^bb15, ^bb19, ^bb23, ^bb35
    cir.br ^bb40 loc(#loc199)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc633)
  ^bb41:  // pred: ^bb40
    %94 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc287)
    %95 = cir.const #cir.int<1> : !s32i loc(#loc288)
    %96 = cir.unary(minus, %95) nsw : !s32i, !s32i loc(#loc288)
    %97 = cir.cmp(ne, %94, %96) : !s32i, !cir.bool loc(#loc634)
    cir.brcond %97 ^bb42, ^bb43 loc(#loc635)
  ^bb42:  // pred: ^bb41
    %98 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc290)
    %99 = cir.call @close(%98) : (!s32i) -> !s32i loc(#loc291)
    cir.br ^bb43 loc(#loc286)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc286)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc636)
  ^bb45:  // pred: ^bb44
    %100 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc294)
    %101 = cir.const #cir.int<1> : !s32i loc(#loc295)
    %102 = cir.unary(minus, %101) nsw : !s32i, !s32i loc(#loc295)
    %103 = cir.cmp(ne, %100, %102) : !s32i, !cir.bool loc(#loc637)
    cir.brcond %103 ^bb46, ^bb47 loc(#loc638)
  ^bb46:  // pred: ^bb45
    %104 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc297)
    %105 = cir.call @close(%104) : (!s32i) -> !s32i loc(#loc298)
    cir.br ^bb47 loc(#loc293)
  ^bb47:  // 2 preds: ^bb45, ^bb46
    cir.br ^bb48 loc(#loc293)
  ^bb48:  // pred: ^bb47
    cir.br ^bb49 loc(#loc197)
  ^bb49:  // pred: ^bb48
    cir.br ^bb51 loc(#loc299)
  ^bb50:  // pred: ^bb2
    %106 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc300)
    %107 = cir.cast(array_to_ptrdecay, %106 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc300)
    cir.call @printLine(%107) : (!cir.ptr<!s8i>) -> () loc(#loc301)
    cir.br ^bb51 loc(#loc302)
  ^bb51:  // 2 preds: ^bb49, ^bb50
    cir.br ^bb52 loc(#loc193)
  ^bb52:  // pred: ^bb51
    cir.br ^bb53 loc(#loc639)
  ^bb53:  // pred: ^bb52
    %108 = cir.const #cir.int<8> : !s32i loc(#loc305)
    cir.br ^bb54 loc(#loc303)
  ^bb54:  // pred: ^bb53
    cir.switch.flat %108 : !s32i, ^bb57 [
      7: ^bb56
    ] loc(#loc303)
  ^bb55:  // no predecessors
    cir.br ^bb56 loc(#loc306)
  ^bb56:  // 2 preds: ^bb54, ^bb55
    %109 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc307)
    %110 = cir.cast(array_to_ptrdecay, %109 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc307)
    cir.call @printLine(%110) : (!cir.ptr<!s8i>) -> () loc(#loc308)
    cir.br ^bb63 loc(#loc309)
  ^bb57:  // pred: ^bb54
    cir.br ^bb58 loc(#loc640)
  ^bb58:  // pred: ^bb57
    %111 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc312)
    %112 = cir.const #cir.int<0> : !s32i loc(#loc313)
    %113 = cir.cmp(ne, %111, %112) : !s32i, !cir.bool loc(#loc641)
    cir.brcond %113 ^bb59, ^bb60 loc(#loc642)
  ^bb59:  // pred: ^bb58
    %114 = cir.const #cir.int<100> : !s32i loc(#loc317)
    %115 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc318)
    %116 = cir.binop(rem, %114, %115) : !s32i loc(#loc643)
    cir.call @printIntLine(%116) : (!s32i) -> () loc(#loc319)
    cir.br ^bb61 loc(#loc315)
  ^bb60:  // pred: ^bb58
    %117 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc174)
    %118 = cir.cast(array_to_ptrdecay, %117 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc174)
    cir.call @printLine(%118) : (!cir.ptr<!s8i>) -> () loc(#loc320)
    cir.br ^bb61 loc(#loc311)
  ^bb61:  // 2 preds: ^bb59, ^bb60
    cir.br ^bb62 loc(#loc311)
  ^bb62:  // pred: ^bb61
    cir.br ^bb63 loc(#loc321)
  ^bb63:  // 2 preds: ^bb56, ^bb62
    cir.br ^bb64 loc(#loc304)
  ^bb64:  // pred: ^bb63
    cir.return loc(#loc176)
  } loc(#loc591)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc645)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc646)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc647)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc648)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc649)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc650)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc336)
    %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc337)
    cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc651)
    cir.br ^bb1 loc(#loc652)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.int<6> : !s32i loc(#loc341)
    cir.br ^bb2 loc(#loc339)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %8 : !s32i, ^bb50 [
      6: ^bb4
    ] loc(#loc339)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc342)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc653)
  ^bb5:  // pred: ^bb4
    %9 = cir.const #cir.int<1> : !s32i loc(#loc329)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc329)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc647)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc331)
    %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc331)
    cir.store %12, %3 : !s32i, !cir.ptr<!s32i> loc(#loc648)
    cir.br ^bb6 loc(#loc654)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc654)
  ^bb7:  // pred: ^bb38
    %13 = cir.const #cir.int<0> : !s32i loc(#loc347)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc347)
    cir.brcond %14 ^bb8, ^bb39 loc(#loc347)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc655)
  ^bb9:  // pred: ^bb8
    %15 = cir.const #cir.int<2> : !s32i loc(#loc350)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc351)
    %17 = cir.const #cir.int<6> : !s32i loc(#loc352)
    %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc353)
    cir.store %18, %2 : !s32i, !cir.ptr<!s32i> loc(#loc656)
    cir.br ^bb10 loc(#loc657)
  ^bb10:  // pred: ^bb9
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc358)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc359)
    %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc359)
    %22 = cir.cmp(eq, %19, %21) : !s32i, !cir.bool loc(#loc658)
    cir.brcond %22 ^bb11, ^bb12 loc(#loc659)
  ^bb11:  // pred: ^bb10
    cir.br ^bb39 loc(#loc361)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc357)
  ^bb13:  // pred: ^bb12
    %23 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc660)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc364)
    %25 = cir.const #cir.int<16> : !u64i loc(#loc661)
    cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc662)
    %26 = cir.const #cir.int<2> : !s32i loc(#loc369)
    %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc369)
    %28 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
    cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc663)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc371)
    %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc371)
    %31 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc73)
    %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc74)
    cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc664)
    %33 = cir.const #cir.int<27015> : !s32i loc(#loc373)
    %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc373)
    %35 = cir.call @htons(%34) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc374)
    %36 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
    cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc665)
    cir.br ^bb14 loc(#loc666)
  ^bb14:  // pred: ^bb13
    %37 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc379)
    %38 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc667)
    %39 = cir.const #cir.int<16> : !u64i loc(#loc668)
    %40 = cir.cast(integral, %39 : !u64i), !u32i loc(#loc668)
    %41 = cir.call @bind(%37, %38, %40) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc384)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc385)
    %43 = cir.unary(minus, %42) nsw : !s32i, !s32i loc(#loc385)
    %44 = cir.cmp(eq, %41, %43) : !s32i, !cir.bool loc(#loc669)
    cir.brcond %44 ^bb15, ^bb16 loc(#loc670)
  ^bb15:  // pred: ^bb14
    cir.br ^bb39 loc(#loc387)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc378)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc671)
  ^bb18:  // pred: ^bb17
    %45 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc390)
    %46 = cir.const #cir.int<5> : !s32i loc(#loc391)
    %47 = cir.call @listen(%45, %46) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc392)
    %48 = cir.const #cir.int<1> : !s32i loc(#loc393)
    %49 = cir.unary(minus, %48) nsw : !s32i, !s32i loc(#loc393)
    %50 = cir.cmp(eq, %47, %49) : !s32i, !cir.bool loc(#loc672)
    cir.brcond %50 ^bb19, ^bb20 loc(#loc673)
  ^bb19:  // pred: ^bb18
    cir.br ^bb39 loc(#loc395)
  ^bb20:  // pred: ^bb18
    cir.br ^bb21 loc(#loc389)
  ^bb21:  // pred: ^bb20
    %51 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc396)
    %52 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc397)
    %53 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc398)
    %54 = cir.call @accept(%51, %52, %53) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc399)
    cir.store %54, %3 : !s32i, !cir.ptr<!s32i> loc(#loc674)
    cir.br ^bb22 loc(#loc675)
  ^bb22:  // pred: ^bb21
    %55 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc404)
    %56 = cir.const #cir.int<1> : !s32i loc(#loc405)
    %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc405)
    %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc676)
    cir.brcond %58 ^bb23, ^bb24 loc(#loc677)
  ^bb23:  // pred: ^bb22
    cir.br ^bb39 loc(#loc407)
  ^bb24:  // pred: ^bb22
    cir.br ^bb25 loc(#loc403)
  ^bb25:  // pred: ^bb24
    %59 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc408)
    %60 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc409)
    %61 = cir.cast(bitcast, %60 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc409)
    %62 = cir.const #cir.int<3> : !s32i loc(#loc410)
    %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc410)
    %64 = cir.const #cir.int<4> : !u64i loc(#loc410)
    %65 = cir.binop(mul, %63, %64) : !u64i loc(#loc410)
    %66 = cir.const #cir.int<2> : !s32i loc(#loc410)
    %67 = cir.cast(integral, %66 : !s32i), !u64i loc(#loc410)
    %68 = cir.binop(add, %65, %67) : !u64i loc(#loc410)
    %69 = cir.const #cir.int<1> : !s32i loc(#loc411)
    %70 = cir.cast(integral, %69 : !s32i), !u64i loc(#loc411)
    %71 = cir.binop(sub, %68, %70) : !u64i loc(#loc678)
    %72 = cir.const #cir.int<0> : !s32i loc(#loc412)
    %73 = cir.call @recv(%59, %61, %71, %72) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc413)
    %74 = cir.cast(integral, %73 : !s64i), !s32i loc(#loc413)
    cir.store %74, %0 : !s32i, !cir.ptr<!s32i> loc(#loc679)
    cir.br ^bb26 loc(#loc680)
  ^bb26:  // pred: ^bb25
    %75 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc418)
    %76 = cir.const #cir.int<1> : !s32i loc(#loc419)
    %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc419)
    %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc681)
    cir.brcond %78 ^bb27, ^bb28 loc(#loc420)
  ^bb27:  // pred: ^bb26
    %79 = cir.const #true loc(#loc420)
    cir.br ^bb33(%79 : !cir.bool) loc(#loc420)
  ^bb28:  // pred: ^bb26
    %80 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc421)
    %81 = cir.const #cir.int<0> : !s32i loc(#loc422)
    %82 = cir.cmp(eq, %80, %81) : !s32i, !cir.bool loc(#loc682)
    cir.brcond %82 ^bb29, ^bb30 loc(#loc420)
  ^bb29:  // pred: ^bb28
    %83 = cir.const #true loc(#loc420)
    cir.br ^bb31(%83 : !cir.bool) loc(#loc420)
  ^bb30:  // pred: ^bb28
    %84 = cir.const #false loc(#loc420)
    cir.br ^bb31(%84 : !cir.bool) loc(#loc420)
  ^bb31(%85: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":301:44)):  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc420)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33(%85 : !cir.bool) loc(#loc420)
  ^bb33(%86: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":301:44)):  // 2 preds: ^bb27, ^bb32
    cir.br ^bb34 loc(#loc420)
  ^bb34:  // pred: ^bb33
    cir.brcond %86 ^bb35, ^bb36 loc(#loc683)
  ^bb35:  // pred: ^bb34
    cir.br ^bb39 loc(#loc424)
  ^bb36:  // pred: ^bb34
    cir.br ^bb37 loc(#loc417)
  ^bb37:  // pred: ^bb36
    %87 = cir.const #cir.int<0> : !s32i loc(#loc425)
    %88 = cir.cast(integral, %87 : !s32i), !s8i loc(#loc425)
    %89 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc426)
    %90 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc427)
    %91 = cir.ptr_stride(%90 : !cir.ptr<!s8i>, %89 : !s32i), !cir.ptr<!s8i> loc(#loc427)
    cir.store %88, %91 : !s8i, !cir.ptr<!s8i> loc(#loc684)
    %92 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc428)
    %93 = cir.call @atoi(%92) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc429)
    cir.store %93, %5 : !s32i, !cir.ptr<!s32i> loc(#loc685)
    cir.br ^bb38 loc(#loc349)
  ^bb38:  // pred: ^bb37
    cir.br ^bb7 loc(#loc346)
  ^bb39:  // 6 preds: ^bb7, ^bb11, ^bb15, ^bb19, ^bb23, ^bb35
    cir.br ^bb40 loc(#loc346)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc686)
  ^bb41:  // pred: ^bb40
    %94 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc434)
    %95 = cir.const #cir.int<1> : !s32i loc(#loc435)
    %96 = cir.unary(minus, %95) nsw : !s32i, !s32i loc(#loc435)
    %97 = cir.cmp(ne, %94, %96) : !s32i, !cir.bool loc(#loc687)
    cir.brcond %97 ^bb42, ^bb43 loc(#loc688)
  ^bb42:  // pred: ^bb41
    %98 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc437)
    %99 = cir.call @close(%98) : (!s32i) -> !s32i loc(#loc438)
    cir.br ^bb43 loc(#loc433)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc433)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc689)
  ^bb45:  // pred: ^bb44
    %100 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc441)
    %101 = cir.const #cir.int<1> : !s32i loc(#loc442)
    %102 = cir.unary(minus, %101) nsw : !s32i, !s32i loc(#loc442)
    %103 = cir.cmp(ne, %100, %102) : !s32i, !cir.bool loc(#loc690)
    cir.brcond %103 ^bb46, ^bb47 loc(#loc691)
  ^bb46:  // pred: ^bb45
    %104 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc444)
    %105 = cir.call @close(%104) : (!s32i) -> !s32i loc(#loc445)
    cir.br ^bb47 loc(#loc440)
  ^bb47:  // 2 preds: ^bb45, ^bb46
    cir.br ^bb48 loc(#loc440)
  ^bb48:  // pred: ^bb47
    cir.br ^bb49 loc(#loc344)
  ^bb49:  // pred: ^bb48
    cir.br ^bb51 loc(#loc446)
  ^bb50:  // pred: ^bb2
    %106 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc447)
    %107 = cir.cast(array_to_ptrdecay, %106 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc447)
    cir.call @printLine(%107) : (!cir.ptr<!s8i>) -> () loc(#loc448)
    cir.br ^bb51 loc(#loc449)
  ^bb51:  // 2 preds: ^bb49, ^bb50
    cir.br ^bb52 loc(#loc340)
  ^bb52:  // pred: ^bb51
    cir.br ^bb53 loc(#loc692)
  ^bb53:  // pred: ^bb52
    %108 = cir.const #cir.int<7> : !s32i loc(#loc452)
    cir.br ^bb54 loc(#loc450)
  ^bb54:  // pred: ^bb53
    cir.switch.flat %108 : !s32i, ^bb62 [
      7: ^bb56
    ] loc(#loc450)
  ^bb55:  // no predecessors
    cir.br ^bb56 loc(#loc453)
  ^bb56:  // 2 preds: ^bb54, ^bb55
    cir.br ^bb57 loc(#loc693)
  ^bb57:  // pred: ^bb56
    %109 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc456)
    %110 = cir.const #cir.int<0> : !s32i loc(#loc457)
    %111 = cir.cmp(ne, %109, %110) : !s32i, !cir.bool loc(#loc694)
    cir.brcond %111 ^bb58, ^bb59 loc(#loc695)
  ^bb58:  // pred: ^bb57
    %112 = cir.const #cir.int<100> : !s32i loc(#loc461)
    %113 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc462)
    %114 = cir.binop(rem, %112, %113) : !s32i loc(#loc696)
    cir.call @printIntLine(%114) : (!s32i) -> () loc(#loc463)
    cir.br ^bb60 loc(#loc459)
  ^bb59:  // pred: ^bb57
    %115 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc464)
    %116 = cir.cast(array_to_ptrdecay, %115 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc464)
    cir.call @printLine(%116) : (!cir.ptr<!s8i>) -> () loc(#loc465)
    cir.br ^bb60 loc(#loc455)
  ^bb60:  // 2 preds: ^bb58, ^bb59
    cir.br ^bb61 loc(#loc455)
  ^bb61:  // pred: ^bb60
    cir.br ^bb63 loc(#loc466)
  ^bb62:  // pred: ^bb54
    %117 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc467)
    %118 = cir.cast(array_to_ptrdecay, %117 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc467)
    cir.call @printLine(%118) : (!cir.ptr<!s8i>) -> () loc(#loc468)
    cir.br ^bb63 loc(#loc469)
  ^bb63:  // 2 preds: ^bb61, ^bb62
    cir.br ^bb64 loc(#loc451)
  ^bb64:  // pred: ^bb63
    cir.return loc(#loc323)
  } loc(#loc644)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc698)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc474)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc475)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc699)
    cir.br ^bb1 loc(#loc700)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc479)
    cir.br ^bb2 loc(#loc477)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc477)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc480)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc481)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc481)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc482)
    cir.br ^bb6 loc(#loc483)
  ^bb5:  // pred: ^bb2
    %6 = cir.const #cir.int<7> : !s32i loc(#loc484)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc701)
    cir.br ^bb6 loc(#loc486)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc478)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc702)
  ^bb8:  // pred: ^bb7
    %7 = cir.const #cir.int<7> : !s32i loc(#loc489)
    cir.br ^bb9 loc(#loc487)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %7 : !s32i, ^bb12 [
      7: ^bb11
    ] loc(#loc487)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc490)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    %8 = cir.const #cir.int<100> : !s32i loc(#loc491)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc492)
    %10 = cir.binop(rem, %8, %9) : !s32i loc(#loc703)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc493)
    cir.br ^bb13 loc(#loc494)
  ^bb12:  // pred: ^bb9
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc495)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc495)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc496)
    cir.br ^bb13 loc(#loc497)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc488)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc471)
  } loc(#loc697)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc705)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc502)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc503)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc706)
    cir.br ^bb1 loc(#loc707)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc507)
    cir.br ^bb2 loc(#loc505)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc505)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc508)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.const #cir.int<7> : !s32i loc(#loc509)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc708)
    cir.br ^bb6 loc(#loc511)
  ^bb5:  // pred: ^bb2
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc512)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc512)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc513)
    cir.br ^bb6 loc(#loc514)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc506)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc709)
  ^bb8:  // pred: ^bb7
    %7 = cir.const #cir.int<7> : !s32i loc(#loc517)
    cir.br ^bb9 loc(#loc515)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %7 : !s32i, ^bb12 [
      7: ^bb11
    ] loc(#loc515)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc518)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    %8 = cir.const #cir.int<100> : !s32i loc(#loc519)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc520)
    %10 = cir.binop(rem, %8, %9) : !s32i loc(#loc710)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc521)
    cir.br ^bb13 loc(#loc522)
  ^bb12:  // pred: ^bb9
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc523)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc523)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc524)
    cir.br ^bb13 loc(#loc525)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc516)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc499)
  } loc(#loc704)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc19 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":124:19)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc22 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":44:1)
#loc23 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":138:1)
#loc24 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":57:9)
#loc25 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":57:13)
#loc26 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":58:9)
#loc27 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":58:28)
#loc28 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":59:9)
#loc29 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":59:31)
#loc30 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":60:9)
#loc31 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":60:31)
#loc32 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":61:9)
#loc33 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":61:41)
#loc34 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":46:5)
#loc35 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":46:9)
#loc36 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":48:13)
#loc37 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":48:12)
#loc38 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":48:5)
#loc39 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":49:5)
#loc40 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":126:5)
#loc41 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":49:12)
#loc42 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":51:5)
#loc43 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":52:5)
#loc44 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":120:5)
#loc45 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":62:9)
#loc46 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":105:17)
#loc47 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":105:16)
#loc48 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":63:9)
#loc49 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":104:9)
#loc50 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":72:35)
#loc51 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":72:44)
#loc52 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":72:57)
#loc53 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":72:28)
#loc54 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":72:13)
#loc55 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":72:68)
#loc56 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":73:13)
#loc57 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":76:13)
#loc58 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":73:17)
#loc59 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":73:33)
#loc60 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":74:13)
#loc61 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":75:17)
#loc62 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":77:20)
#loc63 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":77:21)
#loc64 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":77:30)
#loc65 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":77:33)
#loc66 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":77:47)
#loc67 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":77:13)
#loc68 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":77:48)
#loc69 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":78:34)
#loc70 = loc("/usr/include/netinet/in.h":249:5)
#loc71 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":78:13)
#loc72 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":79:39)
#loc73 = loc("/usr/include/netinet/in.h":251:20)
#loc74 = loc("/usr/include/netinet/in.h":33:15)
#loc75 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":79:13)
#loc76 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":80:38)
#loc77 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":80:32)
#loc78 = loc("/usr/include/netinet/in.h":250:15)
#loc79 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":80:13)
#loc80 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":80:46)
#loc81 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":81:13)
#loc82 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":84:13)
#loc83 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":81:22)
#loc84 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":81:54)
#loc85 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":81:55)
#loc86 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":81:64)
#loc87 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":81:78)
#loc88 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":81:17)
#loc89 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":81:84)
#loc90 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":82:13)
#loc91 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":83:17)
#loc92 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":85:13)
#loc93 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":88:13)
#loc94 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":85:24)
#loc95 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":85:38)
#loc96 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":85:17)
#loc97 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":85:57)
#loc98 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":86:13)
#loc99 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":87:17)
#loc100 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":89:35)
#loc101 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":89:49)
#loc102 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":89:55)
#loc103 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":89:28)
#loc104 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":89:13)
#loc105 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":89:59)
#loc106 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":90:13)
#loc107 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":93:13)
#loc108 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":90:17)
#loc109 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":90:33)
#loc110 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":91:13)
#loc111 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":92:17)
#loc112 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":95:31)
#loc113 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":95:45)
#loc114 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":95:58)
#loc115 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":95:76)
#loc116 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":95:79)
#loc117 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":95:26)
#loc118 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":95:13)
#loc119 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":95:80)
#loc120 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":96:13)
#loc121 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":99:13)
#loc122 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":96:17)
#loc123 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":96:31)
#loc125 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":96:47)
#loc126 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":96:61)
#loc127 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":97:13)
#loc128 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":98:17)
#loc129 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":101:39)
#loc130 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":101:25)
#loc131 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":101:13)
#loc132 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":103:25)
#loc133 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":103:20)
#loc134 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":103:13)
#loc135 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":103:36)
#loc136 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":106:9)
#loc137 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":109:9)
#loc138 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":106:13)
#loc139 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":106:29)
#loc140 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":107:9)
#loc141 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":108:26)
#loc142 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":108:13)
#loc143 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":110:9)
#loc144 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":113:9)
#loc145 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":110:13)
#loc146 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":110:29)
#loc147 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":111:9)
#loc148 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":112:26)
#loc149 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":112:13)
#loc150 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":121:5)
#loc151 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":124:9)
#loc152 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":125:9)
#loc153 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":127:5)
#loc154 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":137:5)
#loc155 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":127:12)
#loc156 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":129:5)
#loc157 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":131:22)
#loc158 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":131:28)
#loc159 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":131:9)
#loc160 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":132:9)
#loc161 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":135:19)
#loc162 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":135:9)
#loc163 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":136:9)
#loc164 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":412:1)
#loc165 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":418:1)
#loc166 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":414:5)
#loc167 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":414:14)
#loc168 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":415:5)
#loc169 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":415:14)
#loc170 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":416:5)
#loc171 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":416:14)
#loc172 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":417:5)
#loc173 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":417:14)
#loc174 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":242:23)
#loc175 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":145:1)
#loc176 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":246:1)
#loc177 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":158:9)
#loc178 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":158:13)
#loc179 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":159:9)
#loc180 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":159:28)
#loc181 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":160:9)
#loc182 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":160:31)
#loc183 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":161:9)
#loc184 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":161:31)
#loc185 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":162:9)
#loc186 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":162:41)
#loc187 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":147:5)
#loc188 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":147:9)
#loc189 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":149:13)
#loc190 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":149:12)
#loc191 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":149:5)
#loc192 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":150:5)
#loc193 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":227:5)
#loc194 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":150:12)
#loc195 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":152:5)
#loc196 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":153:5)
#loc197 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":221:5)
#loc198 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":163:9)
#loc199 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":206:17)
#loc200 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":206:16)
#loc201 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":164:9)
#loc202 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":205:9)
#loc203 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":173:35)
#loc204 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":173:44)
#loc205 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":173:57)
#loc206 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":173:28)
#loc207 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":173:13)
#loc208 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":173:68)
#loc209 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":174:13)
#loc210 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":177:13)
#loc211 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":174:17)
#loc212 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":174:33)
#loc213 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":175:13)
#loc214 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":176:17)
#loc215 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":178:20)
#loc216 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":178:21)
#loc217 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":178:30)
#loc218 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":178:33)
#loc219 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":178:47)
#loc220 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":178:13)
#loc221 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":178:48)
#loc222 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":179:34)
#loc223 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":179:13)
#loc224 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":180:39)
#loc225 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":180:13)
#loc226 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":181:38)
#loc227 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":181:32)
#loc228 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":181:13)
#loc229 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":181:46)
#loc230 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":182:13)
#loc231 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":185:13)
#loc232 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":182:22)
#loc233 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":182:54)
#loc234 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":182:55)
#loc235 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":182:64)
#loc236 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":182:78)
#loc237 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":182:17)
#loc238 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":182:84)
#loc239 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":183:13)
#loc240 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":184:17)
#loc241 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":186:13)
#loc242 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":189:13)
#loc243 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":186:24)
#loc244 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":186:38)
#loc245 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":186:17)
#loc246 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":186:57)
#loc247 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":187:13)
#loc248 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":188:17)
#loc249 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":190:35)
#loc250 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":190:49)
#loc251 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":190:55)
#loc252 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":190:28)
#loc253 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":190:13)
#loc254 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":190:59)
#loc255 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":191:13)
#loc256 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":194:13)
#loc257 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":191:17)
#loc258 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":191:33)
#loc259 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":192:13)
#loc260 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":193:17)
#loc261 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":196:31)
#loc262 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":196:45)
#loc263 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":196:58)
#loc264 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":196:76)
#loc265 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":196:79)
#loc266 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":196:26)
#loc267 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":196:13)
#loc268 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":196:80)
#loc269 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":197:13)
#loc270 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":200:13)
#loc271 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":197:17)
#loc272 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":197:31)
#loc274 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":197:47)
#loc275 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":197:61)
#loc276 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":198:13)
#loc277 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":199:17)
#loc278 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":202:39)
#loc279 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":202:25)
#loc280 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":202:13)
#loc281 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":204:25)
#loc282 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":204:20)
#loc283 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":204:13)
#loc284 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":204:36)
#loc285 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":207:9)
#loc286 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":210:9)
#loc287 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":207:13)
#loc288 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":207:29)
#loc289 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":208:9)
#loc290 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":209:26)
#loc291 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":209:13)
#loc292 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":211:9)
#loc293 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":214:9)
#loc294 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":211:13)
#loc295 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":211:29)
#loc296 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":212:9)
#loc297 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":213:26)
#loc298 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":213:13)
#loc299 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":222:5)
#loc300 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":225:19)
#loc301 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":225:9)
#loc302 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":226:9)
#loc303 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":228:5)
#loc304 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":245:5)
#loc305 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":228:12)
#loc306 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":230:5)
#loc307 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":232:19)
#loc308 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":232:9)
#loc309 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":233:9)
#loc310 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":236:9)
#loc311 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":243:9)
#loc312 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":236:13)
#loc313 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":236:21)
#loc314 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":237:9)
#loc315 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":239:9)
#loc316 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":241:9)
#loc317 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":238:26)
#loc318 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":238:32)
#loc319 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":238:13)
#loc320 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":242:13)
#loc321 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":244:9)
#loc322 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":249:1)
#loc323 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":350:1)
#loc324 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":262:9)
#loc325 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":262:13)
#loc326 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":263:9)
#loc327 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":263:28)
#loc328 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":264:9)
#loc329 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":264:31)
#loc330 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":265:9)
#loc331 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":265:31)
#loc332 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":266:9)
#loc333 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":266:41)
#loc334 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":251:5)
#loc335 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":251:9)
#loc336 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":253:13)
#loc337 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":253:12)
#loc338 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":253:5)
#loc339 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":254:5)
#loc340 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":331:5)
#loc341 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":254:12)
#loc342 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":256:5)
#loc343 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":257:5)
#loc344 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":325:5)
#loc345 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":267:9)
#loc346 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":310:17)
#loc347 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":310:16)
#loc348 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":268:9)
#loc349 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":309:9)
#loc350 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":277:35)
#loc351 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":277:44)
#loc352 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":277:57)
#loc353 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":277:28)
#loc354 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":277:13)
#loc355 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":277:68)
#loc356 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":278:13)
#loc357 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":281:13)
#loc358 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":278:17)
#loc359 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":278:33)
#loc360 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":279:13)
#loc361 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":280:17)
#loc362 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":282:20)
#loc363 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":282:21)
#loc364 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":282:30)
#loc365 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":282:33)
#loc366 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":282:47)
#loc367 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":282:13)
#loc368 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":282:48)
#loc369 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":283:34)
#loc370 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":283:13)
#loc371 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":284:39)
#loc372 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":284:13)
#loc373 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":285:38)
#loc374 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":285:32)
#loc375 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":285:13)
#loc376 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":285:46)
#loc377 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":286:13)
#loc378 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":289:13)
#loc379 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":286:22)
#loc380 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":286:54)
#loc381 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":286:55)
#loc382 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":286:64)
#loc383 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":286:78)
#loc384 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":286:17)
#loc385 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":286:84)
#loc386 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":287:13)
#loc387 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":288:17)
#loc388 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":290:13)
#loc389 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":293:13)
#loc390 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":290:24)
#loc391 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":290:38)
#loc392 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":290:17)
#loc393 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":290:57)
#loc394 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":291:13)
#loc395 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":292:17)
#loc396 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":294:35)
#loc397 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":294:49)
#loc398 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":294:55)
#loc399 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":294:28)
#loc400 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":294:13)
#loc401 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":294:59)
#loc402 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":295:13)
#loc403 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":298:13)
#loc404 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":295:17)
#loc405 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":295:33)
#loc406 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":296:13)
#loc407 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":297:17)
#loc408 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":300:31)
#loc409 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":300:45)
#loc410 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":300:58)
#loc411 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":300:76)
#loc412 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":300:79)
#loc413 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":300:26)
#loc414 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":300:13)
#loc415 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":300:80)
#loc416 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":301:13)
#loc417 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":304:13)
#loc418 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":301:17)
#loc419 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":301:31)
#loc421 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":301:47)
#loc422 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":301:61)
#loc423 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":302:13)
#loc424 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":303:17)
#loc425 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":306:39)
#loc426 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":306:25)
#loc427 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":306:13)
#loc428 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":308:25)
#loc429 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":308:20)
#loc430 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":308:13)
#loc431 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":308:36)
#loc432 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":311:9)
#loc433 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":314:9)
#loc434 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":311:13)
#loc435 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":311:29)
#loc436 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":312:9)
#loc437 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":313:26)
#loc438 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":313:13)
#loc439 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":315:9)
#loc440 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":318:9)
#loc441 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":315:13)
#loc442 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":315:29)
#loc443 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":316:9)
#loc444 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":317:26)
#loc445 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":317:13)
#loc446 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":326:5)
#loc447 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":329:19)
#loc448 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":329:9)
#loc449 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":330:9)
#loc450 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":332:5)
#loc451 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":349:5)
#loc452 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":332:12)
#loc453 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":334:5)
#loc454 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":336:9)
#loc455 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":343:9)
#loc456 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":336:13)
#loc457 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":336:21)
#loc458 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":337:9)
#loc459 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":339:9)
#loc460 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":341:9)
#loc461 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":338:26)
#loc462 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":338:32)
#loc463 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":338:13)
#loc464 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":342:23)
#loc465 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":342:13)
#loc466 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":344:9)
#loc467 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":347:19)
#loc468 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":347:9)
#loc469 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":348:9)
#loc470 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":353:1)
#loc471 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":380:1)
#loc472 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":355:5)
#loc473 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":355:9)
#loc474 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":357:13)
#loc475 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":357:12)
#loc476 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":357:5)
#loc477 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":358:5)
#loc478 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":368:5)
#loc479 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":358:12)
#loc480 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":360:5)
#loc481 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":362:19)
#loc482 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":362:9)
#loc483 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":363:9)
#loc484 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":366:16)
#loc485 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":366:9)
#loc486 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":367:9)
#loc487 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":369:5)
#loc488 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":379:5)
#loc489 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":369:12)
#loc490 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":371:5)
#loc491 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":373:22)
#loc492 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":373:28)
#loc493 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":373:9)
#loc494 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":374:9)
#loc495 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":377:19)
#loc496 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":377:9)
#loc497 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":378:9)
#loc498 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":383:1)
#loc499 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":410:1)
#loc500 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":385:5)
#loc501 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":385:9)
#loc502 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":387:13)
#loc503 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":387:12)
#loc504 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":387:5)
#loc505 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":388:5)
#loc506 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":398:5)
#loc507 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":388:12)
#loc508 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":390:5)
#loc509 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":392:16)
#loc510 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":392:9)
#loc511 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":393:9)
#loc512 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":396:19)
#loc513 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":396:9)
#loc514 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":397:9)
#loc515 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":399:5)
#loc516 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":409:5)
#loc517 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":399:12)
#loc518 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":401:5)
#loc519 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":403:22)
#loc520 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":403:28)
#loc521 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":403:9)
#loc522 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":404:9)
#loc523 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":407:19)
#loc524 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":407:9)
#loc525 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_15.c":408:9)
#loc526 = loc(fused[#loc1, #loc2])
#loc527 = loc(fused[#loc3, #loc4])
#loc528 = loc(fused[#loc5, #loc6])
#loc529 = loc(fused[#loc7, #loc8])
#loc530 = loc(fused[#loc9, #loc10])
#loc531 = loc(fused[#loc11, #loc12])
#loc532 = loc(fused[#loc13, #loc14])
#loc533 = loc(fused[#loc15, #loc16])
#loc534 = loc(fused[#loc17, #loc18])
#loc535 = loc(fused[#loc20, #loc21])
#loc536 = loc(fused[#loc22, #loc23])
#loc537 = loc(fused[#loc24, #loc25])
#loc538 = loc(fused[#loc26, #loc27])
#loc539 = loc(fused[#loc28, #loc29])
#loc540 = loc(fused[#loc30, #loc31])
#loc541 = loc(fused[#loc32, #loc33])
#loc542 = loc(fused[#loc34, #loc35])
#loc543 = loc(fused[#loc38, #loc36])
#loc544 = loc(fused[#loc39, #loc40])
#loc545 = loc(fused[#loc43, #loc44])
#loc546 = loc(fused[#loc45, #loc46])
#loc547 = loc(fused[#loc48, #loc49])
#loc548 = loc(fused[#loc54, #loc55])
#loc549 = loc(fused[#loc56, #loc57])
#loc550 = loc(fused[#loc58, #loc59])
#loc551 = loc(fused[#loc60, #loc57])
#loc552 = loc(fused[#loc62, #loc63])
#loc553 = loc(fused[#loc65, #loc66])
#loc554 = loc(fused[#loc67, #loc68])
#loc555 = loc(fused[#loc71, #loc69])
#loc556 = loc(fused[#loc75, #loc72])
#loc557 = loc(fused[#loc79, #loc80])
#loc558 = loc(fused[#loc81, #loc82])
#loc559 = loc(fused[#loc84, #loc85])
#loc560 = loc(fused[#loc86, #loc87])
#loc561 = loc(fused[#loc88, #loc89])
#loc562 = loc(fused[#loc90, #loc82])
#loc563 = loc(fused[#loc92, #loc93])
#loc564 = loc(fused[#loc96, #loc97])
#loc565 = loc(fused[#loc98, #loc93])
#loc566 = loc(fused[#loc104, #loc105])
#loc567 = loc(fused[#loc106, #loc107])
#loc568 = loc(fused[#loc108, #loc109])
#loc569 = loc(fused[#loc110, #loc107])
#loc570 = loc(fused[#loc114, #loc115])
#loc571 = loc(fused[#loc118, #loc119])
#loc572 = loc(fused[#loc120, #loc121])
#loc573 = loc(fused[#loc122, #loc123])
#loc574 = loc(fused[#loc125, #loc126])
#loc575 = loc(fused[#loc127, #loc121])
#loc576 = loc(fused[#loc131, #loc129])
#loc577 = loc(fused[#loc134, #loc135])
#loc578 = loc(fused[#loc136, #loc137])
#loc579 = loc(fused[#loc138, #loc139])
#loc580 = loc(fused[#loc140, #loc137])
#loc581 = loc(fused[#loc143, #loc144])
#loc582 = loc(fused[#loc145, #loc146])
#loc583 = loc(fused[#loc147, #loc144])
#loc584 = loc(fused[#loc153, #loc154])
#loc585 = loc(fused[#loc157, #loc158])
#loc586 = loc(fused[#loc164, #loc165])
#loc587 = loc(fused[#loc166, #loc167])
#loc588 = loc(fused[#loc168, #loc169])
#loc589 = loc(fused[#loc170, #loc171])
#loc590 = loc(fused[#loc172, #loc173])
#loc591 = loc(fused[#loc175, #loc176])
#loc592 = loc(fused[#loc177, #loc178])
#loc593 = loc(fused[#loc179, #loc180])
#loc594 = loc(fused[#loc181, #loc182])
#loc595 = loc(fused[#loc183, #loc184])
#loc596 = loc(fused[#loc185, #loc186])
#loc597 = loc(fused[#loc187, #loc188])
#loc598 = loc(fused[#loc191, #loc189])
#loc599 = loc(fused[#loc192, #loc193])
#loc600 = loc(fused[#loc196, #loc197])
#loc601 = loc(fused[#loc198, #loc199])
#loc602 = loc(fused[#loc201, #loc202])
#loc603 = loc(fused[#loc207, #loc208])
#loc604 = loc(fused[#loc209, #loc210])
#loc605 = loc(fused[#loc211, #loc212])
#loc606 = loc(fused[#loc213, #loc210])
#loc607 = loc(fused[#loc215, #loc216])
#loc608 = loc(fused[#loc218, #loc219])
#loc609 = loc(fused[#loc220, #loc221])
#loc610 = loc(fused[#loc223, #loc222])
#loc611 = loc(fused[#loc225, #loc224])
#loc612 = loc(fused[#loc228, #loc229])
#loc613 = loc(fused[#loc230, #loc231])
#loc614 = loc(fused[#loc233, #loc234])
#loc615 = loc(fused[#loc235, #loc236])
#loc616 = loc(fused[#loc237, #loc238])
#loc617 = loc(fused[#loc239, #loc231])
#loc618 = loc(fused[#loc241, #loc242])
#loc619 = loc(fused[#loc245, #loc246])
#loc620 = loc(fused[#loc247, #loc242])
#loc621 = loc(fused[#loc253, #loc254])
#loc622 = loc(fused[#loc255, #loc256])
#loc623 = loc(fused[#loc257, #loc258])
#loc624 = loc(fused[#loc259, #loc256])
#loc625 = loc(fused[#loc263, #loc264])
#loc626 = loc(fused[#loc267, #loc268])
#loc627 = loc(fused[#loc269, #loc270])
#loc628 = loc(fused[#loc271, #loc272])
#loc629 = loc(fused[#loc274, #loc275])
#loc630 = loc(fused[#loc276, #loc270])
#loc631 = loc(fused[#loc280, #loc278])
#loc632 = loc(fused[#loc283, #loc284])
#loc633 = loc(fused[#loc285, #loc286])
#loc634 = loc(fused[#loc287, #loc288])
#loc635 = loc(fused[#loc289, #loc286])
#loc636 = loc(fused[#loc292, #loc293])
#loc637 = loc(fused[#loc294, #loc295])
#loc638 = loc(fused[#loc296, #loc293])
#loc639 = loc(fused[#loc303, #loc304])
#loc640 = loc(fused[#loc310, #loc311])
#loc641 = loc(fused[#loc312, #loc313])
#loc642 = loc(fused[#loc314, #loc315, #loc316, #loc311])
#loc643 = loc(fused[#loc317, #loc318])
#loc644 = loc(fused[#loc322, #loc323])
#loc645 = loc(fused[#loc324, #loc325])
#loc646 = loc(fused[#loc326, #loc327])
#loc647 = loc(fused[#loc328, #loc329])
#loc648 = loc(fused[#loc330, #loc331])
#loc649 = loc(fused[#loc332, #loc333])
#loc650 = loc(fused[#loc334, #loc335])
#loc651 = loc(fused[#loc338, #loc336])
#loc652 = loc(fused[#loc339, #loc340])
#loc653 = loc(fused[#loc343, #loc344])
#loc654 = loc(fused[#loc345, #loc346])
#loc655 = loc(fused[#loc348, #loc349])
#loc656 = loc(fused[#loc354, #loc355])
#loc657 = loc(fused[#loc356, #loc357])
#loc658 = loc(fused[#loc358, #loc359])
#loc659 = loc(fused[#loc360, #loc357])
#loc660 = loc(fused[#loc362, #loc363])
#loc661 = loc(fused[#loc365, #loc366])
#loc662 = loc(fused[#loc367, #loc368])
#loc663 = loc(fused[#loc370, #loc369])
#loc664 = loc(fused[#loc372, #loc371])
#loc665 = loc(fused[#loc375, #loc376])
#loc666 = loc(fused[#loc377, #loc378])
#loc667 = loc(fused[#loc380, #loc381])
#loc668 = loc(fused[#loc382, #loc383])
#loc669 = loc(fused[#loc384, #loc385])
#loc670 = loc(fused[#loc386, #loc378])
#loc671 = loc(fused[#loc388, #loc389])
#loc672 = loc(fused[#loc392, #loc393])
#loc673 = loc(fused[#loc394, #loc389])
#loc674 = loc(fused[#loc400, #loc401])
#loc675 = loc(fused[#loc402, #loc403])
#loc676 = loc(fused[#loc404, #loc405])
#loc677 = loc(fused[#loc406, #loc403])
#loc678 = loc(fused[#loc410, #loc411])
#loc679 = loc(fused[#loc414, #loc415])
#loc680 = loc(fused[#loc416, #loc417])
#loc681 = loc(fused[#loc418, #loc419])
#loc682 = loc(fused[#loc421, #loc422])
#loc683 = loc(fused[#loc423, #loc417])
#loc684 = loc(fused[#loc427, #loc425])
#loc685 = loc(fused[#loc430, #loc431])
#loc686 = loc(fused[#loc432, #loc433])
#loc687 = loc(fused[#loc434, #loc435])
#loc688 = loc(fused[#loc436, #loc433])
#loc689 = loc(fused[#loc439, #loc440])
#loc690 = loc(fused[#loc441, #loc442])
#loc691 = loc(fused[#loc443, #loc440])
#loc692 = loc(fused[#loc450, #loc451])
#loc693 = loc(fused[#loc454, #loc455])
#loc694 = loc(fused[#loc456, #loc457])
#loc695 = loc(fused[#loc458, #loc459, #loc460, #loc455])
#loc696 = loc(fused[#loc461, #loc462])
#loc697 = loc(fused[#loc470, #loc471])
#loc698 = loc(fused[#loc472, #loc473])
#loc699 = loc(fused[#loc476, #loc474])
#loc700 = loc(fused[#loc477, #loc478])
#loc701 = loc(fused[#loc485, #loc484])
#loc702 = loc(fused[#loc487, #loc488])
#loc703 = loc(fused[#loc491, #loc492])
#loc704 = loc(fused[#loc498, #loc499])
#loc705 = loc(fused[#loc500, #loc501])
#loc706 = loc(fused[#loc504, #loc502])
#loc707 = loc(fused[#loc505, #loc506])
#loc708 = loc(fused[#loc510, #loc509])
#loc709 = loc(fused[#loc515, #loc516])
#loc710 = loc(fused[#loc519, #loc520])
