!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc5 = loc("../../testcasesupport/std_testcase.h":96:16)
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i}>
module @"/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_new_use_12.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @globalReturnsTrueOrFalse() -> !s32i loc(#loc117)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc118)
  cir.func linkonce_odr @_ZN14_twoIntsStructC2Ev(%arg0: !cir.ptr<!ty__twoIntsStruct> loc("../../testcasesupport/std_testcase.h":96:16)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["this", init] {alignment = 8 : i64} loc(#loc5)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc5)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc5)
    cir.return loc(#loc5)
  } loc(#loc5)
  cir.func linkonce_odr @_ZN14_twoIntsStructC2ERKS_(%arg0: !cir.ptr<!ty__twoIntsStruct> loc("../../testcasesupport/std_testcase.h":96:16), %arg1: !cir.ptr<!ty__twoIntsStruct> loc("../../testcasesupport/std_testcase.h":96:16)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["this", init] {alignment = 8 : i64} loc(#loc5)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["", init, const] {alignment = 8 : i64} loc(#loc5)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc5)
    cir.store %arg1, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc5)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc5)
    %3 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc6)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc5)
    %5 = cir.get_member %4[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc6)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc5)
    %7 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc6)
    %8 = cir.cast(bitcast, %5 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc6)
    cir.libc.memcpy %6 bytes from %8 to %7 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc5)
    cir.return loc(#loc5)
  } loc(#loc5)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc119)
  cir.func private @printIntLine(!s32i) loc(#loc120)
  cir.func linkonce_odr @_ZN14_twoIntsStructaSERKS_(%arg0: !cir.ptr<!ty__twoIntsStruct> loc("../../testcasesupport/std_testcase.h":96:16), %arg1: !cir.ptr<!ty__twoIntsStruct> loc("../../testcasesupport/std_testcase.h":96:16)) -> !cir.ptr<!ty__twoIntsStruct> extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["this", init] {alignment = 8 : i64} loc(#loc5)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["", init, const] {alignment = 8 : i64} loc(#loc5)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["__retval"] {alignment = 8 : i64} loc(#loc5)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc5)
    cir.store %arg1, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc5)
    %3 = cir.load deref %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc5)
    %4 = cir.get_member %3[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc6)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc5)
    %6 = cir.get_member %5[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc6)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc5)
    %8 = cir.cast(bitcast, %4 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc6)
    %9 = cir.cast(bitcast, %6 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc6)
    cir.libc.memcpy %7 bytes from %9 to %8 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc5)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc5)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc5)
    cir.return %10 : !cir.ptr<!ty__twoIntsStruct> loc(#loc5)
  } loc(#loc5)
  cir.func @_ZN44CWE758_Undefined_Behavior__struct_new_use_123badEv() extra(#fn_attr2) {
    cir.scope {
      %0 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc15)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc123)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc126)
          %3 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc127)
          %4 = cir.const #cir.int<8> : !u64i loc(#loc128)
          %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc126)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc128)
          cir.call @_ZN14_twoIntsStructC2Ev(%6) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr1) loc(#loc23)
          cir.store %6, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc126)
          %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc25)
          cir.call @_ZN14_twoIntsStructC2ERKS_(%3, %7) : (!cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr1) loc(#loc27)
          %8 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc28)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc28)
          cir.call @_ZdlPv(%9) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc29)
          %10 = cir.get_member %3[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc6)
          %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc30)
          cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc31)
          %12 = cir.get_member %3[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
          %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc33)
          cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc34)
        } loc(#loc125)
      } else {
        cir.scope {
          %2 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc130)
          %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc131)
          %4 = cir.const #cir.int<1> : !s32i loc(#loc41)
          %5 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc6)
          cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc132)
          %6 = cir.const #cir.int<2> : !s32i loc(#loc43)
          %7 = cir.get_member %2[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
          cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc133)
          %8 = cir.const #cir.int<8> : !u64i loc(#loc134)
          %9 = cir.call @_Znwm(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc131)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc134)
          cir.call @_ZN14_twoIntsStructC2Ev(%10) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr1) loc(#loc40)
          cir.store %10, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc131)
          %11 = cir.load deref %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc46)
          %12 = cir.call @_ZN14_twoIntsStructaSERKS_(%11, %2) : (!cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!ty__twoIntsStruct>) -> !cir.ptr<!ty__twoIntsStruct> extra(#fn_attr1) loc(#loc47)
          cir.scope {
            %15 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc136)
            %16 = cir.load deref %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc51)
            cir.call @_ZN14_twoIntsStructC2ERKS_(%15, %16) : (!cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr1) loc(#loc52)
            %17 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc6)
            %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc53)
            cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc54)
            %19 = cir.get_member %15[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
            %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc55)
            cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc56)
          } loc(#loc135)
          %13 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc57)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc57)
          cir.call @_ZdlPv(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc29)
        } loc(#loc129)
      } loc(#loc124)
    } loc(#loc122)
    cir.return loc(#loc12)
  } loc(#loc121)
  cir.func internal private @_ZN44CWE758_Undefined_Behavior__struct_new_use_12L5good1Ev() extra(#fn_attr2) {
    cir.scope {
      %0 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc62)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc139)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc142)
          %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc143)
          %4 = cir.const #cir.int<1> : !s32i loc(#loc73)
          %5 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc6)
          cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc144)
          %6 = cir.const #cir.int<2> : !s32i loc(#loc75)
          %7 = cir.get_member %2[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
          cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc145)
          %8 = cir.const #cir.int<8> : !u64i loc(#loc146)
          %9 = cir.call @_Znwm(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc143)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc146)
          cir.call @_ZN14_twoIntsStructC2Ev(%10) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr1) loc(#loc72)
          cir.store %10, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc143)
          %11 = cir.load deref %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc78)
          %12 = cir.call @_ZN14_twoIntsStructaSERKS_(%11, %2) : (!cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!ty__twoIntsStruct>) -> !cir.ptr<!ty__twoIntsStruct> extra(#fn_attr1) loc(#loc79)
          cir.scope {
            %15 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc148)
            %16 = cir.load deref %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc83)
            cir.call @_ZN14_twoIntsStructC2ERKS_(%15, %16) : (!cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr1) loc(#loc84)
            %17 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc6)
            %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc85)
            cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc86)
            %19 = cir.get_member %15[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
            %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc87)
            cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc88)
          } loc(#loc147)
          %13 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc89)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc89)
          cir.call @_ZdlPv(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc90)
        } loc(#loc141)
      } else {
        cir.scope {
          %2 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc150)
          %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc151)
          %4 = cir.const #cir.int<1> : !s32i loc(#loc97)
          %5 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc6)
          cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc152)
          %6 = cir.const #cir.int<2> : !s32i loc(#loc99)
          %7 = cir.get_member %2[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
          cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc153)
          %8 = cir.const #cir.int<8> : !u64i loc(#loc154)
          %9 = cir.call @_Znwm(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc151)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc154)
          cir.call @_ZN14_twoIntsStructC2Ev(%10) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr1) loc(#loc96)
          cir.store %10, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc151)
          %11 = cir.load deref %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc102)
          %12 = cir.call @_ZN14_twoIntsStructaSERKS_(%11, %2) : (!cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!ty__twoIntsStruct>) -> !cir.ptr<!ty__twoIntsStruct> extra(#fn_attr1) loc(#loc103)
          cir.scope {
            %15 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc156)
            %16 = cir.load deref %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc107)
            cir.call @_ZN14_twoIntsStructC2ERKS_(%15, %16) : (!cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr1) loc(#loc108)
            %17 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc6)
            %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc109)
            cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc110)
            %19 = cir.get_member %15[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
            %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc111)
            cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc112)
          } loc(#loc155)
          %13 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc113)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc113)
          cir.call @_ZdlPv(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc90)
        } loc(#loc149)
      } loc(#loc140)
    } loc(#loc138)
    cir.return loc(#loc59)
  } loc(#loc137)
  cir.func @_ZN44CWE758_Undefined_Behavior__struct_new_use_124goodEv() extra(#fn_attr2) {
    cir.call @_ZN44CWE758_Undefined_Behavior__struct_new_use_12L5good1Ev() : () -> () loc(#loc116)
    cir.return loc(#loc115)
  } loc(#loc157)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_new_use_12.cpp":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc6 = loc("../../testcasesupport/std_testcase.h":98:9)
#loc7 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc8 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc11 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":23:1)
#loc12 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":51:1)
#loc13 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":25:5)
#loc14 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":50:5)
#loc15 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":25:8)
#loc16 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":25:33)
#loc17 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":26:5)
#loc18 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":34:5)
#loc19 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":36:5)
#loc20 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":27:9)
#loc21 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":33:9)
#loc22 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":28:13)
#loc23 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":28:43)
#loc24 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":29:13)
#loc25 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":29:35)
#loc26 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":28:39)
#loc27 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":29:34)
#loc28 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":30:20)
#loc29 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":23:6)
#loc30 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":31:31)
#loc31 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":31:13)
#loc32 = loc("../../testcasesupport/std_testcase.h":99:9)
#loc33 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":32:31)
#loc34 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":32:13)
#loc35 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":37:9)
#loc36 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":49:9)
#loc37 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":38:13)
#loc38 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":38:27)
#loc39 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":41:13)
#loc40 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":41:43)
#loc41 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":39:27)
#loc42 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":39:13)
#loc43 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":40:27)
#loc44 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":40:13)
#loc45 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":41:39)
#loc46 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":42:14)
#loc47 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":42:22)
#loc48 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":43:13)
#loc49 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":47:13)
#loc50 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":44:17)
#loc51 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":44:39)
#loc52 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":44:38)
#loc53 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":45:35)
#loc54 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":45:17)
#loc55 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":46:35)
#loc56 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":46:17)
#loc57 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":48:20)
#loc58 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":58:1)
#loc59 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":92:1)
#loc60 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":60:5)
#loc61 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":91:5)
#loc62 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":60:8)
#loc63 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":60:33)
#loc64 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":61:5)
#loc65 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":75:5)
#loc66 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":77:5)
#loc67 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":62:9)
#loc68 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":74:9)
#loc69 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":63:13)
#loc70 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":63:27)
#loc71 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":66:13)
#loc72 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":66:43)
#loc73 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":64:27)
#loc74 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":64:13)
#loc75 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":65:27)
#loc76 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":65:13)
#loc77 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":66:39)
#loc78 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":67:14)
#loc79 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":67:22)
#loc80 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":68:13)
#loc81 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":72:13)
#loc82 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":69:17)
#loc83 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":69:39)
#loc84 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":69:38)
#loc85 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":70:35)
#loc86 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":70:17)
#loc87 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":71:35)
#loc88 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":71:17)
#loc89 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":73:20)
#loc90 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":58:13)
#loc91 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":78:9)
#loc92 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":90:9)
#loc93 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":79:13)
#loc94 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":79:27)
#loc95 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":82:13)
#loc96 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":82:43)
#loc97 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":80:27)
#loc98 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":80:13)
#loc99 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":81:27)
#loc100 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":81:13)
#loc101 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":82:39)
#loc102 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":83:14)
#loc103 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":83:22)
#loc104 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":84:13)
#loc105 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":88:13)
#loc106 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":85:17)
#loc107 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":85:39)
#loc108 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":85:38)
#loc109 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":86:35)
#loc110 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":86:17)
#loc111 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":87:35)
#loc112 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":87:17)
#loc113 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":89:20)
#loc114 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":94:1)
#loc115 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":97:1)
#loc116 = loc("CWE758_Undefined_Behavior__struct_new_use_12.cpp":96:5)
#loc117 = loc(fused[#loc1, #loc2])
#loc118 = loc(fused[#loc3, #loc4])
#loc119 = loc(fused[#loc7, #loc8])
#loc120 = loc(fused[#loc9, #loc10])
#loc121 = loc(fused[#loc11, #loc12])
#loc122 = loc(fused[#loc13, #loc14])
#loc123 = loc(fused[#loc15, #loc16])
#loc124 = loc(fused[#loc17, #loc18, #loc19, #loc14])
#loc125 = loc(fused[#loc20, #loc21])
#loc126 = loc(fused[#loc22, #loc23])
#loc127 = loc(fused[#loc24, #loc25])
#loc128 = loc(fused[#loc26, #loc23])
#loc129 = loc(fused[#loc35, #loc36])
#loc130 = loc(fused[#loc37, #loc38])
#loc131 = loc(fused[#loc39, #loc40])
#loc132 = loc(fused[#loc42, #loc41])
#loc133 = loc(fused[#loc44, #loc43])
#loc134 = loc(fused[#loc45, #loc40])
#loc135 = loc(fused[#loc48, #loc49])
#loc136 = loc(fused[#loc50, #loc51])
#loc137 = loc(fused[#loc58, #loc59])
#loc138 = loc(fused[#loc60, #loc61])
#loc139 = loc(fused[#loc62, #loc63])
#loc140 = loc(fused[#loc64, #loc65, #loc66, #loc61])
#loc141 = loc(fused[#loc67, #loc68])
#loc142 = loc(fused[#loc69, #loc70])
#loc143 = loc(fused[#loc71, #loc72])
#loc144 = loc(fused[#loc74, #loc73])
#loc145 = loc(fused[#loc76, #loc75])
#loc146 = loc(fused[#loc77, #loc72])
#loc147 = loc(fused[#loc80, #loc81])
#loc148 = loc(fused[#loc82, #loc83])
#loc149 = loc(fused[#loc91, #loc92])
#loc150 = loc(fused[#loc93, #loc94])
#loc151 = loc(fused[#loc95, #loc96])
#loc152 = loc(fused[#loc98, #loc97])
#loc153 = loc(fused[#loc100, #loc99])
#loc154 = loc(fused[#loc101, #loc96])
#loc155 = loc(fused[#loc104, #loc105])
#loc156 = loc(fused[#loc106, #loc107])
#loc157 = loc(fused[#loc114, #loc115])
