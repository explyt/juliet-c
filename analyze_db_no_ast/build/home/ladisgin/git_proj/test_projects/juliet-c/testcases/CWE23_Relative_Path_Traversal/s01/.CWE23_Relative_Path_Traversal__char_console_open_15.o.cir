!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_open_15.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc181)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc182)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc183)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc184)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc10)
  cir.func private  @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc185)
  cir.func private  @close(!s32i) -> !s32i loc(#loc186)
  cir.func  @_ZN51CWE23_Relative_Path_Traversal__char_console_open_153badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc188)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc189)
    %2 = cir.const #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc189)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc189)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc21)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc190)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc25)
      cir.switch (%4 : !s32i) [
      case (equal, 6) {
        cir.scope {
          %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc193)
          %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc30)
          %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
          %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc30)
          cir.store %8, %5 : !u64i, !cir.ptr<!u64i> loc(#loc193)
          cir.scope {
            %9 = cir.const #cir.int<4096> : !s32i loc(#loc34)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc34)
            %11 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc35)
            %12 = cir.binop(sub, %10, %11) : !u64i loc(#loc195)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc36)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc36)
            %15 = cir.cmp(gt, %12, %14) : !u64i, !cir.bool loc(#loc196)
            cir.if %15 {
              cir.scope {
                %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
                %17 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc41)
                %18 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %17 : !u64i), !cir.ptr<!s8i> loc(#loc42)
                %19 = cir.const #cir.int<4096> : !s32i loc(#loc43)
                %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc43)
                %21 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc44)
                %22 = cir.binop(sub, %20, %21) : !u64i loc(#loc199)
                %23 = cir.cast(integral, %22 : !u64i), !s32i loc(#loc199)
                %24 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc183)
                %25 = cir.load %24 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc45)
                %26 = cir.call @fgets(%18, %23, %25) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc46)
                %27 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc47)
                %28 = cir.cmp(ne, %26, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc200)
                cir.if %28 {
                  %29 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc51)
                  %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
                  %31 = cir.call @strlen(%30) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc51)
                  cir.store %31, %5 : !u64i, !cir.ptr<!u64i> loc(#loc202)
                  cir.scope {
                    %32 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc57)
                    %33 = cir.const #cir.int<0> : !s32i loc(#loc58)
                    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc58)
                    %35 = cir.cmp(gt, %32, %34) : !u64i, !cir.bool loc(#loc204)
                    %36 = cir.ternary(%35, true {
                      %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
                      %38 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc61)
                      %39 = cir.const #cir.int<1> : !s32i loc(#loc62)
                      %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc62)
                      %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc205)
                      %42 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc63)
                      %43 = cir.load %42 : !cir.ptr<!s8i>, !s8i loc(#loc60)
                      %44 = cir.cast(integral, %43 : !s8i), !s32i loc(#loc60)
                      %45 = cir.const #cir.int<10> : !s8i loc(#loc64)
                      %46 = cir.cast(integral, %45 : !s8i), !s32i loc(#loc64)
                      %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc206)
                      %48 = cir.ternary(%47, true {
                        %49 = cir.const #true loc(#loc59)
                        cir.yield %49 : !cir.bool loc(#loc59)
                      }, false {
                        %49 = cir.const #false loc(#loc59)
                        cir.yield %49 : !cir.bool loc(#loc59)
                      }) : (!cir.bool) -> !cir.bool loc(#loc59)
                      cir.yield %48 : !cir.bool loc(#loc59)
                    }, false {
                      %37 = cir.const #false loc(#loc59)
                      cir.yield %37 : !cir.bool loc(#loc59)
                    }) : (!cir.bool) -> !cir.bool loc(#loc59)
                    cir.if %36 {
                      %37 = cir.const #cir.int<0> : !s8i loc(#loc66)
                      %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
                      %39 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc68)
                      %40 = cir.const #cir.int<1> : !s32i loc(#loc69)
                      %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc69)
                      %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc208)
                      %43 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc70)
                      cir.store %37, %43 : !s8i, !cir.ptr<!s8i> loc(#loc209)
                    } loc(#loc207)
                  } loc(#loc203)
                } else {
                  %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
                  %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
                  cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc71)
                  %31 = cir.const #cir.int<0> : !s8i loc(#loc72)
                  %32 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
                  %33 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc74)
                  %34 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %33 : !u64i), !cir.ptr<!s8i> loc(#loc75)
                  cir.store %31, %34 : !s8i, !cir.ptr<!s8i> loc(#loc210)
                } loc(#loc201)
              } loc(#loc198)
            } loc(#loc197)
          } loc(#loc194)
        } loc(#loc192)
        cir.break loc(#loc76)
      },
      case (default) {
        %5 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc10)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc10)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc77)
        cir.break loc(#loc78)
      }
      ] loc(#loc23)
    } loc(#loc191)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc212)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc84)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc85)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc213)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc86)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc87)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc214)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc88)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc215)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc93)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc94)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc95)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc217)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc97)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc98)
        } loc(#loc218)
      } loc(#loc216)
    } loc(#loc211)
    cir.return loc(#loc16)
  } loc(#loc187)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc219)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc101)
  cir.func internal private  @_ZN51CWE23_Relative_Path_Traversal__char_console_open_15L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc221)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc222)
    %2 = cir.const #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc222)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc222)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc108)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc223)
    cir.scope {
      %4 = cir.const #cir.int<5> : !s32i loc(#loc112)
      cir.switch (%4 : !s32i) [
      case (equal, 6) {
        %5 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc113)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc113)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc114)
        cir.break loc(#loc115)
      },
      case (default) {
        %5 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc116)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
        %7 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc101)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc101)
        %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc116)
        cir.break loc(#loc118)
      }
      ] loc(#loc110)
    } loc(#loc224)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc226)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc124)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc125)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc227)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc126)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc127)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc228)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc128)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc229)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc133)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc134)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc135)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc231)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc137)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc138)
        } loc(#loc232)
      } loc(#loc230)
    } loc(#loc225)
    cir.return loc(#loc103)
  } loc(#loc220)
  cir.func internal private  @_ZN51CWE23_Relative_Path_Traversal__char_console_open_15L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc234)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc235)
    %2 = cir.const #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc235)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc235)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc145)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc236)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc149)
      cir.switch (%4 : !s32i) [
      case (equal, 6) {
        %5 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc150)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
        %7 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc152)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc152)
        %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc150)
        cir.break loc(#loc153)
      },
      case (default) {
        %5 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc154)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc154)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc155)
        cir.break loc(#loc156)
      }
      ] loc(#loc147)
    } loc(#loc237)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc239)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc162)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc163)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc240)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc164)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc165)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc241)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc166)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc242)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc171)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc172)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc173)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc244)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc175)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc176)
        } loc(#loc245)
      } loc(#loc243)
    } loc(#loc238)
    cir.return loc(#loc140)
  } loc(#loc233)
  cir.func  @_ZN51CWE23_Relative_Path_Traversal__char_console_open_154goodEv() extra(#fn_attr1) {
    cir.call @_ZN51CWE23_Relative_Path_Traversal__char_console_open_15L8goodG2B1Ev() : () -> () loc(#loc179)
    cir.call @_ZN51CWE23_Relative_Path_Traversal__char_console_open_15L8goodG2B2Ev() : () -> () loc(#loc180)
    cir.return loc(#loc178)
  } loc(#loc246)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_open_15.cpp":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":67:27)
#loc10 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":76:19)
#loc11 = loc("/usr/include/fcntl.h":209:1)
#loc12 = loc("/usr/include/fcntl.h":209:56)
#loc13 = loc("/usr/include/unistd.h":358:1)
#loc14 = loc("/usr/include/unistd.h":358:27)
#loc15 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":40:1)
#loc16 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":88:1)
#loc17 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":42:5)
#loc18 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":42:12)
#loc19 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":43:5)
#loc20 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":43:37)
#loc21 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":44:12)
#loc22 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":44:5)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":45:5)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":78:5)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":45:12)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":48:5)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":72:5)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":50:9)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":50:37)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":50:26)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":50:33)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":52:9)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":71:9)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":52:13)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":52:26)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":52:36)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":53:9)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":55:13)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":70:13)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":55:23)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":55:28)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":55:27)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":55:43)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":55:56)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":55:66)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":55:17)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":55:76)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":56:13)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":64:13)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":66:13)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":59:27)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":59:34)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":59:17)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":59:38)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":60:17)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":63:17)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":60:21)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":60:31)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":60:33)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":60:36)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":60:41)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":60:49)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":60:50)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":60:55)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":61:17)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":62:39)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":62:21)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":62:26)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":62:34)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":62:35)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":67:17)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":69:33)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":69:17)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":69:22)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":69:29)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":73:5)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":76:9)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":77:9)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":79:5)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":87:5)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":80:9)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":80:13)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":82:25)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":82:31)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":82:38)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":82:47)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":82:55)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":82:20)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":82:9)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":82:63)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":83:9)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":86:9)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":83:13)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":83:26)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":83:25)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":84:9)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":85:19)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":85:13)
#loc99 = loc("/usr/include/string.h":149:1)
#loc100 = loc("/usr/include/string.h":150:14)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":108:22)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":95:1)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":120:1)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":97:5)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":97:12)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":98:5)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":98:37)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":99:12)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":99:5)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":100:5)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":110:5)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":100:12)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":104:19)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":104:9)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":105:9)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":108:9)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":108:16)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":109:9)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":111:5)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":119:5)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":112:9)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":112:13)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":114:25)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":114:31)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":114:38)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":114:47)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":114:55)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":114:20)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":114:9)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":114:63)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":115:9)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":118:9)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":115:13)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":115:26)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":115:25)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":116:9)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":117:19)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":117:13)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":123:1)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":148:1)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":125:5)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":125:12)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":126:5)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":126:37)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":127:12)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":127:5)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":128:5)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":138:5)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":128:12)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":132:9)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":132:16)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":132:22)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":133:9)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":136:19)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":136:9)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":137:9)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":139:5)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":147:5)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":140:9)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":140:13)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":142:25)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":142:31)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":142:38)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":142:47)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":142:55)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":142:20)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":142:9)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":142:63)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":143:9)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":146:9)
#loc171 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":143:13)
#loc172 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":143:26)
#loc173 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":143:25)
#loc174 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":144:9)
#loc175 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":145:19)
#loc176 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":145:13)
#loc177 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":150:1)
#loc178 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":154:1)
#loc179 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":152:5)
#loc180 = loc("CWE23_Relative_Path_Traversal__char_console_open_15.cpp":153:5)
#loc181 = loc(fused[#loc1, #loc2])
#loc182 = loc(fused[#loc3, #loc4])
#loc183 = loc(fused[#loc5, #loc6])
#loc184 = loc(fused[#loc7, #loc8])
#loc185 = loc(fused[#loc11, #loc12])
#loc186 = loc(fused[#loc13, #loc14])
#loc187 = loc(fused[#loc15, #loc16])
#loc188 = loc(fused[#loc17, #loc18])
#loc189 = loc(fused[#loc19, #loc20])
#loc190 = loc(fused[#loc22, #loc21])
#loc191 = loc(fused[#loc23, #loc24])
#loc192 = loc(fused[#loc26, #loc27])
#loc193 = loc(fused[#loc28, #loc29])
#loc194 = loc(fused[#loc32, #loc33])
#loc195 = loc(fused[#loc34, #loc35])
#loc196 = loc(fused[#loc34, #loc36])
#loc197 = loc(fused[#loc37, #loc33])
#loc198 = loc(fused[#loc38, #loc39])
#loc199 = loc(fused[#loc43, #loc44])
#loc200 = loc(fused[#loc46, #loc47])
#loc201 = loc(fused[#loc48, #loc49, #loc50, #loc39])
#loc202 = loc(fused[#loc53, #loc54])
#loc203 = loc(fused[#loc55, #loc56])
#loc204 = loc(fused[#loc57, #loc58])
#loc205 = loc(fused[#loc61, #loc62])
#loc206 = loc(fused[#loc60, #loc64])
#loc207 = loc(fused[#loc65, #loc56])
#loc208 = loc(fused[#loc68, #loc69])
#loc209 = loc(fused[#loc67, #loc66])
#loc210 = loc(fused[#loc73, #loc72])
#loc211 = loc(fused[#loc79, #loc80])
#loc212 = loc(fused[#loc81, #loc82])
#loc213 = loc(fused[#loc84, #loc85])
#loc214 = loc(fused[#loc86, #loc87])
#loc215 = loc(fused[#loc89, #loc90])
#loc216 = loc(fused[#loc91, #loc92])
#loc217 = loc(fused[#loc93, #loc94])
#loc218 = loc(fused[#loc96, #loc92])
#loc219 = loc(fused[#loc99, #loc100])
#loc220 = loc(fused[#loc102, #loc103])
#loc221 = loc(fused[#loc104, #loc105])
#loc222 = loc(fused[#loc106, #loc107])
#loc223 = loc(fused[#loc109, #loc108])
#loc224 = loc(fused[#loc110, #loc111])
#loc225 = loc(fused[#loc119, #loc120])
#loc226 = loc(fused[#loc121, #loc122])
#loc227 = loc(fused[#loc124, #loc125])
#loc228 = loc(fused[#loc126, #loc127])
#loc229 = loc(fused[#loc129, #loc130])
#loc230 = loc(fused[#loc131, #loc132])
#loc231 = loc(fused[#loc133, #loc134])
#loc232 = loc(fused[#loc136, #loc132])
#loc233 = loc(fused[#loc139, #loc140])
#loc234 = loc(fused[#loc141, #loc142])
#loc235 = loc(fused[#loc143, #loc144])
#loc236 = loc(fused[#loc146, #loc145])
#loc237 = loc(fused[#loc147, #loc148])
#loc238 = loc(fused[#loc157, #loc158])
#loc239 = loc(fused[#loc159, #loc160])
#loc240 = loc(fused[#loc162, #loc163])
#loc241 = loc(fused[#loc164, #loc165])
#loc242 = loc(fused[#loc167, #loc168])
#loc243 = loc(fused[#loc169, #loc170])
#loc244 = loc(fused[#loc171, #loc172])
#loc245 = loc(fused[#loc174, #loc170])
#loc246 = loc(fused[#loc177, #loc178])
