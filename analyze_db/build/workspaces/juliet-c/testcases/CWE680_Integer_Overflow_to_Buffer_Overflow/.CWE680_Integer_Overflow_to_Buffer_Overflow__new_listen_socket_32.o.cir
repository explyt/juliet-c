!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":99:48)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc259)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc260)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc261)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc262)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc263)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc264)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc265)
  cir.func private @close(!s32i) -> !s32i loc(#loc266)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc267)
  cir.func private @printIntLine(!s32i) loc(#loc268)
  cir.func @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_323badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc270)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc271)
    %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc272)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc273)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc274)
    %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc275)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc276)
    %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc277)
    %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc278)
    %9 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc279)
    %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc280)
    %11 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc281)
    %12 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc282)
    cir.store %10, %11 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc281)
    cir.store %10, %12 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc282)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc49)
    cir.store %14, %10 : !s32i, !cir.ptr<!s32i> loc(#loc283)
    cir.br ^bb1 loc(#loc284)
  ^bb1:  // pred: ^bb0
    %15 = cir.load deref %11 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc24)
    %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc53)
    cir.store %16, %0 : !s32i, !cir.ptr<!s32i> loc(#loc270)
    cir.br ^bb2 loc(#loc285)
  ^bb2:  // pred: ^bb1
    %17 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc30)
    cir.store %18, %3 : !s32i, !cir.ptr<!s32i> loc(#loc273)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc32)
    cir.store %20, %4 : !s32i, !cir.ptr<!s32i> loc(#loc274)
    cir.br ^bb3 loc(#loc286)
  ^bb3:  // pred: ^bb2
    cir.br ^bb5 loc(#loc286)
  ^bb4:  // pred: ^bb35
    %21 = cir.const #cir.int<0> : !s32i loc(#loc58)
    %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc58)
    cir.brcond %22 ^bb5, ^bb36 loc(#loc58)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc287)
  ^bb6:  // pred: ^bb5
    %23 = cir.const #cir.int<2> : !s32i loc(#loc61)
    %24 = cir.const #cir.int<1> : !u32i loc(#loc62)
    %25 = cir.cast(integral, %24 : !u32i), !s32i loc(#loc62)
    %26 = cir.const #cir.int<6> : !u32i loc(#loc63)
    %27 = cir.cast(integral, %26 : !u32i), !s32i loc(#loc63)
    %28 = cir.call @socket(%23, %25, %27) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc64)
    cir.store %28, %3 : !s32i, !cir.ptr<!s32i> loc(#loc288)
    cir.br ^bb7 loc(#loc289)
  ^bb7:  // pred: ^bb6
    %29 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc69)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc70)
    %31 = cir.unary(minus, %30) nsw : !s32i, !s32i loc(#loc70)
    %32 = cir.cmp(eq, %29, %31) : !s32i, !cir.bool loc(#loc290)
    cir.brcond %32 ^bb8, ^bb9 loc(#loc291)
  ^bb8:  // pred: ^bb7
    cir.br ^bb36 loc(#loc72)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc68)
  ^bb10:  // pred: ^bb9
    %33 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc292)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc75)
    %35 = cir.const #cir.int<16> : !u64i loc(#loc293)
    cir.libc.memset %35 bytes from %33 set to %34 : !cir.ptr<!void>, !s32i, !u64i loc(#loc294)
    %36 = cir.const #cir.int<2> : !s32i loc(#loc80)
    %37 = cir.cast(integral, %36 : !s32i), !u16i loc(#loc80)
    %38 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
    cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc295)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc83)
    %40 = cir.cast(integral, %39 : !s32i), !u32i loc(#loc83)
    %41 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc84)
    %42 = cir.get_member %41[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc85)
    cir.store %40, %42 : !u32i, !cir.ptr<!u32i> loc(#loc296)
    %43 = cir.const #cir.int<27015> : !s32i loc(#loc87)
    %44 = cir.cast(integral, %43 : !s32i), !u16i loc(#loc87)
    %45 = cir.call @htons(%44) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc88)
    %46 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc89)
    cir.store %45, %46 : !u16i, !cir.ptr<!u16i> loc(#loc297)
    cir.br ^bb11 loc(#loc298)
  ^bb11:  // pred: ^bb10
    %47 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    %48 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc299)
    %49 = cir.const #cir.int<16> : !u64i loc(#loc300)
    %50 = cir.cast(integral, %49 : !u64i), !u32i loc(#loc300)
    %51 = cir.call @bind(%47, %48, %50) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc99)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %53 = cir.unary(minus, %52) nsw : !s32i, !s32i loc(#loc100)
    %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc301)
    cir.brcond %54 ^bb12, ^bb13 loc(#loc302)
  ^bb12:  // pred: ^bb11
    cir.br ^bb36 loc(#loc102)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc93)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc303)
  ^bb15:  // pred: ^bb14
    %55 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    %56 = cir.const #cir.int<5> : !s32i loc(#loc106)
    %57 = cir.call @listen(%55, %56) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc107)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc108)
    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc304)
    cir.brcond %60 ^bb16, ^bb17 loc(#loc305)
  ^bb16:  // pred: ^bb15
    cir.br ^bb36 loc(#loc110)
  ^bb17:  // pred: ^bb15
    cir.br ^bb18 loc(#loc104)
  ^bb18:  // pred: ^bb17
    %61 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    %62 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc112)
    %63 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc113)
    %64 = cir.call @accept(%61, %62, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc114)
    cir.store %64, %4 : !s32i, !cir.ptr<!s32i> loc(#loc306)
    cir.br ^bb19 loc(#loc307)
  ^bb19:  // pred: ^bb18
    %65 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    %66 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %67 = cir.unary(minus, %66) nsw : !s32i, !s32i loc(#loc120)
    %68 = cir.cmp(eq, %65, %67) : !s32i, !cir.bool loc(#loc308)
    cir.brcond %68 ^bb20, ^bb21 loc(#loc309)
  ^bb20:  // pred: ^bb19
    cir.br ^bb36 loc(#loc122)
  ^bb21:  // pred: ^bb19
    cir.br ^bb22 loc(#loc118)
  ^bb22:  // pred: ^bb21
    %69 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    %70 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc124)
    %71 = cir.cast(bitcast, %70 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc124)
    %72 = cir.const #cir.int<3> : !s32i loc(#loc125)
    %73 = cir.cast(integral, %72 : !s32i), !u64i loc(#loc125)
    %74 = cir.const #cir.int<4> : !u64i loc(#loc125)
    %75 = cir.binop(mul, %73, %74) : !u64i loc(#loc125)
    %76 = cir.const #cir.int<2> : !s32i loc(#loc125)
    %77 = cir.cast(integral, %76 : !s32i), !u64i loc(#loc125)
    %78 = cir.binop(add, %75, %77) : !u64i loc(#loc125)
    %79 = cir.const #cir.int<1> : !s32i loc(#loc126)
    %80 = cir.cast(integral, %79 : !s32i), !u64i loc(#loc126)
    %81 = cir.binop(sub, %78, %80) : !u64i loc(#loc310)
    %82 = cir.const #cir.int<0> : !s32i loc(#loc127)
    %83 = cir.call @recv(%69, %71, %81, %82) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc128)
    %84 = cir.cast(integral, %83 : !s64i), !s32i loc(#loc128)
    cir.store %84, %1 : !s32i, !cir.ptr<!s32i> loc(#loc311)
    cir.br ^bb23 loc(#loc312)
  ^bb23:  // pred: ^bb22
    %85 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    %86 = cir.const #cir.int<1> : !s32i loc(#loc134)
    %87 = cir.unary(minus, %86) nsw : !s32i, !s32i loc(#loc134)
    %88 = cir.cmp(eq, %85, %87) : !s32i, !cir.bool loc(#loc313)
    cir.brcond %88 ^bb24, ^bb25 loc(#loc135)
  ^bb24:  // pred: ^bb23
    %89 = cir.const #true loc(#loc135)
    cir.br ^bb30(%89 : !cir.bool) loc(#loc135)
  ^bb25:  // pred: ^bb23
    %90 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc136)
    %91 = cir.const #cir.int<0> : !s32i loc(#loc137)
    %92 = cir.cmp(eq, %90, %91) : !s32i, !cir.bool loc(#loc314)
    cir.brcond %92 ^bb26, ^bb27 loc(#loc135)
  ^bb26:  // pred: ^bb25
    %93 = cir.const #true loc(#loc135)
    cir.br ^bb28(%93 : !cir.bool) loc(#loc135)
  ^bb27:  // pred: ^bb25
    %94 = cir.const #false loc(#loc135)
    cir.br ^bb28(%94 : !cir.bool) loc(#loc135)
  ^bb28(%95: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":99:48)):  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc135)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30(%95 : !cir.bool) loc(#loc135)
  ^bb30(%96: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":99:48)):  // 2 preds: ^bb24, ^bb29
    cir.br ^bb31 loc(#loc135)
  ^bb31:  // pred: ^bb30
    cir.brcond %96 ^bb32, ^bb33 loc(#loc315)
  ^bb32:  // pred: ^bb31
    cir.br ^bb36 loc(#loc139)
  ^bb33:  // pred: ^bb31
    cir.br ^bb34 loc(#loc132)
  ^bb34:  // pred: ^bb33
    %97 = cir.const #cir.int<0> : !s8i loc(#loc140)
    %98 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc141)
    %99 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc142)
    %100 = cir.ptr_stride(%99 : !cir.ptr<!s8i>, %98 : !s32i), !cir.ptr<!s8i> loc(#loc142)
    cir.store %97, %100 : !s8i, !cir.ptr<!s8i> loc(#loc316)
    %101 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc143)
    %102 = cir.call @atoi(%101) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc144)
    cir.store %102, %0 : !s32i, !cir.ptr<!s32i> loc(#loc317)
    cir.br ^bb35 loc(#loc60)
  ^bb35:  // pred: ^bb34
    cir.br ^bb4 loc(#loc57)
  ^bb36:  // 6 preds: ^bb4, ^bb8, ^bb12, ^bb16, ^bb20, ^bb32
    cir.br ^bb37 loc(#loc57)
  ^bb37:  // pred: ^bb36
    cir.br ^bb38 loc(#loc318)
  ^bb38:  // pred: ^bb37
    %103 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    %104 = cir.const #cir.int<1> : !s32i loc(#loc150)
    %105 = cir.unary(minus, %104) nsw : !s32i, !s32i loc(#loc150)
    %106 = cir.cmp(ne, %103, %105) : !s32i, !cir.bool loc(#loc319)
    cir.brcond %106 ^bb39, ^bb40 loc(#loc320)
  ^bb39:  // pred: ^bb38
    %107 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    %108 = cir.call @close(%107) : (!s32i) -> !s32i loc(#loc153)
    cir.br ^bb40 loc(#loc148)
  ^bb40:  // 2 preds: ^bb38, ^bb39
    cir.br ^bb41 loc(#loc148)
  ^bb41:  // pred: ^bb40
    cir.br ^bb42 loc(#loc321)
  ^bb42:  // pred: ^bb41
    %109 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    %110 = cir.const #cir.int<1> : !s32i loc(#loc157)
    %111 = cir.unary(minus, %110) nsw : !s32i, !s32i loc(#loc157)
    %112 = cir.cmp(ne, %109, %111) : !s32i, !cir.bool loc(#loc322)
    cir.brcond %112 ^bb43, ^bb44 loc(#loc323)
  ^bb43:  // pred: ^bb42
    %113 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    %114 = cir.call @close(%113) : (!s32i) -> !s32i loc(#loc160)
    cir.br ^bb44 loc(#loc155)
  ^bb44:  // 2 preds: ^bb42, ^bb43
    cir.br ^bb45 loc(#loc155)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc55)
  ^bb46:  // pred: ^bb45
    %115 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc161)
    %116 = cir.load deref %11 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc162)
    cir.store %115, %116 : !s32i, !cir.ptr<!s32i> loc(#loc324)
    cir.br ^bb47 loc(#loc52)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc325)
  ^bb48:  // pred: ^bb47
    %117 = cir.load deref %12 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc36)
    %118 = cir.load %117 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    cir.store %118, %6 : !s32i, !cir.ptr<!s32i> loc(#loc276)
    cir.br ^bb49 loc(#loc326)
  ^bb49:  // pred: ^bb48
    %119 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc169)
    %120 = cir.cast(integral, %119 : !s32i), !u64i loc(#loc169)
    %121 = cir.const #cir.int<4> : !u64i loc(#loc327)
    %122 = cir.binop(mul, %120, %121) : !u64i loc(#loc328)
    cir.store %122, %7 : !u64i, !cir.ptr<!u64i> loc(#loc329)
    %123 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc173)
    %124 = cir.call @_Znam(%123) : (!u64i) -> !cir.ptr<!void> loc(#loc174)
    %125 = cir.cast(bitcast, %124 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc330)
    %126 = cir.cast(bitcast, %125 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc330)
    cir.store %126, %9 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc331)
    cir.br ^bb50 loc(#loc332)
  ^bb50:  // pred: ^bb49
    %127 = cir.const #cir.int<0> : !s32i loc(#loc180)
    %128 = cir.cast(integral, %127 : !s32i), !u64i loc(#loc180)
    cir.store %128, %8 : !u64i, !cir.ptr<!u64i> loc(#loc333)
    cir.br ^bb51 loc(#loc332)
  ^bb51:  // 2 preds: ^bb50, ^bb55
    %129 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc182)
    %130 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc183)
    %131 = cir.cast(integral, %130 : !s32i), !u64i loc(#loc183)
    %132 = cir.cmp(lt, %129, %131) : !u64i, !cir.bool loc(#loc334)
    cir.brcond %132 ^bb52, ^bb56 loc(#loc334)
  ^bb52:  // pred: ^bb51
    cir.br ^bb53 loc(#loc335)
  ^bb53:  // pred: ^bb52
    %133 = cir.const #cir.int<0> : !s32i loc(#loc185)
    %134 = cir.load %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc186)
    %135 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc187)
    %136 = cir.ptr_stride(%134 : !cir.ptr<!s32i>, %135 : !u64i), !cir.ptr<!s32i> loc(#loc188)
    cir.store %133, %136 : !s32i, !cir.ptr<!s32i> loc(#loc336)
    cir.br ^bb54 loc(#loc179)
  ^bb54:  // pred: ^bb53
    cir.br ^bb55 loc(#loc179)
  ^bb55:  // pred: ^bb54
    %137 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc189)
    %138 = cir.unary(inc, %137) : !u64i, !u64i loc(#loc190)
    cir.store %138, %8 : !u64i, !cir.ptr<!u64i> loc(#loc337)
    cir.br ^bb51 loc(#loc332)
  ^bb56:  // pred: ^bb51
    cir.br ^bb57 loc(#loc179)
  ^bb57:  // pred: ^bb56
    %139 = cir.load %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc191)
    %140 = cir.const #cir.int<0> : !s32i loc(#loc192)
    %141 = cir.ptr_stride(%139 : !cir.ptr<!s32i>, %140 : !s32i), !cir.ptr<!s32i> loc(#loc193)
    %142 = cir.load %141 : !cir.ptr<!s32i>, !s32i loc(#loc191)
    cir.call @printIntLine(%142) : (!s32i) -> () loc(#loc194)
    %143 = cir.load %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc195)
    cir.delete.array %143 : <!s32i> loc(#loc195)
    cir.br ^bb58 loc(#loc168)
  ^bb58:  // pred: ^bb57
    cir.br ^bb59 loc(#loc165)
  ^bb59:  // pred: ^bb58
    cir.return loc(#loc22)
  } loc(#loc269)
  cir.func internal private @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc339)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc340)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc341)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc342)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc343)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc344)
    %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc345)
    %7 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc346)
    cir.store %5, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc345)
    cir.store %5, %7 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc346)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc213)
    %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc214)
    cir.store %9, %5 : !s32i, !cir.ptr<!s32i> loc(#loc347)
    cir.br ^bb1 loc(#loc348)
  ^bb1:  // pred: ^bb0
    %10 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc199)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc218)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc339)
    %12 = cir.const #cir.int<20> : !s32i loc(#loc219)
    cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc349)
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc221)
    %14 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc222)
    cir.store %13, %14 : !s32i, !cir.ptr<!s32i> loc(#loc350)
    cir.br ^bb2 loc(#loc217)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc351)
  ^bb3:  // pred: ^bb2
    %15 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc201)
    %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc226)
    cir.store %16, %1 : !s32i, !cir.ptr<!s32i> loc(#loc340)
    cir.br ^bb4 loc(#loc352)
  ^bb4:  // pred: ^bb3
    %17 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc229)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc229)
    %19 = cir.const #cir.int<4> : !u64i loc(#loc353)
    %20 = cir.binop(mul, %18, %19) : !u64i loc(#loc354)
    cir.store %20, %2 : !u64i, !cir.ptr<!u64i> loc(#loc355)
    %21 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc233)
    %22 = cir.call @_Znam(%21) : (!u64i) -> !cir.ptr<!void> loc(#loc234)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc356)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc356)
    cir.store %24, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc357)
    cir.br ^bb5 loc(#loc358)
  ^bb5:  // pred: ^bb4
    %25 = cir.const #cir.int<0> : !s32i loc(#loc240)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc240)
    cir.store %26, %3 : !u64i, !cir.ptr<!u64i> loc(#loc359)
    cir.br ^bb6 loc(#loc358)
  ^bb6:  // 2 preds: ^bb5, ^bb10
    %27 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc242)
    %28 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc243)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc243)
    %30 = cir.cmp(lt, %27, %29) : !u64i, !cir.bool loc(#loc360)
    cir.brcond %30 ^bb7, ^bb11 loc(#loc360)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc361)
  ^bb8:  // pred: ^bb7
    %31 = cir.const #cir.int<0> : !s32i loc(#loc245)
    %32 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc246)
    %33 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc247)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!s32i>, %33 : !u64i), !cir.ptr<!s32i> loc(#loc248)
    cir.store %31, %34 : !s32i, !cir.ptr<!s32i> loc(#loc362)
    cir.br ^bb9 loc(#loc239)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc239)
  ^bb10:  // pred: ^bb9
    %35 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc249)
    %36 = cir.unary(inc, %35) : !u64i, !u64i loc(#loc250)
    cir.store %36, %3 : !u64i, !cir.ptr<!u64i> loc(#loc363)
    cir.br ^bb6 loc(#loc358)
  ^bb11:  // pred: ^bb6
    cir.br ^bb12 loc(#loc239)
  ^bb12:  // pred: ^bb11
    %37 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc251)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc252)
    %39 = cir.ptr_stride(%37 : !cir.ptr<!s32i>, %38 : !s32i), !cir.ptr<!s32i> loc(#loc253)
    %40 = cir.load %39 : !cir.ptr<!s32i>, !s32i loc(#loc251)
    cir.call @printIntLine(%40) : (!s32i) -> () loc(#loc254)
    %41 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc255)
    cir.delete.array %41 : <!s32i> loc(#loc255)
    cir.br ^bb13 loc(#loc228)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc225)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc197)
  } loc(#loc338)
  cir.func @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_324goodEv() extra(#fn_attr1) {
    cir.call @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32L7goodG2BEv() : () -> () loc(#loc258)
    cir.return loc(#loc257)
  } loc(#loc364)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc18 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc19 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc20 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":46:1)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":142:1)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":54:9)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":54:21)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":60:13)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":60:17)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":61:13)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":61:32)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":62:13)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":62:35)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":63:13)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":63:35)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":64:13)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":64:45)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":127:9)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":127:21)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":129:13)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":129:20)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":129:30)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":130:13)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":130:18)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":48:5)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":48:9)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":49:5)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":49:22)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":50:5)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":50:22)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":52:13)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":52:12)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":52:5)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":53:5)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":125:5)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":54:20)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":55:9)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":123:9)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":65:13)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":108:21)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":108:20)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":66:13)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":107:13)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":75:39)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":75:48)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":75:61)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":75:32)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":75:17)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":75:72)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":76:17)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":79:17)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":76:21)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":76:37)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":77:17)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":78:21)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":80:24)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":80:25)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":80:34)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":80:37)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":80:51)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":80:17)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":80:52)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":81:38)
#loc81 = loc("/usr/include/netinet/in.h":249:5)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":81:17)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":82:43)
#loc84 = loc("/usr/include/netinet/in.h":251:20)
#loc85 = loc("/usr/include/netinet/in.h":33:15)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":82:17)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":83:42)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":83:36)
#loc89 = loc("/usr/include/netinet/in.h":250:15)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":83:17)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":83:50)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":84:17)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":87:17)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":84:26)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":84:58)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":84:59)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":84:68)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":84:82)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":84:21)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":84:88)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":85:17)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":86:21)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":88:17)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":91:17)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":88:28)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":88:42)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":88:21)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":88:61)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":89:17)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":90:21)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":92:39)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":92:53)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":92:59)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":92:32)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":92:17)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":92:63)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":93:17)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":96:17)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":93:21)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":93:37)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":94:17)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":95:21)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":98:35)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":98:49)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":98:62)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":98:80)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":98:83)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":98:30)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":98:17)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":98:84)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":99:17)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":102:17)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":99:21)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":99:35)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":99:51)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":99:65)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":100:17)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":101:21)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":104:43)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":104:29)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":104:17)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":106:29)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":106:24)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":106:17)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":106:40)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":109:13)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":112:13)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":109:17)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":109:33)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":110:13)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":111:30)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":111:17)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":113:13)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":116:13)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":113:17)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":113:33)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":114:13)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":115:30)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":115:17)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":124:21)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":124:10)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":124:9)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":126:5)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":141:5)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":127:20)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":128:9)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":140:9)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":132:25)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":132:32)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":132:42)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":132:13)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":133:41)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":46:6)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":133:32)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":133:50)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":133:13)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":134:13)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":137:13)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":134:22)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":134:18)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":134:25)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":134:37)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":135:13)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":136:33)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":136:17)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":136:28)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":136:29)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":134:44)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":134:43)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":138:26)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":138:37)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":138:38)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":138:13)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":139:23)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":149:1)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":178:1)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":157:9)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":157:21)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":163:9)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":163:21)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":165:13)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":165:20)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":165:30)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":166:13)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":166:18)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":151:5)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":151:9)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":152:5)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":152:22)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":153:5)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":153:22)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":155:13)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":155:12)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":155:5)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":156:5)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":161:5)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":157:20)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":159:16)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":159:9)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":160:21)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":160:10)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":160:9)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":162:5)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":177:5)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":163:20)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":164:9)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":176:9)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":168:25)
#loc230 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":168:32)
#loc231 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":168:42)
#loc232 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":168:13)
#loc233 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":169:41)
#loc234 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":149:13)
#loc235 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":169:32)
#loc236 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":169:50)
#loc237 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":169:13)
#loc238 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":170:13)
#loc239 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":173:13)
#loc240 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":170:22)
#loc241 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":170:18)
#loc242 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":170:25)
#loc243 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":170:37)
#loc244 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":171:13)
#loc245 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":172:33)
#loc246 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":172:17)
#loc247 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":172:28)
#loc248 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":172:29)
#loc249 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":170:44)
#loc250 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":170:43)
#loc251 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":174:26)
#loc252 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":174:37)
#loc253 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":174:38)
#loc254 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":174:13)
#loc255 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":175:23)
#loc256 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":180:1)
#loc257 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":183:1)
#loc258 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_32.cpp":182:5)
#loc259 = loc(fused[#loc1, #loc2])
#loc260 = loc(fused[#loc3, #loc4])
#loc261 = loc(fused[#loc5, #loc6])
#loc262 = loc(fused[#loc7, #loc8])
#loc263 = loc(fused[#loc9, #loc10])
#loc264 = loc(fused[#loc11, #loc12])
#loc265 = loc(fused[#loc13, #loc14])
#loc266 = loc(fused[#loc15, #loc16])
#loc267 = loc(fused[#loc17, #loc18])
#loc268 = loc(fused[#loc19, #loc20])
#loc269 = loc(fused[#loc21, #loc22])
#loc270 = loc(fused[#loc23, #loc24])
#loc271 = loc(fused[#loc25, #loc26])
#loc272 = loc(fused[#loc27, #loc28])
#loc273 = loc(fused[#loc29, #loc30])
#loc274 = loc(fused[#loc31, #loc32])
#loc275 = loc(fused[#loc33, #loc34])
#loc276 = loc(fused[#loc35, #loc36])
#loc277 = loc(fused[#loc37, #loc38])
#loc278 = loc(fused[#loc37, #loc39])
#loc279 = loc(fused[#loc40, #loc41])
#loc280 = loc(fused[#loc42, #loc43])
#loc281 = loc(fused[#loc44, #loc45])
#loc282 = loc(fused[#loc46, #loc47])
#loc283 = loc(fused[#loc50, #loc48])
#loc284 = loc(fused[#loc51, #loc52])
#loc285 = loc(fused[#loc54, #loc55])
#loc286 = loc(fused[#loc56, #loc57])
#loc287 = loc(fused[#loc59, #loc60])
#loc288 = loc(fused[#loc65, #loc66])
#loc289 = loc(fused[#loc67, #loc68])
#loc290 = loc(fused[#loc69, #loc70])
#loc291 = loc(fused[#loc71, #loc68])
#loc292 = loc(fused[#loc73, #loc74])
#loc293 = loc(fused[#loc76, #loc77])
#loc294 = loc(fused[#loc78, #loc79])
#loc295 = loc(fused[#loc82, #loc80])
#loc296 = loc(fused[#loc86, #loc83])
#loc297 = loc(fused[#loc90, #loc91])
#loc298 = loc(fused[#loc92, #loc93])
#loc299 = loc(fused[#loc95, #loc96])
#loc300 = loc(fused[#loc97, #loc98])
#loc301 = loc(fused[#loc99, #loc100])
#loc302 = loc(fused[#loc101, #loc93])
#loc303 = loc(fused[#loc103, #loc104])
#loc304 = loc(fused[#loc107, #loc108])
#loc305 = loc(fused[#loc109, #loc104])
#loc306 = loc(fused[#loc115, #loc116])
#loc307 = loc(fused[#loc117, #loc118])
#loc308 = loc(fused[#loc119, #loc120])
#loc309 = loc(fused[#loc121, #loc118])
#loc310 = loc(fused[#loc125, #loc126])
#loc311 = loc(fused[#loc129, #loc130])
#loc312 = loc(fused[#loc131, #loc132])
#loc313 = loc(fused[#loc133, #loc134])
#loc314 = loc(fused[#loc136, #loc137])
#loc315 = loc(fused[#loc138, #loc132])
#loc316 = loc(fused[#loc142, #loc140])
#loc317 = loc(fused[#loc145, #loc146])
#loc318 = loc(fused[#loc147, #loc148])
#loc319 = loc(fused[#loc149, #loc150])
#loc320 = loc(fused[#loc151, #loc148])
#loc321 = loc(fused[#loc154, #loc155])
#loc322 = loc(fused[#loc156, #loc157])
#loc323 = loc(fused[#loc158, #loc155])
#loc324 = loc(fused[#loc163, #loc161])
#loc325 = loc(fused[#loc164, #loc165])
#loc326 = loc(fused[#loc167, #loc168])
#loc327 = loc(fused[#loc170, #loc171])
#loc328 = loc(fused[#loc169, #loc171])
#loc329 = loc(fused[#loc172, #loc171])
#loc330 = loc(fused[#loc175, #loc176])
#loc331 = loc(fused[#loc177, #loc176])
#loc332 = loc(fused[#loc178, #loc179])
#loc333 = loc(fused[#loc181, #loc180])
#loc334 = loc(fused[#loc182, #loc183])
#loc335 = loc(fused[#loc184, #loc179])
#loc336 = loc(fused[#loc186, #loc185])
#loc337 = loc(fused[#loc190, #loc189])
#loc338 = loc(fused[#loc196, #loc197])
#loc339 = loc(fused[#loc198, #loc199])
#loc340 = loc(fused[#loc200, #loc201])
#loc341 = loc(fused[#loc202, #loc203])
#loc342 = loc(fused[#loc202, #loc204])
#loc343 = loc(fused[#loc205, #loc206])
#loc344 = loc(fused[#loc207, #loc208])
#loc345 = loc(fused[#loc209, #loc210])
#loc346 = loc(fused[#loc211, #loc212])
#loc347 = loc(fused[#loc215, #loc213])
#loc348 = loc(fused[#loc216, #loc217])
#loc349 = loc(fused[#loc220, #loc219])
#loc350 = loc(fused[#loc223, #loc221])
#loc351 = loc(fused[#loc224, #loc225])
#loc352 = loc(fused[#loc227, #loc228])
#loc353 = loc(fused[#loc230, #loc231])
#loc354 = loc(fused[#loc229, #loc231])
#loc355 = loc(fused[#loc232, #loc231])
#loc356 = loc(fused[#loc235, #loc236])
#loc357 = loc(fused[#loc237, #loc236])
#loc358 = loc(fused[#loc238, #loc239])
#loc359 = loc(fused[#loc241, #loc240])
#loc360 = loc(fused[#loc242, #loc243])
#loc361 = loc(fused[#loc244, #loc239])
#loc362 = loc(fused[#loc246, #loc245])
#loc363 = loc(fused[#loc250, #loc249])
#loc364 = loc(fused[#loc256, #loc257])
