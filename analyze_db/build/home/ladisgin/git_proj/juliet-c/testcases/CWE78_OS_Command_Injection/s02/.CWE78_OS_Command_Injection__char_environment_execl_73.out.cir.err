clang: warning: argument unused during compilation: '-c' [-Wunused-command-line-argument]
NYI
UNREACHABLE executed at /home/ladisgin/git_proj/clangir/clang/lib/CIR/CodeGen/CIRGenExprScalar.cpp:214!
PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace, preprocessed source, and associated run script.
Stack dump:
0.	Program arguments: /home/ladisgin/git_proj/clangir/build/bin/clang -S -Xclang -emit-cir -std=c++11 -I ../../../testcasesupport -DINCLUDEMAIN -c CWE78_OS_Command_Injection__char_environment_execl_73b.cpp -o /home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/.CWE78_OS_Command_Injection__char_environment_execl_73.out.cir
1.	<eof> parser at end of file
2.	CWE78_OS_Command_Injection__char_environment_execl_73b.cpp:46:11: LLVM IR generation of declaration 'CWE78_OS_Command_Injection__char_environment_execl_73'
Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOL0  clang     0x0000000001aaf0  clang     0x0000000001aaf03b llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 43
1  clang     0x0000000001aac584 llvm::sys::CleanupOnSignal(unsigned long) + 132
2  clang     0x00000000019f5e10
3  libc.so.6 0x00007f7e96b10dd0
4  libc.so.6 0x00007f7e96b69c94
5  libc.so.6 0x00007f7e96b10d1e gsignal + 30
6  libc.so.6 0x00007f7e96af8942 abort + 223
7  clang     0x0000000001a0165a
8  clang     0x000000000328e628
9  clang     0x000000000328f1ae clang::CIRGen::CIRGenFunction::emitScalarExpr(clang::Expr const*) + 62
10 clang     0x000000000323cbb7 clang::CIRGen::CIRGenFunction::emitAnyExpr(clang::Expr const*, clang::CIRGen::AggValueSlot, bool) + 87
11 clang     0x000000000320a908 clang::CIRGen::CIRGenFunction::emitAnyExprToTemp(clang::Expr const*) + 152
12 clang     0x000000000320ac8e clang::CIRGen::CIRGenFunction::emitCallArg(clang::CIRGen::CallArgList&, clang::Expr const*, clang::QualType) + 574
13 clang     0x000000000320b578 clang::CIRGen::CIRGenFunction::emitCallArgs(clang::CIRGen::CallArgList&, clang::CIRGen::CIRGenFunction::PrototypeWrapper, llvm::iterator_range<clang::Stmt::CastIterator<clang::Expr, clang::Expr const* 16 clang     0x00000000032c296f clang::CIRGen::CIRGenFunction::emitCompoundStmtWithoutScope(clang::CompoundStmt const&, bool, clang::CIRGen::AggValueS14 clang   17 clang     0x00000000032a08eb clang::CIRGen::CIRGenFunction::emitFunctionBody(clang::Stmt const*) + 171
18 clang     0x00000000032a6217 clang::CIRGen::CIRGenFunction::generateCode(clang::GlobalDecl, cir::FuncOp, clang::CIRGen::CIRGenFunctionInfo const&) + 1975
19 clang     0x00000000031e3f38 clang::CIRGen::CIRGenModule::emitGlobalFunctionDefinition(clang:17 clang     0x000000000328f1ae clang20 clang     0x00000000031e4555 clang::CIRGen::CIRGenModule::emitG18 clang     0x000000000323cbb7 clang::CIRGen::CIRGenFuncti21 clang     0x00000000031e4ddb clang::CIRGen::CIRGenModule::emitDeferred(un19 clang     0x00022 clang     0x00000000031e4d53 clang::CIRGen::CIRGenModule::emitDeferred(unsigned int)20 clan23 clang     0x00000000031e4d53 clang::CIRGen::CIRGenModule::emitDeferred(unsigned int) + 195
24 clang     0x00000000031e4d53 clang::CIRGen::CIRGenModule::emitDeferred(unsigned int) + 195
25 clang     0x00000000031e4d53 clang::CIRGen::CIRGenModule::emitDeferred(unsigned int) + 195
26 clang     0x00000000031e4d53 clang::CIRGen::CIRGenModule::emitDeferred(unsigned int) + 195
27 clang     0x00000000031e4f28 clang::CIRGen::CIRGenModule::Release() + 24
28 clang     0x000000000309d36e
29 clang     0x00000000053c0c1c clang::ParseAST(clang::Sema&, bool, bool) + 1212
30 clang     0x0000000002741cd9 clang::FrontendAction::Execute() + 169
31 clang     0x00000000026bdf7e clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) + 1886
32 clang     0x00000000028273ee clang::ExecuteCompilerInvocation(clang::CompilerInstance*) + 1742
33 clang     0x0000000000522f6b cc1_main(llvm::ArrayRef<char const*>, char const*, void*) + 6299
34 clang     0x0000000000519f00
35 clang     0x00000000024813a9
36 clang     0x00000000019f6272 llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) + 146
37 clang     0x000000000248376e
38 clang     0x000000000244139b clang::driver::Compilation::ExecuteCommand(clang::driver::Command const&, clang::driver::Command const*&, bool) const + 155
39 clang     0x000000000244245e clang::driver::Compilation::ExecuteJobs(clang::driver::JobList const&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&, bool) const + 222
40 clang     0x000000000244e554 clang::driver::Driver::Ex36 clang     0x00000000024813a9
37 clang     0x00000000019f6272 llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) + 146
38 clang     0x000000000248376e
39 clang     0x000000000244139b clang::driver::Compilation::ExecuteCommand(clang::driver::Command const&, clang::driver::Command const*&, bool) const + 155
40 clang     0x000000000244245e clang::driver::Compilation::ExecuteJobs(clang::driver::JobList const&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&, bool) const + 222
41 clang     0x000000000244e554 clang::driver::Driver::ExecuteCompilation(clang::driver::Compilation&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&) + 356
42 clang     clang: error: unable to execute command: Aborted (core dumped)
clang: note: diagnostic msg: Error generating preprocessed source(s).
00007f7e96afa248
45 libc.so.6 0x00007f7e96afa30b __libc_start_main + 139
46 clang     0x0000000000519525 _start + 37
clang: error: clang frontend command failed with exit code 134 (use -v to see invocation)
clang version 20.0.0git (git@github.com:llvm/clangir.git 888f00c5bd78e8355c9f7288c1a3237884a04dbc)
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /home/ladisgin/git_proj/clangir/build/bin
Build config: +assertions
clang: error: unable to execute command: Aborted (core dumped)
clang: note: diagnostic msg: Error generating preprocessed source(s).
