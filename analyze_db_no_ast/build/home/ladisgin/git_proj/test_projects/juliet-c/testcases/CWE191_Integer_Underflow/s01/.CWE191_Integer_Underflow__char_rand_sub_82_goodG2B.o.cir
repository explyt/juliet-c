!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc5 = loc("CWE191_Integer_Underflow__char_rand_sub_82_goodG2B.cpp":25:58)
#loc6 = loc("CWE191_Integer_Underflow__char_rand_sub_82_goodG2B.cpp":25:65)
#loc7 = loc("CWE191_Integer_Underflow__char_rand_sub_82_goodG2B.cpp":25:70)
#loc18 = loc(fused[#loc6, #loc7])
!ty_CWE191_Integer_Underflow__char_rand_sub_823A3ACWE191_Integer_Underflow__char_rand_sub_82_base = !cir.struct<class "CWE191_Integer_Underflow__char_rand_sub_82::CWE191_Integer_Underflow__char_rand_sub_82_base" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>} #cir.record.decl.ast>
!ty_CWE191_Integer_Underflow__char_rand_sub_823A3ACWE191_Integer_Underflow__char_rand_sub_82_goodG2B = !cir.struct<class "CWE191_Integer_Underflow__char_rand_sub_82::CWE191_Integer_Underflow__char_rand_sub_82_goodG2B" {!ty_CWE191_Integer_Underflow__char_rand_sub_823A3ACWE191_Integer_Underflow__char_rand_sub_82_base} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_82_goodG2B.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printHexCharLine(!s8i) loc(#loc16)
  cir.func  @_ZN42CWE191_Integer_Underflow__char_rand_sub_8250CWE191_Integer_Underflow__char_rand_sub_82_goodG2B6actionEc(%arg0: !cir.ptr<!ty_CWE191_Integer_Underflow__char_rand_sub_823A3ACWE191_Integer_Underflow__char_rand_sub_82_goodG2B> loc("CWE191_Integer_Underflow__char_rand_sub_82_goodG2B.cpp":25:58), %arg1: !s8i loc(fused[#loc6, #loc7])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_CWE191_Integer_Underflow__char_rand_sub_823A3ACWE191_Integer_Underflow__char_rand_sub_82_goodG2B>, !cir.ptr<!cir.ptr<!ty_CWE191_Integer_Underflow__char_rand_sub_823A3ACWE191_Integer_Underflow__char_rand_sub_82_goodG2B>>, ["this", init] {alignment = 8 : i64} loc(#loc5)
    %1 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc18)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE191_Integer_Underflow__char_rand_sub_823A3ACWE191_Integer_Underflow__char_rand_sub_82_goodG2B>, !cir.ptr<!cir.ptr<!ty_CWE191_Integer_Underflow__char_rand_sub_823A3ACWE191_Integer_Underflow__char_rand_sub_82_goodG2B>> loc(#loc8)
    cir.store %arg1, %1 : !s8i, !cir.ptr<!s8i> loc(#loc8)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE191_Integer_Underflow__char_rand_sub_823A3ACWE191_Integer_Underflow__char_rand_sub_82_goodG2B>>, !cir.ptr<!ty_CWE191_Integer_Underflow__char_rand_sub_823A3ACWE191_Integer_Underflow__char_rand_sub_82_goodG2B> loc(#loc5)
    cir.scope {
      %3 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc20)
      %4 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc13)
      %5 = cir.cast(integral, %4 : !s8i), !s32i loc(#loc13)
      %6 = cir.const #cir.int<1> : !s32i loc(#loc12)
      %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc13)
      %8 = cir.cast(integral, %7 : !s32i), !s8i loc(#loc13)
      cir.store %8, %3 : !s8i, !cir.ptr<!s8i> loc(#loc20)
      %9 = cir.load %3 : !cir.ptr<!s8i>, !s8i loc(#loc14)
      cir.call @printHexCharLine(%9) : (!s8i) -> () loc(#loc15)
    } loc(#loc19)
    cir.return loc(#loc4)
  } loc(#loc17)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_82_goodG2B.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc3 = loc("CWE191_Integer_Underflow__char_rand_sub_82_goodG2B.cpp":25:1)
#loc4 = loc("CWE191_Integer_Underflow__char_rand_sub_82_goodG2B.cpp":32:1)
#loc8 = loc("CWE191_Integer_Underflow__char_rand_sub_82_goodG2B.cpp":26:1)
#loc9 = loc("CWE191_Integer_Underflow__char_rand_sub_82_goodG2B.cpp":27:5)
#loc10 = loc("CWE191_Integer_Underflow__char_rand_sub_82_goodG2B.cpp":31:5)
#loc11 = loc("CWE191_Integer_Underflow__char_rand_sub_82_goodG2B.cpp":29:9)
#loc12 = loc("CWE191_Integer_Underflow__char_rand_sub_82_goodG2B.cpp":29:30)
#loc13 = loc("CWE191_Integer_Underflow__char_rand_sub_82_goodG2B.cpp":29:23)
#loc14 = loc("CWE191_Integer_Underflow__char_rand_sub_82_goodG2B.cpp":30:26)
#loc15 = loc("CWE191_Integer_Underflow__char_rand_sub_82_goodG2B.cpp":30:9)
#loc16 = loc(fused[#loc1, #loc2])
#loc17 = loc(fused[#loc3, #loc4])
#loc19 = loc(fused[#loc9, #loc10])
#loc20 = loc(fused[#loc11, #loc12])
