!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE242_Use_of_Inherently_Dangerous_Function/CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func no_proto private @gets(...) -> !s32i loc(#loc)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Error Condition: alter control flow to indicate action taken\00" : !cir.array<!s8i x 61>> : !cir.array<!s8i x 61> {alignment = 1 : i64} loc(#loc3)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc70)
  cir.func no_proto @CWE242_Use_of_Inherently_Dangerous_Function__basic_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc72)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc73)
    cir.br ^bb1 loc(#loc74)
  ^bb1:  // pred: ^bb0
    %2 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc14)
    %3 = cir.get_global @gets : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc75)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !s32i>> loc(#loc75)
    %5 = cir.call %4(%2) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !s32i>>, !cir.ptr<!s8i>) -> !s32i loc(#loc15)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc15)
    %7 = cir.cast(int_to_ptr, %6 : !u64i), !cir.ptr<!s8i> loc(#loc15)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc76)
    cir.br ^bb2 loc(#loc77)
  ^bb2:  // pred: ^bb1
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc21)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc21)
    %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!s8i>, !cir.bool loc(#loc78)
    cir.brcond %11 ^bb3, ^bb4 loc(#loc79)
  ^bb3:  // pred: ^bb2
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc3)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc3)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc23)
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc24)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc25)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc24)
    cir.br ^bb4 loc(#loc19)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc19)
  ^bb5:  // pred: ^bb4
    %16 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc26)
    %18 = cir.const #cir.int<10> : !s32i loc(#loc27)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc27)
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc29)
    %22 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc29)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc80)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc30)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc31)
    cir.return loc(#loc7)
  } loc(#loc71)
  cir.func no_proto @CWE242_Use_of_Inherently_Dangerous_Function__basic_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc82)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc34)
    cir.return loc(#loc33)
  } loc(#loc81)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc83)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc84)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc86)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc87)
    cir.br ^bb1 loc(#loc88)
  ^bb1:  // pred: ^bb0
    %2 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc48)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc49)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc84)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc50)
    %6 = cir.call @fgets(%2, %3, %5) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc51)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc89)
    cir.br ^bb2 loc(#loc90)
  ^bb2:  // pred: ^bb1
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc57)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc57)
    %10 = cir.cmp(eq, %7, %9) : !cir.ptr<!s8i>, !cir.bool loc(#loc91)
    cir.brcond %10 ^bb3, ^bb4 loc(#loc92)
  ^bb3:  // pred: ^bb2
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc59)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc61)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc62)
    cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc61)
    cir.br ^bb4 loc(#loc55)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc55)
  ^bb5:  // pred: ^bb4
    %15 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc63)
    %17 = cir.const #cir.int<10> : !s32i loc(#loc64)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc65)
    %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc64)
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc66)
    %21 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc66)
    cir.store %16, %21 : !s8i, !cir.ptr<!s8i> loc(#loc93)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    cir.return loc(#loc41)
  } loc(#loc85)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE242_Use_of_Inherently_Dangerous_Function/CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":37:23)
#loc4 = loc("/usr/include/stdlib.h":756:1)
#loc5 = loc("/usr/include/stdlib.h":756:70)
#loc6 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":22:1)
#loc7 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":43:1)
#loc8 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":27:9)
#loc9 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":27:28)
#loc10 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":28:9)
#loc11 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":28:15)
#loc12 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":24:5)
#loc13 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":24:10)
#loc14 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":32:23)
#loc15 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":32:18)
#loc16 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":32:27)
#loc17 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":32:9)
#loc18 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":34:9)
#loc19 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":39:9)
#loc20 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":34:13)
#loc21 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":34:23)
#loc22 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":35:9)
#loc23 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":37:13)
#loc24 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":38:13)
#loc25 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":38:18)
#loc26 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":40:29)
#loc27 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":40:14)
#loc28 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":40:24)
#loc29 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":40:9)
#loc30 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":41:19)
#loc31 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":41:9)
#loc32 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":71:1)
#loc33 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":74:1)
#loc34 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":73:5)
#loc35 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":73:11)
#loc36 = loc("/usr/include/stdio.h":654:1)
#loc37 = loc("/usr/include/stdio.h":655:59)
#loc38 = loc("/usr/include/stdio.h":149:1)
#loc39 = loc("/usr/include/stdio.h":149:14)
#loc40 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":50:1)
#loc41 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":69:1)
#loc42 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":55:9)
#loc43 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":55:28)
#loc44 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":56:9)
#loc45 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":56:15)
#loc46 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":52:5)
#loc47 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":52:10)
#loc48 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":58:24)
#loc49 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":58:30)
#loc50 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":58:41)
#loc51 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":58:18)
#loc52 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":58:9)
#loc53 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":58:46)
#loc54 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":60:9)
#loc55 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":65:9)
#loc56 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":60:13)
#loc57 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":60:23)
#loc58 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":61:9)
#loc59 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":63:23)
#loc60 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":63:13)
#loc61 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":64:13)
#loc62 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":64:18)
#loc63 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":66:29)
#loc64 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":66:14)
#loc65 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":66:24)
#loc66 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":66:9)
#loc67 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":67:19)
#loc68 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_18.c":67:9)
#loc69 = loc(fused[#loc1, #loc2])
#loc70 = loc(fused[#loc4, #loc5])
#loc71 = loc(fused[#loc6, #loc7])
#loc72 = loc(fused[#loc8, #loc9])
#loc73 = loc(fused[#loc10, #loc11])
#loc74 = loc(fused[#loc12, #loc13])
#loc75 = loc(fused[#loc15, #loc16])
#loc76 = loc(fused[#loc17, #loc16])
#loc77 = loc(fused[#loc18, #loc19])
#loc78 = loc(fused[#loc20, #loc21])
#loc79 = loc(fused[#loc22, #loc19])
#loc80 = loc(fused[#loc29, #loc26])
#loc81 = loc(fused[#loc32, #loc33])
#loc82 = loc(fused[#loc34, #loc35])
#loc83 = loc(fused[#loc36, #loc37])
#loc84 = loc(fused[#loc38, #loc39])
#loc85 = loc(fused[#loc40, #loc41])
#loc86 = loc(fused[#loc42, #loc43])
#loc87 = loc(fused[#loc44, #loc45])
#loc88 = loc(fused[#loc46, #loc47])
#loc89 = loc(fused[#loc52, #loc53])
#loc90 = loc(fused[#loc54, #loc55])
#loc91 = loc(fused[#loc56, #loc57])
#loc92 = loc(fused[#loc58, #loc55])
#loc93 = loc(fused[#loc66, #loc63])
