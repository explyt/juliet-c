!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_cat_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc124)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc3)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc125)
  cir.func no_proto @CWE665_Improper_Initialization__char_cat_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc127)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc128)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc129)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc14)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc130)
    cir.br ^bb1 loc(#loc131)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<6> : !s32i loc(#loc18)
    cir.br ^bb2 loc(#loc16)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc16)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc19)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb6 loc(#loc20)
  ^bb5:  // pred: ^bb2
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc3)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc3)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc21)
    cir.br ^bb6 loc(#loc22)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc17)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc132)
  ^bb8:  // pred: ^bb7
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc25)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc25)
    %9 = cir.const #cir.int<67> : !s32i loc(#loc26)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc27)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc27)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc27)
    cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc133)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc31)
    %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc31)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc32)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc32)
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc34)
    %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc34)
    cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc134)
    %21 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc35)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc37)
    %24 = cir.call @strcat(%22, %23) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc35)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc39)
    cir.br ^bb9 loc(#loc24)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc7)
  } loc(#loc126)
  cir.func no_proto @CWE665_Improper_Initialization__char_cat_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc136)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc137)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    cir.return loc(#loc41)
  } loc(#loc135)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc139)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc140)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc141)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc54)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc142)
    cir.br ^bb1 loc(#loc143)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<5> : !s32i loc(#loc58)
    cir.br ^bb2 loc(#loc56)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc56)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc59)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc60)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    cir.br ^bb6 loc(#loc62)
  ^bb5:  // pred: ^bb2
    %7 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %8 = cir.cast(integral, %7 : !s32i), !s8i loc(#loc63)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc65)
    %11 = cir.ptr_stride(%9 : !cir.ptr<!s8i>, %10 : !s32i), !cir.ptr<!s8i> loc(#loc66)
    cir.store %8, %11 : !s8i, !cir.ptr<!s8i> loc(#loc144)
    cir.br ^bb6 loc(#loc67)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc57)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc145)
  ^bb8:  // pred: ^bb7
    %12 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc70)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc70)
    %14 = cir.const #cir.int<67> : !s32i loc(#loc71)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc72)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc73)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc72)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc72)
    cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc146)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc76)
    %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc76)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc77)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc78)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc77)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc79)
    %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc79)
    cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc147)
    %26 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc80)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
    %28 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc82)
    %29 = cir.call @strcat(%27, %28) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc80)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    cir.br ^bb9 loc(#loc69)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc47)
  } loc(#loc138)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc149)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc150)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc151)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc93)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
    cir.br ^bb1 loc(#loc153)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<6> : !s32i loc(#loc97)
    cir.br ^bb2 loc(#loc95)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc95)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc98)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %5 = cir.const #cir.int<0> : !s32i loc(#loc99)
    %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc99)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc101)
    %9 = cir.ptr_stride(%7 : !cir.ptr<!s8i>, %8 : !s32i), !cir.ptr<!s8i> loc(#loc102)
    cir.store %6, %9 : !s8i, !cir.ptr<!s8i> loc(#loc154)
    cir.br ^bb6 loc(#loc103)
  ^bb5:  // pred: ^bb2
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc104)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc104)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc105)
    cir.br ^bb6 loc(#loc106)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc96)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc155)
  ^bb8:  // pred: ^bb7
    %12 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc109)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc109)
    %14 = cir.const #cir.int<67> : !s32i loc(#loc110)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc111)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc111)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc111)
    cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc156)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc115)
    %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc115)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc116)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc117)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc116)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc118)
    %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc118)
    cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc157)
    %26 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc119)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
    %28 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc121)
    %29 = cir.call @strcat(%27, %28) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc119)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc123)
    cir.br ^bb9 loc(#loc108)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc86)
  } loc(#loc148)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_cat_15.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE665_Improper_Initialization__char_cat_15.c":36:19)
#loc4 = loc("/usr/include/string.h":149:1)
#loc5 = loc("/usr/include/string.h":150:14)
#loc6 = loc("CWE665_Improper_Initialization__char_cat_15.c":23:1)
#loc7 = loc("CWE665_Improper_Initialization__char_cat_15.c":47:1)
#loc8 = loc("CWE665_Improper_Initialization__char_cat_15.c":40:9)
#loc9 = loc("CWE665_Improper_Initialization__char_cat_15.c":40:24)
#loc10 = loc("CWE665_Improper_Initialization__char_cat_15.c":25:5)
#loc11 = loc("CWE665_Improper_Initialization__char_cat_15.c":25:12)
#loc12 = loc("CWE665_Improper_Initialization__char_cat_15.c":26:5)
#loc13 = loc("CWE665_Improper_Initialization__char_cat_15.c":26:24)
#loc14 = loc("CWE665_Improper_Initialization__char_cat_15.c":27:12)
#loc15 = loc("CWE665_Improper_Initialization__char_cat_15.c":27:5)
#loc16 = loc("CWE665_Improper_Initialization__char_cat_15.c":28:5)
#loc17 = loc("CWE665_Improper_Initialization__char_cat_15.c":38:5)
#loc18 = loc("CWE665_Improper_Initialization__char_cat_15.c":28:12)
#loc19 = loc("CWE665_Improper_Initialization__char_cat_15.c":30:5)
#loc20 = loc("CWE665_Improper_Initialization__char_cat_15.c":33:9)
#loc21 = loc("CWE665_Improper_Initialization__char_cat_15.c":36:9)
#loc22 = loc("CWE665_Improper_Initialization__char_cat_15.c":37:9)
#loc23 = loc("CWE665_Improper_Initialization__char_cat_15.c":39:5)
#loc24 = loc("CWE665_Improper_Initialization__char_cat_15.c":46:5)
#loc25 = loc("CWE665_Improper_Initialization__char_cat_15.c":41:16)
#loc26 = loc("CWE665_Improper_Initialization__char_cat_15.c":41:24)
#loc27 = loc("CWE665_Improper_Initialization__char_cat_15.c":41:29)
#loc28 = loc("CWE665_Improper_Initialization__char_cat_15.c":41:33)
#loc29 = loc("CWE665_Improper_Initialization__char_cat_15.c":41:9)
#loc30 = loc("CWE665_Improper_Initialization__char_cat_15.c":41:34)
#loc31 = loc("CWE665_Improper_Initialization__char_cat_15.c":42:25)
#loc32 = loc("CWE665_Improper_Initialization__char_cat_15.c":42:16)
#loc33 = loc("CWE665_Improper_Initialization__char_cat_15.c":42:20)
#loc34 = loc("CWE665_Improper_Initialization__char_cat_15.c":42:9)
#loc35 = loc("CWE665_Improper_Initialization__char_cat_15.c":44:9)
#loc36 = loc("CWE665_Improper_Initialization__char_cat_15.c":44:16)
#loc37 = loc("CWE665_Improper_Initialization__char_cat_15.c":44:22)
#loc38 = loc("CWE665_Improper_Initialization__char_cat_15.c":45:19)
#loc39 = loc("CWE665_Improper_Initialization__char_cat_15.c":45:9)
#loc40 = loc("CWE665_Improper_Initialization__char_cat_15.c":107:1)
#loc41 = loc("CWE665_Improper_Initialization__char_cat_15.c":111:1)
#loc42 = loc("CWE665_Improper_Initialization__char_cat_15.c":109:5)
#loc43 = loc("CWE665_Improper_Initialization__char_cat_15.c":109:14)
#loc44 = loc("CWE665_Improper_Initialization__char_cat_15.c":110:5)
#loc45 = loc("CWE665_Improper_Initialization__char_cat_15.c":110:14)
#loc46 = loc("CWE665_Improper_Initialization__char_cat_15.c":54:1)
#loc47 = loc("CWE665_Improper_Initialization__char_cat_15.c":78:1)
#loc48 = loc("CWE665_Improper_Initialization__char_cat_15.c":71:9)
#loc49 = loc("CWE665_Improper_Initialization__char_cat_15.c":71:24)
#loc50 = loc("CWE665_Improper_Initialization__char_cat_15.c":56:5)
#loc51 = loc("CWE665_Improper_Initialization__char_cat_15.c":56:12)
#loc52 = loc("CWE665_Improper_Initialization__char_cat_15.c":57:5)
#loc53 = loc("CWE665_Improper_Initialization__char_cat_15.c":57:24)
#loc54 = loc("CWE665_Improper_Initialization__char_cat_15.c":58:12)
#loc55 = loc("CWE665_Improper_Initialization__char_cat_15.c":58:5)
#loc56 = loc("CWE665_Improper_Initialization__char_cat_15.c":59:5)
#loc57 = loc("CWE665_Improper_Initialization__char_cat_15.c":69:5)
#loc58 = loc("CWE665_Improper_Initialization__char_cat_15.c":59:12)
#loc59 = loc("CWE665_Improper_Initialization__char_cat_15.c":61:5)
#loc60 = loc("CWE665_Improper_Initialization__char_cat_15.c":63:19)
#loc61 = loc("CWE665_Improper_Initialization__char_cat_15.c":63:9)
#loc62 = loc("CWE665_Improper_Initialization__char_cat_15.c":64:9)
#loc63 = loc("CWE665_Improper_Initialization__char_cat_15.c":67:19)
#loc64 = loc("CWE665_Improper_Initialization__char_cat_15.c":67:9)
#loc65 = loc("CWE665_Improper_Initialization__char_cat_15.c":67:14)
#loc66 = loc("CWE665_Improper_Initialization__char_cat_15.c":67:15)
#loc67 = loc("CWE665_Improper_Initialization__char_cat_15.c":68:9)
#loc68 = loc("CWE665_Improper_Initialization__char_cat_15.c":70:5)
#loc69 = loc("CWE665_Improper_Initialization__char_cat_15.c":77:5)
#loc70 = loc("CWE665_Improper_Initialization__char_cat_15.c":72:16)
#loc71 = loc("CWE665_Improper_Initialization__char_cat_15.c":72:24)
#loc72 = loc("CWE665_Improper_Initialization__char_cat_15.c":72:29)
#loc73 = loc("CWE665_Improper_Initialization__char_cat_15.c":72:33)
#loc74 = loc("CWE665_Improper_Initialization__char_cat_15.c":72:9)
#loc75 = loc("CWE665_Improper_Initialization__char_cat_15.c":72:34)
#loc76 = loc("CWE665_Improper_Initialization__char_cat_15.c":73:25)
#loc77 = loc("CWE665_Improper_Initialization__char_cat_15.c":73:16)
#loc78 = loc("CWE665_Improper_Initialization__char_cat_15.c":73:20)
#loc79 = loc("CWE665_Improper_Initialization__char_cat_15.c":73:9)
#loc80 = loc("CWE665_Improper_Initialization__char_cat_15.c":75:9)
#loc81 = loc("CWE665_Improper_Initialization__char_cat_15.c":75:16)
#loc82 = loc("CWE665_Improper_Initialization__char_cat_15.c":75:22)
#loc83 = loc("CWE665_Improper_Initialization__char_cat_15.c":76:19)
#loc84 = loc("CWE665_Improper_Initialization__char_cat_15.c":76:9)
#loc85 = loc("CWE665_Improper_Initialization__char_cat_15.c":81:1)
#loc86 = loc("CWE665_Improper_Initialization__char_cat_15.c":105:1)
#loc87 = loc("CWE665_Improper_Initialization__char_cat_15.c":98:9)
#loc88 = loc("CWE665_Improper_Initialization__char_cat_15.c":98:24)
#loc89 = loc("CWE665_Improper_Initialization__char_cat_15.c":83:5)
#loc90 = loc("CWE665_Improper_Initialization__char_cat_15.c":83:12)
#loc91 = loc("CWE665_Improper_Initialization__char_cat_15.c":84:5)
#loc92 = loc("CWE665_Improper_Initialization__char_cat_15.c":84:24)
#loc93 = loc("CWE665_Improper_Initialization__char_cat_15.c":85:12)
#loc94 = loc("CWE665_Improper_Initialization__char_cat_15.c":85:5)
#loc95 = loc("CWE665_Improper_Initialization__char_cat_15.c":86:5)
#loc96 = loc("CWE665_Improper_Initialization__char_cat_15.c":96:5)
#loc97 = loc("CWE665_Improper_Initialization__char_cat_15.c":86:12)
#loc98 = loc("CWE665_Improper_Initialization__char_cat_15.c":88:5)
#loc99 = loc("CWE665_Improper_Initialization__char_cat_15.c":90:19)
#loc100 = loc("CWE665_Improper_Initialization__char_cat_15.c":90:9)
#loc101 = loc("CWE665_Improper_Initialization__char_cat_15.c":90:14)
#loc102 = loc("CWE665_Improper_Initialization__char_cat_15.c":90:15)
#loc103 = loc("CWE665_Improper_Initialization__char_cat_15.c":91:9)
#loc104 = loc("CWE665_Improper_Initialization__char_cat_15.c":94:19)
#loc105 = loc("CWE665_Improper_Initialization__char_cat_15.c":94:9)
#loc106 = loc("CWE665_Improper_Initialization__char_cat_15.c":95:9)
#loc107 = loc("CWE665_Improper_Initialization__char_cat_15.c":97:5)
#loc108 = loc("CWE665_Improper_Initialization__char_cat_15.c":104:5)
#loc109 = loc("CWE665_Improper_Initialization__char_cat_15.c":99:16)
#loc110 = loc("CWE665_Improper_Initialization__char_cat_15.c":99:24)
#loc111 = loc("CWE665_Improper_Initialization__char_cat_15.c":99:29)
#loc112 = loc("CWE665_Improper_Initialization__char_cat_15.c":99:33)
#loc113 = loc("CWE665_Improper_Initialization__char_cat_15.c":99:9)
#loc114 = loc("CWE665_Improper_Initialization__char_cat_15.c":99:34)
#loc115 = loc("CWE665_Improper_Initialization__char_cat_15.c":100:25)
#loc116 = loc("CWE665_Improper_Initialization__char_cat_15.c":100:16)
#loc117 = loc("CWE665_Improper_Initialization__char_cat_15.c":100:20)
#loc118 = loc("CWE665_Improper_Initialization__char_cat_15.c":100:9)
#loc119 = loc("CWE665_Improper_Initialization__char_cat_15.c":102:9)
#loc120 = loc("CWE665_Improper_Initialization__char_cat_15.c":102:16)
#loc121 = loc("CWE665_Improper_Initialization__char_cat_15.c":102:22)
#loc122 = loc("CWE665_Improper_Initialization__char_cat_15.c":103:19)
#loc123 = loc("CWE665_Improper_Initialization__char_cat_15.c":103:9)
#loc124 = loc(fused[#loc1, #loc2])
#loc125 = loc(fused[#loc4, #loc5])
#loc126 = loc(fused[#loc6, #loc7])
#loc127 = loc(fused[#loc8, #loc9])
#loc128 = loc(fused[#loc10, #loc11])
#loc129 = loc(fused[#loc12, #loc13])
#loc130 = loc(fused[#loc15, #loc14])
#loc131 = loc(fused[#loc16, #loc17])
#loc132 = loc(fused[#loc23, #loc24])
#loc133 = loc(fused[#loc29, #loc30])
#loc134 = loc(fused[#loc34, #loc31])
#loc135 = loc(fused[#loc40, #loc41])
#loc136 = loc(fused[#loc42, #loc43])
#loc137 = loc(fused[#loc44, #loc45])
#loc138 = loc(fused[#loc46, #loc47])
#loc139 = loc(fused[#loc48, #loc49])
#loc140 = loc(fused[#loc50, #loc51])
#loc141 = loc(fused[#loc52, #loc53])
#loc142 = loc(fused[#loc55, #loc54])
#loc143 = loc(fused[#loc56, #loc57])
#loc144 = loc(fused[#loc64, #loc63])
#loc145 = loc(fused[#loc68, #loc69])
#loc146 = loc(fused[#loc74, #loc75])
#loc147 = loc(fused[#loc79, #loc76])
#loc148 = loc(fused[#loc85, #loc86])
#loc149 = loc(fused[#loc87, #loc88])
#loc150 = loc(fused[#loc89, #loc90])
#loc151 = loc(fused[#loc91, #loc92])
#loc152 = loc(fused[#loc94, #loc93])
#loc153 = loc(fused[#loc95, #loc96])
#loc154 = loc(fused[#loc100, #loc99])
#loc155 = loc(fused[#loc107, #loc108])
#loc156 = loc(fused[#loc113, #loc114])
#loc157 = loc(fused[#loc118, #loc115])
