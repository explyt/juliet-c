!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc1 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc86 = loc("../../../testcasesupport/std_testcase.h":68:7)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":140:10)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":140:14)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":140:20)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":140:32)
!ty_OneIntClass = !cir.struct<class "OneIntClass" {!s32i} #cir.record.decl.ast>
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
#loc214 = loc(fused[#loc142, #loc143])
#loc215 = loc(fused[#loc144, #loc145])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc1)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc1)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc1)
    cir.return loc(#loc1)
  } loc(#loc1)
  cir.func private @printIntLine(!s32i) loc(#loc158)
  cir.func @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_323badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc160)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc161)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc162)
    %3 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc163)
    %4 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc164)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc161)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc162)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc166)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc19)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc166)
      %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc21)
      cir.store %8, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc167)
      %9 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc24)
      cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc168)
    } loc(#loc165)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc170)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc29)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc170)
      cir.scope {
        %8 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc172)
        %9 = cir.const #cir.int<8> : !u64i loc(#loc173)
        %10 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc36)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc173)
        cir.call @_ZN12TwoIntsClassC2Ev(%12) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc34)
        cir.store %12, %8 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc172)
        %13 = cir.const #cir.int<5> : !s32i loc(#loc37)
        %14 = cir.load %8 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc38)
        %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc39)
        cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc174)
        %16 = cir.const #cir.int<10> : !s32i loc(#loc40)
        %17 = cir.load %8 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc41)
        %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc42)
        cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc175)
        %19 = cir.load %8 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc43)
        %20 = cir.get_member %19[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc39)
        %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc44)
        cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc45)
      } loc(#loc171)
    } loc(#loc169)
    cir.return loc(#loc5)
  } loc(#loc159)
  cir.func internal private @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc177)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc178)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc179)
    %3 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc180)
    %4 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc181)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc178)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc179)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc183)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc61)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc183)
      %8 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc63)
      cir.store %8, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc184)
      %9 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc66)
      cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc185)
    } loc(#loc182)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc187)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc71)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc187)
      cir.scope {
        %8 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc189)
        %9 = cir.const #cir.int<8> : !u64i loc(#loc190)
        %10 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc78)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc190)
        cir.call @_ZN12TwoIntsClassC2Ev(%12) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc76)
        cir.store %12, %8 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc189)
        %13 = cir.const #cir.int<5> : !s32i loc(#loc79)
        %14 = cir.load %8 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc80)
        %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc39)
        cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc191)
        %16 = cir.const #cir.int<10> : !s32i loc(#loc81)
        %17 = cir.load %8 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc82)
        %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc42)
        cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc192)
        %19 = cir.load %8 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc83)
        %20 = cir.get_member %19[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc39)
        %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc84)
        cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc85)
      } loc(#loc188)
    } loc(#loc186)
    cir.return loc(#loc47)
  } loc(#loc176)
  cir.func linkonce_odr @_ZN11OneIntClassC2Ev(%arg0: !cir.ptr<!ty_OneIntClass> loc("../../../testcasesupport/std_testcase.h":68:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["this", init] {alignment = 8 : i64} loc(#loc86)
    cir.store %arg0, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc86)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc86)
    cir.return loc(#loc86)
  } loc(#loc86)
  cir.func internal private @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc194)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc195)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc196)
    %3 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc197)
    %4 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc198)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc195)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc196)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc200)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc102)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc200)
      %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc104)
      cir.store %8, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc201)
      %9 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc107)
      cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc202)
    } loc(#loc199)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc204)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc112)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc204)
      cir.scope {
        %8 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc206)
        %9 = cir.const #cir.int<4> : !u64i loc(#loc207)
        %10 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc119)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc207)
        cir.call @_ZN11OneIntClassC2Ev(%12) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr2) loc(#loc117)
        cir.store %12, %8 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc206)
        %13 = cir.const #cir.int<5> : !s32i loc(#loc120)
        %14 = cir.load %8 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc121)
        %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc122)
        cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc208)
        %16 = cir.load %8 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc123)
        %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc122)
        %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc124)
        cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc125)
      } loc(#loc205)
    } loc(#loc203)
    cir.return loc(#loc88)
  } loc(#loc193)
  cir.func @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_324goodEv() extra(#fn_attr1) {
    cir.call @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32L7goodG2BEv() : () -> () loc(#loc128)
    cir.call @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32L7goodB2GEv() : () -> () loc(#loc129)
    cir.return loc(#loc127)
  } loc(#loc209)
  cir.func private @srand(!u32i) extra(#fn_attr2) loc(#loc210)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr2) loc(#loc211)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc212)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc136)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc137)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc139)
  cir.func @main(%arg0: !s32i loc(fused[#loc142, #loc143]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc144, #loc145])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc214)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc215)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc141)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc146)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc146)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc147)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr2) loc(#loc148)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc148)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr2) loc(#loc149)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc136)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc136)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc150)
    cir.call @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_324goodEv() : () -> () loc(#loc151)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc137)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc137)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc152)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc138)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc138)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc153)
    cir.call @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_323badEv() : () -> () loc(#loc154)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc139)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc139)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc155)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc156)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc216)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc216)
    cir.return %15 : !s32i loc(#loc216)
  } loc(#loc213)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":0:0)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":25:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":54:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":27:5)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":27:12)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":28:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":28:25)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":29:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":29:25)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":30:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":30:43)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":31:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":31:45)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":32:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":37:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":33:9)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":33:24)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":33:23)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":35:16)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":35:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":36:21)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":36:10)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":36:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":38:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":53:5)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":39:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":39:24)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":39:23)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":40:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":52:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":46:13)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":46:49)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":46:39)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":46:43)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":48:32)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":48:13)
#loc39 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":49:32)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":49:13)
#loc42 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":50:26)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":50:36)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":50:13)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":61:1)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":90:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":63:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":63:12)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":64:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":64:25)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":65:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":65:25)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":66:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":66:43)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":67:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":67:45)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":68:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":73:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":69:9)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":69:24)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":69:23)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":71:16)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":71:9)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":72:21)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":72:10)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":72:9)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":74:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":89:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":75:9)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":75:24)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":75:23)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":76:9)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":88:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":82:13)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":82:49)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":82:39)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":82:43)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":84:32)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":84:13)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":85:32)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":85:13)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":86:26)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":86:36)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":86:13)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":93:1)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":120:1)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":95:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":95:12)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":96:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":96:25)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":97:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":97:25)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":98:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":98:43)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":99:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":99:45)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":100:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":105:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":101:9)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":101:24)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":101:23)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":103:16)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":103:9)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":104:21)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":104:10)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":104:9)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":106:5)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":119:5)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":107:9)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":107:24)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":107:23)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":108:9)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":118:9)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":114:13)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":114:48)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":114:38)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":114:42)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":116:32)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":116:13)
#loc122 = loc("../../../testcasesupport/std_testcase.h":71:13)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":117:26)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":117:36)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":117:13)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":122:1)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":126:1)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":124:5)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":125:5)
#loc130 = loc("/usr/include/stdlib.h":575:1)
#loc131 = loc("/usr/include/stdlib.h":575:41)
#loc132 = loc("/usr/include/time.h":76:1)
#loc133 = loc("/usr/include/time.h":76:38)
#loc134 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc135 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":145:15)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":147:15)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":150:15)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":152:15)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":140:1)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":155:1)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":141:1)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":143:27)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":143:22)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":143:5)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":145:5)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":146:5)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":147:5)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":150:5)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":151:5)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":152:5)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":154:12)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":154:5)
#loc158 = loc(fused[#loc2, #loc3])
#loc159 = loc(fused[#loc4, #loc5])
#loc160 = loc(fused[#loc6, #loc7])
#loc161 = loc(fused[#loc8, #loc9])
#loc162 = loc(fused[#loc10, #loc11])
#loc163 = loc(fused[#loc12, #loc13])
#loc164 = loc(fused[#loc14, #loc15])
#loc165 = loc(fused[#loc16, #loc17])
#loc166 = loc(fused[#loc18, #loc19])
#loc167 = loc(fused[#loc22, #loc21])
#loc168 = loc(fused[#loc25, #loc23])
#loc169 = loc(fused[#loc26, #loc27])
#loc170 = loc(fused[#loc28, #loc29])
#loc171 = loc(fused[#loc31, #loc32])
#loc172 = loc(fused[#loc33, #loc34])
#loc173 = loc(fused[#loc35, #loc34])
#loc174 = loc(fused[#loc38, #loc37])
#loc175 = loc(fused[#loc41, #loc40])
#loc176 = loc(fused[#loc46, #loc47])
#loc177 = loc(fused[#loc48, #loc49])
#loc178 = loc(fused[#loc50, #loc51])
#loc179 = loc(fused[#loc52, #loc53])
#loc180 = loc(fused[#loc54, #loc55])
#loc181 = loc(fused[#loc56, #loc57])
#loc182 = loc(fused[#loc58, #loc59])
#loc183 = loc(fused[#loc60, #loc61])
#loc184 = loc(fused[#loc64, #loc63])
#loc185 = loc(fused[#loc67, #loc65])
#loc186 = loc(fused[#loc68, #loc69])
#loc187 = loc(fused[#loc70, #loc71])
#loc188 = loc(fused[#loc73, #loc74])
#loc189 = loc(fused[#loc75, #loc76])
#loc190 = loc(fused[#loc77, #loc76])
#loc191 = loc(fused[#loc80, #loc79])
#loc192 = loc(fused[#loc82, #loc81])
#loc193 = loc(fused[#loc87, #loc88])
#loc194 = loc(fused[#loc89, #loc90])
#loc195 = loc(fused[#loc91, #loc92])
#loc196 = loc(fused[#loc93, #loc94])
#loc197 = loc(fused[#loc95, #loc96])
#loc198 = loc(fused[#loc97, #loc98])
#loc199 = loc(fused[#loc99, #loc100])
#loc200 = loc(fused[#loc101, #loc102])
#loc201 = loc(fused[#loc105, #loc104])
#loc202 = loc(fused[#loc108, #loc106])
#loc203 = loc(fused[#loc109, #loc110])
#loc204 = loc(fused[#loc111, #loc112])
#loc205 = loc(fused[#loc114, #loc115])
#loc206 = loc(fused[#loc116, #loc117])
#loc207 = loc(fused[#loc118, #loc117])
#loc208 = loc(fused[#loc121, #loc120])
#loc209 = loc(fused[#loc126, #loc127])
#loc210 = loc(fused[#loc130, #loc131])
#loc211 = loc(fused[#loc132, #loc133])
#loc212 = loc(fused[#loc134, #loc135])
#loc213 = loc(fused[#loc140, #loc141])
#loc216 = loc(fused[#loc157, #loc156])
