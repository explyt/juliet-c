!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1126:7)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1126:18)
#loc5 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1126:28)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":28:14)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":28:26)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":52:18)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":52:30)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":71:18)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":71:30)
#true = #cir.bool<true> : !cir.bool
#loc99 = loc(fused[#loc4, #loc5])
#loc104 = loc(fused[#loc22, #loc23])
#loc112 = loc(fused[#loc46, #loc47])
#loc120 = loc(fused[#loc72, #loc73])
!ty_std3A3A_Vector_base3Cint2C_std3A3Aallocator3Cint3E3E3A3A_Vector_impl_data = !cir.record<struct "std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" {!cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.ptr<!s32i>} #cir.record.decl.ast>
!ty_std3A3A_Vector_base3Cint2C_std3A3Aallocator3Cint3E3E3A3A_Vector_impl = !cir.record<struct "std::_Vector_base<int, std::allocator<int>>::_Vector_impl" {!ty_std3A3A_Vector_base3Cint2C_std3A3Aallocator3Cint3E3E3A3A_Vector_impl_data} #cir.record.decl.ast>
!ty_std3A3A_Vector_base3Cint2C_std3A3Aallocator3Cint3E3E = !cir.record<struct "std::_Vector_base<int, std::allocator<int>>" {!ty_std3A3A_Vector_base3Cint2C_std3A3Aallocator3Cint3E3E3A3A_Vector_impl} #cir.record.decl.ast>
!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E = !cir.record<class "std::vector<int, std::allocator<int>>" {!ty_std3A3A_Vector_base3Cint2C_std3A3Aallocator3Cint3E3E}>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func linkonce_odr @_ZNSt6vectorIiSaIiEEixEm(%arg0: !cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E> loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1126:7), %arg1: !u64i loc(fused[#loc4, #loc5])) -> !cir.ptr<!s32i> extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E>, !cir.ptr<!cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["__n", init] {alignment = 8 : i64} loc(#loc99)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["__retval"] {alignment = 8 : i64} loc(#loc2)
    cir.store %arg0, %0 : !cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E>, !cir.ptr<!cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E>> loc(#loc6)
    cir.store %arg1, %1 : !u64i, !cir.ptr<!u64i> loc(#loc6)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E>>, !cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E> loc(#loc3)
    %4 = cir.base_class_addr(%3 : !cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E> nonnull) [0] -> !cir.ptr<!ty_std3A3A_Vector_base3Cint2C_std3A3Aallocator3Cint3E3E> loc(#loc7)
    %5 = cir.get_member %4[0] {name = "_M_impl"} : !cir.ptr<!ty_std3A3A_Vector_base3Cint2C_std3A3Aallocator3Cint3E3E> -> !cir.ptr<!ty_std3A3A_Vector_base3Cint2C_std3A3Aallocator3Cint3E3E3A3A_Vector_impl> loc(#loc8)
    %6 = cir.base_class_addr(%5 : !cir.ptr<!ty_std3A3A_Vector_base3Cint2C_std3A3Aallocator3Cint3E3E3A3A_Vector_impl> nonnull) [0] -> !cir.ptr<!ty_std3A3A_Vector_base3Cint2C_std3A3Aallocator3Cint3E3E3A3A_Vector_impl_data> loc(#loc7)
    %7 = cir.get_member %6[0] {name = "_M_start"} : !cir.ptr<!ty_std3A3A_Vector_base3Cint2C_std3A3Aallocator3Cint3E3E3A3A_Vector_impl_data> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc9)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc10)
    %9 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc11)
    %10 = cir.ptr_stride(%8 : !cir.ptr<!s32i>, %9 : !u64i), !cir.ptr<!s32i> loc(#loc12)
    cir.store %10, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc100)
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc100)
    cir.return %11 : !cir.ptr<!s32i> loc(#loc100)
  } loc(#loc98)
  cir.func private @printIntLine(!s32i) loc(#loc101)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc102)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc19)
  cir.func @_ZN40CWE126_Buffer_Overread__CWE129_fscanf_727badSinkESt6vectorIiSaIiEE(%arg0: !ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E loc(fused[#loc22, #loc23])) extra(#fn_attr1) {
    %0 = cir.alloca !ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E, !cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E>, ["dataVector", init] {alignment = 8 : i64} loc(#loc104)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc105)
    cir.store %arg0, %0 : !ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E, !cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E> loc(#loc26)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc27)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc27)
    %4 = cir.call @_ZNSt6vectorIiSaIiEEixEm(%0, %3) : (!cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E>, !u64i) -> !cir.ptr<!s32i> extra(#fn_attr2) loc(#loc28)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc28)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc105)
    cir.scope {
      %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc107)
      %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc107)
      cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc107)
      cir.scope {
        %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc35)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc36)
        %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc109)
        cir.if %10 {
          %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc40)
          %12 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc41)
          %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc41)
          %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc41)
          cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc42)
        } else {
          %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc19)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc19)
          cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc43)
        } loc(#loc110)
      } loc(#loc108)
    } loc(#loc106)
    cir.return loc(#loc21)
  } loc(#loc103)
  cir.func @_ZN40CWE126_Buffer_Overread__CWE129_fscanf_7211goodG2BSinkESt6vectorIiSaIiEE(%arg0: !ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E loc(fused[#loc46, #loc47])) extra(#fn_attr1) {
    %0 = cir.alloca !ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E, !cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E>, ["dataVector", init] {alignment = 8 : i64} loc(#loc112)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc113)
    cir.store %arg0, %0 : !ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E, !cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E> loc(#loc50)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc51)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc51)
    %4 = cir.call @_ZNSt6vectorIiSaIiEEixEm(%0, %3) : (!cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E>, !u64i) -> !cir.ptr<!s32i> extra(#fn_attr2) loc(#loc52)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc52)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc113)
    cir.scope {
      %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc115)
      %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc115)
      cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc115)
      cir.scope {
        %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc59)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc60)
        %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc117)
        cir.if %10 {
          %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc64)
          %12 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc65)
          %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc65)
          %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc65)
          cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc66)
        } else {
          %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc67)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc67)
          cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc68)
        } loc(#loc118)
      } loc(#loc116)
    } loc(#loc114)
    cir.return loc(#loc45)
  } loc(#loc111)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc69)
  cir.func @_ZN40CWE126_Buffer_Overread__CWE129_fscanf_7211goodB2GSinkESt6vectorIiSaIiEE(%arg0: !ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E loc(fused[#loc72, #loc73])) extra(#fn_attr1) {
    %0 = cir.alloca !ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E, !cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E>, ["dataVector", init] {alignment = 8 : i64} loc(#loc120)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc121)
    cir.store %arg0, %0 : !ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E, !cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E> loc(#loc76)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc77)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc77)
    %4 = cir.call @_ZNSt6vectorIiSaIiEEixEm(%0, %3) : (!cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E>, !u64i) -> !cir.ptr<!s32i> extra(#fn_attr2) loc(#loc78)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc78)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc121)
    cir.scope {
      %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc123)
      %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc123)
      cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc123)
      cir.scope {
        %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc85)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc86)
        %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc125)
        %11 = cir.ternary(%10, true {
          %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc88)
          %13 = cir.const #cir.int<10> : !s32i loc(#loc89)
          %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc126)
          %15 = cir.ternary(%14, true {
            %16 = cir.const #true loc(#loc87)
            cir.yield %16 : !cir.bool loc(#loc87)
          }, false {
            %16 = cir.const #false loc(#loc87)
            cir.yield %16 : !cir.bool loc(#loc87)
          }) : (!cir.bool) -> !cir.bool loc(#loc87)
          cir.yield %15 : !cir.bool loc(#loc87)
        }, false {
          %12 = cir.const #false loc(#loc87)
          cir.yield %12 : !cir.bool loc(#loc87)
        }) : (!cir.bool) -> !cir.bool loc(#loc87)
        cir.if %11 {
          %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc94)
          %13 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc95)
          %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc95)
          %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc95)
          cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc96)
        } else {
          %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc69)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc69)
          cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc97)
        } loc(#loc127)
      } loc(#loc124)
    } loc(#loc122)
    cir.return loc(#loc71)
  } loc(#loc119)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1125:7)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1130:7)
#loc6 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1127:7)
#loc7 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:11)
#loc8 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":374:20)
#loc9 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":94:10)
#loc10 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:25)
#loc11 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:36)
#loc12 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:34)
#loc13 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:2)
#loc14 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:39)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":42:23)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":28:1)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":45:1)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":31:5)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":31:28)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":29:1)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":31:27)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":31:16)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":32:5)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":44:5)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":33:9)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":33:30)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":36:9)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":43:9)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":36:13)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":36:21)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":37:9)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":39:9)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":41:9)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":38:33)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":38:26)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":38:13)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":42:13)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":52:1)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":68:1)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":54:5)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":54:28)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":53:1)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":54:27)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":54:16)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":55:5)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":67:5)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":56:9)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":56:30)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":59:9)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":66:9)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":59:13)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":59:21)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":60:9)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":62:9)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":64:9)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":61:33)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":61:26)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":61:13)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":65:23)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":65:13)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":83:23)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":71:1)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":86:1)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":73:5)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":73:28)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":72:1)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":73:27)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":73:16)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":74:5)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":85:5)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":75:9)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":75:30)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":77:9)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":84:9)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":77:13)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":77:21)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":77:23)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":77:26)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":77:34)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":77:36)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":78:9)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":80:9)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":82:9)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":79:33)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":79:26)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":79:13)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_fscanf_72b.cpp":83:13)
#loc98 = loc(fused[#loc1, #loc2])
#loc100 = loc(fused[#loc13, #loc14])
#loc101 = loc(fused[#loc15, #loc16])
#loc102 = loc(fused[#loc17, #loc18])
#loc103 = loc(fused[#loc20, #loc21])
#loc105 = loc(fused[#loc24, #loc25])
#loc106 = loc(fused[#loc29, #loc30])
#loc107 = loc(fused[#loc31, #loc32])
#loc108 = loc(fused[#loc33, #loc34])
#loc109 = loc(fused[#loc35, #loc36])
#loc110 = loc(fused[#loc37, #loc38, #loc39, #loc34])
#loc111 = loc(fused[#loc44, #loc45])
#loc113 = loc(fused[#loc48, #loc49])
#loc114 = loc(fused[#loc53, #loc54])
#loc115 = loc(fused[#loc55, #loc56])
#loc116 = loc(fused[#loc57, #loc58])
#loc117 = loc(fused[#loc59, #loc60])
#loc118 = loc(fused[#loc61, #loc62, #loc63, #loc58])
#loc119 = loc(fused[#loc70, #loc71])
#loc121 = loc(fused[#loc74, #loc75])
#loc122 = loc(fused[#loc79, #loc80])
#loc123 = loc(fused[#loc81, #loc82])
#loc124 = loc(fused[#loc83, #loc84])
#loc125 = loc(fused[#loc85, #loc86])
#loc126 = loc(fused[#loc88, #loc90])
#loc127 = loc(fused[#loc91, #loc92, #loc93, #loc84])
