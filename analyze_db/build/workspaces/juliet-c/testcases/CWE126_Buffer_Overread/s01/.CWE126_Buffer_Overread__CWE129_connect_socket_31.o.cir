!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_connect_socket_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc294)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc295)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc296)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc297)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc298)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc299)
  cir.func private @close(!s32i) -> !s32i loc(#loc300)
  cir.func private @printIntLine(!s32i) loc(#loc301)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc302)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc20)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_connect_socket_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc304)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc26)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc305)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc307)
      %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc308)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc309)
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc310)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc35)
      %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc35)
      cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc309)
      cir.scope {
        cir.do {
          cir.scope {
            %9 = cir.const #cir.int<2> : !s32i loc(#loc42)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc43)
            %11 = cir.const #cir.int<6> : !s32i loc(#loc44)
            %12 = cir.call @socket(%9, %10, %11) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc45)
            cir.store %12, %5 : !s32i, !cir.ptr<!s32i> loc(#loc313)
            cir.scope {
              %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc50)
              %52 = cir.const #cir.int<1> : !s32i loc(#loc51)
              %53 = cir.unary(minus, %52) nsw : !s32i, !s32i loc(#loc51)
              %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc315)
              cir.if %54 {
                cir.break loc(#loc53)
              } loc(#loc316)
            } loc(#loc314)
            %13 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc317)
            %14 = cir.const #cir.int<0> : !s32i loc(#loc56)
            %15 = cir.const #cir.int<16> : !u64i loc(#loc318)
            cir.libc.memset %15 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc319)
            %16 = cir.const #cir.int<2> : !s32i loc(#loc61)
            %17 = cir.cast(integral, %16 : !s32i), !u16i loc(#loc61)
            %18 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc62)
            cir.store %17, %18 : !u16i, !cir.ptr<!u16i> loc(#loc320)
            %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
            %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
            %21 = cir.call @inet_addr(%20) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc64)
            %22 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc65)
            %23 = cir.get_member %22[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc66)
            cir.store %21, %23 : !u32i, !cir.ptr<!u32i> loc(#loc321)
            %24 = cir.const #cir.int<27015> : !s32i loc(#loc69)
            %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc69)
            %26 = cir.call @htons(%25) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc70)
            %27 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
            cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc322)
            cir.scope {
              %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc76)
              %52 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc324)
              %53 = cir.const #cir.int<16> : !u64i loc(#loc325)
              %54 = cir.cast(integral, %53 : !u64i), !u32i loc(#loc325)
              %55 = cir.call @connect(%51, %52, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc81)
              %56 = cir.const #cir.int<1> : !s32i loc(#loc82)
              %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc82)
              %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc326)
              cir.if %58 {
                cir.break loc(#loc84)
              } loc(#loc327)
            } loc(#loc323)
            %28 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc85)
            %29 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc86)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc86)
            %31 = cir.const #cir.int<3> : !s32i loc(#loc87)
            %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc87)
            %33 = cir.const #cir.int<4> : !u64i loc(#loc87)
            %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc87)
            %35 = cir.const #cir.int<2> : !s32i loc(#loc87)
            %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc87)
            %37 = cir.binop(add, %34, %36) : !u64i loc(#loc87)
            %38 = cir.const #cir.int<1> : !s32i loc(#loc88)
            %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc88)
            %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc328)
            %41 = cir.const #cir.int<0> : !s32i loc(#loc89)
            %42 = cir.call @recv(%28, %30, %40, %41) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc90)
            %43 = cir.cast(integral, %42 : !s64i), !s32i loc(#loc90)
            cir.store %43, %3 : !s32i, !cir.ptr<!s32i> loc(#loc329)
            cir.scope {
              %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc95)
              %52 = cir.const #cir.int<1> : !s32i loc(#loc96)
              %53 = cir.unary(minus, %52) nsw : !s32i, !s32i loc(#loc96)
              %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc331)
              %55 = cir.ternary(%54, true {
                %56 = cir.const #true loc(#loc97)
                cir.yield %56 : !cir.bool loc(#loc97)
              }, false {
                %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc98)
                %57 = cir.const #cir.int<0> : !s32i loc(#loc99)
                %58 = cir.cmp(eq, %56, %57) : !s32i, !cir.bool loc(#loc332)
                %59 = cir.ternary(%58, true {
                  %60 = cir.const #true loc(#loc97)
                  cir.yield %60 : !cir.bool loc(#loc97)
                }, false {
                  %60 = cir.const #false loc(#loc97)
                  cir.yield %60 : !cir.bool loc(#loc97)
                }) : (!cir.bool) -> !cir.bool loc(#loc97)
                cir.yield %59 : !cir.bool loc(#loc97)
              }) : (!cir.bool) -> !cir.bool loc(#loc97)
              cir.if %55 {
                cir.break loc(#loc101)
              } loc(#loc333)
            } loc(#loc330)
            %44 = cir.const #cir.int<0> : !s32i loc(#loc102)
            %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc102)
            %46 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc103)
            %47 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc104)
            %48 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc104)
            cir.store %45, %48 : !s8i, !cir.ptr<!s8i> loc(#loc334)
            %49 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc105)
            %50 = cir.call @atoi(%49) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc106)
            cir.store %50, %0 : !s32i, !cir.ptr<!s32i> loc(#loc335)
          } loc(#loc312)
          cir.yield loc(#loc39)
        } while {
          %9 = cir.const #cir.int<0> : !s32i loc(#loc109)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc109)
          cir.condition(%10) loc(#loc109)
        } loc(#loc311)
      } loc(#loc311)
      cir.scope {
        %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc112)
        %10 = cir.const #cir.int<1> : !s32i loc(#loc113)
        %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc113)
        %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc337)
        cir.if %12 {
          %13 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc115)
          %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc116)
        } loc(#loc338)
      } loc(#loc336)
    } loc(#loc306)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc340)
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc341)
      %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc120)
      cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc340)
      %6 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc122)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc341)
      cir.scope {
        %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc343)
        %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc343)
        cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc343)
        cir.scope {
          %9 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc129)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc130)
          %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc345)
          cir.if %11 {
            %12 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc134)
            %13 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc135)
            %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc135)
            %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc135)
            cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc136)
          } else {
            %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc20)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc20)
            cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc137)
          } loc(#loc346)
        } loc(#loc344)
      } loc(#loc342)
    } loc(#loc339)
    cir.return loc(#loc22)
  } loc(#loc303)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_connect_socket_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc348)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc140)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc349)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc142)
    cir.return loc(#loc139)
  } loc(#loc347)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc351)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc148)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc149)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc352)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc151)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc353)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc355)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc356)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc156)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc355)
      %7 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc158)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc356)
      cir.scope {
        %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc358)
        %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc358)
        cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc358)
        cir.scope {
          %10 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc165)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc166)
          %12 = cir.cmp(ge, %10, %11) : !s32i, !cir.bool loc(#loc360)
          cir.if %12 {
            %13 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc170)
            %14 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc171)
            %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc171)
            %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc171)
            cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc172)
          } else {
            %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc173)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc173)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc174)
          } loc(#loc361)
        } loc(#loc359)
      } loc(#loc357)
    } loc(#loc354)
    cir.return loc(#loc145)
  } loc(#loc350)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc175)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc363)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc180)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc181)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc364)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc366)
      %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc367)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc368)
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc369)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc190)
      %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc190)
      cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc368)
      cir.scope {
        cir.do {
          cir.scope {
            %9 = cir.const #cir.int<2> : !s32i loc(#loc197)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc198)
            %11 = cir.const #cir.int<6> : !s32i loc(#loc199)
            %12 = cir.call @socket(%9, %10, %11) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc200)
            cir.store %12, %5 : !s32i, !cir.ptr<!s32i> loc(#loc372)
            cir.scope {
              %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc205)
              %52 = cir.const #cir.int<1> : !s32i loc(#loc206)
              %53 = cir.unary(minus, %52) nsw : !s32i, !s32i loc(#loc206)
              %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc374)
              cir.if %54 {
                cir.break loc(#loc208)
              } loc(#loc375)
            } loc(#loc373)
            %13 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc376)
            %14 = cir.const #cir.int<0> : !s32i loc(#loc211)
            %15 = cir.const #cir.int<16> : !u64i loc(#loc377)
            cir.libc.memset %15 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc378)
            %16 = cir.const #cir.int<2> : !s32i loc(#loc216)
            %17 = cir.cast(integral, %16 : !s32i), !u16i loc(#loc216)
            %18 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc62)
            cir.store %17, %18 : !u16i, !cir.ptr<!u16i> loc(#loc379)
            %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc218)
            %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc218)
            %21 = cir.call @inet_addr(%20) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc219)
            %22 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc65)
            %23 = cir.get_member %22[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc66)
            cir.store %21, %23 : !u32i, !cir.ptr<!u32i> loc(#loc380)
            %24 = cir.const #cir.int<27015> : !s32i loc(#loc222)
            %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc222)
            %26 = cir.call @htons(%25) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc223)
            %27 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
            cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc381)
            cir.scope {
              %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc228)
              %52 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc383)
              %53 = cir.const #cir.int<16> : !u64i loc(#loc384)
              %54 = cir.cast(integral, %53 : !u64i), !u32i loc(#loc384)
              %55 = cir.call @connect(%51, %52, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc233)
              %56 = cir.const #cir.int<1> : !s32i loc(#loc234)
              %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc234)
              %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc385)
              cir.if %58 {
                cir.break loc(#loc236)
              } loc(#loc386)
            } loc(#loc382)
            %28 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc237)
            %29 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc238)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc238)
            %31 = cir.const #cir.int<3> : !s32i loc(#loc239)
            %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc239)
            %33 = cir.const #cir.int<4> : !u64i loc(#loc239)
            %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc239)
            %35 = cir.const #cir.int<2> : !s32i loc(#loc239)
            %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc239)
            %37 = cir.binop(add, %34, %36) : !u64i loc(#loc239)
            %38 = cir.const #cir.int<1> : !s32i loc(#loc240)
            %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc240)
            %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc387)
            %41 = cir.const #cir.int<0> : !s32i loc(#loc241)
            %42 = cir.call @recv(%28, %30, %40, %41) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc242)
            %43 = cir.cast(integral, %42 : !s64i), !s32i loc(#loc242)
            cir.store %43, %3 : !s32i, !cir.ptr<!s32i> loc(#loc388)
            cir.scope {
              %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc247)
              %52 = cir.const #cir.int<1> : !s32i loc(#loc248)
              %53 = cir.unary(minus, %52) nsw : !s32i, !s32i loc(#loc248)
              %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc390)
              %55 = cir.ternary(%54, true {
                %56 = cir.const #true loc(#loc249)
                cir.yield %56 : !cir.bool loc(#loc249)
              }, false {
                %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc250)
                %57 = cir.const #cir.int<0> : !s32i loc(#loc251)
                %58 = cir.cmp(eq, %56, %57) : !s32i, !cir.bool loc(#loc391)
                %59 = cir.ternary(%58, true {
                  %60 = cir.const #true loc(#loc249)
                  cir.yield %60 : !cir.bool loc(#loc249)
                }, false {
                  %60 = cir.const #false loc(#loc249)
                  cir.yield %60 : !cir.bool loc(#loc249)
                }) : (!cir.bool) -> !cir.bool loc(#loc249)
                cir.yield %59 : !cir.bool loc(#loc249)
              }) : (!cir.bool) -> !cir.bool loc(#loc249)
              cir.if %55 {
                cir.break loc(#loc253)
              } loc(#loc392)
            } loc(#loc389)
            %44 = cir.const #cir.int<0> : !s32i loc(#loc254)
            %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc254)
            %46 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc255)
            %47 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc256)
            %48 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc256)
            cir.store %45, %48 : !s8i, !cir.ptr<!s8i> loc(#loc393)
            %49 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc257)
            %50 = cir.call @atoi(%49) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc258)
            cir.store %50, %0 : !s32i, !cir.ptr<!s32i> loc(#loc394)
          } loc(#loc371)
          cir.yield loc(#loc194)
        } while {
          %9 = cir.const #cir.int<0> : !s32i loc(#loc261)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc261)
          cir.condition(%10) loc(#loc261)
        } loc(#loc370)
      } loc(#loc370)
      cir.scope {
        %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc264)
        %10 = cir.const #cir.int<1> : !s32i loc(#loc265)
        %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc265)
        %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc396)
        cir.if %12 {
          %13 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc267)
          %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc268)
        } loc(#loc397)
      } loc(#loc395)
    } loc(#loc365)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc399)
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc400)
      %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc272)
      cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc399)
      %6 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc274)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc400)
      cir.scope {
        %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc402)
        %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc402)
        cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc402)
        cir.scope {
          %9 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc281)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc282)
          %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc404)
          %12 = cir.ternary(%11, true {
            %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc284)
            %14 = cir.const #cir.int<10> : !s32i loc(#loc285)
            %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc405)
            %16 = cir.ternary(%15, true {
              %17 = cir.const #true loc(#loc283)
              cir.yield %17 : !cir.bool loc(#loc283)
            }, false {
              %17 = cir.const #false loc(#loc283)
              cir.yield %17 : !cir.bool loc(#loc283)
            }) : (!cir.bool) -> !cir.bool loc(#loc283)
            cir.yield %16 : !cir.bool loc(#loc283)
          }, false {
            %13 = cir.const #false loc(#loc283)
            cir.yield %13 : !cir.bool loc(#loc283)
          }) : (!cir.bool) -> !cir.bool loc(#loc283)
          cir.if %12 {
            %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc290)
            %14 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc291)
            %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc291)
            %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc291)
            cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc292)
          } else {
            %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc175)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc175)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc293)
          } loc(#loc406)
        } loc(#loc403)
      } loc(#loc401)
    } loc(#loc398)
    cir.return loc(#loc177)
  } loc(#loc362)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_connect_socket_31.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":75:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":118:27)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":44:1)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":122:1)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":46:5)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":46:9)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":48:13)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":48:12)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":48:5)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":49:5)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":104:5)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":54:9)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":54:13)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":55:9)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":55:28)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":56:9)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":56:32)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":57:9)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":57:41)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":58:9)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":93:17)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":59:9)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":92:9)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":68:36)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":68:45)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":68:58)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":68:29)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":68:13)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":68:69)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":69:13)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":72:13)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":69:17)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":69:34)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":70:13)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":71:17)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":73:20)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":73:21)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":73:30)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":73:33)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":73:47)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":73:13)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":73:48)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":74:34)
#loc62 = loc("/usr/include/netinet/in.h":249:5)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":74:13)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":75:39)
#loc65 = loc("/usr/include/netinet/in.h":251:20)
#loc66 = loc("/usr/include/netinet/in.h":33:15)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":75:13)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":75:59)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":76:38)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":76:32)
#loc71 = loc("/usr/include/netinet/in.h":250:15)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":76:13)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":76:46)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":77:13)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":80:13)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":77:25)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":77:58)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":77:59)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":77:68)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":77:82)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":77:17)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":77:88)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":78:13)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":79:17)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":83:31)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":83:46)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":83:59)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":83:77)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":83:80)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":83:26)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":83:13)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":83:81)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":84:13)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":87:13)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":84:17)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":84:31)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":84:44)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":84:47)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":84:61)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":85:13)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":86:17)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":89:39)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":89:25)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":89:13)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":91:25)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":91:20)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":91:13)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":91:36)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":93:16)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":94:9)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":97:9)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":94:13)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":94:30)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":95:9)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":96:26)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":96:13)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":105:5)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":121:5)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":106:9)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":106:24)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":107:9)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":107:20)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":108:9)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":120:9)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":109:13)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":109:34)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":112:13)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":119:13)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":112:17)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":112:25)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":113:13)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":115:13)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":117:13)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":114:37)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":114:30)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":114:17)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":118:17)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":236:1)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":240:1)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":238:5)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":238:13)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":239:5)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":239:13)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":129:1)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":154:1)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":131:5)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":131:9)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":133:13)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":133:12)
#loc150 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":133:5)
#loc151 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":136:12)
#loc152 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":136:5)
#loc153 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":137:5)
#loc154 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":153:5)
#loc155 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":138:9)
#loc156 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":138:24)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":139:9)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":139:20)
#loc159 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":140:9)
#loc160 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":152:9)
#loc161 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":141:13)
#loc162 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":141:34)
#loc163 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":144:13)
#loc164 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":151:13)
#loc165 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":144:17)
#loc166 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":144:25)
#loc167 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":145:13)
#loc168 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":147:13)
#loc169 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":149:13)
#loc170 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":146:37)
#loc171 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":146:30)
#loc172 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":146:17)
#loc173 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":150:27)
#loc174 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":150:17)
#loc175 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":230:27)
#loc176 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":157:1)
#loc177 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":234:1)
#loc178 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":159:5)
#loc179 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":159:9)
#loc180 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":161:13)
#loc181 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":161:12)
#loc182 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":161:5)
#loc183 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":162:5)
#loc184 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":217:5)
#loc185 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":167:9)
#loc186 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":167:13)
#loc187 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":168:9)
#loc188 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":168:28)
#loc189 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":169:9)
#loc190 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":169:32)
#loc191 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":170:9)
#loc192 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":170:41)
#loc193 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":171:9)
#loc194 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":206:17)
#loc195 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":172:9)
#loc196 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":205:9)
#loc197 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":181:36)
#loc198 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":181:45)
#loc199 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":181:58)
#loc200 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":181:29)
#loc201 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":181:13)
#loc202 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":181:69)
#loc203 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":182:13)
#loc204 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":185:13)
#loc205 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":182:17)
#loc206 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":182:34)
#loc207 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":183:13)
#loc208 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":184:17)
#loc209 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":186:20)
#loc210 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":186:21)
#loc211 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":186:30)
#loc212 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":186:33)
#loc213 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":186:47)
#loc214 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":186:13)
#loc215 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":186:48)
#loc216 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":187:34)
#loc217 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":187:13)
#loc218 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":188:49)
#loc219 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":188:39)
#loc220 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":188:13)
#loc221 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":188:59)
#loc222 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":189:38)
#loc223 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":189:32)
#loc224 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":189:13)
#loc225 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":189:46)
#loc226 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":190:13)
#loc227 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":193:13)
#loc228 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":190:25)
#loc229 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":190:58)
#loc230 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":190:59)
#loc231 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":190:68)
#loc232 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":190:82)
#loc233 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":190:17)
#loc234 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":190:88)
#loc235 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":191:13)
#loc236 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":192:17)
#loc237 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":196:31)
#loc238 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":196:46)
#loc239 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":196:59)
#loc240 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":196:77)
#loc241 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":196:80)
#loc242 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":196:26)
#loc243 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":196:13)
#loc244 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":196:81)
#loc245 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":197:13)
#loc246 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":200:13)
#loc247 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":197:17)
#loc248 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":197:31)
#loc249 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":197:44)
#loc250 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":197:47)
#loc251 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":197:61)
#loc252 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":198:13)
#loc253 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":199:17)
#loc254 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":202:39)
#loc255 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":202:25)
#loc256 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":202:13)
#loc257 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":204:25)
#loc258 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":204:20)
#loc259 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":204:13)
#loc260 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":204:36)
#loc261 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":206:16)
#loc262 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":207:9)
#loc263 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":210:9)
#loc264 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":207:13)
#loc265 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":207:30)
#loc266 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":208:9)
#loc267 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":209:26)
#loc268 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":209:13)
#loc269 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":218:5)
#loc270 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":233:5)
#loc271 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":219:9)
#loc272 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":219:24)
#loc273 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":220:9)
#loc274 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":220:20)
#loc275 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":221:9)
#loc276 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":232:9)
#loc277 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":222:13)
#loc278 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":222:34)
#loc279 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":224:13)
#loc280 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":231:13)
#loc281 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":224:17)
#loc282 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":224:25)
#loc283 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":224:27)
#loc284 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":224:30)
#loc285 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":224:38)
#loc286 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":224:40)
#loc287 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":225:13)
#loc288 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":227:13)
#loc289 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":229:13)
#loc290 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":226:37)
#loc291 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":226:30)
#loc292 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":226:17)
#loc293 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_31.c":230:17)
#loc294 = loc(fused[#loc1, #loc2])
#loc295 = loc(fused[#loc3, #loc4])
#loc296 = loc(fused[#loc6, #loc7])
#loc297 = loc(fused[#loc8, #loc9])
#loc298 = loc(fused[#loc10, #loc11])
#loc299 = loc(fused[#loc12, #loc13])
#loc300 = loc(fused[#loc14, #loc15])
#loc301 = loc(fused[#loc16, #loc17])
#loc302 = loc(fused[#loc18, #loc19])
#loc303 = loc(fused[#loc21, #loc22])
#loc304 = loc(fused[#loc23, #loc24])
#loc305 = loc(fused[#loc27, #loc25])
#loc306 = loc(fused[#loc28, #loc29])
#loc307 = loc(fused[#loc30, #loc31])
#loc308 = loc(fused[#loc32, #loc33])
#loc309 = loc(fused[#loc34, #loc35])
#loc310 = loc(fused[#loc36, #loc37])
#loc311 = loc(fused[#loc38, #loc39])
#loc312 = loc(fused[#loc40, #loc41])
#loc313 = loc(fused[#loc46, #loc47])
#loc314 = loc(fused[#loc48, #loc49])
#loc315 = loc(fused[#loc50, #loc51])
#loc316 = loc(fused[#loc52, #loc49])
#loc317 = loc(fused[#loc54, #loc55])
#loc318 = loc(fused[#loc57, #loc58])
#loc319 = loc(fused[#loc59, #loc60])
#loc320 = loc(fused[#loc63, #loc61])
#loc321 = loc(fused[#loc67, #loc68])
#loc322 = loc(fused[#loc72, #loc73])
#loc323 = loc(fused[#loc74, #loc75])
#loc324 = loc(fused[#loc77, #loc78])
#loc325 = loc(fused[#loc79, #loc80])
#loc326 = loc(fused[#loc81, #loc82])
#loc327 = loc(fused[#loc83, #loc75])
#loc328 = loc(fused[#loc87, #loc88])
#loc329 = loc(fused[#loc91, #loc92])
#loc330 = loc(fused[#loc93, #loc94])
#loc331 = loc(fused[#loc95, #loc96])
#loc332 = loc(fused[#loc98, #loc99])
#loc333 = loc(fused[#loc100, #loc94])
#loc334 = loc(fused[#loc104, #loc102])
#loc335 = loc(fused[#loc107, #loc108])
#loc336 = loc(fused[#loc110, #loc111])
#loc337 = loc(fused[#loc112, #loc113])
#loc338 = loc(fused[#loc114, #loc111])
#loc339 = loc(fused[#loc117, #loc118])
#loc340 = loc(fused[#loc119, #loc120])
#loc341 = loc(fused[#loc121, #loc122])
#loc342 = loc(fused[#loc123, #loc124])
#loc343 = loc(fused[#loc125, #loc126])
#loc344 = loc(fused[#loc127, #loc128])
#loc345 = loc(fused[#loc129, #loc130])
#loc346 = loc(fused[#loc131, #loc132, #loc133, #loc128])
#loc347 = loc(fused[#loc138, #loc139])
#loc348 = loc(fused[#loc140, #loc141])
#loc349 = loc(fused[#loc142, #loc143])
#loc350 = loc(fused[#loc144, #loc145])
#loc351 = loc(fused[#loc146, #loc147])
#loc352 = loc(fused[#loc150, #loc148])
#loc353 = loc(fused[#loc152, #loc151])
#loc354 = loc(fused[#loc153, #loc154])
#loc355 = loc(fused[#loc155, #loc156])
#loc356 = loc(fused[#loc157, #loc158])
#loc357 = loc(fused[#loc159, #loc160])
#loc358 = loc(fused[#loc161, #loc162])
#loc359 = loc(fused[#loc163, #loc164])
#loc360 = loc(fused[#loc165, #loc166])
#loc361 = loc(fused[#loc167, #loc168, #loc169, #loc164])
#loc362 = loc(fused[#loc176, #loc177])
#loc363 = loc(fused[#loc178, #loc179])
#loc364 = loc(fused[#loc182, #loc180])
#loc365 = loc(fused[#loc183, #loc184])
#loc366 = loc(fused[#loc185, #loc186])
#loc367 = loc(fused[#loc187, #loc188])
#loc368 = loc(fused[#loc189, #loc190])
#loc369 = loc(fused[#loc191, #loc192])
#loc370 = loc(fused[#loc193, #loc194])
#loc371 = loc(fused[#loc195, #loc196])
#loc372 = loc(fused[#loc201, #loc202])
#loc373 = loc(fused[#loc203, #loc204])
#loc374 = loc(fused[#loc205, #loc206])
#loc375 = loc(fused[#loc207, #loc204])
#loc376 = loc(fused[#loc209, #loc210])
#loc377 = loc(fused[#loc212, #loc213])
#loc378 = loc(fused[#loc214, #loc215])
#loc379 = loc(fused[#loc217, #loc216])
#loc380 = loc(fused[#loc220, #loc221])
#loc381 = loc(fused[#loc224, #loc225])
#loc382 = loc(fused[#loc226, #loc227])
#loc383 = loc(fused[#loc229, #loc230])
#loc384 = loc(fused[#loc231, #loc232])
#loc385 = loc(fused[#loc233, #loc234])
#loc386 = loc(fused[#loc235, #loc227])
#loc387 = loc(fused[#loc239, #loc240])
#loc388 = loc(fused[#loc243, #loc244])
#loc389 = loc(fused[#loc245, #loc246])
#loc390 = loc(fused[#loc247, #loc248])
#loc391 = loc(fused[#loc250, #loc251])
#loc392 = loc(fused[#loc252, #loc246])
#loc393 = loc(fused[#loc256, #loc254])
#loc394 = loc(fused[#loc259, #loc260])
#loc395 = loc(fused[#loc262, #loc263])
#loc396 = loc(fused[#loc264, #loc265])
#loc397 = loc(fused[#loc266, #loc263])
#loc398 = loc(fused[#loc269, #loc270])
#loc399 = loc(fused[#loc271, #loc272])
#loc400 = loc(fused[#loc273, #loc274])
#loc401 = loc(fused[#loc275, #loc276])
#loc402 = loc(fused[#loc277, #loc278])
#loc403 = loc(fused[#loc279, #loc280])
#loc404 = loc(fused[#loc281, #loc282])
#loc405 = loc(fused[#loc284, #loc286])
#loc406 = loc(fused[#loc287, #loc288, #loc289, #loc280])
