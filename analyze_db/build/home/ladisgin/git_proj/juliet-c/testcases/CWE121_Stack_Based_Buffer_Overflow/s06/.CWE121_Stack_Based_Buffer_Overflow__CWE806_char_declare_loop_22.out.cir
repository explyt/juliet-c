!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":121:10)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":121:14)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":121:20)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":121:32)
#loc219 = loc(fused[#loc75, #loc76])
#loc220 = loc(fused[#loc77, #loc78])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global external dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22_badGlobal = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc189)
  cir.func private @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22_badSource(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc190)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc191)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc192)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc194)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc195)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc196)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc197)
    %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc198)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc20)
    cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc199)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %7 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22_badGlobal : !cir.ptr<!s32i> loc(#loc189)
    cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc200)
    %8 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %9 = cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22_badSource(%8) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc25)
    cir.store %9, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc201)
    cir.br ^bb1 loc(#loc202)
  ^bb1:  // pred: ^bb0
    %10 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc194)
    cir.store %10, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc194)
    %11 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc30)
    %12 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %13 = cir.call @strlen(%12) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc30)
    cir.store %13, %2 : !u64i, !cir.ptr<!u64i> loc(#loc203)
    cir.br ^bb2 loc(#loc204)
  ^bb2:  // pred: ^bb1
    %14 = cir.const #cir.int<0> : !s32i loc(#loc36)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc36)
    cir.store %15, %1 : !u64i, !cir.ptr<!u64i> loc(#loc205)
    cir.br ^bb3 loc(#loc204)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc38)
    %17 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc39)
    %18 = cir.cmp(lt, %16, %17) : !u64i, !cir.bool loc(#loc206)
    cir.brcond %18 ^bb4, ^bb8 loc(#loc40)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc207)
  ^bb5:  // pred: ^bb4
    %19 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc43)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %20 : !u64i), !cir.ptr<!s8i> loc(#loc44)
    %22 = cir.load %21 : !cir.ptr<!s8i>, !s8i loc(#loc42)
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc45)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc46)
    %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !u64i), !cir.ptr<!s8i> loc(#loc46)
    cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc208)
    cir.br ^bb6 loc(#loc35)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc35)
  ^bb7:  // pred: ^bb6
    %26 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc47)
    %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc48)
    cir.store %27, %1 : !u64i, !cir.ptr<!u64i> loc(#loc209)
    cir.br ^bb3 loc(#loc204)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc35)
  ^bb9:  // pred: ^bb8
    %28 = cir.const #cir.int<0> : !s32i loc(#loc49)
    %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc49)
    %30 = cir.const #cir.int<50> : !s32i loc(#loc50)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc50)
    %33 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc52)
    %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc52)
    cir.store %29, %34 : !s8i, !cir.ptr<!s8i> loc(#loc210)
    %35 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    cir.br ^bb10 loc(#loc29)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc10)
  } loc(#loc193)
  cir.global external dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22_goodG2B1Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc211)
  cir.global external dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22_goodG2B2Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc212)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc214)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc61)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc215)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc63)
    cir.return loc(#loc60)
  } loc(#loc213)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc216)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc217)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc71)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc72)
  cir.func @main(%arg0: !s32i loc(fused[#loc75, #loc76]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc77, #loc78])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc219)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc220)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc74)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc79)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc79)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc80)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc81)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc81)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc82)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc69)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22_good : !cir.ptr<!cir.func<!void ()>> loc(#loc221)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22_good() : () -> () loc(#loc84)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc70)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc71)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc222)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22_bad() : () -> () loc(#loc88)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc72)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc91)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc223)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc223)
    cir.return %17 : !s32i loc(#loc223)
  } loc(#loc218)
  cir.func private @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22_goodG2B1Source(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc224)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc226)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc227)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc228)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc229)
    %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc230)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc106)
    cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc231)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc108)
    %7 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22_goodG2B1Global : !cir.ptr<!s32i> loc(#loc211)
    cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc232)
    %8 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
    %9 = cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22_goodG2B1Source(%8) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc111)
    cir.store %9, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc233)
    cir.br ^bb1 loc(#loc234)
  ^bb1:  // pred: ^bb0
    %10 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc226)
    cir.store %10, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc226)
    %11 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc116)
    %12 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
    %13 = cir.call @strlen(%12) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc116)
    cir.store %13, %2 : !u64i, !cir.ptr<!u64i> loc(#loc235)
    cir.br ^bb2 loc(#loc236)
  ^bb2:  // pred: ^bb1
    %14 = cir.const #cir.int<0> : !s32i loc(#loc122)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc122)
    cir.store %15, %1 : !u64i, !cir.ptr<!u64i> loc(#loc237)
    cir.br ^bb3 loc(#loc236)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc124)
    %17 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc125)
    %18 = cir.cmp(lt, %16, %17) : !u64i, !cir.bool loc(#loc238)
    cir.brcond %18 ^bb4, ^bb8 loc(#loc126)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc239)
  ^bb5:  // pred: ^bb4
    %19 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc129)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %20 : !u64i), !cir.ptr<!s8i> loc(#loc130)
    %22 = cir.load %21 : !cir.ptr<!s8i>, !s8i loc(#loc128)
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc131)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc132)
    %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !u64i), !cir.ptr<!s8i> loc(#loc132)
    cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc240)
    cir.br ^bb6 loc(#loc121)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc121)
  ^bb7:  // pred: ^bb6
    %26 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc133)
    %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc134)
    cir.store %27, %1 : !u64i, !cir.ptr<!u64i> loc(#loc241)
    cir.br ^bb3 loc(#loc236)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc121)
  ^bb9:  // pred: ^bb8
    %28 = cir.const #cir.int<0> : !s32i loc(#loc135)
    %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc135)
    %30 = cir.const #cir.int<50> : !s32i loc(#loc136)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc137)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc136)
    %33 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc138)
    %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc138)
    cir.store %29, %34 : !s8i, !cir.ptr<!s8i> loc(#loc242)
    %35 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc140)
    cir.br ^bb10 loc(#loc115)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc96)
  } loc(#loc225)
  cir.func private @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22_goodG2B2Source(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc243)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc245)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc246)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc247)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc248)
    %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc249)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc154)
    cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc250)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc156)
    %7 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22_goodG2B2Global : !cir.ptr<!s32i> loc(#loc212)
    cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc251)
    %8 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
    %9 = cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22_goodG2B2Source(%8) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc159)
    cir.store %9, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc252)
    cir.br ^bb1 loc(#loc253)
  ^bb1:  // pred: ^bb0
    %10 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc245)
    cir.store %10, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc245)
    %11 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc164)
    %12 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
    %13 = cir.call @strlen(%12) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc164)
    cir.store %13, %2 : !u64i, !cir.ptr<!u64i> loc(#loc254)
    cir.br ^bb2 loc(#loc255)
  ^bb2:  // pred: ^bb1
    %14 = cir.const #cir.int<0> : !s32i loc(#loc170)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc170)
    cir.store %15, %1 : !u64i, !cir.ptr<!u64i> loc(#loc256)
    cir.br ^bb3 loc(#loc255)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc172)
    %17 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc173)
    %18 = cir.cmp(lt, %16, %17) : !u64i, !cir.bool loc(#loc257)
    cir.brcond %18 ^bb4, ^bb8 loc(#loc174)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc258)
  ^bb5:  // pred: ^bb4
    %19 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc177)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %20 : !u64i), !cir.ptr<!s8i> loc(#loc178)
    %22 = cir.load %21 : !cir.ptr<!s8i>, !s8i loc(#loc176)
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc179)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc180)
    %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !u64i), !cir.ptr<!s8i> loc(#loc180)
    cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc259)
    cir.br ^bb6 loc(#loc169)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc169)
  ^bb7:  // pred: ^bb6
    %26 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc181)
    %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc182)
    cir.store %27, %1 : !u64i, !cir.ptr<!u64i> loc(#loc260)
    cir.br ^bb3 loc(#loc255)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc169)
  ^bb9:  // pred: ^bb8
    %28 = cir.const #cir.int<0> : !s32i loc(#loc183)
    %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc183)
    %30 = cir.const #cir.int<50> : !s32i loc(#loc184)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc185)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc184)
    %33 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc186)
    %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc186)
    cir.store %29, %34 : !s8i, !cir.ptr<!s8i> loc(#loc261)
    %35 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc187)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc188)
    cir.br ^bb10 loc(#loc163)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc144)
  } loc(#loc244)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":24:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":24:81)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":26:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":26:93)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":28:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":47:1)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":36:9)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":36:25)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":37:9)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":37:16)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":37:19)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":30:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":30:12)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":31:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":31:24)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":32:12)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":32:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":33:81)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":33:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":34:86)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":34:12)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":34:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":34:90)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":35:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":46:5)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":38:19)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":38:26)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":38:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":38:30)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":40:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":43:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":40:18)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":40:14)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":40:21)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":40:25)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":40:23)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":41:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":42:23)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":42:28)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":42:29)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":42:18)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":42:13)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":40:35)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":40:34)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":44:22)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":44:14)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":44:17)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":44:9)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":45:19)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":45:9)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":54:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":54:86)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":55:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":55:86)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":105:1)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":109:1)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":107:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":107:14)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":108:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":108:14)
#loc65 = loc("/usr/include/stdlib.h":575:1)
#loc66 = loc("/usr/include/stdlib.h":575:41)
#loc67 = loc("/usr/include/time.h":76:1)
#loc68 = loc("/usr/include/time.h":76:38)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":126:15)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":128:15)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":131:15)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":133:15)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":121:1)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":136:1)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":122:1)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":124:27)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":124:22)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":124:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":126:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":127:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":127:74)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":128:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":131:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":132:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":132:73)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":133:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":135:12)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":135:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":58:1)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":58:98)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":60:1)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":79:1)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":68:9)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":68:25)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":69:9)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":69:16)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":69:19)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":62:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":62:12)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":63:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":63:24)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":64:12)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":64:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":65:86)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":65:5)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":66:91)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":66:12)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":66:5)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":66:95)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":67:5)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":78:5)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":70:19)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":70:26)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":70:9)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":70:30)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":72:9)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":75:9)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":72:18)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":72:14)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":72:21)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":72:25)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":72:23)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":73:9)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":74:23)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":74:28)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":74:29)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":74:18)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":74:13)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":72:35)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":72:34)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":76:22)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":76:14)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":76:17)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":76:9)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":77:19)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":77:9)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":82:1)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":82:98)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":84:1)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":103:1)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":92:9)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":92:25)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":93:9)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":93:16)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":93:19)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":86:5)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":86:12)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":87:5)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":87:24)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":88:12)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":88:5)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":89:86)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":89:5)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":90:91)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":90:12)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":90:5)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":90:95)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":91:5)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":102:5)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":94:19)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":94:26)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":94:9)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":94:30)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":96:9)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":99:9)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":96:18)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":96:14)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":96:21)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":96:25)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":96:23)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":97:9)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":98:23)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":98:28)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":98:29)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":98:18)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":98:13)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":96:35)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":96:34)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":100:22)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":100:14)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":100:17)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":100:9)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":101:19)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_22a.c":101:9)
#loc189 = loc(fused[#loc1, #loc2])
#loc190 = loc(fused[#loc3, #loc4])
#loc191 = loc(fused[#loc5, #loc6])
#loc192 = loc(fused[#loc7, #loc8])
#loc193 = loc(fused[#loc9, #loc10])
#loc194 = loc(fused[#loc11, #loc12])
#loc195 = loc(fused[#loc13, #loc14])
#loc196 = loc(fused[#loc13, #loc15])
#loc197 = loc(fused[#loc16, #loc17])
#loc198 = loc(fused[#loc18, #loc19])
#loc199 = loc(fused[#loc21, #loc20])
#loc200 = loc(fused[#loc23, #loc22])
#loc201 = loc(fused[#loc26, #loc27])
#loc202 = loc(fused[#loc28, #loc29])
#loc203 = loc(fused[#loc32, #loc33])
#loc204 = loc(fused[#loc34, #loc35])
#loc205 = loc(fused[#loc37, #loc36])
#loc206 = loc(fused[#loc38, #loc39])
#loc207 = loc(fused[#loc41, #loc35])
#loc208 = loc(fused[#loc46, #loc44])
#loc209 = loc(fused[#loc48, #loc47])
#loc210 = loc(fused[#loc52, #loc49])
#loc211 = loc(fused[#loc55, #loc56])
#loc212 = loc(fused[#loc57, #loc58])
#loc213 = loc(fused[#loc59, #loc60])
#loc214 = loc(fused[#loc61, #loc62])
#loc215 = loc(fused[#loc63, #loc64])
#loc216 = loc(fused[#loc65, #loc66])
#loc217 = loc(fused[#loc67, #loc68])
#loc218 = loc(fused[#loc73, #loc74])
#loc221 = loc(fused[#loc84, #loc85])
#loc222 = loc(fused[#loc88, #loc89])
#loc223 = loc(fused[#loc92, #loc91])
#loc224 = loc(fused[#loc93, #loc94])
#loc225 = loc(fused[#loc95, #loc96])
#loc226 = loc(fused[#loc97, #loc98])
#loc227 = loc(fused[#loc99, #loc100])
#loc228 = loc(fused[#loc99, #loc101])
#loc229 = loc(fused[#loc102, #loc103])
#loc230 = loc(fused[#loc104, #loc105])
#loc231 = loc(fused[#loc107, #loc106])
#loc232 = loc(fused[#loc109, #loc108])
#loc233 = loc(fused[#loc112, #loc113])
#loc234 = loc(fused[#loc114, #loc115])
#loc235 = loc(fused[#loc118, #loc119])
#loc236 = loc(fused[#loc120, #loc121])
#loc237 = loc(fused[#loc123, #loc122])
#loc238 = loc(fused[#loc124, #loc125])
#loc239 = loc(fused[#loc127, #loc121])
#loc240 = loc(fused[#loc132, #loc130])
#loc241 = loc(fused[#loc134, #loc133])
#loc242 = loc(fused[#loc138, #loc135])
#loc243 = loc(fused[#loc141, #loc142])
#loc244 = loc(fused[#loc143, #loc144])
#loc245 = loc(fused[#loc145, #loc146])
#loc246 = loc(fused[#loc147, #loc148])
#loc247 = loc(fused[#loc147, #loc149])
#loc248 = loc(fused[#loc150, #loc151])
#loc249 = loc(fused[#loc152, #loc153])
#loc250 = loc(fused[#loc155, #loc154])
#loc251 = loc(fused[#loc157, #loc156])
#loc252 = loc(fused[#loc160, #loc161])
#loc253 = loc(fused[#loc162, #loc163])
#loc254 = loc(fused[#loc166, #loc167])
#loc255 = loc(fused[#loc168, #loc169])
#loc256 = loc(fused[#loc171, #loc170])
#loc257 = loc(fused[#loc172, #loc173])
#loc258 = loc(fused[#loc175, #loc169])
#loc259 = loc(fused[#loc180, #loc178])
#loc260 = loc(fused[#loc182, #loc181])
#loc261 = loc(fused[#loc186, #loc183])
