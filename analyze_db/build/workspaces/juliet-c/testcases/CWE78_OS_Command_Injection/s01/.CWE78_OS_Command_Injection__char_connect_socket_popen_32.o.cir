!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc128 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":105:48)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_popen_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc238)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_connect_socket_popen_32_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc239)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc240)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc241)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc242)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc11)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc243)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc244)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc245)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc246)
  cir.func private @close(!s32i) -> !s32i loc(#loc247)
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc248)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc24)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc249)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_popen_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc251)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc252)
    %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc253)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc254)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc255)
    %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc256)
    %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc257)
    %7 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc258)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc259)
    %9 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc260)
    %10 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc261)
    %11 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc239)
    cir.store %8, %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc260)
    cir.store %8, %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc261)
    %12 = cir.get_global @__const.CWE78_OS_Command_Injection__char_connect_socket_popen_32_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc239)
    cir.copy %12 to %11 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc239)
    %13 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc51)
    cir.store %13, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc262)
    cir.br ^bb1 loc(#loc263)
  ^bb1:  // pred: ^bb0
    %14 = cir.load deref %9 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc30)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    cir.store %15, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc251)
    cir.br ^bb2 loc(#loc264)
  ^bb2:  // pred: ^bb1
    %16 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc38)
    cir.store %17, %4 : !s32i, !cir.ptr<!s32i> loc(#loc255)
    %18 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc58)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
    %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc58)
    cir.store %20, %5 : !u64i, !cir.ptr<!u64i> loc(#loc256)
    cir.br ^bb3 loc(#loc265)
  ^bb3:  // pred: ^bb2
    cir.br ^bb5 loc(#loc265)
  ^bb4:  // pred: ^bb35
    %21 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc62)
    cir.brcond %22 ^bb5, ^bb36 loc(#loc62)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc266)
  ^bb6:  // pred: ^bb5
    %23 = cir.const #cir.int<2> : !s32i loc(#loc65)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc66)
    %25 = cir.const #cir.int<6> : !s32i loc(#loc67)
    %26 = cir.call @socket(%23, %24, %25) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc68)
    cir.store %26, %4 : !s32i, !cir.ptr<!s32i> loc(#loc267)
    cir.br ^bb7 loc(#loc268)
  ^bb7:  // pred: ^bb6
    %27 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc73)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc74)
    %29 = cir.unary(minus, %28) nsw : !s32i, !s32i loc(#loc74)
    %30 = cir.cmp(eq, %27, %29) : !s32i, !cir.bool loc(#loc269)
    cir.brcond %30 ^bb8, ^bb9 loc(#loc270)
  ^bb8:  // pred: ^bb7
    cir.br ^bb36 loc(#loc76)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc72)
  ^bb10:  // pred: ^bb9
    %31 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc271)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc79)
    %33 = cir.const #cir.int<16> : !u64i loc(#loc272)
    cir.libc.memset %33 bytes from %31 set to %32 : !cir.ptr<!void>, !s32i, !u64i loc(#loc273)
    %34 = cir.const #cir.int<2> : !s32i loc(#loc84)
    %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc84)
    %36 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
    cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc274)
    %37 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc11)
    %38 = cir.cast(array_to_ptrdecay, %37 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc11)
    %39 = cir.call @inet_addr(%38) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc87)
    %40 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc88)
    %41 = cir.get_member %40[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc89)
    cir.store %39, %41 : !u32i, !cir.ptr<!u32i> loc(#loc275)
    %42 = cir.const #cir.int<27015> : !s32i loc(#loc92)
    %43 = cir.cast(integral, %42 : !s32i), !u16i loc(#loc92)
    %44 = cir.call @htons(%43) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc93)
    %45 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc94)
    cir.store %44, %45 : !u16i, !cir.ptr<!u16i> loc(#loc276)
    cir.br ^bb11 loc(#loc277)
  ^bb11:  // pred: ^bb10
    %46 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %47 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc278)
    %48 = cir.const #cir.int<16> : !u64i loc(#loc279)
    %49 = cir.cast(integral, %48 : !u64i), !u32i loc(#loc279)
    %50 = cir.call @connect(%46, %47, %49) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc104)
    %51 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %52 = cir.unary(minus, %51) nsw : !s32i, !s32i loc(#loc105)
    %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc280)
    cir.brcond %53 ^bb12, ^bb13 loc(#loc281)
  ^bb12:  // pred: ^bb11
    cir.br ^bb36 loc(#loc107)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc98)
  ^bb14:  // pred: ^bb13
    %54 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc108)
    %55 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
    %56 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc110)
    %57 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %56 : !u64i), !cir.ptr<!s8i> loc(#loc111)
    %58 = cir.cast(bitcast, %57 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc282)
    %59 = cir.const #cir.int<1> : !u64i loc(#loc283)
    %60 = cir.const #cir.int<100> : !s32i loc(#loc116)
    %61 = cir.cast(integral, %60 : !s32i), !u64i loc(#loc116)
    %62 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc117)
    %63 = cir.binop(sub, %61, %62) : !u64i loc(#loc284)
    %64 = cir.const #cir.int<1> : !s32i loc(#loc118)
    %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc118)
    %66 = cir.binop(sub, %63, %65) : !u64i loc(#loc285)
    %67 = cir.binop(mul, %59, %66) : !u64i loc(#loc286)
    %68 = cir.const #cir.int<0> : !s32i loc(#loc120)
    %69 = cir.call @recv(%54, %58, %67, %68) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc121)
    %70 = cir.cast(integral, %69 : !s64i), !s32i loc(#loc121)
    cir.store %70, %1 : !s32i, !cir.ptr<!s32i> loc(#loc287)
    cir.br ^bb15 loc(#loc288)
  ^bb15:  // pred: ^bb14
    %71 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    %72 = cir.const #cir.int<1> : !s32i loc(#loc127)
    %73 = cir.unary(minus, %72) nsw : !s32i, !s32i loc(#loc127)
    %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc289)
    cir.brcond %74 ^bb16, ^bb17 loc(#loc128)
  ^bb16:  // pred: ^bb15
    %75 = cir.const #true loc(#loc128)
    cir.br ^bb22(%75 : !cir.bool) loc(#loc128)
  ^bb17:  // pred: ^bb15
    %76 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    %77 = cir.const #cir.int<0> : !s32i loc(#loc130)
    %78 = cir.cmp(eq, %76, %77) : !s32i, !cir.bool loc(#loc290)
    cir.brcond %78 ^bb18, ^bb19 loc(#loc128)
  ^bb18:  // pred: ^bb17
    %79 = cir.const #true loc(#loc128)
    cir.br ^bb20(%79 : !cir.bool) loc(#loc128)
  ^bb19:  // pred: ^bb17
    %80 = cir.const #false loc(#loc128)
    cir.br ^bb20(%80 : !cir.bool) loc(#loc128)
  ^bb20(%81: !cir.bool loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":105:48)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc128)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22(%81 : !cir.bool) loc(#loc128)
  ^bb22(%82: !cir.bool loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":105:48)):  // 2 preds: ^bb16, ^bb21
    cir.br ^bb23 loc(#loc128)
  ^bb23:  // pred: ^bb22
    cir.brcond %82 ^bb24, ^bb25 loc(#loc291)
  ^bb24:  // pred: ^bb23
    cir.br ^bb36 loc(#loc132)
  ^bb25:  // pred: ^bb23
    cir.br ^bb26 loc(#loc125)
  ^bb26:  // pred: ^bb25
    %83 = cir.const #cir.int<0> : !s32i loc(#loc133)
    %84 = cir.cast(integral, %83 : !s32i), !s8i loc(#loc133)
    %85 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
    %86 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc135)
    %87 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc136)
    %88 = cir.cast(integral, %87 : !s32i), !u64i loc(#loc136)
    %89 = cir.const #cir.int<1> : !u64i loc(#loc292)
    %90 = cir.binop(div, %88, %89) : !u64i loc(#loc293)
    %91 = cir.binop(add, %86, %90) : !u64i loc(#loc294)
    %92 = cir.ptr_stride(%85 : !cir.ptr<!s8i>, %91 : !u64i), !cir.ptr<!s8i> loc(#loc139)
    cir.store %84, %92 : !s8i, !cir.ptr<!s8i> loc(#loc295)
    %93 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
    %94 = cir.const #cir.int<13> : !s32i loc(#loc141)
    %95 = cir.call @strchr(%93, %94) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc142)
    cir.store %95, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc296)
    cir.br ^bb27 loc(#loc297)
  ^bb27:  // pred: ^bb26
    %96 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
    %97 = cir.cast(ptr_to_bool, %96 : !cir.ptr<!s8i>), !cir.bool loc(#loc147)
    cir.brcond %97 ^bb28, ^bb29 loc(#loc298)
  ^bb28:  // pred: ^bb27
    %98 = cir.const #cir.int<0> : !s32i loc(#loc149)
    %99 = cir.cast(integral, %98 : !s32i), !s8i loc(#loc149)
    %100 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
    cir.store %99, %100 : !s8i, !cir.ptr<!s8i> loc(#loc299)
    cir.br ^bb29 loc(#loc146)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc146)
  ^bb30:  // pred: ^bb29
    %101 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
    %102 = cir.const #cir.int<10> : !s32i loc(#loc153)
    %103 = cir.call @strchr(%101, %102) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc154)
    cir.store %103, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc300)
    cir.br ^bb31 loc(#loc301)
  ^bb31:  // pred: ^bb30
    %104 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
    %105 = cir.cast(ptr_to_bool, %104 : !cir.ptr<!s8i>), !cir.bool loc(#loc159)
    cir.brcond %105 ^bb32, ^bb33 loc(#loc302)
  ^bb32:  // pred: ^bb31
    %106 = cir.const #cir.int<0> : !s32i loc(#loc161)
    %107 = cir.cast(integral, %106 : !s32i), !s8i loc(#loc161)
    %108 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
    cir.store %107, %108 : !s8i, !cir.ptr<!s8i> loc(#loc303)
    cir.br ^bb33 loc(#loc158)
  ^bb33:  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc158)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc64)
  ^bb35:  // pred: ^bb34
    cir.br ^bb4 loc(#loc61)
  ^bb36:  // 4 preds: ^bb4, ^bb8, ^bb12, ^bb24
    cir.br ^bb37 loc(#loc61)
  ^bb37:  // pred: ^bb36
    cir.br ^bb38 loc(#loc304)
  ^bb38:  // pred: ^bb37
    %109 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    %110 = cir.const #cir.int<1> : !s32i loc(#loc167)
    %111 = cir.unary(minus, %110) nsw : !s32i, !s32i loc(#loc167)
    %112 = cir.cmp(ne, %109, %111) : !s32i, !cir.bool loc(#loc305)
    cir.brcond %112 ^bb39, ^bb40 loc(#loc306)
  ^bb39:  // pred: ^bb38
    %113 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc169)
    %114 = cir.call @close(%113) : (!s32i) -> !s32i loc(#loc170)
    cir.br ^bb40 loc(#loc165)
  ^bb40:  // 2 preds: ^bb38, ^bb39
    cir.br ^bb41 loc(#loc165)
  ^bb41:  // pred: ^bb40
    cir.br ^bb42 loc(#loc57)
  ^bb42:  // pred: ^bb41
    %115 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc171)
    %116 = cir.load deref %9 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc172)
    cir.store %115, %116 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc307)
    cir.br ^bb43 loc(#loc54)
  ^bb43:  // pred: ^bb42
    cir.br ^bb44 loc(#loc308)
  ^bb44:  // pred: ^bb43
    %117 = cir.load deref %10 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc42)
    %118 = cir.load %117 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
    cir.store %118, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc257)
    cir.br ^bb45 loc(#loc309)
  ^bb45:  // pred: ^bb44
    %119 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
    %120 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc24)
    %121 = cir.cast(array_to_ptrdecay, %120 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc24)
    %122 = cir.call @popen(%119, %121) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc180)
    cir.store %122, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc310)
    cir.br ^bb46 loc(#loc311)
  ^bb46:  // pred: ^bb45
    %123 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc185)
    %124 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc186)
    %125 = cir.cast(bitcast, %124 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc186)
    %126 = cir.cmp(ne, %123, %125) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc312)
    cir.brcond %126 ^bb47, ^bb48 loc(#loc313)
  ^bb47:  // pred: ^bb46
    %127 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc188)
    %128 = cir.call @pclose(%127) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc189)
    cir.br ^bb48 loc(#loc184)
  ^bb48:  // 2 preds: ^bb46, ^bb47
    cir.br ^bb49 loc(#loc184)
  ^bb49:  // pred: ^bb48
    cir.br ^bb50 loc(#loc178)
  ^bb50:  // pred: ^bb49
    cir.br ^bb51 loc(#loc175)
  ^bb51:  // pred: ^bb50
    cir.return loc(#loc28)
  } loc(#loc250)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_popen_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc315)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc192)
    cir.return loc(#loc191)
  } loc(#loc314)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc316)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc196)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc318)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc319)
    %2 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc320)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc321)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc322)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc323)
    %6 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc238)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc322)
    cir.store %3, %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc323)
    %7 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc238)
    cir.copy %7 to %6 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc238)
    %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc211)
    cir.store %8, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc324)
    cir.br ^bb1 loc(#loc325)
  ^bb1:  // pred: ^bb0
    %9 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc200)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc215)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc318)
    %11 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc216)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc217)
    %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc196)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc196)
    %15 = cir.call @strcat(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc216)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc218)
    %17 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc219)
    cir.store %16, %17 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc326)
    cir.br ^bb2 loc(#loc214)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc327)
  ^bb3:  // pred: ^bb2
    %18 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc202)
    %19 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc223)
    cir.store %19, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc319)
    cir.br ^bb4 loc(#loc328)
  ^bb4:  // pred: ^bb3
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc226)
    %21 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc227)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc227)
    %23 = cir.call @popen(%20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc228)
    cir.store %23, %2 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc329)
    cir.br ^bb5 loc(#loc330)
  ^bb5:  // pred: ^bb4
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc233)
    %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc234)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc234)
    %27 = cir.cmp(ne, %24, %26) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc331)
    cir.brcond %27 ^bb6, ^bb7 loc(#loc332)
  ^bb6:  // pred: ^bb5
    %28 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc236)
    %29 = cir.call @pclose(%28) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc237)
    cir.br ^bb7 loc(#loc232)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc232)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc225)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc222)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc198)
  } loc(#loc317)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":161:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":161:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":64:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":64:26)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc9 = loc("/usr/include/arpa/inet.h":34:1)
#loc10 = loc("/usr/include/arpa/inet.h":34:47)
#loc11 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":95:53)
#loc12 = loc("/usr/include/netinet/in.h":402:1)
#loc13 = loc("/usr/include/netinet/in.h":403:40)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc15 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc17 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc18 = loc("/usr/include/string.h":246:1)
#loc19 = loc("/usr/include/string.h":247:33)
#loc20 = loc("/usr/include/unistd.h":358:1)
#loc21 = loc("/usr/include/unistd.h":358:27)
#loc22 = loc("/usr/include/stdio.h":903:1)
#loc23 = loc("/usr/include/stdio.h":904:3)
#loc24 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":142:32)
#loc25 = loc("/usr/include/stdio.h":897:1)
#loc26 = loc("/usr/include/stdio.h":897:36)
#loc27 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":59:1)
#loc28 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":149:1)
#loc29 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":67:9)
#loc30 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":67:24)
#loc31 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":73:13)
#loc32 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":73:17)
#loc33 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":74:13)
#loc34 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":74:32)
#loc35 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":75:13)
#loc36 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":75:19)
#loc37 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":76:13)
#loc38 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":76:36)
#loc39 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":77:13)
#loc40 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":77:41)
#loc41 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":138:9)
#loc42 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":138:24)
#loc43 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":140:13)
#loc44 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":140:19)
#loc45 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":61:5)
#loc46 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":61:12)
#loc47 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":62:5)
#loc48 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":62:25)
#loc49 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":63:5)
#loc50 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":63:25)
#loc51 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":65:12)
#loc52 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":65:5)
#loc53 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":66:5)
#loc54 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":136:5)
#loc55 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":67:23)
#loc56 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":68:9)
#loc57 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":134:9)
#loc58 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":77:30)
#loc59 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":77:37)
#loc60 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":78:13)
#loc61 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":123:21)
#loc62 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":123:20)
#loc63 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":79:13)
#loc64 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":122:13)
#loc65 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":88:40)
#loc66 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":88:49)
#loc67 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":88:62)
#loc68 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":88:33)
#loc69 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":88:17)
#loc70 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":88:73)
#loc71 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":89:17)
#loc72 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":92:17)
#loc73 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":89:21)
#loc74 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":89:38)
#loc75 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":90:17)
#loc76 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":91:21)
#loc77 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":93:24)
#loc78 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":93:25)
#loc79 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":93:34)
#loc80 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":93:37)
#loc81 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":93:51)
#loc82 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":93:17)
#loc83 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":93:52)
#loc84 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":94:38)
#loc85 = loc("/usr/include/netinet/in.h":249:5)
#loc86 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":94:17)
#loc87 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":95:43)
#loc88 = loc("/usr/include/netinet/in.h":251:20)
#loc89 = loc("/usr/include/netinet/in.h":33:15)
#loc90 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":95:17)
#loc91 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":95:63)
#loc92 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":96:42)
#loc93 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":96:36)
#loc94 = loc("/usr/include/netinet/in.h":250:15)
#loc95 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":96:17)
#loc96 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":96:50)
#loc97 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":97:17)
#loc98 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":100:17)
#loc99 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":97:29)
#loc100 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":97:62)
#loc101 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":97:63)
#loc102 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":97:72)
#loc103 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":97:86)
#loc104 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":97:21)
#loc105 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":97:92)
#loc106 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":98:17)
#loc107 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":99:21)
#loc108 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:35)
#loc109 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:59)
#loc110 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:66)
#loc111 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:64)
#loc112 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:50)
#loc113 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:73)
#loc114 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:76)
#loc115 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:87)
#loc116 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:92)
#loc117 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:98)
#loc118 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:108)
#loc119 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:109)
#loc120 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:112)
#loc121 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:30)
#loc122 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:17)
#loc123 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:113)
#loc124 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":105:17)
#loc125 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":108:17)
#loc126 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":105:21)
#loc127 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":105:35)
#loc129 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":105:51)
#loc130 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":105:65)
#loc131 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":106:17)
#loc132 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":107:21)
#loc133 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":110:61)
#loc134 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":110:17)
#loc135 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":110:22)
#loc136 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":110:32)
#loc137 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":110:45)
#loc138 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":110:56)
#loc139 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":110:57)
#loc140 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":112:34)
#loc141 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":112:40)
#loc142 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":112:27)
#loc143 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":112:17)
#loc144 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":112:44)
#loc145 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":113:17)
#loc146 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":116:17)
#loc147 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":113:21)
#loc148 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":114:17)
#loc149 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":115:32)
#loc150 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":115:22)
#loc151 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":115:21)
#loc152 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":117:34)
#loc153 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":117:40)
#loc154 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":117:27)
#loc155 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":117:17)
#loc156 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":117:44)
#loc157 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":118:17)
#loc158 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":121:17)
#loc159 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":118:21)
#loc160 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":119:17)
#loc161 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":120:32)
#loc162 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":120:22)
#loc163 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":120:21)
#loc164 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":124:13)
#loc165 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":127:13)
#loc166 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":124:17)
#loc167 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":124:34)
#loc168 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":125:13)
#loc169 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":126:30)
#loc170 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":126:17)
#loc171 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":135:21)
#loc172 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":135:10)
#loc173 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":135:9)
#loc174 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":137:5)
#loc175 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":148:5)
#loc176 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":138:23)
#loc177 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":139:9)
#loc178 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":147:9)
#loc179 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":142:26)
#loc180 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":142:20)
#loc181 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":142:13)
#loc182 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":142:35)
#loc183 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":143:13)
#loc184 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":146:13)
#loc185 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":143:17)
#loc186 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":143:25)
#loc187 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":144:13)
#loc188 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":145:24)
#loc189 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":145:17)
#loc190 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":183:1)
#loc191 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":186:1)
#loc192 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":185:5)
#loc193 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":185:13)
#loc194 = loc("/usr/include/string.h":149:1)
#loc195 = loc("/usr/include/string.h":150:14)
#loc196 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":166:22)
#loc197 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":156:1)
#loc198 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":181:1)
#loc199 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":164:9)
#loc200 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":164:24)
#loc201 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":170:9)
#loc202 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":170:24)
#loc203 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":172:13)
#loc204 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":172:19)
#loc205 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":158:5)
#loc206 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":158:12)
#loc207 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":159:5)
#loc208 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":159:25)
#loc209 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":160:5)
#loc210 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":160:25)
#loc211 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":162:12)
#loc212 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":162:5)
#loc213 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":163:5)
#loc214 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":168:5)
#loc215 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":164:23)
#loc216 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":166:9)
#loc217 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":166:16)
#loc218 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":167:21)
#loc219 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":167:10)
#loc220 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":167:9)
#loc221 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":169:5)
#loc222 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":180:5)
#loc223 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":170:23)
#loc224 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":171:9)
#loc225 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":179:9)
#loc226 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":174:26)
#loc227 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":174:32)
#loc228 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":174:20)
#loc229 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":174:13)
#loc230 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":174:35)
#loc231 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":175:13)
#loc232 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":178:13)
#loc233 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":175:17)
#loc234 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":175:25)
#loc235 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":176:13)
#loc236 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":177:24)
#loc237 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":177:17)
#loc238 = loc(fused[#loc1, #loc2])
#loc239 = loc(fused[#loc3, #loc4])
#loc240 = loc(fused[#loc5, #loc6])
#loc241 = loc(fused[#loc7, #loc8])
#loc242 = loc(fused[#loc9, #loc10])
#loc243 = loc(fused[#loc12, #loc13])
#loc244 = loc(fused[#loc14, #loc15])
#loc245 = loc(fused[#loc16, #loc17])
#loc246 = loc(fused[#loc18, #loc19])
#loc247 = loc(fused[#loc20, #loc21])
#loc248 = loc(fused[#loc22, #loc23])
#loc249 = loc(fused[#loc25, #loc26])
#loc250 = loc(fused[#loc27, #loc28])
#loc251 = loc(fused[#loc29, #loc30])
#loc252 = loc(fused[#loc31, #loc32])
#loc253 = loc(fused[#loc33, #loc34])
#loc254 = loc(fused[#loc35, #loc36])
#loc255 = loc(fused[#loc37, #loc38])
#loc256 = loc(fused[#loc39, #loc40])
#loc257 = loc(fused[#loc41, #loc42])
#loc258 = loc(fused[#loc43, #loc44])
#loc259 = loc(fused[#loc45, #loc46])
#loc260 = loc(fused[#loc47, #loc48])
#loc261 = loc(fused[#loc49, #loc50])
#loc262 = loc(fused[#loc52, #loc51])
#loc263 = loc(fused[#loc53, #loc54])
#loc264 = loc(fused[#loc56, #loc57])
#loc265 = loc(fused[#loc60, #loc61])
#loc266 = loc(fused[#loc63, #loc64])
#loc267 = loc(fused[#loc69, #loc70])
#loc268 = loc(fused[#loc71, #loc72])
#loc269 = loc(fused[#loc73, #loc74])
#loc270 = loc(fused[#loc75, #loc72])
#loc271 = loc(fused[#loc77, #loc78])
#loc272 = loc(fused[#loc80, #loc81])
#loc273 = loc(fused[#loc82, #loc83])
#loc274 = loc(fused[#loc86, #loc84])
#loc275 = loc(fused[#loc90, #loc91])
#loc276 = loc(fused[#loc95, #loc96])
#loc277 = loc(fused[#loc97, #loc98])
#loc278 = loc(fused[#loc100, #loc101])
#loc279 = loc(fused[#loc102, #loc103])
#loc280 = loc(fused[#loc104, #loc105])
#loc281 = loc(fused[#loc106, #loc98])
#loc282 = loc(fused[#loc112, #loc113])
#loc283 = loc(fused[#loc114, #loc115])
#loc284 = loc(fused[#loc116, #loc117])
#loc285 = loc(fused[#loc116, #loc118])
#loc286 = loc(fused[#loc114, #loc119])
#loc287 = loc(fused[#loc122, #loc123])
#loc288 = loc(fused[#loc124, #loc125])
#loc289 = loc(fused[#loc126, #loc127])
#loc290 = loc(fused[#loc129, #loc130])
#loc291 = loc(fused[#loc131, #loc125])
#loc292 = loc(fused[#loc137, #loc138])
#loc293 = loc(fused[#loc136, #loc138])
#loc294 = loc(fused[#loc135, #loc138])
#loc295 = loc(fused[#loc134, #loc133])
#loc296 = loc(fused[#loc143, #loc144])
#loc297 = loc(fused[#loc145, #loc146])
#loc298 = loc(fused[#loc148, #loc146])
#loc299 = loc(fused[#loc151, #loc149])
#loc300 = loc(fused[#loc155, #loc156])
#loc301 = loc(fused[#loc157, #loc158])
#loc302 = loc(fused[#loc160, #loc158])
#loc303 = loc(fused[#loc163, #loc161])
#loc304 = loc(fused[#loc164, #loc165])
#loc305 = loc(fused[#loc166, #loc167])
#loc306 = loc(fused[#loc168, #loc165])
#loc307 = loc(fused[#loc173, #loc171])
#loc308 = loc(fused[#loc174, #loc175])
#loc309 = loc(fused[#loc177, #loc178])
#loc310 = loc(fused[#loc181, #loc182])
#loc311 = loc(fused[#loc183, #loc184])
#loc312 = loc(fused[#loc185, #loc186])
#loc313 = loc(fused[#loc187, #loc184])
#loc314 = loc(fused[#loc190, #loc191])
#loc315 = loc(fused[#loc192, #loc193])
#loc316 = loc(fused[#loc194, #loc195])
#loc317 = loc(fused[#loc197, #loc198])
#loc318 = loc(fused[#loc199, #loc200])
#loc319 = loc(fused[#loc201, #loc202])
#loc320 = loc(fused[#loc203, #loc204])
#loc321 = loc(fused[#loc205, #loc206])
#loc322 = loc(fused[#loc207, #loc208])
#loc323 = loc(fused[#loc209, #loc210])
#loc324 = loc(fused[#loc212, #loc211])
#loc325 = loc(fused[#loc213, #loc214])
#loc326 = loc(fused[#loc220, #loc218])
#loc327 = loc(fused[#loc221, #loc222])
#loc328 = loc(fused[#loc224, #loc225])
#loc329 = loc(fused[#loc229, #loc230])
#loc330 = loc(fused[#loc231, #loc232])
#loc331 = loc(fused[#loc233, #loc234])
#loc332 = loc(fused[#loc235, #loc232])
