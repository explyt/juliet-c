!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc27 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":66:10)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":66:14)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":66:20)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":66:32)
#loc68 = loc(fused[#loc27, #loc28])
#loc69 = loc(fused[#loc29, #loc30])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_putchar_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @putchar(!s32i) -> !s32i loc(#loc59)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_putchar_16_bad() extra(#fn_attr) {
    cir.br ^bb1 loc(#loc61)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc61)
  ^bb2:  // pred: ^bb1
    %0 = cir.const #cir.int<1> : !s32i loc(#loc7)
    %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc7)
    cir.brcond %1 ^bb3, ^bb4 loc(#loc7)
  ^bb3:  // pred: ^bb2
    %2 = cir.const #cir.int<65> : !s32i loc(#loc8)
    %3 = cir.call @putchar(%2) : (!s32i) -> !s32i loc(#loc9)
    cir.br ^bb4 loc(#loc10)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc6)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc4)
  } loc(#loc60)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_putchar_16_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc63)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc13)
    cir.return loc(#loc12)
  } loc(#loc62)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc64)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc65)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc21)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc22)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc23)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc24)
  cir.func @main(%arg0: !s32i loc(fused[#loc27, #loc28]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc29, #loc30])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc68)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc69)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc26)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc31)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc31)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc32)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc33)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc33)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc34)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc21)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc21)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc35)
    %8 = cir.get_global @CWE252_Unchecked_Return_Value__char_putchar_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc70)
    cir.call @CWE252_Unchecked_Return_Value__char_putchar_16_good() : () -> () loc(#loc36)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc22)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc22)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc38)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc23)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc23)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc39)
    %13 = cir.get_global @CWE252_Unchecked_Return_Value__char_putchar_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc71)
    cir.call @CWE252_Unchecked_Return_Value__char_putchar_16_bad() : () -> () loc(#loc40)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc24)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc24)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc42)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc43)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc72)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    cir.return %17 : !s32i loc(#loc72)
  } loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"putchar failed!\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc45)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.br ^bb1 loc(#loc74)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc74)
  ^bb2:  // pred: ^bb1
    %0 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc50)
    cir.brcond %1 ^bb3, ^bb8 loc(#loc50)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc75)
  ^bb4:  // pred: ^bb3
    %2 = cir.const #cir.int<65> : !s32i loc(#loc53)
    %3 = cir.call @putchar(%2) : (!s32i) -> !s32i loc(#loc54)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc55)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc55)
    %6 = cir.cmp(eq, %3, %5) : !s32i, !cir.bool loc(#loc76)
    cir.brcond %6 ^bb5, ^bb6 loc(#loc77)
  ^bb5:  // pred: ^bb4
    %7 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc45)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    cir.br ^bb6 loc(#loc52)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc52)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc58)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc49)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc47)
  } loc(#loc73)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_putchar_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":618:1)
#loc2 = loc("/usr/include/stdio.h":618:28)
#loc3 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":24:1)
#loc4 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":32:1)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":26:5)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":31:5)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":26:11)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":29:22)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":29:9)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":30:9)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":52:1)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":55:1)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":54:5)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":54:11)
#loc15 = loc("/usr/include/stdlib.h":575:1)
#loc16 = loc("/usr/include/stdlib.h":575:41)
#loc17 = loc("/usr/include/time.h":76:1)
#loc18 = loc("/usr/include/time.h":76:38)
#loc19 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc20 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":71:15)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":73:15)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":76:15)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":78:15)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":66:1)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":81:1)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":67:1)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":69:27)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":69:22)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":69:5)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":71:5)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":72:5)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":72:57)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":73:5)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":76:5)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":77:5)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":77:56)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":78:5)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":80:12)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":80:5)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":46:23)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":39:1)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":50:1)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":41:5)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":49:5)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":41:11)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":44:9)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":47:9)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":44:26)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":44:13)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":44:34)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":45:9)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":46:13)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_putchar_16.c":48:9)
#loc59 = loc(fused[#loc1, #loc2])
#loc60 = loc(fused[#loc3, #loc4])
#loc61 = loc(fused[#loc5, #loc6])
#loc62 = loc(fused[#loc11, #loc12])
#loc63 = loc(fused[#loc13, #loc14])
#loc64 = loc(fused[#loc15, #loc16])
#loc65 = loc(fused[#loc17, #loc18])
#loc66 = loc(fused[#loc19, #loc20])
#loc67 = loc(fused[#loc25, #loc26])
#loc70 = loc(fused[#loc36, #loc37])
#loc71 = loc(fused[#loc40, #loc41])
#loc72 = loc(fused[#loc44, #loc43])
#loc73 = loc(fused[#loc46, #loc47])
#loc74 = loc(fused[#loc48, #loc49])
#loc75 = loc(fused[#loc51, #loc52])
#loc76 = loc(fused[#loc54, #loc55])
#loc77 = loc(fused[#loc56, #loc52])
