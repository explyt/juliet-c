!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":97:10)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":97:14)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":97:20)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":97:32)
#loc121 = loc(fused[#loc54, #loc55])
#loc122 = loc(fused[#loc56, #loc57])
!ty_CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34_unionType = !cir.struct<union "CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34_unionType" {!cir.ptr<!s8i>, !cir.ptr<!s8i>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc101)
  cir.global "private" constant cir_private @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc102)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc103)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc104)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc106)
    %1 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc102)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc107)
    %3 = cir.alloca !ty_CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34_unionType, !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc108)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc109)
    %5 = cir.const #cir.int<10> : !s32i loc(#loc18)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc18)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc18)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc18)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc18)
    %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc110)
    %11 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc18)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc18)
    cir.store %12, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc109)
    %13 = cir.const #cir.int<10> : !s32i loc(#loc20)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %15 = cir.binop(add, %13, %14) nsw : !s32i loc(#loc20)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc20)
    %17 = cir.const #cir.int<1> : !u64i loc(#loc20)
    %18 = cir.binop(mul, %16, %17) : !u64i loc(#loc20)
    %19 = cir.alloca !u8i, !cir.ptr<!u8i>, %18 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc20)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc20)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc20)
    cir.store %21, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc110)
    %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
    cir.store %22, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc111)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc23)
    %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc23)
    %25 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc25)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc26)
    cir.store %24, %27 : !s8i, !cir.ptr<!s8i> loc(#loc112)
    %28 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
    %29 = cir.get_member %3[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc28)
    cir.store %28, %29 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc113)
    cir.br ^bb1 loc(#loc114)
  ^bb1:  // pred: ^bb0
    %30 = cir.get_member %3[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc32)
    %31 = cir.load %30 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc12)
    cir.store %31, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc106)
    cir.br ^bb2 loc(#loc115)
  ^bb2:  // pred: ^bb1
    %32 = cir.get_global @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc102)
    cir.copy %32 to %1 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc102)
    %33 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc35)
    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %35 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc37)
    %36 = cir.call @strcpy(%34, %35) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc35)
    %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc39)
    cir.br ^bb3 loc(#loc34)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc31)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc10)
  } loc(#loc105)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc117)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    cir.return loc(#loc41)
  } loc(#loc116)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc118)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc119)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc51)
  cir.func @main(%arg0: !s32i loc(fused[#loc54, #loc55]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc56, #loc57])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc121)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc122)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc53)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc58)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc58)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc59)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc60)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc60)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc61)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc48)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34_good : !cir.ptr<!cir.func<!void ()>> loc(#loc123)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34_good() : () -> () loc(#loc63)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc49)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc50)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc124)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34_bad() : () -> () loc(#loc67)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc51)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc70)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc125)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    cir.return %17 : !s32i loc(#loc125)
  } loc(#loc120)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc127)
    %1 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc101)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc128)
    %3 = cir.alloca !ty_CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34_unionType, !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc129)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc130)
    %5 = cir.const #cir.int<10> : !s32i loc(#loc81)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc81)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc81)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc81)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc81)
    %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc131)
    %11 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc81)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc81)
    cir.store %12, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc130)
    %13 = cir.const #cir.int<10> : !s32i loc(#loc83)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc83)
    %15 = cir.binop(add, %13, %14) nsw : !s32i loc(#loc83)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc83)
    %17 = cir.const #cir.int<1> : !u64i loc(#loc83)
    %18 = cir.binop(mul, %16, %17) : !u64i loc(#loc83)
    %19 = cir.alloca !u8i, !cir.ptr<!u8i>, %18 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc83)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc83)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc83)
    cir.store %21, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
    %22 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
    cir.store %22, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc86)
    %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc86)
    %25 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc88)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc89)
    cir.store %24, %27 : !s8i, !cir.ptr<!s8i> loc(#loc133)
    %28 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
    %29 = cir.get_member %3[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc28)
    cir.store %28, %29 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc134)
    cir.br ^bb1 loc(#loc135)
  ^bb1:  // pred: ^bb0
    %30 = cir.get_member %3[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc32)
    %31 = cir.load %30 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
    cir.store %31, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc127)
    cir.br ^bb2 loc(#loc136)
  ^bb2:  // pred: ^bb1
    %32 = cir.get_global @__const.goodG2B.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc101)
    cir.copy %32 to %1 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc101)
    %33 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc96)
    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
    %35 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc98)
    %36 = cir.call @strcpy(%34, %35) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc96)
    %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    cir.br ^bb3 loc(#loc95)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc93)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc73)
  } loc(#loc126)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":75:13)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":75:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":48:13)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":48:33)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":34:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":54:1)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":46:9)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":46:31)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":36:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":36:12)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":37:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":37:77)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":38:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":38:36)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":39:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":39:37)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":42:12)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":42:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":43:15)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":43:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":43:10)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":43:11)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":44:26)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":28:12)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":44:5)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":45:5)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":53:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":29:12)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":47:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":52:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":50:13)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":50:20)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":50:26)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":51:23)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":51:13)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":83:1)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":86:1)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":85:5)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":85:13)
#loc44 = loc("/usr/include/stdlib.h":575:1)
#loc45 = loc("/usr/include/stdlib.h":575:41)
#loc46 = loc("/usr/include/time.h":76:1)
#loc47 = loc("/usr/include/time.h":76:38)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":102:15)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":104:15)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":107:15)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":109:15)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":97:1)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":112:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":98:1)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":100:27)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":100:22)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":100:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":102:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":103:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":103:72)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":104:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":107:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":108:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":108:71)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":109:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":111:12)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":111:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":61:1)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":81:1)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":73:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":73:31)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":63:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":63:12)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":64:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":64:77)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":65:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":65:36)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":66:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":66:37)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":69:12)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":69:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":70:15)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":70:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":70:10)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":70:11)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":71:26)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":71:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":72:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":80:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":74:9)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":79:9)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":77:13)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":77:20)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":77:26)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":78:23)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_cpy_34.c":78:13)
#loc101 = loc(fused[#loc1, #loc2])
#loc102 = loc(fused[#loc3, #loc4])
#loc103 = loc(fused[#loc5, #loc6])
#loc104 = loc(fused[#loc7, #loc8])
#loc105 = loc(fused[#loc9, #loc10])
#loc106 = loc(fused[#loc11, #loc12])
#loc107 = loc(fused[#loc13, #loc14])
#loc108 = loc(fused[#loc15, #loc16])
#loc109 = loc(fused[#loc17, #loc18])
#loc110 = loc(fused[#loc19, #loc20])
#loc111 = loc(fused[#loc22, #loc21])
#loc112 = loc(fused[#loc24, #loc23])
#loc113 = loc(fused[#loc29, #loc27])
#loc114 = loc(fused[#loc30, #loc31])
#loc115 = loc(fused[#loc33, #loc34])
#loc116 = loc(fused[#loc40, #loc41])
#loc117 = loc(fused[#loc42, #loc43])
#loc118 = loc(fused[#loc44, #loc45])
#loc119 = loc(fused[#loc46, #loc47])
#loc120 = loc(fused[#loc52, #loc53])
#loc123 = loc(fused[#loc63, #loc64])
#loc124 = loc(fused[#loc67, #loc68])
#loc125 = loc(fused[#loc71, #loc70])
#loc126 = loc(fused[#loc72, #loc73])
#loc127 = loc(fused[#loc74, #loc75])
#loc128 = loc(fused[#loc76, #loc77])
#loc129 = loc(fused[#loc78, #loc79])
#loc130 = loc(fused[#loc80, #loc81])
#loc131 = loc(fused[#loc82, #loc83])
#loc132 = loc(fused[#loc85, #loc84])
#loc133 = loc(fused[#loc87, #loc86])
#loc134 = loc(fused[#loc91, #loc90])
#loc135 = loc(fused[#loc92, #loc93])
#loc136 = loc(fused[#loc94, #loc95])
