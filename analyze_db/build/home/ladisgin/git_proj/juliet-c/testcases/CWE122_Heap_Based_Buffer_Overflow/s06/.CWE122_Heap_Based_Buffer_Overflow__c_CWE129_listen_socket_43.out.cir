!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":47:23)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":47:28)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":159:27)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":159:32)
#loc286 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":201:27)
#loc287 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":201:32)
#loc483 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":326:10)
#loc484 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":326:14)
#loc485 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":326:20)
#loc486 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":326:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc508 = loc(fused[#loc19, #loc20])
#loc583 = loc(fused[#loc214, #loc215])
#loc611 = loc(fused[#loc286, #loc287])
#loc685 = loc(fused[#loc483, #loc484])
#loc686 = loc(fused[#loc485, #loc486])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc499)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc500)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc501)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc502)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc503)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc504)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc505)
  cir.func private @close(!s32i) -> !s32i loc(#loc506)
  cir.func internal private @_ZN60CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43L9badSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc19, #loc20])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc508)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc21)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc510)
      %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc511)
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc512)
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc513)
      %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc514)
      %6 = cir.const #cir.int<1> : !s32i loc(#loc29)
      %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc29)
      cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc512)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc31)
      %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc31)
      cir.store %9, %4 : !s32i, !cir.ptr<!s32i> loc(#loc513)
      cir.scope {
        cir.do {
          %10 = cir.const #cir.int<2> : !s32i loc(#loc36)
          %11 = cir.const #cir.int<1> : !u32i loc(#loc37)
          %12 = cir.cast(integral, %11 : !u32i), !s32i loc(#loc37)
          %13 = cir.const #cir.int<6> : !u32i loc(#loc38)
          %14 = cir.cast(integral, %13 : !u32i), !s32i loc(#loc38)
          %15 = cir.call @socket(%10, %12, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc39)
          cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc516)
          cir.scope {
            %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc44)
            %58 = cir.const #cir.int<1> : !s32i loc(#loc45)
            %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc45)
            %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc518)
            cir.if %60 {
              cir.break loc(#loc47)
            } loc(#loc519)
          } loc(#loc517)
          %16 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc520)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc50)
          %18 = cir.const #cir.int<16> : !u64i loc(#loc521)
          cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc522)
          %19 = cir.const #cir.int<2> : !s32i loc(#loc55)
          %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc55)
          %21 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc56)
          cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc523)
          %22 = cir.const #cir.int<0> : !s32i loc(#loc58)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc58)
          %24 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc59)
          %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc60)
          cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc524)
          %26 = cir.const #cir.int<27015> : !s32i loc(#loc62)
          %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc62)
          %28 = cir.call @htons(%27) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc63)
          %29 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
          cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc525)
          cir.scope {
            %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc69)
            %58 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc527)
            %59 = cir.const #cir.int<16> : !u64i loc(#loc528)
            %60 = cir.cast(integral, %59 : !u64i), !u32i loc(#loc528)
            %61 = cir.call @bind(%57, %58, %60) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc74)
            %62 = cir.const #cir.int<1> : !s32i loc(#loc75)
            %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc75)
            %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc529)
            cir.if %64 {
              cir.break loc(#loc77)
            } loc(#loc530)
          } loc(#loc526)
          cir.scope {
            %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc80)
            %58 = cir.const #cir.int<5> : !s32i loc(#loc81)
            %59 = cir.call @listen(%57, %58) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc82)
            %60 = cir.const #cir.int<1> : !s32i loc(#loc83)
            %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc83)
            %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc532)
            cir.if %62 {
              cir.break loc(#loc85)
            } loc(#loc533)
          } loc(#loc531)
          %30 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc86)
          %31 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc87)
          %32 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc88)
          %33 = cir.call @accept(%30, %31, %32) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc89)
          cir.store %33, %4 : !s32i, !cir.ptr<!s32i> loc(#loc534)
          cir.scope {
            %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc94)
            %58 = cir.const #cir.int<1> : !s32i loc(#loc95)
            %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc95)
            %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc536)
            cir.if %60 {
              cir.break loc(#loc97)
            } loc(#loc537)
          } loc(#loc535)
          %34 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc98)
          %35 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc99)
          %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc99)
          %37 = cir.const #cir.int<3> : !s32i loc(#loc100)
          %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc100)
          %39 = cir.const #cir.int<4> : !u64i loc(#loc100)
          %40 = cir.binop(mul, %38, %39) : !u64i loc(#loc100)
          %41 = cir.const #cir.int<2> : !s32i loc(#loc100)
          %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc100)
          %43 = cir.binop(add, %40, %42) : !u64i loc(#loc100)
          %44 = cir.const #cir.int<1> : !s32i loc(#loc101)
          %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc101)
          %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc538)
          %47 = cir.const #cir.int<0> : !s32i loc(#loc102)
          %48 = cir.call @recv(%34, %36, %46, %47) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc103)
          %49 = cir.cast(integral, %48 : !s64i), !s32i loc(#loc103)
          cir.store %49, %1 : !s32i, !cir.ptr<!s32i> loc(#loc539)
          cir.scope {
            %57 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc108)
            %58 = cir.const #cir.int<1> : !s32i loc(#loc109)
            %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc109)
            %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc541)
            %61 = cir.ternary(%60, true {
              %62 = cir.const #true loc(#loc110)
              cir.yield %62 : !cir.bool loc(#loc110)
            }, false {
              %62 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc111)
              %63 = cir.const #cir.int<0> : !s32i loc(#loc112)
              %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc542)
              %65 = cir.ternary(%64, true {
                %66 = cir.const #true loc(#loc110)
                cir.yield %66 : !cir.bool loc(#loc110)
              }, false {
                %66 = cir.const #false loc(#loc110)
                cir.yield %66 : !cir.bool loc(#loc110)
              }) : (!cir.bool) -> !cir.bool loc(#loc110)
              cir.yield %65 : !cir.bool loc(#loc110)
            }) : (!cir.bool) -> !cir.bool loc(#loc110)
            cir.if %61 {
              cir.break loc(#loc114)
            } loc(#loc543)
          } loc(#loc540)
          %50 = cir.const #cir.int<0> : !s8i loc(#loc115)
          %51 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc116)
          %52 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc117)
          %53 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %51 : !s32i), !cir.ptr<!s8i> loc(#loc117)
          cir.store %50, %53 : !s8i, !cir.ptr<!s8i> loc(#loc544)
          %54 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc118)
          %55 = cir.call @atoi(%54) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc119)
          %56 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc120)
          cir.store %55, %56 : !s32i, !cir.ptr<!s32i> loc(#loc545)
          cir.yield loc(#loc35)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc122)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc122)
          cir.condition(%11) loc(#loc122)
        } loc(#loc515)
      } loc(#loc515)
      cir.scope {
        %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc125)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc126)
        %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc126)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc547)
        cir.if %13 {
          %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc128)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc129)
        } loc(#loc548)
      } loc(#loc546)
      cir.scope {
        %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc132)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc133)
        %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc133)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc550)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc135)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc136)
        } loc(#loc551)
      } loc(#loc549)
    } loc(#loc509)
    cir.return loc(#loc18)
  } loc(#loc507)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc552)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc553)
  cir.func private @printIntLine(!s32i) loc(#loc554)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc555)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc145)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc556)
  cir.func @_ZN60CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc558)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc152)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc153)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc559)
    cir.call @_ZN60CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43L9badSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc155)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc561)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc562)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc162)
      %6 = cir.const #cir.int<10> : !s32i loc(#loc163)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc163)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc563)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc564)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc162)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc565)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc562)
      cir.scope {
        %15 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc168)
        %16 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc169)
        %17 = cir.cmp(eq, %15, %16) : !cir.ptr<!s32i>, !cir.bool loc(#loc567)
        cir.if %17 {
          %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc171)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc172)
          %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc173)
          cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc171)
        } loc(#loc568)
      } loc(#loc566)
      cir.scope {
        %15 = cir.const #cir.int<0> : !s32i loc(#loc176)
        cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc570)
        cir.for : cond {
          %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc178)
          %17 = cir.const #cir.int<10> : !s32i loc(#loc179)
          %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc571)
          cir.condition(%18) loc(#loc571)
        } body {
          %16 = cir.const #cir.int<0> : !s32i loc(#loc180)
          %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc181)
          %18 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc182)
          %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc183)
          cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc572)
          cir.yield loc(#loc175)
        } step {
          %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc184)
          %17 = cir.unary(inc, %16) : !s32i, !s32i loc(#loc185)
          cir.store %17, %3 : !s32i, !cir.ptr<!s32i> loc(#loc573)
          cir.yield loc(#loc569)
        } loc(#loc569)
      } loc(#loc569)
      cir.scope {
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc188)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc189)
        %17 = cir.cmp(ge, %15, %16) : !s32i, !cir.bool loc(#loc575)
        cir.if %17 {
          %18 = cir.const #cir.int<1> : !s32i loc(#loc193)
          %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc194)
          %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc195)
          %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc196)
          cir.store %18, %21 : !s32i, !cir.ptr<!s32i> loc(#loc577)
          cir.scope {
            %22 = cir.const #cir.int<0> : !s32i loc(#loc199)
            cir.store %22, %3 : !s32i, !cir.ptr<!s32i> loc(#loc579)
            cir.for : cond {
              %23 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc201)
              %24 = cir.const #cir.int<10> : !s32i loc(#loc202)
              %25 = cir.cmp(lt, %23, %24) : !s32i, !cir.bool loc(#loc580)
              cir.condition(%25) loc(#loc580)
            } body {
              %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc203)
              %24 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc204)
              %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !s32i), !cir.ptr<!s32i> loc(#loc205)
              %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc203)
              cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc206)
              cir.yield loc(#loc198)
            } step {
              %23 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc207)
              %24 = cir.unary(inc, %23) : !s32i, !s32i loc(#loc208)
              cir.store %24, %3 : !s32i, !cir.ptr<!s32i> loc(#loc581)
              cir.yield loc(#loc578)
            } loc(#loc578)
          } loc(#loc578)
        } else {
          %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc145)
          %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc145)
          cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc209)
        } loc(#loc576)
      } loc(#loc574)
      %12 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc210)
      %13 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc211)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc211)
      cir.call @free(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc210)
    } loc(#loc560)
    cir.return loc(#loc149)
  } loc(#loc557)
  cir.func internal private @_ZN60CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43L13goodG2BSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc214, #loc215])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc583)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc216)
    %1 = cir.const #cir.int<7> : !s32i loc(#loc217)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc218)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc584)
    cir.return loc(#loc213)
  } loc(#loc582)
  cir.func internal private @_ZN60CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc586)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc223)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc224)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc587)
    cir.call @_ZN60CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43L13goodG2BSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc226)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc589)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc590)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc233)
      %6 = cir.const #cir.int<10> : !s32i loc(#loc234)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc234)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc591)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc592)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc233)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc593)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc590)
      cir.scope {
        %15 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc239)
        %16 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc240)
        %17 = cir.cmp(eq, %15, %16) : !cir.ptr<!s32i>, !cir.bool loc(#loc595)
        cir.if %17 {
          %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc242)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc243)
          %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc244)
          cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc242)
        } loc(#loc596)
      } loc(#loc594)
      cir.scope {
        %15 = cir.const #cir.int<0> : !s32i loc(#loc247)
        cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc598)
        cir.for : cond {
          %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc249)
          %17 = cir.const #cir.int<10> : !s32i loc(#loc250)
          %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc599)
          cir.condition(%18) loc(#loc599)
        } body {
          %16 = cir.const #cir.int<0> : !s32i loc(#loc251)
          %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc252)
          %18 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc253)
          %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc254)
          cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc600)
          cir.yield loc(#loc246)
        } step {
          %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc255)
          %17 = cir.unary(inc, %16) : !s32i, !s32i loc(#loc256)
          cir.store %17, %3 : !s32i, !cir.ptr<!s32i> loc(#loc601)
          cir.yield loc(#loc597)
        } loc(#loc597)
      } loc(#loc597)
      cir.scope {
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc259)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc260)
        %17 = cir.cmp(ge, %15, %16) : !s32i, !cir.bool loc(#loc603)
        cir.if %17 {
          %18 = cir.const #cir.int<1> : !s32i loc(#loc264)
          %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc265)
          %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc266)
          %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc267)
          cir.store %18, %21 : !s32i, !cir.ptr<!s32i> loc(#loc605)
          cir.scope {
            %22 = cir.const #cir.int<0> : !s32i loc(#loc270)
            cir.store %22, %3 : !s32i, !cir.ptr<!s32i> loc(#loc607)
            cir.for : cond {
              %23 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc272)
              %24 = cir.const #cir.int<10> : !s32i loc(#loc273)
              %25 = cir.cmp(lt, %23, %24) : !s32i, !cir.bool loc(#loc608)
              cir.condition(%25) loc(#loc608)
            } body {
              %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc274)
              %24 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc275)
              %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !s32i), !cir.ptr<!s32i> loc(#loc276)
              %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc274)
              cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc277)
              cir.yield loc(#loc269)
            } step {
              %23 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc278)
              %24 = cir.unary(inc, %23) : !s32i, !s32i loc(#loc279)
              cir.store %24, %3 : !s32i, !cir.ptr<!s32i> loc(#loc609)
              cir.yield loc(#loc606)
            } loc(#loc606)
          } loc(#loc606)
        } else {
          %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc280)
          %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc280)
          cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc281)
        } loc(#loc604)
      } loc(#loc602)
      %12 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc282)
      %13 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc283)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc283)
      cir.call @free(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc282)
    } loc(#loc588)
    cir.return loc(#loc220)
  } loc(#loc585)
  cir.func internal private @_ZN60CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43L13goodB2GSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc286, #loc287])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc611)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc288)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc613)
      %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc614)
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc615)
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc616)
      %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc617)
      %6 = cir.const #cir.int<1> : !s32i loc(#loc296)
      %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc296)
      cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc615)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc298)
      %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc298)
      cir.store %9, %4 : !s32i, !cir.ptr<!s32i> loc(#loc616)
      cir.scope {
        cir.do {
          %10 = cir.const #cir.int<2> : !s32i loc(#loc303)
          %11 = cir.const #cir.int<1> : !u32i loc(#loc304)
          %12 = cir.cast(integral, %11 : !u32i), !s32i loc(#loc304)
          %13 = cir.const #cir.int<6> : !u32i loc(#loc305)
          %14 = cir.cast(integral, %13 : !u32i), !s32i loc(#loc305)
          %15 = cir.call @socket(%10, %12, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc306)
          cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc619)
          cir.scope {
            %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc311)
            %58 = cir.const #cir.int<1> : !s32i loc(#loc312)
            %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc312)
            %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc621)
            cir.if %60 {
              cir.break loc(#loc314)
            } loc(#loc622)
          } loc(#loc620)
          %16 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc623)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc317)
          %18 = cir.const #cir.int<16> : !u64i loc(#loc624)
          cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc625)
          %19 = cir.const #cir.int<2> : !s32i loc(#loc322)
          %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc322)
          %21 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc56)
          cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc626)
          %22 = cir.const #cir.int<0> : !s32i loc(#loc324)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc324)
          %24 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc59)
          %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc60)
          cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc627)
          %26 = cir.const #cir.int<27015> : !s32i loc(#loc326)
          %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc326)
          %28 = cir.call @htons(%27) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc327)
          %29 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
          cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc628)
          cir.scope {
            %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc332)
            %58 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc630)
            %59 = cir.const #cir.int<16> : !u64i loc(#loc631)
            %60 = cir.cast(integral, %59 : !u64i), !u32i loc(#loc631)
            %61 = cir.call @bind(%57, %58, %60) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc337)
            %62 = cir.const #cir.int<1> : !s32i loc(#loc338)
            %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc338)
            %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc632)
            cir.if %64 {
              cir.break loc(#loc340)
            } loc(#loc633)
          } loc(#loc629)
          cir.scope {
            %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc343)
            %58 = cir.const #cir.int<5> : !s32i loc(#loc344)
            %59 = cir.call @listen(%57, %58) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc345)
            %60 = cir.const #cir.int<1> : !s32i loc(#loc346)
            %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc346)
            %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc635)
            cir.if %62 {
              cir.break loc(#loc348)
            } loc(#loc636)
          } loc(#loc634)
          %30 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc349)
          %31 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc350)
          %32 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc351)
          %33 = cir.call @accept(%30, %31, %32) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc352)
          cir.store %33, %4 : !s32i, !cir.ptr<!s32i> loc(#loc637)
          cir.scope {
            %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc357)
            %58 = cir.const #cir.int<1> : !s32i loc(#loc358)
            %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc358)
            %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc639)
            cir.if %60 {
              cir.break loc(#loc360)
            } loc(#loc640)
          } loc(#loc638)
          %34 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc361)
          %35 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc362)
          %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc362)
          %37 = cir.const #cir.int<3> : !s32i loc(#loc363)
          %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc363)
          %39 = cir.const #cir.int<4> : !u64i loc(#loc363)
          %40 = cir.binop(mul, %38, %39) : !u64i loc(#loc363)
          %41 = cir.const #cir.int<2> : !s32i loc(#loc363)
          %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc363)
          %43 = cir.binop(add, %40, %42) : !u64i loc(#loc363)
          %44 = cir.const #cir.int<1> : !s32i loc(#loc364)
          %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc364)
          %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc641)
          %47 = cir.const #cir.int<0> : !s32i loc(#loc365)
          %48 = cir.call @recv(%34, %36, %46, %47) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc366)
          %49 = cir.cast(integral, %48 : !s64i), !s32i loc(#loc366)
          cir.store %49, %1 : !s32i, !cir.ptr<!s32i> loc(#loc642)
          cir.scope {
            %57 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc371)
            %58 = cir.const #cir.int<1> : !s32i loc(#loc372)
            %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc372)
            %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc644)
            %61 = cir.ternary(%60, true {
              %62 = cir.const #true loc(#loc373)
              cir.yield %62 : !cir.bool loc(#loc373)
            }, false {
              %62 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc374)
              %63 = cir.const #cir.int<0> : !s32i loc(#loc375)
              %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc645)
              %65 = cir.ternary(%64, true {
                %66 = cir.const #true loc(#loc373)
                cir.yield %66 : !cir.bool loc(#loc373)
              }, false {
                %66 = cir.const #false loc(#loc373)
                cir.yield %66 : !cir.bool loc(#loc373)
              }) : (!cir.bool) -> !cir.bool loc(#loc373)
              cir.yield %65 : !cir.bool loc(#loc373)
            }) : (!cir.bool) -> !cir.bool loc(#loc373)
            cir.if %61 {
              cir.break loc(#loc377)
            } loc(#loc646)
          } loc(#loc643)
          %50 = cir.const #cir.int<0> : !s8i loc(#loc378)
          %51 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc379)
          %52 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc380)
          %53 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %51 : !s32i), !cir.ptr<!s8i> loc(#loc380)
          cir.store %50, %53 : !s8i, !cir.ptr<!s8i> loc(#loc647)
          %54 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc381)
          %55 = cir.call @atoi(%54) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc382)
          %56 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc383)
          cir.store %55, %56 : !s32i, !cir.ptr<!s32i> loc(#loc648)
          cir.yield loc(#loc302)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc385)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc385)
          cir.condition(%11) loc(#loc385)
        } loc(#loc618)
      } loc(#loc618)
      cir.scope {
        %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc388)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc389)
        %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc389)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc650)
        cir.if %13 {
          %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc391)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc392)
        } loc(#loc651)
      } loc(#loc649)
      cir.scope {
        %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc395)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc396)
        %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc396)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc653)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc398)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc399)
        } loc(#loc654)
      } loc(#loc652)
    } loc(#loc612)
    cir.return loc(#loc285)
  } loc(#loc610)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc400)
  cir.func internal private @_ZN60CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc656)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc405)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc406)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc657)
    cir.call @_ZN60CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43L13goodB2GSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc408)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc659)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc660)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc415)
      %6 = cir.const #cir.int<10> : !s32i loc(#loc416)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc416)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc661)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc662)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc415)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc663)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc660)
      cir.scope {
        %15 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc421)
        %16 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc422)
        %17 = cir.cmp(eq, %15, %16) : !cir.ptr<!s32i>, !cir.bool loc(#loc665)
        cir.if %17 {
          %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc424)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc425)
          %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc426)
          cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc424)
        } loc(#loc666)
      } loc(#loc664)
      cir.scope {
        %15 = cir.const #cir.int<0> : !s32i loc(#loc429)
        cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc668)
        cir.for : cond {
          %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc431)
          %17 = cir.const #cir.int<10> : !s32i loc(#loc432)
          %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc669)
          cir.condition(%18) loc(#loc669)
        } body {
          %16 = cir.const #cir.int<0> : !s32i loc(#loc433)
          %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc434)
          %18 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc435)
          %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc436)
          cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc670)
          cir.yield loc(#loc428)
        } step {
          %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc437)
          %17 = cir.unary(inc, %16) : !s32i, !s32i loc(#loc438)
          cir.store %17, %3 : !s32i, !cir.ptr<!s32i> loc(#loc671)
          cir.yield loc(#loc667)
        } loc(#loc667)
      } loc(#loc667)
      cir.scope {
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc441)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc442)
        %17 = cir.cmp(ge, %15, %16) : !s32i, !cir.bool loc(#loc673)
        %18 = cir.ternary(%17, true {
          %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc444)
          %20 = cir.const #cir.int<10> : !s32i loc(#loc445)
          %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc674)
          %22 = cir.ternary(%21, true {
            %23 = cir.const #true loc(#loc443)
            cir.yield %23 : !cir.bool loc(#loc443)
          }, false {
            %23 = cir.const #false loc(#loc443)
            cir.yield %23 : !cir.bool loc(#loc443)
          }) : (!cir.bool) -> !cir.bool loc(#loc443)
          cir.yield %22 : !cir.bool loc(#loc443)
        }, false {
          %19 = cir.const #false loc(#loc443)
          cir.yield %19 : !cir.bool loc(#loc443)
        }) : (!cir.bool) -> !cir.bool loc(#loc443)
        cir.if %18 {
          %19 = cir.const #cir.int<1> : !s32i loc(#loc450)
          %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc451)
          %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc452)
          %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc453)
          cir.store %19, %22 : !s32i, !cir.ptr<!s32i> loc(#loc676)
          cir.scope {
            %23 = cir.const #cir.int<0> : !s32i loc(#loc456)
            cir.store %23, %3 : !s32i, !cir.ptr<!s32i> loc(#loc678)
            cir.for : cond {
              %24 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc458)
              %25 = cir.const #cir.int<10> : !s32i loc(#loc459)
              %26 = cir.cmp(lt, %24, %25) : !s32i, !cir.bool loc(#loc679)
              cir.condition(%26) loc(#loc679)
            } body {
              %24 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc460)
              %25 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc461)
              %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !s32i), !cir.ptr<!s32i> loc(#loc462)
              %27 = cir.load %26 : !cir.ptr<!s32i>, !s32i loc(#loc460)
              cir.call @printIntLine(%27) : (!s32i) -> () loc(#loc463)
              cir.yield loc(#loc455)
            } step {
              %24 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc464)
              %25 = cir.unary(inc, %24) : !s32i, !s32i loc(#loc465)
              cir.store %25, %3 : !s32i, !cir.ptr<!s32i> loc(#loc680)
              cir.yield loc(#loc677)
            } loc(#loc677)
          } loc(#loc677)
        } else {
          %19 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc400)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc400)
          cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc466)
        } loc(#loc675)
      } loc(#loc672)
      %12 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc467)
      %13 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc468)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc468)
      cir.call @free(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc467)
    } loc(#loc658)
    cir.return loc(#loc402)
  } loc(#loc655)
  cir.func @_ZN60CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN60CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43L7goodG2BEv() : () -> () loc(#loc471)
    cir.call @_ZN60CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43L7goodB2GEv() : () -> () loc(#loc472)
    cir.return loc(#loc470)
  } loc(#loc681)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc682)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc683)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc477)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc478)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc479)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc480)
  cir.func @main(%arg0: !s32i loc(fused[#loc483, #loc484]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc485, #loc486])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc685)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc686)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc482)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc487)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc487)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc488)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc489)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc489)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc490)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc477)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc477)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc491)
    cir.call @_ZN60CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_434goodEv() : () -> () loc(#loc492)
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc478)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc478)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc493)
    %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc479)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc479)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc494)
    cir.call @_ZN60CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_433badEv() : () -> () loc(#loc495)
    %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc480)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc480)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc496)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc497)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc687)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc687)
    cir.return %15 : !s32i loc(#loc687)
  } loc(#loc684)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":47:1)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":118:1)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":48:1)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":49:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":117:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":54:9)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":54:13)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":55:9)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":55:28)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":56:9)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":56:31)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":57:9)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":57:31)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":58:9)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":58:41)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":59:9)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":102:17)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":69:35)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":69:44)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":69:57)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":69:28)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":69:13)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":69:68)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":70:13)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":73:13)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":70:17)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":70:33)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":71:13)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":72:17)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":74:20)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":74:21)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":74:30)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":74:33)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":74:47)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":74:13)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":74:48)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":75:34)
#loc56 = loc("/usr/include/netinet/in.h":249:5)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":75:13)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":76:39)
#loc59 = loc("/usr/include/netinet/in.h":251:20)
#loc60 = loc("/usr/include/netinet/in.h":33:15)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":76:13)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":77:38)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":77:32)
#loc64 = loc("/usr/include/netinet/in.h":250:15)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":77:13)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":77:46)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":78:13)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":81:13)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":78:22)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":78:54)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":78:55)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":78:64)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":78:78)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":78:17)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":78:84)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":79:13)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":80:17)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":82:13)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":85:13)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":82:24)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":82:38)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":82:17)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":82:57)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":83:13)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":84:17)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":86:35)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":86:49)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":86:55)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":86:28)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":86:13)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":86:59)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":87:13)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":90:13)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":87:17)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":87:33)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":88:13)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":89:17)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":92:31)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":92:45)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":92:58)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":92:76)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":92:79)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":92:26)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":92:13)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":92:80)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":93:13)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":96:13)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":93:17)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":93:31)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":93:44)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":93:47)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":93:61)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":94:13)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":95:17)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":98:39)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":98:25)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":98:13)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":100:25)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":100:20)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":100:13)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":100:36)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":102:16)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":103:9)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":106:9)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":103:13)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":103:29)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":104:9)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":105:26)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":105:13)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":107:9)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":110:9)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":107:13)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":107:29)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":108:9)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":109:26)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":109:13)
#loc137 = loc("/usr/include/stdlib.h":672:1)
#loc138 = loc("/usr/include/stdlib.h":672:45)
#loc139 = loc("/usr/include/stdlib.h":756:1)
#loc140 = loc("/usr/include/stdlib.h":756:70)
#loc141 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc142 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc143 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc144 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":148:23)
#loc146 = loc("/usr/include/stdlib.h":687:1)
#loc147 = loc("/usr/include/stdlib.h":687:32)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":120:1)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":152:1)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":122:5)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":122:9)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":124:13)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":124:12)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":124:5)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":125:5)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":126:5)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":151:5)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":127:9)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":127:13)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":128:9)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":128:54)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":128:31)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":128:38)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":128:43)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":128:53)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":129:9)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":129:39)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":129:13)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":129:23)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":129:29)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":129:30)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":129:36)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":129:35)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":131:9)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":134:9)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":131:18)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":131:14)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":131:21)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":131:25)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":133:25)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":133:13)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":133:20)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":133:21)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":131:30)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":131:29)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":137:9)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":149:9)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":137:13)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":137:21)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":138:9)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":145:9)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":147:9)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":139:28)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":139:13)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":139:20)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":139:24)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":141:13)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":144:13)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":141:21)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":141:17)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":141:24)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":141:28)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":143:30)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":143:37)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":143:38)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":143:17)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":141:33)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":141:32)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":148:13)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":150:9)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":150:14)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":159:1)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":164:1)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":160:1)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":163:12)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":163:5)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":166:1)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":198:1)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":168:5)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":168:9)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":170:13)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":170:12)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":170:5)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":171:5)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":172:5)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":197:5)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":173:9)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":173:13)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":174:9)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":174:54)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":174:31)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":174:38)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":174:43)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":174:53)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":175:9)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":175:39)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":175:13)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":175:23)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":175:29)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":175:30)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":175:36)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":175:35)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":177:9)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":180:9)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":177:18)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":177:14)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":177:21)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":177:25)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":179:25)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":179:13)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":179:20)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":179:21)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":177:30)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":177:29)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":183:9)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":195:9)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":183:13)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":183:21)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":184:9)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":191:9)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":193:9)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":185:28)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":185:13)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":185:20)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":185:24)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":187:13)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":190:13)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":187:21)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":187:17)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":187:24)
#loc273 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":187:28)
#loc274 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":189:30)
#loc275 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":189:37)
#loc276 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":189:38)
#loc277 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":189:17)
#loc278 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":187:33)
#loc279 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":187:32)
#loc280 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":194:23)
#loc281 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":194:13)
#loc282 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":196:9)
#loc283 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":196:14)
#loc284 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":201:1)
#loc285 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":272:1)
#loc288 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":202:1)
#loc289 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":203:5)
#loc290 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":271:5)
#loc291 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":208:9)
#loc292 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":208:13)
#loc293 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":209:9)
#loc294 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":209:28)
#loc295 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":210:9)
#loc296 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":210:31)
#loc297 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":211:9)
#loc298 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":211:31)
#loc299 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":212:9)
#loc300 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":212:41)
#loc301 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":213:9)
#loc302 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":256:17)
#loc303 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":223:35)
#loc304 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":223:44)
#loc305 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":223:57)
#loc306 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":223:28)
#loc307 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":223:13)
#loc308 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":223:68)
#loc309 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":224:13)
#loc310 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":227:13)
#loc311 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":224:17)
#loc312 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":224:33)
#loc313 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":225:13)
#loc314 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":226:17)
#loc315 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":228:20)
#loc316 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":228:21)
#loc317 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":228:30)
#loc318 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":228:33)
#loc319 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":228:47)
#loc320 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":228:13)
#loc321 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":228:48)
#loc322 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":229:34)
#loc323 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":229:13)
#loc324 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":230:39)
#loc325 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":230:13)
#loc326 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":231:38)
#loc327 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":231:32)
#loc328 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":231:13)
#loc329 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":231:46)
#loc330 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":232:13)
#loc331 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":235:13)
#loc332 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":232:22)
#loc333 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":232:54)
#loc334 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":232:55)
#loc335 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":232:64)
#loc336 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":232:78)
#loc337 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":232:17)
#loc338 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":232:84)
#loc339 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":233:13)
#loc340 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":234:17)
#loc341 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":236:13)
#loc342 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":239:13)
#loc343 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":236:24)
#loc344 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":236:38)
#loc345 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":236:17)
#loc346 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":236:57)
#loc347 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":237:13)
#loc348 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":238:17)
#loc349 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":240:35)
#loc350 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":240:49)
#loc351 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":240:55)
#loc352 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":240:28)
#loc353 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":240:13)
#loc354 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":240:59)
#loc355 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":241:13)
#loc356 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":244:13)
#loc357 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":241:17)
#loc358 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":241:33)
#loc359 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":242:13)
#loc360 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":243:17)
#loc361 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":246:31)
#loc362 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":246:45)
#loc363 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":246:58)
#loc364 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":246:76)
#loc365 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":246:79)
#loc366 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":246:26)
#loc367 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":246:13)
#loc368 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":246:80)
#loc369 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":247:13)
#loc370 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":250:13)
#loc371 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":247:17)
#loc372 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":247:31)
#loc373 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":247:44)
#loc374 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":247:47)
#loc375 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":247:61)
#loc376 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":248:13)
#loc377 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":249:17)
#loc378 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":252:39)
#loc379 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":252:25)
#loc380 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":252:13)
#loc381 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":254:25)
#loc382 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":254:20)
#loc383 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":254:13)
#loc384 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":254:36)
#loc385 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":256:16)
#loc386 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":257:9)
#loc387 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":260:9)
#loc388 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":257:13)
#loc389 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":257:29)
#loc390 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":258:9)
#loc391 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":259:26)
#loc392 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":259:13)
#loc393 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":261:9)
#loc394 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":264:9)
#loc395 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":261:13)
#loc396 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":261:29)
#loc397 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":262:9)
#loc398 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":263:26)
#loc399 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":263:13)
#loc400 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":301:23)
#loc401 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":274:1)
#loc402 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":305:1)
#loc403 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":276:5)
#loc404 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":276:9)
#loc405 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":278:13)
#loc406 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":278:12)
#loc407 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":278:5)
#loc408 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":279:5)
#loc409 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":280:5)
#loc410 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":304:5)
#loc411 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":281:9)
#loc412 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":281:13)
#loc413 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":282:9)
#loc414 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":282:54)
#loc415 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":282:31)
#loc416 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":282:38)
#loc417 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":282:43)
#loc418 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":282:53)
#loc419 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":283:9)
#loc420 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":283:39)
#loc421 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":283:13)
#loc422 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":283:23)
#loc423 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":283:29)
#loc424 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":283:30)
#loc425 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":283:36)
#loc426 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":283:35)
#loc427 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":285:9)
#loc428 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":288:9)
#loc429 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":285:18)
#loc430 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":285:14)
#loc431 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":285:21)
#loc432 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":285:25)
#loc433 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":287:25)
#loc434 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":287:13)
#loc435 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":287:20)
#loc436 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":287:21)
#loc437 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":285:30)
#loc438 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":285:29)
#loc439 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":290:9)
#loc440 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":302:9)
#loc441 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":290:13)
#loc442 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":290:21)
#loc443 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":290:23)
#loc444 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":290:26)
#loc445 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":290:34)
#loc446 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":290:36)
#loc447 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":291:9)
#loc448 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":298:9)
#loc449 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":300:9)
#loc450 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":292:28)
#loc451 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":292:13)
#loc452 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":292:20)
#loc453 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":292:24)
#loc454 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":294:13)
#loc455 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":297:13)
#loc456 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":294:21)
#loc457 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":294:17)
#loc458 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":294:24)
#loc459 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":294:28)
#loc460 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":296:30)
#loc461 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":296:37)
#loc462 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":296:38)
#loc463 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":296:17)
#loc464 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":294:33)
#loc465 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":294:32)
#loc466 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":301:13)
#loc467 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":303:9)
#loc468 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":303:14)
#loc469 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":307:1)
#loc470 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":311:1)
#loc471 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":309:5)
#loc472 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":310:5)
#loc473 = loc("/usr/include/stdlib.h":575:1)
#loc474 = loc("/usr/include/stdlib.h":575:41)
#loc475 = loc("/usr/include/time.h":76:1)
#loc476 = loc("/usr/include/time.h":76:38)
#loc477 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":331:15)
#loc478 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":333:15)
#loc479 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":336:15)
#loc480 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":338:15)
#loc481 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":326:1)
#loc482 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":341:1)
#loc487 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":327:1)
#loc488 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":329:27)
#loc489 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":329:22)
#loc490 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":329:5)
#loc491 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":331:5)
#loc492 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":332:5)
#loc493 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":333:5)
#loc494 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":336:5)
#loc495 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":337:5)
#loc496 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":338:5)
#loc497 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":340:12)
#loc498 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_43.cpp":340:5)
#loc499 = loc(fused[#loc1, #loc2])
#loc500 = loc(fused[#loc3, #loc4])
#loc501 = loc(fused[#loc5, #loc6])
#loc502 = loc(fused[#loc7, #loc8])
#loc503 = loc(fused[#loc9, #loc10])
#loc504 = loc(fused[#loc11, #loc12])
#loc505 = loc(fused[#loc13, #loc14])
#loc506 = loc(fused[#loc15, #loc16])
#loc507 = loc(fused[#loc17, #loc18])
#loc509 = loc(fused[#loc22, #loc23])
#loc510 = loc(fused[#loc24, #loc25])
#loc511 = loc(fused[#loc26, #loc27])
#loc512 = loc(fused[#loc28, #loc29])
#loc513 = loc(fused[#loc30, #loc31])
#loc514 = loc(fused[#loc32, #loc33])
#loc515 = loc(fused[#loc34, #loc35])
#loc516 = loc(fused[#loc40, #loc41])
#loc517 = loc(fused[#loc42, #loc43])
#loc518 = loc(fused[#loc44, #loc45])
#loc519 = loc(fused[#loc46, #loc43])
#loc520 = loc(fused[#loc48, #loc49])
#loc521 = loc(fused[#loc51, #loc52])
#loc522 = loc(fused[#loc53, #loc54])
#loc523 = loc(fused[#loc57, #loc55])
#loc524 = loc(fused[#loc61, #loc58])
#loc525 = loc(fused[#loc65, #loc66])
#loc526 = loc(fused[#loc67, #loc68])
#loc527 = loc(fused[#loc70, #loc71])
#loc528 = loc(fused[#loc72, #loc73])
#loc529 = loc(fused[#loc74, #loc75])
#loc530 = loc(fused[#loc76, #loc68])
#loc531 = loc(fused[#loc78, #loc79])
#loc532 = loc(fused[#loc82, #loc83])
#loc533 = loc(fused[#loc84, #loc79])
#loc534 = loc(fused[#loc90, #loc91])
#loc535 = loc(fused[#loc92, #loc93])
#loc536 = loc(fused[#loc94, #loc95])
#loc537 = loc(fused[#loc96, #loc93])
#loc538 = loc(fused[#loc100, #loc101])
#loc539 = loc(fused[#loc104, #loc105])
#loc540 = loc(fused[#loc106, #loc107])
#loc541 = loc(fused[#loc108, #loc109])
#loc542 = loc(fused[#loc111, #loc112])
#loc543 = loc(fused[#loc113, #loc107])
#loc544 = loc(fused[#loc117, #loc115])
#loc545 = loc(fused[#loc120, #loc121])
#loc546 = loc(fused[#loc123, #loc124])
#loc547 = loc(fused[#loc125, #loc126])
#loc548 = loc(fused[#loc127, #loc124])
#loc549 = loc(fused[#loc130, #loc131])
#loc550 = loc(fused[#loc132, #loc133])
#loc551 = loc(fused[#loc134, #loc131])
#loc552 = loc(fused[#loc137, #loc138])
#loc553 = loc(fused[#loc139, #loc140])
#loc554 = loc(fused[#loc141, #loc142])
#loc555 = loc(fused[#loc143, #loc144])
#loc556 = loc(fused[#loc146, #loc147])
#loc557 = loc(fused[#loc148, #loc149])
#loc558 = loc(fused[#loc150, #loc151])
#loc559 = loc(fused[#loc154, #loc152])
#loc560 = loc(fused[#loc156, #loc157])
#loc561 = loc(fused[#loc158, #loc159])
#loc562 = loc(fused[#loc160, #loc161])
#loc563 = loc(fused[#loc164, #loc165])
#loc564 = loc(fused[#loc163, #loc165])
#loc565 = loc(fused[#loc162, #loc161])
#loc566 = loc(fused[#loc166, #loc167])
#loc567 = loc(fused[#loc168, #loc169])
#loc568 = loc(fused[#loc170, #loc167])
#loc569 = loc(fused[#loc174, #loc175])
#loc570 = loc(fused[#loc177, #loc176])
#loc571 = loc(fused[#loc178, #loc179])
#loc572 = loc(fused[#loc181, #loc180])
#loc573 = loc(fused[#loc185, #loc184])
#loc574 = loc(fused[#loc186, #loc187])
#loc575 = loc(fused[#loc188, #loc189])
#loc576 = loc(fused[#loc190, #loc191, #loc192, #loc187])
#loc577 = loc(fused[#loc194, #loc193])
#loc578 = loc(fused[#loc197, #loc198])
#loc579 = loc(fused[#loc200, #loc199])
#loc580 = loc(fused[#loc201, #loc202])
#loc581 = loc(fused[#loc208, #loc207])
#loc582 = loc(fused[#loc212, #loc213])
#loc584 = loc(fused[#loc218, #loc217])
#loc585 = loc(fused[#loc219, #loc220])
#loc586 = loc(fused[#loc221, #loc222])
#loc587 = loc(fused[#loc225, #loc223])
#loc588 = loc(fused[#loc227, #loc228])
#loc589 = loc(fused[#loc229, #loc230])
#loc590 = loc(fused[#loc231, #loc232])
#loc591 = loc(fused[#loc235, #loc236])
#loc592 = loc(fused[#loc234, #loc236])
#loc593 = loc(fused[#loc233, #loc232])
#loc594 = loc(fused[#loc237, #loc238])
#loc595 = loc(fused[#loc239, #loc240])
#loc596 = loc(fused[#loc241, #loc238])
#loc597 = loc(fused[#loc245, #loc246])
#loc598 = loc(fused[#loc248, #loc247])
#loc599 = loc(fused[#loc249, #loc250])
#loc600 = loc(fused[#loc252, #loc251])
#loc601 = loc(fused[#loc256, #loc255])
#loc602 = loc(fused[#loc257, #loc258])
#loc603 = loc(fused[#loc259, #loc260])
#loc604 = loc(fused[#loc261, #loc262, #loc263, #loc258])
#loc605 = loc(fused[#loc265, #loc264])
#loc606 = loc(fused[#loc268, #loc269])
#loc607 = loc(fused[#loc271, #loc270])
#loc608 = loc(fused[#loc272, #loc273])
#loc609 = loc(fused[#loc279, #loc278])
#loc610 = loc(fused[#loc284, #loc285])
#loc612 = loc(fused[#loc289, #loc290])
#loc613 = loc(fused[#loc291, #loc292])
#loc614 = loc(fused[#loc293, #loc294])
#loc615 = loc(fused[#loc295, #loc296])
#loc616 = loc(fused[#loc297, #loc298])
#loc617 = loc(fused[#loc299, #loc300])
#loc618 = loc(fused[#loc301, #loc302])
#loc619 = loc(fused[#loc307, #loc308])
#loc620 = loc(fused[#loc309, #loc310])
#loc621 = loc(fused[#loc311, #loc312])
#loc622 = loc(fused[#loc313, #loc310])
#loc623 = loc(fused[#loc315, #loc316])
#loc624 = loc(fused[#loc318, #loc319])
#loc625 = loc(fused[#loc320, #loc321])
#loc626 = loc(fused[#loc323, #loc322])
#loc627 = loc(fused[#loc325, #loc324])
#loc628 = loc(fused[#loc328, #loc329])
#loc629 = loc(fused[#loc330, #loc331])
#loc630 = loc(fused[#loc333, #loc334])
#loc631 = loc(fused[#loc335, #loc336])
#loc632 = loc(fused[#loc337, #loc338])
#loc633 = loc(fused[#loc339, #loc331])
#loc634 = loc(fused[#loc341, #loc342])
#loc635 = loc(fused[#loc345, #loc346])
#loc636 = loc(fused[#loc347, #loc342])
#loc637 = loc(fused[#loc353, #loc354])
#loc638 = loc(fused[#loc355, #loc356])
#loc639 = loc(fused[#loc357, #loc358])
#loc640 = loc(fused[#loc359, #loc356])
#loc641 = loc(fused[#loc363, #loc364])
#loc642 = loc(fused[#loc367, #loc368])
#loc643 = loc(fused[#loc369, #loc370])
#loc644 = loc(fused[#loc371, #loc372])
#loc645 = loc(fused[#loc374, #loc375])
#loc646 = loc(fused[#loc376, #loc370])
#loc647 = loc(fused[#loc380, #loc378])
#loc648 = loc(fused[#loc383, #loc384])
#loc649 = loc(fused[#loc386, #loc387])
#loc650 = loc(fused[#loc388, #loc389])
#loc651 = loc(fused[#loc390, #loc387])
#loc652 = loc(fused[#loc393, #loc394])
#loc653 = loc(fused[#loc395, #loc396])
#loc654 = loc(fused[#loc397, #loc394])
#loc655 = loc(fused[#loc401, #loc402])
#loc656 = loc(fused[#loc403, #loc404])
#loc657 = loc(fused[#loc407, #loc405])
#loc658 = loc(fused[#loc409, #loc410])
#loc659 = loc(fused[#loc411, #loc412])
#loc660 = loc(fused[#loc413, #loc414])
#loc661 = loc(fused[#loc417, #loc418])
#loc662 = loc(fused[#loc416, #loc418])
#loc663 = loc(fused[#loc415, #loc414])
#loc664 = loc(fused[#loc419, #loc420])
#loc665 = loc(fused[#loc421, #loc422])
#loc666 = loc(fused[#loc423, #loc420])
#loc667 = loc(fused[#loc427, #loc428])
#loc668 = loc(fused[#loc430, #loc429])
#loc669 = loc(fused[#loc431, #loc432])
#loc670 = loc(fused[#loc434, #loc433])
#loc671 = loc(fused[#loc438, #loc437])
#loc672 = loc(fused[#loc439, #loc440])
#loc673 = loc(fused[#loc441, #loc442])
#loc674 = loc(fused[#loc444, #loc446])
#loc675 = loc(fused[#loc447, #loc448, #loc449, #loc440])
#loc676 = loc(fused[#loc451, #loc450])
#loc677 = loc(fused[#loc454, #loc455])
#loc678 = loc(fused[#loc457, #loc456])
#loc679 = loc(fused[#loc458, #loc459])
#loc680 = loc(fused[#loc465, #loc464])
#loc681 = loc(fused[#loc469, #loc470])
#loc682 = loc(fused[#loc473, #loc474])
#loc683 = loc(fused[#loc475, #loc476])
#loc684 = loc(fused[#loc481, #loc482])
#loc687 = loc(fused[#loc498, #loc497])
