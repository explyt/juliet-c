!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fwrite_09.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" constant external @GLOBAL_CONST_TRUE : !s32i {alignment = 4 : i64} loc(#loc77)
  cir.func private @fwrite(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc5)
  cir.global "private" external @stdout : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc79)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fwrite_09_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc77)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc12)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc12)
      cir.if %2 {
        %3 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc14)
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc5)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc5)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc83)
        %7 = cir.const #cir.int<1> : !u64i loc(#loc84)
        %8 = cir.const #cir.int<6> : !u64i loc(#loc85)
        %9 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc79)
        %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc20)
        %11 = cir.call @fwrite(%6, %7, %8, %10) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc14)
      } loc(#loc82)
    } loc(#loc81)
    cir.return loc(#loc9)
  } loc(#loc80)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fwrite_09_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc87)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc23)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc88)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc25)
    cir.return loc(#loc22)
  } loc(#loc86)
  cir.global "private" constant external @GLOBAL_CONST_FALSE : !s32i {alignment = 4 : i64} loc(#loc89)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc90)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc31)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"fwrite failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc32)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @GLOBAL_CONST_FALSE : !cir.ptr<!s32i> loc(#loc89)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc37)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc37)
      cir.if %2 {
        %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc31)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc31)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc41)
      } else {
        cir.scope {
          %3 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc44)
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc45)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc45)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc95)
          %7 = cir.const #cir.int<1> : !u64i loc(#loc96)
          %8 = cir.const #cir.int<6> : !u64i loc(#loc97)
          %9 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc79)
          %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc51)
          %11 = cir.call @fwrite(%6, %7, %8, %10) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc44)
          %12 = cir.const #cir.int<6> : !u64i loc(#loc98)
          %13 = cir.cmp(ne, %11, %12) : !u64i, !cir.bool loc(#loc99)
          cir.if %13 {
            %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc32)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc32)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc55)
          } loc(#loc100)
        } loc(#loc94)
      } loc(#loc93)
    } loc(#loc92)
    cir.return loc(#loc34)
  } loc(#loc91)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc77)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc60)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc60)
      cir.if %2 {
        cir.scope {
          %3 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc64)
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc65)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc65)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc105)
          %7 = cir.const #cir.int<1> : !u64i loc(#loc106)
          %8 = cir.const #cir.int<6> : !u64i loc(#loc107)
          %9 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc79)
          %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc71)
          %11 = cir.call @fwrite(%6, %7, %8, %10) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc64)
          %12 = cir.const #cir.int<6> : !u64i loc(#loc108)
          %13 = cir.cmp(ne, %11, %12) : !u64i, !cir.bool loc(#loc109)
          cir.if %13 {
            %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc75)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc75)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc76)
          } loc(#loc110)
        } loc(#loc104)
      } loc(#loc103)
    } loc(#loc102)
    cir.return loc(#loc57)
  } loc(#loc101)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fwrite_09.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase.h":109:1)
#loc2 = loc("../../testcasesupport/std_testcase.h":109:18)
#loc3 = loc("/usr/include/stdio.h":745:1)
#loc4 = loc("/usr/include/stdio.h":746:43)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":29:24)
#loc6 = loc("/usr/include/stdio.h":150:1)
#loc7 = loc("/usr/include/stdio.h":150:14)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":24:1)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":31:1)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":26:5)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":30:5)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":26:8)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":27:5)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":29:9)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":29:16)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":29:34)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":29:45)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":29:48)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":29:63)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":29:66)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":68:1)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":72:1)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":70:5)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":70:11)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":71:5)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":71:11)
#loc27 = loc("../../testcasesupport/std_testcase.h":110:1)
#loc28 = loc("../../testcasesupport/std_testcase.h":110:18)
#loc29 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc30 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":43:19)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":50:23)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":38:1)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":53:1)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":40:5)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":52:5)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":40:8)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":41:5)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":44:5)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":46:5)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":43:9)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":48:9)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":51:9)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":48:13)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":48:28)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":48:20)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":48:38)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":48:49)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":48:52)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":48:67)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":48:70)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":48:81)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":48:96)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":49:9)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":50:13)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":56:1)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":66:1)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":58:5)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":65:5)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":58:8)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":59:5)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":61:9)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":64:9)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":61:13)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":61:28)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":61:20)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":61:38)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":61:49)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":61:52)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":61:67)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":61:70)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":61:81)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":61:96)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":62:9)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":63:23)
#loc76 = loc("CWE252_Unchecked_Return_Value__char_fwrite_09.c":63:13)
#loc77 = loc(fused[#loc1, #loc2])
#loc78 = loc(fused[#loc3, #loc4])
#loc79 = loc(fused[#loc6, #loc7])
#loc80 = loc(fused[#loc8, #loc9])
#loc81 = loc(fused[#loc10, #loc11])
#loc82 = loc(fused[#loc13, #loc11])
#loc83 = loc(fused[#loc15, #loc5])
#loc84 = loc(fused[#loc16, #loc17])
#loc85 = loc(fused[#loc18, #loc19])
#loc86 = loc(fused[#loc21, #loc22])
#loc87 = loc(fused[#loc23, #loc24])
#loc88 = loc(fused[#loc25, #loc26])
#loc89 = loc(fused[#loc27, #loc28])
#loc90 = loc(fused[#loc29, #loc30])
#loc91 = loc(fused[#loc33, #loc34])
#loc92 = loc(fused[#loc35, #loc36])
#loc93 = loc(fused[#loc38, #loc39, #loc40, #loc36])
#loc94 = loc(fused[#loc42, #loc43])
#loc95 = loc(fused[#loc46, #loc45])
#loc96 = loc(fused[#loc47, #loc48])
#loc97 = loc(fused[#loc49, #loc50])
#loc98 = loc(fused[#loc52, #loc53])
#loc99 = loc(fused[#loc44, #loc53])
#loc100 = loc(fused[#loc54, #loc43])
#loc101 = loc(fused[#loc56, #loc57])
#loc102 = loc(fused[#loc58, #loc59])
#loc103 = loc(fused[#loc61, #loc59])
#loc104 = loc(fused[#loc62, #loc63])
#loc105 = loc(fused[#loc66, #loc65])
#loc106 = loc(fused[#loc67, #loc68])
#loc107 = loc(fused[#loc69, #loc70])
#loc108 = loc(fused[#loc72, #loc73])
#loc109 = loc(fused[#loc64, #loc73])
#loc110 = loc(fused[#loc74, #loc63])
