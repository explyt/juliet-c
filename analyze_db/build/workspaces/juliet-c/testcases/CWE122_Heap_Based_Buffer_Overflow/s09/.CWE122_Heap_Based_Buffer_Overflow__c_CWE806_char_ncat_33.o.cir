!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc120)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc121)
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc122)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc123)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc124)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc125)
  cir.func @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc127)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc128)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc18)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc19)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc20)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc20)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc129)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc130)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc19)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc131)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
    cir.scope {
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
      %24 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc28)
      %25 = cir.cmp(eq, %23, %24) : !cir.ptr<!s8i>, !cir.bool loc(#loc134)
      cir.if %25 {
        %26 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc30)
        %27 = cir.const #cir.int<1> : !s32i loc(#loc31)
        %28 = cir.unary(minus, %27) nsw : !s32i, !s32i loc(#loc32)
        cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc30)
      } loc(#loc135)
    } loc(#loc133)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc33)
    %11 = cir.const #cir.int<65> : !s8i loc(#loc34)
    %12 = cir.cast(integral, %11 : !s8i), !s32i loc(#loc34)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc35)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc35)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc35)
    cir.libc.memset %16 bytes from %10 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc136)
    %17 = cir.const #cir.int<0> : !s8i loc(#loc39)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc41)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc42)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc41)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc43)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc137)
    cir.scope {
      %23 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc139)
      %24 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc47)
      %25 = cir.load %24 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
      cir.store %25, %23 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc139)
      cir.scope {
        %26 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc141)
        %27 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc141)
        cir.store %27, %26 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc141)
        %28 = cir.get_global @strncat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc52)
        %29 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc53)
        %30 = cir.load %23 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
        %31 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc55)
        %32 = cir.load %23 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
        %33 = cir.call @strlen(%32) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc55)
        %34 = cir.call @strncat(%29, %30, %33) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc52)
        %35 = cir.const #cir.int<0> : !s8i loc(#loc57)
        %36 = cir.const #cir.int<50> : !s32i loc(#loc58)
        %37 = cir.const #cir.int<1> : !s32i loc(#loc59)
        %38 = cir.binop(sub, %36, %37) nsw : !s32i loc(#loc58)
        %39 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc60)
        %40 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %38 : !s32i), !cir.ptr<!s8i> loc(#loc60)
        cir.store %35, %40 : !s8i, !cir.ptr<!s8i> loc(#loc142)
        %41 = cir.load %23 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
        cir.call @printLine(%41) : (!cir.ptr<!s8i>) -> () loc(#loc62)
        %42 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc63)
        %43 = cir.load %23 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
        %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc64)
        cir.call @free(%44) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc63)
      } loc(#loc140)
    } loc(#loc138)
    cir.return loc(#loc14)
  } loc(#loc126)
  cir.func internal private @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc144)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc145)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc70)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc71)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc72)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc72)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc146)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc147)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc71)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc148)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc149)
    cir.scope {
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
      %24 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc80)
      %25 = cir.cmp(eq, %23, %24) : !cir.ptr<!s8i>, !cir.bool loc(#loc151)
      cir.if %25 {
        %26 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc82)
        %27 = cir.const #cir.int<1> : !s32i loc(#loc83)
        %28 = cir.unary(minus, %27) nsw : !s32i, !s32i loc(#loc84)
        cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc82)
      } loc(#loc152)
    } loc(#loc150)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc85)
    %11 = cir.const #cir.int<65> : !s8i loc(#loc86)
    %12 = cir.cast(integral, %11 : !s8i), !s32i loc(#loc86)
    %13 = cir.const #cir.int<50> : !s32i loc(#loc87)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc87)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc87)
    cir.libc.memset %16 bytes from %10 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc153)
    %17 = cir.const #cir.int<0> : !s8i loc(#loc91)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
    %19 = cir.const #cir.int<50> : !s32i loc(#loc93)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc93)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc95)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc154)
    cir.scope {
      %23 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc156)
      %24 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc99)
      %25 = cir.load %24 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
      cir.store %25, %23 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc156)
      cir.scope {
        %26 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc158)
        %27 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc158)
        cir.store %27, %26 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc158)
        %28 = cir.get_global @strncat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc104)
        %29 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc105)
        %30 = cir.load %23 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
        %31 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc107)
        %32 = cir.load %23 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
        %33 = cir.call @strlen(%32) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc107)
        %34 = cir.call @strncat(%29, %30, %33) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc104)
        %35 = cir.const #cir.int<0> : !s8i loc(#loc109)
        %36 = cir.const #cir.int<50> : !s32i loc(#loc110)
        %37 = cir.const #cir.int<1> : !s32i loc(#loc111)
        %38 = cir.binop(sub, %36, %37) nsw : !s32i loc(#loc110)
        %39 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc112)
        %40 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %38 : !s32i), !cir.ptr<!s8i> loc(#loc112)
        cir.store %35, %40 : !s8i, !cir.ptr<!s8i> loc(#loc159)
        %41 = cir.load %23 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
        cir.call @printLine(%41) : (!cir.ptr<!s8i>) -> () loc(#loc114)
        %42 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc115)
        %43 = cir.load %23 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
        %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc116)
        cir.call @free(%44) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc115)
      } loc(#loc157)
    } loc(#loc155)
    cir.return loc(#loc66)
  } loc(#loc143)
  cir.func @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33L7goodG2BEv() : () -> () loc(#loc119)
    cir.return loc(#loc118)
  } loc(#loc160)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":152:1)
#loc6 = loc("/usr/include/string.h":153:29)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("/usr/include/stdlib.h":687:1)
#loc12 = loc("/usr/include/stdlib.h":687:32)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":26:1)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":46:1)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":28:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":28:12)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":29:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":29:23)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":30:20)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":30:27)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":30:31)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":30:42)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":30:43)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":30:5)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":31:5)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":31:33)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":31:9)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":31:17)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":31:23)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":31:24)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":31:30)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":31:29)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":33:12)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":33:18)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":33:23)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":33:27)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":33:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":33:28)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":34:19)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":34:5)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":34:10)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":34:14)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":34:15)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":35:5)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":45:5)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":36:9)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":36:23)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":37:9)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":44:9)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":38:13)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":38:29)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":40:13)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":40:21)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":40:27)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":40:33)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":40:40)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":41:26)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":41:18)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":41:21)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":41:13)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":42:23)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":42:13)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":43:13)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":43:18)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":53:1)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":73:1)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":55:5)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":55:12)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":56:5)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":56:23)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":57:20)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":57:27)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":57:31)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":57:42)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":57:43)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":57:5)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":58:5)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":58:33)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":58:9)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":58:17)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":58:23)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":58:24)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":58:30)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":58:29)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":60:12)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":60:18)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":60:23)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":60:26)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":60:5)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":60:27)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":61:18)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":61:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":61:10)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":61:13)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":61:14)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":62:5)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":72:5)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":63:9)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":63:23)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":64:9)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":71:9)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":65:13)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":65:29)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":67:13)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":67:21)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":67:27)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":67:33)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":67:40)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":68:26)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":68:18)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":68:21)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":68:13)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":69:23)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":69:13)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":70:13)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":70:18)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":75:1)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":78:1)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_33.cpp":77:5)
#loc120 = loc(fused[#loc1, #loc2])
#loc121 = loc(fused[#loc3, #loc4])
#loc122 = loc(fused[#loc5, #loc6])
#loc123 = loc(fused[#loc7, #loc8])
#loc124 = loc(fused[#loc9, #loc10])
#loc125 = loc(fused[#loc11, #loc12])
#loc126 = loc(fused[#loc13, #loc14])
#loc127 = loc(fused[#loc15, #loc16])
#loc128 = loc(fused[#loc17, #loc18])
#loc129 = loc(fused[#loc21, #loc22])
#loc130 = loc(fused[#loc20, #loc22])
#loc131 = loc(fused[#loc19, #loc23])
#loc132 = loc(fused[#loc24, #loc23])
#loc133 = loc(fused[#loc25, #loc26])
#loc134 = loc(fused[#loc27, #loc28])
#loc135 = loc(fused[#loc29, #loc26])
#loc136 = loc(fused[#loc37, #loc38])
#loc137 = loc(fused[#loc40, #loc39])
#loc138 = loc(fused[#loc44, #loc45])
#loc139 = loc(fused[#loc46, #loc47])
#loc140 = loc(fused[#loc48, #loc49])
#loc141 = loc(fused[#loc50, #loc51])
#loc142 = loc(fused[#loc60, #loc57])
#loc143 = loc(fused[#loc65, #loc66])
#loc144 = loc(fused[#loc67, #loc68])
#loc145 = loc(fused[#loc69, #loc70])
#loc146 = loc(fused[#loc73, #loc74])
#loc147 = loc(fused[#loc72, #loc74])
#loc148 = loc(fused[#loc71, #loc75])
#loc149 = loc(fused[#loc76, #loc75])
#loc150 = loc(fused[#loc77, #loc78])
#loc151 = loc(fused[#loc79, #loc80])
#loc152 = loc(fused[#loc81, #loc78])
#loc153 = loc(fused[#loc89, #loc90])
#loc154 = loc(fused[#loc92, #loc91])
#loc155 = loc(fused[#loc96, #loc97])
#loc156 = loc(fused[#loc98, #loc99])
#loc157 = loc(fused[#loc100, #loc101])
#loc158 = loc(fused[#loc102, #loc103])
#loc159 = loc(fused[#loc112, #loc109])
#loc160 = loc(fused[#loc117, #loc118])
