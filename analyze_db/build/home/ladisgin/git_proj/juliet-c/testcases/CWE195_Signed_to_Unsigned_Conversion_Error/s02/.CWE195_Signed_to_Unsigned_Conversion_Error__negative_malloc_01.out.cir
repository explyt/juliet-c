!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc65 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":85:10)
#loc66 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":85:14)
#loc67 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":85:20)
#loc68 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":85:32)
#loc148 = loc(fused[#loc65, #loc66])
#loc149 = loc(fused[#loc67, #loc68])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc125)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc126)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc127)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc128)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc130)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc13)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc14)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc131)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc17)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc132)
    cir.scope {
      %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc21)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc22)
      %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc134)
      cir.if %7 {
        %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc136)
        %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc26)
        %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc27)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc27)
        %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc26)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc137)
        cir.store %13, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc136)
        cir.scope {
          %32 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
          %33 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc31)
          %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc31)
          %35 = cir.cmp(eq, %32, %34) : !cir.ptr<!s8i>, !cir.bool loc(#loc139)
          cir.if %35 {
            %36 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc33)
            %37 = cir.const #cir.int<1> : !s32i loc(#loc34)
            %38 = cir.unary(minus, %37) : !s32i, !s32i loc(#loc35)
            cir.call @exit(%38) : (!s32i) -> () extra(#fn_attr) loc(#loc33)
          } loc(#loc140)
        } loc(#loc138)
        %14 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
        %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc36)
        %16 = cir.const #cir.int<65> : !s32i loc(#loc37)
        %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc38)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc39)
        %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc38)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc38)
        cir.libc.memset %20 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc141)
        %21 = cir.const #cir.int<0> : !s32i loc(#loc42)
        %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc42)
        %23 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
        %24 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc44)
        %25 = cir.const #cir.int<1> : !s32i loc(#loc45)
        %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc44)
        %27 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc46)
        cir.store %22, %27 : !s8i, !cir.ptr<!s8i> loc(#loc142)
        %28 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
        cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc48)
        %29 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc49)
        %30 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
        %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc50)
        cir.call @free(%31) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc49)
      } loc(#loc135)
    } loc(#loc133)
    cir.return loc(#loc10)
  } loc(#loc129)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc144)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc53)
    cir.return loc(#loc52)
  } loc(#loc143)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc145)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc146)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc60)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc61)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc62)
  cir.func @main(%arg0: !s32i loc(fused[#loc65, #loc66]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc67, #loc68])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc148)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc149)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc64)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc69)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc69)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc70)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc71)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc71)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc72)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc59)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %8 = cir.get_global @CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01_good : !cir.ptr<!cir.func<!void ()>> loc(#loc150)
    cir.call @CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01_good() : () -> () loc(#loc74)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc60)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc61)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    %13 = cir.get_global @CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc151)
    cir.call @CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01_bad() : () -> () loc(#loc78)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc62)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc81)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    cir.return %17 : !s32i loc(#loc152)
  } loc(#loc147)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc154)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc87)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc88)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc155)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc90)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc91)
    %5 = cir.binop(sub, %3, %4) nsw : !s32i loc(#loc90)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    cir.scope {
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc95)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc96)
      %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc158)
      cir.if %8 {
        %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc160)
        %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc100)
        %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc101)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc101)
        %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc100)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc161)
        cir.store %14, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc160)
        cir.scope {
          %33 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc105)
          %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc105)
          %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!s8i>, !cir.bool loc(#loc163)
          cir.if %36 {
            %37 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc107)
            %38 = cir.const #cir.int<1> : !s32i loc(#loc108)
            %39 = cir.unary(minus, %38) : !s32i, !s32i loc(#loc109)
            cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc107)
          } loc(#loc164)
        } loc(#loc162)
        %15 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
        %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc110)
        %17 = cir.const #cir.int<65> : !s32i loc(#loc111)
        %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc112)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc113)
        %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc112)
        %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc112)
        cir.libc.memset %21 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc165)
        %22 = cir.const #cir.int<0> : !s32i loc(#loc116)
        %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc116)
        %24 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
        %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc118)
        %26 = cir.const #cir.int<1> : !s32i loc(#loc119)
        %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc118)
        %28 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc120)
        cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc166)
        %29 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
        cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc122)
        %30 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc123)
        %31 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
        %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc124)
        cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc123)
      } loc(#loc159)
    } loc(#loc157)
    cir.return loc(#loc84)
  } loc(#loc153)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":21:1)
#loc10 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":41:1)
#loc11 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":23:5)
#loc12 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":23:9)
#loc13 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":25:13)
#loc14 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":25:12)
#loc15 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":25:5)
#loc16 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":27:13)
#loc17 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":27:12)
#loc18 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":27:5)
#loc19 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":29:5)
#loc20 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":40:5)
#loc21 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":29:9)
#loc22 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":29:16)
#loc23 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":30:5)
#loc24 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":33:9)
#loc25 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":33:48)
#loc26 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":33:37)
#loc27 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":33:44)
#loc28 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":34:9)
#loc29 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":34:43)
#loc30 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":34:13)
#loc31 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":34:27)
#loc32 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":34:33)
#loc33 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":34:34)
#loc34 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":34:40)
#loc35 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":34:39)
#loc36 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":36:16)
#loc37 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":36:28)
#loc38 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":36:33)
#loc39 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":36:38)
#loc40 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":36:9)
#loc41 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":36:39)
#loc42 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":37:30)
#loc43 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":37:9)
#loc44 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":37:20)
#loc45 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":37:25)
#loc46 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":37:26)
#loc47 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":38:19)
#loc48 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":38:9)
#loc49 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":39:9)
#loc50 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":39:14)
#loc51 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":70:1)
#loc52 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":73:1)
#loc53 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":72:5)
#loc54 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":72:13)
#loc55 = loc("/usr/include/stdlib.h":575:1)
#loc56 = loc("/usr/include/stdlib.h":575:41)
#loc57 = loc("/usr/include/time.h":76:1)
#loc58 = loc("/usr/include/time.h":76:38)
#loc59 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":90:15)
#loc60 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":92:15)
#loc61 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":95:15)
#loc62 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":97:15)
#loc63 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":85:1)
#loc64 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":100:1)
#loc69 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":86:1)
#loc70 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":88:27)
#loc71 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":88:22)
#loc72 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":88:5)
#loc73 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":90:5)
#loc74 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":91:5)
#loc75 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":91:73)
#loc76 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":92:5)
#loc77 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":95:5)
#loc78 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":96:5)
#loc79 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":96:72)
#loc80 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":97:5)
#loc81 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":99:12)
#loc82 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":99:5)
#loc83 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":48:1)
#loc84 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":68:1)
#loc85 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":50:5)
#loc86 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":50:9)
#loc87 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":52:13)
#loc88 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":52:12)
#loc89 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":52:5)
#loc90 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":54:12)
#loc91 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":54:16)
#loc92 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":54:5)
#loc93 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":56:5)
#loc94 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":67:5)
#loc95 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":56:9)
#loc96 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":56:16)
#loc97 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":57:5)
#loc98 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":60:9)
#loc99 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":60:48)
#loc100 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":60:37)
#loc101 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":60:44)
#loc102 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":61:9)
#loc103 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":61:43)
#loc104 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":61:13)
#loc105 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":61:27)
#loc106 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":61:33)
#loc107 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":61:34)
#loc108 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":61:40)
#loc109 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":61:39)
#loc110 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":63:16)
#loc111 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":63:28)
#loc112 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":63:33)
#loc113 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":63:38)
#loc114 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":63:9)
#loc115 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":63:39)
#loc116 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":64:30)
#loc117 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":64:9)
#loc118 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":64:20)
#loc119 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":64:25)
#loc120 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":64:26)
#loc121 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":65:19)
#loc122 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":65:9)
#loc123 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":66:9)
#loc124 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_malloc_01.c":66:14)
#loc125 = loc(fused[#loc1, #loc2])
#loc126 = loc(fused[#loc3, #loc4])
#loc127 = loc(fused[#loc5, #loc6])
#loc128 = loc(fused[#loc7, #loc8])
#loc129 = loc(fused[#loc9, #loc10])
#loc130 = loc(fused[#loc11, #loc12])
#loc131 = loc(fused[#loc15, #loc13])
#loc132 = loc(fused[#loc18, #loc16])
#loc133 = loc(fused[#loc19, #loc20])
#loc134 = loc(fused[#loc21, #loc22])
#loc135 = loc(fused[#loc23, #loc20])
#loc136 = loc(fused[#loc24, #loc25])
#loc137 = loc(fused[#loc26, #loc25])
#loc138 = loc(fused[#loc28, #loc29])
#loc139 = loc(fused[#loc30, #loc31])
#loc140 = loc(fused[#loc32, #loc29])
#loc141 = loc(fused[#loc40, #loc41])
#loc142 = loc(fused[#loc43, #loc42])
#loc143 = loc(fused[#loc51, #loc52])
#loc144 = loc(fused[#loc53, #loc54])
#loc145 = loc(fused[#loc55, #loc56])
#loc146 = loc(fused[#loc57, #loc58])
#loc147 = loc(fused[#loc63, #loc64])
#loc150 = loc(fused[#loc74, #loc75])
#loc151 = loc(fused[#loc78, #loc79])
#loc152 = loc(fused[#loc82, #loc81])
#loc153 = loc(fused[#loc83, #loc84])
#loc154 = loc(fused[#loc85, #loc86])
#loc155 = loc(fused[#loc89, #loc87])
#loc156 = loc(fused[#loc92, #loc91])
#loc157 = loc(fused[#loc93, #loc94])
#loc158 = loc(fused[#loc95, #loc96])
#loc159 = loc(fused[#loc97, #loc94])
#loc160 = loc(fused[#loc98, #loc99])
#loc161 = loc(fused[#loc100, #loc99])
#loc162 = loc(fused[#loc102, #loc103])
#loc163 = loc(fused[#loc104, #loc105])
#loc164 = loc(fused[#loc106, #loc103])
#loc165 = loc(fused[#loc114, #loc115])
#loc166 = loc(fused[#loc117, #loc116])
