!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc74 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":94:10)
#loc75 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":94:14)
#loc76 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":94:20)
#loc77 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":94:32)
#loc171 = loc(fused[#loc74, #loc75])
#loc172 = loc(fused[#loc76, #loc77])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc143)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc144)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc145)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"A String\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc146)
  cir.func private @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc147)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"New String\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> {alignment = 1 : i64} loc(#loc12)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc148)
  cir.func no_proto @CWE401_Memory_Leak__malloc_realloc_char_16_bad() extra(#fn_attr1) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc19)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc19)
        cir.condition(%1) loc(#loc19)
      } do {
        cir.scope {
          %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc152)
          %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc24)
          %2 = cir.const #cir.int<100> : !s32i loc(#loc25)
          %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc25)
          %4 = cir.const #cir.int<1> : !u64i loc(#loc153)
          %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc154)
          %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc24)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc155)
          cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
          cir.scope {
            %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
            %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc31)
            %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc31)
            %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc157)
            cir.if %26 {
              %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc33)
              %28 = cir.const #cir.int<1> : !s32i loc(#loc34)
              %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc35)
              cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc33)
            } loc(#loc158)
          } loc(#loc156)
          %8 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc36)
          %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
          %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc7)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc7)
          %12 = cir.call @strcpy(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc36)
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
          cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc39)
          %14 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc40)
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc41)
          %17 = cir.const #cir.int<130000> : !s32i loc(#loc42)
          %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc42)
          %19 = cir.const #cir.int<1> : !u64i loc(#loc159)
          %20 = cir.binop(mul, %18, %19) : !u64i loc(#loc160)
          %21 = cir.call @realloc(%16, %20) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc40)
          %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc161)
          cir.store %22, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc162)
          cir.scope {
            %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
            %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc51)
            %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc51)
            %26 = cir.cmp(ne, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc164)
            cir.if %26 {
              %27 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc53)
              %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
              %29 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc12)
              %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc12)
              %31 = cir.call @strcpy(%28, %30) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc53)
              %32 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
              cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc56)
              %33 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc57)
              %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
              %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc58)
              cir.call @free(%35) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc57)
            } loc(#loc165)
          } loc(#loc163)
        } loc(#loc151)
        cir.break loc(#loc59)
      } loc(#loc150)
    } loc(#loc150)
    cir.return loc(#loc16)
  } loc(#loc149)
  cir.func no_proto @CWE401_Memory_Leak__malloc_realloc_char_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc167)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc62)
    cir.return loc(#loc61)
  } loc(#loc166)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc168)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc169)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc71)
  cir.func @main(%arg0: !s32i loc(fused[#loc74, #loc75]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc76, #loc77])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc171)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc172)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc73)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc78)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc78)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc79)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc80)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc80)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc81)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc68)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %8 = cir.get_global @CWE401_Memory_Leak__malloc_realloc_char_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc173)
    cir.call @CWE401_Memory_Leak__malloc_realloc_char_16_good() : () -> () loc(#loc83)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc69)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc70)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %13 = cir.get_global @CWE401_Memory_Leak__malloc_realloc_char_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc174)
    cir.call @CWE401_Memory_Leak__malloc_realloc_char_16_bad() : () -> () loc(#loc87)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc71)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc90)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc175)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    cir.return %17 : !s32i loc(#loc175)
  } loc(#loc170)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc96)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc96)
        cir.condition(%1) loc(#loc96)
      } do {
        cir.scope {
          %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc179)
          %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc180)
          %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc103)
          %3 = cir.const #cir.int<100> : !s32i loc(#loc104)
          %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc104)
          %5 = cir.const #cir.int<1> : !u64i loc(#loc181)
          %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc182)
          %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc103)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc183)
          cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc179)
          cir.scope {
            %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
            %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc110)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc110)
            %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc185)
            cir.if %30 {
              %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc112)
              %32 = cir.const #cir.int<1> : !s32i loc(#loc113)
              %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc114)
              cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc112)
            } loc(#loc186)
          } loc(#loc184)
          %9 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc115)
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
          %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc117)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc117)
          %13 = cir.call @strcpy(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc115)
          %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
          cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc119)
          %15 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc120)
          %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc121)
          %18 = cir.const #cir.int<130000> : !s32i loc(#loc122)
          %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc122)
          %20 = cir.const #cir.int<1> : !u64i loc(#loc187)
          %21 = cir.binop(mul, %19, %20) : !u64i loc(#loc188)
          %22 = cir.call @realloc(%17, %21) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc120)
          %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc189)
          cir.store %23, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc190)
          cir.scope {
            %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
            %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc131)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc131)
            %30 = cir.cmp(ne, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc192)
            cir.if %30 {
              %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
              cir.store %31, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc194)
              %32 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc135)
              %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
              %34 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc137)
              %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc137)
              %36 = cir.call @strcpy(%33, %35) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc135)
              %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
              cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc139)
            } loc(#loc193)
          } loc(#loc191)
          %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc140)
          %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
          %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc141)
          cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc140)
        } loc(#loc178)
        cir.break loc(#loc142)
      } loc(#loc177)
    } loc(#loc177)
    cir.return loc(#loc93)
  } loc(#loc176)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_16.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":32:26)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("/usr/include/stdlib.h":683:1)
#loc11 = loc("/usr/include/stdlib.h":684:14)
#loc12 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":39:30)
#loc13 = loc("/usr/include/stdlib.h":687:1)
#loc14 = loc("/usr/include/stdlib.h":687:32)
#loc15 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":24:1)
#loc16 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":46:1)
#loc17 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":26:5)
#loc18 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":45:5)
#loc19 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":26:11)
#loc20 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":28:9)
#loc21 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":43:9)
#loc22 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":29:13)
#loc23 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":29:58)
#loc24 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":29:35)
#loc25 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":29:42)
#loc26 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":29:46)
#loc27 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":29:57)
#loc28 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":30:13)
#loc29 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":30:41)
#loc30 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":30:17)
#loc31 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":30:25)
#loc32 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":30:31)
#loc33 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":30:32)
#loc34 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":30:38)
#loc35 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":30:37)
#loc36 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":32:13)
#loc37 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":32:20)
#loc38 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":33:23)
#loc39 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":33:13)
#loc40 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":35:28)
#loc41 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":35:36)
#loc42 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":35:43)
#loc43 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":35:51)
#loc44 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":35:62)
#loc45 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":35:42)
#loc46 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":35:63)
#loc47 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":35:13)
#loc48 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":36:13)
#loc49 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":42:13)
#loc50 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":36:17)
#loc51 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":36:25)
#loc52 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":37:13)
#loc53 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":39:17)
#loc54 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":39:24)
#loc55 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":40:27)
#loc56 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":40:17)
#loc57 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":41:17)
#loc58 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":41:22)
#loc59 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":44:9)
#loc60 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":80:1)
#loc61 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":83:1)
#loc62 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":82:5)
#loc63 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":82:11)
#loc64 = loc("/usr/include/stdlib.h":575:1)
#loc65 = loc("/usr/include/stdlib.h":575:41)
#loc66 = loc("/usr/include/time.h":76:1)
#loc67 = loc("/usr/include/time.h":76:38)
#loc68 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":99:15)
#loc69 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":101:15)
#loc70 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":104:15)
#loc71 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":106:15)
#loc72 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":94:1)
#loc73 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":109:1)
#loc78 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":95:1)
#loc79 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":97:27)
#loc80 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":97:22)
#loc81 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":97:5)
#loc82 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":99:5)
#loc83 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":100:5)
#loc84 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":100:53)
#loc85 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":101:5)
#loc86 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":104:5)
#loc87 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":105:5)
#loc88 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":105:52)
#loc89 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":106:5)
#loc90 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":108:12)
#loc91 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":108:5)
#loc92 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":53:1)
#loc93 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":78:1)
#loc94 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":55:5)
#loc95 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":77:5)
#loc96 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":55:11)
#loc97 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":57:9)
#loc98 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":75:9)
#loc99 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":58:13)
#loc100 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":58:58)
#loc101 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":60:13)
#loc102 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":60:20)
#loc103 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":58:35)
#loc104 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":58:42)
#loc105 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":58:46)
#loc106 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":58:57)
#loc107 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":59:13)
#loc108 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":59:41)
#loc109 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":59:17)
#loc110 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":59:25)
#loc111 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":59:31)
#loc112 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":59:32)
#loc113 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":59:38)
#loc114 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":59:37)
#loc115 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":62:13)
#loc116 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":62:20)
#loc117 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":62:26)
#loc118 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":63:23)
#loc119 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":63:13)
#loc120 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":64:31)
#loc121 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":64:39)
#loc122 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":64:46)
#loc123 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":64:54)
#loc124 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":64:65)
#loc125 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":64:45)
#loc126 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":64:66)
#loc127 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":64:13)
#loc128 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":67:13)
#loc129 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":73:13)
#loc130 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":67:17)
#loc131 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":67:28)
#loc132 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":68:13)
#loc133 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":69:24)
#loc134 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":69:17)
#loc135 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":71:17)
#loc136 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":71:24)
#loc137 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":71:30)
#loc138 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":72:27)
#loc139 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":72:17)
#loc140 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":74:13)
#loc141 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":74:18)
#loc142 = loc("CWE401_Memory_Leak__malloc_realloc_char_16.c":76:9)
#loc143 = loc(fused[#loc1, #loc2])
#loc144 = loc(fused[#loc3, #loc4])
#loc145 = loc(fused[#loc5, #loc6])
#loc146 = loc(fused[#loc8, #loc9])
#loc147 = loc(fused[#loc10, #loc11])
#loc148 = loc(fused[#loc13, #loc14])
#loc149 = loc(fused[#loc15, #loc16])
#loc150 = loc(fused[#loc17, #loc18])
#loc151 = loc(fused[#loc20, #loc21])
#loc152 = loc(fused[#loc22, #loc23])
#loc153 = loc(fused[#loc26, #loc27])
#loc154 = loc(fused[#loc25, #loc27])
#loc155 = loc(fused[#loc24, #loc23])
#loc156 = loc(fused[#loc28, #loc29])
#loc157 = loc(fused[#loc30, #loc31])
#loc158 = loc(fused[#loc32, #loc29])
#loc159 = loc(fused[#loc43, #loc44])
#loc160 = loc(fused[#loc45, #loc44])
#loc161 = loc(fused[#loc40, #loc46])
#loc162 = loc(fused[#loc47, #loc46])
#loc163 = loc(fused[#loc48, #loc49])
#loc164 = loc(fused[#loc50, #loc51])
#loc165 = loc(fused[#loc52, #loc49])
#loc166 = loc(fused[#loc60, #loc61])
#loc167 = loc(fused[#loc62, #loc63])
#loc168 = loc(fused[#loc64, #loc65])
#loc169 = loc(fused[#loc66, #loc67])
#loc170 = loc(fused[#loc72, #loc73])
#loc173 = loc(fused[#loc83, #loc84])
#loc174 = loc(fused[#loc87, #loc88])
#loc175 = loc(fused[#loc91, #loc90])
#loc176 = loc(fused[#loc92, #loc93])
#loc177 = loc(fused[#loc94, #loc95])
#loc178 = loc(fused[#loc97, #loc98])
#loc179 = loc(fused[#loc99, #loc100])
#loc180 = loc(fused[#loc101, #loc102])
#loc181 = loc(fused[#loc105, #loc106])
#loc182 = loc(fused[#loc104, #loc106])
#loc183 = loc(fused[#loc103, #loc100])
#loc184 = loc(fused[#loc107, #loc108])
#loc185 = loc(fused[#loc109, #loc110])
#loc186 = loc(fused[#loc111, #loc108])
#loc187 = loc(fused[#loc123, #loc124])
#loc188 = loc(fused[#loc125, #loc124])
#loc189 = loc(fused[#loc120, #loc126])
#loc190 = loc(fused[#loc127, #loc126])
#loc191 = loc(fused[#loc128, #loc129])
#loc192 = loc(fused[#loc130, #loc131])
#loc193 = loc(fused[#loc132, #loc129])
#loc194 = loc(fused[#loc134, #loc133])
