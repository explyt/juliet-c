!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_multiply_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc170)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc171)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc172)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc173)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc174)
  cir.func no_proto @CWE191_Integer_Underflow__int_fgets_multiply_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc176)
    %1 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc177)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc178)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc179)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc180)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc181)
    %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc182)
    cir.store %4, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc181)
    cir.store %4, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc182)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc28)
    cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc183)
    cir.br ^bb1 loc(#loc184)
  ^bb1:  // pred: ^bb0
    %8 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc15)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc176)
    cir.br ^bb2 loc(#loc185)
  ^bb2:  // pred: ^bb1
    %10 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc177)
    cir.store %10, %1 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc177)
    cir.br ^bb3 loc(#loc186)
  ^bb3:  // pred: ^bb2
    %11 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc37)
    %12 = cir.const #cir.int<3> : !s32i loc(#loc38)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc38)
    %14 = cir.const #cir.int<4> : !u64i loc(#loc38)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc38)
    %16 = cir.const #cir.int<2> : !s32i loc(#loc38)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc38)
    %18 = cir.binop(add, %15, %17) : !u64i loc(#loc38)
    %19 = cir.cast(integral, %18 : !u64i), !s32i loc(#loc38)
    %20 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc171)
    %21 = cir.load %20 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc39)
    %22 = cir.call @fgets(%11, %19, %21) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc40)
    %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc41)
    %25 = cir.cmp(ne, %22, %24) : !cir.ptr<!s8i>, !cir.bool loc(#loc187)
    cir.brcond %25 ^bb4, ^bb5 loc(#loc188)
  ^bb4:  // pred: ^bb3
    %26 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc45)
    %27 = cir.call @atoi(%26) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc46)
    cir.store %27, %0 : !s32i, !cir.ptr<!s32i> loc(#loc189)
    cir.br ^bb6 loc(#loc43)
  ^bb5:  // pred: ^bb3
    %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    cir.br ^bb6 loc(#loc36)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc36)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc34)
  ^bb8:  // pred: ^bb7
    %30 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc50)
    %31 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc51)
    cir.store %30, %31 : !s32i, !cir.ptr<!s32i> loc(#loc190)
    cir.br ^bb9 loc(#loc31)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc191)
  ^bb10:  // pred: ^bb9
    %32 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc19)
    %33 = cir.load %32 : !cir.ptr<!s32i>, !s32i loc(#loc55)
    cir.store %33, %2 : !s32i, !cir.ptr<!s32i> loc(#loc178)
    cir.br ^bb11 loc(#loc192)
  ^bb11:  // pred: ^bb10
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc58)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc59)
    %36 = cir.cmp(lt, %34, %35) : !s32i, !cir.bool loc(#loc193)
    cir.brcond %36 ^bb12, ^bb13 loc(#loc194)
  ^bb12:  // pred: ^bb11
    %37 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc61)
    %38 = cir.const #cir.int<2> : !s32i loc(#loc21)
    %39 = cir.binop(mul, %37, %38) nsw : !s32i loc(#loc61)
    cir.store %39, %3 : !s32i, !cir.ptr<!s32i> loc(#loc179)
    %40 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    cir.call @printIntLine(%40) : (!s32i) -> () loc(#loc63)
    cir.br ^bb13 loc(#loc57)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc57)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc54)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc13)
  } loc(#loc175)
  cir.func no_proto @CWE191_Integer_Underflow__int_fgets_multiply_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc196)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc66)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc197)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc68)
    cir.return loc(#loc65)
  } loc(#loc195)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc199)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc200)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc201)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc202)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc203)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc204)
    cir.store %3, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc203)
    cir.store %3, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc204)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc84)
    cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc205)
    cir.br ^bb1 loc(#loc206)
  ^bb1:  // pred: ^bb0
    %7 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc73)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc199)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc89)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc90)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc207)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    %12 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc93)
    cir.store %11, %12 : !s32i, !cir.ptr<!s32i> loc(#loc208)
    cir.br ^bb2 loc(#loc87)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc209)
  ^bb3:  // pred: ^bb2
    %13 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc75)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc97)
    cir.store %14, %1 : !s32i, !cir.ptr<!s32i> loc(#loc200)
    cir.br ^bb4 loc(#loc210)
  ^bb4:  // pred: ^bb3
    %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc101)
    %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc211)
    cir.brcond %17 ^bb5, ^bb6 loc(#loc212)
  ^bb5:  // pred: ^bb4
    %18 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %19 = cir.const #cir.int<2> : !s32i loc(#loc77)
    %20 = cir.binop(mul, %18, %19) nsw : !s32i loc(#loc103)
    cir.store %20, %2 : !s32i, !cir.ptr<!s32i> loc(#loc201)
    %21 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc105)
    cir.br ^bb6 loc(#loc99)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc99)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc96)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc71)
  } loc(#loc198)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc106)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc214)
    %1 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc215)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc216)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc217)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc218)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc219)
    %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc220)
    cir.store %4, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc219)
    cir.store %4, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc220)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc123)
    cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc221)
    cir.br ^bb1 loc(#loc222)
  ^bb1:  // pred: ^bb0
    %8 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc110)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc214)
    cir.br ^bb2 loc(#loc223)
  ^bb2:  // pred: ^bb1
    %10 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc215)
    cir.store %10, %1 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc215)
    cir.br ^bb3 loc(#loc224)
  ^bb3:  // pred: ^bb2
    %11 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc132)
    %12 = cir.const #cir.int<3> : !s32i loc(#loc133)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc133)
    %14 = cir.const #cir.int<4> : !u64i loc(#loc133)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc133)
    %16 = cir.const #cir.int<2> : !s32i loc(#loc133)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc133)
    %18 = cir.binop(add, %15, %17) : !u64i loc(#loc133)
    %19 = cir.cast(integral, %18 : !u64i), !s32i loc(#loc133)
    %20 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc171)
    %21 = cir.load %20 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc134)
    %22 = cir.call @fgets(%11, %19, %21) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc135)
    %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc136)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc136)
    %25 = cir.cmp(ne, %22, %24) : !cir.ptr<!s8i>, !cir.bool loc(#loc225)
    cir.brcond %25 ^bb4, ^bb5 loc(#loc226)
  ^bb4:  // pred: ^bb3
    %26 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc140)
    %27 = cir.call @atoi(%26) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc141)
    cir.store %27, %0 : !s32i, !cir.ptr<!s32i> loc(#loc227)
    cir.br ^bb6 loc(#loc138)
  ^bb5:  // pred: ^bb3
    %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc144)
    %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc144)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc145)
    cir.br ^bb6 loc(#loc131)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc131)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc129)
  ^bb8:  // pred: ^bb7
    %30 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    %31 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc147)
    cir.store %30, %31 : !s32i, !cir.ptr<!s32i> loc(#loc228)
    cir.br ^bb9 loc(#loc126)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc229)
  ^bb10:  // pred: ^bb9
    %32 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc114)
    %33 = cir.load %32 : !cir.ptr<!s32i>, !s32i loc(#loc151)
    cir.store %33, %2 : !s32i, !cir.ptr<!s32i> loc(#loc216)
    cir.br ^bb11 loc(#loc230)
  ^bb11:  // pred: ^bb10
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc154)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc155)
    %36 = cir.cmp(lt, %34, %35) : !s32i, !cir.bool loc(#loc231)
    cir.brcond %36 ^bb12, ^bb18 loc(#loc232)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc233)
  ^bb13:  // pred: ^bb12
    %37 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    %38 = cir.const #cir.int<2147483647> : !s32i loc(#loc160)
    %39 = cir.unary(minus, %38) : !s32i, !s32i loc(#loc160)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc160)
    %41 = cir.binop(sub, %39, %40) nsw : !s32i loc(#loc160)
    %42 = cir.const #cir.int<2> : !s32i loc(#loc161)
    %43 = cir.binop(div, %41, %42) : !s32i loc(#loc234)
    %44 = cir.cmp(gt, %37, %43) : !s32i, !cir.bool loc(#loc235)
    cir.brcond %44 ^bb14, ^bb15 loc(#loc236)
  ^bb14:  // pred: ^bb13
    %45 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    %46 = cir.const #cir.int<2> : !s32i loc(#loc116)
    %47 = cir.binop(mul, %45, %46) nsw : !s32i loc(#loc166)
    cir.store %47, %3 : !s32i, !cir.ptr<!s32i> loc(#loc217)
    %48 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc167)
    cir.call @printIntLine(%48) : (!s32i) -> () loc(#loc168)
    cir.br ^bb16 loc(#loc164)
  ^bb15:  // pred: ^bb13
    %49 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc106)
    %50 = cir.cast(array_to_ptrdecay, %49 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc106)
    cir.call @printLine(%50) : (!cir.ptr<!s8i>) -> () loc(#loc169)
    cir.br ^bb16 loc(#loc158)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc158)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc153)
  ^bb18:  // 2 preds: ^bb11, ^bb17
    cir.br ^bb19 loc(#loc153)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc150)
  ^bb20:  // pred: ^bb19
    cir.return loc(#loc108)
  } loc(#loc213)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_multiply_32.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":43:27)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":24:1)
#loc13 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":57:1)
#loc14 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":32:9)
#loc15 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":32:21)
#loc16 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":34:13)
#loc17 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":34:49)
#loc18 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":49:9)
#loc19 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":49:21)
#loc20 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":53:13)
#loc21 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":53:33)
#loc22 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":26:5)
#loc23 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":26:9)
#loc24 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":27:5)
#loc25 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":27:22)
#loc26 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":28:5)
#loc27 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":28:22)
#loc28 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":30:12)
#loc29 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":30:5)
#loc30 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":31:5)
#loc31 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":47:5)
#loc32 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":32:20)
#loc33 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":33:9)
#loc34 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":45:9)
#loc35 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":36:13)
#loc36 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":44:13)
#loc37 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":36:23)
#loc38 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":36:36)
#loc39 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":36:53)
#loc40 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":36:17)
#loc41 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":36:63)
#loc42 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":37:13)
#loc43 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":40:13)
#loc44 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":42:13)
#loc45 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":39:29)
#loc46 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":39:24)
#loc47 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":39:17)
#loc48 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":39:40)
#loc49 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":43:17)
#loc50 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":46:21)
#loc51 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":46:10)
#loc52 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":46:9)
#loc53 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":48:5)
#loc54 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":56:5)
#loc55 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":49:20)
#loc56 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":50:9)
#loc57 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":55:9)
#loc58 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":50:12)
#loc59 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":50:19)
#loc60 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":51:9)
#loc61 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":53:26)
#loc62 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":54:26)
#loc63 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":54:13)
#loc64 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":131:1)
#loc65 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":135:1)
#loc66 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":133:5)
#loc67 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":133:13)
#loc68 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":134:5)
#loc69 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":134:13)
#loc70 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":64:1)
#loc71 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":86:1)
#loc72 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":72:9)
#loc73 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":72:21)
#loc74 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":78:9)
#loc75 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":78:21)
#loc76 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":82:13)
#loc77 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":82:33)
#loc78 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":66:5)
#loc79 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":66:9)
#loc80 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":67:5)
#loc81 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":67:22)
#loc82 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":68:5)
#loc83 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":68:22)
#loc84 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":70:12)
#loc85 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":70:5)
#loc86 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":71:5)
#loc87 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":76:5)
#loc88 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":72:20)
#loc89 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":74:17)
#loc90 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":74:16)
#loc91 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":74:9)
#loc92 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":75:21)
#loc93 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":75:10)
#loc94 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":75:9)
#loc95 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":77:5)
#loc96 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":85:5)
#loc97 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":78:20)
#loc98 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":79:9)
#loc99 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":84:9)
#loc100 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":79:12)
#loc101 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":79:19)
#loc102 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":80:9)
#loc103 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":82:26)
#loc104 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":83:26)
#loc105 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":83:13)
#loc106 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":125:27)
#loc107 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":89:1)
#loc108 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":129:1)
#loc109 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":97:9)
#loc110 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":97:21)
#loc111 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":99:13)
#loc112 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":99:49)
#loc113 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":114:9)
#loc114 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":114:21)
#loc115 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":120:17)
#loc116 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":120:37)
#loc117 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":91:5)
#loc118 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":91:9)
#loc119 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":92:5)
#loc120 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":92:22)
#loc121 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":93:5)
#loc122 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":93:22)
#loc123 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":95:12)
#loc124 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":95:5)
#loc125 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":96:5)
#loc126 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":112:5)
#loc127 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":97:20)
#loc128 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":98:9)
#loc129 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":110:9)
#loc130 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":101:13)
#loc131 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":109:13)
#loc132 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":101:23)
#loc133 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":101:36)
#loc134 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":101:53)
#loc135 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":101:17)
#loc136 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":101:63)
#loc137 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":102:13)
#loc138 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":105:13)
#loc139 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":107:13)
#loc140 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":104:29)
#loc141 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":104:24)
#loc142 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":104:17)
#loc143 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":104:40)
#loc144 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":108:27)
#loc145 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":108:17)
#loc146 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":111:21)
#loc147 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":111:10)
#loc148 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":111:9)
#loc149 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":113:5)
#loc150 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":128:5)
#loc151 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":114:20)
#loc152 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":115:9)
#loc153 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":127:9)
#loc154 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":115:12)
#loc155 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":115:19)
#loc156 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":116:9)
#loc157 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":118:13)
#loc158 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":126:13)
#loc159 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":118:17)
#loc160 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":118:25)
#loc161 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":118:33)
#loc162 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":118:34)
#loc163 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":119:13)
#loc164 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":122:13)
#loc165 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":124:13)
#loc166 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":120:30)
#loc167 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":121:30)
#loc168 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":121:17)
#loc169 = loc("CWE191_Integer_Underflow__int_fgets_multiply_32.c":125:17)
#loc170 = loc(fused[#loc1, #loc2])
#loc171 = loc(fused[#loc3, #loc4])
#loc172 = loc(fused[#loc5, #loc6])
#loc173 = loc(fused[#loc7, #loc8])
#loc174 = loc(fused[#loc10, #loc11])
#loc175 = loc(fused[#loc12, #loc13])
#loc176 = loc(fused[#loc14, #loc15])
#loc177 = loc(fused[#loc16, #loc17])
#loc178 = loc(fused[#loc18, #loc19])
#loc179 = loc(fused[#loc20, #loc21])
#loc180 = loc(fused[#loc22, #loc23])
#loc181 = loc(fused[#loc24, #loc25])
#loc182 = loc(fused[#loc26, #loc27])
#loc183 = loc(fused[#loc29, #loc28])
#loc184 = loc(fused[#loc30, #loc31])
#loc185 = loc(fused[#loc33, #loc34])
#loc186 = loc(fused[#loc35, #loc36])
#loc187 = loc(fused[#loc40, #loc41])
#loc188 = loc(fused[#loc42, #loc43, #loc44, #loc36])
#loc189 = loc(fused[#loc47, #loc48])
#loc190 = loc(fused[#loc52, #loc50])
#loc191 = loc(fused[#loc53, #loc54])
#loc192 = loc(fused[#loc56, #loc57])
#loc193 = loc(fused[#loc58, #loc59])
#loc194 = loc(fused[#loc60, #loc57])
#loc195 = loc(fused[#loc64, #loc65])
#loc196 = loc(fused[#loc66, #loc67])
#loc197 = loc(fused[#loc68, #loc69])
#loc198 = loc(fused[#loc70, #loc71])
#loc199 = loc(fused[#loc72, #loc73])
#loc200 = loc(fused[#loc74, #loc75])
#loc201 = loc(fused[#loc76, #loc77])
#loc202 = loc(fused[#loc78, #loc79])
#loc203 = loc(fused[#loc80, #loc81])
#loc204 = loc(fused[#loc82, #loc83])
#loc205 = loc(fused[#loc85, #loc84])
#loc206 = loc(fused[#loc86, #loc87])
#loc207 = loc(fused[#loc91, #loc89])
#loc208 = loc(fused[#loc94, #loc92])
#loc209 = loc(fused[#loc95, #loc96])
#loc210 = loc(fused[#loc98, #loc99])
#loc211 = loc(fused[#loc100, #loc101])
#loc212 = loc(fused[#loc102, #loc99])
#loc213 = loc(fused[#loc107, #loc108])
#loc214 = loc(fused[#loc109, #loc110])
#loc215 = loc(fused[#loc111, #loc112])
#loc216 = loc(fused[#loc113, #loc114])
#loc217 = loc(fused[#loc115, #loc116])
#loc218 = loc(fused[#loc117, #loc118])
#loc219 = loc(fused[#loc119, #loc120])
#loc220 = loc(fused[#loc121, #loc122])
#loc221 = loc(fused[#loc124, #loc123])
#loc222 = loc(fused[#loc125, #loc126])
#loc223 = loc(fused[#loc128, #loc129])
#loc224 = loc(fused[#loc130, #loc131])
#loc225 = loc(fused[#loc135, #loc136])
#loc226 = loc(fused[#loc137, #loc138, #loc139, #loc131])
#loc227 = loc(fused[#loc142, #loc143])
#loc228 = loc(fused[#loc148, #loc146])
#loc229 = loc(fused[#loc149, #loc150])
#loc230 = loc(fused[#loc152, #loc153])
#loc231 = loc(fused[#loc154, #loc155])
#loc232 = loc(fused[#loc156, #loc153])
#loc233 = loc(fused[#loc157, #loc158])
#loc234 = loc(fused[#loc160, #loc161])
#loc235 = loc(fused[#loc159, #loc162])
#loc236 = loc(fused[#loc163, #loc164, #loc165, #loc158])
