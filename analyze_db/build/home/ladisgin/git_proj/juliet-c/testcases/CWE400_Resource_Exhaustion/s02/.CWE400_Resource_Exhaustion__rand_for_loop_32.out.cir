!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc26 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":32:17)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":123:10)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":123:14)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":123:20)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":123:32)
#loc143 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":90:17)
#loc157 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":98:27)
#true = #cir.bool<true> : !cir.bool
#loc199 = loc(fused[#loc63, #loc64])
#loc200 = loc(fused[#loc65, #loc66])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_for_loop_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc173)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc174)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc5)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_for_loop_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc176)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc177)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc178)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc179)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countPtr1", init] {alignment = 8 : i64} loc(#loc180)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countPtr2", init] {alignment = 8 : i64} loc(#loc181)
    cir.store %3, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc180)
    cir.store %3, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc181)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc21)
    cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc182)
    cir.br ^bb1 loc(#loc183)
  ^bb1:  // pred: ^bb0
    %8 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc9)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc25)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc176)
    %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %12 = cir.binop(and, %10, %11) : !s32i loc(#loc26)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc26)
    cir.brcond %13 ^bb2, ^bb3 loc(#loc26)
  ^bb2:  // pred: ^bb1
    %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
    %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc26)
    %16 = cir.const #cir.int<30> : !s32i loc(#loc26)
    %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc26)
    %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
    %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc26)
    %20 = cir.const #cir.int<15> : !s32i loc(#loc26)
    %21 = cir.shift(left, %19 : !u32i, %20 : !s32i) -> !u32i loc(#loc26)
    %22 = cir.binop(xor, %17, %21) : !u32i loc(#loc26)
    %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
    %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc26)
    %25 = cir.binop(xor, %22, %24) : !u32i loc(#loc26)
    cir.br ^bb4(%25 : !u32i) loc(#loc26)
  ^bb3:  // pred: ^bb1
    %26 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
    %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc26)
    %28 = cir.const #cir.int<30> : !s32i loc(#loc26)
    %29 = cir.shift(left, %27 : !u32i, %28 : !s32i) -> !u32i loc(#loc26)
    %30 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc26)
    %32 = cir.const #cir.int<15> : !s32i loc(#loc26)
    %33 = cir.shift(left, %31 : !u32i, %32 : !s32i) -> !u32i loc(#loc26)
    %34 = cir.binop(xor, %29, %33) : !u32i loc(#loc26)
    %35 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
    %36 = cir.cast(integral, %35 : !s32i), !u32i loc(#loc26)
    %37 = cir.binop(xor, %34, %36) : !u32i loc(#loc26)
    %38 = cir.unary(minus, %37) : !u32i, !u32i loc(#loc26)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %40 = cir.cast(integral, %39 : !s32i), !u32i loc(#loc26)
    %41 = cir.binop(sub, %38, %40) : !u32i loc(#loc26)
    cir.br ^bb4(%41 : !u32i) loc(#loc26)
  ^bb4(%42: !u32i loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":32:17)):  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc26)
  ^bb5:  // pred: ^bb4
    %43 = cir.cast(integral, %42 : !u32i), !s32i loc(#loc26)
    cir.store %43, %0 : !s32i, !cir.ptr<!s32i> loc(#loc184)
    %44 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc28)
    %45 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc29)
    cir.store %44, %45 : !s32i, !cir.ptr<!s32i> loc(#loc185)
    cir.br ^bb6 loc(#loc24)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc186)
  ^bb7:  // pred: ^bb6
    %46 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc11)
    %47 = cir.load %46 : !cir.ptr<!s32i>, !s32i loc(#loc33)
    cir.store %47, %1 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    cir.br ^bb8 loc(#loc187)
  ^bb8:  // pred: ^bb7
    %48 = cir.const #cir.int<0> : !s32i loc(#loc13)
    %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc13)
    cir.store %49, %2 : !u64i, !cir.ptr<!u64i> loc(#loc178)
    cir.br ^bb9 loc(#loc188)
  ^bb9:  // pred: ^bb8
    %50 = cir.const #cir.int<0> : !s32i loc(#loc38)
    %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc38)
    cir.store %51, %2 : !u64i, !cir.ptr<!u64i> loc(#loc189)
    cir.br ^bb10 loc(#loc188)
  ^bb10:  // 2 preds: ^bb9, ^bb14
    %52 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc40)
    %53 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc41)
    %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc41)
    %55 = cir.cmp(lt, %52, %54) : !u64i, !cir.bool loc(#loc190)
    cir.brcond %55 ^bb11, ^bb15 loc(#loc42)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc191)
  ^bb12:  // pred: ^bb11
    %56 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc5)
    %57 = cir.cast(array_to_ptrdecay, %56 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc5)
    cir.call @printLine(%57) : (!cir.ptr<!s8i>) -> () loc(#loc44)
    cir.br ^bb13 loc(#loc37)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc37)
  ^bb14:  // pred: ^bb13
    %58 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc45)
    %59 = cir.unary(inc, %58) : !u64i, !u64i loc(#loc46)
    cir.store %59, %2 : !u64i, !cir.ptr<!u64i> loc(#loc192)
    cir.br ^bb10 loc(#loc188)
  ^bb15:  // pred: ^bb10
    cir.br ^bb16 loc(#loc37)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc35)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc32)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc7)
  } loc(#loc175)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_for_loop_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc194)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc195)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc51)
    cir.return loc(#loc48)
  } loc(#loc193)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc196)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc197)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc58)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc60)
  cir.func @main(%arg0: !s32i loc(fused[#loc63, #loc64]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc65, #loc66])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc199)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc200)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc62)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc67)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc67)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc68)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc69)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc69)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc70)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc57)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %8 = cir.get_global @CWE400_Resource_Exhaustion__rand_for_loop_32_good : !cir.ptr<!cir.func<!void ()>> loc(#loc201)
    cir.call @CWE400_Resource_Exhaustion__rand_for_loop_32_good() : () -> () loc(#loc72)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc58)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc59)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %13 = cir.get_global @CWE400_Resource_Exhaustion__rand_for_loop_32_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc202)
    cir.call @CWE400_Resource_Exhaustion__rand_for_loop_32_bad() : () -> () loc(#loc76)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc60)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc79)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc203)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc203)
    cir.return %17 : !s32i loc(#loc203)
  } loc(#loc198)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc205)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc206)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc207)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc208)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countPtr1", init] {alignment = 8 : i64} loc(#loc209)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countPtr2", init] {alignment = 8 : i64} loc(#loc210)
    cir.store %3, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc209)
    cir.store %3, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc210)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc96)
    cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc211)
    cir.br ^bb1 loc(#loc212)
  ^bb1:  // pred: ^bb0
    %8 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc84)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc205)
    %10 = cir.const #cir.int<20> : !s32i loc(#loc101)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc213)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %12 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc104)
    cir.store %11, %12 : !s32i, !cir.ptr<!s32i> loc(#loc214)
    cir.br ^bb2 loc(#loc99)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc215)
  ^bb3:  // pred: ^bb2
    %13 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc86)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc108)
    cir.store %14, %1 : !s32i, !cir.ptr<!s32i> loc(#loc206)
    cir.br ^bb4 loc(#loc216)
  ^bb4:  // pred: ^bb3
    %15 = cir.const #cir.int<0> : !s32i loc(#loc88)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc88)
    cir.store %16, %2 : !u64i, !cir.ptr<!u64i> loc(#loc207)
    cir.br ^bb5 loc(#loc217)
  ^bb5:  // pred: ^bb4
    %17 = cir.const #cir.int<0> : !s32i loc(#loc113)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc113)
    cir.store %18, %2 : !u64i, !cir.ptr<!u64i> loc(#loc218)
    cir.br ^bb6 loc(#loc217)
  ^bb6:  // 2 preds: ^bb5, ^bb10
    %19 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc115)
    %20 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc116)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc116)
    %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc219)
    cir.brcond %22 ^bb7, ^bb11 loc(#loc117)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc220)
  ^bb8:  // pred: ^bb7
    %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc119)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc119)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    cir.br ^bb9 loc(#loc112)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc112)
  ^bb10:  // pred: ^bb9
    %25 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc121)
    %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc122)
    cir.store %26, %2 : !u64i, !cir.ptr<!u64i> loc(#loc221)
    cir.br ^bb6 loc(#loc217)
  ^bb11:  // pred: ^bb6
    cir.br ^bb12 loc(#loc112)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc110)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc107)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc82)
  } loc(#loc204)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc223)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc224)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc225)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc226)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countPtr1", init] {alignment = 8 : i64} loc(#loc227)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countPtr2", init] {alignment = 8 : i64} loc(#loc228)
    cir.store %3, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc227)
    cir.store %3, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc228)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc137)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc138)
    cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc229)
    cir.br ^bb1 loc(#loc230)
  ^bb1:  // pred: ^bb0
    %8 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc126)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc223)
    %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc143)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc143)
    %12 = cir.binop(and, %10, %11) : !s32i loc(#loc143)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc143)
    cir.brcond %13 ^bb2, ^bb3 loc(#loc143)
  ^bb2:  // pred: ^bb1
    %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc143)
    %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc143)
    %16 = cir.const #cir.int<30> : !s32i loc(#loc143)
    %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc143)
    %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc143)
    %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc143)
    %20 = cir.const #cir.int<15> : !s32i loc(#loc143)
    %21 = cir.shift(left, %19 : !u32i, %20 : !s32i) -> !u32i loc(#loc143)
    %22 = cir.binop(xor, %17, %21) : !u32i loc(#loc143)
    %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc143)
    %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc143)
    %25 = cir.binop(xor, %22, %24) : !u32i loc(#loc143)
    cir.br ^bb4(%25 : !u32i) loc(#loc143)
  ^bb3:  // pred: ^bb1
    %26 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc143)
    %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc143)
    %28 = cir.const #cir.int<30> : !s32i loc(#loc143)
    %29 = cir.shift(left, %27 : !u32i, %28 : !s32i) -> !u32i loc(#loc143)
    %30 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc143)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc143)
    %32 = cir.const #cir.int<15> : !s32i loc(#loc143)
    %33 = cir.shift(left, %31 : !u32i, %32 : !s32i) -> !u32i loc(#loc143)
    %34 = cir.binop(xor, %29, %33) : !u32i loc(#loc143)
    %35 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc143)
    %36 = cir.cast(integral, %35 : !s32i), !u32i loc(#loc143)
    %37 = cir.binop(xor, %34, %36) : !u32i loc(#loc143)
    %38 = cir.unary(minus, %37) : !u32i, !u32i loc(#loc143)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc143)
    %40 = cir.cast(integral, %39 : !s32i), !u32i loc(#loc143)
    %41 = cir.binop(sub, %38, %40) : !u32i loc(#loc143)
    cir.br ^bb4(%41 : !u32i) loc(#loc143)
  ^bb4(%42: !u32i loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":90:17)):  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc143)
  ^bb5:  // pred: ^bb4
    %43 = cir.cast(integral, %42 : !u32i), !s32i loc(#loc143)
    cir.store %43, %0 : !s32i, !cir.ptr<!s32i> loc(#loc231)
    %44 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc145)
    %45 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc146)
    cir.store %44, %45 : !s32i, !cir.ptr<!s32i> loc(#loc232)
    cir.br ^bb6 loc(#loc141)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc233)
  ^bb7:  // pred: ^bb6
    %46 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc128)
    %47 = cir.load %46 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    cir.store %47, %1 : !s32i, !cir.ptr<!s32i> loc(#loc224)
    cir.br ^bb8 loc(#loc234)
  ^bb8:  // pred: ^bb7
    %48 = cir.const #cir.int<0> : !s32i loc(#loc130)
    %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc130)
    cir.store %49, %2 : !u64i, !cir.ptr<!u64i> loc(#loc225)
    cir.br ^bb9 loc(#loc235)
  ^bb9:  // pred: ^bb8
    %50 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc155)
    %51 = cir.const #cir.int<0> : !s32i loc(#loc156)
    %52 = cir.cmp(gt, %50, %51) : !s32i, !cir.bool loc(#loc236)
    cir.brcond %52 ^bb10, ^bb15 loc(#loc157)
  ^bb10:  // pred: ^bb9
    %53 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    %54 = cir.const #cir.int<20> : !s32i loc(#loc159)
    %55 = cir.cmp(le, %53, %54) : !s32i, !cir.bool loc(#loc237)
    cir.brcond %55 ^bb11, ^bb12 loc(#loc157)
  ^bb11:  // pred: ^bb10
    %56 = cir.const #true loc(#loc157)
    cir.br ^bb13(%56 : !cir.bool) loc(#loc157)
  ^bb12:  // pred: ^bb10
    %57 = cir.const #false loc(#loc157)
    cir.br ^bb13(%57 : !cir.bool) loc(#loc157)
  ^bb13(%58: !cir.bool loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":98:27)):  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc157)
  ^bb14:  // pred: ^bb13
    cir.br ^bb16(%58 : !cir.bool) loc(#loc157)
  ^bb15:  // pred: ^bb9
    %59 = cir.const #false loc(#loc157)
    cir.br ^bb16(%59 : !cir.bool) loc(#loc157)
  ^bb16(%60: !cir.bool loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":98:27)):  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc157)
  ^bb17:  // pred: ^bb16
    cir.brcond %60 ^bb18, ^bb27 loc(#loc238)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc239)
  ^bb19:  // pred: ^bb18
    %61 = cir.const #cir.int<0> : !s32i loc(#loc163)
    %62 = cir.cast(integral, %61 : !s32i), !u64i loc(#loc163)
    cir.store %62, %2 : !u64i, !cir.ptr<!u64i> loc(#loc240)
    cir.br ^bb20 loc(#loc239)
  ^bb20:  // 2 preds: ^bb19, ^bb24
    %63 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc165)
    %64 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc166)
    %66 = cir.cmp(lt, %63, %65) : !u64i, !cir.bool loc(#loc241)
    cir.brcond %66 ^bb21, ^bb25 loc(#loc167)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc242)
  ^bb22:  // pred: ^bb21
    %67 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc169)
    %68 = cir.cast(array_to_ptrdecay, %67 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc169)
    cir.call @printLine(%68) : (!cir.ptr<!s8i>) -> () loc(#loc170)
    cir.br ^bb23 loc(#loc162)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc162)
  ^bb24:  // pred: ^bb23
    %69 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc171)
    %70 = cir.unary(inc, %69) : !u64i, !u64i loc(#loc172)
    cir.store %70, %2 : !u64i, !cir.ptr<!u64i> loc(#loc243)
    cir.br ^bb20 loc(#loc239)
  ^bb25:  // pred: ^bb20
    cir.br ^bb26 loc(#loc162)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc154)
  ^bb27:  // 2 preds: ^bb17, ^bb26
    cir.br ^bb28 loc(#loc154)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc152)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc149)
  ^bb30:  // pred: ^bb29
    cir.return loc(#loc124)
  } loc(#loc222)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_for_loop_32.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":42:27)
#loc6 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":22:1)
#loc7 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":46:1)
#loc8 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":30:9)
#loc9 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":30:22)
#loc10 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":36:9)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":36:22)
#loc12 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":38:13)
#loc13 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":38:24)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":24:5)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":24:9)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":25:5)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":25:23)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":26:5)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":26:23)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":28:14)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":28:13)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":28:5)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":29:5)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":34:5)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":30:21)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":32:9)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":33:22)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":33:10)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":33:9)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":35:5)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":45:5)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":36:21)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":37:9)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":44:9)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":40:13)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":43:13)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":40:22)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":40:18)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":40:25)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":40:37)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":40:27)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":41:13)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":42:17)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":40:45)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":40:44)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":109:1)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":113:1)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":111:5)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":111:13)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":112:5)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":112:13)
#loc53 = loc("/usr/include/stdlib.h":575:1)
#loc54 = loc("/usr/include/stdlib.h":575:41)
#loc55 = loc("/usr/include/time.h":76:1)
#loc56 = loc("/usr/include/time.h":76:38)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":128:15)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":130:15)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":133:15)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":135:15)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":123:1)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":138:1)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":124:1)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":126:27)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":126:22)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":126:5)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":128:5)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":129:5)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":129:55)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":130:5)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":133:5)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":134:5)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":134:54)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":135:5)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":137:12)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":137:5)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":53:1)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":77:1)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":61:9)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":61:22)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":67:9)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":67:22)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":69:13)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":69:24)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":55:5)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":55:9)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":56:5)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":56:23)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":57:5)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":57:23)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":59:14)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":59:13)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":59:5)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":60:5)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":65:5)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":61:21)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":63:17)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":63:9)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":64:22)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":64:10)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":64:9)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":66:5)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":76:5)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":67:21)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":68:9)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":75:9)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":71:13)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":74:13)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":71:22)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":71:18)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":71:25)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":71:37)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":71:27)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":72:13)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":73:27)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":73:17)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":71:45)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":71:44)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":80:1)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":107:1)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":88:9)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":88:22)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":94:9)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":94:22)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":96:13)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":96:24)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":82:5)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":82:9)
#loc133 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":83:5)
#loc134 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":83:23)
#loc135 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":84:5)
#loc136 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":84:23)
#loc137 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":86:14)
#loc138 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":86:13)
#loc139 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":86:5)
#loc140 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":87:5)
#loc141 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":92:5)
#loc142 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":88:21)
#loc144 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":90:9)
#loc145 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":91:22)
#loc146 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":91:10)
#loc147 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":91:9)
#loc148 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":93:5)
#loc149 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":106:5)
#loc150 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":94:21)
#loc151 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":95:9)
#loc152 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":105:9)
#loc153 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":98:13)
#loc154 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":104:13)
#loc155 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":98:17)
#loc156 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":98:25)
#loc158 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":98:30)
#loc159 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":98:39)
#loc160 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":99:13)
#loc161 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":100:17)
#loc162 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":103:17)
#loc163 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":100:26)
#loc164 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":100:22)
#loc165 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":100:29)
#loc166 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":100:41)
#loc167 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":100:31)
#loc168 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":101:17)
#loc169 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":102:31)
#loc170 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":102:21)
#loc171 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":100:49)
#loc172 = loc("CWE400_Resource_Exhaustion__rand_for_loop_32.c":100:48)
#loc173 = loc(fused[#loc1, #loc2])
#loc174 = loc(fused[#loc3, #loc4])
#loc175 = loc(fused[#loc6, #loc7])
#loc176 = loc(fused[#loc8, #loc9])
#loc177 = loc(fused[#loc10, #loc11])
#loc178 = loc(fused[#loc12, #loc13])
#loc179 = loc(fused[#loc14, #loc15])
#loc180 = loc(fused[#loc16, #loc17])
#loc181 = loc(fused[#loc18, #loc19])
#loc182 = loc(fused[#loc22, #loc20])
#loc183 = loc(fused[#loc23, #loc24])
#loc184 = loc(fused[#loc27, #loc26])
#loc185 = loc(fused[#loc30, #loc28])
#loc186 = loc(fused[#loc31, #loc32])
#loc187 = loc(fused[#loc34, #loc35])
#loc188 = loc(fused[#loc36, #loc37])
#loc189 = loc(fused[#loc39, #loc38])
#loc190 = loc(fused[#loc40, #loc41])
#loc191 = loc(fused[#loc43, #loc37])
#loc192 = loc(fused[#loc46, #loc45])
#loc193 = loc(fused[#loc47, #loc48])
#loc194 = loc(fused[#loc49, #loc50])
#loc195 = loc(fused[#loc51, #loc52])
#loc196 = loc(fused[#loc53, #loc54])
#loc197 = loc(fused[#loc55, #loc56])
#loc198 = loc(fused[#loc61, #loc62])
#loc201 = loc(fused[#loc72, #loc73])
#loc202 = loc(fused[#loc76, #loc77])
#loc203 = loc(fused[#loc80, #loc79])
#loc204 = loc(fused[#loc81, #loc82])
#loc205 = loc(fused[#loc83, #loc84])
#loc206 = loc(fused[#loc85, #loc86])
#loc207 = loc(fused[#loc87, #loc88])
#loc208 = loc(fused[#loc89, #loc90])
#loc209 = loc(fused[#loc91, #loc92])
#loc210 = loc(fused[#loc93, #loc94])
#loc211 = loc(fused[#loc97, #loc95])
#loc212 = loc(fused[#loc98, #loc99])
#loc213 = loc(fused[#loc102, #loc101])
#loc214 = loc(fused[#loc105, #loc103])
#loc215 = loc(fused[#loc106, #loc107])
#loc216 = loc(fused[#loc109, #loc110])
#loc217 = loc(fused[#loc111, #loc112])
#loc218 = loc(fused[#loc114, #loc113])
#loc219 = loc(fused[#loc115, #loc116])
#loc220 = loc(fused[#loc118, #loc112])
#loc221 = loc(fused[#loc122, #loc121])
#loc222 = loc(fused[#loc123, #loc124])
#loc223 = loc(fused[#loc125, #loc126])
#loc224 = loc(fused[#loc127, #loc128])
#loc225 = loc(fused[#loc129, #loc130])
#loc226 = loc(fused[#loc131, #loc132])
#loc227 = loc(fused[#loc133, #loc134])
#loc228 = loc(fused[#loc135, #loc136])
#loc229 = loc(fused[#loc139, #loc137])
#loc230 = loc(fused[#loc140, #loc141])
#loc231 = loc(fused[#loc144, #loc143])
#loc232 = loc(fused[#loc147, #loc145])
#loc233 = loc(fused[#loc148, #loc149])
#loc234 = loc(fused[#loc151, #loc152])
#loc235 = loc(fused[#loc153, #loc154])
#loc236 = loc(fused[#loc155, #loc156])
#loc237 = loc(fused[#loc158, #loc159])
#loc238 = loc(fused[#loc160, #loc154])
#loc239 = loc(fused[#loc161, #loc162])
#loc240 = loc(fused[#loc164, #loc163])
#loc241 = loc(fused[#loc165, #loc166])
#loc242 = loc(fused[#loc168, #loc162])
#loc243 = loc(fused[#loc172, #loc171])
