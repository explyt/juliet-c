!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc138)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc139)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc141)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc142)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc11)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc143)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc15)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc15)
      cir.if %4 {
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc17)
        %7 = cir.const #cir.int<65> : !s32i loc(#loc18)
        %8 = cir.const #cir.int<100> : !s32i loc(#loc19)
        %9 = cir.const #cir.int<1> : !s32i loc(#loc20)
        %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc19)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc19)
        cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc146)
        %12 = cir.const #cir.int<0> : !s32i loc(#loc23)
        %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc23)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
        %15 = cir.const #cir.int<100> : !s32i loc(#loc25)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc26)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc25)
        %18 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc27)
        cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc147)
      } loc(#loc145)
    } loc(#loc144)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc149)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc149)
      cir.store %4, %3 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc149)
      %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc32)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc32)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc33)
      %9 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc34)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
      %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc34)
      %12 = cir.const #cir.int<1> : !u64i loc(#loc150)
      %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc151)
      cir.libc.memmove %13 bytes from %8 to %6 : !cir.ptr<!void>, !u64i loc(#loc152)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc40)
      %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc40)
      %16 = cir.const #cir.int<50> : !s32i loc(#loc41)
      %17 = cir.const #cir.int<1> : !s32i loc(#loc42)
      %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc41)
      %19 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc43)
      %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc43)
      cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc153)
      %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
      cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    } loc(#loc148)
    cir.return loc(#loc6)
  } loc(#loc140)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc155)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc48)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc156)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc50)
    cir.return loc(#loc47)
  } loc(#loc154)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc52)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc158)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc159)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc59)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc160)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc63)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc63)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc52)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc52)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc67)
      } else {
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc68)
        %7 = cir.const #cir.int<65> : !s32i loc(#loc69)
        %8 = cir.const #cir.int<50> : !s32i loc(#loc70)
        %9 = cir.const #cir.int<1> : !s32i loc(#loc71)
        %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc70)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc70)
        cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc163)
        %12 = cir.const #cir.int<0> : !s32i loc(#loc74)
        %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc74)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
        %15 = cir.const #cir.int<50> : !s32i loc(#loc76)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc77)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc76)
        %18 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc78)
        cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc164)
      } loc(#loc162)
    } loc(#loc161)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc166)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc166)
      cir.store %4, %3 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc166)
      %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc83)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc83)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc84)
      %9 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc85)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
      %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc85)
      %12 = cir.const #cir.int<1> : !u64i loc(#loc167)
      %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc168)
      cir.libc.memmove %13 bytes from %8 to %6 : !cir.ptr<!void>, !u64i loc(#loc169)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc91)
      %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc91)
      %16 = cir.const #cir.int<50> : !s32i loc(#loc92)
      %17 = cir.const #cir.int<1> : !s32i loc(#loc93)
      %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc92)
      %19 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc94)
      %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc94)
      cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc170)
      %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
      cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    } loc(#loc165)
    cir.return loc(#loc54)
  } loc(#loc157)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc172)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc173)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc103)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc174)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc107)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc107)
      cir.if %4 {
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc109)
        %7 = cir.const #cir.int<65> : !s32i loc(#loc110)
        %8 = cir.const #cir.int<50> : !s32i loc(#loc111)
        %9 = cir.const #cir.int<1> : !s32i loc(#loc112)
        %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc111)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc111)
        cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc177)
        %12 = cir.const #cir.int<0> : !s32i loc(#loc115)
        %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc115)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
        %15 = cir.const #cir.int<50> : !s32i loc(#loc117)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc118)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc117)
        %18 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc119)
        cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc178)
      } loc(#loc176)
    } loc(#loc175)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc180)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc180)
      cir.store %4, %3 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc180)
      %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc124)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc124)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc125)
      %9 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc126)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
      %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc126)
      %12 = cir.const #cir.int<1> : !u64i loc(#loc181)
      %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc182)
      cir.libc.memmove %13 bytes from %8 to %6 : !cir.ptr<!void>, !u64i loc(#loc183)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc132)
      %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc132)
      %16 = cir.const #cir.int<50> : !s32i loc(#loc133)
      %17 = cir.const #cir.int<1> : !s32i loc(#loc134)
      %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc133)
      %19 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc135)
      %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc135)
      cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc184)
      %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
      cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc137)
    } loc(#loc179)
    cir.return loc(#loc98)
  } loc(#loc171)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":30:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":48:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":32:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":32:12)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":33:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":33:24)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":34:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":34:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":35:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":40:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":35:8)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":36:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":38:16)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":38:22)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":38:27)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":38:31)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":38:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":38:32)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":39:23)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":39:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":39:14)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":39:18)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":39:19)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":41:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":47:5)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":42:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":42:25)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":44:17)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":44:23)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":44:29)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":44:36)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":44:42)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":44:53)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":44:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":44:54)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":45:22)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":45:14)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":45:17)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":45:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":46:19)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":46:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":101:1)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":105:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":103:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":103:14)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":104:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":104:14)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":63:19)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":55:1)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":78:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":57:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":57:12)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":58:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":58:24)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":59:12)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":59:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":60:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":70:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":60:8)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":61:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":64:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":66:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":63:9)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":68:16)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":68:22)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":68:27)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":68:30)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":68:9)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":68:31)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":69:22)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":69:9)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":69:14)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":69:17)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":69:18)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":71:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":77:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":72:9)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":72:25)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":74:17)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":74:23)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":74:29)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":74:36)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":74:42)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":74:53)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":74:9)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":74:54)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":75:22)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":75:14)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":75:17)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":75:9)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":76:19)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":76:9)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":81:1)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":99:1)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":83:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":83:12)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":84:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":84:24)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":85:12)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":85:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":86:5)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":91:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":86:8)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":87:5)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":89:16)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":89:22)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":89:27)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":89:30)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":89:9)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":89:31)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":90:22)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":90:9)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":90:14)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":90:17)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":90:18)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":92:5)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":98:5)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":93:9)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":93:25)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":95:17)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":95:23)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":95:29)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":95:36)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":95:42)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":95:53)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":95:9)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":95:54)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":96:22)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":96:14)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":96:17)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":96:9)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":97:19)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memmove_04.c":97:9)
#loc138 = loc(fused[#loc1, #loc2])
#loc139 = loc(fused[#loc3, #loc4])
#loc140 = loc(fused[#loc5, #loc6])
#loc141 = loc(fused[#loc7, #loc8])
#loc142 = loc(fused[#loc9, #loc10])
#loc143 = loc(fused[#loc12, #loc11])
#loc144 = loc(fused[#loc13, #loc14])
#loc145 = loc(fused[#loc16, #loc14])
#loc146 = loc(fused[#loc21, #loc22])
#loc147 = loc(fused[#loc24, #loc23])
#loc148 = loc(fused[#loc28, #loc29])
#loc149 = loc(fused[#loc30, #loc31])
#loc150 = loc(fused[#loc36, #loc37])
#loc151 = loc(fused[#loc34, #loc37])
#loc152 = loc(fused[#loc38, #loc39])
#loc153 = loc(fused[#loc43, #loc40])
#loc154 = loc(fused[#loc46, #loc47])
#loc155 = loc(fused[#loc48, #loc49])
#loc156 = loc(fused[#loc50, #loc51])
#loc157 = loc(fused[#loc53, #loc54])
#loc158 = loc(fused[#loc55, #loc56])
#loc159 = loc(fused[#loc57, #loc58])
#loc160 = loc(fused[#loc60, #loc59])
#loc161 = loc(fused[#loc61, #loc62])
#loc162 = loc(fused[#loc64, #loc65, #loc66, #loc62])
#loc163 = loc(fused[#loc72, #loc73])
#loc164 = loc(fused[#loc75, #loc74])
#loc165 = loc(fused[#loc79, #loc80])
#loc166 = loc(fused[#loc81, #loc82])
#loc167 = loc(fused[#loc87, #loc88])
#loc168 = loc(fused[#loc85, #loc88])
#loc169 = loc(fused[#loc89, #loc90])
#loc170 = loc(fused[#loc94, #loc91])
#loc171 = loc(fused[#loc97, #loc98])
#loc172 = loc(fused[#loc99, #loc100])
#loc173 = loc(fused[#loc101, #loc102])
#loc174 = loc(fused[#loc104, #loc103])
#loc175 = loc(fused[#loc105, #loc106])
#loc176 = loc(fused[#loc108, #loc106])
#loc177 = loc(fused[#loc113, #loc114])
#loc178 = loc(fused[#loc116, #loc115])
#loc179 = loc(fused[#loc120, #loc121])
#loc180 = loc(fused[#loc122, #loc123])
#loc181 = loc(fused[#loc128, #loc129])
#loc182 = loc(fused[#loc126, #loc129])
#loc183 = loc(fused[#loc130, #loc131])
#loc184 = loc(fused[#loc135, #loc132])
