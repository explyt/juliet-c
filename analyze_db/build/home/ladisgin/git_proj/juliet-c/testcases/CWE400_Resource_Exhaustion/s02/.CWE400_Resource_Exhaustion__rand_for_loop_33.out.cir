!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc19 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":32:13)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":80:13)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":86:27)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":115:10)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":115:14)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":115:20)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":115:32)
#true = #cir.bool<true> : !cir.bool
#loc179 = loc(fused[#loc114, #loc115])
#loc180 = loc(fused[#loc116, #loc117])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_for_loop_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc130)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc131)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc5)
  cir.func @_ZN44CWE400_Resource_Exhaustion__rand_for_loop_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc133)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc134)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc135)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countRef", init, const] {alignment = 8 : i64} loc(#loc136)
    cir.store %2, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc15)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc17)
    cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc137)
    %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %8 = cir.binop(and, %6, %7) : !s32i loc(#loc19)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %9 ^bb1, ^bb2 loc(#loc19)
  ^bb1:  // pred: ^bb0
    %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc19)
    %12 = cir.const #cir.int<30> : !s32i loc(#loc19)
    %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc19)
    %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc19)
    %16 = cir.const #cir.int<15> : !s32i loc(#loc19)
    %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc19)
    %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc19)
    %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc19)
    %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc19)
    cir.br ^bb3(%21 : !u32i) loc(#loc19)
  ^bb2:  // pred: ^bb0
    %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc19)
    %24 = cir.const #cir.int<30> : !s32i loc(#loc19)
    %25 = cir.shift(left, %23 : !u32i, %24 : !s32i) -> !u32i loc(#loc19)
    %26 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc19)
    %28 = cir.const #cir.int<15> : !s32i loc(#loc19)
    %29 = cir.shift(left, %27 : !u32i, %28 : !s32i) -> !u32i loc(#loc19)
    %30 = cir.binop(xor, %25, %29) : !u32i loc(#loc19)
    %31 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc19)
    %33 = cir.binop(xor, %30, %32) : !u32i loc(#loc19)
    %34 = cir.unary(minus, %33) : !u32i, !u32i loc(#loc19)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %36 = cir.cast(integral, %35 : !s32i), !u32i loc(#loc19)
    %37 = cir.binop(sub, %34, %36) : !u32i loc(#loc19)
    cir.br ^bb3(%37 : !u32i) loc(#loc19)
  ^bb3(%38: !u32i loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":32:13)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc19)
  ^bb4:  // pred: ^bb3
    %39 = cir.cast(integral, %38 : !u32i), !s32i loc(#loc19)
    cir.store %39, %2 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    cir.br ^bb5 loc(#loc139)
  ^bb5:  // pred: ^bb4
    %40 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc9)
    %41 = cir.load %40 : !cir.ptr<!s32i>, !s32i loc(#loc9)
    cir.store %41, %0 : !s32i, !cir.ptr<!s32i> loc(#loc133)
    cir.br ^bb6 loc(#loc140)
  ^bb6:  // pred: ^bb5
    %42 = cir.const #cir.int<0> : !s32i loc(#loc11)
    %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc11)
    cir.store %43, %1 : !u64i, !cir.ptr<!u64i> loc(#loc134)
    cir.br ^bb7 loc(#loc141)
  ^bb7:  // pred: ^bb6
    %44 = cir.const #cir.int<0> : !s32i loc(#loc27)
    %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc27)
    cir.store %45, %1 : !u64i, !cir.ptr<!u64i> loc(#loc142)
    cir.br ^bb8 loc(#loc141)
  ^bb8:  // 2 preds: ^bb7, ^bb10
    %46 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc29)
    %47 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc30)
    %49 = cir.cmp(lt, %46, %48) : !u64i, !cir.bool loc(#loc143)
    cir.brcond %49 ^bb9, ^bb11 loc(#loc143)
  ^bb9:  // pred: ^bb8
    %50 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc5)
    %51 = cir.cast(array_to_ptrdecay, %50 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc5)
    cir.call @printLine(%51) : (!cir.ptr<!s8i>) -> () loc(#loc31)
    cir.br ^bb10 loc(#loc26)
  ^bb10:  // pred: ^bb9
    %52 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc32)
    %53 = cir.unary(inc, %52) : !u64i, !u64i loc(#loc33)
    cir.store %53, %1 : !u64i, !cir.ptr<!u64i> loc(#loc144)
    cir.br ^bb8 loc(#loc141)
  ^bb11:  // pred: ^bb8
    cir.br ^bb12 loc(#loc26)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc24)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc22)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc7)
  } loc(#loc132)
  cir.func internal private @_ZN44CWE400_Resource_Exhaustion__rand_for_loop_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc146)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc147)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc148)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countRef", init, const] {alignment = 8 : i64} loc(#loc149)
    cir.store %2, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc43)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc45)
    cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc150)
    %6 = cir.const #cir.int<20> : !s32i loc(#loc47)
    cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc151)
    cir.br ^bb1 loc(#loc152)
  ^bb1:  // pred: ^bb0
    %7 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc37)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc146)
    cir.br ^bb2 loc(#loc153)
  ^bb2:  // pred: ^bb1
    %9 = cir.const #cir.int<0> : !s32i loc(#loc39)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc39)
    cir.store %10, %1 : !u64i, !cir.ptr<!u64i> loc(#loc147)
    cir.br ^bb3 loc(#loc154)
  ^bb3:  // pred: ^bb2
    %11 = cir.const #cir.int<0> : !s32i loc(#loc55)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc55)
    cir.store %12, %1 : !u64i, !cir.ptr<!u64i> loc(#loc155)
    cir.br ^bb4 loc(#loc154)
  ^bb4:  // 2 preds: ^bb3, ^bb6
    %13 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc57)
    %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc58)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc58)
    %16 = cir.cmp(lt, %13, %15) : !u64i, !cir.bool loc(#loc156)
    cir.brcond %16 ^bb5, ^bb7 loc(#loc156)
  ^bb5:  // pred: ^bb4
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc59)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    cir.br ^bb6 loc(#loc54)
  ^bb6:  // pred: ^bb5
    %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc61)
    %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc62)
    cir.store %20, %1 : !u64i, !cir.ptr<!u64i> loc(#loc157)
    cir.br ^bb4 loc(#loc154)
  ^bb7:  // pred: ^bb4
    cir.br ^bb8 loc(#loc54)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc52)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc50)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc35)
  } loc(#loc145)
  cir.func internal private @_ZN44CWE400_Resource_Exhaustion__rand_for_loop_33L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc159)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc160)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc161)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countRef", init, const] {alignment = 8 : i64} loc(#loc162)
    cir.store %2, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc72)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc73)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc74)
    cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc163)
    %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc76)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc76)
    %8 = cir.binop(and, %6, %7) : !s32i loc(#loc76)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc76)
    cir.brcond %9 ^bb1, ^bb2 loc(#loc76)
  ^bb1:  // pred: ^bb0
    %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc76)
    %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc76)
    %12 = cir.const #cir.int<30> : !s32i loc(#loc76)
    %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc76)
    %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc76)
    %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc76)
    %16 = cir.const #cir.int<15> : !s32i loc(#loc76)
    %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc76)
    %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc76)
    %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc76)
    %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc76)
    %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc76)
    cir.br ^bb3(%21 : !u32i) loc(#loc76)
  ^bb2:  // pred: ^bb0
    %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc76)
    %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc76)
    %24 = cir.const #cir.int<30> : !s32i loc(#loc76)
    %25 = cir.shift(left, %23 : !u32i, %24 : !s32i) -> !u32i loc(#loc76)
    %26 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc76)
    %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc76)
    %28 = cir.const #cir.int<15> : !s32i loc(#loc76)
    %29 = cir.shift(left, %27 : !u32i, %28 : !s32i) -> !u32i loc(#loc76)
    %30 = cir.binop(xor, %25, %29) : !u32i loc(#loc76)
    %31 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc76)
    %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc76)
    %33 = cir.binop(xor, %30, %32) : !u32i loc(#loc76)
    %34 = cir.unary(minus, %33) : !u32i, !u32i loc(#loc76)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc76)
    %36 = cir.cast(integral, %35 : !s32i), !u32i loc(#loc76)
    %37 = cir.binop(sub, %34, %36) : !u32i loc(#loc76)
    cir.br ^bb3(%37 : !u32i) loc(#loc76)
  ^bb3(%38: !u32i loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":80:13)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc76)
  ^bb4:  // pred: ^bb3
    %39 = cir.cast(integral, %38 : !u32i), !s32i loc(#loc76)
    cir.store %39, %2 : !s32i, !cir.ptr<!s32i> loc(#loc164)
    cir.br ^bb5 loc(#loc165)
  ^bb5:  // pred: ^bb4
    %40 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc66)
    %41 = cir.load %40 : !cir.ptr<!s32i>, !s32i loc(#loc66)
    cir.store %41, %0 : !s32i, !cir.ptr<!s32i> loc(#loc159)
    cir.br ^bb6 loc(#loc166)
  ^bb6:  // pred: ^bb5
    %42 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc68)
    cir.store %43, %1 : !u64i, !cir.ptr<!u64i> loc(#loc160)
    cir.br ^bb7 loc(#loc167)
  ^bb7:  // pred: ^bb6
    %44 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc84)
    %45 = cir.const #cir.int<0> : !s32i loc(#loc85)
    %46 = cir.cmp(gt, %44, %45) : !s32i, !cir.bool loc(#loc168)
    cir.brcond %46 ^bb8, ^bb13 loc(#loc86)
  ^bb8:  // pred: ^bb7
    %47 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc87)
    %48 = cir.const #cir.int<20> : !s32i loc(#loc88)
    %49 = cir.cmp(le, %47, %48) : !s32i, !cir.bool loc(#loc169)
    cir.brcond %49 ^bb9, ^bb10 loc(#loc86)
  ^bb9:  // pred: ^bb8
    %50 = cir.const #true loc(#loc86)
    cir.br ^bb11(%50 : !cir.bool) loc(#loc86)
  ^bb10:  // pred: ^bb8
    %51 = cir.const #false loc(#loc86)
    cir.br ^bb11(%51 : !cir.bool) loc(#loc86)
  ^bb11(%52: !cir.bool loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":86:27)):  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc86)
  ^bb12:  // pred: ^bb11
    cir.br ^bb14(%52 : !cir.bool) loc(#loc86)
  ^bb13:  // pred: ^bb7
    %53 = cir.const #false loc(#loc86)
    cir.br ^bb14(%53 : !cir.bool) loc(#loc86)
  ^bb14(%54: !cir.bool loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":86:27)):  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc86)
  ^bb15:  // pred: ^bb14
    cir.brcond %54 ^bb16, ^bb23 loc(#loc170)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc171)
  ^bb17:  // pred: ^bb16
    %55 = cir.const #cir.int<0> : !s32i loc(#loc92)
    %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc92)
    cir.store %56, %1 : !u64i, !cir.ptr<!u64i> loc(#loc172)
    cir.br ^bb18 loc(#loc171)
  ^bb18:  // 2 preds: ^bb17, ^bb20
    %57 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc94)
    %58 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc95)
    %60 = cir.cmp(lt, %57, %59) : !u64i, !cir.bool loc(#loc173)
    cir.brcond %60 ^bb19, ^bb21 loc(#loc173)
  ^bb19:  // pred: ^bb18
    %61 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc96)
    %62 = cir.cast(array_to_ptrdecay, %61 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc96)
    cir.call @printLine(%62) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    cir.br ^bb20 loc(#loc91)
  ^bb20:  // pred: ^bb19
    %63 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc98)
    %64 = cir.unary(inc, %63) : !u64i, !u64i loc(#loc99)
    cir.store %64, %1 : !u64i, !cir.ptr<!u64i> loc(#loc174)
    cir.br ^bb18 loc(#loc171)
  ^bb21:  // pred: ^bb18
    cir.br ^bb22 loc(#loc91)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc83)
  ^bb23:  // 2 preds: ^bb15, ^bb22
    cir.br ^bb24 loc(#loc83)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc81)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc79)
  ^bb26:  // pred: ^bb25
    cir.return loc(#loc64)
  } loc(#loc158)
  cir.func @_ZN44CWE400_Resource_Exhaustion__rand_for_loop_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN44CWE400_Resource_Exhaustion__rand_for_loop_33L7goodG2BEv() : () -> () loc(#loc102)
    cir.call @_ZN44CWE400_Resource_Exhaustion__rand_for_loop_33L7goodB2GEv() : () -> () loc(#loc103)
    cir.return loc(#loc101)
  } loc(#loc175)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc176)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc177)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc108)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc109)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc110)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc111)
  cir.func @main(%arg0: !s32i loc(fused[#loc114, #loc115]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc116, #loc117])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc179)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc180)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc113)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc118)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc118)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc119)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc120)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc120)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc121)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc108)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc108)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc122)
    cir.call @_ZN44CWE400_Resource_Exhaustion__rand_for_loop_334goodEv() : () -> () loc(#loc123)
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc109)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc109)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc124)
    %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc110)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc110)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc125)
    cir.call @_ZN44CWE400_Resource_Exhaustion__rand_for_loop_333badEv() : () -> () loc(#loc126)
    %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc111)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc111)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc127)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc128)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc181)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc181)
    cir.return %15 : !s32i loc(#loc181)
  } loc(#loc178)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":40:27)
#loc6 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":25:1)
#loc7 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":44:1)
#loc8 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":34:9)
#loc9 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":34:21)
#loc10 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":36:13)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":36:24)
#loc12 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":27:5)
#loc13 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":27:9)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":28:5)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":28:21)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":30:14)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":30:13)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":30:5)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":32:5)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":33:5)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":43:5)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":35:9)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":42:9)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":38:13)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":41:13)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":38:22)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":38:18)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":38:25)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":38:37)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":40:17)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":38:45)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":38:44)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":51:1)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":70:1)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":60:9)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":60:21)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":62:13)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":62:24)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":53:5)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":53:9)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":54:5)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":54:21)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":56:14)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":56:13)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":56:5)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":58:13)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":58:5)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":59:5)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":69:5)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":61:9)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":68:9)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":64:13)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":67:13)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":64:22)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":64:18)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":64:25)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":64:37)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":66:27)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":66:17)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":64:45)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":64:44)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":73:1)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":95:1)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":82:9)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":82:21)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":84:13)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":84:24)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":75:5)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":75:9)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":76:5)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":76:21)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":78:14)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":78:13)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":78:5)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":80:5)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":81:5)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":94:5)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":83:9)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":93:9)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":86:13)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":92:13)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":86:17)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":86:25)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":86:30)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":86:39)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":87:13)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":88:17)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":91:17)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":88:26)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":88:22)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":88:29)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":88:41)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":90:31)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":90:21)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":88:49)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":88:48)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":97:1)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":101:1)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":99:5)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":100:5)
#loc104 = loc("/usr/include/stdlib.h":575:1)
#loc105 = loc("/usr/include/stdlib.h":575:41)
#loc106 = loc("/usr/include/time.h":76:1)
#loc107 = loc("/usr/include/time.h":76:38)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":120:15)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":122:15)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":125:15)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":127:15)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":115:1)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":130:1)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":116:1)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":118:27)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":118:22)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":118:5)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":120:5)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":121:5)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":122:5)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":125:5)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":126:5)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":127:5)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":129:12)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_for_loop_33.cpp":129:5)
#loc130 = loc(fused[#loc1, #loc2])
#loc131 = loc(fused[#loc3, #loc4])
#loc132 = loc(fused[#loc6, #loc7])
#loc133 = loc(fused[#loc8, #loc9])
#loc134 = loc(fused[#loc10, #loc11])
#loc135 = loc(fused[#loc12, #loc13])
#loc136 = loc(fused[#loc14, #loc15])
#loc137 = loc(fused[#loc18, #loc16])
#loc138 = loc(fused[#loc20, #loc19])
#loc139 = loc(fused[#loc21, #loc22])
#loc140 = loc(fused[#loc23, #loc24])
#loc141 = loc(fused[#loc25, #loc26])
#loc142 = loc(fused[#loc28, #loc27])
#loc143 = loc(fused[#loc29, #loc30])
#loc144 = loc(fused[#loc33, #loc32])
#loc145 = loc(fused[#loc34, #loc35])
#loc146 = loc(fused[#loc36, #loc37])
#loc147 = loc(fused[#loc38, #loc39])
#loc148 = loc(fused[#loc40, #loc41])
#loc149 = loc(fused[#loc42, #loc43])
#loc150 = loc(fused[#loc46, #loc44])
#loc151 = loc(fused[#loc48, #loc47])
#loc152 = loc(fused[#loc49, #loc50])
#loc153 = loc(fused[#loc51, #loc52])
#loc154 = loc(fused[#loc53, #loc54])
#loc155 = loc(fused[#loc56, #loc55])
#loc156 = loc(fused[#loc57, #loc58])
#loc157 = loc(fused[#loc62, #loc61])
#loc158 = loc(fused[#loc63, #loc64])
#loc159 = loc(fused[#loc65, #loc66])
#loc160 = loc(fused[#loc67, #loc68])
#loc161 = loc(fused[#loc69, #loc70])
#loc162 = loc(fused[#loc71, #loc72])
#loc163 = loc(fused[#loc75, #loc73])
#loc164 = loc(fused[#loc77, #loc76])
#loc165 = loc(fused[#loc78, #loc79])
#loc166 = loc(fused[#loc80, #loc81])
#loc167 = loc(fused[#loc82, #loc83])
#loc168 = loc(fused[#loc84, #loc85])
#loc169 = loc(fused[#loc87, #loc88])
#loc170 = loc(fused[#loc89, #loc83])
#loc171 = loc(fused[#loc90, #loc91])
#loc172 = loc(fused[#loc93, #loc92])
#loc173 = loc(fused[#loc94, #loc95])
#loc174 = loc(fused[#loc99, #loc98])
#loc175 = loc(fused[#loc100, #loc101])
#loc176 = loc(fused[#loc104, #loc105])
#loc177 = loc(fused[#loc106, #loc107])
#loc178 = loc(fused[#loc112, #loc113])
#loc181 = loc(fused[#loc129, #loc128])
