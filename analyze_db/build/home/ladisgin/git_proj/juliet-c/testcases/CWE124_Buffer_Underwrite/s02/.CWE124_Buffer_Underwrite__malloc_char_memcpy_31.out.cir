!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc92 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":102:10)
#loc93 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":102:14)
#loc94 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":102:20)
#loc95 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":102:32)
#loc212 = loc(fused[#loc92, #loc93])
#loc213 = loc(fused[#loc94, #loc95])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc179)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc180)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc181)
  cir.func no_proto @CWE124_Buffer_Underwrite__malloc_char_memcpy_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc183)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc184)
    cir.scope {
      %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc186)
      %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc17)
      %4 = cir.const #cir.int<100> : !s32i loc(#loc18)
      %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc18)
      %6 = cir.const #cir.int<1> : !u64i loc(#loc187)
      %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc188)
      %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc17)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc189)
      cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc186)
      cir.scope {
        %28 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
        %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc24)
        %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc24)
        %31 = cir.cmp(eq, %28, %30) : !cir.ptr<!s8i>, !cir.bool loc(#loc191)
        cir.if %31 {
          %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc26)
          %33 = cir.const #cir.int<1> : !s32i loc(#loc27)
          %34 = cir.unary(minus, %33) : !s32i, !s32i loc(#loc28)
          cir.call @exit(%34) : (!s32i) -> () extra(#fn_attr) loc(#loc26)
        } loc(#loc192)
      } loc(#loc190)
      %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc29)
      %12 = cir.const #cir.int<65> : !s32i loc(#loc30)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc31)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc32)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc31)
      %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc31)
      cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc193)
      %17 = cir.const #cir.int<0> : !s32i loc(#loc35)
      %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc35)
      %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
      %20 = cir.const #cir.int<100> : !s32i loc(#loc37)
      %21 = cir.const #cir.int<1> : !s32i loc(#loc38)
      %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc37)
      %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc39)
      cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc194)
      %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
      %25 = cir.const #cir.int<8> : !s32i loc(#loc41)
      %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc41)
      %27 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc42)
      cir.store %27, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc195)
    } loc(#loc185)
    cir.scope {
      %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc197)
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc198)
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
      cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc197)
      %5 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
      cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc198)
      cir.scope {
        %6 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc200)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc54)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc54)
        %9 = cir.const #cir.int<67> : !s32i loc(#loc55)
        %10 = cir.const #cir.int<100> : !s32i loc(#loc56)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc57)
        %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc56)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc56)
        cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc201)
        %14 = cir.const #cir.int<0> : !s32i loc(#loc60)
        %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc60)
        %16 = cir.const #cir.int<100> : !s32i loc(#loc61)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc62)
        %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc61)
        %19 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc63)
        %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc63)
        cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc202)
        %21 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
        %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc64)
        %23 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc65)
        %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc65)
        %25 = cir.const #cir.int<100> : !s32i loc(#loc66)
        %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc66)
        %27 = cir.const #cir.int<1> : !u64i loc(#loc203)
        %28 = cir.binop(mul, %26, %27) : !u64i loc(#loc204)
        cir.libc.memcpy %28 bytes from %24 to %22 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc205)
        %29 = cir.const #cir.int<0> : !s32i loc(#loc71)
        %30 = cir.cast(integral, %29 : !s32i), !s8i loc(#loc71)
        %31 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
        %32 = cir.const #cir.int<100> : !s32i loc(#loc73)
        %33 = cir.const #cir.int<1> : !s32i loc(#loc74)
        %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc73)
        %35 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %34 : !s32i), !cir.ptr<!s8i> loc(#loc75)
        cir.store %30, %35 : !s8i, !cir.ptr<!s8i> loc(#loc206)
        %36 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
        cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc77)
      } loc(#loc199)
    } loc(#loc196)
    cir.return loc(#loc8)
  } loc(#loc182)
  cir.func no_proto @CWE124_Buffer_Underwrite__malloc_char_memcpy_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc208)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc80)
    cir.return loc(#loc79)
  } loc(#loc207)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc209)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc210)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc86)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc87)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc88)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc89)
  cir.func @main(%arg0: !s32i loc(fused[#loc92, #loc93]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc94, #loc95])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc212)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc213)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc91)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc96)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc96)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc97)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc98)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc98)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc99)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc86)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc86)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    %8 = cir.get_global @CWE124_Buffer_Underwrite__malloc_char_memcpy_31_good : !cir.ptr<!cir.func<!void ()>> loc(#loc214)
    cir.call @CWE124_Buffer_Underwrite__malloc_char_memcpy_31_good() : () -> () loc(#loc101)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc87)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc103)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc88)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    %13 = cir.get_global @CWE124_Buffer_Underwrite__malloc_char_memcpy_31_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc215)
    cir.call @CWE124_Buffer_Underwrite__malloc_char_memcpy_31_bad() : () -> () loc(#loc105)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc89)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc89)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc108)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc216)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc216)
    cir.return %17 : !s32i loc(#loc216)
  } loc(#loc211)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc218)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc114)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc219)
    cir.scope {
      %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc221)
      %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc120)
      %4 = cir.const #cir.int<100> : !s32i loc(#loc121)
      %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc121)
      %6 = cir.const #cir.int<1> : !u64i loc(#loc222)
      %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc223)
      %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc120)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc224)
      cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc221)
      cir.scope {
        %25 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
        %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc127)
        %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc127)
        %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc226)
        cir.if %28 {
          %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc129)
          %30 = cir.const #cir.int<1> : !s32i loc(#loc130)
          %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc131)
          cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc129)
        } loc(#loc227)
      } loc(#loc225)
      %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc132)
      %12 = cir.const #cir.int<65> : !s32i loc(#loc133)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc134)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc135)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc134)
      %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc134)
      cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc228)
      %17 = cir.const #cir.int<0> : !s32i loc(#loc138)
      %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc138)
      %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
      %20 = cir.const #cir.int<100> : !s32i loc(#loc140)
      %21 = cir.const #cir.int<1> : !s32i loc(#loc141)
      %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc140)
      %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc142)
      cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc229)
      %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
      cir.store %24, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc230)
    } loc(#loc220)
    cir.scope {
      %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc232)
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc233)
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
      cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc232)
      %5 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
      cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc233)
      cir.scope {
        %6 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc235)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc155)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc155)
        %9 = cir.const #cir.int<67> : !s32i loc(#loc156)
        %10 = cir.const #cir.int<100> : !s32i loc(#loc157)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc158)
        %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc157)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc157)
        cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc236)
        %14 = cir.const #cir.int<0> : !s32i loc(#loc161)
        %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc161)
        %16 = cir.const #cir.int<100> : !s32i loc(#loc162)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc163)
        %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc162)
        %19 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc164)
        %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc164)
        cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc237)
        %21 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
        %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc165)
        %23 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc166)
        %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc166)
        %25 = cir.const #cir.int<100> : !s32i loc(#loc167)
        %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc167)
        %27 = cir.const #cir.int<1> : !u64i loc(#loc238)
        %28 = cir.binop(mul, %26, %27) : !u64i loc(#loc239)
        cir.libc.memcpy %28 bytes from %24 to %22 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc240)
        %29 = cir.const #cir.int<0> : !s32i loc(#loc172)
        %30 = cir.cast(integral, %29 : !s32i), !s8i loc(#loc172)
        %31 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc173)
        %32 = cir.const #cir.int<100> : !s32i loc(#loc174)
        %33 = cir.const #cir.int<1> : !s32i loc(#loc175)
        %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc174)
        %35 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %34 : !s32i), !cir.ptr<!s8i> loc(#loc176)
        cir.store %30, %35 : !s8i, !cir.ptr<!s8i> loc(#loc241)
        %36 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc177)
        cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc178)
      } loc(#loc234)
    } loc(#loc231)
    cir.return loc(#loc111)
  } loc(#loc217)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":23:1)
#loc8 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":51:1)
#loc9 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":25:5)
#loc10 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":25:12)
#loc11 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":26:12)
#loc12 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":26:5)
#loc13 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":27:5)
#loc14 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":34:5)
#loc15 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":28:9)
#loc16 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":28:60)
#loc17 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":28:37)
#loc18 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":28:44)
#loc19 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":28:48)
#loc20 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":28:59)
#loc21 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":29:9)
#loc22 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":29:43)
#loc23 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":29:13)
#loc24 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":29:27)
#loc25 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":29:33)
#loc26 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":29:34)
#loc27 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":29:40)
#loc28 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":29:39)
#loc29 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":30:16)
#loc30 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":30:28)
#loc31 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":30:33)
#loc32 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":30:37)
#loc33 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":30:9)
#loc34 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":30:38)
#loc35 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":31:29)
#loc36 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":31:9)
#loc37 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":31:20)
#loc38 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":31:24)
#loc39 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":31:25)
#loc40 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":33:16)
#loc41 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":33:29)
#loc42 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":33:27)
#loc43 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":33:9)
#loc44 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":35:5)
#loc45 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":50:5)
#loc46 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":36:9)
#loc47 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":36:27)
#loc48 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":37:9)
#loc49 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":37:23)
#loc50 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":38:9)
#loc51 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":49:9)
#loc52 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":39:13)
#loc53 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":39:28)
#loc54 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":40:20)
#loc55 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":40:28)
#loc56 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":40:33)
#loc57 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":40:37)
#loc58 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":40:13)
#loc59 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":40:38)
#loc60 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":41:29)
#loc61 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":41:20)
#loc62 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":41:24)
#loc63 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":41:13)
#loc64 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":43:20)
#loc65 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":43:26)
#loc66 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":43:34)
#loc67 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":43:38)
#loc68 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":43:49)
#loc69 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":43:13)
#loc70 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":43:50)
#loc71 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":45:27)
#loc72 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":45:13)
#loc73 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":45:18)
#loc74 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":45:22)
#loc75 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":45:23)
#loc76 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":46:23)
#loc77 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":46:13)
#loc78 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":88:1)
#loc79 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":91:1)
#loc80 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":90:5)
#loc81 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":90:13)
#loc82 = loc("/usr/include/stdlib.h":575:1)
#loc83 = loc("/usr/include/stdlib.h":575:41)
#loc84 = loc("/usr/include/time.h":76:1)
#loc85 = loc("/usr/include/time.h":76:38)
#loc86 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":107:15)
#loc87 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":109:15)
#loc88 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":112:15)
#loc89 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":114:15)
#loc90 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":102:1)
#loc91 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":117:1)
#loc96 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":103:1)
#loc97 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":105:27)
#loc98 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":105:22)
#loc99 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":105:5)
#loc100 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":107:5)
#loc101 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":108:5)
#loc102 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":108:58)
#loc103 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":109:5)
#loc104 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":112:5)
#loc105 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":113:5)
#loc106 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":113:57)
#loc107 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":114:5)
#loc108 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":116:12)
#loc109 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":116:5)
#loc110 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":58:1)
#loc111 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":86:1)
#loc112 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":60:5)
#loc113 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":60:12)
#loc114 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":61:12)
#loc115 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":61:5)
#loc116 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":62:5)
#loc117 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":69:5)
#loc118 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":63:9)
#loc119 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":63:60)
#loc120 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":63:37)
#loc121 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":63:44)
#loc122 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":63:48)
#loc123 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":63:59)
#loc124 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":64:9)
#loc125 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":64:43)
#loc126 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":64:13)
#loc127 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":64:27)
#loc128 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":64:33)
#loc129 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":64:34)
#loc130 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":64:40)
#loc131 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":64:39)
#loc132 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":65:16)
#loc133 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":65:28)
#loc134 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":65:33)
#loc135 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":65:37)
#loc136 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":65:9)
#loc137 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":65:38)
#loc138 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":66:29)
#loc139 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":66:9)
#loc140 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":66:20)
#loc141 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":66:24)
#loc142 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":66:25)
#loc143 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":68:16)
#loc144 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":68:9)
#loc145 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":70:5)
#loc146 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":85:5)
#loc147 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":71:9)
#loc148 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":71:27)
#loc149 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":72:9)
#loc150 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":72:23)
#loc151 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":73:9)
#loc152 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":84:9)
#loc153 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":74:13)
#loc154 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":74:28)
#loc155 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":75:20)
#loc156 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":75:28)
#loc157 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":75:33)
#loc158 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":75:37)
#loc159 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":75:13)
#loc160 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":75:38)
#loc161 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":76:29)
#loc162 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":76:20)
#loc163 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":76:24)
#loc164 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":76:13)
#loc165 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":78:20)
#loc166 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":78:26)
#loc167 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":78:34)
#loc168 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":78:38)
#loc169 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":78:49)
#loc170 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":78:13)
#loc171 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":78:50)
#loc172 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":80:27)
#loc173 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":80:13)
#loc174 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":80:18)
#loc175 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":80:22)
#loc176 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":80:23)
#loc177 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":81:23)
#loc178 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_31.c":81:13)
#loc179 = loc(fused[#loc1, #loc2])
#loc180 = loc(fused[#loc3, #loc4])
#loc181 = loc(fused[#loc5, #loc6])
#loc182 = loc(fused[#loc7, #loc8])
#loc183 = loc(fused[#loc9, #loc10])
#loc184 = loc(fused[#loc12, #loc11])
#loc185 = loc(fused[#loc13, #loc14])
#loc186 = loc(fused[#loc15, #loc16])
#loc187 = loc(fused[#loc19, #loc20])
#loc188 = loc(fused[#loc18, #loc20])
#loc189 = loc(fused[#loc17, #loc16])
#loc190 = loc(fused[#loc21, #loc22])
#loc191 = loc(fused[#loc23, #loc24])
#loc192 = loc(fused[#loc25, #loc22])
#loc193 = loc(fused[#loc33, #loc34])
#loc194 = loc(fused[#loc36, #loc35])
#loc195 = loc(fused[#loc43, #loc41])
#loc196 = loc(fused[#loc44, #loc45])
#loc197 = loc(fused[#loc46, #loc47])
#loc198 = loc(fused[#loc48, #loc49])
#loc199 = loc(fused[#loc50, #loc51])
#loc200 = loc(fused[#loc52, #loc53])
#loc201 = loc(fused[#loc58, #loc59])
#loc202 = loc(fused[#loc63, #loc60])
#loc203 = loc(fused[#loc67, #loc68])
#loc204 = loc(fused[#loc66, #loc68])
#loc205 = loc(fused[#loc69, #loc70])
#loc206 = loc(fused[#loc72, #loc71])
#loc207 = loc(fused[#loc78, #loc79])
#loc208 = loc(fused[#loc80, #loc81])
#loc209 = loc(fused[#loc82, #loc83])
#loc210 = loc(fused[#loc84, #loc85])
#loc211 = loc(fused[#loc90, #loc91])
#loc214 = loc(fused[#loc101, #loc102])
#loc215 = loc(fused[#loc105, #loc106])
#loc216 = loc(fused[#loc109, #loc108])
#loc217 = loc(fused[#loc110, #loc111])
#loc218 = loc(fused[#loc112, #loc113])
#loc219 = loc(fused[#loc115, #loc114])
#loc220 = loc(fused[#loc116, #loc117])
#loc221 = loc(fused[#loc118, #loc119])
#loc222 = loc(fused[#loc122, #loc123])
#loc223 = loc(fused[#loc121, #loc123])
#loc224 = loc(fused[#loc120, #loc119])
#loc225 = loc(fused[#loc124, #loc125])
#loc226 = loc(fused[#loc126, #loc127])
#loc227 = loc(fused[#loc128, #loc125])
#loc228 = loc(fused[#loc136, #loc137])
#loc229 = loc(fused[#loc139, #loc138])
#loc230 = loc(fused[#loc144, #loc143])
#loc231 = loc(fused[#loc145, #loc146])
#loc232 = loc(fused[#loc147, #loc148])
#loc233 = loc(fused[#loc149, #loc150])
#loc234 = loc(fused[#loc151, #loc152])
#loc235 = loc(fused[#loc153, #loc154])
#loc236 = loc(fused[#loc159, #loc160])
#loc237 = loc(fused[#loc164, #loc161])
#loc238 = loc(fused[#loc168, #loc169])
#loc239 = loc(fused[#loc167, #loc169])
#loc240 = loc(fused[#loc170, #loc171])
#loc241 = loc(fused[#loc173, #loc172])
