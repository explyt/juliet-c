!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc119)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc120)
  cir.func private @printIntLine(!s32i) loc(#loc121)
  cir.global "private" internal dsolocal @CWE401_Memory_Leak__int_malloc_45_badData = #cir.ptr<null> : !cir.ptr<!s32i> {alignment = 8 : i64} loc(#loc122)
  cir.func no_proto @CWE401_Memory_Leak__int_malloc_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc124)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc125)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc15)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc16)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc16)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc126)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc127)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc15)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc128)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc129)
    cir.scope {
      %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc23)
      %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc24)
      %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc24)
      %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!s32i>, !cir.bool loc(#loc131)
      cir.if %23 {
        %24 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc26)
        %25 = cir.const #cir.int<1> : !s32i loc(#loc27)
        %26 = cir.unary(minus, %25) nsw : !s32i, !s32i loc(#loc28)
        cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc26)
      } loc(#loc132)
    } loc(#loc130)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc29)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc30)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc31)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc32)
    cir.store %9, %12 : !s32i, !cir.ptr<!s32i> loc(#loc133)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc33)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc35)
    %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc33)
    cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc36)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc37)
    %18 = cir.get_global @CWE401_Memory_Leak__int_malloc_45_badData : !cir.ptr<!cir.ptr<!s32i>> loc(#loc122)
    cir.store %17, %18 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc134)
    %19 = cir.get_global @badSink : !cir.ptr<!cir.func<()>> loc(#loc135)
    cir.call %19() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc39)
    cir.return loc(#loc10)
  } loc(#loc123)
  cir.func no_proto @CWE401_Memory_Leak__int_malloc_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc137)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc43)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc138)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc45)
    cir.return loc(#loc42)
  } loc(#loc136)
  cir.func no_proto internal private @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc140)
    %1 = cir.get_global @CWE401_Memory_Leak__int_malloc_45_badData : !cir.ptr<!cir.ptr<!s32i>> loc(#loc122)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc50)
    cir.store %2, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc140)
    cir.return loc(#loc48)
  } loc(#loc139)
  cir.global "private" internal dsolocal @CWE401_Memory_Leak__int_malloc_45_goodG2BData = #cir.ptr<null> : !cir.ptr<!s32i> {alignment = 8 : i64} loc(#loc141)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc143)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc57)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc144)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc59)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc59)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc59)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc59)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc59)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc59)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc59)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc145)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc61)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc62)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc64)
    cir.store %9, %12 : !s32i, !cir.ptr<!s32i> loc(#loc146)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc65)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc66)
    %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc67)
    %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc68)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc69)
    %18 = cir.get_global @CWE401_Memory_Leak__int_malloc_45_goodG2BData : !cir.ptr<!cir.ptr<!s32i>> loc(#loc141)
    cir.store %17, %18 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc147)
    %19 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<()>> loc(#loc148)
    cir.call %19() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc71)
    cir.return loc(#loc54)
  } loc(#loc142)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc150)
    %1 = cir.get_global @CWE401_Memory_Leak__int_malloc_45_goodG2BData : !cir.ptr<!cir.ptr<!s32i>> loc(#loc141)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc76)
    cir.store %2, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc150)
    cir.return loc(#loc74)
  } loc(#loc149)
  cir.global "private" internal dsolocal @CWE401_Memory_Leak__int_malloc_45_goodB2GData = #cir.ptr<null> : !cir.ptr<!s32i> {alignment = 8 : i64} loc(#loc151)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc153)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc83)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc154)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc85)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc86)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc86)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc155)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc156)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc85)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc157)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc158)
    cir.scope {
      %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc93)
      %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc94)
      %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc94)
      %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!s32i>, !cir.bool loc(#loc160)
      cir.if %23 {
        %24 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc96)
        %25 = cir.const #cir.int<1> : !s32i loc(#loc97)
        %26 = cir.unary(minus, %25) nsw : !s32i, !s32i loc(#loc98)
        cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc96)
      } loc(#loc161)
    } loc(#loc159)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc99)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc100)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc101)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc102)
    cir.store %9, %12 : !s32i, !cir.ptr<!s32i> loc(#loc162)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc103)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc104)
    %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc105)
    %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc106)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc107)
    %18 = cir.get_global @CWE401_Memory_Leak__int_malloc_45_goodB2GData : !cir.ptr<!cir.ptr<!s32i>> loc(#loc151)
    cir.store %17, %18 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc163)
    %19 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<()>> loc(#loc164)
    cir.call %19() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc109)
    cir.return loc(#loc80)
  } loc(#loc152)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc165)
  cir.func no_proto internal private @goodB2GSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc167)
    %1 = cir.get_global @CWE401_Memory_Leak__int_malloc_45_goodB2GData : !cir.ptr<!cir.ptr<!s32i>> loc(#loc151)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc116)
    cir.store %2, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc167)
    %3 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc117)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc118)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc118)
    cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc117)
    cir.return loc(#loc114)
  } loc(#loc166)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_45.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("CWE401_Memory_Leak__int_malloc_45.c":22:1)
#loc8 = loc("CWE401_Memory_Leak__int_malloc_45.c":22:14)
#loc9 = loc("CWE401_Memory_Leak__int_malloc_45.c":35:1)
#loc10 = loc("CWE401_Memory_Leak__int_malloc_45.c":47:1)
#loc11 = loc("CWE401_Memory_Leak__int_malloc_45.c":37:5)
#loc12 = loc("CWE401_Memory_Leak__int_malloc_45.c":37:11)
#loc13 = loc("CWE401_Memory_Leak__int_malloc_45.c":38:12)
#loc14 = loc("CWE401_Memory_Leak__int_malloc_45.c":38:5)
#loc15 = loc("CWE401_Memory_Leak__int_malloc_45.c":40:19)
#loc16 = loc("CWE401_Memory_Leak__int_malloc_45.c":40:26)
#loc17 = loc("CWE401_Memory_Leak__int_malloc_45.c":40:30)
#loc18 = loc("CWE401_Memory_Leak__int_malloc_45.c":40:40)
#loc19 = loc("CWE401_Memory_Leak__int_malloc_45.c":40:41)
#loc20 = loc("CWE401_Memory_Leak__int_malloc_45.c":40:5)
#loc21 = loc("CWE401_Memory_Leak__int_malloc_45.c":41:5)
#loc22 = loc("CWE401_Memory_Leak__int_malloc_45.c":41:33)
#loc23 = loc("CWE401_Memory_Leak__int_malloc_45.c":41:9)
#loc24 = loc("CWE401_Memory_Leak__int_malloc_45.c":41:17)
#loc25 = loc("CWE401_Memory_Leak__int_malloc_45.c":41:23)
#loc26 = loc("CWE401_Memory_Leak__int_malloc_45.c":41:24)
#loc27 = loc("CWE401_Memory_Leak__int_malloc_45.c":41:30)
#loc28 = loc("CWE401_Memory_Leak__int_malloc_45.c":41:29)
#loc29 = loc("CWE401_Memory_Leak__int_malloc_45.c":43:15)
#loc30 = loc("CWE401_Memory_Leak__int_malloc_45.c":43:5)
#loc31 = loc("CWE401_Memory_Leak__int_malloc_45.c":43:10)
#loc32 = loc("CWE401_Memory_Leak__int_malloc_45.c":43:11)
#loc33 = loc("CWE401_Memory_Leak__int_malloc_45.c":44:18)
#loc34 = loc("CWE401_Memory_Leak__int_malloc_45.c":44:23)
#loc35 = loc("CWE401_Memory_Leak__int_malloc_45.c":44:24)
#loc36 = loc("CWE401_Memory_Leak__int_malloc_45.c":44:5)
#loc37 = loc("CWE401_Memory_Leak__int_malloc_45.c":45:49)
#loc38 = loc("CWE401_Memory_Leak__int_malloc_45.c":45:5)
#loc39 = loc("CWE401_Memory_Leak__int_malloc_45.c":46:5)
#loc40 = loc("CWE401_Memory_Leak__int_malloc_45.c":46:13)
#loc41 = loc("CWE401_Memory_Leak__int_malloc_45.c":96:1)
#loc42 = loc("CWE401_Memory_Leak__int_malloc_45.c":100:1)
#loc43 = loc("CWE401_Memory_Leak__int_malloc_45.c":98:5)
#loc44 = loc("CWE401_Memory_Leak__int_malloc_45.c":98:13)
#loc45 = loc("CWE401_Memory_Leak__int_malloc_45.c":99:5)
#loc46 = loc("CWE401_Memory_Leak__int_malloc_45.c":99:13)
#loc47 = loc("CWE401_Memory_Leak__int_malloc_45.c":28:1)
#loc48 = loc("CWE401_Memory_Leak__int_malloc_45.c":33:1)
#loc49 = loc("CWE401_Memory_Leak__int_malloc_45.c":30:5)
#loc50 = loc("CWE401_Memory_Leak__int_malloc_45.c":30:18)
#loc51 = loc("CWE401_Memory_Leak__int_malloc_45.c":23:1)
#loc52 = loc("CWE401_Memory_Leak__int_malloc_45.c":23:14)
#loc53 = loc("CWE401_Memory_Leak__int_malloc_45.c":61:1)
#loc54 = loc("CWE401_Memory_Leak__int_malloc_45.c":72:1)
#loc55 = loc("CWE401_Memory_Leak__int_malloc_45.c":63:5)
#loc56 = loc("CWE401_Memory_Leak__int_malloc_45.c":63:11)
#loc57 = loc("CWE401_Memory_Leak__int_malloc_45.c":64:12)
#loc58 = loc("CWE401_Memory_Leak__int_malloc_45.c":64:5)
#loc59 = loc("CWE401_Memory_Leak__int_malloc_45.c":66:19)
#loc60 = loc("CWE401_Memory_Leak__int_malloc_45.c":66:5)
#loc61 = loc("CWE401_Memory_Leak__int_malloc_45.c":68:15)
#loc62 = loc("CWE401_Memory_Leak__int_malloc_45.c":68:5)
#loc63 = loc("CWE401_Memory_Leak__int_malloc_45.c":68:10)
#loc64 = loc("CWE401_Memory_Leak__int_malloc_45.c":68:11)
#loc65 = loc("CWE401_Memory_Leak__int_malloc_45.c":69:18)
#loc66 = loc("CWE401_Memory_Leak__int_malloc_45.c":69:23)
#loc67 = loc("CWE401_Memory_Leak__int_malloc_45.c":69:24)
#loc68 = loc("CWE401_Memory_Leak__int_malloc_45.c":69:5)
#loc69 = loc("CWE401_Memory_Leak__int_malloc_45.c":70:53)
#loc70 = loc("CWE401_Memory_Leak__int_malloc_45.c":70:5)
#loc71 = loc("CWE401_Memory_Leak__int_malloc_45.c":71:5)
#loc72 = loc("CWE401_Memory_Leak__int_malloc_45.c":71:17)
#loc73 = loc("CWE401_Memory_Leak__int_malloc_45.c":54:1)
#loc74 = loc("CWE401_Memory_Leak__int_malloc_45.c":59:1)
#loc75 = loc("CWE401_Memory_Leak__int_malloc_45.c":56:5)
#loc76 = loc("CWE401_Memory_Leak__int_malloc_45.c":56:18)
#loc77 = loc("CWE401_Memory_Leak__int_malloc_45.c":24:1)
#loc78 = loc("CWE401_Memory_Leak__int_malloc_45.c":24:14)
#loc79 = loc("CWE401_Memory_Leak__int_malloc_45.c":82:1)
#loc80 = loc("CWE401_Memory_Leak__int_malloc_45.c":94:1)
#loc81 = loc("CWE401_Memory_Leak__int_malloc_45.c":84:5)
#loc82 = loc("CWE401_Memory_Leak__int_malloc_45.c":84:11)
#loc83 = loc("CWE401_Memory_Leak__int_malloc_45.c":85:12)
#loc84 = loc("CWE401_Memory_Leak__int_malloc_45.c":85:5)
#loc85 = loc("CWE401_Memory_Leak__int_malloc_45.c":87:19)
#loc86 = loc("CWE401_Memory_Leak__int_malloc_45.c":87:26)
#loc87 = loc("CWE401_Memory_Leak__int_malloc_45.c":87:30)
#loc88 = loc("CWE401_Memory_Leak__int_malloc_45.c":87:40)
#loc89 = loc("CWE401_Memory_Leak__int_malloc_45.c":87:41)
#loc90 = loc("CWE401_Memory_Leak__int_malloc_45.c":87:5)
#loc91 = loc("CWE401_Memory_Leak__int_malloc_45.c":88:5)
#loc92 = loc("CWE401_Memory_Leak__int_malloc_45.c":88:33)
#loc93 = loc("CWE401_Memory_Leak__int_malloc_45.c":88:9)
#loc94 = loc("CWE401_Memory_Leak__int_malloc_45.c":88:17)
#loc95 = loc("CWE401_Memory_Leak__int_malloc_45.c":88:23)
#loc96 = loc("CWE401_Memory_Leak__int_malloc_45.c":88:24)
#loc97 = loc("CWE401_Memory_Leak__int_malloc_45.c":88:30)
#loc98 = loc("CWE401_Memory_Leak__int_malloc_45.c":88:29)
#loc99 = loc("CWE401_Memory_Leak__int_malloc_45.c":90:15)
#loc100 = loc("CWE401_Memory_Leak__int_malloc_45.c":90:5)
#loc101 = loc("CWE401_Memory_Leak__int_malloc_45.c":90:10)
#loc102 = loc("CWE401_Memory_Leak__int_malloc_45.c":90:11)
#loc103 = loc("CWE401_Memory_Leak__int_malloc_45.c":91:18)
#loc104 = loc("CWE401_Memory_Leak__int_malloc_45.c":91:23)
#loc105 = loc("CWE401_Memory_Leak__int_malloc_45.c":91:24)
#loc106 = loc("CWE401_Memory_Leak__int_malloc_45.c":91:5)
#loc107 = loc("CWE401_Memory_Leak__int_malloc_45.c":92:53)
#loc108 = loc("CWE401_Memory_Leak__int_malloc_45.c":92:5)
#loc109 = loc("CWE401_Memory_Leak__int_malloc_45.c":93:5)
#loc110 = loc("CWE401_Memory_Leak__int_malloc_45.c":93:17)
#loc111 = loc("/usr/include/stdlib.h":687:1)
#loc112 = loc("/usr/include/stdlib.h":687:32)
#loc113 = loc("CWE401_Memory_Leak__int_malloc_45.c":75:1)
#loc114 = loc("CWE401_Memory_Leak__int_malloc_45.c":80:1)
#loc115 = loc("CWE401_Memory_Leak__int_malloc_45.c":77:5)
#loc116 = loc("CWE401_Memory_Leak__int_malloc_45.c":77:18)
#loc117 = loc("CWE401_Memory_Leak__int_malloc_45.c":79:5)
#loc118 = loc("CWE401_Memory_Leak__int_malloc_45.c":79:10)
#loc119 = loc(fused[#loc1, #loc2])
#loc120 = loc(fused[#loc3, #loc4])
#loc121 = loc(fused[#loc5, #loc6])
#loc122 = loc(fused[#loc7, #loc8])
#loc123 = loc(fused[#loc9, #loc10])
#loc124 = loc(fused[#loc11, #loc12])
#loc125 = loc(fused[#loc14, #loc13])
#loc126 = loc(fused[#loc17, #loc18])
#loc127 = loc(fused[#loc16, #loc18])
#loc128 = loc(fused[#loc15, #loc19])
#loc129 = loc(fused[#loc20, #loc19])
#loc130 = loc(fused[#loc21, #loc22])
#loc131 = loc(fused[#loc23, #loc24])
#loc132 = loc(fused[#loc25, #loc22])
#loc133 = loc(fused[#loc30, #loc29])
#loc134 = loc(fused[#loc38, #loc37])
#loc135 = loc(fused[#loc39, #loc40])
#loc136 = loc(fused[#loc41, #loc42])
#loc137 = loc(fused[#loc43, #loc44])
#loc138 = loc(fused[#loc45, #loc46])
#loc139 = loc(fused[#loc47, #loc48])
#loc140 = loc(fused[#loc49, #loc50])
#loc141 = loc(fused[#loc51, #loc52])
#loc142 = loc(fused[#loc53, #loc54])
#loc143 = loc(fused[#loc55, #loc56])
#loc144 = loc(fused[#loc58, #loc57])
#loc145 = loc(fused[#loc60, #loc59])
#loc146 = loc(fused[#loc62, #loc61])
#loc147 = loc(fused[#loc70, #loc69])
#loc148 = loc(fused[#loc71, #loc72])
#loc149 = loc(fused[#loc73, #loc74])
#loc150 = loc(fused[#loc75, #loc76])
#loc151 = loc(fused[#loc77, #loc78])
#loc152 = loc(fused[#loc79, #loc80])
#loc153 = loc(fused[#loc81, #loc82])
#loc154 = loc(fused[#loc84, #loc83])
#loc155 = loc(fused[#loc87, #loc88])
#loc156 = loc(fused[#loc86, #loc88])
#loc157 = loc(fused[#loc85, #loc89])
#loc158 = loc(fused[#loc90, #loc89])
#loc159 = loc(fused[#loc91, #loc92])
#loc160 = loc(fused[#loc93, #loc94])
#loc161 = loc(fused[#loc95, #loc92])
#loc162 = loc(fused[#loc100, #loc99])
#loc163 = loc(fused[#loc108, #loc107])
#loc164 = loc(fused[#loc109, #loc110])
#loc165 = loc(fused[#loc111, #loc112])
#loc166 = loc(fused[#loc113, #loc114])
#loc167 = loc(fused[#loc115, #loc116])
