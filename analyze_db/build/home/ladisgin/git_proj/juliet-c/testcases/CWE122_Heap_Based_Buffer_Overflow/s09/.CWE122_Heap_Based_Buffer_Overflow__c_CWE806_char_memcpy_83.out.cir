!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":64:10)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":64:14)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":64:20)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":64:32)
#loc119 = loc(fused[#loc72, #loc73])
#loc120 = loc(fused[#loc74, #loc75])
!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83_bad = !cir.struct<class "CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83::CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83_bad" {!cir.ptr<!s8i>}>
!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83_goodG2B = !cir.struct<class "CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83::CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83_goodG2B" {!cir.ptr<!s8i>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc88)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc89)
  cir.func private @_ZN58CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_8362CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83_badC1EPc(!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83_bad>, !cir.ptr<!s8i>) loc(#loc90)
  cir.func private @_ZN58CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_8362CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83_badD1Ev(!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83_bad>) extra(#fn_attr) loc(#loc91)
  cir.func @_ZN58CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_833badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc93)
    %1 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83_bad, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83_bad>, ["badObject", init] {alignment = 8 : i64} loc(#loc94)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc15)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc16)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc16)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc95)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc96)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc15)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc97)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc98)
    cir.scope {
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
      %11 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc24)
      %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc100)
      cir.if %12 {
        %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc26)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc27)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc28)
        cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc26)
      } loc(#loc101)
    } loc(#loc99)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    cir.call @_ZN58CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_8362CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83_badC1EPc(%1, %9) : (!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83_bad>, !cir.ptr<!s8i>) -> () loc(#loc30)
    cir.call @_ZN58CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_8362CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83_badD1Ev(%1) : (!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83_bad>) -> () extra(#fn_attr) loc(#loc91)
    cir.return loc(#loc10)
  } loc(#loc92)
  cir.func private @_ZN58CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_8366CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83_goodG2BC1EPc(!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83_goodG2B>, !cir.ptr<!s8i>) loc(#loc102)
  cir.func private @_ZN58CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_8366CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83_goodG2BD1Ev(!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83_goodG2B>) extra(#fn_attr) loc(#loc103)
  cir.func internal private @_ZN58CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc105)
    %1 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83_goodG2B, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83_goodG2B>, ["goodG2BObject", init] {alignment = 8 : i64} loc(#loc106)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc41)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc42)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc42)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc107)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc108)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc41)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc109)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc110)
    cir.scope {
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
      %11 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc50)
      %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc112)
      cir.if %12 {
        %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc52)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc53)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc54)
        cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc52)
      } loc(#loc113)
    } loc(#loc111)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    cir.call @_ZN58CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_8366CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83_goodG2BC1EPc(%1, %9) : (!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83_goodG2B>, !cir.ptr<!s8i>) -> () loc(#loc56)
    cir.call @_ZN58CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_8366CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83_goodG2BD1Ev(%1) : (!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83_goodG2B>) -> () extra(#fn_attr) loc(#loc103)
    cir.return loc(#loc36)
  } loc(#loc104)
  cir.func @_ZN58CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_834goodEv() extra(#fn_attr1) {
    cir.call @_ZN58CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83L7goodG2BEv() : () -> () loc(#loc59)
    cir.return loc(#loc58)
  } loc(#loc114)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc115)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc116)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc117)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc69)
  cir.func @main(%arg0: !s32i loc(fused[#loc72, #loc73]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc74, #loc75])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc119)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc120)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc71)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc76)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc76)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc77)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc78)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc78)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc79)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc66)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    cir.call @_ZN58CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_834goodEv() : () -> () loc(#loc81)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc67)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc68)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    cir.call @_ZN58CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_833badEv() : () -> () loc(#loc84)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc69)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc86)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc121)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc121)
    cir.return %15 : !s32i loc(#loc121)
  } loc(#loc118)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("./CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83.h":29:5)
#loc6 = loc("./CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83.h":29:83)
#loc7 = loc("./CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83.h":30:5)
#loc8 = loc("./CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83.h":30:69)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":25:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":31:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":27:5)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":27:12)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":30:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":30:82)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":28:20)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":28:27)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":28:31)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":28:42)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":28:43)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":28:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":29:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":29:33)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":29:9)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":29:17)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":29:23)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":29:24)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":29:30)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":29:29)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":30:78)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":30:68)
#loc31 = loc("./CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83.h":43:5)
#loc32 = loc("./CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83.h":43:87)
#loc33 = loc("./CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83.h":44:5)
#loc34 = loc("./CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83.h":44:73)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":38:1)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":44:1)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":40:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":40:12)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":43:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":43:90)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":41:20)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":41:27)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":41:31)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":41:42)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":41:43)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":41:5)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":42:5)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":42:33)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":42:9)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":42:17)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":42:23)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":42:24)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":42:30)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":42:29)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":43:86)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":43:72)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":46:1)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":49:1)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":48:5)
#loc60 = loc("/usr/include/stdlib.h":575:1)
#loc61 = loc("/usr/include/stdlib.h":575:41)
#loc62 = loc("/usr/include/time.h":76:1)
#loc63 = loc("/usr/include/time.h":76:38)
#loc64 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc65 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":69:15)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":71:15)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":74:15)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":76:15)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":64:1)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":79:1)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":65:1)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":67:27)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":67:22)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":67:5)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":69:5)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":70:5)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":71:5)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":74:5)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":75:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":76:5)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":78:12)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_memcpy_83a.cpp":78:5)
#loc88 = loc(fused[#loc1, #loc2])
#loc89 = loc(fused[#loc3, #loc4])
#loc90 = loc(fused[#loc5, #loc6])
#loc91 = loc(fused[#loc7, #loc8])
#loc92 = loc(fused[#loc9, #loc10])
#loc93 = loc(fused[#loc11, #loc12])
#loc94 = loc(fused[#loc13, #loc14])
#loc95 = loc(fused[#loc17, #loc18])
#loc96 = loc(fused[#loc16, #loc18])
#loc97 = loc(fused[#loc15, #loc19])
#loc98 = loc(fused[#loc20, #loc19])
#loc99 = loc(fused[#loc21, #loc22])
#loc100 = loc(fused[#loc23, #loc24])
#loc101 = loc(fused[#loc25, #loc22])
#loc102 = loc(fused[#loc31, #loc32])
#loc103 = loc(fused[#loc33, #loc34])
#loc104 = loc(fused[#loc35, #loc36])
#loc105 = loc(fused[#loc37, #loc38])
#loc106 = loc(fused[#loc39, #loc40])
#loc107 = loc(fused[#loc43, #loc44])
#loc108 = loc(fused[#loc42, #loc44])
#loc109 = loc(fused[#loc41, #loc45])
#loc110 = loc(fused[#loc46, #loc45])
#loc111 = loc(fused[#loc47, #loc48])
#loc112 = loc(fused[#loc49, #loc50])
#loc113 = loc(fused[#loc51, #loc48])
#loc114 = loc(fused[#loc57, #loc58])
#loc115 = loc(fused[#loc60, #loc61])
#loc116 = loc(fused[#loc62, #loc63])
#loc117 = loc(fused[#loc64, #loc65])
#loc118 = loc(fused[#loc70, #loc71])
#loc121 = loc(fused[#loc87, #loc86])
