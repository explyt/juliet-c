!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc59 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":91:10)
#loc60 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":91:14)
#loc61 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":91:20)
#loc62 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":91:32)
#loc140 = loc(fused[#loc59, #loc60])
#loc141 = loc(fused[#loc61, #loc62])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__negative_memmove_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc119)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__negative_memmove_18_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc121)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc122)
    %2 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc123)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc11)
    %4 = cir.cast(integral, %3 : !s32i), !s16i loc(#loc11)
    cir.store %4, %2 : !s16i, !cir.ptr<!s16i> loc(#loc124)
    cir.br ^bb1 loc(#loc125)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc16)
    %7 = cir.cast(integral, %6 : !s32i), !s16i loc(#loc16)
    cir.store %7, %2 : !s16i, !cir.ptr<!s16i> loc(#loc126)
    cir.br ^bb2 loc(#loc127)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc122)
    cir.store %8, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc122)
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc20)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc20)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc21)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc22)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc22)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc22)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc128)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc26)
    %18 = cir.const #cir.int<100> : !s32i loc(#loc27)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc27)
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc29)
    %22 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc29)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc129)
    cir.br ^bb3 loc(#loc130)
  ^bb3:  // pred: ^bb2
    %23 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc32)
    %24 = cir.cast(integral, %23 : !s16i), !s32i loc(#loc32)
    %25 = cir.const #cir.int<100> : !s32i loc(#loc33)
    %26 = cir.cmp(lt, %24, %25) : !s32i, !cir.bool loc(#loc131)
    cir.brcond %26 ^bb4, ^bb5 loc(#loc132)
  ^bb4:  // pred: ^bb3
    %27 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc35)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc35)
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc36)
    %31 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc37)
    %32 = cir.cast(integral, %31 : !s16i), !u64i loc(#loc37)
    cir.libc.memmove %32 bytes from %30 to %28 : !cir.ptr<!void>, !u64i loc(#loc133)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %34 = cir.cast(integral, %33 : !s32i), !s8i loc(#loc40)
    %35 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc41)
    %36 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc42)
    %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !s16i), !cir.ptr<!s8i> loc(#loc42)
    cir.store %34, %37 : !s8i, !cir.ptr<!s8i> loc(#loc134)
    cir.br ^bb5 loc(#loc31)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc31)
  ^bb6:  // pred: ^bb5
    %38 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc44)
    cir.br ^bb7 loc(#loc19)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc4)
  } loc(#loc120)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__negative_memmove_18_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc136)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    cir.return loc(#loc46)
  } loc(#loc135)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc137)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc56)
  cir.func @main(%arg0: !s32i loc(fused[#loc59, #loc60]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc61, #loc62])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc140)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc141)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc58)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc63)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc63)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc64)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc65)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc65)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc66)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc53)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %8 = cir.get_global @CWE194_Unexpected_Sign_Extension__negative_memmove_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc142)
    cir.call @CWE194_Unexpected_Sign_Extension__negative_memmove_18_good() : () -> () loc(#loc68)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc54)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc55)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %13 = cir.get_global @CWE194_Unexpected_Sign_Extension__negative_memmove_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc143)
    cir.call @CWE194_Unexpected_Sign_Extension__negative_memmove_18_bad() : () -> () loc(#loc72)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc56)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc75)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    cir.return %17 : !s32i loc(#loc144)
  } loc(#loc139)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc146)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc147)
    %2 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc148)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc85)
    %4 = cir.cast(integral, %3 : !s32i), !s16i loc(#loc85)
    cir.store %4, %2 : !s16i, !cir.ptr<!s16i> loc(#loc149)
    cir.br ^bb1 loc(#loc150)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<100> : !s32i loc(#loc89)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc90)
    %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc89)
    %8 = cir.cast(integral, %7 : !s32i), !s16i loc(#loc89)
    cir.store %8, %2 : !s16i, !cir.ptr<!s16i> loc(#loc151)
    cir.br ^bb2 loc(#loc152)
  ^bb2:  // pred: ^bb1
    %9 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc147)
    cir.store %9, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc147)
    %10 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc94)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc94)
    %12 = cir.const #cir.int<65> : !s32i loc(#loc95)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc96)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc96)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc96)
    cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc153)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc100)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc100)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc101)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc101)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc103)
    %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc103)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc154)
    cir.br ^bb3 loc(#loc155)
  ^bb3:  // pred: ^bb2
    %24 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc106)
    %25 = cir.cast(integral, %24 : !s16i), !s32i loc(#loc106)
    %26 = cir.const #cir.int<100> : !s32i loc(#loc107)
    %27 = cir.cmp(lt, %25, %26) : !s32i, !cir.bool loc(#loc156)
    cir.brcond %27 ^bb4, ^bb5 loc(#loc157)
  ^bb4:  // pred: ^bb3
    %28 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc109)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc109)
    %30 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc110)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc110)
    %32 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc111)
    %33 = cir.cast(integral, %32 : !s16i), !u64i loc(#loc111)
    cir.libc.memmove %33 bytes from %31 to %29 : !cir.ptr<!void>, !u64i loc(#loc158)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc114)
    %36 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc115)
    %37 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc116)
    %38 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %36 : !s16i), !cir.ptr<!s8i> loc(#loc116)
    cir.store %35, %38 : !s8i, !cir.ptr<!s8i> loc(#loc159)
    cir.br ^bb5 loc(#loc105)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc105)
  ^bb6:  // pred: ^bb5
    %39 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc117)
    cir.call @printLine(%39) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    cir.br ^bb7 loc(#loc93)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc78)
  } loc(#loc145)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":21:1)
#loc4 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":44:1)
#loc5 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":31:9)
#loc6 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":31:24)
#loc7 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":32:9)
#loc8 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":32:26)
#loc9 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":23:5)
#loc10 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":23:11)
#loc11 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":25:12)
#loc12 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":25:5)
#loc13 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":26:5)
#loc14 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":26:10)
#loc15 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":29:13)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":29:12)
#loc17 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":29:5)
#loc18 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":30:5)
#loc19 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":43:5)
#loc20 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":33:16)
#loc21 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":33:24)
#loc22 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":33:29)
#loc23 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":33:33)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":33:9)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":33:34)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":34:25)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":34:16)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":34:20)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":34:9)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":35:9)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":41:9)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":35:13)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":35:20)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":36:9)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":39:21)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":39:27)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":39:35)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":39:13)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":39:39)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":40:26)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":40:18)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":40:13)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":42:19)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":42:9)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":76:1)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":79:1)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":78:5)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":78:13)
#loc49 = loc("/usr/include/stdlib.h":575:1)
#loc50 = loc("/usr/include/stdlib.h":575:41)
#loc51 = loc("/usr/include/time.h":76:1)
#loc52 = loc("/usr/include/time.h":76:38)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":96:15)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":98:15)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":101:15)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":103:15)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":91:1)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":106:1)
#loc63 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":92:1)
#loc64 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":94:27)
#loc65 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":94:22)
#loc66 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":94:5)
#loc67 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":96:5)
#loc68 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":97:5)
#loc69 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":97:64)
#loc70 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":98:5)
#loc71 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":101:5)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":102:5)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":102:63)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":103:5)
#loc75 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":105:12)
#loc76 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":105:5)
#loc77 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":51:1)
#loc78 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":74:1)
#loc79 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":61:9)
#loc80 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":61:24)
#loc81 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":62:9)
#loc82 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":62:26)
#loc83 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":53:5)
#loc84 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":53:11)
#loc85 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":55:12)
#loc86 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":55:5)
#loc87 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":56:5)
#loc88 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":56:10)
#loc89 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":59:12)
#loc90 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":59:16)
#loc91 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":59:5)
#loc92 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":60:5)
#loc93 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":73:5)
#loc94 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":63:16)
#loc95 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":63:24)
#loc96 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":63:29)
#loc97 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":63:33)
#loc98 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":63:9)
#loc99 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":63:34)
#loc100 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":64:25)
#loc101 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":64:16)
#loc102 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":64:20)
#loc103 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":64:9)
#loc104 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":65:9)
#loc105 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":71:9)
#loc106 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":65:13)
#loc107 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":65:20)
#loc108 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":66:9)
#loc109 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":69:21)
#loc110 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":69:27)
#loc111 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":69:35)
#loc112 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":69:13)
#loc113 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":69:39)
#loc114 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":70:26)
#loc115 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":70:18)
#loc116 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":70:13)
#loc117 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":72:19)
#loc118 = loc("CWE194_Unexpected_Sign_Extension__negative_memmove_18.c":72:9)
#loc119 = loc(fused[#loc1, #loc2])
#loc120 = loc(fused[#loc3, #loc4])
#loc121 = loc(fused[#loc5, #loc6])
#loc122 = loc(fused[#loc7, #loc8])
#loc123 = loc(fused[#loc9, #loc10])
#loc124 = loc(fused[#loc12, #loc11])
#loc125 = loc(fused[#loc13, #loc14])
#loc126 = loc(fused[#loc17, #loc15])
#loc127 = loc(fused[#loc18, #loc19])
#loc128 = loc(fused[#loc24, #loc25])
#loc129 = loc(fused[#loc29, #loc26])
#loc130 = loc(fused[#loc30, #loc31])
#loc131 = loc(fused[#loc32, #loc33])
#loc132 = loc(fused[#loc34, #loc31])
#loc133 = loc(fused[#loc38, #loc39])
#loc134 = loc(fused[#loc42, #loc40])
#loc135 = loc(fused[#loc45, #loc46])
#loc136 = loc(fused[#loc47, #loc48])
#loc137 = loc(fused[#loc49, #loc50])
#loc138 = loc(fused[#loc51, #loc52])
#loc139 = loc(fused[#loc57, #loc58])
#loc142 = loc(fused[#loc68, #loc69])
#loc143 = loc(fused[#loc72, #loc73])
#loc144 = loc(fused[#loc76, #loc75])
#loc145 = loc(fused[#loc77, #loc78])
#loc146 = loc(fused[#loc79, #loc80])
#loc147 = loc(fused[#loc81, #loc82])
#loc148 = loc(fused[#loc83, #loc84])
#loc149 = loc(fused[#loc86, #loc85])
#loc150 = loc(fused[#loc87, #loc88])
#loc151 = loc(fused[#loc91, #loc90])
#loc152 = loc(fused[#loc92, #loc93])
#loc153 = loc(fused[#loc98, #loc99])
#loc154 = loc(fused[#loc103, #loc100])
#loc155 = loc(fused[#loc104, #loc105])
#loc156 = loc(fused[#loc106, #loc107])
#loc157 = loc(fused[#loc108, #loc105])
#loc158 = loc(fused[#loc112, #loc113])
#loc159 = loc(fused[#loc116, #loc114])
