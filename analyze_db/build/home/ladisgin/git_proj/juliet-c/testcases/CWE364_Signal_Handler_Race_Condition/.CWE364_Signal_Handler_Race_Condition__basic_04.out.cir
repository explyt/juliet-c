!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc15 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":28:23)
#loc16 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":28:27)
#loc95 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":200:10)
#loc96 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":200:14)
#loc97 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":200:20)
#loc98 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":200:32)
#loc116 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":36:24)
#loc117 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":36:28)
!ty__structSigAtomic = !cir.struct<struct "_structSigAtomic" {!s32i} #cir.record.decl.ast>
#loc250 = loc(fused[#loc15, #loc16])
#loc283 = loc(fused[#loc95, #loc96])
#loc284 = loc(fused[#loc97, #loc98])
#loc289 = loc(fused[#loc116, #loc117])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE364_Signal_Handler_Race_Condition/CWE364_Signal_Handler_Race_Condition__basic_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global external dsolocal @CWE364_Signal_Handler_Race_Condition__basic_04StructSigAtomicBad = #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> {alignment = 8 : i64} loc(#loc243)
  cir.global external dsolocal @CWE364_Signal_Handler_Race_Condition__basic_04StructSigAtomicGood = #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> {alignment = 8 : i64} loc(#loc244)
  cir.func private @signal(!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc245)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc246)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc247)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc248)
  cir.func internal private @helperBad(%arg0: !s32i loc(fused[#loc15, #loc16])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["sig", init] {alignment = 4 : i64} loc(#loc250)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc17)
    cir.scope {
      %1 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_04StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc243)
      %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc20)
      %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc21)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc21)
      %5 = cir.cmp(ne, %2, %4) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc252)
      cir.if %5 {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc23)
        %7 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_04StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc243)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc24)
        %9 = cir.get_member %8[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
        cir.store %6, %9 : !s32i, !cir.ptr<!s32i> loc(#loc254)
      } loc(#loc253)
    } loc(#loc251)
    cir.return loc(#loc14)
  } loc(#loc249)
  cir.func no_proto @CWE364_Signal_Handler_Race_Condition__basic_04_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc30)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc30)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc259)
          %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc35)
          cir.store %3, %2 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc259)
          %4 = cir.const #cir.int<2> : !s32i loc(#loc36)
          %5 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc37)
          %6 = cir.call @signal(%4, %5) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc38)
          cir.scope {
            %20 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_04StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc243)
            %21 = cir.load %20 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc41)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc42)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc42)
            %24 = cir.cmp(ne, %21, %23) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc261)
            cir.if %24 {
              %25 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc44)
              %26 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_04StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc243)
              %27 = cir.load %26 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc45)
              %28 = cir.cast(bitcast, %27 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc45)
              cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc44)
              %29 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc46)
              %30 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_04StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc243)
              cir.store %29, %30 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc263)
            } loc(#loc262)
          } loc(#loc260)
          %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc48)
          %8 = cir.const #cir.int<4> : !u64i loc(#loc264)
          %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc48)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc265)
          cir.store %10, %2 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc266)
          cir.scope {
            %20 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc55)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc56)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc56)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc268)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc58)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc59)
              %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc60)
              cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc58)
            } loc(#loc269)
          } loc(#loc267)
          %11 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc61)
          %12 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_04StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc243)
          cir.store %11, %12 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc270)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc63)
          %14 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_04StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc243)
          %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc64)
          %16 = cir.get_member %15[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
          cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc271)
          %17 = cir.const #cir.int<2> : !s32i loc(#loc65)
          %18 = cir.get_global @helperBad : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc66)
          %19 = cir.call @signal(%17, %18) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc67)
          cir.scope {
            %20 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_04StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc243)
            %21 = cir.load %20 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc70)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc71)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc71)
            %24 = cir.cmp(ne, %21, %23) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc273)
            cir.if %24 {
              %25 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc73)
              %26 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_04StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc243)
              %27 = cir.load %26 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc74)
              %28 = cir.cast(bitcast, %27 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc74)
              cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc73)
              %29 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc75)
              %30 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_04StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc243)
              cir.store %29, %30 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc275)
            } loc(#loc274)
          } loc(#loc272)
        } loc(#loc258)
      } loc(#loc257)
    } loc(#loc256)
    cir.return loc(#loc27)
  } loc(#loc255)
  cir.func no_proto @CWE364_Signal_Handler_Race_Condition__basic_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc277)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc79)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc278)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc81)
    cir.return loc(#loc78)
  } loc(#loc276)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc279)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc280)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc281)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc89)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc90)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc91)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc92)
  cir.func @main(%arg0: !s32i loc(fused[#loc95, #loc96]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc97, #loc98])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc283)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc284)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc94)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc99)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc99)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc100)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc101)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc101)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc102)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc89)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc89)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc103)
    %8 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_04_good : !cir.ptr<!cir.func<!void ()>> loc(#loc285)
    cir.call @CWE364_Signal_Handler_Race_Condition__basic_04_good() : () -> () loc(#loc104)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc90)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc90)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc106)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc91)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc91)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    %13 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_04_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc286)
    cir.call @CWE364_Signal_Handler_Race_Condition__basic_04_bad() : () -> () loc(#loc108)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc92)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc92)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc110)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc111)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc287)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc287)
    cir.return %17 : !s32i loc(#loc287)
  } loc(#loc282)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc113)
  cir.func internal private @helperGood(%arg0: !s32i loc(fused[#loc116, #loc117])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["sig", init] {alignment = 4 : i64} loc(#loc289)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc118)
    cir.scope {
      %1 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_04StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc244)
      %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc121)
      %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc122)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc122)
      %5 = cir.cmp(ne, %2, %4) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc291)
      cir.if %5 {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc124)
        %7 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_04StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc244)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc125)
        %9 = cir.get_member %8[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
        cir.store %6, %9 : !s32i, !cir.ptr<!s32i> loc(#loc293)
      } loc(#loc292)
    } loc(#loc290)
    cir.return loc(#loc115)
  } loc(#loc288)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<0> : !s32i loc(#loc130)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc130)
      cir.if %1 {
        %2 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc113)
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc113)
        cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc134)
      } else {
        cir.scope {
          %2 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc298)
          %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc138)
          cir.store %3, %2 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc298)
          %4 = cir.const #cir.int<2> : !s32i loc(#loc139)
          %5 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc140)
          %6 = cir.call @signal(%4, %5) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc141)
          cir.scope {
            %26 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_04StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc244)
            %27 = cir.load %26 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc144)
            %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc145)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc145)
            %30 = cir.cmp(ne, %27, %29) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc300)
            cir.if %30 {
              %31 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc147)
              %32 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_04StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc244)
              %33 = cir.load %32 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc148)
              %34 = cir.cast(bitcast, %33 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc148)
              cir.call @free(%34) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc147)
              %35 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc149)
              %36 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_04StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc244)
              cir.store %35, %36 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc302)
            } loc(#loc301)
          } loc(#loc299)
          %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc151)
          %8 = cir.const #cir.int<4> : !u64i loc(#loc303)
          %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc151)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc304)
          cir.store %10, %2 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc305)
          cir.scope {
            %26 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc158)
            %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc159)
            %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc159)
            %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc307)
            cir.if %29 {
              %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc161)
              %31 = cir.const #cir.int<1> : !s32i loc(#loc162)
              %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc163)
              cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc161)
            } loc(#loc308)
          } loc(#loc306)
          %11 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc164)
          %12 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_04StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc244)
          cir.store %11, %12 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc309)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc166)
          %14 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_04StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc244)
          %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc167)
          %16 = cir.get_member %15[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
          cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc310)
          %17 = cir.const #cir.int<2> : !s32i loc(#loc168)
          %18 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc169)
          %19 = cir.call @signal(%17, %18) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc170)
          %20 = cir.const #cir.int<2> : !s32i loc(#loc171)
          %21 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc172)
          %22 = cir.call @signal(%20, %21) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc173)
          cir.scope {
            %26 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_04StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc244)
            %27 = cir.load %26 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc176)
            %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc177)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc177)
            %30 = cir.cmp(ne, %27, %29) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc312)
            cir.if %30 {
              %31 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc179)
              %32 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_04StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc244)
              %33 = cir.load %32 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc180)
              %34 = cir.cast(bitcast, %33 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc180)
              cir.call @free(%34) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc179)
              %35 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc181)
              %36 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_04StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc244)
              cir.store %35, %36 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc314)
            } loc(#loc313)
          } loc(#loc311)
          %23 = cir.const #cir.int<2> : !s32i loc(#loc183)
          %24 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc184)
          %25 = cir.call @signal(%23, %24) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc185)
        } loc(#loc297)
      } loc(#loc296)
    } loc(#loc295)
    cir.return loc(#loc127)
  } loc(#loc294)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc190)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc190)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc319)
          %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc195)
          cir.store %3, %2 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc319)
          %4 = cir.const #cir.int<2> : !s32i loc(#loc196)
          %5 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc197)
          %6 = cir.call @signal(%4, %5) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc198)
          cir.scope {
            %26 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_04StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc244)
            %27 = cir.load %26 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc201)
            %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc202)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc202)
            %30 = cir.cmp(ne, %27, %29) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc321)
            cir.if %30 {
              %31 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc204)
              %32 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_04StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc244)
              %33 = cir.load %32 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc205)
              %34 = cir.cast(bitcast, %33 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc205)
              cir.call @free(%34) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc204)
              %35 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc206)
              %36 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_04StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc244)
              cir.store %35, %36 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc323)
            } loc(#loc322)
          } loc(#loc320)
          %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc208)
          %8 = cir.const #cir.int<4> : !u64i loc(#loc324)
          %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc208)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc325)
          cir.store %10, %2 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc326)
          cir.scope {
            %26 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc215)
            %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc216)
            %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc216)
            %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc328)
            cir.if %29 {
              %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc218)
              %31 = cir.const #cir.int<1> : !s32i loc(#loc219)
              %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc220)
              cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc218)
            } loc(#loc329)
          } loc(#loc327)
          %11 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc221)
          %12 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_04StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc244)
          cir.store %11, %12 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc330)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc223)
          %14 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_04StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc244)
          %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc224)
          %16 = cir.get_member %15[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
          cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc331)
          %17 = cir.const #cir.int<2> : !s32i loc(#loc225)
          %18 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc226)
          %19 = cir.call @signal(%17, %18) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc227)
          %20 = cir.const #cir.int<2> : !s32i loc(#loc228)
          %21 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc229)
          %22 = cir.call @signal(%20, %21) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc230)
          cir.scope {
            %26 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_04StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc244)
            %27 = cir.load %26 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc233)
            %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc234)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc234)
            %30 = cir.cmp(ne, %27, %29) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc333)
            cir.if %30 {
              %31 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc236)
              %32 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_04StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc244)
              %33 = cir.load %32 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc237)
              %34 = cir.cast(bitcast, %33 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc237)
              cir.call @free(%34) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc236)
              %35 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc238)
              %36 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_04StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc244)
              cir.store %35, %36 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc335)
            } loc(#loc334)
          } loc(#loc332)
          %23 = cir.const #cir.int<2> : !s32i loc(#loc240)
          %24 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc241)
          %25 = cir.call @signal(%23, %24) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc242)
        } loc(#loc318)
      } loc(#loc317)
    } loc(#loc316)
    cir.return loc(#loc187)
  } loc(#loc315)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE364_Signal_Handler_Race_Condition/CWE364_Signal_Handler_Race_Condition__basic_04.c":0:0)
#loc1 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":25:1)
#loc2 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":25:85)
#loc3 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":26:1)
#loc4 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":26:86)
#loc5 = loc("/usr/include/signal.h":88:1)
#loc6 = loc("/usr/include/signal.h":89:6)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("/usr/include/stdlib.h":672:1)
#loc10 = loc("/usr/include/stdlib.h":672:45)
#loc11 = loc("/usr/include/stdlib.h":756:1)
#loc12 = loc("/usr/include/stdlib.h":756:70)
#loc13 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":28:1)
#loc14 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":34:1)
#loc17 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":29:1)
#loc18 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":30:5)
#loc19 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":33:5)
#loc20 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":30:9)
#loc21 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":30:77)
#loc22 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":31:5)
#loc23 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":32:81)
#loc24 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":32:9)
#loc25 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":22:18)
#loc26 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":52:1)
#loc27 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":92:1)
#loc28 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":54:5)
#loc29 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":91:5)
#loc30 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":54:8)
#loc31 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":55:5)
#loc32 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":56:9)
#loc33 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":90:9)
#loc34 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":57:13)
#loc35 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":57:49)
#loc36 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":58:20)
#loc37 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":58:28)
#loc38 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":58:13)
#loc39 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":59:13)
#loc40 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":63:13)
#loc41 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":59:17)
#loc42 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":59:85)
#loc43 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":60:13)
#loc44 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":61:17)
#loc45 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":61:22)
#loc46 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":62:84)
#loc47 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":62:17)
#loc48 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":64:50)
#loc49 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":64:57)
#loc50 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":64:79)
#loc51 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":64:80)
#loc52 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":64:13)
#loc53 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":65:13)
#loc54 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":65:53)
#loc55 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":65:17)
#loc56 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":65:37)
#loc57 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":65:43)
#loc58 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":65:44)
#loc59 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":65:50)
#loc60 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":65:49)
#loc61 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":66:80)
#loc62 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":66:13)
#loc63 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":67:85)
#loc64 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":67:13)
#loc65 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":75:20)
#loc66 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":75:28)
#loc67 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":75:13)
#loc68 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":85:13)
#loc69 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":89:13)
#loc70 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":85:17)
#loc71 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":85:85)
#loc72 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":86:13)
#loc73 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":87:17)
#loc74 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":87:22)
#loc75 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":88:84)
#loc76 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":88:17)
#loc77 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":185:1)
#loc78 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":189:1)
#loc79 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":187:5)
#loc80 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":187:11)
#loc81 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":188:5)
#loc82 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":188:11)
#loc83 = loc("/usr/include/stdlib.h":575:1)
#loc84 = loc("/usr/include/stdlib.h":575:41)
#loc85 = loc("/usr/include/time.h":76:1)
#loc86 = loc("/usr/include/time.h":76:38)
#loc87 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc88 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc89 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":205:15)
#loc90 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":207:15)
#loc91 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":210:15)
#loc92 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":212:15)
#loc93 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":200:1)
#loc94 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":215:1)
#loc99 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":201:1)
#loc100 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":203:27)
#loc101 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":203:22)
#loc102 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":203:5)
#loc103 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":205:5)
#loc104 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":206:5)
#loc105 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":206:57)
#loc106 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":207:5)
#loc107 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":210:5)
#loc108 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":211:5)
#loc109 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":211:56)
#loc110 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":212:5)
#loc111 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":214:12)
#loc112 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":214:5)
#loc113 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":104:19)
#loc114 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":36:1)
#loc115 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":42:1)
#loc118 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":37:1)
#loc119 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":38:5)
#loc120 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":41:5)
#loc121 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":38:9)
#loc122 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":38:78)
#loc123 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":39:5)
#loc124 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":40:82)
#loc125 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":40:9)
#loc126 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":99:1)
#loc127 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":142:1)
#loc128 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":101:5)
#loc129 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":141:5)
#loc130 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":101:8)
#loc131 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":102:5)
#loc132 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":105:5)
#loc133 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":107:5)
#loc134 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":104:9)
#loc135 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":108:9)
#loc136 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":140:9)
#loc137 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":109:13)
#loc138 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":109:49)
#loc139 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":110:20)
#loc140 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":110:28)
#loc141 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":110:13)
#loc142 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":111:13)
#loc143 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":115:13)
#loc144 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":111:17)
#loc145 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":111:86)
#loc146 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":112:13)
#loc147 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":113:17)
#loc148 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":113:22)
#loc149 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":114:85)
#loc150 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":114:17)
#loc151 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":116:50)
#loc152 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":116:57)
#loc153 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":116:79)
#loc154 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":116:80)
#loc155 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":116:13)
#loc156 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":117:13)
#loc157 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":117:53)
#loc158 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":117:17)
#loc159 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":117:37)
#loc160 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":117:43)
#loc161 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":117:44)
#loc162 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":117:50)
#loc163 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":117:49)
#loc164 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":118:81)
#loc165 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":118:13)
#loc166 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":119:86)
#loc167 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":119:13)
#loc168 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":127:20)
#loc169 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":127:28)
#loc170 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":127:13)
#loc171 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":133:20)
#loc172 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":133:28)
#loc173 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":133:13)
#loc174 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":134:13)
#loc175 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":138:13)
#loc176 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":134:17)
#loc177 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":134:86)
#loc178 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":135:13)
#loc179 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":136:17)
#loc180 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":136:22)
#loc181 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":137:85)
#loc182 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":137:17)
#loc183 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":139:20)
#loc184 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":139:28)
#loc185 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":139:13)
#loc186 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":145:1)
#loc187 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":183:1)
#loc188 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":147:5)
#loc189 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":182:5)
#loc190 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":147:8)
#loc191 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":148:5)
#loc192 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":149:9)
#loc193 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":181:9)
#loc194 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":150:13)
#loc195 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":150:49)
#loc196 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":151:20)
#loc197 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":151:28)
#loc198 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":151:13)
#loc199 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":152:13)
#loc200 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":156:13)
#loc201 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":152:17)
#loc202 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":152:86)
#loc203 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":153:13)
#loc204 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":154:17)
#loc205 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":154:22)
#loc206 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":155:85)
#loc207 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":155:17)
#loc208 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":157:50)
#loc209 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":157:57)
#loc210 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":157:79)
#loc211 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":157:80)
#loc212 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":157:13)
#loc213 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":158:13)
#loc214 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":158:53)
#loc215 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":158:17)
#loc216 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":158:37)
#loc217 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":158:43)
#loc218 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":158:44)
#loc219 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":158:50)
#loc220 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":158:49)
#loc221 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":159:81)
#loc222 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":159:13)
#loc223 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":160:86)
#loc224 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":160:13)
#loc225 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":168:20)
#loc226 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":168:28)
#loc227 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":168:13)
#loc228 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":174:20)
#loc229 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":174:28)
#loc230 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":174:13)
#loc231 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":175:13)
#loc232 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":179:13)
#loc233 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":175:17)
#loc234 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":175:86)
#loc235 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":176:13)
#loc236 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":177:17)
#loc237 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":177:22)
#loc238 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":178:85)
#loc239 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":178:17)
#loc240 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":180:20)
#loc241 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":180:28)
#loc242 = loc("CWE364_Signal_Handler_Race_Condition__basic_04.c":180:13)
#loc243 = loc(fused[#loc1, #loc2])
#loc244 = loc(fused[#loc3, #loc4])
#loc245 = loc(fused[#loc5, #loc6])
#loc246 = loc(fused[#loc7, #loc8])
#loc247 = loc(fused[#loc9, #loc10])
#loc248 = loc(fused[#loc11, #loc12])
#loc249 = loc(fused[#loc13, #loc14])
#loc251 = loc(fused[#loc18, #loc19])
#loc252 = loc(fused[#loc20, #loc21])
#loc253 = loc(fused[#loc22, #loc19])
#loc254 = loc(fused[#loc24, #loc23])
#loc255 = loc(fused[#loc26, #loc27])
#loc256 = loc(fused[#loc28, #loc29])
#loc257 = loc(fused[#loc31, #loc29])
#loc258 = loc(fused[#loc32, #loc33])
#loc259 = loc(fused[#loc34, #loc35])
#loc260 = loc(fused[#loc39, #loc40])
#loc261 = loc(fused[#loc41, #loc42])
#loc262 = loc(fused[#loc43, #loc40])
#loc263 = loc(fused[#loc47, #loc46])
#loc264 = loc(fused[#loc49, #loc50])
#loc265 = loc(fused[#loc48, #loc51])
#loc266 = loc(fused[#loc52, #loc51])
#loc267 = loc(fused[#loc53, #loc54])
#loc268 = loc(fused[#loc55, #loc56])
#loc269 = loc(fused[#loc57, #loc54])
#loc270 = loc(fused[#loc62, #loc61])
#loc271 = loc(fused[#loc64, #loc63])
#loc272 = loc(fused[#loc68, #loc69])
#loc273 = loc(fused[#loc70, #loc71])
#loc274 = loc(fused[#loc72, #loc69])
#loc275 = loc(fused[#loc76, #loc75])
#loc276 = loc(fused[#loc77, #loc78])
#loc277 = loc(fused[#loc79, #loc80])
#loc278 = loc(fused[#loc81, #loc82])
#loc279 = loc(fused[#loc83, #loc84])
#loc280 = loc(fused[#loc85, #loc86])
#loc281 = loc(fused[#loc87, #loc88])
#loc282 = loc(fused[#loc93, #loc94])
#loc285 = loc(fused[#loc104, #loc105])
#loc286 = loc(fused[#loc108, #loc109])
#loc287 = loc(fused[#loc112, #loc111])
#loc288 = loc(fused[#loc114, #loc115])
#loc290 = loc(fused[#loc119, #loc120])
#loc291 = loc(fused[#loc121, #loc122])
#loc292 = loc(fused[#loc123, #loc120])
#loc293 = loc(fused[#loc125, #loc124])
#loc294 = loc(fused[#loc126, #loc127])
#loc295 = loc(fused[#loc128, #loc129])
#loc296 = loc(fused[#loc131, #loc132, #loc133, #loc129])
#loc297 = loc(fused[#loc135, #loc136])
#loc298 = loc(fused[#loc137, #loc138])
#loc299 = loc(fused[#loc142, #loc143])
#loc300 = loc(fused[#loc144, #loc145])
#loc301 = loc(fused[#loc146, #loc143])
#loc302 = loc(fused[#loc150, #loc149])
#loc303 = loc(fused[#loc152, #loc153])
#loc304 = loc(fused[#loc151, #loc154])
#loc305 = loc(fused[#loc155, #loc154])
#loc306 = loc(fused[#loc156, #loc157])
#loc307 = loc(fused[#loc158, #loc159])
#loc308 = loc(fused[#loc160, #loc157])
#loc309 = loc(fused[#loc165, #loc164])
#loc310 = loc(fused[#loc167, #loc166])
#loc311 = loc(fused[#loc174, #loc175])
#loc312 = loc(fused[#loc176, #loc177])
#loc313 = loc(fused[#loc178, #loc175])
#loc314 = loc(fused[#loc182, #loc181])
#loc315 = loc(fused[#loc186, #loc187])
#loc316 = loc(fused[#loc188, #loc189])
#loc317 = loc(fused[#loc191, #loc189])
#loc318 = loc(fused[#loc192, #loc193])
#loc319 = loc(fused[#loc194, #loc195])
#loc320 = loc(fused[#loc199, #loc200])
#loc321 = loc(fused[#loc201, #loc202])
#loc322 = loc(fused[#loc203, #loc200])
#loc323 = loc(fused[#loc207, #loc206])
#loc324 = loc(fused[#loc209, #loc210])
#loc325 = loc(fused[#loc208, #loc211])
#loc326 = loc(fused[#loc212, #loc211])
#loc327 = loc(fused[#loc213, #loc214])
#loc328 = loc(fused[#loc215, #loc216])
#loc329 = loc(fused[#loc217, #loc214])
#loc330 = loc(fused[#loc222, #loc221])
#loc331 = loc(fused[#loc224, #loc223])
#loc332 = loc(fused[#loc231, #loc232])
#loc333 = loc(fused[#loc233, #loc234])
#loc334 = loc(fused[#loc235, #loc232])
#loc335 = loc(fused[#loc239, #loc238])
