!s32i = !cir.int<s, 32>
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_62b.cpp":25:16)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_62b.cpp":25:21)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_62b.cpp":36:20)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_62b.cpp":36:25)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_62b.cpp":44:20)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_62b.cpp":44:25)
#loc23 = loc(fused[#loc3, #loc4])
#loc26 = loc(fused[#loc10, #loc11])
#loc29 = loc(fused[#loc17, #loc18])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_62b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func  @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_629badSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc3, #loc4])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc23)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc5)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc6)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc7)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc24)
    cir.return loc(#loc2)
  } loc(#loc22)
  cir.func  @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_6213goodG2BSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc10, #loc11])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc26)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc12)
    %1 = cir.const #cir.int<7> : !s32i loc(#loc13)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc14)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc27)
    cir.return loc(#loc9)
  } loc(#loc25)
  cir.func  @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_6213goodB2GSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc17, #loc18])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc29)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc19)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc20)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc21)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc30)
    cir.return loc(#loc16)
  } loc(#loc28)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_62b.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_62b.cpp":25:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_62b.cpp":29:1)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_62b.cpp":26:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_62b.cpp":28:12)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_62b.cpp":28:5)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_62b.cpp":36:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_62b.cpp":41:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_62b.cpp":37:1)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_62b.cpp":40:12)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_62b.cpp":40:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_62b.cpp":44:1)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_62b.cpp":48:1)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_62b.cpp":45:1)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_62b.cpp":47:12)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_62b.cpp":47:5)
#loc22 = loc(fused[#loc1, #loc2])
#loc24 = loc(fused[#loc7, #loc6])
#loc25 = loc(fused[#loc8, #loc9])
#loc27 = loc(fused[#loc14, #loc13])
#loc28 = loc(fused[#loc15, #loc16])
#loc30 = loc(fused[#loc21, #loc20])
