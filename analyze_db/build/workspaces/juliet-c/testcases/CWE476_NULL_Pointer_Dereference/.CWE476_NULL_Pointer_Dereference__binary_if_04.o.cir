!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc51 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":60:48)
#loc72 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":77:48)
#true = #cir.bool<true> : !cir.bool
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__binary_if_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc79)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"intOne == 5\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> {alignment = 1 : i64} loc(#loc3)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__binary_if_04_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["twoIntsStructPointer", init] {alignment = 8 : i64} loc(#loc81)
    cir.br ^bb1 loc(#loc82)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<1> : !s32i loc(#loc10)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc10)
    cir.brcond %2 ^bb2, ^bb9 loc(#loc83)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc84)
  ^bb3:  // pred: ^bb2
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc7)
    cir.store %3, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc81)
    cir.br ^bb4 loc(#loc85)
  ^bb4:  // pred: ^bb3
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc16)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc17)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc17)
    %7 = cir.cmp(ne, %4, %6) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc86)
    %8 = cir.cast(bool_to_int, %7 : !cir.bool), !s32i loc(#loc86)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc18)
    %10 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc19)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc20)
    %12 = cir.const #cir.int<5> : !s32i loc(#loc21)
    %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc87)
    %14 = cir.cast(bool_to_int, %13 : !cir.bool), !s32i loc(#loc87)
    %15 = cir.binop(and, %8, %14) : !s32i loc(#loc88)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc24)
    cir.brcond %16 ^bb5, ^bb6 loc(#loc89)
  ^bb5:  // pred: ^bb4
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc3)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc3)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc26)
    cir.br ^bb6 loc(#loc15)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc15)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc13)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc9)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc9)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc5)
  } loc(#loc80)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__binary_if_04_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc91)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc29)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc92)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc31)
    cir.return loc(#loc28)
  } loc(#loc90)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc33)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["twoIntsStructPointer", init] {alignment = 8 : i64} loc(#loc94)
    cir.br ^bb1 loc(#loc95)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc40)
    cir.brcond %2 ^bb2, ^bb3 loc(#loc96)
  ^bb2:  // pred: ^bb1
    %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc33)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc33)
    cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc44)
    cir.br ^bb18 loc(#loc42)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc97)
  ^bb4:  // pred: ^bb3
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
    cir.store %5, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc94)
    cir.br ^bb5 loc(#loc98)
  ^bb5:  // pred: ^bb4
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc49)
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc50)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
    %9 = cir.cmp(ne, %6, %8) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc99)
    cir.brcond %9 ^bb6, ^bb11 loc(#loc51)
  ^bb6:  // pred: ^bb5
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc52)
    %11 = cir.get_member %10[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc19)
    %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc53)
    %13 = cir.const #cir.int<5> : !s32i loc(#loc54)
    %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc100)
    cir.brcond %14 ^bb7, ^bb8 loc(#loc51)
  ^bb7:  // pred: ^bb6
    %15 = cir.const #true loc(#loc51)
    cir.br ^bb9(%15 : !cir.bool) loc(#loc51)
  ^bb8:  // pred: ^bb6
    %16 = cir.const #false loc(#loc51)
    cir.br ^bb9(%16 : !cir.bool) loc(#loc51)
  ^bb9(%17: !cir.bool loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":60:48)):  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc51)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12(%17 : !cir.bool) loc(#loc51)
  ^bb11:  // pred: ^bb5
    %18 = cir.const #false loc(#loc51)
    cir.br ^bb12(%18 : !cir.bool) loc(#loc51)
  ^bb12(%19: !cir.bool loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":60:48)):  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc51)
  ^bb13:  // pred: ^bb12
    cir.brcond %19 ^bb14, ^bb15 loc(#loc101)
  ^bb14:  // pred: ^bb13
    %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc56)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    cir.br ^bb15 loc(#loc48)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc48)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc46)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc39)
  ^bb18:  // 2 preds: ^bb2, ^bb17
    cir.br ^bb19 loc(#loc39)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc35)
  } loc(#loc93)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["twoIntsStructPointer", init] {alignment = 8 : i64} loc(#loc103)
    cir.br ^bb1 loc(#loc104)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc64)
    cir.brcond %2 ^bb2, ^bb17 loc(#loc105)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc106)
  ^bb3:  // pred: ^bb2
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc61)
    cir.store %3, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc103)
    cir.br ^bb4 loc(#loc107)
  ^bb4:  // pred: ^bb3
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc70)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc71)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc71)
    %7 = cir.cmp(ne, %4, %6) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc108)
    cir.brcond %7 ^bb5, ^bb10 loc(#loc72)
  ^bb5:  // pred: ^bb4
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc73)
    %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc19)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc74)
    %11 = cir.const #cir.int<5> : !s32i loc(#loc75)
    %12 = cir.cmp(eq, %10, %11) : !s32i, !cir.bool loc(#loc109)
    cir.brcond %12 ^bb6, ^bb7 loc(#loc72)
  ^bb6:  // pred: ^bb5
    %13 = cir.const #true loc(#loc72)
    cir.br ^bb8(%13 : !cir.bool) loc(#loc72)
  ^bb7:  // pred: ^bb5
    %14 = cir.const #false loc(#loc72)
    cir.br ^bb8(%14 : !cir.bool) loc(#loc72)
  ^bb8(%15: !cir.bool loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":77:48)):  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc72)
  ^bb9:  // pred: ^bb8
    cir.br ^bb11(%15 : !cir.bool) loc(#loc72)
  ^bb10:  // pred: ^bb4
    %16 = cir.const #false loc(#loc72)
    cir.br ^bb11(%16 : !cir.bool) loc(#loc72)
  ^bb11(%17: !cir.bool loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":77:48)):  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc72)
  ^bb12:  // pred: ^bb11
    cir.brcond %17 ^bb13, ^bb14 loc(#loc110)
  ^bb13:  // pred: ^bb12
    %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc77)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    cir.br ^bb14 loc(#loc69)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc69)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc67)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc63)
  ^bb17:  // 2 preds: ^bb1, ^bb16
    cir.br ^bb18 loc(#loc63)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc59)
  } loc(#loc102)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__binary_if_04.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":36:27)
#loc4 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":26:1)
#loc5 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":40:1)
#loc6 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":31:13)
#loc7 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":31:51)
#loc8 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":28:5)
#loc9 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":39:5)
#loc10 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":28:8)
#loc11 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":29:5)
#loc12 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":30:9)
#loc13 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":38:9)
#loc14 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":34:13)
#loc15 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":37:13)
#loc16 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":34:18)
#loc17 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":34:42)
#loc18 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":34:51)
#loc19 = loc("../../testcasesupport/std_testcase.h":98:9)
#loc20 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":34:73)
#loc21 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":34:83)
#loc22 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":34:17)
#loc23 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":34:84)
#loc24 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":34:48)
#loc25 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":35:13)
#loc26 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":36:17)
#loc27 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":85:1)
#loc28 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":89:1)
#loc29 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":87:5)
#loc30 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":87:11)
#loc31 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":88:5)
#loc32 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":88:11)
#loc33 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":52:19)
#loc34 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":47:1)
#loc35 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":66:1)
#loc36 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":57:13)
#loc37 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":57:51)
#loc38 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":49:5)
#loc39 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":65:5)
#loc40 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":49:8)
#loc41 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":50:5)
#loc42 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":53:5)
#loc43 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":55:5)
#loc44 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":52:9)
#loc45 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":56:9)
#loc46 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":64:9)
#loc47 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":60:13)
#loc48 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":63:13)
#loc49 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":60:18)
#loc50 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":60:42)
#loc52 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":60:52)
#loc53 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":60:74)
#loc54 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":60:84)
#loc55 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":61:13)
#loc56 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":62:27)
#loc57 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":62:17)
#loc58 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":69:1)
#loc59 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":83:1)
#loc60 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":74:13)
#loc61 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":74:51)
#loc62 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":71:5)
#loc63 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":82:5)
#loc64 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":71:8)
#loc65 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":72:5)
#loc66 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":73:9)
#loc67 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":81:9)
#loc68 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":77:13)
#loc69 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":80:13)
#loc70 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":77:18)
#loc71 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":77:42)
#loc73 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":77:52)
#loc74 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":77:74)
#loc75 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":77:84)
#loc76 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":78:13)
#loc77 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":79:27)
#loc78 = loc("CWE476_NULL_Pointer_Dereference__binary_if_04.c":79:17)
#loc79 = loc(fused[#loc1, #loc2])
#loc80 = loc(fused[#loc4, #loc5])
#loc81 = loc(fused[#loc6, #loc7])
#loc82 = loc(fused[#loc8, #loc9])
#loc83 = loc(fused[#loc11, #loc9])
#loc84 = loc(fused[#loc12, #loc13])
#loc85 = loc(fused[#loc14, #loc15])
#loc86 = loc(fused[#loc16, #loc17])
#loc87 = loc(fused[#loc18, #loc21])
#loc88 = loc(fused[#loc22, #loc23])
#loc89 = loc(fused[#loc25, #loc15])
#loc90 = loc(fused[#loc27, #loc28])
#loc91 = loc(fused[#loc29, #loc30])
#loc92 = loc(fused[#loc31, #loc32])
#loc93 = loc(fused[#loc34, #loc35])
#loc94 = loc(fused[#loc36, #loc37])
#loc95 = loc(fused[#loc38, #loc39])
#loc96 = loc(fused[#loc41, #loc42, #loc43, #loc39])
#loc97 = loc(fused[#loc45, #loc46])
#loc98 = loc(fused[#loc47, #loc48])
#loc99 = loc(fused[#loc49, #loc50])
#loc100 = loc(fused[#loc52, #loc54])
#loc101 = loc(fused[#loc55, #loc48])
#loc102 = loc(fused[#loc58, #loc59])
#loc103 = loc(fused[#loc60, #loc61])
#loc104 = loc(fused[#loc62, #loc63])
#loc105 = loc(fused[#loc65, #loc63])
#loc106 = loc(fused[#loc66, #loc67])
#loc107 = loc(fused[#loc68, #loc69])
#loc108 = loc(fused[#loc70, #loc71])
#loc109 = loc(fused[#loc73, #loc75])
#loc110 = loc(fused[#loc76, #loc69])
