!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s02/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @_ZN58CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_629badSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc80)
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc81)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc82)
  cir.func @_ZN58CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_623badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc84)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc85)
    cir.call @_ZN58CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_629badSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc13)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc87)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc18)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
      %5 = cir.const #cir.int<67> : !s8i loc(#loc19)
      %6 = cir.cast(integral, %5 : !s8i), !s32i loc(#loc19)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc20)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc21)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc20)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc20)
      cir.libc.memset %10 bytes from %4 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc88)
      %11 = cir.const #cir.int<0> : !s8i loc(#loc24)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc25)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc26)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc25)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc27)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc27)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc89)
      %17 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc28)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
      %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc30)
      %20 = cir.const #cir.int<100> : !s32i loc(#loc31)
      %21 = cir.const #cir.int<1> : !s32i loc(#loc32)
      %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc31)
      %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc31)
      %24 = cir.call @strncpy(%18, %19, %23) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc28)
      %25 = cir.const #cir.int<0> : !s8i loc(#loc33)
      %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
      %27 = cir.const #cir.int<100> : !s32i loc(#loc35)
      %28 = cir.const #cir.int<1> : !s32i loc(#loc36)
      %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc35)
      %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc37)
      cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc90)
      %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
      cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc39)
      %32 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
      cir.delete.array %32 : <!s8i> loc(#loc40)
    } loc(#loc86)
    cir.return loc(#loc8)
  } loc(#loc83)
  cir.func private @_ZN58CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_6213goodG2BSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc91)
  cir.func internal private @_ZN58CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc93)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc47)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc94)
    cir.call @_ZN58CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_6213goodG2BSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc49)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc96)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc54)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc54)
      %5 = cir.const #cir.int<67> : !s8i loc(#loc55)
      %6 = cir.cast(integral, %5 : !s8i), !s32i loc(#loc55)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc56)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc57)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc56)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc56)
      cir.libc.memset %10 bytes from %4 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc97)
      %11 = cir.const #cir.int<0> : !s8i loc(#loc60)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc61)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc62)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc61)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc63)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc63)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc98)
      %17 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc64)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
      %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc66)
      %20 = cir.const #cir.int<100> : !s32i loc(#loc67)
      %21 = cir.const #cir.int<1> : !s32i loc(#loc68)
      %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc67)
      %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc67)
      %24 = cir.call @strncpy(%18, %19, %23) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc64)
      %25 = cir.const #cir.int<0> : !s8i loc(#loc69)
      %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
      %27 = cir.const #cir.int<100> : !s32i loc(#loc71)
      %28 = cir.const #cir.int<1> : !s32i loc(#loc72)
      %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc71)
      %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc73)
      cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc99)
      %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
      cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc75)
      %32 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
      cir.delete.array %32 : <!s8i> loc(#loc76)
    } loc(#loc95)
    cir.return loc(#loc44)
  } loc(#loc92)
  cir.func @_ZN58CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_624goodEv() extra(#fn_attr1) {
    cir.call @_ZN58CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62L7goodG2BEv() : () -> () loc(#loc79)
    cir.return loc(#loc78)
  } loc(#loc100)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s02/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":27:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":27:28)
#loc3 = loc("/usr/include/string.h":144:1)
#loc4 = loc("/usr/include/string.h":146:14)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":29:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":44:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":31:5)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":31:12)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":32:12)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":32:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":33:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":34:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":43:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":35:9)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":35:24)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":36:16)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":36:24)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":36:29)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":36:33)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":36:9)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":36:34)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":37:25)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":37:16)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":37:20)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":37:9)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":39:9)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":39:17)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":39:23)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":39:31)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":39:35)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":40:23)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":40:9)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":40:14)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":40:18)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":40:19)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":41:19)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":41:9)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":42:19)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":51:1)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":51:32)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":53:1)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":68:1)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":55:5)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":55:12)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":56:12)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":56:5)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":57:5)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":58:5)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":67:5)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":59:9)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":59:24)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":60:16)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":60:24)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":60:29)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":60:33)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":60:9)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":60:34)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":61:25)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":61:16)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":61:20)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":61:9)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":63:9)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":63:17)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":63:23)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":63:31)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":63:35)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":64:23)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":64:9)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":64:14)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":64:18)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":64:19)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":65:19)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":65:9)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":66:19)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":70:1)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":73:1)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_ncpy_62a.cpp":72:5)
#loc80 = loc(fused[#loc1, #loc2])
#loc81 = loc(fused[#loc3, #loc4])
#loc82 = loc(fused[#loc5, #loc6])
#loc83 = loc(fused[#loc7, #loc8])
#loc84 = loc(fused[#loc9, #loc10])
#loc85 = loc(fused[#loc12, #loc11])
#loc86 = loc(fused[#loc14, #loc15])
#loc87 = loc(fused[#loc16, #loc17])
#loc88 = loc(fused[#loc22, #loc23])
#loc89 = loc(fused[#loc27, #loc24])
#loc90 = loc(fused[#loc34, #loc33])
#loc91 = loc(fused[#loc41, #loc42])
#loc92 = loc(fused[#loc43, #loc44])
#loc93 = loc(fused[#loc45, #loc46])
#loc94 = loc(fused[#loc48, #loc47])
#loc95 = loc(fused[#loc50, #loc51])
#loc96 = loc(fused[#loc52, #loc53])
#loc97 = loc(fused[#loc58, #loc59])
#loc98 = loc(fused[#loc63, #loc60])
#loc99 = loc(fused[#loc70, #loc69])
#loc100 = loc(fused[#loc77, #loc78])
