!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc15 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":28:23)
#loc16 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":28:27)
#loc88 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":36:24)
#loc89 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":36:28)
!ty__structSigAtomic = !cir.record<struct "_structSigAtomic" {!s32i} #cir.record.decl.ast>
#loc222 = loc(fused[#loc15, #loc16])
#loc253 = loc(fused[#loc88, #loc89])
module @"/workspaces/juliet-c/testcases/CWE364_Signal_Handler_Race_Condition/CWE364_Signal_Handler_Race_Condition__basic_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global external dsolocal @CWE364_Signal_Handler_Race_Condition__basic_02StructSigAtomicBad = #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> {alignment = 8 : i64} loc(#loc215)
  cir.global external dsolocal @CWE364_Signal_Handler_Race_Condition__basic_02StructSigAtomicGood = #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> {alignment = 8 : i64} loc(#loc216)
  cir.func private @signal(!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc217)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc218)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc219)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc220)
  cir.func internal private @helperBad(%arg0: !s32i loc(fused[#loc15, #loc16])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["sig", init] {alignment = 4 : i64} loc(#loc222)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc17)
    cir.scope {
      %1 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_02StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc215)
      %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc20)
      %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc21)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc21)
      %5 = cir.cmp(ne, %2, %4) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc224)
      cir.if %5 {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc23)
        %7 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_02StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc215)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc24)
        %9 = cir.get_member %8[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
        cir.store %6, %9 : !s32i, !cir.ptr<!s32i> loc(#loc226)
      } loc(#loc225)
    } loc(#loc223)
    cir.return loc(#loc14)
  } loc(#loc221)
  cir.func no_proto @CWE364_Signal_Handler_Race_Condition__basic_02_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc30)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc30)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc231)
          %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc35)
          cir.store %3, %2 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc231)
          %4 = cir.const #cir.int<2> : !s32i loc(#loc36)
          %5 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<(!s32i)>> loc(#loc37)
          %6 = cir.call @signal(%4, %5) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc38)
          cir.scope {
            %20 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_02StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc215)
            %21 = cir.load %20 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc41)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc42)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc42)
            %24 = cir.cmp(ne, %21, %23) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc233)
            cir.if %24 {
              %25 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc44)
              %26 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_02StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc215)
              %27 = cir.load %26 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc45)
              %28 = cir.cast(bitcast, %27 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc45)
              cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc44)
              %29 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc46)
              %30 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_02StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc215)
              cir.store %29, %30 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc235)
            } loc(#loc234)
          } loc(#loc232)
          %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc48)
          %8 = cir.const #cir.int<4> : !u64i loc(#loc236)
          %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc48)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc237)
          cir.store %10, %2 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc238)
          cir.scope {
            %20 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc55)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc56)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc56)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc240)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc58)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc59)
              %26 = cir.unary(minus, %25) nsw : !s32i, !s32i loc(#loc60)
              cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc58)
            } loc(#loc241)
          } loc(#loc239)
          %11 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc61)
          %12 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_02StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc215)
          cir.store %11, %12 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc242)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc63)
          %14 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_02StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc215)
          %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc64)
          %16 = cir.get_member %15[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
          cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc243)
          %17 = cir.const #cir.int<2> : !s32i loc(#loc65)
          %18 = cir.get_global @helperBad : !cir.ptr<!cir.func<(!s32i)>> loc(#loc66)
          %19 = cir.call @signal(%17, %18) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc67)
          cir.scope {
            %20 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_02StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc215)
            %21 = cir.load %20 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc70)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc71)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc71)
            %24 = cir.cmp(ne, %21, %23) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc245)
            cir.if %24 {
              %25 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc73)
              %26 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_02StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc215)
              %27 = cir.load %26 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc74)
              %28 = cir.cast(bitcast, %27 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc74)
              cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc73)
              %29 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc75)
              %30 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_02StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc215)
              cir.store %29, %30 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc247)
            } loc(#loc246)
          } loc(#loc244)
        } loc(#loc230)
      } loc(#loc229)
    } loc(#loc228)
    cir.return loc(#loc27)
  } loc(#loc227)
  cir.func no_proto @CWE364_Signal_Handler_Race_Condition__basic_02_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc249)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc79)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc250)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc81)
    cir.return loc(#loc78)
  } loc(#loc248)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc251)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc85)
  cir.func internal private @helperGood(%arg0: !s32i loc(fused[#loc88, #loc89])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["sig", init] {alignment = 4 : i64} loc(#loc253)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc90)
    cir.scope {
      %1 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_02StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc216)
      %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc93)
      %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc94)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc94)
      %5 = cir.cmp(ne, %2, %4) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc255)
      cir.if %5 {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc96)
        %7 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_02StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc216)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc97)
        %9 = cir.get_member %8[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
        cir.store %6, %9 : !s32i, !cir.ptr<!s32i> loc(#loc257)
      } loc(#loc256)
    } loc(#loc254)
    cir.return loc(#loc87)
  } loc(#loc252)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<0> : !s32i loc(#loc102)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc102)
      cir.if %1 {
        %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc85)
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc85)
        cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc106)
      } else {
        cir.scope {
          %2 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc262)
          %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc110)
          cir.store %3, %2 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc262)
          %4 = cir.const #cir.int<2> : !s32i loc(#loc111)
          %5 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<(!s32i)>> loc(#loc112)
          %6 = cir.call @signal(%4, %5) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc113)
          cir.scope {
            %26 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_02StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc216)
            %27 = cir.load %26 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc116)
            %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc117)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc117)
            %30 = cir.cmp(ne, %27, %29) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc264)
            cir.if %30 {
              %31 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc119)
              %32 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_02StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc216)
              %33 = cir.load %32 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc120)
              %34 = cir.cast(bitcast, %33 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc120)
              cir.call @free(%34) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc119)
              %35 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc121)
              %36 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_02StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc216)
              cir.store %35, %36 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc266)
            } loc(#loc265)
          } loc(#loc263)
          %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc123)
          %8 = cir.const #cir.int<4> : !u64i loc(#loc267)
          %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc123)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc268)
          cir.store %10, %2 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc269)
          cir.scope {
            %26 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc130)
            %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc131)
            %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc131)
            %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc271)
            cir.if %29 {
              %30 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc133)
              %31 = cir.const #cir.int<1> : !s32i loc(#loc134)
              %32 = cir.unary(minus, %31) nsw : !s32i, !s32i loc(#loc135)
              cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc133)
            } loc(#loc272)
          } loc(#loc270)
          %11 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc136)
          %12 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_02StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc216)
          cir.store %11, %12 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc273)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc138)
          %14 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_02StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc216)
          %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc139)
          %16 = cir.get_member %15[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
          cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc274)
          %17 = cir.const #cir.int<2> : !s32i loc(#loc140)
          %18 = cir.get_global @helperGood : !cir.ptr<!cir.func<(!s32i)>> loc(#loc141)
          %19 = cir.call @signal(%17, %18) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc142)
          %20 = cir.const #cir.int<2> : !s32i loc(#loc143)
          %21 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<(!s32i)>> loc(#loc144)
          %22 = cir.call @signal(%20, %21) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc145)
          cir.scope {
            %26 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_02StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc216)
            %27 = cir.load %26 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc148)
            %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc149)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc149)
            %30 = cir.cmp(ne, %27, %29) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc276)
            cir.if %30 {
              %31 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc151)
              %32 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_02StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc216)
              %33 = cir.load %32 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc152)
              %34 = cir.cast(bitcast, %33 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc152)
              cir.call @free(%34) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc151)
              %35 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc153)
              %36 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_02StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc216)
              cir.store %35, %36 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc278)
            } loc(#loc277)
          } loc(#loc275)
          %23 = cir.const #cir.int<2> : !s32i loc(#loc155)
          %24 = cir.get_global @helperGood : !cir.ptr<!cir.func<(!s32i)>> loc(#loc156)
          %25 = cir.call @signal(%23, %24) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc157)
        } loc(#loc261)
      } loc(#loc260)
    } loc(#loc259)
    cir.return loc(#loc99)
  } loc(#loc258)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc162)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc162)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc283)
          %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc167)
          cir.store %3, %2 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc283)
          %4 = cir.const #cir.int<2> : !s32i loc(#loc168)
          %5 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<(!s32i)>> loc(#loc169)
          %6 = cir.call @signal(%4, %5) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc170)
          cir.scope {
            %26 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_02StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc216)
            %27 = cir.load %26 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc173)
            %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc174)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc174)
            %30 = cir.cmp(ne, %27, %29) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc285)
            cir.if %30 {
              %31 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc176)
              %32 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_02StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc216)
              %33 = cir.load %32 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc177)
              %34 = cir.cast(bitcast, %33 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc177)
              cir.call @free(%34) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc176)
              %35 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc178)
              %36 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_02StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc216)
              cir.store %35, %36 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc287)
            } loc(#loc286)
          } loc(#loc284)
          %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc180)
          %8 = cir.const #cir.int<4> : !u64i loc(#loc288)
          %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc180)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc289)
          cir.store %10, %2 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc290)
          cir.scope {
            %26 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc187)
            %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc188)
            %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc188)
            %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc292)
            cir.if %29 {
              %30 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc190)
              %31 = cir.const #cir.int<1> : !s32i loc(#loc191)
              %32 = cir.unary(minus, %31) nsw : !s32i, !s32i loc(#loc192)
              cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc190)
            } loc(#loc293)
          } loc(#loc291)
          %11 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc193)
          %12 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_02StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc216)
          cir.store %11, %12 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc294)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc195)
          %14 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_02StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc216)
          %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc196)
          %16 = cir.get_member %15[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
          cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc295)
          %17 = cir.const #cir.int<2> : !s32i loc(#loc197)
          %18 = cir.get_global @helperGood : !cir.ptr<!cir.func<(!s32i)>> loc(#loc198)
          %19 = cir.call @signal(%17, %18) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc199)
          %20 = cir.const #cir.int<2> : !s32i loc(#loc200)
          %21 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<(!s32i)>> loc(#loc201)
          %22 = cir.call @signal(%20, %21) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc202)
          cir.scope {
            %26 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_02StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc216)
            %27 = cir.load %26 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc205)
            %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc206)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc206)
            %30 = cir.cmp(ne, %27, %29) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc297)
            cir.if %30 {
              %31 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc208)
              %32 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_02StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc216)
              %33 = cir.load %32 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc209)
              %34 = cir.cast(bitcast, %33 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc209)
              cir.call @free(%34) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc208)
              %35 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc210)
              %36 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_02StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc216)
              cir.store %35, %36 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc299)
            } loc(#loc298)
          } loc(#loc296)
          %23 = cir.const #cir.int<2> : !s32i loc(#loc212)
          %24 = cir.get_global @helperGood : !cir.ptr<!cir.func<(!s32i)>> loc(#loc213)
          %25 = cir.call @signal(%23, %24) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc214)
        } loc(#loc282)
      } loc(#loc281)
    } loc(#loc280)
    cir.return loc(#loc159)
  } loc(#loc279)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE364_Signal_Handler_Race_Condition/CWE364_Signal_Handler_Race_Condition__basic_02.c":0:0)
#loc1 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":25:1)
#loc2 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":25:85)
#loc3 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":26:1)
#loc4 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":26:86)
#loc5 = loc("/usr/include/signal.h":88:1)
#loc6 = loc("/usr/include/signal.h":89:6)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("/usr/include/stdlib.h":672:1)
#loc10 = loc("/usr/include/stdlib.h":672:45)
#loc11 = loc("/usr/include/stdlib.h":756:1)
#loc12 = loc("/usr/include/stdlib.h":756:70)
#loc13 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":28:1)
#loc14 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":34:1)
#loc17 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":29:1)
#loc18 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":30:5)
#loc19 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":33:5)
#loc20 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":30:9)
#loc21 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":30:77)
#loc22 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":31:5)
#loc23 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":32:81)
#loc24 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":32:9)
#loc25 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":22:18)
#loc26 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":46:1)
#loc27 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":86:1)
#loc28 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":48:5)
#loc29 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":85:5)
#loc30 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":48:8)
#loc31 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":49:5)
#loc32 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":50:9)
#loc33 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":84:9)
#loc34 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":51:13)
#loc35 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":51:49)
#loc36 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":52:20)
#loc37 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":52:28)
#loc38 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":52:13)
#loc39 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":53:13)
#loc40 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":57:13)
#loc41 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":53:17)
#loc42 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":53:85)
#loc43 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":54:13)
#loc44 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":55:17)
#loc45 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":55:22)
#loc46 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":56:84)
#loc47 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":56:17)
#loc48 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":58:50)
#loc49 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":58:57)
#loc50 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":58:79)
#loc51 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":58:80)
#loc52 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":58:13)
#loc53 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":59:13)
#loc54 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":59:53)
#loc55 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":59:17)
#loc56 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":59:37)
#loc57 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":59:43)
#loc58 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":59:44)
#loc59 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":59:50)
#loc60 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":59:49)
#loc61 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":60:80)
#loc62 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":60:13)
#loc63 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":61:85)
#loc64 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":61:13)
#loc65 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":69:20)
#loc66 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":69:28)
#loc67 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":69:13)
#loc68 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":79:13)
#loc69 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":83:13)
#loc70 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":79:17)
#loc71 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":79:85)
#loc72 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":80:13)
#loc73 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":81:17)
#loc74 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":81:22)
#loc75 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":82:84)
#loc76 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":82:17)
#loc77 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":179:1)
#loc78 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":183:1)
#loc79 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":181:5)
#loc80 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":181:11)
#loc81 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":182:5)
#loc82 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":182:11)
#loc83 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc84 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc85 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":98:19)
#loc86 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":36:1)
#loc87 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":42:1)
#loc90 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":37:1)
#loc91 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":38:5)
#loc92 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":41:5)
#loc93 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":38:9)
#loc94 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":38:78)
#loc95 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":39:5)
#loc96 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":40:82)
#loc97 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":40:9)
#loc98 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":93:1)
#loc99 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":136:1)
#loc100 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":95:5)
#loc101 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":135:5)
#loc102 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":95:8)
#loc103 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":96:5)
#loc104 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":99:5)
#loc105 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":101:5)
#loc106 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":98:9)
#loc107 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":102:9)
#loc108 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":134:9)
#loc109 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":103:13)
#loc110 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":103:49)
#loc111 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":104:20)
#loc112 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":104:28)
#loc113 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":104:13)
#loc114 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":105:13)
#loc115 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":109:13)
#loc116 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":105:17)
#loc117 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":105:86)
#loc118 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":106:13)
#loc119 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":107:17)
#loc120 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":107:22)
#loc121 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":108:85)
#loc122 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":108:17)
#loc123 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":110:50)
#loc124 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":110:57)
#loc125 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":110:79)
#loc126 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":110:80)
#loc127 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":110:13)
#loc128 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":111:13)
#loc129 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":111:53)
#loc130 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":111:17)
#loc131 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":111:37)
#loc132 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":111:43)
#loc133 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":111:44)
#loc134 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":111:50)
#loc135 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":111:49)
#loc136 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":112:81)
#loc137 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":112:13)
#loc138 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":113:86)
#loc139 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":113:13)
#loc140 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":121:20)
#loc141 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":121:28)
#loc142 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":121:13)
#loc143 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":127:20)
#loc144 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":127:28)
#loc145 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":127:13)
#loc146 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":128:13)
#loc147 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":132:13)
#loc148 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":128:17)
#loc149 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":128:86)
#loc150 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":129:13)
#loc151 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":130:17)
#loc152 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":130:22)
#loc153 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":131:85)
#loc154 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":131:17)
#loc155 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":133:20)
#loc156 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":133:28)
#loc157 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":133:13)
#loc158 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":139:1)
#loc159 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":177:1)
#loc160 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":141:5)
#loc161 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":176:5)
#loc162 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":141:8)
#loc163 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":142:5)
#loc164 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":143:9)
#loc165 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":175:9)
#loc166 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":144:13)
#loc167 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":144:49)
#loc168 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":145:20)
#loc169 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":145:28)
#loc170 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":145:13)
#loc171 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":146:13)
#loc172 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":150:13)
#loc173 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":146:17)
#loc174 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":146:86)
#loc175 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":147:13)
#loc176 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":148:17)
#loc177 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":148:22)
#loc178 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":149:85)
#loc179 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":149:17)
#loc180 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":151:50)
#loc181 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":151:57)
#loc182 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":151:79)
#loc183 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":151:80)
#loc184 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":151:13)
#loc185 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":152:13)
#loc186 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":152:53)
#loc187 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":152:17)
#loc188 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":152:37)
#loc189 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":152:43)
#loc190 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":152:44)
#loc191 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":152:50)
#loc192 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":152:49)
#loc193 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":153:81)
#loc194 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":153:13)
#loc195 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":154:86)
#loc196 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":154:13)
#loc197 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":162:20)
#loc198 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":162:28)
#loc199 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":162:13)
#loc200 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":168:20)
#loc201 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":168:28)
#loc202 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":168:13)
#loc203 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":169:13)
#loc204 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":173:13)
#loc205 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":169:17)
#loc206 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":169:86)
#loc207 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":170:13)
#loc208 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":171:17)
#loc209 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":171:22)
#loc210 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":172:85)
#loc211 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":172:17)
#loc212 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":174:20)
#loc213 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":174:28)
#loc214 = loc("CWE364_Signal_Handler_Race_Condition__basic_02.c":174:13)
#loc215 = loc(fused[#loc1, #loc2])
#loc216 = loc(fused[#loc3, #loc4])
#loc217 = loc(fused[#loc5, #loc6])
#loc218 = loc(fused[#loc7, #loc8])
#loc219 = loc(fused[#loc9, #loc10])
#loc220 = loc(fused[#loc11, #loc12])
#loc221 = loc(fused[#loc13, #loc14])
#loc223 = loc(fused[#loc18, #loc19])
#loc224 = loc(fused[#loc20, #loc21])
#loc225 = loc(fused[#loc22, #loc19])
#loc226 = loc(fused[#loc24, #loc23])
#loc227 = loc(fused[#loc26, #loc27])
#loc228 = loc(fused[#loc28, #loc29])
#loc229 = loc(fused[#loc31, #loc29])
#loc230 = loc(fused[#loc32, #loc33])
#loc231 = loc(fused[#loc34, #loc35])
#loc232 = loc(fused[#loc39, #loc40])
#loc233 = loc(fused[#loc41, #loc42])
#loc234 = loc(fused[#loc43, #loc40])
#loc235 = loc(fused[#loc47, #loc46])
#loc236 = loc(fused[#loc49, #loc50])
#loc237 = loc(fused[#loc48, #loc51])
#loc238 = loc(fused[#loc52, #loc51])
#loc239 = loc(fused[#loc53, #loc54])
#loc240 = loc(fused[#loc55, #loc56])
#loc241 = loc(fused[#loc57, #loc54])
#loc242 = loc(fused[#loc62, #loc61])
#loc243 = loc(fused[#loc64, #loc63])
#loc244 = loc(fused[#loc68, #loc69])
#loc245 = loc(fused[#loc70, #loc71])
#loc246 = loc(fused[#loc72, #loc69])
#loc247 = loc(fused[#loc76, #loc75])
#loc248 = loc(fused[#loc77, #loc78])
#loc249 = loc(fused[#loc79, #loc80])
#loc250 = loc(fused[#loc81, #loc82])
#loc251 = loc(fused[#loc83, #loc84])
#loc252 = loc(fused[#loc86, #loc87])
#loc254 = loc(fused[#loc91, #loc92])
#loc255 = loc(fused[#loc93, #loc94])
#loc256 = loc(fused[#loc95, #loc92])
#loc257 = loc(fused[#loc97, #loc96])
#loc258 = loc(fused[#loc98, #loc99])
#loc259 = loc(fused[#loc100, #loc101])
#loc260 = loc(fused[#loc103, #loc104, #loc105, #loc101])
#loc261 = loc(fused[#loc107, #loc108])
#loc262 = loc(fused[#loc109, #loc110])
#loc263 = loc(fused[#loc114, #loc115])
#loc264 = loc(fused[#loc116, #loc117])
#loc265 = loc(fused[#loc118, #loc115])
#loc266 = loc(fused[#loc122, #loc121])
#loc267 = loc(fused[#loc124, #loc125])
#loc268 = loc(fused[#loc123, #loc126])
#loc269 = loc(fused[#loc127, #loc126])
#loc270 = loc(fused[#loc128, #loc129])
#loc271 = loc(fused[#loc130, #loc131])
#loc272 = loc(fused[#loc132, #loc129])
#loc273 = loc(fused[#loc137, #loc136])
#loc274 = loc(fused[#loc139, #loc138])
#loc275 = loc(fused[#loc146, #loc147])
#loc276 = loc(fused[#loc148, #loc149])
#loc277 = loc(fused[#loc150, #loc147])
#loc278 = loc(fused[#loc154, #loc153])
#loc279 = loc(fused[#loc158, #loc159])
#loc280 = loc(fused[#loc160, #loc161])
#loc281 = loc(fused[#loc163, #loc161])
#loc282 = loc(fused[#loc164, #loc165])
#loc283 = loc(fused[#loc166, #loc167])
#loc284 = loc(fused[#loc171, #loc172])
#loc285 = loc(fused[#loc173, #loc174])
#loc286 = loc(fused[#loc175, #loc172])
#loc287 = loc(fused[#loc179, #loc178])
#loc288 = loc(fused[#loc181, #loc182])
#loc289 = loc(fused[#loc180, #loc183])
#loc290 = loc(fused[#loc184, #loc183])
#loc291 = loc(fused[#loc185, #loc186])
#loc292 = loc(fused[#loc187, #loc188])
#loc293 = loc(fused[#loc189, #loc186])
#loc294 = loc(fused[#loc194, #loc193])
#loc295 = loc(fused[#loc196, #loc195])
#loc296 = loc(fused[#loc203, #loc204])
#loc297 = loc(fused[#loc205, #loc206])
#loc298 = loc(fused[#loc207, #loc204])
#loc299 = loc(fused[#loc211, #loc210])
