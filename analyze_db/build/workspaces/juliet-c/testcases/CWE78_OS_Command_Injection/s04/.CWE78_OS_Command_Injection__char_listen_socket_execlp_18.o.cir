!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" constant cir_private @__const.goodG2B.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc215)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_listen_socket_execlp_18_bad.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc216)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc217)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc218)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc219)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc220)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc221)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc222)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc223)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc224)
  cir.func private @close(!s32i) -> !s32i loc(#loc225)
  cir.func private @execlp(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc226)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"sh\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc25)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc26)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_execlp_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc228)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc216)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc229)
    %3 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc230)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc231)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc232)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc233)
    %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc234)
    %8 = cir.get_global @__const.CWE78_OS_Command_Injection__char_listen_socket_execlp_18_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc216)
    cir.copy %8 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc216)
    %9 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc43)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc235)
    cir.goto "source" loc(#loc236)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc47)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc38)
    cir.store %11, %5 : !s32i, !cir.ptr<!s32i> loc(#loc232)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc40)
    cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc233)
    %14 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc48)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
    %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc48)
    cir.store %16, %7 : !u64i, !cir.ptr<!u64i> loc(#loc234)
    cir.scope {
      cir.do {
        cir.scope {
          %26 = cir.const #cir.int<2> : !s32i loc(#loc54)
          %27 = cir.const #cir.int<1> : !s32i loc(#loc55)
          %28 = cir.const #cir.int<6> : !s32i loc(#loc56)
          %29 = cir.call @socket(%26, %27, %28) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc57)
          cir.store %29, %5 : !s32i, !cir.ptr<!s32i> loc(#loc239)
          cir.scope {
            %83 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc62)
            %84 = cir.const #cir.int<1> : !s32i loc(#loc63)
            %85 = cir.unary(minus, %84) nsw : !s32i, !s32i loc(#loc63)
            %86 = cir.cmp(eq, %83, %85) : !s32i, !cir.bool loc(#loc241)
            cir.if %86 {
              cir.break loc(#loc65)
            } loc(#loc242)
          } loc(#loc240)
          %30 = cir.cast(bitcast, %3 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc243)
          %31 = cir.const #cir.int<0> : !s32i loc(#loc68)
          %32 = cir.const #cir.int<16> : !u64i loc(#loc244)
          cir.libc.memset %32 bytes from %30 set to %31 : !cir.ptr<!void>, !s32i, !u64i loc(#loc245)
          %33 = cir.const #cir.int<2> : !s32i loc(#loc73)
          %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc73)
          %35 = cir.get_member %3[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
          cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc246)
          %36 = cir.const #cir.int<0> : !s32i loc(#loc76)
          %37 = cir.cast(integral, %36 : !s32i), !u32i loc(#loc76)
          %38 = cir.get_member %3[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc77)
          %39 = cir.get_member %38[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc78)
          cir.store %37, %39 : !u32i, !cir.ptr<!u32i> loc(#loc247)
          %40 = cir.const #cir.int<27015> : !s32i loc(#loc80)
          %41 = cir.cast(integral, %40 : !s32i), !u16i loc(#loc80)
          %42 = cir.call @htons(%41) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc81)
          %43 = cir.get_member %3[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
          cir.store %42, %43 : !u16i, !cir.ptr<!u16i> loc(#loc248)
          cir.scope {
            %83 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc87)
            %84 = cir.cast(bitcast, %3 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc250)
            %85 = cir.const #cir.int<16> : !u64i loc(#loc251)
            %86 = cir.cast(integral, %85 : !u64i), !u32i loc(#loc251)
            %87 = cir.call @bind(%83, %84, %86) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc92)
            %88 = cir.const #cir.int<1> : !s32i loc(#loc93)
            %89 = cir.unary(minus, %88) nsw : !s32i, !s32i loc(#loc93)
            %90 = cir.cmp(eq, %87, %89) : !s32i, !cir.bool loc(#loc252)
            cir.if %90 {
              cir.break loc(#loc95)
            } loc(#loc253)
          } loc(#loc249)
          cir.scope {
            %83 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc98)
            %84 = cir.const #cir.int<5> : !s32i loc(#loc99)
            %85 = cir.call @listen(%83, %84) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc100)
            %86 = cir.const #cir.int<1> : !s32i loc(#loc101)
            %87 = cir.unary(minus, %86) nsw : !s32i, !s32i loc(#loc101)
            %88 = cir.cmp(eq, %85, %87) : !s32i, !cir.bool loc(#loc255)
            cir.if %88 {
              cir.break loc(#loc103)
            } loc(#loc256)
          } loc(#loc254)
          %44 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc104)
          %45 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc105)
          %46 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc106)
          %47 = cir.call @accept(%44, %45, %46) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc107)
          cir.store %47, %6 : !s32i, !cir.ptr<!s32i> loc(#loc257)
          cir.scope {
            %83 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc112)
            %84 = cir.const #cir.int<1> : !s32i loc(#loc113)
            %85 = cir.unary(minus, %84) nsw : !s32i, !s32i loc(#loc113)
            %86 = cir.cmp(eq, %83, %85) : !s32i, !cir.bool loc(#loc259)
            cir.if %86 {
              cir.break loc(#loc115)
            } loc(#loc260)
          } loc(#loc258)
          %48 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc116)
          %49 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
          %50 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc118)
          %51 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %50 : !u64i), !cir.ptr<!s8i> loc(#loc119)
          %52 = cir.cast(bitcast, %51 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc261)
          %53 = cir.const #cir.int<1> : !u64i loc(#loc262)
          %54 = cir.const #cir.int<100> : !s32i loc(#loc124)
          %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc124)
          %56 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc125)
          %57 = cir.binop(sub, %55, %56) : !u64i loc(#loc263)
          %58 = cir.const #cir.int<1> : !s32i loc(#loc126)
          %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc126)
          %60 = cir.binop(sub, %57, %59) : !u64i loc(#loc264)
          %61 = cir.binop(mul, %53, %60) : !u64i loc(#loc265)
          %62 = cir.const #cir.int<0> : !s32i loc(#loc128)
          %63 = cir.call @recv(%48, %52, %61, %62) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc129)
          %64 = cir.cast(integral, %63 : !s64i), !s32i loc(#loc129)
          cir.store %64, %2 : !s32i, !cir.ptr<!s32i> loc(#loc266)
          cir.scope {
            %83 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc134)
            %84 = cir.const #cir.int<1> : !s32i loc(#loc135)
            %85 = cir.unary(minus, %84) nsw : !s32i, !s32i loc(#loc135)
            %86 = cir.cmp(eq, %83, %85) : !s32i, !cir.bool loc(#loc268)
            %87 = cir.ternary(%86, true {
              %88 = cir.const #true loc(#loc136)
              cir.yield %88 : !cir.bool loc(#loc136)
            }, false {
              %88 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc137)
              %89 = cir.const #cir.int<0> : !s32i loc(#loc138)
              %90 = cir.cmp(eq, %88, %89) : !s32i, !cir.bool loc(#loc269)
              %91 = cir.ternary(%90, true {
                %92 = cir.const #true loc(#loc136)
                cir.yield %92 : !cir.bool loc(#loc136)
              }, false {
                %92 = cir.const #false loc(#loc136)
                cir.yield %92 : !cir.bool loc(#loc136)
              }) : (!cir.bool) -> !cir.bool loc(#loc136)
              cir.yield %91 : !cir.bool loc(#loc136)
            }) : (!cir.bool) -> !cir.bool loc(#loc136)
            cir.if %87 {
              cir.break loc(#loc140)
            } loc(#loc270)
          } loc(#loc267)
          %65 = cir.const #cir.int<0> : !s32i loc(#loc141)
          %66 = cir.cast(integral, %65 : !s32i), !s8i loc(#loc141)
          %67 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
          %68 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc143)
          %69 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc144)
          %70 = cir.cast(integral, %69 : !s32i), !u64i loc(#loc144)
          %71 = cir.const #cir.int<1> : !u64i loc(#loc271)
          %72 = cir.binop(div, %70, %71) : !u64i loc(#loc272)
          %73 = cir.binop(add, %68, %72) : !u64i loc(#loc273)
          %74 = cir.ptr_stride(%67 : !cir.ptr<!s8i>, %73 : !u64i), !cir.ptr<!s8i> loc(#loc147)
          cir.store %66, %74 : !s8i, !cir.ptr<!s8i> loc(#loc274)
          %75 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc148)
          %76 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
          %77 = cir.const #cir.int<13> : !s32i loc(#loc150)
          %78 = cir.call @strchr(%76, %77) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc148)
          cir.store %78, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc275)
          cir.scope {
            %83 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
            %84 = cir.cast(ptr_to_bool, %83 : !cir.ptr<!s8i>), !cir.bool loc(#loc155)
            cir.if %84 {
              %85 = cir.const #cir.int<0> : !s32i loc(#loc157)
              %86 = cir.cast(integral, %85 : !s32i), !s8i loc(#loc157)
              %87 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
              cir.store %86, %87 : !s8i, !cir.ptr<!s8i> loc(#loc278)
            } loc(#loc277)
          } loc(#loc276)
          %79 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc160)
          %80 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
          %81 = cir.const #cir.int<10> : !s32i loc(#loc162)
          %82 = cir.call @strchr(%80, %81) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc160)
          cir.store %82, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc279)
          cir.scope {
            %83 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
            %84 = cir.cast(ptr_to_bool, %83 : !cir.ptr<!s8i>), !cir.bool loc(#loc167)
            cir.if %84 {
              %85 = cir.const #cir.int<0> : !s32i loc(#loc169)
              %86 = cir.cast(integral, %85 : !s32i), !s8i loc(#loc169)
              %87 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
              cir.store %86, %87 : !s8i, !cir.ptr<!s8i> loc(#loc282)
            } loc(#loc281)
          } loc(#loc280)
        } loc(#loc238)
        cir.yield loc(#loc51)
      } while {
        %26 = cir.const #cir.int<0> : !s32i loc(#loc172)
        %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc172)
        cir.condition(%27) loc(#loc172)
      } loc(#loc237)
    } loc(#loc237)
    cir.scope {
      %26 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc175)
      %27 = cir.const #cir.int<1> : !s32i loc(#loc176)
      %28 = cir.unary(minus, %27) nsw : !s32i, !s32i loc(#loc176)
      %29 = cir.cmp(ne, %26, %28) : !s32i, !cir.bool loc(#loc284)
      cir.if %29 {
        %30 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc178)
        %31 = cir.call @close(%30) : (!s32i) -> !s32i loc(#loc179)
      } loc(#loc285)
    } loc(#loc283)
    cir.scope {
      %26 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc182)
      %27 = cir.const #cir.int<1> : !s32i loc(#loc183)
      %28 = cir.unary(minus, %27) nsw : !s32i, !s32i loc(#loc183)
      %29 = cir.cmp(ne, %26, %28) : !s32i, !cir.bool loc(#loc287)
      cir.if %29 {
        %30 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc185)
        %31 = cir.call @close(%30) : (!s32i) -> !s32i loc(#loc186)
      } loc(#loc288)
    } loc(#loc286)
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc25)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc25)
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc187)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc187)
    %21 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc26)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc26)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc188)
    %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc189)
    %25 = cir.call @execlp(%18, %20, %22, %23, %24) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc190)
    cir.return loc(#loc28)
  } loc(#loc227)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_execlp_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc290)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc193)
    cir.return loc(#loc192)
  } loc(#loc289)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc291)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc197)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc293)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc215)
    %2 = cir.get_global @__const.goodG2B.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc215)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc215)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc202)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc294)
    cir.goto "source" loc(#loc295)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc206)
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc207)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc208)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc197)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc197)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc207)
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc209)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc209)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc210)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc210)
    %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc211)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc211)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc212)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc213)
    %17 = cir.call @execlp(%10, %12, %14, %15, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc214)
    cir.return loc(#loc199)
  } loc(#loc292)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":165:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":165:28)
#loc3 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":68:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":68:28)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc9 = loc("/usr/include/netinet/in.h":402:1)
#loc10 = loc("/usr/include/netinet/in.h":403:40)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc15 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc17 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc18 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc19 = loc("/usr/include/string.h":246:1)
#loc20 = loc("/usr/include/string.h":247:33)
#loc21 = loc("/usr/include/unistd.h":358:1)
#loc22 = loc("/usr/include/unistd.h":358:27)
#loc23 = loc("/usr/include/unistd.h":605:1)
#loc24 = loc("/usr/include/unistd.h":606:14)
#loc25 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":154:12)
#loc26 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":154:38)
#loc27 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":65:1)
#loc28 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":155:1)
#loc29 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":67:5)
#loc30 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":67:12)
#loc31 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":77:9)
#loc32 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":77:13)
#loc33 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":78:9)
#loc34 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":78:28)
#loc35 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":79:9)
#loc36 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":79:15)
#loc37 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":80:9)
#loc38 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":80:31)
#loc39 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":81:9)
#loc40 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":81:31)
#loc41 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":82:9)
#loc42 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":82:37)
#loc43 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":69:12)
#loc44 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":69:5)
#loc45 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":70:5)
#loc46 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":70:10)
#loc47 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":71:1)
#loc48 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":82:26)
#loc49 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":82:33)
#loc50 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":83:9)
#loc51 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":135:17)
#loc52 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":84:9)
#loc53 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":134:9)
#loc54 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":93:35)
#loc55 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":93:44)
#loc56 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":93:57)
#loc57 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":93:28)
#loc58 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":93:13)
#loc59 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":93:68)
#loc60 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":94:13)
#loc61 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":97:13)
#loc62 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":94:17)
#loc63 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":94:33)
#loc64 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":95:13)
#loc65 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":96:17)
#loc66 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":98:20)
#loc67 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":98:21)
#loc68 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":98:30)
#loc69 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":98:33)
#loc70 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":98:47)
#loc71 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":98:13)
#loc72 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":98:48)
#loc73 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":99:34)
#loc74 = loc("/usr/include/netinet/in.h":249:5)
#loc75 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":99:13)
#loc76 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":100:39)
#loc77 = loc("/usr/include/netinet/in.h":251:20)
#loc78 = loc("/usr/include/netinet/in.h":33:15)
#loc79 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":100:13)
#loc80 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":101:38)
#loc81 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":101:32)
#loc82 = loc("/usr/include/netinet/in.h":250:15)
#loc83 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":101:13)
#loc84 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":101:46)
#loc85 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":102:13)
#loc86 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":105:13)
#loc87 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":102:22)
#loc88 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":102:54)
#loc89 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":102:55)
#loc90 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":102:64)
#loc91 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":102:78)
#loc92 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":102:17)
#loc93 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":102:84)
#loc94 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":103:13)
#loc95 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":104:17)
#loc96 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":106:13)
#loc97 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":109:13)
#loc98 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":106:24)
#loc99 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":106:38)
#loc100 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":106:17)
#loc101 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":106:57)
#loc102 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":107:13)
#loc103 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":108:17)
#loc104 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":110:35)
#loc105 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":110:49)
#loc106 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":110:55)
#loc107 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":110:28)
#loc108 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":110:13)
#loc109 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":110:59)
#loc110 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":111:13)
#loc111 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":114:13)
#loc112 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":111:17)
#loc113 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":111:33)
#loc114 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":112:13)
#loc115 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":113:17)
#loc116 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":116:31)
#loc117 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":116:54)
#loc118 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":116:61)
#loc119 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":116:59)
#loc120 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":116:45)
#loc121 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":116:68)
#loc122 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":116:71)
#loc123 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":116:82)
#loc124 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":116:87)
#loc125 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":116:93)
#loc126 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":116:103)
#loc127 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":116:104)
#loc128 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":116:107)
#loc129 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":116:26)
#loc130 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":116:13)
#loc131 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":116:108)
#loc132 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":117:13)
#loc133 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":120:13)
#loc134 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":117:17)
#loc135 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":117:31)
#loc136 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":117:44)
#loc137 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":117:47)
#loc138 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":117:61)
#loc139 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":118:13)
#loc140 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":119:17)
#loc141 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":122:57)
#loc142 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":122:13)
#loc143 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":122:18)
#loc144 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":122:28)
#loc145 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":122:41)
#loc146 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":122:52)
#loc147 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":122:53)
#loc148 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":124:23)
#loc149 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":124:30)
#loc150 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":124:36)
#loc151 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":124:13)
#loc152 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":124:40)
#loc153 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":125:13)
#loc154 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":128:13)
#loc155 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":125:17)
#loc156 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":126:13)
#loc157 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":127:28)
#loc158 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":127:18)
#loc159 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":127:17)
#loc160 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":129:23)
#loc161 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":129:30)
#loc162 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":129:36)
#loc163 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":129:13)
#loc164 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":129:40)
#loc165 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":130:13)
#loc166 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":133:13)
#loc167 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":130:17)
#loc168 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":131:13)
#loc169 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":132:28)
#loc170 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":132:18)
#loc171 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":132:17)
#loc172 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":135:16)
#loc173 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":136:9)
#loc174 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":139:9)
#loc175 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":136:13)
#loc176 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":136:29)
#loc177 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":137:9)
#loc178 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":138:26)
#loc179 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":138:13)
#loc180 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":140:9)
#loc181 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":143:9)
#loc182 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":140:13)
#loc183 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":140:29)
#loc184 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":141:9)
#loc185 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":142:26)
#loc186 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":142:13)
#loc187 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":154:25)
#loc188 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":154:52)
#loc189 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":154:66)
#loc190 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":154:5)
#loc191 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":177:1)
#loc192 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":180:1)
#loc193 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":179:5)
#loc194 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":179:13)
#loc195 = loc("/usr/include/string.h":149:1)
#loc196 = loc("/usr/include/string.h":150:14)
#loc197 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":170:18)
#loc198 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":162:1)
#loc199 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":175:1)
#loc200 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":164:5)
#loc201 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":164:12)
#loc202 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":166:12)
#loc203 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":166:5)
#loc204 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":167:5)
#loc205 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":167:10)
#loc206 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":168:1)
#loc207 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":170:5)
#loc208 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":170:12)
#loc209 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":174:12)
#loc210 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":174:25)
#loc211 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":174:38)
#loc212 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":174:52)
#loc213 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":174:66)
#loc214 = loc("CWE78_OS_Command_Injection__char_listen_socket_execlp_18.c":174:5)
#loc215 = loc(fused[#loc1, #loc2])
#loc216 = loc(fused[#loc3, #loc4])
#loc217 = loc(fused[#loc5, #loc6])
#loc218 = loc(fused[#loc7, #loc8])
#loc219 = loc(fused[#loc9, #loc10])
#loc220 = loc(fused[#loc11, #loc12])
#loc221 = loc(fused[#loc13, #loc14])
#loc222 = loc(fused[#loc15, #loc16])
#loc223 = loc(fused[#loc17, #loc18])
#loc224 = loc(fused[#loc19, #loc20])
#loc225 = loc(fused[#loc21, #loc22])
#loc226 = loc(fused[#loc23, #loc24])
#loc227 = loc(fused[#loc27, #loc28])
#loc228 = loc(fused[#loc29, #loc30])
#loc229 = loc(fused[#loc31, #loc32])
#loc230 = loc(fused[#loc33, #loc34])
#loc231 = loc(fused[#loc35, #loc36])
#loc232 = loc(fused[#loc37, #loc38])
#loc233 = loc(fused[#loc39, #loc40])
#loc234 = loc(fused[#loc41, #loc42])
#loc235 = loc(fused[#loc44, #loc43])
#loc236 = loc(fused[#loc45, #loc46])
#loc237 = loc(fused[#loc50, #loc51])
#loc238 = loc(fused[#loc52, #loc53])
#loc239 = loc(fused[#loc58, #loc59])
#loc240 = loc(fused[#loc60, #loc61])
#loc241 = loc(fused[#loc62, #loc63])
#loc242 = loc(fused[#loc64, #loc61])
#loc243 = loc(fused[#loc66, #loc67])
#loc244 = loc(fused[#loc69, #loc70])
#loc245 = loc(fused[#loc71, #loc72])
#loc246 = loc(fused[#loc75, #loc73])
#loc247 = loc(fused[#loc79, #loc76])
#loc248 = loc(fused[#loc83, #loc84])
#loc249 = loc(fused[#loc85, #loc86])
#loc250 = loc(fused[#loc88, #loc89])
#loc251 = loc(fused[#loc90, #loc91])
#loc252 = loc(fused[#loc92, #loc93])
#loc253 = loc(fused[#loc94, #loc86])
#loc254 = loc(fused[#loc96, #loc97])
#loc255 = loc(fused[#loc100, #loc101])
#loc256 = loc(fused[#loc102, #loc97])
#loc257 = loc(fused[#loc108, #loc109])
#loc258 = loc(fused[#loc110, #loc111])
#loc259 = loc(fused[#loc112, #loc113])
#loc260 = loc(fused[#loc114, #loc111])
#loc261 = loc(fused[#loc120, #loc121])
#loc262 = loc(fused[#loc122, #loc123])
#loc263 = loc(fused[#loc124, #loc125])
#loc264 = loc(fused[#loc124, #loc126])
#loc265 = loc(fused[#loc122, #loc127])
#loc266 = loc(fused[#loc130, #loc131])
#loc267 = loc(fused[#loc132, #loc133])
#loc268 = loc(fused[#loc134, #loc135])
#loc269 = loc(fused[#loc137, #loc138])
#loc270 = loc(fused[#loc139, #loc133])
#loc271 = loc(fused[#loc145, #loc146])
#loc272 = loc(fused[#loc144, #loc146])
#loc273 = loc(fused[#loc143, #loc146])
#loc274 = loc(fused[#loc142, #loc141])
#loc275 = loc(fused[#loc151, #loc152])
#loc276 = loc(fused[#loc153, #loc154])
#loc277 = loc(fused[#loc156, #loc154])
#loc278 = loc(fused[#loc159, #loc157])
#loc279 = loc(fused[#loc163, #loc164])
#loc280 = loc(fused[#loc165, #loc166])
#loc281 = loc(fused[#loc168, #loc166])
#loc282 = loc(fused[#loc171, #loc169])
#loc283 = loc(fused[#loc173, #loc174])
#loc284 = loc(fused[#loc175, #loc176])
#loc285 = loc(fused[#loc177, #loc174])
#loc286 = loc(fused[#loc180, #loc181])
#loc287 = loc(fused[#loc182, #loc183])
#loc288 = loc(fused[#loc184, #loc181])
#loc289 = loc(fused[#loc191, #loc192])
#loc290 = loc(fused[#loc193, #loc194])
#loc291 = loc(fused[#loc195, #loc196])
#loc292 = loc(fused[#loc198, #loc199])
#loc293 = loc(fused[#loc200, #loc201])
#loc294 = loc(fused[#loc203, #loc202])
#loc295 = loc(fused[#loc204, #loc205])
