!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc74 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":174:10)
#loc75 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":174:14)
#loc76 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":174:20)
#loc77 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":174:32)
#loc302 = loc(fused[#loc74, #loc75])
#loc303 = loc(fused[#loc76, #loc77])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_char_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc272)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc273)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc274)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc275)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_char_06_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc277)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc278)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc17)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc18)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc280)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc20)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc21)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc21)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc282)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc283)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc284)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc285)
        cir.scope {
          %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
          %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
          %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc29)
          %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!s8i>, !cir.bool loc(#loc287)
          cir.if %32 {
            %33 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc31)
            %34 = cir.const #cir.int<1> : !s32i loc(#loc32)
            %35 = cir.unary(minus, %34) : !s32i, !s32i loc(#loc33)
            cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
          } loc(#loc288)
        } loc(#loc286)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc34)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc35)
        %15 = cir.const #cir.int<100> : !s32i loc(#loc36)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc37)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc36)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc36)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc289)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc40)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc40)
        %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
        %22 = cir.const #cir.int<100> : !s32i loc(#loc42)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc43)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc42)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc44)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc290)
        %26 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc45)
        %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
        %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc46)
        cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc45)
      } loc(#loc281)
    } loc(#loc279)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc49)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc50)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc292)
      cir.if %4 {
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc53)
      } loc(#loc293)
    } loc(#loc291)
    cir.return loc(#loc10)
  } loc(#loc276)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_char_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc295)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc56)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc296)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc297)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc298)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc62)
    cir.return loc(#loc55)
  } loc(#loc294)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc299)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc300)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc71)
  cir.func @main(%arg0: !s32i loc(fused[#loc74, #loc75]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc76, #loc77])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc302)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc303)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc73)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc78)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc78)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc79)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc80)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc80)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc81)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc68)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %8 = cir.get_global @CWE416_Use_After_Free__malloc_free_char_06_good : !cir.ptr<!cir.func<!void ()>> loc(#loc304)
    cir.call @CWE416_Use_After_Free__malloc_free_char_06_good() : () -> () loc(#loc83)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc69)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc70)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %13 = cir.get_global @CWE416_Use_After_Free__malloc_free_char_06_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc305)
    cir.call @CWE416_Use_After_Free__malloc_free_char_06_bad() : () -> () loc(#loc87)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc71)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc90)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc306)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc306)
    cir.return %17 : !s32i loc(#loc306)
  } loc(#loc301)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc92)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc308)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc97)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc309)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc101)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc102)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc311)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc104)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc105)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc105)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc313)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc314)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc104)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc315)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc316)
        cir.scope {
          %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
          %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc113)
          %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc113)
          %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!s8i>, !cir.bool loc(#loc318)
          cir.if %32 {
            %33 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc115)
            %34 = cir.const #cir.int<1> : !s32i loc(#loc116)
            %35 = cir.unary(minus, %34) : !s32i, !s32i loc(#loc117)
            cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc115)
          } loc(#loc319)
        } loc(#loc317)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc118)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc119)
        %15 = cir.const #cir.int<100> : !s32i loc(#loc120)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc121)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc120)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc120)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc320)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc124)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc124)
        %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
        %22 = cir.const #cir.int<100> : !s32i loc(#loc126)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc127)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc126)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc128)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc321)
        %26 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc129)
        %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
        %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc130)
        cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc129)
      } loc(#loc312)
    } loc(#loc310)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc133)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc134)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc323)
      cir.if %4 {
        %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc92)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc92)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc138)
      } else {
      } loc(#loc324)
    } loc(#loc322)
    cir.return loc(#loc94)
  } loc(#loc307)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc326)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc143)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc327)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc147)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc148)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc329)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc150)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc151)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc151)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc331)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc332)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc150)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc333)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc334)
        cir.scope {
          %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
          %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc159)
          %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc159)
          %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!s8i>, !cir.bool loc(#loc336)
          cir.if %32 {
            %33 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc161)
            %34 = cir.const #cir.int<1> : !s32i loc(#loc162)
            %35 = cir.unary(minus, %34) : !s32i, !s32i loc(#loc163)
            cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc161)
          } loc(#loc337)
        } loc(#loc335)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc164)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc165)
        %15 = cir.const #cir.int<100> : !s32i loc(#loc166)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc167)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc166)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc166)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc338)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc170)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc170)
        %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc171)
        %22 = cir.const #cir.int<100> : !s32i loc(#loc172)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc173)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc172)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc174)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc339)
        %26 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc175)
        %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
        %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc176)
        cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc175)
      } loc(#loc330)
    } loc(#loc328)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc179)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc180)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc341)
      cir.if %4 {
      } loc(#loc342)
    } loc(#loc340)
    cir.return loc(#loc140)
  } loc(#loc325)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc344)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc186)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc345)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc190)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc191)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc347)
      cir.if %4 {
        %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc195)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc195)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc196)
      } else {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc197)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc198)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc198)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc349)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc350)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc197)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc351)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc352)
        cir.scope {
          %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc205)
          %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc206)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc206)
          %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc354)
          cir.if %29 {
            %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc208)
            %31 = cir.const #cir.int<1> : !s32i loc(#loc209)
            %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc210)
            cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc208)
          } loc(#loc355)
        } loc(#loc353)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc211)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc211)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc212)
        %15 = cir.const #cir.int<100> : !s32i loc(#loc213)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc214)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc213)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc213)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc356)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc217)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc217)
        %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc218)
        %22 = cir.const #cir.int<100> : !s32i loc(#loc219)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc220)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc219)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc221)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc357)
      } loc(#loc348)
    } loc(#loc346)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc224)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc225)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc359)
      cir.if %4 {
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc227)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc228)
      } loc(#loc360)
    } loc(#loc358)
    cir.return loc(#loc183)
  } loc(#loc343)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc362)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc233)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc363)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc237)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc238)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc365)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc240)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc241)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc241)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc367)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc368)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc240)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc369)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc370)
        cir.scope {
          %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc248)
          %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc249)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc249)
          %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc372)
          cir.if %29 {
            %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc251)
            %31 = cir.const #cir.int<1> : !s32i loc(#loc252)
            %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc253)
            cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc251)
          } loc(#loc373)
        } loc(#loc371)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc254)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc254)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc255)
        %15 = cir.const #cir.int<100> : !s32i loc(#loc256)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc257)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc256)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc256)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc374)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc260)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc260)
        %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc261)
        %22 = cir.const #cir.int<100> : !s32i loc(#loc262)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc263)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc262)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc264)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc375)
      } loc(#loc366)
    } loc(#loc364)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc267)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc268)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc377)
      cir.if %4 {
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc270)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc271)
      } loc(#loc378)
    } loc(#loc376)
    cir.return loc(#loc230)
  } loc(#loc361)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_char_06.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":29:1)
#loc10 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":49:1)
#loc11 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":31:5)
#loc12 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":31:12)
#loc13 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":33:12)
#loc14 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":33:5)
#loc15 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":34:5)
#loc16 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":42:5)
#loc17 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":34:8)
#loc18 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":34:27)
#loc19 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":35:5)
#loc20 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":36:24)
#loc21 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":36:31)
#loc22 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":36:35)
#loc23 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":36:46)
#loc24 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":36:47)
#loc25 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":36:9)
#loc26 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":37:9)
#loc27 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":37:37)
#loc28 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":37:13)
#loc29 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":37:21)
#loc30 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":37:27)
#loc31 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":37:28)
#loc32 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":37:34)
#loc33 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":37:33)
#loc34 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":38:16)
#loc35 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":38:22)
#loc36 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":38:27)
#loc37 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":38:31)
#loc38 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":38:9)
#loc39 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":38:32)
#loc40 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":39:23)
#loc41 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":39:9)
#loc42 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":39:14)
#loc43 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":39:18)
#loc44 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":39:19)
#loc45 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":41:9)
#loc46 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":41:14)
#loc47 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":43:5)
#loc48 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":48:5)
#loc49 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":43:8)
#loc50 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":43:27)
#loc51 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":44:5)
#loc52 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":46:19)
#loc53 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":46:9)
#loc54 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":157:1)
#loc55 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":163:1)
#loc56 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":159:5)
#loc57 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":159:14)
#loc58 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":160:5)
#loc59 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":160:14)
#loc60 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":161:5)
#loc61 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":161:14)
#loc62 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":162:5)
#loc63 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":162:14)
#loc64 = loc("/usr/include/stdlib.h":575:1)
#loc65 = loc("/usr/include/stdlib.h":575:41)
#loc66 = loc("/usr/include/time.h":76:1)
#loc67 = loc("/usr/include/time.h":76:38)
#loc68 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":179:15)
#loc69 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":181:15)
#loc70 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":184:15)
#loc71 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":186:15)
#loc72 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":174:1)
#loc73 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":189:1)
#loc78 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":175:1)
#loc79 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":177:27)
#loc80 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":177:22)
#loc81 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":177:5)
#loc82 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":179:5)
#loc83 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":180:5)
#loc84 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":180:53)
#loc85 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":181:5)
#loc86 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":184:5)
#loc87 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":185:5)
#loc88 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":185:52)
#loc89 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":186:5)
#loc90 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":188:12)
#loc91 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":188:5)
#loc92 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":73:19)
#loc93 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":56:1)
#loc94 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":82:1)
#loc95 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":58:5)
#loc96 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":58:12)
#loc97 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":60:12)
#loc98 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":60:5)
#loc99 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":61:5)
#loc100 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":69:5)
#loc101 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":61:8)
#loc102 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":61:27)
#loc103 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":62:5)
#loc104 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":63:24)
#loc105 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":63:31)
#loc106 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":63:35)
#loc107 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":63:46)
#loc108 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":63:47)
#loc109 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":63:9)
#loc110 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":64:9)
#loc111 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":64:37)
#loc112 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":64:13)
#loc113 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":64:21)
#loc114 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":64:27)
#loc115 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":64:28)
#loc116 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":64:34)
#loc117 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":64:33)
#loc118 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":65:16)
#loc119 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":65:22)
#loc120 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":65:27)
#loc121 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":65:31)
#loc122 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":65:9)
#loc123 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":65:32)
#loc124 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":66:23)
#loc125 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":66:9)
#loc126 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":66:14)
#loc127 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":66:18)
#loc128 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":66:19)
#loc129 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":68:9)
#loc130 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":68:14)
#loc131 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":70:5)
#loc132 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":81:5)
#loc133 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":70:8)
#loc134 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":70:27)
#loc135 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":71:5)
#loc136 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":74:5)
#loc137 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":76:5)
#loc138 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":73:9)
#loc139 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":85:1)
#loc140 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":106:1)
#loc141 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":87:5)
#loc142 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":87:12)
#loc143 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":89:12)
#loc144 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":89:5)
#loc145 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":90:5)
#loc146 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":98:5)
#loc147 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":90:8)
#loc148 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":90:27)
#loc149 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":91:5)
#loc150 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":92:24)
#loc151 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":92:31)
#loc152 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":92:35)
#loc153 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":92:46)
#loc154 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":92:47)
#loc155 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":92:9)
#loc156 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":93:9)
#loc157 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":93:37)
#loc158 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":93:13)
#loc159 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":93:21)
#loc160 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":93:27)
#loc161 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":93:28)
#loc162 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":93:34)
#loc163 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":93:33)
#loc164 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":94:16)
#loc165 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":94:22)
#loc166 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":94:27)
#loc167 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":94:31)
#loc168 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":94:9)
#loc169 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":94:32)
#loc170 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":95:23)
#loc171 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":95:9)
#loc172 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":95:14)
#loc173 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":95:18)
#loc174 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":95:19)
#loc175 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":97:9)
#loc176 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":97:14)
#loc177 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":99:5)
#loc178 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":105:5)
#loc179 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":99:8)
#loc180 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":99:27)
#loc181 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":100:5)
#loc182 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":109:1)
#loc183 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":133:1)
#loc184 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":111:5)
#loc185 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":111:12)
#loc186 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":113:12)
#loc187 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":113:5)
#loc188 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":114:5)
#loc189 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":126:5)
#loc190 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":114:8)
#loc191 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":114:27)
#loc192 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":115:5)
#loc193 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":118:5)
#loc194 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":120:5)
#loc195 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":117:19)
#loc196 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":117:9)
#loc197 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":121:24)
#loc198 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":121:31)
#loc199 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":121:35)
#loc200 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":121:46)
#loc201 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":121:47)
#loc202 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":121:9)
#loc203 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":122:9)
#loc204 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":122:37)
#loc205 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":122:13)
#loc206 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":122:21)
#loc207 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":122:27)
#loc208 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":122:28)
#loc209 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":122:34)
#loc210 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":122:33)
#loc211 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":123:16)
#loc212 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":123:22)
#loc213 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":123:27)
#loc214 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":123:31)
#loc215 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":123:9)
#loc216 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":123:32)
#loc217 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":124:23)
#loc218 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":124:9)
#loc219 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":124:14)
#loc220 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":124:18)
#loc221 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":124:19)
#loc222 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":127:5)
#loc223 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":132:5)
#loc224 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":127:8)
#loc225 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":127:27)
#loc226 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":128:5)
#loc227 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":130:19)
#loc228 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":130:9)
#loc229 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":136:1)
#loc230 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":155:1)
#loc231 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":138:5)
#loc232 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":138:12)
#loc233 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":140:12)
#loc234 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":140:5)
#loc235 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":141:5)
#loc236 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":148:5)
#loc237 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":141:8)
#loc238 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":141:27)
#loc239 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":142:5)
#loc240 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":143:24)
#loc241 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":143:31)
#loc242 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":143:35)
#loc243 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":143:46)
#loc244 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":143:47)
#loc245 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":143:9)
#loc246 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":144:9)
#loc247 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":144:37)
#loc248 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":144:13)
#loc249 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":144:21)
#loc250 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":144:27)
#loc251 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":144:28)
#loc252 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":144:34)
#loc253 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":144:33)
#loc254 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":145:16)
#loc255 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":145:22)
#loc256 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":145:27)
#loc257 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":145:31)
#loc258 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":145:9)
#loc259 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":145:32)
#loc260 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":146:23)
#loc261 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":146:9)
#loc262 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":146:14)
#loc263 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":146:18)
#loc264 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":146:19)
#loc265 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":149:5)
#loc266 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":154:5)
#loc267 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":149:8)
#loc268 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":149:27)
#loc269 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":150:5)
#loc270 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":152:19)
#loc271 = loc("CWE416_Use_After_Free__malloc_free_char_06.c":152:9)
#loc272 = loc(fused[#loc1, #loc2])
#loc273 = loc(fused[#loc3, #loc4])
#loc274 = loc(fused[#loc5, #loc6])
#loc275 = loc(fused[#loc7, #loc8])
#loc276 = loc(fused[#loc9, #loc10])
#loc277 = loc(fused[#loc11, #loc12])
#loc278 = loc(fused[#loc14, #loc13])
#loc279 = loc(fused[#loc15, #loc16])
#loc280 = loc(fused[#loc17, #loc18])
#loc281 = loc(fused[#loc19, #loc16])
#loc282 = loc(fused[#loc22, #loc23])
#loc283 = loc(fused[#loc21, #loc23])
#loc284 = loc(fused[#loc20, #loc24])
#loc285 = loc(fused[#loc25, #loc24])
#loc286 = loc(fused[#loc26, #loc27])
#loc287 = loc(fused[#loc28, #loc29])
#loc288 = loc(fused[#loc30, #loc27])
#loc289 = loc(fused[#loc38, #loc39])
#loc290 = loc(fused[#loc41, #loc40])
#loc291 = loc(fused[#loc47, #loc48])
#loc292 = loc(fused[#loc49, #loc50])
#loc293 = loc(fused[#loc51, #loc48])
#loc294 = loc(fused[#loc54, #loc55])
#loc295 = loc(fused[#loc56, #loc57])
#loc296 = loc(fused[#loc58, #loc59])
#loc297 = loc(fused[#loc60, #loc61])
#loc298 = loc(fused[#loc62, #loc63])
#loc299 = loc(fused[#loc64, #loc65])
#loc300 = loc(fused[#loc66, #loc67])
#loc301 = loc(fused[#loc72, #loc73])
#loc304 = loc(fused[#loc83, #loc84])
#loc305 = loc(fused[#loc87, #loc88])
#loc306 = loc(fused[#loc91, #loc90])
#loc307 = loc(fused[#loc93, #loc94])
#loc308 = loc(fused[#loc95, #loc96])
#loc309 = loc(fused[#loc98, #loc97])
#loc310 = loc(fused[#loc99, #loc100])
#loc311 = loc(fused[#loc101, #loc102])
#loc312 = loc(fused[#loc103, #loc100])
#loc313 = loc(fused[#loc106, #loc107])
#loc314 = loc(fused[#loc105, #loc107])
#loc315 = loc(fused[#loc104, #loc108])
#loc316 = loc(fused[#loc109, #loc108])
#loc317 = loc(fused[#loc110, #loc111])
#loc318 = loc(fused[#loc112, #loc113])
#loc319 = loc(fused[#loc114, #loc111])
#loc320 = loc(fused[#loc122, #loc123])
#loc321 = loc(fused[#loc125, #loc124])
#loc322 = loc(fused[#loc131, #loc132])
#loc323 = loc(fused[#loc133, #loc134])
#loc324 = loc(fused[#loc135, #loc136, #loc137, #loc132])
#loc325 = loc(fused[#loc139, #loc140])
#loc326 = loc(fused[#loc141, #loc142])
#loc327 = loc(fused[#loc144, #loc143])
#loc328 = loc(fused[#loc145, #loc146])
#loc329 = loc(fused[#loc147, #loc148])
#loc330 = loc(fused[#loc149, #loc146])
#loc331 = loc(fused[#loc152, #loc153])
#loc332 = loc(fused[#loc151, #loc153])
#loc333 = loc(fused[#loc150, #loc154])
#loc334 = loc(fused[#loc155, #loc154])
#loc335 = loc(fused[#loc156, #loc157])
#loc336 = loc(fused[#loc158, #loc159])
#loc337 = loc(fused[#loc160, #loc157])
#loc338 = loc(fused[#loc168, #loc169])
#loc339 = loc(fused[#loc171, #loc170])
#loc340 = loc(fused[#loc177, #loc178])
#loc341 = loc(fused[#loc179, #loc180])
#loc342 = loc(fused[#loc181, #loc178])
#loc343 = loc(fused[#loc182, #loc183])
#loc344 = loc(fused[#loc184, #loc185])
#loc345 = loc(fused[#loc187, #loc186])
#loc346 = loc(fused[#loc188, #loc189])
#loc347 = loc(fused[#loc190, #loc191])
#loc348 = loc(fused[#loc192, #loc193, #loc194, #loc189])
#loc349 = loc(fused[#loc199, #loc200])
#loc350 = loc(fused[#loc198, #loc200])
#loc351 = loc(fused[#loc197, #loc201])
#loc352 = loc(fused[#loc202, #loc201])
#loc353 = loc(fused[#loc203, #loc204])
#loc354 = loc(fused[#loc205, #loc206])
#loc355 = loc(fused[#loc207, #loc204])
#loc356 = loc(fused[#loc215, #loc216])
#loc357 = loc(fused[#loc218, #loc217])
#loc358 = loc(fused[#loc222, #loc223])
#loc359 = loc(fused[#loc224, #loc225])
#loc360 = loc(fused[#loc226, #loc223])
#loc361 = loc(fused[#loc229, #loc230])
#loc362 = loc(fused[#loc231, #loc232])
#loc363 = loc(fused[#loc234, #loc233])
#loc364 = loc(fused[#loc235, #loc236])
#loc365 = loc(fused[#loc237, #loc238])
#loc366 = loc(fused[#loc239, #loc236])
#loc367 = loc(fused[#loc242, #loc243])
#loc368 = loc(fused[#loc241, #loc243])
#loc369 = loc(fused[#loc240, #loc244])
#loc370 = loc(fused[#loc245, #loc244])
#loc371 = loc(fused[#loc246, #loc247])
#loc372 = loc(fused[#loc248, #loc249])
#loc373 = loc(fused[#loc250, #loc247])
#loc374 = loc(fused[#loc258, #loc259])
#loc375 = loc(fused[#loc261, #loc260])
#loc376 = loc(fused[#loc265, #loc266])
#loc377 = loc(fused[#loc267, #loc268])
#loc378 = loc(fused[#loc269, #loc266])
