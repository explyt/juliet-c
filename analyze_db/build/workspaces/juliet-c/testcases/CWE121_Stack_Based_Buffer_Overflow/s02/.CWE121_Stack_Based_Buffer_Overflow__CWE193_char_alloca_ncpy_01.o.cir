!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc63)
  cir.global "private" constant cir_private @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc64)
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc65)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc66)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc67)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc69)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc70)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc16)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc16)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc16)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc16)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc16)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc71)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc16)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc16)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc70)
    %10 = cir.const #cir.int<10> : !s32i loc(#loc18)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %12 = cir.binop(add, %10, %11) nsw : !s32i loc(#loc18)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc18)
    %14 = cir.const #cir.int<1> : !u64i loc(#loc18)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc18)
    %16 = cir.alloca !u8i, !cir.ptr<!u8i>, %15 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc18)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc18)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc18)
    cir.store %18, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc71)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
    cir.store %19, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc72)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc21)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc21)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc23)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc24)
    cir.store %21, %24 : !s8i, !cir.ptr<!s8i> loc(#loc73)
    cir.scope {
      %25 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc64)
      %26 = cir.get_global @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc64)
      cir.copy %26 to %25 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc64)
      %27 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc27)
      %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
      %29 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc29)
      %30 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc30)
      %31 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc31)
      %32 = cir.call @strlen(%31) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc30)
      %33 = cir.const #cir.int<1> : !s32i loc(#loc32)
      %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc32)
      %35 = cir.binop(add, %32, %34) : !u64i loc(#loc75)
      %36 = cir.call @strncpy(%28, %29, %35) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc27)
      %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
      cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc34)
    } loc(#loc74)
    cir.return loc(#loc12)
  } loc(#loc68)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc77)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc37)
    cir.return loc(#loc36)
  } loc(#loc76)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc79)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc80)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc44)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc44)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc44)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc44)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc44)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc81)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc44)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc44)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc80)
    %10 = cir.const #cir.int<10> : !s32i loc(#loc46)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc46)
    %12 = cir.binop(add, %10, %11) nsw : !s32i loc(#loc46)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc46)
    %14 = cir.const #cir.int<1> : !u64i loc(#loc46)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc46)
    %16 = cir.alloca !u8i, !cir.ptr<!u8i>, %15 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc46)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc46)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc46)
    cir.store %18, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc81)
    %19 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
    cir.store %19, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc82)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc49)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc49)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc52)
    cir.store %21, %24 : !s8i, !cir.ptr<!s8i> loc(#loc83)
    cir.scope {
      %25 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc63)
      %26 = cir.get_global @__const.goodG2B.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc63)
      cir.copy %26 to %25 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc63)
      %27 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc55)
      %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
      %29 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc57)
      %30 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc58)
      %31 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc59)
      %32 = cir.call @strlen(%31) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc58)
      %33 = cir.const #cir.int<1> : !s32i loc(#loc60)
      %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc60)
      %35 = cir.binop(add, %32, %34) : !u64i loc(#loc85)
      %36 = cir.call @strncpy(%28, %29, %35) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc55)
      %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
      cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    } loc(#loc84)
    cir.return loc(#loc40)
  } loc(#loc78)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":61:9)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":61:29)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":38:9)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":38:29)
#loc5 = loc("/usr/include/string.h":144:1)
#loc6 = loc("/usr/include/string.h":146:14)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":28:1)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":44:1)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":30:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":30:12)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":31:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":31:36)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":32:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":32:37)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":35:12)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":35:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":36:15)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":36:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":36:10)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":36:11)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":37:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":43:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":41:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":41:17)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":41:23)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":41:31)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":41:38)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":41:48)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":42:19)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":42:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":69:1)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":72:1)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":71:5)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":71:13)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":51:1)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":67:1)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":53:5)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":53:12)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":54:5)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":54:36)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":55:5)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":55:37)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":58:12)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":58:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":59:15)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":59:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":59:10)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":59:11)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":60:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":66:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":64:9)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":64:17)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":64:23)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":64:31)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":64:38)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":64:48)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":65:19)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_ncpy_01.c":65:9)
#loc63 = loc(fused[#loc1, #loc2])
#loc64 = loc(fused[#loc3, #loc4])
#loc65 = loc(fused[#loc5, #loc6])
#loc66 = loc(fused[#loc7, #loc8])
#loc67 = loc(fused[#loc9, #loc10])
#loc68 = loc(fused[#loc11, #loc12])
#loc69 = loc(fused[#loc13, #loc14])
#loc70 = loc(fused[#loc15, #loc16])
#loc71 = loc(fused[#loc17, #loc18])
#loc72 = loc(fused[#loc20, #loc19])
#loc73 = loc(fused[#loc22, #loc21])
#loc74 = loc(fused[#loc25, #loc26])
#loc75 = loc(fused[#loc30, #loc32])
#loc76 = loc(fused[#loc35, #loc36])
#loc77 = loc(fused[#loc37, #loc38])
#loc78 = loc(fused[#loc39, #loc40])
#loc79 = loc(fused[#loc41, #loc42])
#loc80 = loc(fused[#loc43, #loc44])
#loc81 = loc(fused[#loc45, #loc46])
#loc82 = loc(fused[#loc48, #loc47])
#loc83 = loc(fused[#loc50, #loc49])
#loc84 = loc(fused[#loc53, #loc54])
#loc85 = loc(fused[#loc58, #loc60])
