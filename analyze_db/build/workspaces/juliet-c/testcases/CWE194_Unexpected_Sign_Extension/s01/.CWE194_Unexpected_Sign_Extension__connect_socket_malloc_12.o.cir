!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s01/CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc235)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc236)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc237)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc238)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc239)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc240)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc241)
  cir.func private @close(!s32i) -> !s32i loc(#loc242)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc243)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc244)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc245)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc246)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc248)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc30)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc249)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc251)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc251)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc34)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc34)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc254)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["tempInt"] {alignment = 4 : i64} loc(#loc255)
          %9 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc256)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc257)
          %11 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc258)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc48)
          %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc48)
          cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc257)
          cir.scope {
            cir.do {
              cir.scope {
                %14 = cir.const #cir.int<2> : !s32i loc(#loc55)
                %15 = cir.const #cir.int<1> : !s32i loc(#loc56)
                %16 = cir.const #cir.int<6> : !s32i loc(#loc57)
                %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc58)
                cir.store %17, %10 : !s32i, !cir.ptr<!s32i> loc(#loc261)
                cir.scope {
                  %50 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc63)
                  %51 = cir.const #cir.int<1> : !s32i loc(#loc64)
                  %52 = cir.unary(minus, %51) nsw : !s32i, !s32i loc(#loc64)
                  %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc263)
                  cir.if %53 {
                    cir.break loc(#loc66)
                  } loc(#loc264)
                } loc(#loc262)
                %18 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc265)
                %19 = cir.const #cir.int<0> : !s32i loc(#loc69)
                %20 = cir.const #cir.int<16> : !u64i loc(#loc266)
                cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc267)
                %21 = cir.const #cir.int<2> : !s32i loc(#loc74)
                %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc74)
                %23 = cir.get_member %9[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
                cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc268)
                %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
                %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
                %26 = cir.call @inet_addr(%25) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc77)
                %27 = cir.get_member %9[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc78)
                %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc79)
                cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc269)
                %29 = cir.const #cir.int<27015> : !s32i loc(#loc82)
                %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc82)
                %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc83)
                %32 = cir.get_member %9[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc84)
                cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc270)
                cir.scope {
                  %50 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc89)
                  %51 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc272)
                  %52 = cir.const #cir.int<16> : !u64i loc(#loc273)
                  %53 = cir.cast(integral, %52 : !u64i), !u32i loc(#loc273)
                  %54 = cir.call @connect(%50, %51, %53) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc94)
                  %55 = cir.const #cir.int<1> : !s32i loc(#loc95)
                  %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc95)
                  %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc274)
                  cir.if %57 {
                    cir.break loc(#loc97)
                  } loc(#loc275)
                } loc(#loc271)
                %33 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc98)
                %34 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc99)
                %35 = cir.cast(bitcast, %34 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc99)
                %36 = cir.const #cir.int<8> : !s32i loc(#loc100)
                %37 = cir.const #cir.int<1> : !s32i loc(#loc101)
                %38 = cir.binop(sub, %36, %37) nsw : !s32i loc(#loc100)
                %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc100)
                %40 = cir.const #cir.int<0> : !s32i loc(#loc102)
                %41 = cir.call @recv(%33, %35, %39, %40) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc103)
                %42 = cir.cast(integral, %41 : !s64i), !s32i loc(#loc103)
                cir.store %42, %7 : !s32i, !cir.ptr<!s32i> loc(#loc276)
                cir.scope {
                  %50 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc108)
                  %51 = cir.const #cir.int<1> : !s32i loc(#loc109)
                  %52 = cir.unary(minus, %51) nsw : !s32i, !s32i loc(#loc109)
                  %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc278)
                  %54 = cir.ternary(%53, true {
                    %55 = cir.const #true loc(#loc110)
                    cir.yield %55 : !cir.bool loc(#loc110)
                  }, false {
                    %55 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc111)
                    %56 = cir.const #cir.int<0> : !s32i loc(#loc112)
                    %57 = cir.cmp(eq, %55, %56) : !s32i, !cir.bool loc(#loc279)
                    %58 = cir.ternary(%57, true {
                      %59 = cir.const #true loc(#loc110)
                      cir.yield %59 : !cir.bool loc(#loc110)
                    }, false {
                      %59 = cir.const #false loc(#loc110)
                      cir.yield %59 : !cir.bool loc(#loc110)
                    }) : (!cir.bool) -> !cir.bool loc(#loc110)
                    cir.yield %58 : !cir.bool loc(#loc110)
                  }) : (!cir.bool) -> !cir.bool loc(#loc110)
                  cir.if %54 {
                    cir.break loc(#loc114)
                  } loc(#loc280)
                } loc(#loc277)
                %43 = cir.const #cir.int<0> : !s32i loc(#loc115)
                %44 = cir.cast(integral, %43 : !s32i), !s8i loc(#loc115)
                %45 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc116)
                %46 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc117)
                %47 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %45 : !s32i), !cir.ptr<!s8i> loc(#loc117)
                cir.store %44, %47 : !s8i, !cir.ptr<!s8i> loc(#loc281)
                %48 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc118)
                %49 = cir.call @atoi(%48) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc119)
                cir.store %49, %8 : !s32i, !cir.ptr<!s32i> loc(#loc282)
                cir.scope {
                  %50 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc124)
                  %51 = cir.const #cir.int<32767> : !s32i loc(#loc125)
                  %52 = cir.cmp(gt, %50, %51) : !s32i, !cir.bool loc(#loc284)
                  %53 = cir.ternary(%52, true {
                    %54 = cir.const #true loc(#loc126)
                    cir.yield %54 : !cir.bool loc(#loc126)
                  }, false {
                    %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc127)
                    %55 = cir.const #cir.int<32767> : !s32i loc(#loc128)
                    %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc128)
                    %57 = cir.const #cir.int<1> : !s32i loc(#loc128)
                    %58 = cir.binop(sub, %56, %57) nsw : !s32i loc(#loc128)
                    %59 = cir.cmp(lt, %54, %58) : !s32i, !cir.bool loc(#loc285)
                    %60 = cir.ternary(%59, true {
                      %61 = cir.const #true loc(#loc126)
                      cir.yield %61 : !cir.bool loc(#loc126)
                    }, false {
                      %61 = cir.const #false loc(#loc126)
                      cir.yield %61 : !cir.bool loc(#loc126)
                    }) : (!cir.bool) -> !cir.bool loc(#loc126)
                    cir.yield %60 : !cir.bool loc(#loc126)
                  }) : (!cir.bool) -> !cir.bool loc(#loc126)
                  cir.if %53 {
                    %54 = cir.const #cir.int<1> : !s32i loc(#loc132)
                    %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc133)
                    %56 = cir.cast(integral, %55 : !s32i), !s16i loc(#loc133)
                    cir.store %56, %0 : !s16i, !cir.ptr<!s16i> loc(#loc287)
                  } else {
                    %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc135)
                    %55 = cir.cast(integral, %54 : !s32i), !s16i loc(#loc135)
                    cir.store %55, %0 : !s16i, !cir.ptr<!s16i> loc(#loc288)
                  } loc(#loc286)
                } loc(#loc283)
              } loc(#loc260)
              cir.yield loc(#loc52)
            } while {
              %14 = cir.const #cir.int<0> : !s32i loc(#loc137)
              %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc137)
              cir.condition(%15) loc(#loc137)
            } loc(#loc259)
          } loc(#loc259)
          cir.scope {
            %14 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc140)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc141)
            %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc141)
            %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc290)
            cir.if %17 {
              %18 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc143)
              %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc144)
            } loc(#loc291)
          } loc(#loc289)
        } loc(#loc253)
      } else {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc145)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc146)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc145)
        %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc145)
        cir.store %10, %0 : !s16i, !cir.ptr<!s16i> loc(#loc292)
      } loc(#loc252)
    } loc(#loc250)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc150)
      %4 = cir.cast(integral, %3 : !s16i), !s32i loc(#loc150)
      %5 = cir.const #cir.int<100> : !s32i loc(#loc151)
      %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc294)
      cir.if %6 {
        %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc296)
        %8 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc155)
        %9 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc156)
        %10 = cir.cast(integral, %9 : !s16i), !u64i loc(#loc156)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc155)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc297)
        cir.store %12, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc296)
        cir.scope {
          %33 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc160)
          %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc160)
          %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!s8i>, !cir.bool loc(#loc299)
          cir.if %36 {
            %37 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc162)
            %38 = cir.const #cir.int<1> : !s32i loc(#loc163)
            %39 = cir.unary(minus, %38) nsw : !s32i, !s32i loc(#loc164)
            cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc162)
          } loc(#loc300)
        } loc(#loc298)
        %13 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc165)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc166)
        %16 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc167)
        %17 = cir.cast(integral, %16 : !s16i), !s32i loc(#loc167)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc168)
        %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc167)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc167)
        cir.libc.memset %20 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc301)
        %21 = cir.const #cir.int<0> : !s32i loc(#loc171)
        %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc171)
        %23 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
        %24 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc173)
        %25 = cir.cast(integral, %24 : !s16i), !s32i loc(#loc173)
        %26 = cir.const #cir.int<1> : !s32i loc(#loc174)
        %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc173)
        %28 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc175)
        cir.store %22, %28 : !s8i, !cir.ptr<!s8i> loc(#loc302)
        %29 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
        cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc177)
        %30 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc178)
        %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
        %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc179)
        cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc178)
      } loc(#loc295)
    } loc(#loc293)
    cir.return loc(#loc27)
  } loc(#loc247)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc304)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc182)
    cir.return loc(#loc181)
  } loc(#loc303)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc306)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc188)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc188)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc307)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc309)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc309)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc192)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc192)
      cir.if %6 {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc197)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc198)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc197)
        %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc197)
        cir.store %10, %0 : !s16i, !cir.ptr<!s16i> loc(#loc311)
      } else {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc200)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc201)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc200)
        %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc200)
        cir.store %10, %0 : !s16i, !cir.ptr<!s16i> loc(#loc312)
      } loc(#loc310)
    } loc(#loc308)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc205)
      %4 = cir.cast(integral, %3 : !s16i), !s32i loc(#loc205)
      %5 = cir.const #cir.int<100> : !s32i loc(#loc206)
      %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc314)
      cir.if %6 {
        %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc316)
        %8 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc210)
        %9 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc211)
        %10 = cir.cast(integral, %9 : !s16i), !u64i loc(#loc211)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc210)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc317)
        cir.store %12, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc316)
        cir.scope {
          %33 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc214)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc215)
          %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc215)
          %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!s8i>, !cir.bool loc(#loc319)
          cir.if %36 {
            %37 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc217)
            %38 = cir.const #cir.int<1> : !s32i loc(#loc218)
            %39 = cir.unary(minus, %38) nsw : !s32i, !s32i loc(#loc219)
            cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc217)
          } loc(#loc320)
        } loc(#loc318)
        %13 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc220)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc220)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc221)
        %16 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc222)
        %17 = cir.cast(integral, %16 : !s16i), !s32i loc(#loc222)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc223)
        %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc222)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc222)
        cir.libc.memset %20 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc321)
        %21 = cir.const #cir.int<0> : !s32i loc(#loc226)
        %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc226)
        %23 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc227)
        %24 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc228)
        %25 = cir.cast(integral, %24 : !s16i), !s32i loc(#loc228)
        %26 = cir.const #cir.int<1> : !s32i loc(#loc229)
        %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc228)
        %28 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc230)
        cir.store %22, %28 : !s8i, !cir.ptr<!s8i> loc(#loc322)
        %29 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc231)
        cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc232)
        %30 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc233)
        %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc234)
        %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc234)
        cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc233)
      } loc(#loc315)
    } loc(#loc313)
    cir.return loc(#loc185)
  } loc(#loc305)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s01/CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":77:53)
#loc8 = loc("/usr/include/netinet/in.h":402:1)
#loc9 = loc("/usr/include/netinet/in.h":403:40)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc14 = loc("/usr/include/stdlib.h":105:1)
#loc15 = loc("/usr/include/stdlib.h":106:33)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("/usr/include/stdlib.h":672:1)
#loc19 = loc("/usr/include/stdlib.h":672:45)
#loc20 = loc("/usr/include/stdlib.h":756:1)
#loc21 = loc("/usr/include/stdlib.h":756:70)
#loc22 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc23 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc24 = loc("/usr/include/stdlib.h":687:1)
#loc25 = loc("/usr/include/stdlib.h":687:32)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":44:1)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":136:1)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":46:5)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":46:11)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":48:12)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":48:5)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":49:5)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":122:5)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":49:8)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":49:33)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":50:5)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":117:5)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":119:5)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":51:9)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":116:9)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":56:13)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":56:17)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":57:13)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":57:17)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":58:13)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":58:32)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":59:13)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":59:36)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":60:13)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":60:45)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":61:13)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":105:21)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":62:13)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":104:13)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":70:40)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":70:49)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":70:62)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":70:33)
#loc59 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":70:17)
#loc60 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":70:73)
#loc61 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":71:17)
#loc62 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":74:17)
#loc63 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":71:21)
#loc64 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":71:38)
#loc65 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":72:17)
#loc66 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":73:21)
#loc67 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":75:24)
#loc68 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":75:25)
#loc69 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":75:34)
#loc70 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":75:37)
#loc71 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":75:51)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":75:17)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":75:52)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":76:38)
#loc75 = loc("/usr/include/netinet/in.h":249:5)
#loc76 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":76:17)
#loc77 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":77:43)
#loc78 = loc("/usr/include/netinet/in.h":251:20)
#loc79 = loc("/usr/include/netinet/in.h":33:15)
#loc80 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":77:17)
#loc81 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":77:63)
#loc82 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":78:42)
#loc83 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":78:36)
#loc84 = loc("/usr/include/netinet/in.h":250:15)
#loc85 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":78:17)
#loc86 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":78:50)
#loc87 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":79:17)
#loc88 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":82:17)
#loc89 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":79:29)
#loc90 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":79:62)
#loc91 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":79:63)
#loc92 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":79:72)
#loc93 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":79:86)
#loc94 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":79:21)
#loc95 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":79:92)
#loc96 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":80:17)
#loc97 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":81:21)
#loc98 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":86:35)
#loc99 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":86:50)
#loc100 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":86:63)
#loc101 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":86:81)
#loc102 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":86:84)
#loc103 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":86:30)
#loc104 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":86:17)
#loc105 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":86:85)
#loc106 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":87:17)
#loc107 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":90:17)
#loc108 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":87:21)
#loc109 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":87:35)
#loc110 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":87:48)
#loc111 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":87:51)
#loc112 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":87:65)
#loc113 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":88:17)
#loc114 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":89:21)
#loc115 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":92:43)
#loc116 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":92:29)
#loc117 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":92:17)
#loc118 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":95:32)
#loc119 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":95:27)
#loc120 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":95:17)
#loc121 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":95:43)
#loc122 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":96:17)
#loc123 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":103:17)
#loc124 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":96:21)
#loc125 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":96:31)
#loc126 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":96:40)
#loc127 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":96:43)
#loc128 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":96:53)
#loc129 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":97:17)
#loc130 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":99:17)
#loc131 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":101:17)
#loc132 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":98:29)
#loc133 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":98:28)
#loc134 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":98:21)
#loc135 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":102:28)
#loc136 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":102:21)
#loc137 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":105:20)
#loc138 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":106:13)
#loc139 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":109:13)
#loc140 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":106:17)
#loc141 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":106:34)
#loc142 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":107:13)
#loc143 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":108:30)
#loc144 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":108:17)
#loc145 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":121:16)
#loc146 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":121:20)
#loc147 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":121:9)
#loc148 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":124:5)
#loc149 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":135:5)
#loc150 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":124:9)
#loc151 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":124:16)
#loc152 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":125:5)
#loc153 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":128:9)
#loc154 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":128:48)
#loc155 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":128:37)
#loc156 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":128:44)
#loc157 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":129:9)
#loc158 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":129:43)
#loc159 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":129:13)
#loc160 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":129:27)
#loc161 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":129:33)
#loc162 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":129:34)
#loc163 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":129:40)
#loc164 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":129:39)
#loc165 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":131:16)
#loc166 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":131:28)
#loc167 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":131:33)
#loc168 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":131:38)
#loc169 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":131:9)
#loc170 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":131:39)
#loc171 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":132:30)
#loc172 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":132:9)
#loc173 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":132:20)
#loc174 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":132:25)
#loc175 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":132:26)
#loc176 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":133:19)
#loc177 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":133:9)
#loc178 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":134:9)
#loc179 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":134:14)
#loc180 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":174:1)
#loc181 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":177:1)
#loc182 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":176:5)
#loc183 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":176:13)
#loc184 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":144:1)
#loc185 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":172:1)
#loc186 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":146:5)
#loc187 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":146:11)
#loc188 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":148:12)
#loc189 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":148:5)
#loc190 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":149:5)
#loc191 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":158:5)
#loc192 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":149:8)
#loc193 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":149:33)
#loc194 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":150:5)
#loc195 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":153:5)
#loc196 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":155:5)
#loc197 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":152:16)
#loc198 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":152:20)
#loc199 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":152:9)
#loc200 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":157:16)
#loc201 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":157:20)
#loc202 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":157:9)
#loc203 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":160:5)
#loc204 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":171:5)
#loc205 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":160:9)
#loc206 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":160:16)
#loc207 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":161:5)
#loc208 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":164:9)
#loc209 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":164:48)
#loc210 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":164:37)
#loc211 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":164:44)
#loc212 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":165:9)
#loc213 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":165:43)
#loc214 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":165:13)
#loc215 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":165:27)
#loc216 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":165:33)
#loc217 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":165:34)
#loc218 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":165:40)
#loc219 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":165:39)
#loc220 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":167:16)
#loc221 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":167:28)
#loc222 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":167:33)
#loc223 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":167:38)
#loc224 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":167:9)
#loc225 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":167:39)
#loc226 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":168:30)
#loc227 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":168:9)
#loc228 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":168:20)
#loc229 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":168:25)
#loc230 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":168:26)
#loc231 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":169:19)
#loc232 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":169:9)
#loc233 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":170:9)
#loc234 = loc("CWE194_Unexpected_Sign_Extension__connect_socket_malloc_12.c":170:14)
#loc235 = loc(fused[#loc1, #loc2])
#loc236 = loc(fused[#loc3, #loc4])
#loc237 = loc(fused[#loc5, #loc6])
#loc238 = loc(fused[#loc8, #loc9])
#loc239 = loc(fused[#loc10, #loc11])
#loc240 = loc(fused[#loc12, #loc13])
#loc241 = loc(fused[#loc14, #loc15])
#loc242 = loc(fused[#loc16, #loc17])
#loc243 = loc(fused[#loc18, #loc19])
#loc244 = loc(fused[#loc20, #loc21])
#loc245 = loc(fused[#loc22, #loc23])
#loc246 = loc(fused[#loc24, #loc25])
#loc247 = loc(fused[#loc26, #loc27])
#loc248 = loc(fused[#loc28, #loc29])
#loc249 = loc(fused[#loc31, #loc30])
#loc250 = loc(fused[#loc32, #loc33])
#loc251 = loc(fused[#loc34, #loc35])
#loc252 = loc(fused[#loc36, #loc37, #loc38, #loc33])
#loc253 = loc(fused[#loc39, #loc40])
#loc254 = loc(fused[#loc41, #loc42])
#loc255 = loc(fused[#loc43, #loc44])
#loc256 = loc(fused[#loc45, #loc46])
#loc257 = loc(fused[#loc47, #loc48])
#loc258 = loc(fused[#loc49, #loc50])
#loc259 = loc(fused[#loc51, #loc52])
#loc260 = loc(fused[#loc53, #loc54])
#loc261 = loc(fused[#loc59, #loc60])
#loc262 = loc(fused[#loc61, #loc62])
#loc263 = loc(fused[#loc63, #loc64])
#loc264 = loc(fused[#loc65, #loc62])
#loc265 = loc(fused[#loc67, #loc68])
#loc266 = loc(fused[#loc70, #loc71])
#loc267 = loc(fused[#loc72, #loc73])
#loc268 = loc(fused[#loc76, #loc74])
#loc269 = loc(fused[#loc80, #loc81])
#loc270 = loc(fused[#loc85, #loc86])
#loc271 = loc(fused[#loc87, #loc88])
#loc272 = loc(fused[#loc90, #loc91])
#loc273 = loc(fused[#loc92, #loc93])
#loc274 = loc(fused[#loc94, #loc95])
#loc275 = loc(fused[#loc96, #loc88])
#loc276 = loc(fused[#loc104, #loc105])
#loc277 = loc(fused[#loc106, #loc107])
#loc278 = loc(fused[#loc108, #loc109])
#loc279 = loc(fused[#loc111, #loc112])
#loc280 = loc(fused[#loc113, #loc107])
#loc281 = loc(fused[#loc117, #loc115])
#loc282 = loc(fused[#loc120, #loc121])
#loc283 = loc(fused[#loc122, #loc123])
#loc284 = loc(fused[#loc124, #loc125])
#loc285 = loc(fused[#loc127, #loc128])
#loc286 = loc(fused[#loc129, #loc130, #loc131, #loc123])
#loc287 = loc(fused[#loc134, #loc132])
#loc288 = loc(fused[#loc136, #loc135])
#loc289 = loc(fused[#loc138, #loc139])
#loc290 = loc(fused[#loc140, #loc141])
#loc291 = loc(fused[#loc142, #loc139])
#loc292 = loc(fused[#loc147, #loc146])
#loc293 = loc(fused[#loc148, #loc149])
#loc294 = loc(fused[#loc150, #loc151])
#loc295 = loc(fused[#loc152, #loc149])
#loc296 = loc(fused[#loc153, #loc154])
#loc297 = loc(fused[#loc155, #loc154])
#loc298 = loc(fused[#loc157, #loc158])
#loc299 = loc(fused[#loc159, #loc160])
#loc300 = loc(fused[#loc161, #loc158])
#loc301 = loc(fused[#loc169, #loc170])
#loc302 = loc(fused[#loc172, #loc171])
#loc303 = loc(fused[#loc180, #loc181])
#loc304 = loc(fused[#loc182, #loc183])
#loc305 = loc(fused[#loc184, #loc185])
#loc306 = loc(fused[#loc186, #loc187])
#loc307 = loc(fused[#loc189, #loc188])
#loc308 = loc(fused[#loc190, #loc191])
#loc309 = loc(fused[#loc192, #loc193])
#loc310 = loc(fused[#loc194, #loc195, #loc196, #loc191])
#loc311 = loc(fused[#loc199, #loc198])
#loc312 = loc(fused[#loc202, #loc201])
#loc313 = loc(fused[#loc203, #loc204])
#loc314 = loc(fused[#loc205, #loc206])
#loc315 = loc(fused[#loc207, #loc204])
#loc316 = loc(fused[#loc208, #loc209])
#loc317 = loc(fused[#loc210, #loc209])
#loc318 = loc(fused[#loc212, #loc213])
#loc319 = loc(fused[#loc214, #loc215])
#loc320 = loc(fused[#loc216, #loc213])
#loc321 = loc(fused[#loc224, #loc225])
#loc322 = loc(fused[#loc227, #loc226])
