!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":97:10)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":97:14)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":97:20)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":97:32)
#loc165 = loc(fused[#loc63, #loc64])
#loc166 = loc(fused[#loc65, #loc66])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc140)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc141)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc143)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc144)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc145)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc146)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc147)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc17)
    cir.store %5, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc148)
    cir.br ^bb1 loc(#loc149)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<100> : !s32i loc(#loc8)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc8)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc8)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc8)
    %10 = cir.alloca !u8i, !cir.ptr<!u8i>, %9 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc8)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc8)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc8)
    cir.store %12, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc143)
    cir.br ^bb2 loc(#loc150)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc151)
  ^bb3:  // pred: ^bb2
    %13 = cir.const #cir.int<0> : !s32i loc(#loc25)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc25)
    cir.store %14, %1 : !u64i, !cir.ptr<!u64i> loc(#loc152)
    cir.br ^bb4 loc(#loc151)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc27)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc28)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc28)
    %18 = cir.cmp(lt, %15, %17) : !u64i, !cir.bool loc(#loc153)
    cir.brcond %18 ^bb5, ^bb9 loc(#loc29)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc154)
  ^bb6:  // pred: ^bb5
    %19 = cir.const #cir.int<5> : !s32i loc(#loc31)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc32)
    %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc33)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !u64i), !cir.ptr<!s32i> loc(#loc34)
    cir.store %19, %22 : !s32i, !cir.ptr<!s32i> loc(#loc155)
    cir.br ^bb7 loc(#loc24)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc24)
  ^bb8:  // pred: ^bb7
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc35)
    %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc36)
    cir.store %24, %1 : !u64i, !cir.ptr<!u64i> loc(#loc156)
    cir.br ^bb4 loc(#loc151)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc24)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc22)
  ^bb11:  // pred: ^bb10
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc37)
    cir.store %25, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc157)
    cir.br ^bb12 loc(#loc20)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc158)
  ^bb13:  // pred: ^bb12
    %26 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc12)
    cir.store %26, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc145)
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc14)
    cir.store %27, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc146)
    %28 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc41)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %30 = cir.ptr_stride(%28 : !cir.ptr<!s32i>, %29 : !s32i), !cir.ptr<!s32i> loc(#loc43)
    %31 = cir.load %30 : !cir.ptr<!s32i>, !s32i loc(#loc41)
    cir.call @printIntLine(%31) : (!s32i) -> () loc(#loc44)
    %32 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc45)
    %33 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc46)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc46)
    cir.call @free(%34) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc45)
    cir.br ^bb14 loc(#loc40)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc6)
  } loc(#loc142)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc160)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    cir.return loc(#loc48)
  } loc(#loc159)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc161)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc162)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc163)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc58)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc60)
  cir.func @main(%arg0: !s32i loc(fused[#loc63, #loc64]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc65, #loc66])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc165)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc166)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc62)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc67)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc67)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc68)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc69)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc69)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc70)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc57)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %8 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31_good : !cir.ptr<!cir.func<!void ()>> loc(#loc167)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31_good() : () -> () loc(#loc72)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc58)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc59)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %13 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc168)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31_bad() : () -> () loc(#loc76)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc60)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc79)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc169)
    cir.return %17 : !s32i loc(#loc169)
  } loc(#loc164)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc170)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc83)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc171)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc173)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc174)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc175)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc176)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc177)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc98)
    cir.store %5, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc178)
    cir.br ^bb1 loc(#loc179)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc102)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc103)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc103)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc180)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc181)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc102)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc182)
    cir.store %12, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc173)
    cir.br ^bb2 loc(#loc183)
  ^bb2:  // pred: ^bb1
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc108)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc109)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc109)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc184)
    cir.brcond %16 ^bb3, ^bb4 loc(#loc185)
  ^bb3:  // pred: ^bb2
    %17 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc83)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc112)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc113)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc112)
    cir.br ^bb4 loc(#loc107)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc107)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc186)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc187)
  ^bb7:  // pred: ^bb6
    %21 = cir.const #cir.int<0> : !s32i loc(#loc118)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc118)
    cir.store %22, %1 : !u64i, !cir.ptr<!u64i> loc(#loc188)
    cir.br ^bb8 loc(#loc187)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc120)
    %24 = cir.const #cir.int<100> : !s32i loc(#loc121)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc121)
    %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc189)
    cir.brcond %26 ^bb9, ^bb13 loc(#loc122)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc190)
  ^bb10:  // pred: ^bb9
    %27 = cir.const #cir.int<5> : !s32i loc(#loc124)
    %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc125)
    %29 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc126)
    %30 = cir.ptr_stride(%28 : !cir.ptr<!s32i>, %29 : !u64i), !cir.ptr<!s32i> loc(#loc127)
    cir.store %27, %30 : !s32i, !cir.ptr<!s32i> loc(#loc191)
    cir.br ^bb11 loc(#loc117)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc117)
  ^bb12:  // pred: ^bb11
    %31 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc128)
    %32 = cir.unary(inc, %31) : !u64i, !u64i loc(#loc129)
    cir.store %32, %1 : !u64i, !cir.ptr<!u64i> loc(#loc192)
    cir.br ^bb8 loc(#loc187)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc117)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc115)
  ^bb15:  // pred: ^bb14
    %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc130)
    cir.store %33, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc193)
    cir.br ^bb16 loc(#loc101)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc194)
  ^bb17:  // pred: ^bb16
    %34 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc93)
    cir.store %34, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc175)
    %35 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc95)
    cir.store %35, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc176)
    %36 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc134)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc135)
    %38 = cir.ptr_stride(%36 : !cir.ptr<!s32i>, %37 : !s32i), !cir.ptr<!s32i> loc(#loc136)
    %39 = cir.load %38 : !cir.ptr<!s32i>, !s32i loc(#loc134)
    cir.call @printIntLine(%39) : (!s32i) -> () loc(#loc137)
    %40 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc138)
    %41 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc139)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc139)
    cir.call @free(%42) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc138)
    cir.br ^bb18 loc(#loc133)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc87)
  } loc(#loc172)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":23:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":46:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":29:9)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":29:35)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":31:13)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":31:20)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":40:9)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":40:26)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":41:9)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":41:22)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":25:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":25:11)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":26:12)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":26:5)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":27:5)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":38:5)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":30:9)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":36:9)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":32:13)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":35:13)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":32:22)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":32:18)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":32:25)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":32:29)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":32:27)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":33:13)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":34:33)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":34:17)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":34:28)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":34:29)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":32:35)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":32:34)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":37:16)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":37:9)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":39:5)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":45:5)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":42:22)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":42:27)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":42:28)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":42:9)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":44:9)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":44:14)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":83:1)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":86:1)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":85:5)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":85:13)
#loc51 = loc("/usr/include/stdlib.h":575:1)
#loc52 = loc("/usr/include/stdlib.h":575:41)
#loc53 = loc("/usr/include/time.h":76:1)
#loc54 = loc("/usr/include/time.h":76:38)
#loc55 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc56 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":102:15)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":104:15)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":107:15)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":109:15)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":97:1)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":112:1)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":98:1)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":100:27)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":100:22)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":100:5)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":102:5)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":103:5)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":103:61)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":104:5)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":107:5)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":108:5)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":108:60)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":109:5)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":111:12)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":111:5)
#loc81 = loc("/usr/include/stdlib.h":672:1)
#loc82 = loc("/usr/include/stdlib.h":672:45)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":62:23)
#loc84 = loc("/usr/include/stdlib.h":756:1)
#loc85 = loc("/usr/include/stdlib.h":756:70)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":53:1)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":81:1)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":59:9)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":59:57)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":66:13)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":66:20)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":75:9)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":75:26)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":76:9)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":76:22)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":55:5)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":55:11)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":56:12)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":56:5)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":57:5)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":73:5)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":59:35)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":59:42)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":59:46)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":59:56)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":60:9)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":64:9)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":60:13)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":60:27)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":61:9)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":62:13)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":63:13)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":63:18)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":65:9)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":71:9)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":67:13)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":70:13)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":67:22)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":67:18)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":67:25)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":67:29)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":67:27)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":68:13)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":69:33)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":69:17)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":69:28)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":69:29)
#loc128 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":67:35)
#loc129 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":67:34)
#loc130 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":72:16)
#loc131 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":72:9)
#loc132 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":74:5)
#loc133 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":80:5)
#loc134 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":77:22)
#loc135 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":77:27)
#loc136 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":77:28)
#loc137 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":77:9)
#loc138 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":79:9)
#loc139 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_31.c":79:14)
#loc140 = loc(fused[#loc1, #loc2])
#loc141 = loc(fused[#loc3, #loc4])
#loc142 = loc(fused[#loc5, #loc6])
#loc143 = loc(fused[#loc7, #loc8])
#loc144 = loc(fused[#loc9, #loc10])
#loc145 = loc(fused[#loc11, #loc12])
#loc146 = loc(fused[#loc13, #loc14])
#loc147 = loc(fused[#loc15, #loc16])
#loc148 = loc(fused[#loc18, #loc17])
#loc149 = loc(fused[#loc19, #loc20])
#loc150 = loc(fused[#loc21, #loc22])
#loc151 = loc(fused[#loc23, #loc24])
#loc152 = loc(fused[#loc26, #loc25])
#loc153 = loc(fused[#loc27, #loc28])
#loc154 = loc(fused[#loc30, #loc24])
#loc155 = loc(fused[#loc32, #loc31])
#loc156 = loc(fused[#loc36, #loc35])
#loc157 = loc(fused[#loc38, #loc37])
#loc158 = loc(fused[#loc39, #loc40])
#loc159 = loc(fused[#loc47, #loc48])
#loc160 = loc(fused[#loc49, #loc50])
#loc161 = loc(fused[#loc51, #loc52])
#loc162 = loc(fused[#loc53, #loc54])
#loc163 = loc(fused[#loc55, #loc56])
#loc164 = loc(fused[#loc61, #loc62])
#loc167 = loc(fused[#loc72, #loc73])
#loc168 = loc(fused[#loc76, #loc77])
#loc169 = loc(fused[#loc80, #loc79])
#loc170 = loc(fused[#loc81, #loc82])
#loc171 = loc(fused[#loc84, #loc85])
#loc172 = loc(fused[#loc86, #loc87])
#loc173 = loc(fused[#loc88, #loc89])
#loc174 = loc(fused[#loc90, #loc91])
#loc175 = loc(fused[#loc92, #loc93])
#loc176 = loc(fused[#loc94, #loc95])
#loc177 = loc(fused[#loc96, #loc97])
#loc178 = loc(fused[#loc99, #loc98])
#loc179 = loc(fused[#loc100, #loc101])
#loc180 = loc(fused[#loc104, #loc105])
#loc181 = loc(fused[#loc103, #loc105])
#loc182 = loc(fused[#loc102, #loc89])
#loc183 = loc(fused[#loc106, #loc107])
#loc184 = loc(fused[#loc108, #loc109])
#loc185 = loc(fused[#loc110, #loc107])
#loc186 = loc(fused[#loc114, #loc115])
#loc187 = loc(fused[#loc116, #loc117])
#loc188 = loc(fused[#loc119, #loc118])
#loc189 = loc(fused[#loc120, #loc121])
#loc190 = loc(fused[#loc123, #loc117])
#loc191 = loc(fused[#loc125, #loc124])
#loc192 = loc(fused[#loc129, #loc128])
#loc193 = loc(fused[#loc131, #loc130])
#loc194 = loc(fused[#loc132, #loc133])
