!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc82 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":252:10)
#loc83 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":252:14)
#loc84 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":252:20)
#loc85 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":252:32)
#loc310 = loc(fused[#loc82, #loc83])
#loc311 = loc(fused[#loc84, #loc85])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_sub_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc284)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc285)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc286)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc287)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc10)
  cir.func private @printIntLine(!s32i) loc(#loc288)
  cir.func no_proto @CWE191_Integer_Underflow__int_fgets_sub_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc290)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc17)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc291)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc21)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc294)
            %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc294)
            cir.store %4, %3 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc294)
            cir.scope {
              %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc29)
              %6 = cir.const #cir.int<3> : !s32i loc(#loc30)
              %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc30)
              %8 = cir.const #cir.int<4> : !u64i loc(#loc30)
              %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc30)
              %10 = cir.const #cir.int<2> : !s32i loc(#loc30)
              %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc30)
              %12 = cir.binop(add, %9, %11) : !u64i loc(#loc30)
              %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc30)
              %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc285)
              %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc31)
              %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc32)
              %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc33)
              %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc33)
              %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc296)
              cir.if %19 {
                %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc37)
                %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc38)
                cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc298)
              } else {
                %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
                %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
                cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc41)
              } loc(#loc297)
            } loc(#loc295)
          } loc(#loc293)
          cir.break loc(#loc42)
        } loc(#loc22)
        cir.case(default, []) {
          %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc10)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc10)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc44)
          cir.break loc(#loc45)
        } loc(#loc43)
        cir.yield loc(#loc19)
      } loc(#loc19)
    } loc(#loc292)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc48)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc301)
            %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc54)
            %5 = cir.const #cir.int<1> : !s32i loc(#loc53)
            %6 = cir.binop(sub, %4, %5) nsw : !s32i loc(#loc54)
            cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc301)
            %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc55)
            cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc56)
          } loc(#loc300)
          cir.break loc(#loc57)
        } loc(#loc49)
        cir.case(default, []) {
          %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc59)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc59)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc60)
          cir.break loc(#loc61)
        } loc(#loc58)
        cir.yield loc(#loc46)
      } loc(#loc46)
    } loc(#loc299)
    cir.return loc(#loc14)
  } loc(#loc289)
  cir.func no_proto @CWE191_Integer_Underflow__int_fgets_sub_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc303)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc64)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc304)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc66)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc305)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc68)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc306)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc70)
    cir.return loc(#loc63)
  } loc(#loc302)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc307)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc308)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc76)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc77)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc79)
  cir.func @main(%arg0: !s32i loc(fused[#loc82, #loc83]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc84, #loc85])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc310)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc311)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc81)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc86)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc86)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc87)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc88)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc88)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc89)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc76)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %8 = cir.get_global @CWE191_Integer_Underflow__int_fgets_sub_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc312)
    cir.call @CWE191_Integer_Underflow__int_fgets_sub_15_good() : () -> () loc(#loc91)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc77)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc78)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %13 = cir.get_global @CWE191_Integer_Underflow__int_fgets_sub_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc313)
    cir.call @CWE191_Integer_Underflow__int_fgets_sub_15_bad() : () -> () loc(#loc95)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc79)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc98)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc314)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc314)
    cir.return %17 : !s32i loc(#loc314)
  } loc(#loc309)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"data value is too large to perform subtraction.\00" : !cir.array<!s8i x 48>> : !cir.array<!s8i x 48> {alignment = 1 : i64} loc(#loc100)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc316)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc105)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc317)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc109)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc320)
            %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc320)
            cir.store %4, %3 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc320)
            cir.scope {
              %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc117)
              %6 = cir.const #cir.int<3> : !s32i loc(#loc118)
              %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc118)
              %8 = cir.const #cir.int<4> : !u64i loc(#loc118)
              %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc118)
              %10 = cir.const #cir.int<2> : !s32i loc(#loc118)
              %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc118)
              %12 = cir.binop(add, %9, %11) : !u64i loc(#loc118)
              %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc118)
              %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc285)
              %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc119)
              %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc120)
              %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc121)
              %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc121)
              %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc322)
              cir.if %19 {
                %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc125)
                %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc126)
                cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc324)
              } else {
                %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc129)
                %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc129)
                cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc130)
              } loc(#loc323)
            } loc(#loc321)
          } loc(#loc319)
          cir.break loc(#loc131)
        } loc(#loc110)
        cir.case(default, []) {
          %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc133)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc133)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc134)
          cir.break loc(#loc135)
        } loc(#loc132)
        cir.yield loc(#loc107)
      } loc(#loc107)
    } loc(#loc318)
    cir.scope {
      %2 = cir.const #cir.int<8> : !s32i loc(#loc138)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc140)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc140)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc141)
          cir.break loc(#loc142)
        } loc(#loc139)
        cir.case(default, []) {
          cir.scope {
            %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc146)
            %4 = cir.const #cir.int<2147483647> : !s32i loc(#loc147)
            %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc147)
            %6 = cir.const #cir.int<1> : !s32i loc(#loc147)
            %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc147)
            %8 = cir.cmp(gt, %3, %7) : !s32i, !cir.bool loc(#loc327)
            cir.if %8 {
              %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc329)
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc153)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc152)
              %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc153)
              cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc329)
              %13 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc154)
              cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc155)
            } else {
              %9 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc100)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc100)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc156)
            } loc(#loc328)
          } loc(#loc326)
          cir.break loc(#loc157)
        } loc(#loc143)
        cir.yield loc(#loc136)
      } loc(#loc136)
    } loc(#loc325)
    cir.return loc(#loc102)
  } loc(#loc315)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc331)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc162)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc332)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc166)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc335)
            %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc335)
            cir.store %4, %3 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc335)
            cir.scope {
              %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc174)
              %6 = cir.const #cir.int<3> : !s32i loc(#loc175)
              %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc175)
              %8 = cir.const #cir.int<4> : !u64i loc(#loc175)
              %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc175)
              %10 = cir.const #cir.int<2> : !s32i loc(#loc175)
              %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc175)
              %12 = cir.binop(add, %9, %11) : !u64i loc(#loc175)
              %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc175)
              %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc285)
              %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc176)
              %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc177)
              %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc178)
              %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc178)
              %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc337)
              cir.if %19 {
                %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc182)
                %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc183)
                cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc339)
              } else {
                %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc186)
                %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc186)
                cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc187)
              } loc(#loc338)
            } loc(#loc336)
          } loc(#loc334)
          cir.break loc(#loc188)
        } loc(#loc167)
        cir.case(default, []) {
          %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc190)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc190)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc191)
          cir.break loc(#loc192)
        } loc(#loc189)
        cir.yield loc(#loc164)
      } loc(#loc164)
    } loc(#loc333)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc195)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc199)
            %4 = cir.const #cir.int<2147483647> : !s32i loc(#loc200)
            %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc200)
            %6 = cir.const #cir.int<1> : !s32i loc(#loc200)
            %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc200)
            %8 = cir.cmp(gt, %3, %7) : !s32i, !cir.bool loc(#loc342)
            cir.if %8 {
              %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc344)
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc206)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc205)
              %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc206)
              cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc344)
              %13 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc207)
              cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc208)
            } else {
              %9 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc209)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc209)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc210)
            } loc(#loc343)
          } loc(#loc341)
          cir.break loc(#loc211)
        } loc(#loc196)
        cir.case(default, []) {
          %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc213)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc213)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc214)
          cir.break loc(#loc215)
        } loc(#loc212)
        cir.yield loc(#loc193)
      } loc(#loc193)
    } loc(#loc340)
    cir.return loc(#loc159)
  } loc(#loc330)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc346)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc220)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc347)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc224)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc226)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc226)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc227)
          cir.break loc(#loc228)
        } loc(#loc225)
        cir.case(default, []) {
          %3 = cir.const #cir.int<2> : !s32i loc(#loc230)
          %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc231)
          cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc349)
          cir.break loc(#loc233)
        } loc(#loc229)
        cir.yield loc(#loc222)
      } loc(#loc222)
    } loc(#loc348)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc236)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc352)
            %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc242)
            %5 = cir.const #cir.int<1> : !s32i loc(#loc241)
            %6 = cir.binop(sub, %4, %5) nsw : !s32i loc(#loc242)
            cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc352)
            %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc243)
            cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc244)
          } loc(#loc351)
          cir.break loc(#loc245)
        } loc(#loc237)
        cir.case(default, []) {
          %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc247)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc247)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc248)
          cir.break loc(#loc249)
        } loc(#loc246)
        cir.yield loc(#loc234)
      } loc(#loc234)
    } loc(#loc350)
    cir.return loc(#loc217)
  } loc(#loc345)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc354)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc254)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc355)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc258)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.const #cir.int<2> : !s32i loc(#loc260)
          %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc261)
          cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc357)
          cir.break loc(#loc263)
        } loc(#loc259)
        cir.case(default, []) {
          %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc265)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc265)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc266)
          cir.break loc(#loc267)
        } loc(#loc264)
        cir.yield loc(#loc256)
      } loc(#loc256)
    } loc(#loc356)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc270)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc360)
            %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc276)
            %5 = cir.const #cir.int<1> : !s32i loc(#loc275)
            %6 = cir.binop(sub, %4, %5) nsw : !s32i loc(#loc276)
            cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc360)
            %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc277)
            cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc278)
          } loc(#loc359)
          cir.break loc(#loc279)
        } loc(#loc271)
        cir.case(default, []) {
          %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc281)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc281)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc282)
          cir.break loc(#loc283)
        } loc(#loc280)
        cir.yield loc(#loc268)
      } loc(#loc268)
    } loc(#loc358)
    cir.return loc(#loc251)
  } loc(#loc353)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_sub_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":42:23)
#loc10 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":48:19)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc13 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":24:1)
#loc14 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":65:1)
#loc15 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":26:5)
#loc16 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":26:9)
#loc17 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":28:12)
#loc18 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":28:5)
#loc19 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":29:5)
#loc20 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":50:5)
#loc21 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":29:12)
#loc22 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":31:5)
#loc23 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":32:5)
#loc24 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":44:5)
#loc25 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":33:9)
#loc26 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":33:45)
#loc27 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":35:9)
#loc28 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":43:9)
#loc29 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":35:19)
#loc30 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":35:32)
#loc31 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":35:49)
#loc32 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":35:13)
#loc33 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":35:59)
#loc34 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":36:9)
#loc35 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":39:9)
#loc36 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":41:9)
#loc37 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":38:25)
#loc38 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":38:20)
#loc39 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":38:13)
#loc40 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":38:36)
#loc41 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":42:13)
#loc42 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":45:5)
#loc43 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":46:5)
#loc44 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":48:9)
#loc45 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":49:9)
#loc46 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":51:5)
#loc47 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":64:5)
#loc48 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":51:12)
#loc49 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":53:5)
#loc50 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":54:5)
#loc51 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":58:5)
#loc52 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":56:9)
#loc53 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":56:29)
#loc54 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":56:22)
#loc55 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":57:22)
#loc56 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":57:9)
#loc57 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":59:5)
#loc58 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":60:5)
#loc59 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":62:19)
#loc60 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":62:9)
#loc61 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":63:9)
#loc62 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":235:1)
#loc63 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":241:1)
#loc64 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":237:5)
#loc65 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":237:14)
#loc66 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":238:5)
#loc67 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":238:14)
#loc68 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":239:5)
#loc69 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":239:14)
#loc70 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":240:5)
#loc71 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":240:14)
#loc72 = loc("/usr/include/stdlib.h":575:1)
#loc73 = loc("/usr/include/stdlib.h":575:41)
#loc74 = loc("/usr/include/time.h":76:1)
#loc75 = loc("/usr/include/time.h":76:38)
#loc76 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":257:15)
#loc77 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":259:15)
#loc78 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":262:15)
#loc79 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":264:15)
#loc80 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":252:1)
#loc81 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":267:1)
#loc86 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":253:1)
#loc87 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":255:27)
#loc88 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":255:22)
#loc89 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":255:5)
#loc90 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":257:5)
#loc91 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":258:5)
#loc92 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":258:53)
#loc93 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":259:5)
#loc94 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":262:5)
#loc95 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":263:5)
#loc96 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":263:52)
#loc97 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":264:5)
#loc98 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":266:12)
#loc99 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":266:5)
#loc100 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":114:23)
#loc101 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":72:1)
#loc102 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":118:1)
#loc103 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":74:5)
#loc104 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":74:9)
#loc105 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":76:12)
#loc106 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":76:5)
#loc107 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":77:5)
#loc108 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":98:5)
#loc109 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":77:12)
#loc110 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":79:5)
#loc111 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":80:5)
#loc112 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":92:5)
#loc113 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":81:9)
#loc114 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":81:45)
#loc115 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":83:9)
#loc116 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":91:9)
#loc117 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":83:19)
#loc118 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":83:32)
#loc119 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":83:49)
#loc120 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":83:13)
#loc121 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":83:59)
#loc122 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":84:9)
#loc123 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":87:9)
#loc124 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":89:9)
#loc125 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":86:25)
#loc126 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":86:20)
#loc127 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":86:13)
#loc128 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":86:36)
#loc129 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":90:23)
#loc130 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":90:13)
#loc131 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":93:5)
#loc132 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":94:5)
#loc133 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":96:19)
#loc134 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":96:9)
#loc135 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":97:9)
#loc136 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":99:5)
#loc137 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":117:5)
#loc138 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":99:12)
#loc139 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":101:5)
#loc140 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":103:19)
#loc141 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":103:9)
#loc142 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":104:9)
#loc143 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":105:5)
#loc144 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":107:9)
#loc145 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":115:9)
#loc146 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":107:13)
#loc147 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":107:20)
#loc148 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":108:9)
#loc149 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":111:9)
#loc150 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":113:9)
#loc151 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":109:13)
#loc152 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":109:33)
#loc153 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":109:26)
#loc154 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":110:26)
#loc155 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":110:13)
#loc156 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":114:13)
#loc157 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":116:9)
#loc158 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":121:1)
#loc159 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":167:1)
#loc160 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":123:5)
#loc161 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":123:9)
#loc162 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":125:12)
#loc163 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":125:5)
#loc164 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":126:5)
#loc165 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":147:5)
#loc166 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":126:12)
#loc167 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":128:5)
#loc168 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":129:5)
#loc169 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":141:5)
#loc170 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":130:9)
#loc171 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":130:45)
#loc172 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":132:9)
#loc173 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":140:9)
#loc174 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":132:19)
#loc175 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":132:32)
#loc176 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":132:49)
#loc177 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":132:13)
#loc178 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":132:59)
#loc179 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":133:9)
#loc180 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":136:9)
#loc181 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":138:9)
#loc182 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":135:25)
#loc183 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":135:20)
#loc184 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":135:13)
#loc185 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":135:36)
#loc186 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":139:23)
#loc187 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":139:13)
#loc188 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":142:5)
#loc189 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":143:5)
#loc190 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":145:19)
#loc191 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":145:9)
#loc192 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":146:9)
#loc193 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":148:5)
#loc194 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":166:5)
#loc195 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":148:12)
#loc196 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":150:5)
#loc197 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":152:9)
#loc198 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":160:9)
#loc199 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":152:13)
#loc200 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":152:20)
#loc201 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":153:9)
#loc202 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":156:9)
#loc203 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":158:9)
#loc204 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":154:13)
#loc205 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":154:33)
#loc206 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":154:26)
#loc207 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":155:26)
#loc208 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":155:13)
#loc209 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":159:23)
#loc210 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":159:13)
#loc211 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":161:9)
#loc212 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":162:5)
#loc213 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":164:19)
#loc214 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":164:9)
#loc215 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":165:9)
#loc216 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":170:1)
#loc217 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":200:1)
#loc218 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":172:5)
#loc219 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":172:9)
#loc220 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":174:12)
#loc221 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":174:5)
#loc222 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":175:5)
#loc223 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":185:5)
#loc224 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":175:12)
#loc225 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":177:5)
#loc226 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":179:19)
#loc227 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":179:9)
#loc228 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":180:9)
#loc229 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":181:5)
#loc230 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":183:17)
#loc231 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":183:16)
#loc232 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":183:9)
#loc233 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":184:9)
#loc234 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":186:5)
#loc235 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":199:5)
#loc236 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":186:12)
#loc237 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":188:5)
#loc238 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":189:5)
#loc239 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":193:5)
#loc240 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":191:9)
#loc241 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":191:29)
#loc242 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":191:22)
#loc243 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":192:22)
#loc244 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":192:9)
#loc245 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":194:5)
#loc246 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":195:5)
#loc247 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":197:19)
#loc248 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":197:9)
#loc249 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":198:9)
#loc250 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":203:1)
#loc251 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":233:1)
#loc252 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":205:5)
#loc253 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":205:9)
#loc254 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":207:12)
#loc255 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":207:5)
#loc256 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":208:5)
#loc257 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":218:5)
#loc258 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":208:12)
#loc259 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":210:5)
#loc260 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":212:17)
#loc261 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":212:16)
#loc262 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":212:9)
#loc263 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":213:9)
#loc264 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":214:5)
#loc265 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":216:19)
#loc266 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":216:9)
#loc267 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":217:9)
#loc268 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":219:5)
#loc269 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":232:5)
#loc270 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":219:12)
#loc271 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":221:5)
#loc272 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":222:5)
#loc273 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":226:5)
#loc274 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":224:9)
#loc275 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":224:29)
#loc276 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":224:22)
#loc277 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":225:22)
#loc278 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":225:9)
#loc279 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":227:5)
#loc280 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":228:5)
#loc281 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":230:19)
#loc282 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":230:9)
#loc283 = loc("CWE191_Integer_Underflow__int_fgets_sub_15.c":231:9)
#loc284 = loc(fused[#loc1, #loc2])
#loc285 = loc(fused[#loc3, #loc4])
#loc286 = loc(fused[#loc5, #loc6])
#loc287 = loc(fused[#loc7, #loc8])
#loc288 = loc(fused[#loc11, #loc12])
#loc289 = loc(fused[#loc13, #loc14])
#loc290 = loc(fused[#loc15, #loc16])
#loc291 = loc(fused[#loc18, #loc17])
#loc292 = loc(fused[#loc19, #loc20])
#loc293 = loc(fused[#loc23, #loc24])
#loc294 = loc(fused[#loc25, #loc26])
#loc295 = loc(fused[#loc27, #loc28])
#loc296 = loc(fused[#loc32, #loc33])
#loc297 = loc(fused[#loc34, #loc35, #loc36, #loc28])
#loc298 = loc(fused[#loc39, #loc40])
#loc299 = loc(fused[#loc46, #loc47])
#loc300 = loc(fused[#loc50, #loc51])
#loc301 = loc(fused[#loc52, #loc53])
#loc302 = loc(fused[#loc62, #loc63])
#loc303 = loc(fused[#loc64, #loc65])
#loc304 = loc(fused[#loc66, #loc67])
#loc305 = loc(fused[#loc68, #loc69])
#loc306 = loc(fused[#loc70, #loc71])
#loc307 = loc(fused[#loc72, #loc73])
#loc308 = loc(fused[#loc74, #loc75])
#loc309 = loc(fused[#loc80, #loc81])
#loc312 = loc(fused[#loc91, #loc92])
#loc313 = loc(fused[#loc95, #loc96])
#loc314 = loc(fused[#loc99, #loc98])
#loc315 = loc(fused[#loc101, #loc102])
#loc316 = loc(fused[#loc103, #loc104])
#loc317 = loc(fused[#loc106, #loc105])
#loc318 = loc(fused[#loc107, #loc108])
#loc319 = loc(fused[#loc111, #loc112])
#loc320 = loc(fused[#loc113, #loc114])
#loc321 = loc(fused[#loc115, #loc116])
#loc322 = loc(fused[#loc120, #loc121])
#loc323 = loc(fused[#loc122, #loc123, #loc124, #loc116])
#loc324 = loc(fused[#loc127, #loc128])
#loc325 = loc(fused[#loc136, #loc137])
#loc326 = loc(fused[#loc144, #loc145])
#loc327 = loc(fused[#loc146, #loc147])
#loc328 = loc(fused[#loc148, #loc149, #loc150, #loc145])
#loc329 = loc(fused[#loc151, #loc152])
#loc330 = loc(fused[#loc158, #loc159])
#loc331 = loc(fused[#loc160, #loc161])
#loc332 = loc(fused[#loc163, #loc162])
#loc333 = loc(fused[#loc164, #loc165])
#loc334 = loc(fused[#loc168, #loc169])
#loc335 = loc(fused[#loc170, #loc171])
#loc336 = loc(fused[#loc172, #loc173])
#loc337 = loc(fused[#loc177, #loc178])
#loc338 = loc(fused[#loc179, #loc180, #loc181, #loc173])
#loc339 = loc(fused[#loc184, #loc185])
#loc340 = loc(fused[#loc193, #loc194])
#loc341 = loc(fused[#loc197, #loc198])
#loc342 = loc(fused[#loc199, #loc200])
#loc343 = loc(fused[#loc201, #loc202, #loc203, #loc198])
#loc344 = loc(fused[#loc204, #loc205])
#loc345 = loc(fused[#loc216, #loc217])
#loc346 = loc(fused[#loc218, #loc219])
#loc347 = loc(fused[#loc221, #loc220])
#loc348 = loc(fused[#loc222, #loc223])
#loc349 = loc(fused[#loc232, #loc230])
#loc350 = loc(fused[#loc234, #loc235])
#loc351 = loc(fused[#loc238, #loc239])
#loc352 = loc(fused[#loc240, #loc241])
#loc353 = loc(fused[#loc250, #loc251])
#loc354 = loc(fused[#loc252, #loc253])
#loc355 = loc(fused[#loc255, #loc254])
#loc356 = loc(fused[#loc256, #loc257])
#loc357 = loc(fused[#loc262, #loc260])
#loc358 = loc(fused[#loc268, #loc269])
#loc359 = loc(fused[#loc272, #loc273])
#loc360 = loc(fused[#loc274, #loc275])
