!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc7 = loc("../../../testcasesupport/std_testcase.h":61:7)
!ty_TwoIntsClass = !cir.record<class "TwoIntsClass" {!s32i, !s32i}>
module @"/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_08.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func internal private @_ZL17staticReturnsTruev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc2)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc3)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc187)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc187)
    cir.return %2 : !s32i loc(#loc187)
  } loc(#loc186)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc188)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc7)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc7)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc7)
    cir.return loc(#loc7)
  } loc(#loc7)
  cir.func private @printIntLine(!s32i) loc(#loc189)
  cir.func @_ZN39CWE401_Memory_Leak__new_TwoIntsClass_083badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc191)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc14)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc192)
    cir.scope {
      %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc18)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc194)
      cir.if %3 {
        %4 = cir.const #cir.int<8> : !u64i loc(#loc196)
        %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc23)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc196)
        cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc22)
        cir.store %6, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc197)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc25)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc26)
        %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc27)
        cir.store %7, %9 : !s32i, !cir.ptr<!s32i> loc(#loc198)
        %10 = cir.const #cir.int<0> : !s32i loc(#loc28)
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc29)
        %12 = cir.get_member %11[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
        cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc199)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc31)
        %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc27)
        %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc32)
        cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc33)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc34)
        %17 = cir.get_member %16[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
        %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc35)
        cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc36)
      } loc(#loc195)
    } loc(#loc193)
    cir.scope {
      %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc39)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc201)
      cir.if %3 {
      } loc(#loc202)
    } loc(#loc200)
    cir.return loc(#loc11)
  } loc(#loc190)
  cir.func internal private @_ZL18staticReturnsFalsev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc43)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc44)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc204)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc204)
    cir.return %2 : !s32i loc(#loc204)
  } loc(#loc203)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc205)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc48)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr2) loc(#loc206)
  cir.func internal private @_ZN39CWE401_Memory_Leak__new_TwoIntsClass_08L8goodB2G1Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc208)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc55)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc209)
    cir.scope {
      %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc59)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc211)
      cir.if %3 {
        %4 = cir.const #cir.int<8> : !u64i loc(#loc213)
        %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc64)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc213)
        cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc63)
        cir.store %6, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc214)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc66)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc67)
        %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc27)
        cir.store %7, %9 : !s32i, !cir.ptr<!s32i> loc(#loc215)
        %10 = cir.const #cir.int<0> : !s32i loc(#loc68)
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc69)
        %12 = cir.get_member %11[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
        cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc216)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc70)
        %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc27)
        %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc71)
        cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc72)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc73)
        %17 = cir.get_member %16[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
        %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc74)
        cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc75)
      } loc(#loc212)
    } loc(#loc210)
    cir.scope {
      %2 = cir.call @_ZL18staticReturnsFalsev() : () -> !s32i loc(#loc78)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc218)
      cir.if %3 {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc48)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc48)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc83)
      } else {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc84)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc84)
        cir.call @_ZdlPv(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr2) loc(#loc64)
      } loc(#loc219)
    } loc(#loc217)
    cir.return loc(#loc52)
  } loc(#loc207)
  cir.func internal private @_ZN39CWE401_Memory_Leak__new_TwoIntsClass_08L8goodB2G2Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc221)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc89)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc222)
    cir.scope {
      %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc93)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc224)
      cir.if %3 {
        %4 = cir.const #cir.int<8> : !u64i loc(#loc226)
        %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc98)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc226)
        cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc97)
        cir.store %6, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc227)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc100)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc101)
        %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc27)
        cir.store %7, %9 : !s32i, !cir.ptr<!s32i> loc(#loc228)
        %10 = cir.const #cir.int<0> : !s32i loc(#loc102)
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc103)
        %12 = cir.get_member %11[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
        cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc229)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc104)
        %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc27)
        %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc105)
        cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc106)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc107)
        %17 = cir.get_member %16[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
        %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc108)
        cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc109)
      } loc(#loc225)
    } loc(#loc223)
    cir.scope {
      %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc112)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc231)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc115)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc115)
        cir.call @_ZdlPv(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr2) loc(#loc98)
      } loc(#loc232)
    } loc(#loc230)
    cir.return loc(#loc86)
  } loc(#loc220)
  cir.func internal private @_ZN39CWE401_Memory_Leak__new_TwoIntsClass_08L8goodG2B1Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc234)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc120)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc235)
    cir.scope {
      %2 = cir.call @_ZL18staticReturnsFalsev() : () -> !s32i loc(#loc124)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc237)
      cir.if %3 {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc129)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc129)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc130)
      } else {
        %4 = cir.alloca !ty_TwoIntsClass, !cir.ptr<!ty_TwoIntsClass>, ["dataGoodBuffer"] {alignment = 4 : i64} loc(#loc239)
        cir.store %4, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc240)
        %5 = cir.const #cir.int<0> : !s32i loc(#loc135)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc136)
        %7 = cir.get_member %6[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc27)
        cir.store %5, %7 : !s32i, !cir.ptr<!s32i> loc(#loc241)
        %8 = cir.const #cir.int<0> : !s32i loc(#loc137)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc138)
        %10 = cir.get_member %9[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
        cir.store %8, %10 : !s32i, !cir.ptr<!s32i> loc(#loc242)
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc139)
        %12 = cir.get_member %11[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc27)
        %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc140)
        cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc141)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc142)
        %15 = cir.get_member %14[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
        %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc143)
        cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc144)
      } loc(#loc238)
    } loc(#loc236)
    cir.scope {
      %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc147)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc244)
      cir.if %3 {
      } loc(#loc245)
    } loc(#loc243)
    cir.return loc(#loc117)
  } loc(#loc233)
  cir.func internal private @_ZN39CWE401_Memory_Leak__new_TwoIntsClass_08L8goodG2B2Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc247)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc154)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc248)
    cir.scope {
      %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc158)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc250)
      cir.if %3 {
        %4 = cir.alloca !ty_TwoIntsClass, !cir.ptr<!ty_TwoIntsClass>, ["dataGoodBuffer"] {alignment = 4 : i64} loc(#loc252)
        cir.store %4, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc253)
        %5 = cir.const #cir.int<0> : !s32i loc(#loc165)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc166)
        %7 = cir.get_member %6[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc27)
        cir.store %5, %7 : !s32i, !cir.ptr<!s32i> loc(#loc254)
        %8 = cir.const #cir.int<0> : !s32i loc(#loc167)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc168)
        %10 = cir.get_member %9[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
        cir.store %8, %10 : !s32i, !cir.ptr<!s32i> loc(#loc255)
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc169)
        %12 = cir.get_member %11[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc27)
        %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc170)
        cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc171)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc172)
        %15 = cir.get_member %14[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
        %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc173)
        cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc174)
      } loc(#loc251)
    } loc(#loc249)
    cir.scope {
      %2 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc177)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc257)
      cir.if %3 {
      } loc(#loc258)
    } loc(#loc256)
    cir.return loc(#loc151)
  } loc(#loc246)
  cir.func @_ZN39CWE401_Memory_Leak__new_TwoIntsClass_084goodEv() extra(#fn_attr) {
    cir.call @_ZN39CWE401_Memory_Leak__new_TwoIntsClass_08L8goodB2G1Ev() : () -> () loc(#loc182)
    cir.call @_ZN39CWE401_Memory_Leak__new_TwoIntsClass_08L8goodB2G2Ev() : () -> () loc(#loc183)
    cir.call @_ZN39CWE401_Memory_Leak__new_TwoIntsClass_08L8goodG2B1Ev() : () -> () loc(#loc184)
    cir.call @_ZN39CWE401_Memory_Leak__new_TwoIntsClass_08L8goodG2B2Ev() : () -> () loc(#loc185)
    cir.return loc(#loc181)
  } loc(#loc259)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":0:0)
#loc1 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":27:1)
#loc2 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":30:1)
#loc3 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":29:12)
#loc4 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":29:5)
#loc5 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc6 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc10 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":42:1)
#loc11 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":61:1)
#loc12 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":44:5)
#loc13 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":44:20)
#loc14 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":45:12)
#loc15 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":45:5)
#loc16 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":46:5)
#loc17 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":55:5)
#loc18 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":46:8)
#loc19 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":46:26)
#loc20 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":47:5)
#loc21 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":49:16)
#loc22 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":49:20)
#loc23 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":42:6)
#loc24 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":49:9)
#loc25 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":51:24)
#loc26 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":51:9)
#loc27 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc28 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":52:24)
#loc29 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":52:9)
#loc30 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc31 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":53:22)
#loc32 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":53:28)
#loc33 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":53:9)
#loc34 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":54:22)
#loc35 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":54:28)
#loc36 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":54:9)
#loc37 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":56:5)
#loc38 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":60:5)
#loc39 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":56:8)
#loc40 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":56:26)
#loc41 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":57:5)
#loc42 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":32:1)
#loc43 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":35:1)
#loc44 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":34:12)
#loc45 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":34:5)
#loc46 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc47 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc48 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":85:19)
#loc49 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc50 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc51 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":68:1)
#loc52 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":92:1)
#loc53 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":70:5)
#loc54 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":70:20)
#loc55 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":71:12)
#loc56 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":71:5)
#loc57 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":72:5)
#loc58 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":81:5)
#loc59 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":72:8)
#loc60 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":72:26)
#loc61 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":73:5)
#loc62 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":75:16)
#loc63 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":75:20)
#loc64 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":68:13)
#loc65 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":75:9)
#loc66 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":77:24)
#loc67 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":77:9)
#loc68 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":78:24)
#loc69 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":78:9)
#loc70 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":79:22)
#loc71 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":79:28)
#loc72 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":79:9)
#loc73 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":80:22)
#loc74 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":80:28)
#loc75 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":80:9)
#loc76 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":82:5)
#loc77 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":91:5)
#loc78 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":82:8)
#loc79 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":82:27)
#loc80 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":83:5)
#loc81 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":86:5)
#loc82 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":88:5)
#loc83 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":85:9)
#loc84 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":90:16)
#loc85 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":95:1)
#loc86 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":114:1)
#loc87 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":97:5)
#loc88 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":97:20)
#loc89 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":98:12)
#loc90 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":98:5)
#loc91 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":99:5)
#loc92 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":108:5)
#loc93 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":99:8)
#loc94 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":99:26)
#loc95 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":100:5)
#loc96 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":102:16)
#loc97 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":102:20)
#loc98 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":95:13)
#loc99 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":102:9)
#loc100 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":104:24)
#loc101 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":104:9)
#loc102 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":105:24)
#loc103 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":105:9)
#loc104 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":106:22)
#loc105 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":106:28)
#loc106 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":106:9)
#loc107 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":107:22)
#loc108 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":107:28)
#loc109 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":107:9)
#loc110 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":109:5)
#loc111 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":113:5)
#loc112 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":109:8)
#loc113 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":109:26)
#loc114 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":110:5)
#loc115 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":112:16)
#loc116 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":117:1)
#loc117 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":142:1)
#loc118 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":119:5)
#loc119 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":119:20)
#loc120 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":120:12)
#loc121 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":120:5)
#loc122 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":121:5)
#loc123 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":136:5)
#loc124 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":121:8)
#loc125 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":121:27)
#loc126 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":122:5)
#loc127 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":125:5)
#loc128 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":127:5)
#loc129 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":124:19)
#loc130 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":124:9)
#loc131 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":129:9)
#loc132 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":129:22)
#loc133 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":130:9)
#loc134 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":130:17)
#loc135 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":132:24)
#loc136 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":132:9)
#loc137 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":133:24)
#loc138 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":133:9)
#loc139 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":134:22)
#loc140 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":134:28)
#loc141 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":134:9)
#loc142 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":135:22)
#loc143 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":135:28)
#loc144 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":135:9)
#loc145 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":137:5)
#loc146 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":141:5)
#loc147 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":137:8)
#loc148 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":137:26)
#loc149 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":138:5)
#loc150 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":145:1)
#loc151 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":165:1)
#loc152 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":147:5)
#loc153 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":147:20)
#loc154 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":148:12)
#loc155 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":148:5)
#loc156 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":149:5)
#loc157 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":159:5)
#loc158 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":149:8)
#loc159 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":149:26)
#loc160 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":150:5)
#loc161 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":152:9)
#loc162 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":152:22)
#loc163 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":153:9)
#loc164 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":153:17)
#loc165 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":155:24)
#loc166 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":155:9)
#loc167 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":156:24)
#loc168 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":156:9)
#loc169 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":157:22)
#loc170 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":157:28)
#loc171 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":157:9)
#loc172 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":158:22)
#loc173 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":158:28)
#loc174 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":158:9)
#loc175 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":160:5)
#loc176 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":164:5)
#loc177 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":160:8)
#loc178 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":160:26)
#loc179 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":161:5)
#loc180 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":167:1)
#loc181 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":173:1)
#loc182 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":169:5)
#loc183 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":170:5)
#loc184 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":171:5)
#loc185 = loc("CWE401_Memory_Leak__new_TwoIntsClass_08.cpp":172:5)
#loc186 = loc(fused[#loc1, #loc2])
#loc187 = loc(fused[#loc4, #loc3])
#loc188 = loc(fused[#loc5, #loc6])
#loc189 = loc(fused[#loc8, #loc9])
#loc190 = loc(fused[#loc10, #loc11])
#loc191 = loc(fused[#loc12, #loc13])
#loc192 = loc(fused[#loc15, #loc14])
#loc193 = loc(fused[#loc16, #loc17])
#loc194 = loc(fused[#loc18, #loc19])
#loc195 = loc(fused[#loc20, #loc17])
#loc196 = loc(fused[#loc21, #loc22])
#loc197 = loc(fused[#loc24, #loc22])
#loc198 = loc(fused[#loc26, #loc25])
#loc199 = loc(fused[#loc29, #loc28])
#loc200 = loc(fused[#loc37, #loc38])
#loc201 = loc(fused[#loc39, #loc40])
#loc202 = loc(fused[#loc41, #loc38])
#loc203 = loc(fused[#loc42, #loc43])
#loc204 = loc(fused[#loc45, #loc44])
#loc205 = loc(fused[#loc46, #loc47])
#loc206 = loc(fused[#loc49, #loc50])
#loc207 = loc(fused[#loc51, #loc52])
#loc208 = loc(fused[#loc53, #loc54])
#loc209 = loc(fused[#loc56, #loc55])
#loc210 = loc(fused[#loc57, #loc58])
#loc211 = loc(fused[#loc59, #loc60])
#loc212 = loc(fused[#loc61, #loc58])
#loc213 = loc(fused[#loc62, #loc63])
#loc214 = loc(fused[#loc65, #loc63])
#loc215 = loc(fused[#loc67, #loc66])
#loc216 = loc(fused[#loc69, #loc68])
#loc217 = loc(fused[#loc76, #loc77])
#loc218 = loc(fused[#loc78, #loc79])
#loc219 = loc(fused[#loc80, #loc81, #loc82, #loc77])
#loc220 = loc(fused[#loc85, #loc86])
#loc221 = loc(fused[#loc87, #loc88])
#loc222 = loc(fused[#loc90, #loc89])
#loc223 = loc(fused[#loc91, #loc92])
#loc224 = loc(fused[#loc93, #loc94])
#loc225 = loc(fused[#loc95, #loc92])
#loc226 = loc(fused[#loc96, #loc97])
#loc227 = loc(fused[#loc99, #loc97])
#loc228 = loc(fused[#loc101, #loc100])
#loc229 = loc(fused[#loc103, #loc102])
#loc230 = loc(fused[#loc110, #loc111])
#loc231 = loc(fused[#loc112, #loc113])
#loc232 = loc(fused[#loc114, #loc111])
#loc233 = loc(fused[#loc116, #loc117])
#loc234 = loc(fused[#loc118, #loc119])
#loc235 = loc(fused[#loc121, #loc120])
#loc236 = loc(fused[#loc122, #loc123])
#loc237 = loc(fused[#loc124, #loc125])
#loc238 = loc(fused[#loc126, #loc127, #loc128, #loc123])
#loc239 = loc(fused[#loc131, #loc132])
#loc240 = loc(fused[#loc133, #loc134])
#loc241 = loc(fused[#loc136, #loc135])
#loc242 = loc(fused[#loc138, #loc137])
#loc243 = loc(fused[#loc145, #loc146])
#loc244 = loc(fused[#loc147, #loc148])
#loc245 = loc(fused[#loc149, #loc146])
#loc246 = loc(fused[#loc150, #loc151])
#loc247 = loc(fused[#loc152, #loc153])
#loc248 = loc(fused[#loc155, #loc154])
#loc249 = loc(fused[#loc156, #loc157])
#loc250 = loc(fused[#loc158, #loc159])
#loc251 = loc(fused[#loc160, #loc157])
#loc252 = loc(fused[#loc161, #loc162])
#loc253 = loc(fused[#loc163, #loc164])
#loc254 = loc(fused[#loc166, #loc165])
#loc255 = loc(fused[#loc168, #loc167])
#loc256 = loc(fused[#loc175, #loc176])
#loc257 = loc(fused[#loc177, #loc178])
#loc258 = loc(fused[#loc179, #loc176])
#loc259 = loc(fused[#loc180, #loc181])
