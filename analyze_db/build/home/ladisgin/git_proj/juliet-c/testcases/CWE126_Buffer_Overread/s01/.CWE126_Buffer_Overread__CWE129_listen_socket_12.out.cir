!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc213 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":417:10)
#loc214 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":417:14)
#loc215 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":417:20)
#loc216 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":417:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc652 = loc(fused[#loc213, #loc214])
#loc653 = loc(fused[#loc215, #loc216])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_listen_socket_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc571)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc572)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc573)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc574)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc575)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc576)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc577)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc578)
  cir.func private @close(!s32i) -> !s32i loc(#loc579)
  cir.func private @printIntLine(!s32i) loc(#loc580)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc581)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc23)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc24)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_listen_socket_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc583)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc30)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc584)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc586)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc586)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc34)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc34)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc589)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc590)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc591)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc592)
          %11 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc593)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc46)
          %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc46)
          cir.store %13, %9 : !s32i, !cir.ptr<!s32i> loc(#loc591)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc48)
          %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc48)
          cir.store %15, %10 : !s32i, !cir.ptr<!s32i> loc(#loc592)
          cir.scope {
            cir.do {
              %16 = cir.const #cir.int<2> : !s32i loc(#loc53)
              %17 = cir.const #cir.int<1> : !s32i loc(#loc54)
              %18 = cir.const #cir.int<6> : !s32i loc(#loc55)
              %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc56)
              cir.store %19, %9 : !s32i, !cir.ptr<!s32i> loc(#loc595)
              cir.scope {
                %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc61)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc62)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc62)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc597)
                cir.if %64 {
                  cir.break loc(#loc64)
                } loc(#loc598)
              } loc(#loc596)
              %20 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc599)
              %21 = cir.const #cir.int<0> : !s32i loc(#loc67)
              %22 = cir.const #cir.int<16> : !u64i loc(#loc600)
              cir.libc.memset %22 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc601)
              %23 = cir.const #cir.int<2> : !s32i loc(#loc72)
              %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc72)
              %25 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
              cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc602)
              %26 = cir.const #cir.int<0> : !s32i loc(#loc75)
              %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc75)
              %28 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
              %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
              cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc603)
              %30 = cir.const #cir.int<27015> : !s32i loc(#loc79)
              %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc79)
              %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc80)
              %33 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
              cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc604)
              cir.scope {
                %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc86)
                %62 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc606)
                %63 = cir.const #cir.int<16> : !u64i loc(#loc607)
                %64 = cir.cast(integral, %63 : !u64i), !u32i loc(#loc607)
                %65 = cir.call @bind(%61, %62, %64) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc91)
                %66 = cir.const #cir.int<1> : !s32i loc(#loc92)
                %67 = cir.unary(minus, %66) : !s32i, !s32i loc(#loc92)
                %68 = cir.cmp(eq, %65, %67) : !s32i, !cir.bool loc(#loc608)
                cir.if %68 {
                  cir.break loc(#loc94)
                } loc(#loc609)
              } loc(#loc605)
              cir.scope {
                %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc97)
                %62 = cir.const #cir.int<5> : !s32i loc(#loc98)
                %63 = cir.call @listen(%61, %62) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc99)
                %64 = cir.const #cir.int<1> : !s32i loc(#loc100)
                %65 = cir.unary(minus, %64) : !s32i, !s32i loc(#loc100)
                %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc611)
                cir.if %66 {
                  cir.break loc(#loc102)
                } loc(#loc612)
              } loc(#loc610)
              %34 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc103)
              %35 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc104)
              %36 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc105)
              %37 = cir.call @accept(%34, %35, %36) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc106)
              cir.store %37, %10 : !s32i, !cir.ptr<!s32i> loc(#loc613)
              cir.scope {
                %61 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc111)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc112)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc112)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc615)
                cir.if %64 {
                  cir.break loc(#loc114)
                } loc(#loc616)
              } loc(#loc614)
              %38 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc115)
              %39 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc116)
              %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc116)
              %41 = cir.const #cir.int<3> : !s32i loc(#loc117)
              %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc117)
              %43 = cir.const #cir.int<4> : !u64i loc(#loc117)
              %44 = cir.binop(mul, %42, %43) : !u64i loc(#loc117)
              %45 = cir.const #cir.int<2> : !s32i loc(#loc117)
              %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc117)
              %47 = cir.binop(add, %44, %46) : !u64i loc(#loc117)
              %48 = cir.const #cir.int<1> : !s32i loc(#loc118)
              %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc118)
              %50 = cir.binop(sub, %47, %49) : !u64i loc(#loc617)
              %51 = cir.const #cir.int<0> : !s32i loc(#loc119)
              %52 = cir.call @recv(%38, %40, %50, %51) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc120)
              %53 = cir.cast(integral, %52 : !s64i), !s32i loc(#loc120)
              cir.store %53, %7 : !s32i, !cir.ptr<!s32i> loc(#loc618)
              cir.scope {
                %61 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc125)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc126)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc126)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc620)
                %65 = cir.ternary(%64, true {
                  %66 = cir.const #true loc(#loc127)
                  cir.yield %66 : !cir.bool loc(#loc127)
                }, false {
                  %66 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc128)
                  %67 = cir.const #cir.int<0> : !s32i loc(#loc129)
                  %68 = cir.cmp(eq, %66, %67) : !s32i, !cir.bool loc(#loc621)
                  %69 = cir.ternary(%68, true {
                    %70 = cir.const #true loc(#loc127)
                    cir.yield %70 : !cir.bool loc(#loc127)
                  }, false {
                    %70 = cir.const #false loc(#loc127)
                    cir.yield %70 : !cir.bool loc(#loc127)
                  }) : (!cir.bool) -> !cir.bool loc(#loc127)
                  cir.yield %69 : !cir.bool loc(#loc127)
                }) : (!cir.bool) -> !cir.bool loc(#loc127)
                cir.if %65 {
                  cir.break loc(#loc131)
                } loc(#loc622)
              } loc(#loc619)
              %54 = cir.const #cir.int<0> : !s32i loc(#loc132)
              %55 = cir.cast(integral, %54 : !s32i), !s8i loc(#loc132)
              %56 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc133)
              %57 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc134)
              %58 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %56 : !s32i), !cir.ptr<!s8i> loc(#loc134)
              cir.store %55, %58 : !s8i, !cir.ptr<!s8i> loc(#loc623)
              %59 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc135)
              %60 = cir.call @atoi(%59) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc136)
              cir.store %60, %0 : !s32i, !cir.ptr<!s32i> loc(#loc624)
              cir.yield loc(#loc52)
            } while {
              %16 = cir.const #cir.int<0> : !s32i loc(#loc139)
              %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc139)
              cir.condition(%17) loc(#loc139)
            } loc(#loc594)
          } loc(#loc594)
          cir.scope {
            %16 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc142)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc143)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc143)
            %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc626)
            cir.if %19 {
              %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc145)
              %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc146)
            } loc(#loc627)
          } loc(#loc625)
          cir.scope {
            %16 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc149)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc150)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc150)
            %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc629)
            cir.if %19 {
              %20 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc152)
              %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc153)
            } loc(#loc630)
          } loc(#loc628)
        } loc(#loc588)
      } else {
        %7 = cir.const #cir.int<7> : !s32i loc(#loc154)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc631)
      } loc(#loc587)
    } loc(#loc585)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc633)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc633)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc158)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc158)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc636)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc636)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc636)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc169)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc170)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc638)
            cir.if %11 {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc174)
              %13 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc175)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc175)
              %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc175)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc176)
            } else {
              %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc23)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc23)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc177)
            } loc(#loc639)
          } loc(#loc637)
        } loc(#loc635)
      } else {
        cir.scope {
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc641)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc641)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc641)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc184)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc185)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc643)
            %12 = cir.ternary(%11, true {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc187)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc188)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc644)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc186)
                cir.yield %17 : !cir.bool loc(#loc186)
              }, false {
                %17 = cir.const #false loc(#loc186)
                cir.yield %17 : !cir.bool loc(#loc186)
              }) : (!cir.bool) -> !cir.bool loc(#loc186)
              cir.yield %16 : !cir.bool loc(#loc186)
            }, false {
              %13 = cir.const #false loc(#loc186)
              cir.yield %13 : !cir.bool loc(#loc186)
            }) : (!cir.bool) -> !cir.bool loc(#loc186)
            cir.if %12 {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc193)
              %14 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc194)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc194)
              %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc194)
              cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc195)
            } else {
              %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc24)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc24)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc196)
            } loc(#loc645)
          } loc(#loc642)
        } loc(#loc640)
      } loc(#loc634)
    } loc(#loc632)
    cir.return loc(#loc26)
  } loc(#loc582)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_listen_socket_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc647)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc199)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc648)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc201)
    cir.return loc(#loc198)
  } loc(#loc646)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc649)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc650)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc207)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc208)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc209)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc210)
  cir.func @main(%arg0: !s32i loc(fused[#loc213, #loc214]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc215, #loc216])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc652)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc653)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc212)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc217)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc217)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc218)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc219)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc219)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc220)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc207)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc207)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc221)
    %8 = cir.get_global @CWE126_Buffer_Overread__CWE129_listen_socket_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc654)
    cir.call @CWE126_Buffer_Overread__CWE129_listen_socket_12_good() : () -> () loc(#loc222)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc208)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc208)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc224)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc209)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc209)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc225)
    %13 = cir.get_global @CWE126_Buffer_Overread__CWE129_listen_socket_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc655)
    cir.call @CWE126_Buffer_Overread__CWE129_listen_socket_12_bad() : () -> () loc(#loc226)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc210)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc210)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc228)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc229)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc656)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc656)
    cir.return %17 : !s32i loc(#loc656)
  } loc(#loc651)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc658)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc235)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc236)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc659)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc661)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc661)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc240)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc240)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc664)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc665)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc666)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc667)
          %11 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc668)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc252)
          %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc252)
          cir.store %13, %9 : !s32i, !cir.ptr<!s32i> loc(#loc666)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc254)
          %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc254)
          cir.store %15, %10 : !s32i, !cir.ptr<!s32i> loc(#loc667)
          cir.scope {
            cir.do {
              %16 = cir.const #cir.int<2> : !s32i loc(#loc259)
              %17 = cir.const #cir.int<1> : !s32i loc(#loc260)
              %18 = cir.const #cir.int<6> : !s32i loc(#loc261)
              %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc262)
              cir.store %19, %9 : !s32i, !cir.ptr<!s32i> loc(#loc670)
              cir.scope {
                %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc267)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc268)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc268)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc672)
                cir.if %64 {
                  cir.break loc(#loc270)
                } loc(#loc673)
              } loc(#loc671)
              %20 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc674)
              %21 = cir.const #cir.int<0> : !s32i loc(#loc273)
              %22 = cir.const #cir.int<16> : !u64i loc(#loc675)
              cir.libc.memset %22 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc676)
              %23 = cir.const #cir.int<2> : !s32i loc(#loc278)
              %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc278)
              %25 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
              cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc677)
              %26 = cir.const #cir.int<0> : !s32i loc(#loc280)
              %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc280)
              %28 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
              %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
              cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc678)
              %30 = cir.const #cir.int<27015> : !s32i loc(#loc282)
              %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc282)
              %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc283)
              %33 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
              cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc679)
              cir.scope {
                %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc288)
                %62 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc681)
                %63 = cir.const #cir.int<16> : !u64i loc(#loc682)
                %64 = cir.cast(integral, %63 : !u64i), !u32i loc(#loc682)
                %65 = cir.call @bind(%61, %62, %64) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc293)
                %66 = cir.const #cir.int<1> : !s32i loc(#loc294)
                %67 = cir.unary(minus, %66) : !s32i, !s32i loc(#loc294)
                %68 = cir.cmp(eq, %65, %67) : !s32i, !cir.bool loc(#loc683)
                cir.if %68 {
                  cir.break loc(#loc296)
                } loc(#loc684)
              } loc(#loc680)
              cir.scope {
                %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc299)
                %62 = cir.const #cir.int<5> : !s32i loc(#loc300)
                %63 = cir.call @listen(%61, %62) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc301)
                %64 = cir.const #cir.int<1> : !s32i loc(#loc302)
                %65 = cir.unary(minus, %64) : !s32i, !s32i loc(#loc302)
                %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc686)
                cir.if %66 {
                  cir.break loc(#loc304)
                } loc(#loc687)
              } loc(#loc685)
              %34 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc305)
              %35 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc306)
              %36 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc307)
              %37 = cir.call @accept(%34, %35, %36) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc308)
              cir.store %37, %10 : !s32i, !cir.ptr<!s32i> loc(#loc688)
              cir.scope {
                %61 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc313)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc314)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc314)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc690)
                cir.if %64 {
                  cir.break loc(#loc316)
                } loc(#loc691)
              } loc(#loc689)
              %38 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc317)
              %39 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc318)
              %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc318)
              %41 = cir.const #cir.int<3> : !s32i loc(#loc319)
              %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc319)
              %43 = cir.const #cir.int<4> : !u64i loc(#loc319)
              %44 = cir.binop(mul, %42, %43) : !u64i loc(#loc319)
              %45 = cir.const #cir.int<2> : !s32i loc(#loc319)
              %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc319)
              %47 = cir.binop(add, %44, %46) : !u64i loc(#loc319)
              %48 = cir.const #cir.int<1> : !s32i loc(#loc320)
              %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc320)
              %50 = cir.binop(sub, %47, %49) : !u64i loc(#loc692)
              %51 = cir.const #cir.int<0> : !s32i loc(#loc321)
              %52 = cir.call @recv(%38, %40, %50, %51) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc322)
              %53 = cir.cast(integral, %52 : !s64i), !s32i loc(#loc322)
              cir.store %53, %7 : !s32i, !cir.ptr<!s32i> loc(#loc693)
              cir.scope {
                %61 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc327)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc328)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc328)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc695)
                %65 = cir.ternary(%64, true {
                  %66 = cir.const #true loc(#loc329)
                  cir.yield %66 : !cir.bool loc(#loc329)
                }, false {
                  %66 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc330)
                  %67 = cir.const #cir.int<0> : !s32i loc(#loc331)
                  %68 = cir.cmp(eq, %66, %67) : !s32i, !cir.bool loc(#loc696)
                  %69 = cir.ternary(%68, true {
                    %70 = cir.const #true loc(#loc329)
                    cir.yield %70 : !cir.bool loc(#loc329)
                  }, false {
                    %70 = cir.const #false loc(#loc329)
                    cir.yield %70 : !cir.bool loc(#loc329)
                  }) : (!cir.bool) -> !cir.bool loc(#loc329)
                  cir.yield %69 : !cir.bool loc(#loc329)
                }) : (!cir.bool) -> !cir.bool loc(#loc329)
                cir.if %65 {
                  cir.break loc(#loc333)
                } loc(#loc697)
              } loc(#loc694)
              %54 = cir.const #cir.int<0> : !s32i loc(#loc334)
              %55 = cir.cast(integral, %54 : !s32i), !s8i loc(#loc334)
              %56 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc335)
              %57 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc336)
              %58 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %56 : !s32i), !cir.ptr<!s8i> loc(#loc336)
              cir.store %55, %58 : !s8i, !cir.ptr<!s8i> loc(#loc698)
              %59 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc337)
              %60 = cir.call @atoi(%59) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc338)
              cir.store %60, %0 : !s32i, !cir.ptr<!s32i> loc(#loc699)
              cir.yield loc(#loc258)
            } while {
              %16 = cir.const #cir.int<0> : !s32i loc(#loc341)
              %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc341)
              cir.condition(%17) loc(#loc341)
            } loc(#loc669)
          } loc(#loc669)
          cir.scope {
            %16 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc344)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc345)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc345)
            %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc701)
            cir.if %19 {
              %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc347)
              %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc348)
            } loc(#loc702)
          } loc(#loc700)
          cir.scope {
            %16 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc351)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc352)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc352)
            %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc704)
            cir.if %19 {
              %20 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc354)
              %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc355)
            } loc(#loc705)
          } loc(#loc703)
        } loc(#loc663)
      } else {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc707)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc708)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc709)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc710)
          %11 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc711)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc363)
          %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc363)
          cir.store %13, %9 : !s32i, !cir.ptr<!s32i> loc(#loc709)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc365)
          %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc365)
          cir.store %15, %10 : !s32i, !cir.ptr<!s32i> loc(#loc710)
          cir.scope {
            cir.do {
              %16 = cir.const #cir.int<2> : !s32i loc(#loc370)
              %17 = cir.const #cir.int<1> : !s32i loc(#loc371)
              %18 = cir.const #cir.int<6> : !s32i loc(#loc372)
              %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc373)
              cir.store %19, %9 : !s32i, !cir.ptr<!s32i> loc(#loc713)
              cir.scope {
                %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc378)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc379)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc379)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc715)
                cir.if %64 {
                  cir.break loc(#loc381)
                } loc(#loc716)
              } loc(#loc714)
              %20 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc717)
              %21 = cir.const #cir.int<0> : !s32i loc(#loc384)
              %22 = cir.const #cir.int<16> : !u64i loc(#loc718)
              cir.libc.memset %22 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc719)
              %23 = cir.const #cir.int<2> : !s32i loc(#loc389)
              %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc389)
              %25 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
              cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc720)
              %26 = cir.const #cir.int<0> : !s32i loc(#loc391)
              %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc391)
              %28 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
              %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
              cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc721)
              %30 = cir.const #cir.int<27015> : !s32i loc(#loc393)
              %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc393)
              %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc394)
              %33 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
              cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc722)
              cir.scope {
                %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc399)
                %62 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc724)
                %63 = cir.const #cir.int<16> : !u64i loc(#loc725)
                %64 = cir.cast(integral, %63 : !u64i), !u32i loc(#loc725)
                %65 = cir.call @bind(%61, %62, %64) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc404)
                %66 = cir.const #cir.int<1> : !s32i loc(#loc405)
                %67 = cir.unary(minus, %66) : !s32i, !s32i loc(#loc405)
                %68 = cir.cmp(eq, %65, %67) : !s32i, !cir.bool loc(#loc726)
                cir.if %68 {
                  cir.break loc(#loc407)
                } loc(#loc727)
              } loc(#loc723)
              cir.scope {
                %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc410)
                %62 = cir.const #cir.int<5> : !s32i loc(#loc411)
                %63 = cir.call @listen(%61, %62) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc412)
                %64 = cir.const #cir.int<1> : !s32i loc(#loc413)
                %65 = cir.unary(minus, %64) : !s32i, !s32i loc(#loc413)
                %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc729)
                cir.if %66 {
                  cir.break loc(#loc415)
                } loc(#loc730)
              } loc(#loc728)
              %34 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc416)
              %35 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc417)
              %36 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc418)
              %37 = cir.call @accept(%34, %35, %36) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc419)
              cir.store %37, %10 : !s32i, !cir.ptr<!s32i> loc(#loc731)
              cir.scope {
                %61 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc424)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc425)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc425)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc733)
                cir.if %64 {
                  cir.break loc(#loc427)
                } loc(#loc734)
              } loc(#loc732)
              %38 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc428)
              %39 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc429)
              %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc429)
              %41 = cir.const #cir.int<3> : !s32i loc(#loc430)
              %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc430)
              %43 = cir.const #cir.int<4> : !u64i loc(#loc430)
              %44 = cir.binop(mul, %42, %43) : !u64i loc(#loc430)
              %45 = cir.const #cir.int<2> : !s32i loc(#loc430)
              %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc430)
              %47 = cir.binop(add, %44, %46) : !u64i loc(#loc430)
              %48 = cir.const #cir.int<1> : !s32i loc(#loc431)
              %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc431)
              %50 = cir.binop(sub, %47, %49) : !u64i loc(#loc735)
              %51 = cir.const #cir.int<0> : !s32i loc(#loc432)
              %52 = cir.call @recv(%38, %40, %50, %51) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc433)
              %53 = cir.cast(integral, %52 : !s64i), !s32i loc(#loc433)
              cir.store %53, %7 : !s32i, !cir.ptr<!s32i> loc(#loc736)
              cir.scope {
                %61 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc438)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc439)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc439)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc738)
                %65 = cir.ternary(%64, true {
                  %66 = cir.const #true loc(#loc440)
                  cir.yield %66 : !cir.bool loc(#loc440)
                }, false {
                  %66 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc441)
                  %67 = cir.const #cir.int<0> : !s32i loc(#loc442)
                  %68 = cir.cmp(eq, %66, %67) : !s32i, !cir.bool loc(#loc739)
                  %69 = cir.ternary(%68, true {
                    %70 = cir.const #true loc(#loc440)
                    cir.yield %70 : !cir.bool loc(#loc440)
                  }, false {
                    %70 = cir.const #false loc(#loc440)
                    cir.yield %70 : !cir.bool loc(#loc440)
                  }) : (!cir.bool) -> !cir.bool loc(#loc440)
                  cir.yield %69 : !cir.bool loc(#loc440)
                }) : (!cir.bool) -> !cir.bool loc(#loc440)
                cir.if %65 {
                  cir.break loc(#loc444)
                } loc(#loc740)
              } loc(#loc737)
              %54 = cir.const #cir.int<0> : !s32i loc(#loc445)
              %55 = cir.cast(integral, %54 : !s32i), !s8i loc(#loc445)
              %56 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc446)
              %57 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc447)
              %58 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %56 : !s32i), !cir.ptr<!s8i> loc(#loc447)
              cir.store %55, %58 : !s8i, !cir.ptr<!s8i> loc(#loc741)
              %59 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc448)
              %60 = cir.call @atoi(%59) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc449)
              cir.store %60, %0 : !s32i, !cir.ptr<!s32i> loc(#loc742)
              cir.yield loc(#loc369)
            } while {
              %16 = cir.const #cir.int<0> : !s32i loc(#loc452)
              %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc452)
              cir.condition(%17) loc(#loc452)
            } loc(#loc712)
          } loc(#loc712)
          cir.scope {
            %16 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc455)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc456)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc456)
            %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc744)
            cir.if %19 {
              %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc458)
              %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc459)
            } loc(#loc745)
          } loc(#loc743)
          cir.scope {
            %16 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc462)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc463)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc463)
            %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc747)
            cir.if %19 {
              %20 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc465)
              %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc466)
            } loc(#loc748)
          } loc(#loc746)
        } loc(#loc706)
      } loc(#loc662)
    } loc(#loc660)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc750)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc750)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc469)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc469)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc753)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc753)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc753)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc480)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc481)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc755)
            %12 = cir.ternary(%11, true {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc483)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc484)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc756)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc482)
                cir.yield %17 : !cir.bool loc(#loc482)
              }, false {
                %17 = cir.const #false loc(#loc482)
                cir.yield %17 : !cir.bool loc(#loc482)
              }) : (!cir.bool) -> !cir.bool loc(#loc482)
              cir.yield %16 : !cir.bool loc(#loc482)
            }, false {
              %13 = cir.const #false loc(#loc482)
              cir.yield %13 : !cir.bool loc(#loc482)
            }) : (!cir.bool) -> !cir.bool loc(#loc482)
            cir.if %12 {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc489)
              %14 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc490)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc490)
              %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc490)
              cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc491)
            } else {
              %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc492)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc492)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc493)
            } loc(#loc757)
          } loc(#loc754)
        } loc(#loc752)
      } else {
        cir.scope {
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc759)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc759)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc759)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc500)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc501)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc761)
            %12 = cir.ternary(%11, true {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc503)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc504)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc762)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc502)
                cir.yield %17 : !cir.bool loc(#loc502)
              }, false {
                %17 = cir.const #false loc(#loc502)
                cir.yield %17 : !cir.bool loc(#loc502)
              }) : (!cir.bool) -> !cir.bool loc(#loc502)
              cir.yield %16 : !cir.bool loc(#loc502)
            }, false {
              %13 = cir.const #false loc(#loc502)
              cir.yield %13 : !cir.bool loc(#loc502)
            }) : (!cir.bool) -> !cir.bool loc(#loc502)
            cir.if %12 {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc509)
              %14 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc510)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc510)
              %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc510)
              cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc511)
            } else {
              %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc512)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc512)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc513)
            } loc(#loc763)
          } loc(#loc760)
        } loc(#loc758)
      } loc(#loc751)
    } loc(#loc749)
    cir.return loc(#loc232)
  } loc(#loc657)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc765)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc518)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc519)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc766)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc768)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc768)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc523)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc523)
      cir.if %6 {
        %7 = cir.const #cir.int<7> : !s32i loc(#loc528)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc770)
      } else {
        %7 = cir.const #cir.int<7> : !s32i loc(#loc530)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc771)
      } loc(#loc769)
    } loc(#loc767)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc773)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc773)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc534)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc534)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc776)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc776)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc776)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc545)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc546)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc778)
            cir.if %11 {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc550)
              %13 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc551)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc551)
              %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc551)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc552)
            } else {
              %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc553)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc553)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc554)
            } loc(#loc779)
          } loc(#loc777)
        } loc(#loc775)
      } else {
        cir.scope {
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc781)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc781)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc781)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc561)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc562)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc783)
            cir.if %11 {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc566)
              %13 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc567)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc567)
              %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc567)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc568)
            } else {
              %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc569)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc569)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc570)
            } loc(#loc784)
          } loc(#loc782)
        } loc(#loc780)
      } loc(#loc774)
    } loc(#loc772)
    cir.return loc(#loc515)
  } loc(#loc764)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_listen_socket_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/netinet/in.h":404:1)
#loc6 = loc("/usr/include/netinet/in.h":405:40)
#loc7 = loc("/usr/include/sys/socket.h":112:1)
#loc8 = loc("/usr/include/sys/socket.h":113:6)
#loc9 = loc("/usr/include/sys/socket.h":296:1)
#loc10 = loc("/usr/include/sys/socket.h":296:39)
#loc11 = loc("/usr/include/sys/socket.h":306:1)
#loc12 = loc("/usr/include/sys/socket.h":307:38)
#loc13 = loc("/usr/include/sys/socket.h":145:1)
#loc14 = loc("/usr/include/sys/socket.h":145:68)
#loc15 = loc("/usr/include/stdlib.h":105:1)
#loc16 = loc("/usr/include/stdlib.h":106:33)
#loc17 = loc("/usr/include/unistd.h":358:1)
#loc18 = loc("/usr/include/unistd.h":358:27)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc22 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":139:27)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":154:27)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":44:1)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":158:1)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":46:5)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":46:9)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":48:13)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":48:12)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":48:5)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":49:5)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":126:5)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":49:8)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":49:33)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":50:5)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":120:5)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":122:5)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":51:9)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":119:9)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":56:13)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":56:17)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":57:13)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":57:32)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":58:13)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":58:35)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":59:13)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":59:35)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":60:13)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":60:45)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":61:13)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":104:21)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":71:39)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":71:48)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":71:61)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":71:32)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":71:17)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":71:72)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":72:17)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":75:17)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":72:21)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":72:37)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":73:17)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":74:21)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":76:24)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":76:25)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":76:34)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":76:37)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":76:51)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":76:17)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":76:52)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":77:38)
#loc73 = loc("/usr/include/netinet/in.h":249:5)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":77:17)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":78:43)
#loc76 = loc("/usr/include/netinet/in.h":251:20)
#loc77 = loc("/usr/include/netinet/in.h":33:15)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":78:17)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":79:42)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":79:36)
#loc81 = loc("/usr/include/netinet/in.h":250:15)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":79:17)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":79:50)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":80:17)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":83:17)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":80:26)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":80:58)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":80:59)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":80:68)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":80:82)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":80:21)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":80:88)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":81:17)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":82:21)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":84:17)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":87:17)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":84:28)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":84:42)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":84:21)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":84:61)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":85:17)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":86:21)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":88:39)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":88:53)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":88:59)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":88:32)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":88:17)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":88:63)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":89:17)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":92:17)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":89:21)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":89:37)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":90:17)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":91:21)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":94:35)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":94:49)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":94:62)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":94:80)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":94:83)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":94:30)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":94:17)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":94:84)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":95:17)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":98:17)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":95:21)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":95:35)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":95:48)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":95:51)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":95:65)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":96:17)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":97:21)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":100:43)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":100:29)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":100:17)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":102:29)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":102:24)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":102:17)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":102:40)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":104:20)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":105:13)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":108:13)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":105:17)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":105:33)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":106:13)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":107:30)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":107:17)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":109:13)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":112:13)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":109:17)
#loc150 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":109:33)
#loc151 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":110:13)
#loc152 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":111:30)
#loc153 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":111:17)
#loc154 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":125:16)
#loc155 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":125:9)
#loc156 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":127:5)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":157:5)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":127:8)
#loc159 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":127:33)
#loc160 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":128:5)
#loc161 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":142:5)
#loc162 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":144:5)
#loc163 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":129:9)
#loc164 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":141:9)
#loc165 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":130:13)
#loc166 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":130:34)
#loc167 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":133:13)
#loc168 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":140:13)
#loc169 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":133:17)
#loc170 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":133:25)
#loc171 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":134:13)
#loc172 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":136:13)
#loc173 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":138:13)
#loc174 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":135:37)
#loc175 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":135:30)
#loc176 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":135:17)
#loc177 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":139:17)
#loc178 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":145:9)
#loc179 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":156:9)
#loc180 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":146:13)
#loc181 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":146:34)
#loc182 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":148:13)
#loc183 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":155:13)
#loc184 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":148:17)
#loc185 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":148:25)
#loc186 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":148:27)
#loc187 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":148:30)
#loc188 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":148:38)
#loc189 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":148:40)
#loc190 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":149:13)
#loc191 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":151:13)
#loc192 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":153:13)
#loc193 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":150:37)
#loc194 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":150:30)
#loc195 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":150:17)
#loc196 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":154:17)
#loc197 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":402:1)
#loc198 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":406:1)
#loc199 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":404:5)
#loc200 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":404:13)
#loc201 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":405:5)
#loc202 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":405:13)
#loc203 = loc("/usr/include/stdlib.h":575:1)
#loc204 = loc("/usr/include/stdlib.h":575:41)
#loc205 = loc("/usr/include/time.h":76:1)
#loc206 = loc("/usr/include/time.h":76:38)
#loc207 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":422:15)
#loc208 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":424:15)
#loc209 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":427:15)
#loc210 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":429:15)
#loc211 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":417:1)
#loc212 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":432:1)
#loc217 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":418:1)
#loc218 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":420:27)
#loc219 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":420:22)
#loc220 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":420:5)
#loc221 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":422:5)
#loc222 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":423:5)
#loc223 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":423:58)
#loc224 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":424:5)
#loc225 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":427:5)
#loc226 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":428:5)
#loc227 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":428:57)
#loc228 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":429:5)
#loc229 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":431:12)
#loc230 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":431:5)
#loc231 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":167:1)
#loc232 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":346:1)
#loc233 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":169:5)
#loc234 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":169:9)
#loc235 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":171:13)
#loc236 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":171:12)
#loc237 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":171:5)
#loc238 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":172:5)
#loc239 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":315:5)
#loc240 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":172:8)
#loc241 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":172:33)
#loc242 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":173:5)
#loc243 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":243:5)
#loc244 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":245:5)
#loc245 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":174:9)
#loc246 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":242:9)
#loc247 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":179:13)
#loc248 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":179:17)
#loc249 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":180:13)
#loc250 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":180:32)
#loc251 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":181:13)
#loc252 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":181:35)
#loc253 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":182:13)
#loc254 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":182:35)
#loc255 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":183:13)
#loc256 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":183:45)
#loc257 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":184:13)
#loc258 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":227:21)
#loc259 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":194:39)
#loc260 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":194:48)
#loc261 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":194:61)
#loc262 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":194:32)
#loc263 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":194:17)
#loc264 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":194:72)
#loc265 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":195:17)
#loc266 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":198:17)
#loc267 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":195:21)
#loc268 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":195:37)
#loc269 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":196:17)
#loc270 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":197:21)
#loc271 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":199:24)
#loc272 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":199:25)
#loc273 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":199:34)
#loc274 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":199:37)
#loc275 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":199:51)
#loc276 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":199:17)
#loc277 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":199:52)
#loc278 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":200:38)
#loc279 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":200:17)
#loc280 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":201:43)
#loc281 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":201:17)
#loc282 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":202:42)
#loc283 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":202:36)
#loc284 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":202:17)
#loc285 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":202:50)
#loc286 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":203:17)
#loc287 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":206:17)
#loc288 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":203:26)
#loc289 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":203:58)
#loc290 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":203:59)
#loc291 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":203:68)
#loc292 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":203:82)
#loc293 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":203:21)
#loc294 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":203:88)
#loc295 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":204:17)
#loc296 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":205:21)
#loc297 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":207:17)
#loc298 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":210:17)
#loc299 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":207:28)
#loc300 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":207:42)
#loc301 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":207:21)
#loc302 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":207:61)
#loc303 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":208:17)
#loc304 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":209:21)
#loc305 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":211:39)
#loc306 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":211:53)
#loc307 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":211:59)
#loc308 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":211:32)
#loc309 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":211:17)
#loc310 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":211:63)
#loc311 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":212:17)
#loc312 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":215:17)
#loc313 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":212:21)
#loc314 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":212:37)
#loc315 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":213:17)
#loc316 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":214:21)
#loc317 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":217:35)
#loc318 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":217:49)
#loc319 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":217:62)
#loc320 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":217:80)
#loc321 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":217:83)
#loc322 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":217:30)
#loc323 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":217:17)
#loc324 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":217:84)
#loc325 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":218:17)
#loc326 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":221:17)
#loc327 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":218:21)
#loc328 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":218:35)
#loc329 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":218:48)
#loc330 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":218:51)
#loc331 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":218:65)
#loc332 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":219:17)
#loc333 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":220:21)
#loc334 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":223:43)
#loc335 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":223:29)
#loc336 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":223:17)
#loc337 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":225:29)
#loc338 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":225:24)
#loc339 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":225:17)
#loc340 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":225:40)
#loc341 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":227:20)
#loc342 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":228:13)
#loc343 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":231:13)
#loc344 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":228:17)
#loc345 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":228:33)
#loc346 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":229:13)
#loc347 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":230:30)
#loc348 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":230:17)
#loc349 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":232:13)
#loc350 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":235:13)
#loc351 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":232:17)
#loc352 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":232:33)
#loc353 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":233:13)
#loc354 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":234:30)
#loc355 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":234:17)
#loc356 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":246:9)
#loc357 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":314:9)
#loc358 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":251:13)
#loc359 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":251:17)
#loc360 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":252:13)
#loc361 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":252:32)
#loc362 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":253:13)
#loc363 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":253:35)
#loc364 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":254:13)
#loc365 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":254:35)
#loc366 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":255:13)
#loc367 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":255:45)
#loc368 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":256:13)
#loc369 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":299:21)
#loc370 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":266:39)
#loc371 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":266:48)
#loc372 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":266:61)
#loc373 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":266:32)
#loc374 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":266:17)
#loc375 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":266:72)
#loc376 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":267:17)
#loc377 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":270:17)
#loc378 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":267:21)
#loc379 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":267:37)
#loc380 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":268:17)
#loc381 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":269:21)
#loc382 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":271:24)
#loc383 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":271:25)
#loc384 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":271:34)
#loc385 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":271:37)
#loc386 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":271:51)
#loc387 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":271:17)
#loc388 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":271:52)
#loc389 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":272:38)
#loc390 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":272:17)
#loc391 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":273:43)
#loc392 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":273:17)
#loc393 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":274:42)
#loc394 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":274:36)
#loc395 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":274:17)
#loc396 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":274:50)
#loc397 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":275:17)
#loc398 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":278:17)
#loc399 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":275:26)
#loc400 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":275:58)
#loc401 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":275:59)
#loc402 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":275:68)
#loc403 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":275:82)
#loc404 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":275:21)
#loc405 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":275:88)
#loc406 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":276:17)
#loc407 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":277:21)
#loc408 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":279:17)
#loc409 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":282:17)
#loc410 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":279:28)
#loc411 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":279:42)
#loc412 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":279:21)
#loc413 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":279:61)
#loc414 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":280:17)
#loc415 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":281:21)
#loc416 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":283:39)
#loc417 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":283:53)
#loc418 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":283:59)
#loc419 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":283:32)
#loc420 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":283:17)
#loc421 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":283:63)
#loc422 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":284:17)
#loc423 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":287:17)
#loc424 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":284:21)
#loc425 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":284:37)
#loc426 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":285:17)
#loc427 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":286:21)
#loc428 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":289:35)
#loc429 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":289:49)
#loc430 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":289:62)
#loc431 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":289:80)
#loc432 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":289:83)
#loc433 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":289:30)
#loc434 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":289:17)
#loc435 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":289:84)
#loc436 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":290:17)
#loc437 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":293:17)
#loc438 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":290:21)
#loc439 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":290:35)
#loc440 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":290:48)
#loc441 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":290:51)
#loc442 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":290:65)
#loc443 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":291:17)
#loc444 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":292:21)
#loc445 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":295:43)
#loc446 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":295:29)
#loc447 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":295:17)
#loc448 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":297:29)
#loc449 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":297:24)
#loc450 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":297:17)
#loc451 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":297:40)
#loc452 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":299:20)
#loc453 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":300:13)
#loc454 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":303:13)
#loc455 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":300:17)
#loc456 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":300:33)
#loc457 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":301:13)
#loc458 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":302:30)
#loc459 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":302:17)
#loc460 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":304:13)
#loc461 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":307:13)
#loc462 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":304:17)
#loc463 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":304:33)
#loc464 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":305:13)
#loc465 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":306:30)
#loc466 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":306:17)
#loc467 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":316:5)
#loc468 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":345:5)
#loc469 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":316:8)
#loc470 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":316:33)
#loc471 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":317:5)
#loc472 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":330:5)
#loc473 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":332:5)
#loc474 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":318:9)
#loc475 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":329:9)
#loc476 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":319:13)
#loc477 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":319:34)
#loc478 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":321:13)
#loc479 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":328:13)
#loc480 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":321:17)
#loc481 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":321:25)
#loc482 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":321:27)
#loc483 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":321:30)
#loc484 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":321:38)
#loc485 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":321:40)
#loc486 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":322:13)
#loc487 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":324:13)
#loc488 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":326:13)
#loc489 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":323:37)
#loc490 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":323:30)
#loc491 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":323:17)
#loc492 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":327:27)
#loc493 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":327:17)
#loc494 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":333:9)
#loc495 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":344:9)
#loc496 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":334:13)
#loc497 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":334:34)
#loc498 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":336:13)
#loc499 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":343:13)
#loc500 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":336:17)
#loc501 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":336:25)
#loc502 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":336:27)
#loc503 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":336:30)
#loc504 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":336:38)
#loc505 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":336:40)
#loc506 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":337:13)
#loc507 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":339:13)
#loc508 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":341:13)
#loc509 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":338:37)
#loc510 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":338:30)
#loc511 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":338:17)
#loc512 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":342:27)
#loc513 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":342:17)
#loc514 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":351:1)
#loc515 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":400:1)
#loc516 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":353:5)
#loc517 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":353:9)
#loc518 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":355:13)
#loc519 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":355:12)
#loc520 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":355:5)
#loc521 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":356:5)
#loc522 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":367:5)
#loc523 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":356:8)
#loc524 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":356:33)
#loc525 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":357:5)
#loc526 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":361:5)
#loc527 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":363:5)
#loc528 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":360:16)
#loc529 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":360:9)
#loc530 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":366:16)
#loc531 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":366:9)
#loc532 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":368:5)
#loc533 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":399:5)
#loc534 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":368:8)
#loc535 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":368:33)
#loc536 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":369:5)
#loc537 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":383:5)
#loc538 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":385:5)
#loc539 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":370:9)
#loc540 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":382:9)
#loc541 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":371:13)
#loc542 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":371:34)
#loc543 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":374:13)
#loc544 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":381:13)
#loc545 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":374:17)
#loc546 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":374:25)
#loc547 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":375:13)
#loc548 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":377:13)
#loc549 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":379:13)
#loc550 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":376:37)
#loc551 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":376:30)
#loc552 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":376:17)
#loc553 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":380:27)
#loc554 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":380:17)
#loc555 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":386:9)
#loc556 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":398:9)
#loc557 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":387:13)
#loc558 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":387:34)
#loc559 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":390:13)
#loc560 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":397:13)
#loc561 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":390:17)
#loc562 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":390:25)
#loc563 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":391:13)
#loc564 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":393:13)
#loc565 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":395:13)
#loc566 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":392:37)
#loc567 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":392:30)
#loc568 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":392:17)
#loc569 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":396:27)
#loc570 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_12.c":396:17)
#loc571 = loc(fused[#loc1, #loc2])
#loc572 = loc(fused[#loc3, #loc4])
#loc573 = loc(fused[#loc5, #loc6])
#loc574 = loc(fused[#loc7, #loc8])
#loc575 = loc(fused[#loc9, #loc10])
#loc576 = loc(fused[#loc11, #loc12])
#loc577 = loc(fused[#loc13, #loc14])
#loc578 = loc(fused[#loc15, #loc16])
#loc579 = loc(fused[#loc17, #loc18])
#loc580 = loc(fused[#loc19, #loc20])
#loc581 = loc(fused[#loc21, #loc22])
#loc582 = loc(fused[#loc25, #loc26])
#loc583 = loc(fused[#loc27, #loc28])
#loc584 = loc(fused[#loc31, #loc29])
#loc585 = loc(fused[#loc32, #loc33])
#loc586 = loc(fused[#loc34, #loc35])
#loc587 = loc(fused[#loc36, #loc37, #loc38, #loc33])
#loc588 = loc(fused[#loc39, #loc40])
#loc589 = loc(fused[#loc41, #loc42])
#loc590 = loc(fused[#loc43, #loc44])
#loc591 = loc(fused[#loc45, #loc46])
#loc592 = loc(fused[#loc47, #loc48])
#loc593 = loc(fused[#loc49, #loc50])
#loc594 = loc(fused[#loc51, #loc52])
#loc595 = loc(fused[#loc57, #loc58])
#loc596 = loc(fused[#loc59, #loc60])
#loc597 = loc(fused[#loc61, #loc62])
#loc598 = loc(fused[#loc63, #loc60])
#loc599 = loc(fused[#loc65, #loc66])
#loc600 = loc(fused[#loc68, #loc69])
#loc601 = loc(fused[#loc70, #loc71])
#loc602 = loc(fused[#loc74, #loc72])
#loc603 = loc(fused[#loc78, #loc75])
#loc604 = loc(fused[#loc82, #loc83])
#loc605 = loc(fused[#loc84, #loc85])
#loc606 = loc(fused[#loc87, #loc88])
#loc607 = loc(fused[#loc89, #loc90])
#loc608 = loc(fused[#loc91, #loc92])
#loc609 = loc(fused[#loc93, #loc85])
#loc610 = loc(fused[#loc95, #loc96])
#loc611 = loc(fused[#loc99, #loc100])
#loc612 = loc(fused[#loc101, #loc96])
#loc613 = loc(fused[#loc107, #loc108])
#loc614 = loc(fused[#loc109, #loc110])
#loc615 = loc(fused[#loc111, #loc112])
#loc616 = loc(fused[#loc113, #loc110])
#loc617 = loc(fused[#loc117, #loc118])
#loc618 = loc(fused[#loc121, #loc122])
#loc619 = loc(fused[#loc123, #loc124])
#loc620 = loc(fused[#loc125, #loc126])
#loc621 = loc(fused[#loc128, #loc129])
#loc622 = loc(fused[#loc130, #loc124])
#loc623 = loc(fused[#loc134, #loc132])
#loc624 = loc(fused[#loc137, #loc138])
#loc625 = loc(fused[#loc140, #loc141])
#loc626 = loc(fused[#loc142, #loc143])
#loc627 = loc(fused[#loc144, #loc141])
#loc628 = loc(fused[#loc147, #loc148])
#loc629 = loc(fused[#loc149, #loc150])
#loc630 = loc(fused[#loc151, #loc148])
#loc631 = loc(fused[#loc155, #loc154])
#loc632 = loc(fused[#loc156, #loc157])
#loc633 = loc(fused[#loc158, #loc159])
#loc634 = loc(fused[#loc160, #loc161, #loc162, #loc157])
#loc635 = loc(fused[#loc163, #loc164])
#loc636 = loc(fused[#loc165, #loc166])
#loc637 = loc(fused[#loc167, #loc168])
#loc638 = loc(fused[#loc169, #loc170])
#loc639 = loc(fused[#loc171, #loc172, #loc173, #loc168])
#loc640 = loc(fused[#loc178, #loc179])
#loc641 = loc(fused[#loc180, #loc181])
#loc642 = loc(fused[#loc182, #loc183])
#loc643 = loc(fused[#loc184, #loc185])
#loc644 = loc(fused[#loc187, #loc189])
#loc645 = loc(fused[#loc190, #loc191, #loc192, #loc183])
#loc646 = loc(fused[#loc197, #loc198])
#loc647 = loc(fused[#loc199, #loc200])
#loc648 = loc(fused[#loc201, #loc202])
#loc649 = loc(fused[#loc203, #loc204])
#loc650 = loc(fused[#loc205, #loc206])
#loc651 = loc(fused[#loc211, #loc212])
#loc654 = loc(fused[#loc222, #loc223])
#loc655 = loc(fused[#loc226, #loc227])
#loc656 = loc(fused[#loc230, #loc229])
#loc657 = loc(fused[#loc231, #loc232])
#loc658 = loc(fused[#loc233, #loc234])
#loc659 = loc(fused[#loc237, #loc235])
#loc660 = loc(fused[#loc238, #loc239])
#loc661 = loc(fused[#loc240, #loc241])
#loc662 = loc(fused[#loc242, #loc243, #loc244, #loc239])
#loc663 = loc(fused[#loc245, #loc246])
#loc664 = loc(fused[#loc247, #loc248])
#loc665 = loc(fused[#loc249, #loc250])
#loc666 = loc(fused[#loc251, #loc252])
#loc667 = loc(fused[#loc253, #loc254])
#loc668 = loc(fused[#loc255, #loc256])
#loc669 = loc(fused[#loc257, #loc258])
#loc670 = loc(fused[#loc263, #loc264])
#loc671 = loc(fused[#loc265, #loc266])
#loc672 = loc(fused[#loc267, #loc268])
#loc673 = loc(fused[#loc269, #loc266])
#loc674 = loc(fused[#loc271, #loc272])
#loc675 = loc(fused[#loc274, #loc275])
#loc676 = loc(fused[#loc276, #loc277])
#loc677 = loc(fused[#loc279, #loc278])
#loc678 = loc(fused[#loc281, #loc280])
#loc679 = loc(fused[#loc284, #loc285])
#loc680 = loc(fused[#loc286, #loc287])
#loc681 = loc(fused[#loc289, #loc290])
#loc682 = loc(fused[#loc291, #loc292])
#loc683 = loc(fused[#loc293, #loc294])
#loc684 = loc(fused[#loc295, #loc287])
#loc685 = loc(fused[#loc297, #loc298])
#loc686 = loc(fused[#loc301, #loc302])
#loc687 = loc(fused[#loc303, #loc298])
#loc688 = loc(fused[#loc309, #loc310])
#loc689 = loc(fused[#loc311, #loc312])
#loc690 = loc(fused[#loc313, #loc314])
#loc691 = loc(fused[#loc315, #loc312])
#loc692 = loc(fused[#loc319, #loc320])
#loc693 = loc(fused[#loc323, #loc324])
#loc694 = loc(fused[#loc325, #loc326])
#loc695 = loc(fused[#loc327, #loc328])
#loc696 = loc(fused[#loc330, #loc331])
#loc697 = loc(fused[#loc332, #loc326])
#loc698 = loc(fused[#loc336, #loc334])
#loc699 = loc(fused[#loc339, #loc340])
#loc700 = loc(fused[#loc342, #loc343])
#loc701 = loc(fused[#loc344, #loc345])
#loc702 = loc(fused[#loc346, #loc343])
#loc703 = loc(fused[#loc349, #loc350])
#loc704 = loc(fused[#loc351, #loc352])
#loc705 = loc(fused[#loc353, #loc350])
#loc706 = loc(fused[#loc356, #loc357])
#loc707 = loc(fused[#loc358, #loc359])
#loc708 = loc(fused[#loc360, #loc361])
#loc709 = loc(fused[#loc362, #loc363])
#loc710 = loc(fused[#loc364, #loc365])
#loc711 = loc(fused[#loc366, #loc367])
#loc712 = loc(fused[#loc368, #loc369])
#loc713 = loc(fused[#loc374, #loc375])
#loc714 = loc(fused[#loc376, #loc377])
#loc715 = loc(fused[#loc378, #loc379])
#loc716 = loc(fused[#loc380, #loc377])
#loc717 = loc(fused[#loc382, #loc383])
#loc718 = loc(fused[#loc385, #loc386])
#loc719 = loc(fused[#loc387, #loc388])
#loc720 = loc(fused[#loc390, #loc389])
#loc721 = loc(fused[#loc392, #loc391])
#loc722 = loc(fused[#loc395, #loc396])
#loc723 = loc(fused[#loc397, #loc398])
#loc724 = loc(fused[#loc400, #loc401])
#loc725 = loc(fused[#loc402, #loc403])
#loc726 = loc(fused[#loc404, #loc405])
#loc727 = loc(fused[#loc406, #loc398])
#loc728 = loc(fused[#loc408, #loc409])
#loc729 = loc(fused[#loc412, #loc413])
#loc730 = loc(fused[#loc414, #loc409])
#loc731 = loc(fused[#loc420, #loc421])
#loc732 = loc(fused[#loc422, #loc423])
#loc733 = loc(fused[#loc424, #loc425])
#loc734 = loc(fused[#loc426, #loc423])
#loc735 = loc(fused[#loc430, #loc431])
#loc736 = loc(fused[#loc434, #loc435])
#loc737 = loc(fused[#loc436, #loc437])
#loc738 = loc(fused[#loc438, #loc439])
#loc739 = loc(fused[#loc441, #loc442])
#loc740 = loc(fused[#loc443, #loc437])
#loc741 = loc(fused[#loc447, #loc445])
#loc742 = loc(fused[#loc450, #loc451])
#loc743 = loc(fused[#loc453, #loc454])
#loc744 = loc(fused[#loc455, #loc456])
#loc745 = loc(fused[#loc457, #loc454])
#loc746 = loc(fused[#loc460, #loc461])
#loc747 = loc(fused[#loc462, #loc463])
#loc748 = loc(fused[#loc464, #loc461])
#loc749 = loc(fused[#loc467, #loc468])
#loc750 = loc(fused[#loc469, #loc470])
#loc751 = loc(fused[#loc471, #loc472, #loc473, #loc468])
#loc752 = loc(fused[#loc474, #loc475])
#loc753 = loc(fused[#loc476, #loc477])
#loc754 = loc(fused[#loc478, #loc479])
#loc755 = loc(fused[#loc480, #loc481])
#loc756 = loc(fused[#loc483, #loc485])
#loc757 = loc(fused[#loc486, #loc487, #loc488, #loc479])
#loc758 = loc(fused[#loc494, #loc495])
#loc759 = loc(fused[#loc496, #loc497])
#loc760 = loc(fused[#loc498, #loc499])
#loc761 = loc(fused[#loc500, #loc501])
#loc762 = loc(fused[#loc503, #loc505])
#loc763 = loc(fused[#loc506, #loc507, #loc508, #loc499])
#loc764 = loc(fused[#loc514, #loc515])
#loc765 = loc(fused[#loc516, #loc517])
#loc766 = loc(fused[#loc520, #loc518])
#loc767 = loc(fused[#loc521, #loc522])
#loc768 = loc(fused[#loc523, #loc524])
#loc769 = loc(fused[#loc525, #loc526, #loc527, #loc522])
#loc770 = loc(fused[#loc529, #loc528])
#loc771 = loc(fused[#loc531, #loc530])
#loc772 = loc(fused[#loc532, #loc533])
#loc773 = loc(fused[#loc534, #loc535])
#loc774 = loc(fused[#loc536, #loc537, #loc538, #loc533])
#loc775 = loc(fused[#loc539, #loc540])
#loc776 = loc(fused[#loc541, #loc542])
#loc777 = loc(fused[#loc543, #loc544])
#loc778 = loc(fused[#loc545, #loc546])
#loc779 = loc(fused[#loc547, #loc548, #loc549, #loc544])
#loc780 = loc(fused[#loc555, #loc556])
#loc781 = loc(fused[#loc557, #loc558])
#loc782 = loc(fused[#loc559, #loc560])
#loc783 = loc(fused[#loc561, #loc562])
#loc784 = loc(fused[#loc563, #loc564, #loc565, #loc560])
