!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc85 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":125:10)
#loc86 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":125:14)
#loc87 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":125:20)
#loc88 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":125:32)
#loc259 = loc(fused[#loc85, #loc86])
#loc260 = loc(fused[#loc87, #loc88])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc225)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc226)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc227)
  cir.func private @printIntLine(!s32i) loc(#loc228)
  cir.func private @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc229)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc230)
  cir.func no_proto @CWE401_Memory_Leak__malloc_realloc_int_11_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc232)
    cir.br ^bb1 loc(#loc233)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc234)
    %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc234)
    %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc19)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %4 ^bb2, ^bb13 loc(#loc235)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc236)
  ^bb3:  // pred: ^bb2
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc24)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc25)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc25)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc237)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc238)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc24)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc239)
    cir.store %11, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc232)
    cir.br ^bb4 loc(#loc240)
  ^bb4:  // pred: ^bb3
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc30)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc31)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc31)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s32i>, !cir.bool loc(#loc241)
    cir.brcond %15 ^bb5, ^bb6 loc(#loc242)
  ^bb5:  // pred: ^bb4
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc33)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc35)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc33)
    cir.br ^bb6 loc(#loc29)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc29)
  ^bb7:  // pred: ^bb6
    %19 = cir.const #cir.int<5> : !s32i loc(#loc36)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc37)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc38)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc39)
    cir.store %19, %22 : !s32i, !cir.ptr<!s32i> loc(#loc243)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc40)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !s32i), !cir.ptr<!s32i> loc(#loc42)
    %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc40)
    cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc43)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc44)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc44)
    %29 = cir.const #cir.int<130000> : !s32i loc(#loc45)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc45)
    %31 = cir.const #cir.int<4> : !u64i loc(#loc244)
    %32 = cir.binop(mul, %30, %31) : !u64i loc(#loc245)
    %33 = cir.call @realloc(%28, %32) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc49)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc246)
    cir.store %34, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc247)
    cir.br ^bb8 loc(#loc248)
  ^bb8:  // pred: ^bb7
    %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc54)
    %36 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc55)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc55)
    %38 = cir.cmp(ne, %35, %37) : !cir.ptr<!s32i>, !cir.bool loc(#loc249)
    cir.brcond %38 ^bb9, ^bb10 loc(#loc250)
  ^bb9:  // pred: ^bb8
    %39 = cir.const #cir.int<10> : !s32i loc(#loc57)
    %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc58)
    %41 = cir.const #cir.int<0> : !s32i loc(#loc59)
    %42 = cir.ptr_stride(%40 : !cir.ptr<!s32i>, %41 : !s32i), !cir.ptr<!s32i> loc(#loc60)
    cir.store %39, %42 : !s32i, !cir.ptr<!s32i> loc(#loc251)
    %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc61)
    %44 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %45 = cir.ptr_stride(%43 : !cir.ptr<!s32i>, %44 : !s32i), !cir.ptr<!s32i> loc(#loc63)
    %46 = cir.load %45 : !cir.ptr<!s32i>, !s32i loc(#loc61)
    cir.call @printIntLine(%46) : (!s32i) -> () loc(#loc64)
    %47 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc65)
    %48 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc66)
    %49 = cir.cast(bitcast, %48 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc66)
    cir.call @free(%49) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc65)
    cir.br ^bb10 loc(#loc53)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc53)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc23)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc18)
  ^bb13:  // 2 preds: ^bb1, ^bb12
    cir.br ^bb14 loc(#loc18)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc14)
  } loc(#loc231)
  cir.func no_proto @CWE401_Memory_Leak__malloc_realloc_int_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc253)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc69)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc254)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc71)
    cir.return loc(#loc68)
  } loc(#loc252)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc255)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc256)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc257)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc79)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc80)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc81)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc82)
  cir.func @main(%arg0: !s32i loc(fused[#loc85, #loc86]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc87, #loc88])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc259)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc260)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc84)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc89)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc89)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc90)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc91)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc91)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc92)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc79)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %8 = cir.get_global @CWE401_Memory_Leak__malloc_realloc_int_11_good : !cir.ptr<!cir.func<!void ()>> loc(#loc261)
    cir.call @CWE401_Memory_Leak__malloc_realloc_int_11_good() : () -> () loc(#loc94)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc80)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc81)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    %13 = cir.get_global @CWE401_Memory_Leak__malloc_realloc_int_11_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc262)
    cir.call @CWE401_Memory_Leak__malloc_realloc_int_11_bad() : () -> () loc(#loc98)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc82)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc101)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc263)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc263)
    cir.return %17 : !s32i loc(#loc263)
  } loc(#loc258)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc264)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc105)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc266)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc267)
    cir.br ^bb1 loc(#loc268)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc269)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc269)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc114)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc114)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc270)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc105)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc105)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    cir.br ^bb14 loc(#loc117)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc271)
  ^bb4:  // pred: ^bb3
    %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc122)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc123)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc123)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc272)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc273)
    %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc122)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc274)
    cir.store %14, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc266)
    cir.br ^bb5 loc(#loc275)
  ^bb5:  // pred: ^bb4
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc128)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc129)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc129)
    %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s32i>, !cir.bool loc(#loc276)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc277)
  ^bb6:  // pred: ^bb5
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc131)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc133)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc131)
    cir.br ^bb7 loc(#loc127)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc127)
  ^bb8:  // pred: ^bb7
    %22 = cir.const #cir.int<5> : !s32i loc(#loc134)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc135)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc136)
    %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !s32i), !cir.ptr<!s32i> loc(#loc137)
    cir.store %22, %25 : !s32i, !cir.ptr<!s32i> loc(#loc278)
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc138)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc139)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !s32i), !cir.ptr<!s32i> loc(#loc140)
    %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc138)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc141)
    %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc142)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc142)
    %32 = cir.const #cir.int<130000> : !s32i loc(#loc143)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc143)
    %34 = cir.const #cir.int<4> : !u64i loc(#loc279)
    %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc280)
    %36 = cir.call @realloc(%31, %35) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc147)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc281)
    cir.store %37, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc282)
    cir.br ^bb9 loc(#loc283)
  ^bb9:  // pred: ^bb8
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc152)
    %39 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc153)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc153)
    %41 = cir.cmp(ne, %38, %40) : !cir.ptr<!s32i>, !cir.bool loc(#loc284)
    cir.brcond %41 ^bb10, ^bb11 loc(#loc285)
  ^bb10:  // pred: ^bb9
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc155)
    cir.store %42, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc286)
    %43 = cir.const #cir.int<10> : !s32i loc(#loc157)
    %44 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc158)
    %45 = cir.const #cir.int<0> : !s32i loc(#loc159)
    %46 = cir.ptr_stride(%44 : !cir.ptr<!s32i>, %45 : !s32i), !cir.ptr<!s32i> loc(#loc160)
    cir.store %43, %46 : !s32i, !cir.ptr<!s32i> loc(#loc287)
    %47 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc161)
    %48 = cir.const #cir.int<0> : !s32i loc(#loc162)
    %49 = cir.ptr_stride(%47 : !cir.ptr<!s32i>, %48 : !s32i), !cir.ptr<!s32i> loc(#loc163)
    %50 = cir.load %49 : !cir.ptr<!s32i>, !s32i loc(#loc161)
    cir.call @printIntLine(%50) : (!s32i) -> () loc(#loc164)
    cir.br ^bb11 loc(#loc151)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc151)
  ^bb12:  // pred: ^bb11
    %51 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc165)
    %52 = cir.cast(bitcast, %51 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc165)
    cir.call @free(%52) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc166)
    cir.br ^bb13 loc(#loc121)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc113)
  ^bb14:  // 2 preds: ^bb2, ^bb13
    cir.br ^bb15 loc(#loc113)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc107)
  } loc(#loc265)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc289)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc290)
    cir.br ^bb1 loc(#loc291)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc292)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc292)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc175)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc175)
    cir.brcond %5 ^bb2, ^bb13 loc(#loc293)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc294)
  ^bb3:  // pred: ^bb2
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc180)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc181)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc181)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc295)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc296)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc180)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc297)
    cir.store %12, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc289)
    cir.br ^bb4 loc(#loc298)
  ^bb4:  // pred: ^bb3
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc186)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc187)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc187)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc299)
    cir.brcond %16 ^bb5, ^bb6 loc(#loc300)
  ^bb5:  // pred: ^bb4
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc189)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc190)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc191)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc189)
    cir.br ^bb6 loc(#loc185)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc185)
  ^bb7:  // pred: ^bb6
    %20 = cir.const #cir.int<5> : !s32i loc(#loc192)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc193)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc194)
    %23 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %22 : !s32i), !cir.ptr<!s32i> loc(#loc195)
    cir.store %20, %23 : !s32i, !cir.ptr<!s32i> loc(#loc301)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc196)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc197)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !s32i), !cir.ptr<!s32i> loc(#loc198)
    %27 = cir.load %26 : !cir.ptr<!s32i>, !s32i loc(#loc196)
    cir.call @printIntLine(%27) : (!s32i) -> () loc(#loc199)
    %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc200)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc200)
    %30 = cir.const #cir.int<130000> : !s32i loc(#loc201)
    %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc201)
    %32 = cir.const #cir.int<4> : !u64i loc(#loc302)
    %33 = cir.binop(mul, %31, %32) : !u64i loc(#loc303)
    %34 = cir.call @realloc(%29, %33) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc205)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc304)
    cir.store %35, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc305)
    cir.br ^bb8 loc(#loc306)
  ^bb8:  // pred: ^bb7
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc210)
    %37 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc211)
    %38 = cir.cast(bitcast, %37 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc211)
    %39 = cir.cmp(ne, %36, %38) : !cir.ptr<!s32i>, !cir.bool loc(#loc307)
    cir.brcond %39 ^bb9, ^bb10 loc(#loc308)
  ^bb9:  // pred: ^bb8
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc213)
    cir.store %40, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc309)
    %41 = cir.const #cir.int<10> : !s32i loc(#loc215)
    %42 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc216)
    %43 = cir.const #cir.int<0> : !s32i loc(#loc217)
    %44 = cir.ptr_stride(%42 : !cir.ptr<!s32i>, %43 : !s32i), !cir.ptr<!s32i> loc(#loc218)
    cir.store %41, %44 : !s32i, !cir.ptr<!s32i> loc(#loc310)
    %45 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc219)
    %46 = cir.const #cir.int<0> : !s32i loc(#loc220)
    %47 = cir.ptr_stride(%45 : !cir.ptr<!s32i>, %46 : !s32i), !cir.ptr<!s32i> loc(#loc221)
    %48 = cir.load %47 : !cir.ptr<!s32i>, !s32i loc(#loc219)
    cir.call @printIntLine(%48) : (!s32i) -> () loc(#loc222)
    cir.br ^bb10 loc(#loc209)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc209)
  ^bb11:  // pred: ^bb10
    %49 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc223)
    %50 = cir.cast(bitcast, %49 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc223)
    cir.call @free(%50) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc224)
    cir.br ^bb12 loc(#loc179)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc174)
  ^bb13:  // 2 preds: ^bb1, ^bb12
    cir.br ^bb14 loc(#loc174)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc168)
  } loc(#loc288)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_11.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc9 = loc("/usr/include/stdlib.h":683:1)
#loc10 = loc("/usr/include/stdlib.h":684:14)
#loc11 = loc("/usr/include/stdlib.h":687:1)
#loc12 = loc("/usr/include/stdlib.h":687:32)
#loc13 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":24:1)
#loc14 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":45:1)
#loc15 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":29:13)
#loc16 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":29:55)
#loc17 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":26:5)
#loc18 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":44:5)
#loc19 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":26:8)
#loc20 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":26:26)
#loc21 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":27:5)
#loc22 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":28:9)
#loc23 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":43:9)
#loc24 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":29:33)
#loc25 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":29:40)
#loc26 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":29:44)
#loc27 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":29:54)
#loc28 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":30:13)
#loc29 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":30:41)
#loc30 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":30:17)
#loc31 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":30:25)
#loc32 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":30:31)
#loc33 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":30:32)
#loc34 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":30:38)
#loc35 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":30:37)
#loc36 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":32:23)
#loc37 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":32:13)
#loc38 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":32:18)
#loc39 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":32:19)
#loc40 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":33:26)
#loc41 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":33:31)
#loc42 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":33:32)
#loc43 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":33:13)
#loc44 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":35:35)
#loc45 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":35:42)
#loc46 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":35:50)
#loc47 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":35:60)
#loc48 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":35:41)
#loc49 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":35:27)
#loc50 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":35:61)
#loc51 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":35:13)
#loc52 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":36:13)
#loc53 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":42:13)
#loc54 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":36:17)
#loc55 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":36:25)
#loc56 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":37:13)
#loc57 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":39:27)
#loc58 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":39:17)
#loc59 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":39:22)
#loc60 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":39:23)
#loc61 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":40:30)
#loc62 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":40:35)
#loc63 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":40:36)
#loc64 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":40:17)
#loc65 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":41:17)
#loc66 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":41:22)
#loc67 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":110:1)
#loc68 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":114:1)
#loc69 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":112:5)
#loc70 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":112:11)
#loc71 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":113:5)
#loc72 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":113:11)
#loc73 = loc("/usr/include/stdlib.h":575:1)
#loc74 = loc("/usr/include/stdlib.h":575:41)
#loc75 = loc("/usr/include/time.h":76:1)
#loc76 = loc("/usr/include/time.h":76:38)
#loc77 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc78 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc79 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":130:15)
#loc80 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":132:15)
#loc81 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":135:15)
#loc82 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":137:15)
#loc83 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":125:1)
#loc84 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":140:1)
#loc89 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":126:1)
#loc90 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":128:27)
#loc91 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":128:22)
#loc92 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":128:5)
#loc93 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":130:5)
#loc94 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":131:5)
#loc95 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":131:52)
#loc96 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":132:5)
#loc97 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":135:5)
#loc98 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":136:5)
#loc99 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":136:51)
#loc100 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":137:5)
#loc101 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":139:12)
#loc102 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":139:5)
#loc103 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc104 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc105 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":57:19)
#loc106 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":52:1)
#loc107 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":81:1)
#loc108 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":62:13)
#loc109 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":62:55)
#loc110 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":64:13)
#loc111 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":64:19)
#loc112 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":54:5)
#loc113 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":80:5)
#loc114 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":54:8)
#loc115 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":54:27)
#loc116 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":55:5)
#loc117 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":58:5)
#loc118 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":60:5)
#loc119 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":57:9)
#loc120 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":61:9)
#loc121 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":79:9)
#loc122 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":62:33)
#loc123 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":62:40)
#loc124 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":62:44)
#loc125 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":62:54)
#loc126 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":63:13)
#loc127 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":63:41)
#loc128 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":63:17)
#loc129 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":63:25)
#loc130 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":63:31)
#loc131 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":63:32)
#loc132 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":63:38)
#loc133 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":63:37)
#loc134 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":66:23)
#loc135 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":66:13)
#loc136 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":66:18)
#loc137 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":66:19)
#loc138 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":67:26)
#loc139 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":67:31)
#loc140 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":67:32)
#loc141 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":67:13)
#loc142 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":68:38)
#loc143 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":68:45)
#loc144 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":68:53)
#loc145 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":68:63)
#loc146 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":68:44)
#loc147 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":68:30)
#loc148 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":68:64)
#loc149 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":68:13)
#loc150 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":71:13)
#loc151 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":77:13)
#loc152 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":71:17)
#loc153 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":71:28)
#loc154 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":72:13)
#loc155 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":73:24)
#loc156 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":73:17)
#loc157 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":75:27)
#loc158 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":75:17)
#loc159 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":75:22)
#loc160 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":75:23)
#loc161 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":76:30)
#loc162 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":76:35)
#loc163 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":76:36)
#loc164 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":76:17)
#loc165 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":78:18)
#loc166 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":78:13)
#loc167 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":84:1)
#loc168 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":108:1)
#loc169 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":89:13)
#loc170 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":89:55)
#loc171 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":91:13)
#loc172 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":91:19)
#loc173 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":86:5)
#loc174 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":107:5)
#loc175 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":86:8)
#loc176 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":86:26)
#loc177 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":87:5)
#loc178 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":88:9)
#loc179 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":106:9)
#loc180 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":89:33)
#loc181 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":89:40)
#loc182 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":89:44)
#loc183 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":89:54)
#loc184 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":90:13)
#loc185 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":90:41)
#loc186 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":90:17)
#loc187 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":90:25)
#loc188 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":90:31)
#loc189 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":90:32)
#loc190 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":90:38)
#loc191 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":90:37)
#loc192 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":93:23)
#loc193 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":93:13)
#loc194 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":93:18)
#loc195 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":93:19)
#loc196 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":94:26)
#loc197 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":94:31)
#loc198 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":94:32)
#loc199 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":94:13)
#loc200 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":95:38)
#loc201 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":95:45)
#loc202 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":95:53)
#loc203 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":95:63)
#loc204 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":95:44)
#loc205 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":95:30)
#loc206 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":95:64)
#loc207 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":95:13)
#loc208 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":98:13)
#loc209 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":104:13)
#loc210 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":98:17)
#loc211 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":98:28)
#loc212 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":99:13)
#loc213 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":100:24)
#loc214 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":100:17)
#loc215 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":102:27)
#loc216 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":102:17)
#loc217 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":102:22)
#loc218 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":102:23)
#loc219 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":103:30)
#loc220 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":103:35)
#loc221 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":103:36)
#loc222 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":103:17)
#loc223 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":105:18)
#loc224 = loc("CWE401_Memory_Leak__malloc_realloc_int_11.c":105:13)
#loc225 = loc(fused[#loc1, #loc2])
#loc226 = loc(fused[#loc3, #loc4])
#loc227 = loc(fused[#loc5, #loc6])
#loc228 = loc(fused[#loc7, #loc8])
#loc229 = loc(fused[#loc9, #loc10])
#loc230 = loc(fused[#loc11, #loc12])
#loc231 = loc(fused[#loc13, #loc14])
#loc232 = loc(fused[#loc15, #loc16])
#loc233 = loc(fused[#loc17, #loc18])
#loc234 = loc(fused[#loc19, #loc20])
#loc235 = loc(fused[#loc21, #loc18])
#loc236 = loc(fused[#loc22, #loc23])
#loc237 = loc(fused[#loc26, #loc27])
#loc238 = loc(fused[#loc25, #loc27])
#loc239 = loc(fused[#loc24, #loc16])
#loc240 = loc(fused[#loc28, #loc29])
#loc241 = loc(fused[#loc30, #loc31])
#loc242 = loc(fused[#loc32, #loc29])
#loc243 = loc(fused[#loc37, #loc36])
#loc244 = loc(fused[#loc46, #loc47])
#loc245 = loc(fused[#loc48, #loc47])
#loc246 = loc(fused[#loc49, #loc50])
#loc247 = loc(fused[#loc51, #loc50])
#loc248 = loc(fused[#loc52, #loc53])
#loc249 = loc(fused[#loc54, #loc55])
#loc250 = loc(fused[#loc56, #loc53])
#loc251 = loc(fused[#loc58, #loc57])
#loc252 = loc(fused[#loc67, #loc68])
#loc253 = loc(fused[#loc69, #loc70])
#loc254 = loc(fused[#loc71, #loc72])
#loc255 = loc(fused[#loc73, #loc74])
#loc256 = loc(fused[#loc75, #loc76])
#loc257 = loc(fused[#loc77, #loc78])
#loc258 = loc(fused[#loc83, #loc84])
#loc261 = loc(fused[#loc94, #loc95])
#loc262 = loc(fused[#loc98, #loc99])
#loc263 = loc(fused[#loc102, #loc101])
#loc264 = loc(fused[#loc103, #loc104])
#loc265 = loc(fused[#loc106, #loc107])
#loc266 = loc(fused[#loc108, #loc109])
#loc267 = loc(fused[#loc110, #loc111])
#loc268 = loc(fused[#loc112, #loc113])
#loc269 = loc(fused[#loc114, #loc115])
#loc270 = loc(fused[#loc116, #loc117, #loc118, #loc113])
#loc271 = loc(fused[#loc120, #loc121])
#loc272 = loc(fused[#loc124, #loc125])
#loc273 = loc(fused[#loc123, #loc125])
#loc274 = loc(fused[#loc122, #loc109])
#loc275 = loc(fused[#loc126, #loc127])
#loc276 = loc(fused[#loc128, #loc129])
#loc277 = loc(fused[#loc130, #loc127])
#loc278 = loc(fused[#loc135, #loc134])
#loc279 = loc(fused[#loc144, #loc145])
#loc280 = loc(fused[#loc146, #loc145])
#loc281 = loc(fused[#loc147, #loc148])
#loc282 = loc(fused[#loc149, #loc148])
#loc283 = loc(fused[#loc150, #loc151])
#loc284 = loc(fused[#loc152, #loc153])
#loc285 = loc(fused[#loc154, #loc151])
#loc286 = loc(fused[#loc156, #loc155])
#loc287 = loc(fused[#loc158, #loc157])
#loc288 = loc(fused[#loc167, #loc168])
#loc289 = loc(fused[#loc169, #loc170])
#loc290 = loc(fused[#loc171, #loc172])
#loc291 = loc(fused[#loc173, #loc174])
#loc292 = loc(fused[#loc175, #loc176])
#loc293 = loc(fused[#loc177, #loc174])
#loc294 = loc(fused[#loc178, #loc179])
#loc295 = loc(fused[#loc182, #loc183])
#loc296 = loc(fused[#loc181, #loc183])
#loc297 = loc(fused[#loc180, #loc170])
#loc298 = loc(fused[#loc184, #loc185])
#loc299 = loc(fused[#loc186, #loc187])
#loc300 = loc(fused[#loc188, #loc185])
#loc301 = loc(fused[#loc193, #loc192])
#loc302 = loc(fused[#loc202, #loc203])
#loc303 = loc(fused[#loc204, #loc203])
#loc304 = loc(fused[#loc205, #loc206])
#loc305 = loc(fused[#loc207, #loc206])
#loc306 = loc(fused[#loc208, #loc209])
#loc307 = loc(fused[#loc210, #loc211])
#loc308 = loc(fused[#loc212, #loc209])
#loc309 = loc(fused[#loc214, #loc213])
#loc310 = loc(fused[#loc216, #loc215])
