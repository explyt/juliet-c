!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_fscanf_multiply_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc113)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc114)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.global "private" internal dsolocal @CWE191_Integer_Underflow__char_fscanf_multiply_45_badData = #cir.int<0> : !s8i {alignment = 1 : i64} loc(#loc115)
  cir.func no_proto @CWE191_Integer_Underflow__char_fscanf_multiply_45_bad() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc117)
    %1 = cir.const #cir.int<32> : !s32i loc(#loc12)
    %2 = cir.cast(integral, %1 : !s32i), !s8i loc(#loc12)
    cir.store %2, %0 : !s8i, !cir.ptr<!s8i> loc(#loc118)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc14)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc114)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc15)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc14)
    %9 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc16)
    %10 = cir.get_global @CWE191_Integer_Underflow__char_fscanf_multiply_45_badData : !cir.ptr<!s8i> loc(#loc115)
    cir.store %9, %10 : !s8i, !cir.ptr<!s8i> loc(#loc119)
    %11 = cir.get_global @badSink : !cir.ptr<!cir.func<()>> loc(#loc120)
    cir.call %11() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc18)
    cir.return loc(#loc9)
  } loc(#loc116)
  cir.func no_proto @CWE191_Integer_Underflow__char_fscanf_multiply_45_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc122)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc22)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc123)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc24)
    cir.return loc(#loc21)
  } loc(#loc121)
  cir.func private @printHexCharLine(!s8i) loc(#loc124)
  cir.func no_proto internal private @badSink() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc126)
    %1 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc127)
    %2 = cir.get_global @CWE191_Integer_Underflow__char_fscanf_multiply_45_badData : !cir.ptr<!s8i> loc(#loc115)
    %3 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc33)
    cir.store %3, %1 : !s8i, !cir.ptr<!s8i> loc(#loc127)
    cir.br ^bb1 loc(#loc128)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc36)
    %5 = cir.cast(integral, %4 : !s8i), !s32i loc(#loc36)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc37)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc129)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc130)
  ^bb2:  // pred: ^bb1
    %8 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc39)
    %9 = cir.cast(integral, %8 : !s8i), !s32i loc(#loc39)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc31)
    %11 = cir.binop(mul, %9, %10) nsw : !s32i loc(#loc39)
    %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc39)
    cir.store %12, %0 : !s8i, !cir.ptr<!s8i> loc(#loc126)
    %13 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc40)
    cir.call @printHexCharLine(%13) : (!s8i) -> () loc(#loc41)
    cir.br ^bb3 loc(#loc35)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc35)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc29)
  } loc(#loc125)
  cir.global "private" internal dsolocal @CWE191_Integer_Underflow__char_fscanf_multiply_45_goodG2BData = #cir.int<0> : !s8i {alignment = 1 : i64} loc(#loc131)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc133)
    %1 = cir.const #cir.int<32> : !s32i loc(#loc48)
    %2 = cir.cast(integral, %1 : !s32i), !s8i loc(#loc48)
    cir.store %2, %0 : !s8i, !cir.ptr<!s8i> loc(#loc134)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc50)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc51)
    %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc51)
    cir.store %5, %0 : !s8i, !cir.ptr<!s8i> loc(#loc135)
    %6 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc53)
    %7 = cir.get_global @CWE191_Integer_Underflow__char_fscanf_multiply_45_goodG2BData : !cir.ptr<!s8i> loc(#loc131)
    cir.store %6, %7 : !s8i, !cir.ptr<!s8i> loc(#loc136)
    %8 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<()>> loc(#loc137)
    cir.call %8() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc55)
    cir.return loc(#loc45)
  } loc(#loc132)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc139)
    %1 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc140)
    %2 = cir.get_global @CWE191_Integer_Underflow__char_fscanf_multiply_45_goodG2BData : !cir.ptr<!s8i> loc(#loc131)
    %3 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc62)
    cir.store %3, %1 : !s8i, !cir.ptr<!s8i> loc(#loc140)
    cir.br ^bb1 loc(#loc141)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc65)
    %5 = cir.cast(integral, %4 : !s8i), !s32i loc(#loc65)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc66)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc142)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc143)
  ^bb2:  // pred: ^bb1
    %8 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc68)
    %9 = cir.cast(integral, %8 : !s8i), !s32i loc(#loc68)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc60)
    %11 = cir.binop(mul, %9, %10) nsw : !s32i loc(#loc68)
    %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc68)
    cir.store %12, %0 : !s8i, !cir.ptr<!s8i> loc(#loc139)
    %13 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc69)
    cir.call @printHexCharLine(%13) : (!s8i) -> () loc(#loc70)
    cir.br ^bb3 loc(#loc64)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc64)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc58)
  } loc(#loc138)
  cir.global "private" internal dsolocal @CWE191_Integer_Underflow__char_fscanf_multiply_45_goodB2GData = #cir.int<0> : !s8i {alignment = 1 : i64} loc(#loc144)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc146)
    %1 = cir.const #cir.int<32> : !s32i loc(#loc77)
    %2 = cir.cast(integral, %1 : !s32i), !s8i loc(#loc77)
    cir.store %2, %0 : !s8i, !cir.ptr<!s8i> loc(#loc147)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc79)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc114)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc80)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc81)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc81)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc79)
    %9 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc82)
    %10 = cir.get_global @CWE191_Integer_Underflow__char_fscanf_multiply_45_goodB2GData : !cir.ptr<!s8i> loc(#loc144)
    cir.store %9, %10 : !s8i, !cir.ptr<!s8i> loc(#loc148)
    %11 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<()>> loc(#loc149)
    cir.call %11() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc84)
    cir.return loc(#loc74)
  } loc(#loc145)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc88)
  cir.func no_proto internal private @goodB2GSink() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc152)
    %1 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc153)
    %2 = cir.get_global @CWE191_Integer_Underflow__char_fscanf_multiply_45_goodB2GData : !cir.ptr<!s8i> loc(#loc144)
    %3 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc94)
    cir.store %3, %1 : !s8i, !cir.ptr<!s8i> loc(#loc153)
    cir.br ^bb1 loc(#loc154)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc97)
    %5 = cir.cast(integral, %4 : !s8i), !s32i loc(#loc97)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc98)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc155)
    cir.brcond %7 ^bb2, ^bb8 loc(#loc156)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc157)
  ^bb3:  // pred: ^bb2
    %8 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc102)
    %9 = cir.cast(integral, %8 : !s8i), !s32i loc(#loc102)
    %10 = cir.const #cir.int<127> : !s32i loc(#loc103)
    %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc103)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc103)
    %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc103)
    %14 = cir.const #cir.int<2> : !s32i loc(#loc104)
    %15 = cir.binop(div, %13, %14) : !s32i loc(#loc158)
    %16 = cir.cmp(gt, %9, %15) : !s32i, !cir.bool loc(#loc159)
    cir.brcond %16 ^bb4, ^bb5 loc(#loc160)
  ^bb4:  // pred: ^bb3
    %17 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc109)
    %18 = cir.cast(integral, %17 : !s8i), !s32i loc(#loc109)
    %19 = cir.const #cir.int<2> : !s32i loc(#loc92)
    %20 = cir.binop(mul, %18, %19) nsw : !s32i loc(#loc109)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc109)
    cir.store %21, %0 : !s8i, !cir.ptr<!s8i> loc(#loc152)
    %22 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc110)
    cir.call @printHexCharLine(%22) : (!s8i) -> () loc(#loc111)
    cir.br ^bb6 loc(#loc107)
  ^bb5:  // pred: ^bb3
    %23 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc88)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    cir.br ^bb6 loc(#loc101)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc101)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc96)
  ^bb8:  // 2 preds: ^bb1, ^bb7
    cir.br ^bb9 loc(#loc96)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc90)
  } loc(#loc151)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_fscanf_multiply_45.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":42:20)
#loc6 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":20:1)
#loc7 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":20:13)
#loc8 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":37:1)
#loc9 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":45:1)
#loc10 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":39:5)
#loc11 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":39:10)
#loc12 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":40:12)
#loc13 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":40:5)
#loc14 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":42:5)
#loc15 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":42:13)
#loc16 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":43:65)
#loc17 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":43:5)
#loc18 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":44:5)
#loc19 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":44:13)
#loc20 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":102:1)
#loc21 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":106:1)
#loc22 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":104:5)
#loc23 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":104:13)
#loc24 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":105:5)
#loc25 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":105:13)
#loc26 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc27 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc28 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":26:1)
#loc29 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":35:1)
#loc30 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":32:9)
#loc31 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":32:30)
#loc32 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":28:5)
#loc33 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":28:17)
#loc34 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":29:5)
#loc35 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":34:5)
#loc36 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":29:8)
#loc37 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":29:15)
#loc38 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":30:5)
#loc39 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":32:23)
#loc40 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":33:26)
#loc41 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":33:9)
#loc42 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":21:1)
#loc43 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":21:13)
#loc44 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":63:1)
#loc45 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":71:1)
#loc46 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":65:5)
#loc47 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":65:10)
#loc48 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":66:12)
#loc49 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":66:5)
#loc50 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":68:13)
#loc51 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":68:12)
#loc52 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":68:5)
#loc53 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":69:69)
#loc54 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":69:5)
#loc55 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":70:5)
#loc56 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":70:17)
#loc57 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":52:1)
#loc58 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":61:1)
#loc59 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":58:9)
#loc60 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":58:30)
#loc61 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":54:5)
#loc62 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":54:17)
#loc63 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":55:5)
#loc64 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":60:5)
#loc65 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":55:8)
#loc66 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":55:15)
#loc67 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":56:5)
#loc68 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":58:23)
#loc69 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":59:26)
#loc70 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":59:9)
#loc71 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":22:1)
#loc72 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":22:13)
#loc73 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":92:1)
#loc74 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":100:1)
#loc75 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":94:5)
#loc76 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":94:10)
#loc77 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":95:12)
#loc78 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":95:5)
#loc79 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":97:5)
#loc80 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":97:13)
#loc81 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":97:20)
#loc82 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":98:69)
#loc83 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":98:5)
#loc84 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":99:5)
#loc85 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":99:17)
#loc86 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc87 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc88 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":87:23)
#loc89 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":74:1)
#loc90 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":90:1)
#loc91 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":82:13)
#loc92 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":82:34)
#loc93 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":76:5)
#loc94 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":76:17)
#loc95 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":77:5)
#loc96 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":89:5)
#loc97 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":77:8)
#loc98 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":77:15)
#loc99 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":78:5)
#loc100 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":80:9)
#loc101 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":88:9)
#loc102 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":80:13)
#loc103 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":80:21)
#loc104 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":80:30)
#loc105 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":80:31)
#loc106 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":81:9)
#loc107 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":84:9)
#loc108 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":86:9)
#loc109 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":82:27)
#loc110 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":83:30)
#loc111 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":83:13)
#loc112 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_45.c":87:13)
#loc113 = loc(fused[#loc1, #loc2])
#loc114 = loc(fused[#loc3, #loc4])
#loc115 = loc(fused[#loc6, #loc7])
#loc116 = loc(fused[#loc8, #loc9])
#loc117 = loc(fused[#loc10, #loc11])
#loc118 = loc(fused[#loc13, #loc12])
#loc119 = loc(fused[#loc17, #loc16])
#loc120 = loc(fused[#loc18, #loc19])
#loc121 = loc(fused[#loc20, #loc21])
#loc122 = loc(fused[#loc22, #loc23])
#loc123 = loc(fused[#loc24, #loc25])
#loc124 = loc(fused[#loc26, #loc27])
#loc125 = loc(fused[#loc28, #loc29])
#loc126 = loc(fused[#loc30, #loc31])
#loc127 = loc(fused[#loc32, #loc33])
#loc128 = loc(fused[#loc34, #loc35])
#loc129 = loc(fused[#loc36, #loc37])
#loc130 = loc(fused[#loc38, #loc35])
#loc131 = loc(fused[#loc42, #loc43])
#loc132 = loc(fused[#loc44, #loc45])
#loc133 = loc(fused[#loc46, #loc47])
#loc134 = loc(fused[#loc49, #loc48])
#loc135 = loc(fused[#loc52, #loc50])
#loc136 = loc(fused[#loc54, #loc53])
#loc137 = loc(fused[#loc55, #loc56])
#loc138 = loc(fused[#loc57, #loc58])
#loc139 = loc(fused[#loc59, #loc60])
#loc140 = loc(fused[#loc61, #loc62])
#loc141 = loc(fused[#loc63, #loc64])
#loc142 = loc(fused[#loc65, #loc66])
#loc143 = loc(fused[#loc67, #loc64])
#loc144 = loc(fused[#loc71, #loc72])
#loc145 = loc(fused[#loc73, #loc74])
#loc146 = loc(fused[#loc75, #loc76])
#loc147 = loc(fused[#loc78, #loc77])
#loc148 = loc(fused[#loc83, #loc82])
#loc149 = loc(fused[#loc84, #loc85])
#loc150 = loc(fused[#loc86, #loc87])
#loc151 = loc(fused[#loc89, #loc90])
#loc152 = loc(fused[#loc91, #loc92])
#loc153 = loc(fused[#loc93, #loc94])
#loc154 = loc(fused[#loc95, #loc96])
#loc155 = loc(fused[#loc97, #loc98])
#loc156 = loc(fused[#loc99, #loc96])
#loc157 = loc(fused[#loc100, #loc101])
#loc158 = loc(fused[#loc103, #loc104])
#loc159 = loc(fused[#loc102, #loc105])
#loc160 = loc(fused[#loc106, #loc107, #loc108, #loc101])
