!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty_CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34_unionType = !cir.record<union "CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34_unionType" {!cir.ptr<!s8i>, !cir.ptr<!s8i>}>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc91)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc92)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc93)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc95)
    %1 = cir.alloca !ty_CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34_unionType, !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc96)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc97)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc15)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc15)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc15)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc15)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc15)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc15)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc15)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc97)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc16)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc98)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
    %13 = cir.const #cir.int<65> : !s32i loc(#loc19)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc20)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc20)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc20)
    cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc99)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc24)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc24)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc26)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc26)
    %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc28)
    cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc100)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    %26 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc30)
    cir.store %25, %26 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc101)
    cir.scope {
      %27 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc103)
      %28 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc36)
      %29 = cir.load %28 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
      cir.store %29, %27 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc103)
      cir.scope {
        %30 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc105)
        %31 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc105)
        cir.store %31, %30 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc105)
        %32 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc41)
        %33 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc42)
        %34 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc43)
        %35 = cir.load %27 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
        %36 = cir.call @strlen(%35) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc43)
        %37 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
        %38 = cir.cast(array_to_ptrdecay, %37 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
        %39 = cir.load %27 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
        %40 = cir.call @snprintf(%33, %36, %38, %39) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc41)
        %41 = cir.load %27 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
        cir.call @printLine(%41) : (!cir.ptr<!s8i>) -> () loc(#loc47)
      } loc(#loc104)
    } loc(#loc102)
    cir.return loc(#loc9)
  } loc(#loc94)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc107)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc50)
    cir.return loc(#loc49)
  } loc(#loc106)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc109)
    %1 = cir.alloca !ty_CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34_unionType, !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc110)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc111)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc59)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc59)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc59)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc59)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc59)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc59)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc59)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc111)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc112)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc62)
    %13 = cir.const #cir.int<65> : !s32i loc(#loc63)
    %14 = cir.const #cir.int<50> : !s32i loc(#loc64)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc65)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc64)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc64)
    cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc113)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc68)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
    %21 = cir.const #cir.int<50> : !s32i loc(#loc70)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc71)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc70)
    %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc72)
    cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc114)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
    %26 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc30)
    cir.store %25, %26 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
    cir.scope {
      %27 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc117)
      %28 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc36)
      %29 = cir.load %28 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
      cir.store %29, %27 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
      cir.scope {
        %30 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc119)
        %31 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc119)
        cir.store %31, %30 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc119)
        %32 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc83)
        %33 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc84)
        %34 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc85)
        %35 = cir.load %27 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
        %36 = cir.call @strlen(%35) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc85)
        %37 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc87)
        %38 = cir.cast(array_to_ptrdecay, %37 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc87)
        %39 = cir.load %27 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
        %40 = cir.call @snprintf(%33, %36, %38, %39) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc83)
        %41 = cir.load %27 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
        cir.call @printLine(%41) : (!cir.ptr<!s8i>) -> () loc(#loc90)
      } loc(#loc118)
    } loc(#loc116)
    cir.return loc(#loc53)
  } loc(#loc108)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":0:0)
#loc1 = loc("/usr/include/stdio.h":385:1)
#loc2 = loc("/usr/include/stdio.h":387:62)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":50:42)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":35:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":54:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":37:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":37:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":38:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":38:82)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":39:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":39:33)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":40:12)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":40:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":42:12)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":42:18)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":42:23)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":42:27)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":42:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":42:28)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":43:19)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":43:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":43:10)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":43:14)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":43:15)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":44:26)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":29:12)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":44:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":45:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":53:5)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":46:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":46:31)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":30:12)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":47:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":52:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":48:13)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":48:29)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":50:13)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":50:22)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":50:28)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":50:35)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":50:48)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":51:23)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":51:13)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":82:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":85:1)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":84:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":84:13)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":61:1)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":80:1)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":63:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":63:12)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":64:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":64:82)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":65:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":65:33)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":66:12)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":66:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":68:12)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":68:18)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":68:23)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":68:26)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":68:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":68:27)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":69:18)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":69:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":69:10)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":69:13)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":69:14)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":70:26)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":70:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":71:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":79:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":72:9)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":72:31)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":73:9)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":78:9)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":74:13)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":74:29)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":76:13)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":76:22)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":76:28)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":76:35)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":76:42)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":76:48)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":77:23)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_snprintf_34.c":77:13)
#loc91 = loc(fused[#loc1, #loc2])
#loc92 = loc(fused[#loc3, #loc4])
#loc93 = loc(fused[#loc6, #loc7])
#loc94 = loc(fused[#loc8, #loc9])
#loc95 = loc(fused[#loc10, #loc11])
#loc96 = loc(fused[#loc12, #loc13])
#loc97 = loc(fused[#loc14, #loc15])
#loc98 = loc(fused[#loc17, #loc16])
#loc99 = loc(fused[#loc22, #loc23])
#loc100 = loc(fused[#loc25, #loc24])
#loc101 = loc(fused[#loc31, #loc29])
#loc102 = loc(fused[#loc32, #loc33])
#loc103 = loc(fused[#loc34, #loc35])
#loc104 = loc(fused[#loc37, #loc38])
#loc105 = loc(fused[#loc39, #loc40])
#loc106 = loc(fused[#loc48, #loc49])
#loc107 = loc(fused[#loc50, #loc51])
#loc108 = loc(fused[#loc52, #loc53])
#loc109 = loc(fused[#loc54, #loc55])
#loc110 = loc(fused[#loc56, #loc57])
#loc111 = loc(fused[#loc58, #loc59])
#loc112 = loc(fused[#loc61, #loc60])
#loc113 = loc(fused[#loc66, #loc67])
#loc114 = loc(fused[#loc69, #loc68])
#loc115 = loc(fused[#loc74, #loc73])
#loc116 = loc(fused[#loc75, #loc76])
#loc117 = loc(fused[#loc77, #loc78])
#loc118 = loc(fused[#loc79, #loc80])
#loc119 = loc(fused[#loc81, #loc82])
