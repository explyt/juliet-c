!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc183)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc184)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc185)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc186)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc187)
  cir.func private @printIntLine(!s32i) loc(#loc188)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_033badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc190)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc191)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc192)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc193)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc194)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc26)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc195)
    cir.br ^bb1 loc(#loc196)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<5> : !s32i loc(#loc30)
    %8 = cir.const #cir.int<5> : !s32i loc(#loc31)
    %9 = cir.cmp(eq, %7, %8) : !s32i, !cir.bool loc(#loc197)
    cir.brcond %9 ^bb2, ^bb10 loc(#loc198)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc199)
  ^bb3:  // pred: ^bb2
    %10 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc190)
    cir.store %10, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc190)
    cir.br ^bb4 loc(#loc200)
  ^bb4:  // pred: ^bb3
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc37)
    %12 = cir.const #cir.int<3> : !s32i loc(#loc38)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc38)
    %14 = cir.const #cir.int<4> : !u64i loc(#loc38)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc38)
    %16 = cir.const #cir.int<2> : !s32i loc(#loc38)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc38)
    %18 = cir.binop(add, %15, %17) : !u64i loc(#loc38)
    %19 = cir.cast(integral, %18 : !u64i), !s32i loc(#loc38)
    %20 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc184)
    %21 = cir.load %20 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc39)
    %22 = cir.call @fgets(%11, %19, %21) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc40)
    %23 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc41)
    %24 = cir.cmp(ne, %22, %23) : !cir.ptr<!s8i>, !cir.bool loc(#loc201)
    cir.brcond %24 ^bb5, ^bb6 loc(#loc202)
  ^bb5:  // pred: ^bb4
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc45)
    %26 = cir.call @atoi(%25) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc46)
    cir.store %26, %4 : !s32i, !cir.ptr<!s32i> loc(#loc203)
    cir.br ^bb7 loc(#loc43)
  ^bb6:  // pred: ^bb4
    %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    cir.br ^bb7 loc(#loc36)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc36)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc34)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc29)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc29)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc204)
  ^bb12:  // pred: ^bb11
    %29 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc52)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc52)
    %31 = cir.const #cir.int<4> : !u64i loc(#loc205)
    %32 = cir.binop(mul, %30, %31) : !u64i loc(#loc206)
    cir.store %32, %1 : !u64i, !cir.ptr<!u64i> loc(#loc207)
    %33 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc56)
    %34 = cir.call @_Znam(%33) : (!u64i) -> !cir.ptr<!void> loc(#loc57)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc208)
    %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc208)
    cir.store %36, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc209)
    cir.br ^bb13 loc(#loc210)
  ^bb13:  // pred: ^bb12
    %37 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc63)
    cir.store %38, %2 : !u64i, !cir.ptr<!u64i> loc(#loc211)
    cir.br ^bb14 loc(#loc210)
  ^bb14:  // 2 preds: ^bb13, ^bb18
    %39 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc65)
    %40 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc66)
    %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc66)
    %42 = cir.cmp(lt, %39, %41) : !u64i, !cir.bool loc(#loc212)
    cir.brcond %42 ^bb15, ^bb19 loc(#loc212)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc213)
  ^bb16:  // pred: ^bb15
    %43 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %44 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc69)
    %45 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc70)
    %46 = cir.ptr_stride(%44 : !cir.ptr<!s32i>, %45 : !u64i), !cir.ptr<!s32i> loc(#loc71)
    cir.store %43, %46 : !s32i, !cir.ptr<!s32i> loc(#loc214)
    cir.br ^bb17 loc(#loc62)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc62)
  ^bb18:  // pred: ^bb17
    %47 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc72)
    %48 = cir.unary(inc, %47) : !u64i, !u64i loc(#loc73)
    cir.store %48, %2 : !u64i, !cir.ptr<!u64i> loc(#loc215)
    cir.br ^bb14 loc(#loc210)
  ^bb19:  // pred: ^bb14
    cir.br ^bb20 loc(#loc62)
  ^bb20:  // pred: ^bb19
    %49 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc74)
    %50 = cir.const #cir.int<0> : !s32i loc(#loc75)
    %51 = cir.ptr_stride(%49 : !cir.ptr<!s32i>, %50 : !s32i), !cir.ptr<!s32i> loc(#loc76)
    %52 = cir.load %51 : !cir.ptr<!s32i>, !s32i loc(#loc74)
    cir.call @printIntLine(%52) : (!s32i) -> () loc(#loc77)
    %53 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc78)
    cir.delete.array %53 : <!s32i> loc(#loc78)
    cir.br ^bb21 loc(#loc51)
  ^bb21:  // pred: ^bb20
    cir.return loc(#loc15)
  } loc(#loc189)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc79)
  cir.func internal private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc217)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc218)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc219)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc220)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc89)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc90)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc221)
    cir.br ^bb1 loc(#loc222)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<5> : !s32i loc(#loc94)
    %7 = cir.const #cir.int<5> : !s32i loc(#loc95)
    %8 = cir.cmp(ne, %6, %7) : !s32i, !cir.bool loc(#loc223)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc224)
  ^bb2:  // pred: ^bb1
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc79)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    cir.br ^bb4 loc(#loc97)
  ^bb3:  // pred: ^bb1
    %11 = cir.const #cir.int<20> : !s32i loc(#loc100)
    cir.store %11, %3 : !s32i, !cir.ptr<!s32i> loc(#loc225)
    cir.br ^bb4 loc(#loc93)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc93)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc226)
  ^bb6:  // pred: ^bb5
    %12 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc104)
    %14 = cir.const #cir.int<4> : !u64i loc(#loc227)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc228)
    cir.store %15, %0 : !u64i, !cir.ptr<!u64i> loc(#loc229)
    %16 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc108)
    %17 = cir.call @_Znam(%16) : (!u64i) -> !cir.ptr<!void> loc(#loc109)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc230)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc230)
    cir.store %19, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc231)
    cir.br ^bb7 loc(#loc232)
  ^bb7:  // pred: ^bb6
    %20 = cir.const #cir.int<0> : !s32i loc(#loc115)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc115)
    cir.store %21, %1 : !u64i, !cir.ptr<!u64i> loc(#loc233)
    cir.br ^bb8 loc(#loc232)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %22 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc117)
    %23 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc118)
    %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc234)
    cir.brcond %25 ^bb9, ^bb13 loc(#loc234)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc235)
  ^bb10:  // pred: ^bb9
    %26 = cir.const #cir.int<0> : !s32i loc(#loc120)
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc121)
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc122)
    %29 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %28 : !u64i), !cir.ptr<!s32i> loc(#loc123)
    cir.store %26, %29 : !s32i, !cir.ptr<!s32i> loc(#loc236)
    cir.br ^bb11 loc(#loc114)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc114)
  ^bb12:  // pred: ^bb11
    %30 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc124)
    %31 = cir.unary(inc, %30) : !u64i, !u64i loc(#loc125)
    cir.store %31, %1 : !u64i, !cir.ptr<!u64i> loc(#loc237)
    cir.br ^bb8 loc(#loc232)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc114)
  ^bb14:  // pred: ^bb13
    %32 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc126)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc127)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!s32i>, %33 : !s32i), !cir.ptr<!s32i> loc(#loc128)
    %35 = cir.load %34 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    cir.call @printIntLine(%35) : (!s32i) -> () loc(#loc129)
    %36 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc130)
    cir.delete.array %36 : <!s32i> loc(#loc130)
    cir.br ^bb15 loc(#loc103)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc81)
  } loc(#loc216)
  cir.func internal private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc239)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc240)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc241)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc242)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc140)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc141)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc243)
    cir.br ^bb1 loc(#loc244)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<5> : !s32i loc(#loc145)
    %7 = cir.const #cir.int<5> : !s32i loc(#loc146)
    %8 = cir.cmp(eq, %6, %7) : !s32i, !cir.bool loc(#loc245)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc246)
  ^bb2:  // pred: ^bb1
    %9 = cir.const #cir.int<20> : !s32i loc(#loc148)
    cir.store %9, %3 : !s32i, !cir.ptr<!s32i> loc(#loc247)
    cir.br ^bb3 loc(#loc144)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc144)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc248)
  ^bb5:  // pred: ^bb4
    %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc152)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc249)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc250)
    cir.store %13, %0 : !u64i, !cir.ptr<!u64i> loc(#loc251)
    %14 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc156)
    %15 = cir.call @_Znam(%14) : (!u64i) -> !cir.ptr<!void> loc(#loc157)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc252)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc252)
    cir.store %17, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc253)
    cir.br ^bb6 loc(#loc254)
  ^bb6:  // pred: ^bb5
    %18 = cir.const #cir.int<0> : !s32i loc(#loc163)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc163)
    cir.store %19, %1 : !u64i, !cir.ptr<!u64i> loc(#loc255)
    cir.br ^bb7 loc(#loc254)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc165)
    %21 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc166)
    %23 = cir.cmp(lt, %20, %22) : !u64i, !cir.bool loc(#loc256)
    cir.brcond %23 ^bb8, ^bb12 loc(#loc256)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc257)
  ^bb9:  // pred: ^bb8
    %24 = cir.const #cir.int<0> : !s32i loc(#loc168)
    %25 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc169)
    %26 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc170)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !u64i), !cir.ptr<!s32i> loc(#loc171)
    cir.store %24, %27 : !s32i, !cir.ptr<!s32i> loc(#loc258)
    cir.br ^bb10 loc(#loc162)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc162)
  ^bb11:  // pred: ^bb10
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc172)
    %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc173)
    cir.store %29, %1 : !u64i, !cir.ptr<!u64i> loc(#loc259)
    cir.br ^bb7 loc(#loc254)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc162)
  ^bb13:  // pred: ^bb12
    %30 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc174)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc175)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %31 : !s32i), !cir.ptr<!s32i> loc(#loc176)
    %33 = cir.load %32 : !cir.ptr<!s32i>, !s32i loc(#loc174)
    cir.call @printIntLine(%33) : (!s32i) -> () loc(#loc177)
    %34 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc178)
    cir.delete.array %34 : <!s32i> loc(#loc178)
    cir.br ^bb14 loc(#loc151)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc132)
  } loc(#loc238)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_034goodEv() extra(#fn_attr1) {
    cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03L8goodG2B1Ev() : () -> () loc(#loc181)
    cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03L8goodG2B2Ev() : () -> () loc(#loc182)
    cir.return loc(#loc180)
  } loc(#loc260)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":43:27)
#loc10 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc11 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc12 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":26:1)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":60:1)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":34:13)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":34:49)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":48:9)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":48:16)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":48:26)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":49:9)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":49:14)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":28:5)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":28:9)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":30:13)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":30:12)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":30:5)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":31:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":46:5)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":31:8)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":31:11)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":32:5)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":33:9)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":45:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":36:13)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":44:13)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":36:23)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":36:36)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":36:53)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":36:17)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":36:63)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":37:13)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":40:13)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":42:13)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":39:29)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":39:24)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":39:17)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":39:40)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":43:17)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":47:5)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":59:5)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":51:21)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":51:28)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":51:38)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":51:9)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":52:37)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":26:6)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":52:28)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":52:46)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":52:9)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":53:9)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":56:9)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":53:18)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":53:14)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":53:21)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":53:33)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":54:9)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":55:29)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":55:13)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":55:24)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":55:25)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":53:40)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":53:39)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":57:22)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":57:33)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":57:34)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":57:9)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":58:19)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":75:19)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":67:1)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":95:1)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":83:9)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":83:16)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":83:26)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":84:9)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":84:14)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":69:5)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":69:9)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":71:13)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":71:12)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":71:5)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":72:5)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":81:5)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":72:8)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":72:11)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":73:5)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":76:5)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":78:5)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":75:9)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":80:16)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":80:9)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":82:5)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":94:5)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":86:21)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":86:28)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":86:38)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":86:9)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":87:37)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":67:13)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":87:28)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":87:46)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":87:9)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":88:9)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":91:9)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":88:18)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":88:14)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":88:21)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":88:33)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":89:9)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":90:29)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":90:13)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":90:24)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":90:25)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":88:40)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":88:39)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":92:22)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":92:33)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":92:34)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":92:9)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":93:19)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":98:1)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":121:1)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":109:9)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":109:16)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":109:26)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":110:9)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":110:14)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":100:5)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":100:9)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":102:13)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":102:12)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":102:5)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":103:5)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":107:5)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":103:8)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":103:11)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":104:5)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":106:16)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":106:9)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":108:5)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":120:5)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":112:21)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":112:28)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":112:38)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":112:9)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":113:37)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":98:13)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":113:28)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":113:46)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":113:9)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":114:9)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":117:9)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":114:18)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":114:14)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":114:21)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":114:33)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":115:9)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":116:29)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":116:13)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":116:24)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":116:25)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":114:40)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":114:39)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":118:22)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":118:33)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":118:34)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":118:9)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":119:19)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":123:1)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":127:1)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":125:5)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_03.cpp":126:5)
#loc183 = loc(fused[#loc1, #loc2])
#loc184 = loc(fused[#loc3, #loc4])
#loc185 = loc(fused[#loc5, #loc6])
#loc186 = loc(fused[#loc7, #loc8])
#loc187 = loc(fused[#loc10, #loc11])
#loc188 = loc(fused[#loc12, #loc13])
#loc189 = loc(fused[#loc14, #loc15])
#loc190 = loc(fused[#loc16, #loc17])
#loc191 = loc(fused[#loc18, #loc19])
#loc192 = loc(fused[#loc18, #loc20])
#loc193 = loc(fused[#loc21, #loc22])
#loc194 = loc(fused[#loc23, #loc24])
#loc195 = loc(fused[#loc27, #loc25])
#loc196 = loc(fused[#loc28, #loc29])
#loc197 = loc(fused[#loc30, #loc31])
#loc198 = loc(fused[#loc32, #loc29])
#loc199 = loc(fused[#loc33, #loc34])
#loc200 = loc(fused[#loc35, #loc36])
#loc201 = loc(fused[#loc40, #loc41])
#loc202 = loc(fused[#loc42, #loc43, #loc44, #loc36])
#loc203 = loc(fused[#loc47, #loc48])
#loc204 = loc(fused[#loc50, #loc51])
#loc205 = loc(fused[#loc53, #loc54])
#loc206 = loc(fused[#loc52, #loc54])
#loc207 = loc(fused[#loc55, #loc54])
#loc208 = loc(fused[#loc58, #loc59])
#loc209 = loc(fused[#loc60, #loc59])
#loc210 = loc(fused[#loc61, #loc62])
#loc211 = loc(fused[#loc64, #loc63])
#loc212 = loc(fused[#loc65, #loc66])
#loc213 = loc(fused[#loc67, #loc62])
#loc214 = loc(fused[#loc69, #loc68])
#loc215 = loc(fused[#loc73, #loc72])
#loc216 = loc(fused[#loc80, #loc81])
#loc217 = loc(fused[#loc82, #loc83])
#loc218 = loc(fused[#loc82, #loc84])
#loc219 = loc(fused[#loc85, #loc86])
#loc220 = loc(fused[#loc87, #loc88])
#loc221 = loc(fused[#loc91, #loc89])
#loc222 = loc(fused[#loc92, #loc93])
#loc223 = loc(fused[#loc94, #loc95])
#loc224 = loc(fused[#loc96, #loc97, #loc98, #loc93])
#loc225 = loc(fused[#loc101, #loc100])
#loc226 = loc(fused[#loc102, #loc103])
#loc227 = loc(fused[#loc105, #loc106])
#loc228 = loc(fused[#loc104, #loc106])
#loc229 = loc(fused[#loc107, #loc106])
#loc230 = loc(fused[#loc110, #loc111])
#loc231 = loc(fused[#loc112, #loc111])
#loc232 = loc(fused[#loc113, #loc114])
#loc233 = loc(fused[#loc116, #loc115])
#loc234 = loc(fused[#loc117, #loc118])
#loc235 = loc(fused[#loc119, #loc114])
#loc236 = loc(fused[#loc121, #loc120])
#loc237 = loc(fused[#loc125, #loc124])
#loc238 = loc(fused[#loc131, #loc132])
#loc239 = loc(fused[#loc133, #loc134])
#loc240 = loc(fused[#loc133, #loc135])
#loc241 = loc(fused[#loc136, #loc137])
#loc242 = loc(fused[#loc138, #loc139])
#loc243 = loc(fused[#loc142, #loc140])
#loc244 = loc(fused[#loc143, #loc144])
#loc245 = loc(fused[#loc145, #loc146])
#loc246 = loc(fused[#loc147, #loc144])
#loc247 = loc(fused[#loc149, #loc148])
#loc248 = loc(fused[#loc150, #loc151])
#loc249 = loc(fused[#loc153, #loc154])
#loc250 = loc(fused[#loc152, #loc154])
#loc251 = loc(fused[#loc155, #loc154])
#loc252 = loc(fused[#loc158, #loc159])
#loc253 = loc(fused[#loc160, #loc159])
#loc254 = loc(fused[#loc161, #loc162])
#loc255 = loc(fused[#loc164, #loc163])
#loc256 = loc(fused[#loc165, #loc166])
#loc257 = loc(fused[#loc167, #loc162])
#loc258 = loc(fused[#loc169, #loc168])
#loc259 = loc(fused[#loc173, #loc172])
#loc260 = loc(fused[#loc179, #loc180])
