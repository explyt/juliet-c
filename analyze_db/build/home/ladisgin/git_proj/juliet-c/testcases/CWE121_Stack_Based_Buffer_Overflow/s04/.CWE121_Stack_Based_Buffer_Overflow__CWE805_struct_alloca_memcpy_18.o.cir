!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc103)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc105)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc106)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc107)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc108)
    %4 = cir.const #cir.int<50> : !s32i loc(#loc12)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc12)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc12)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc12)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %9 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc109)
    %10 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc12)
    cir.store %11, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc108)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc14)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc14)
    %14 = cir.const #cir.int<8> : !u64i loc(#loc14)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc14)
    %16 = cir.alloca !u8i, !cir.ptr<!u8i>, %15 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc14)
    cir.store %18, %9 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc109)
    cir.br ^bb1 loc(#loc110)
  ^bb1:  // pred: ^bb0
    %19 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc17)
    cir.store %19, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc111)
    cir.br ^bb2 loc(#loc112)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc113)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc114)
  ^bb4:  // pred: ^bb3
    %20 = cir.const #cir.int<0> : !s32i loc(#loc25)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc25)
    cir.store %21, %1 : !u64i, !cir.ptr<!u64i> loc(#loc115)
    cir.br ^bb5 loc(#loc114)
  ^bb5:  // 2 preds: ^bb4, ^bb9
    %22 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc27)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc28)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc28)
    %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc116)
    cir.brcond %25 ^bb6, ^bb10 loc(#loc29)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc117)
  ^bb7:  // pred: ^bb6
    %26 = cir.const #cir.int<0> : !s32i loc(#loc31)
    %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc32)
    %28 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc33)
    %29 = cir.ptr_stride(%28 : !cir.ptr<!ty__twoIntsStruct>, %27 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc33)
    %30 = cir.get_member %29[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc34)
    cir.store %26, %30 : !s32i, !cir.ptr<!s32i> loc(#loc118)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc35)
    %32 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc36)
    %33 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
    %34 = cir.ptr_stride(%33 : !cir.ptr<!ty__twoIntsStruct>, %32 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
    %35 = cir.get_member %34[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc38)
    cir.store %31, %35 : !s32i, !cir.ptr<!s32i> loc(#loc119)
    cir.br ^bb8 loc(#loc24)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc24)
  ^bb9:  // pred: ^bb8
    %36 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc39)
    %37 = cir.unary(inc, %36) : !u64i, !u64i loc(#loc40)
    cir.store %37, %1 : !u64i, !cir.ptr<!u64i> loc(#loc120)
    cir.br ^bb5 loc(#loc114)
  ^bb10:  // pred: ^bb5
    cir.br ^bb11 loc(#loc24)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc22)
  ^bb12:  // pred: ^bb11
    %38 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
    %39 = cir.cast(bitcast, %38 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc41)
    %40 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc42)
    %41 = cir.cast(bitcast, %40 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc42)
    %42 = cir.const #cir.int<100> : !s32i loc(#loc43)
    %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc43)
    %44 = cir.const #cir.int<8> : !u64i loc(#loc121)
    %45 = cir.binop(mul, %43, %44) : !u64i loc(#loc122)
    cir.libc.memcpy %45 bytes from %41 to %39 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc123)
    %46 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc48)
    %47 = cir.const #cir.int<0> : !s32i loc(#loc49)
    %48 = cir.ptr_stride(%46 : !cir.ptr<!ty__twoIntsStruct>, %47 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
    cir.call @printStructLine(%48) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc51)
    cir.br ^bb13 loc(#loc20)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc4)
  } loc(#loc104)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc125)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    cir.return loc(#loc53)
  } loc(#loc124)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc127)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc128)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc129)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc130)
    %4 = cir.const #cir.int<50> : !s32i loc(#loc65)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc65)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc65)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc65)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc65)
    %9 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc131)
    %10 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc65)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc65)
    cir.store %11, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc130)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc67)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc67)
    %14 = cir.const #cir.int<8> : !u64i loc(#loc67)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc67)
    %16 = cir.alloca !u8i, !cir.ptr<!u8i>, %15 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc67)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc67)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc67)
    cir.store %18, %9 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc131)
    cir.br ^bb1 loc(#loc132)
  ^bb1:  // pred: ^bb0
    %19 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc70)
    cir.store %19, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc133)
    cir.br ^bb2 loc(#loc134)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc135)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc136)
  ^bb4:  // pred: ^bb3
    %20 = cir.const #cir.int<0> : !s32i loc(#loc78)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc78)
    cir.store %21, %1 : !u64i, !cir.ptr<!u64i> loc(#loc137)
    cir.br ^bb5 loc(#loc136)
  ^bb5:  // 2 preds: ^bb4, ^bb9
    %22 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc80)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc81)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc81)
    %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc138)
    cir.brcond %25 ^bb6, ^bb10 loc(#loc82)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc139)
  ^bb7:  // pred: ^bb6
    %26 = cir.const #cir.int<0> : !s32i loc(#loc84)
    %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc85)
    %28 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc86)
    %29 = cir.ptr_stride(%28 : !cir.ptr<!ty__twoIntsStruct>, %27 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc86)
    %30 = cir.get_member %29[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc34)
    cir.store %26, %30 : !s32i, !cir.ptr<!s32i> loc(#loc140)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc87)
    %32 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc88)
    %33 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc89)
    %34 = cir.ptr_stride(%33 : !cir.ptr<!ty__twoIntsStruct>, %32 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc89)
    %35 = cir.get_member %34[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc38)
    cir.store %31, %35 : !s32i, !cir.ptr<!s32i> loc(#loc141)
    cir.br ^bb8 loc(#loc77)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc77)
  ^bb9:  // pred: ^bb8
    %36 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc90)
    %37 = cir.unary(inc, %36) : !u64i, !u64i loc(#loc91)
    cir.store %37, %1 : !u64i, !cir.ptr<!u64i> loc(#loc142)
    cir.br ^bb5 loc(#loc136)
  ^bb10:  // pred: ^bb5
    cir.br ^bb11 loc(#loc77)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc75)
  ^bb12:  // pred: ^bb11
    %38 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc92)
    %39 = cir.cast(bitcast, %38 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc92)
    %40 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc93)
    %41 = cir.cast(bitcast, %40 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc93)
    %42 = cir.const #cir.int<100> : !s32i loc(#loc94)
    %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc94)
    %44 = cir.const #cir.int<8> : !u64i loc(#loc143)
    %45 = cir.binop(mul, %43, %44) : !u64i loc(#loc144)
    cir.libc.memcpy %45 bytes from %41 to %39 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc145)
    %46 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc99)
    %47 = cir.const #cir.int<0> : !s32i loc(#loc100)
    %48 = cir.ptr_stride(%46 : !cir.ptr<!ty__twoIntsStruct>, %47 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc101)
    cir.call @printStructLine(%48) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc102)
    cir.br ^bb13 loc(#loc73)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc57)
  } loc(#loc126)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":21:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":46:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":32:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":32:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":34:13)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":34:20)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":23:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":23:21)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":24:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":24:54)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":25:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":25:55)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":26:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":26:10)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":30:12)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":30:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":31:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":45:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":33:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":41:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":36:13)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":40:13)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":36:22)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":36:18)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":36:25)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":36:29)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":36:27)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":37:13)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":38:36)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":38:24)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":38:17)
#loc34 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":39:36)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":39:24)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":39:17)
#loc38 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":36:35)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":36:34)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":43:16)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":43:22)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":43:30)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":43:34)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":43:54)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":43:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":43:55)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":44:26)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":44:31)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":44:32)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":44:9)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":79:1)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":82:1)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":81:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":81:13)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":53:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":77:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":63:9)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":63:33)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":65:13)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":65:20)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":55:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":55:21)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":56:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":56:54)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":57:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":57:55)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":58:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":58:10)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":61:12)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":61:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":62:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":76:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":64:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":72:9)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":67:13)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":71:13)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":67:22)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":67:18)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":67:25)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":67:29)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":67:27)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":68:13)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":69:36)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":69:24)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":69:17)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":70:36)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":70:24)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":70:17)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":67:35)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":67:34)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":74:16)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":74:22)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":74:30)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":74:34)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":74:54)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":74:9)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":74:55)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":75:26)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":75:31)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":75:32)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memcpy_18.c":75:9)
#loc103 = loc(fused[#loc1, #loc2])
#loc104 = loc(fused[#loc3, #loc4])
#loc105 = loc(fused[#loc5, #loc6])
#loc106 = loc(fused[#loc7, #loc8])
#loc107 = loc(fused[#loc9, #loc10])
#loc108 = loc(fused[#loc11, #loc12])
#loc109 = loc(fused[#loc13, #loc14])
#loc110 = loc(fused[#loc15, #loc16])
#loc111 = loc(fused[#loc18, #loc17])
#loc112 = loc(fused[#loc19, #loc20])
#loc113 = loc(fused[#loc21, #loc22])
#loc114 = loc(fused[#loc23, #loc24])
#loc115 = loc(fused[#loc26, #loc25])
#loc116 = loc(fused[#loc27, #loc28])
#loc117 = loc(fused[#loc30, #loc24])
#loc118 = loc(fused[#loc33, #loc31])
#loc119 = loc(fused[#loc37, #loc35])
#loc120 = loc(fused[#loc40, #loc39])
#loc121 = loc(fused[#loc44, #loc45])
#loc122 = loc(fused[#loc43, #loc45])
#loc123 = loc(fused[#loc46, #loc47])
#loc124 = loc(fused[#loc52, #loc53])
#loc125 = loc(fused[#loc54, #loc55])
#loc126 = loc(fused[#loc56, #loc57])
#loc127 = loc(fused[#loc58, #loc59])
#loc128 = loc(fused[#loc60, #loc61])
#loc129 = loc(fused[#loc62, #loc63])
#loc130 = loc(fused[#loc64, #loc65])
#loc131 = loc(fused[#loc66, #loc67])
#loc132 = loc(fused[#loc68, #loc69])
#loc133 = loc(fused[#loc71, #loc70])
#loc134 = loc(fused[#loc72, #loc73])
#loc135 = loc(fused[#loc74, #loc75])
#loc136 = loc(fused[#loc76, #loc77])
#loc137 = loc(fused[#loc79, #loc78])
#loc138 = loc(fused[#loc80, #loc81])
#loc139 = loc(fused[#loc83, #loc77])
#loc140 = loc(fused[#loc86, #loc84])
#loc141 = loc(fused[#loc89, #loc87])
#loc142 = loc(fused[#loc91, #loc90])
#loc143 = loc(fused[#loc95, #loc96])
#loc144 = loc(fused[#loc94, #loc96])
#loc145 = loc(fused[#loc97, #loc98])
