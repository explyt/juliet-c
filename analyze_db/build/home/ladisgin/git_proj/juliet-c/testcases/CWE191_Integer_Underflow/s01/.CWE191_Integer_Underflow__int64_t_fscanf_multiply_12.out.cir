!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc85 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":171:10)
#loc86 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":171:14)
#loc87 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":171:20)
#loc88 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":171:32)
#loc253 = loc(fused[#loc85, #loc86])
#loc254 = loc(fused[#loc87, #loc88])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc219)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc220)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc221)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc222)
  cir.func private @printLongLongLine(!s64i) loc(#loc223)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc224)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc13)
  cir.func no_proto @CWE191_Integer_Underflow__int64_t_fscanf_multiply_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc226)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc227)
    %2 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc228)
    %3 = cir.const #cir.int<0> : !s64i loc(#loc22)
    cir.store %3, %2 : !s64i, !cir.ptr<!s64i> loc(#loc229)
    cir.br ^bb1 loc(#loc230)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc231)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc231)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc26)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc26)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc232)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc31)
    %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc221)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc32)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc222)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc222)
    %13 = cir.call @__isoc99_fscanf(%10, %12, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc31)
    cir.br ^bb4 loc(#loc29)
  ^bb3:  // pred: ^bb1
    %14 = cir.const #cir.int<2> : !s32i loc(#loc33)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc34)
    %16 = cir.cast(integral, %15 : !s32i), !s64i loc(#loc34)
    cir.store %16, %2 : !s64i, !cir.ptr<!s64i> loc(#loc233)
    cir.br ^bb4 loc(#loc25)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc25)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc234)
  ^bb6:  // pred: ^bb5
    %17 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc235)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc235)
    %19 = cir.call %18() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc38)
    %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc38)
    cir.brcond %20 ^bb7, ^bb12 loc(#loc236)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc237)
  ^bb8:  // pred: ^bb7
    %21 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc45)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc46)
    %23 = cir.cast(integral, %22 : !s32i), !s64i loc(#loc46)
    %24 = cir.cmp(lt, %21, %23) : !s64i, !cir.bool loc(#loc238)
    cir.brcond %24 ^bb9, ^bb10 loc(#loc239)
  ^bb9:  // pred: ^bb8
    %25 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc48)
    %26 = cir.const #cir.int<2> : !s32i loc(#loc17)
    %27 = cir.cast(integral, %26 : !s32i), !s64i loc(#loc17)
    %28 = cir.binop(mul, %25, %27) nsw : !s64i loc(#loc48)
    cir.store %28, %0 : !s64i, !cir.ptr<!s64i> loc(#loc226)
    %29 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc49)
    cir.call @printLongLongLine(%29) : (!s64i) -> () loc(#loc50)
    cir.br ^bb10 loc(#loc44)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc44)
  ^bb11:  // pred: ^bb10
    cir.br ^bb22 loc(#loc41)
  ^bb12:  // pred: ^bb6
    cir.br ^bb13 loc(#loc240)
  ^bb13:  // pred: ^bb12
    %30 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc53)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %32 = cir.cast(integral, %31 : !s32i), !s64i loc(#loc54)
    %33 = cir.cmp(lt, %30, %32) : !s64i, !cir.bool loc(#loc241)
    cir.brcond %33 ^bb14, ^bb20 loc(#loc242)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc243)
  ^bb15:  // pred: ^bb14
    %34 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc58)
    %35 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc59)
    %36 = cir.unary(minus, %35) : !s64i, !s64i loc(#loc59)
    %37 = cir.const #cir.int<1> : !s64i loc(#loc59)
    %38 = cir.binop(sub, %36, %37) nsw : !s64i loc(#loc59)
    %39 = cir.const #cir.int<2> : !s32i loc(#loc60)
    %40 = cir.cast(integral, %39 : !s32i), !s64i loc(#loc60)
    %41 = cir.binop(div, %38, %40) : !s64i loc(#loc244)
    %42 = cir.cmp(gt, %34, %41) : !s64i, !cir.bool loc(#loc245)
    cir.brcond %42 ^bb16, ^bb17 loc(#loc246)
  ^bb16:  // pred: ^bb15
    %43 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc65)
    %44 = cir.const #cir.int<2> : !s32i loc(#loc19)
    %45 = cir.cast(integral, %44 : !s32i), !s64i loc(#loc19)
    %46 = cir.binop(mul, %43, %45) nsw : !s64i loc(#loc65)
    cir.store %46, %1 : !s64i, !cir.ptr<!s64i> loc(#loc227)
    %47 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc66)
    cir.call @printLongLongLine(%47) : (!s64i) -> () loc(#loc67)
    cir.br ^bb18 loc(#loc63)
  ^bb17:  // pred: ^bb15
    %48 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc13)
    %49 = cir.cast(array_to_ptrdecay, %48 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc13)
    cir.call @printLine(%49) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    cir.br ^bb18 loc(#loc57)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc57)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc52)
  ^bb20:  // 2 preds: ^bb13, ^bb19
    cir.br ^bb21 loc(#loc52)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc37)
  ^bb22:  // 2 preds: ^bb11, ^bb21
    cir.br ^bb23 loc(#loc37)
  ^bb23:  // pred: ^bb22
    cir.return loc(#loc15)
  } loc(#loc225)
  cir.func no_proto @CWE191_Integer_Underflow__int64_t_fscanf_multiply_12_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc248)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc71)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc249)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc73)
    cir.return loc(#loc70)
  } loc(#loc247)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc250)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc251)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc79)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc80)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc81)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc82)
  cir.func @main(%arg0: !s32i loc(fused[#loc85, #loc86]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc87, #loc88])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc253)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc254)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc84)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc89)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc89)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc90)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc91)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc91)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc92)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc79)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %8 = cir.get_global @CWE191_Integer_Underflow__int64_t_fscanf_multiply_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc255)
    cir.call @CWE191_Integer_Underflow__int64_t_fscanf_multiply_12_good() : () -> () loc(#loc94)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc80)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc81)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    %13 = cir.get_global @CWE191_Integer_Underflow__int64_t_fscanf_multiply_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc256)
    cir.call @CWE191_Integer_Underflow__int64_t_fscanf_multiply_12_bad() : () -> () loc(#loc98)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc82)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc101)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc257)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc257)
    cir.return %17 : !s32i loc(#loc257)
  } loc(#loc252)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc259)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc260)
    %2 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc261)
    %3 = cir.const #cir.int<0> : !s64i loc(#loc111)
    cir.store %3, %2 : !s64i, !cir.ptr<!s64i> loc(#loc262)
    cir.br ^bb1 loc(#loc263)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc264)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc264)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc115)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc115)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc265)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc120)
    %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc221)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc121)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc266)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc266)
    %13 = cir.call @__isoc99_fscanf(%10, %12, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc120)
    cir.br ^bb4 loc(#loc118)
  ^bb3:  // pred: ^bb1
    %14 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc124)
    %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc221)
    %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc125)
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc267)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc267)
    %19 = cir.call @__isoc99_fscanf(%16, %18, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc124)
    cir.br ^bb4 loc(#loc114)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc114)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc268)
  ^bb6:  // pred: ^bb5
    %20 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc269)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc269)
    %22 = cir.call %21() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc130)
    %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc130)
    cir.brcond %23 ^bb7, ^bb17 loc(#loc270)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc271)
  ^bb8:  // pred: ^bb7
    %24 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc137)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc138)
    %26 = cir.cast(integral, %25 : !s32i), !s64i loc(#loc138)
    %27 = cir.cmp(lt, %24, %26) : !s64i, !cir.bool loc(#loc272)
    cir.brcond %27 ^bb9, ^bb15 loc(#loc273)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc274)
  ^bb10:  // pred: ^bb9
    %28 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc142)
    %29 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc143)
    %30 = cir.unary(minus, %29) : !s64i, !s64i loc(#loc143)
    %31 = cir.const #cir.int<1> : !s64i loc(#loc143)
    %32 = cir.binop(sub, %30, %31) nsw : !s64i loc(#loc143)
    %33 = cir.const #cir.int<2> : !s32i loc(#loc144)
    %34 = cir.cast(integral, %33 : !s32i), !s64i loc(#loc144)
    %35 = cir.binop(div, %32, %34) : !s64i loc(#loc275)
    %36 = cir.cmp(gt, %28, %35) : !s64i, !cir.bool loc(#loc276)
    cir.brcond %36 ^bb11, ^bb12 loc(#loc277)
  ^bb11:  // pred: ^bb10
    %37 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc149)
    %38 = cir.const #cir.int<2> : !s32i loc(#loc106)
    %39 = cir.cast(integral, %38 : !s32i), !s64i loc(#loc106)
    %40 = cir.binop(mul, %37, %39) nsw : !s64i loc(#loc149)
    cir.store %40, %0 : !s64i, !cir.ptr<!s64i> loc(#loc259)
    %41 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc150)
    cir.call @printLongLongLine(%41) : (!s64i) -> () loc(#loc151)
    cir.br ^bb13 loc(#loc147)
  ^bb12:  // pred: ^bb10
    %42 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc152)
    %43 = cir.cast(array_to_ptrdecay, %42 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc152)
    cir.call @printLine(%43) : (!cir.ptr<!s8i>) -> () loc(#loc153)
    cir.br ^bb13 loc(#loc141)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc141)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc136)
  ^bb15:  // 2 preds: ^bb8, ^bb14
    cir.br ^bb16 loc(#loc136)
  ^bb16:  // pred: ^bb15
    cir.br ^bb27 loc(#loc133)
  ^bb17:  // pred: ^bb6
    cir.br ^bb18 loc(#loc278)
  ^bb18:  // pred: ^bb17
    %44 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc156)
    %45 = cir.const #cir.int<0> : !s32i loc(#loc157)
    %46 = cir.cast(integral, %45 : !s32i), !s64i loc(#loc157)
    %47 = cir.cmp(lt, %44, %46) : !s64i, !cir.bool loc(#loc279)
    cir.brcond %47 ^bb19, ^bb25 loc(#loc280)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc281)
  ^bb20:  // pred: ^bb19
    %48 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc161)
    %49 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc162)
    %50 = cir.unary(minus, %49) : !s64i, !s64i loc(#loc162)
    %51 = cir.const #cir.int<1> : !s64i loc(#loc162)
    %52 = cir.binop(sub, %50, %51) nsw : !s64i loc(#loc162)
    %53 = cir.const #cir.int<2> : !s32i loc(#loc163)
    %54 = cir.cast(integral, %53 : !s32i), !s64i loc(#loc163)
    %55 = cir.binop(div, %52, %54) : !s64i loc(#loc282)
    %56 = cir.cmp(gt, %48, %55) : !s64i, !cir.bool loc(#loc283)
    cir.brcond %56 ^bb21, ^bb22 loc(#loc284)
  ^bb21:  // pred: ^bb20
    %57 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc168)
    %58 = cir.const #cir.int<2> : !s32i loc(#loc108)
    %59 = cir.cast(integral, %58 : !s32i), !s64i loc(#loc108)
    %60 = cir.binop(mul, %57, %59) nsw : !s64i loc(#loc168)
    cir.store %60, %1 : !s64i, !cir.ptr<!s64i> loc(#loc260)
    %61 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc169)
    cir.call @printLongLongLine(%61) : (!s64i) -> () loc(#loc170)
    cir.br ^bb23 loc(#loc166)
  ^bb22:  // pred: ^bb20
    %62 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc171)
    %63 = cir.cast(array_to_ptrdecay, %62 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc171)
    cir.call @printLine(%63) : (!cir.ptr<!s8i>) -> () loc(#loc172)
    cir.br ^bb23 loc(#loc160)
  ^bb23:  // 2 preds: ^bb21, ^bb22
    cir.br ^bb24 loc(#loc160)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc155)
  ^bb25:  // 2 preds: ^bb18, ^bb24
    cir.br ^bb26 loc(#loc155)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc129)
  ^bb27:  // 2 preds: ^bb16, ^bb26
    cir.br ^bb28 loc(#loc129)
  ^bb28:  // pred: ^bb27
    cir.return loc(#loc104)
  } loc(#loc258)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc286)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc287)
    %2 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc288)
    %3 = cir.const #cir.int<0> : !s64i loc(#loc181)
    cir.store %3, %2 : !s64i, !cir.ptr<!s64i> loc(#loc289)
    cir.br ^bb1 loc(#loc290)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc291)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc291)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc185)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc185)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc292)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<2> : !s32i loc(#loc190)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc191)
    %10 = cir.cast(integral, %9 : !s32i), !s64i loc(#loc191)
    cir.store %10, %2 : !s64i, !cir.ptr<!s64i> loc(#loc293)
    cir.br ^bb4 loc(#loc188)
  ^bb3:  // pred: ^bb1
    %11 = cir.const #cir.int<2> : !s32i loc(#loc193)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc194)
    %13 = cir.cast(integral, %12 : !s32i), !s64i loc(#loc194)
    cir.store %13, %2 : !s64i, !cir.ptr<!s64i> loc(#loc294)
    cir.br ^bb4 loc(#loc184)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc184)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc295)
  ^bb6:  // pred: ^bb5
    %14 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc296)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc296)
    %16 = cir.call %15() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc198)
    %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc198)
    cir.brcond %17 ^bb7, ^bb12 loc(#loc297)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc298)
  ^bb8:  // pred: ^bb7
    %18 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc205)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc206)
    %20 = cir.cast(integral, %19 : !s32i), !s64i loc(#loc206)
    %21 = cir.cmp(lt, %18, %20) : !s64i, !cir.bool loc(#loc299)
    cir.brcond %21 ^bb9, ^bb10 loc(#loc300)
  ^bb9:  // pred: ^bb8
    %22 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc208)
    %23 = cir.const #cir.int<2> : !s32i loc(#loc176)
    %24 = cir.cast(integral, %23 : !s32i), !s64i loc(#loc176)
    %25 = cir.binop(mul, %22, %24) nsw : !s64i loc(#loc208)
    cir.store %25, %0 : !s64i, !cir.ptr<!s64i> loc(#loc286)
    %26 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc209)
    cir.call @printLongLongLine(%26) : (!s64i) -> () loc(#loc210)
    cir.br ^bb10 loc(#loc204)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc204)
  ^bb11:  // pred: ^bb10
    cir.br ^bb17 loc(#loc201)
  ^bb12:  // pred: ^bb6
    cir.br ^bb13 loc(#loc301)
  ^bb13:  // pred: ^bb12
    %27 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc213)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc214)
    %29 = cir.cast(integral, %28 : !s32i), !s64i loc(#loc214)
    %30 = cir.cmp(lt, %27, %29) : !s64i, !cir.bool loc(#loc302)
    cir.brcond %30 ^bb14, ^bb15 loc(#loc303)
  ^bb14:  // pred: ^bb13
    %31 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc216)
    %32 = cir.const #cir.int<2> : !s32i loc(#loc178)
    %33 = cir.cast(integral, %32 : !s32i), !s64i loc(#loc178)
    %34 = cir.binop(mul, %31, %33) nsw : !s64i loc(#loc216)
    cir.store %34, %1 : !s64i, !cir.ptr<!s64i> loc(#loc287)
    %35 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc217)
    cir.call @printLongLongLine(%35) : (!s64i) -> () loc(#loc218)
    cir.br ^bb15 loc(#loc212)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc212)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc197)
  ^bb17:  // 2 preds: ^bb11, ^bb16
    cir.br ^bb18 loc(#loc197)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc174)
  } loc(#loc285)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":30:24)
#loc8 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":30:28)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":58:27)
#loc14 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":23:1)
#loc15 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":62:1)
#loc16 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":42:13)
#loc17 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":42:37)
#loc18 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":53:17)
#loc19 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":53:41)
#loc20 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":25:5)
#loc21 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":25:13)
#loc22 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":26:12)
#loc23 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":26:5)
#loc24 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":27:5)
#loc25 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":36:5)
#loc26 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":27:8)
#loc27 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":27:33)
#loc28 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":28:5)
#loc29 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":31:5)
#loc30 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":33:5)
#loc31 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":30:9)
#loc32 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":30:17)
#loc33 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":35:17)
#loc34 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":35:16)
#loc35 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":35:9)
#loc36 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":37:5)
#loc37 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":61:5)
#loc38 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":37:8)
#loc39 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":37:33)
#loc40 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":38:5)
#loc41 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":45:5)
#loc42 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":47:5)
#loc43 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":39:9)
#loc44 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":44:9)
#loc45 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":39:12)
#loc46 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":39:19)
#loc47 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":40:9)
#loc48 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":42:30)
#loc49 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":43:31)
#loc50 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":43:13)
#loc51 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":48:9)
#loc52 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":60:9)
#loc53 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":48:12)
#loc54 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":48:19)
#loc55 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":49:9)
#loc56 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":51:13)
#loc57 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":59:13)
#loc58 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":51:17)
#loc59 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":51:25)
#loc60 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":51:35)
#loc61 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":51:36)
#loc62 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":52:13)
#loc63 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":55:13)
#loc64 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":57:13)
#loc65 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":53:34)
#loc66 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":54:35)
#loc67 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":54:17)
#loc68 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":58:17)
#loc69 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":156:1)
#loc70 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":160:1)
#loc71 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":158:5)
#loc72 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":158:13)
#loc73 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":159:5)
#loc74 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":159:13)
#loc75 = loc("/usr/include/stdlib.h":575:1)
#loc76 = loc("/usr/include/stdlib.h":575:41)
#loc77 = loc("/usr/include/time.h":76:1)
#loc78 = loc("/usr/include/time.h":76:38)
#loc79 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":176:15)
#loc80 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":178:15)
#loc81 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":181:15)
#loc82 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":183:15)
#loc83 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":171:1)
#loc84 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":186:1)
#loc89 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":172:1)
#loc90 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":174:27)
#loc91 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":174:22)
#loc92 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":174:5)
#loc93 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":176:5)
#loc94 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":177:5)
#loc95 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":177:63)
#loc96 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":178:5)
#loc97 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":181:5)
#loc98 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":182:5)
#loc99 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":182:62)
#loc100 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":183:5)
#loc101 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":185:12)
#loc102 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":185:5)
#loc103 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":71:1)
#loc104 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":117:1)
#loc105 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":92:17)
#loc106 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":92:41)
#loc107 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":108:17)
#loc108 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":108:41)
#loc109 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":73:5)
#loc110 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":73:13)
#loc111 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":74:12)
#loc112 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":74:5)
#loc113 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":75:5)
#loc114 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":84:5)
#loc115 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":75:8)
#loc116 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":75:33)
#loc117 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":76:5)
#loc118 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":79:5)
#loc119 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":81:5)
#loc120 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":78:9)
#loc121 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":78:17)
#loc122 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":78:24)
#loc123 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":78:28)
#loc124 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":83:9)
#loc125 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":83:17)
#loc126 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":83:24)
#loc127 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":83:28)
#loc128 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":85:5)
#loc129 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":116:5)
#loc130 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":85:8)
#loc131 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":85:33)
#loc132 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":86:5)
#loc133 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":100:5)
#loc134 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":102:5)
#loc135 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":87:9)
#loc136 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":99:9)
#loc137 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":87:12)
#loc138 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":87:19)
#loc139 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":88:9)
#loc140 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":90:13)
#loc141 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":98:13)
#loc142 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":90:17)
#loc143 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":90:25)
#loc144 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":90:35)
#loc145 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":90:36)
#loc146 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":91:13)
#loc147 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":94:13)
#loc148 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":96:13)
#loc149 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":92:34)
#loc150 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":93:35)
#loc151 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":93:17)
#loc152 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":97:27)
#loc153 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":97:17)
#loc154 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":103:9)
#loc155 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":115:9)
#loc156 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":103:12)
#loc157 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":103:19)
#loc158 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":104:9)
#loc159 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":106:13)
#loc160 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":114:13)
#loc161 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":106:17)
#loc162 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":106:25)
#loc163 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":106:35)
#loc164 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":106:36)
#loc165 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":107:13)
#loc166 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":110:13)
#loc167 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":112:13)
#loc168 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":108:34)
#loc169 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":109:35)
#loc170 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":109:17)
#loc171 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":113:27)
#loc172 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":113:17)
#loc173 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":122:1)
#loc174 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":154:1)
#loc175 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":141:13)
#loc176 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":141:37)
#loc177 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":150:13)
#loc178 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":150:37)
#loc179 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":124:5)
#loc180 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":124:13)
#loc181 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":125:12)
#loc182 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":125:5)
#loc183 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":126:5)
#loc184 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":135:5)
#loc185 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":126:8)
#loc186 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":126:33)
#loc187 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":127:5)
#loc188 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":130:5)
#loc189 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":132:5)
#loc190 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":129:17)
#loc191 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":129:16)
#loc192 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":129:9)
#loc193 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":134:17)
#loc194 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":134:16)
#loc195 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":134:9)
#loc196 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":136:5)
#loc197 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":153:5)
#loc198 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":136:8)
#loc199 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":136:33)
#loc200 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":137:5)
#loc201 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":144:5)
#loc202 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":146:5)
#loc203 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":138:9)
#loc204 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":143:9)
#loc205 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":138:12)
#loc206 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":138:19)
#loc207 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":139:9)
#loc208 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":141:30)
#loc209 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":142:31)
#loc210 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":142:13)
#loc211 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":147:9)
#loc212 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":152:9)
#loc213 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":147:12)
#loc214 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":147:19)
#loc215 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":148:9)
#loc216 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":150:30)
#loc217 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":151:31)
#loc218 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_12.c":151:13)
#loc219 = loc(fused[#loc1, #loc2])
#loc220 = loc(fused[#loc3, #loc4])
#loc221 = loc(fused[#loc5, #loc6])
#loc222 = loc(fused[#loc7, #loc8])
#loc223 = loc(fused[#loc9, #loc10])
#loc224 = loc(fused[#loc11, #loc12])
#loc225 = loc(fused[#loc14, #loc15])
#loc226 = loc(fused[#loc16, #loc17])
#loc227 = loc(fused[#loc18, #loc19])
#loc228 = loc(fused[#loc20, #loc21])
#loc229 = loc(fused[#loc23, #loc22])
#loc230 = loc(fused[#loc24, #loc25])
#loc231 = loc(fused[#loc26, #loc27])
#loc232 = loc(fused[#loc28, #loc29, #loc30, #loc25])
#loc233 = loc(fused[#loc35, #loc33])
#loc234 = loc(fused[#loc36, #loc37])
#loc235 = loc(fused[#loc38, #loc39])
#loc236 = loc(fused[#loc40, #loc41, #loc42, #loc37])
#loc237 = loc(fused[#loc43, #loc44])
#loc238 = loc(fused[#loc45, #loc46])
#loc239 = loc(fused[#loc47, #loc44])
#loc240 = loc(fused[#loc51, #loc52])
#loc241 = loc(fused[#loc53, #loc54])
#loc242 = loc(fused[#loc55, #loc52])
#loc243 = loc(fused[#loc56, #loc57])
#loc244 = loc(fused[#loc59, #loc60])
#loc245 = loc(fused[#loc58, #loc61])
#loc246 = loc(fused[#loc62, #loc63, #loc64, #loc57])
#loc247 = loc(fused[#loc69, #loc70])
#loc248 = loc(fused[#loc71, #loc72])
#loc249 = loc(fused[#loc73, #loc74])
#loc250 = loc(fused[#loc75, #loc76])
#loc251 = loc(fused[#loc77, #loc78])
#loc252 = loc(fused[#loc83, #loc84])
#loc255 = loc(fused[#loc94, #loc95])
#loc256 = loc(fused[#loc98, #loc99])
#loc257 = loc(fused[#loc102, #loc101])
#loc258 = loc(fused[#loc103, #loc104])
#loc259 = loc(fused[#loc105, #loc106])
#loc260 = loc(fused[#loc107, #loc108])
#loc261 = loc(fused[#loc109, #loc110])
#loc262 = loc(fused[#loc112, #loc111])
#loc263 = loc(fused[#loc113, #loc114])
#loc264 = loc(fused[#loc115, #loc116])
#loc265 = loc(fused[#loc117, #loc118, #loc119, #loc114])
#loc266 = loc(fused[#loc122, #loc123])
#loc267 = loc(fused[#loc126, #loc127])
#loc268 = loc(fused[#loc128, #loc129])
#loc269 = loc(fused[#loc130, #loc131])
#loc270 = loc(fused[#loc132, #loc133, #loc134, #loc129])
#loc271 = loc(fused[#loc135, #loc136])
#loc272 = loc(fused[#loc137, #loc138])
#loc273 = loc(fused[#loc139, #loc136])
#loc274 = loc(fused[#loc140, #loc141])
#loc275 = loc(fused[#loc143, #loc144])
#loc276 = loc(fused[#loc142, #loc145])
#loc277 = loc(fused[#loc146, #loc147, #loc148, #loc141])
#loc278 = loc(fused[#loc154, #loc155])
#loc279 = loc(fused[#loc156, #loc157])
#loc280 = loc(fused[#loc158, #loc155])
#loc281 = loc(fused[#loc159, #loc160])
#loc282 = loc(fused[#loc162, #loc163])
#loc283 = loc(fused[#loc161, #loc164])
#loc284 = loc(fused[#loc165, #loc166, #loc167, #loc160])
#loc285 = loc(fused[#loc173, #loc174])
#loc286 = loc(fused[#loc175, #loc176])
#loc287 = loc(fused[#loc177, #loc178])
#loc288 = loc(fused[#loc179, #loc180])
#loc289 = loc(fused[#loc182, #loc181])
#loc290 = loc(fused[#loc183, #loc184])
#loc291 = loc(fused[#loc185, #loc186])
#loc292 = loc(fused[#loc187, #loc188, #loc189, #loc184])
#loc293 = loc(fused[#loc192, #loc190])
#loc294 = loc(fused[#loc195, #loc193])
#loc295 = loc(fused[#loc196, #loc197])
#loc296 = loc(fused[#loc198, #loc199])
#loc297 = loc(fused[#loc200, #loc201, #loc202, #loc197])
#loc298 = loc(fused[#loc203, #loc204])
#loc299 = loc(fused[#loc205, #loc206])
#loc300 = loc(fused[#loc207, #loc204])
#loc301 = loc(fused[#loc211, #loc212])
#loc302 = loc(fused[#loc213, #loc214])
#loc303 = loc(fused[#loc215, #loc212])
