!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":110:10)
#loc107 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":110:14)
#loc108 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":110:20)
#loc109 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":110:32)
#loc163 = loc(fused[#loc106, #loc107])
#loc164 = loc(fused[#loc108, #loc109])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s03/CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc122)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc123)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc124)
  cir.func @_ZN66CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_163badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc126)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc127)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc15)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc15)
        cir.condition(%3) loc(#loc15)
      } do {
        %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc16)
        %3 = cir.const #cir.int<100> : !s32i loc(#loc17)
        %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc17)
        %5 = cir.const #cir.int<4> : !u64i loc(#loc129)
        %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc130)
        %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc16)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc131)
        cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc132)
        cir.scope {
          %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc24)
          %10 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc25)
          %11 = cir.cmp(eq, %9, %10) : !cir.ptr<!s32i>, !cir.bool loc(#loc134)
          cir.if %11 {
            %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc27)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc28)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc29)
            cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc27)
          } loc(#loc135)
        } loc(#loc133)
        cir.break loc(#loc30)
      } loc(#loc128)
    } loc(#loc128)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc33)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc33)
        cir.condition(%3) loc(#loc33)
      } do {
        %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc34)
        %3 = cir.cast(bitcast, %2 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc34)
        cir.call @_ZdlPv(%3) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc35)
        cir.break loc(#loc36)
      } loc(#loc136)
    } loc(#loc136)
    cir.return loc(#loc8)
  } loc(#loc125)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc137)
  cir.func internal private @_ZN66CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc139)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc43)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc140)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc47)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc47)
        cir.condition(%3) loc(#loc47)
      } do {
        %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc48)
        %3 = cir.const #cir.int<100> : !s32i loc(#loc49)
        %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc49)
        %5 = cir.const #cir.int<4> : !u64i loc(#loc142)
        %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc143)
        %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc48)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc144)
        cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc145)
        cir.scope {
          %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc56)
          %10 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc57)
          %11 = cir.cmp(eq, %9, %10) : !cir.ptr<!s32i>, !cir.bool loc(#loc147)
          cir.if %11 {
            %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc59)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc60)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc61)
            cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc59)
          } loc(#loc148)
        } loc(#loc146)
        cir.break loc(#loc62)
      } loc(#loc141)
    } loc(#loc141)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc65)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc65)
        cir.condition(%3) loc(#loc65)
      } do {
        %2 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc66)
        %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc67)
        %4 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc67)
        cir.call @free(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc66)
        cir.break loc(#loc68)
      } loc(#loc149)
    } loc(#loc149)
    cir.return loc(#loc40)
  } loc(#loc138)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc150)
  cir.func internal private @_ZN66CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc152)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc75)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc153)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc79)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc79)
        cir.condition(%3) loc(#loc79)
      } do {
        %2 = cir.const #cir.int<4> : !u64i loc(#loc155)
        %3 = cir.call @_Znwm(%2) : (!u64i) -> !cir.ptr<!void> loc(#loc82)
        %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc155)
        cir.store %4, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc156)
        cir.break loc(#loc84)
      } loc(#loc154)
    } loc(#loc154)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc87)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc87)
        cir.condition(%3) loc(#loc87)
      } do {
        %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc88)
        %3 = cir.cast(bitcast, %2 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc88)
        cir.call @_ZdlPv(%3) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc82)
        cir.break loc(#loc89)
      } loc(#loc157)
    } loc(#loc157)
    cir.return loc(#loc72)
  } loc(#loc151)
  cir.func @_ZN66CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_164goodEv() extra(#fn_attr1) {
    cir.call @_ZN66CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16L7goodB2GEv() : () -> () loc(#loc92)
    cir.call @_ZN66CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16L7goodG2BEv() : () -> () loc(#loc93)
    cir.return loc(#loc91)
  } loc(#loc158)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc159)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc160)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc161)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc100)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc101)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc102)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc103)
  cir.func @main(%arg0: !s32i loc(fused[#loc106, #loc107]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc108, #loc109])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc163)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc164)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc105)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc110)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc110)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc111)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc112)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc112)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc113)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc100)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    cir.call @_ZN66CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_164goodEv() : () -> () loc(#loc115)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc101)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc101)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc116)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc102)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc102)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    cir.call @_ZN66CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_163badEv() : () -> () loc(#loc118)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc103)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc103)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc120)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc165)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc165)
    cir.return %15 : !s32i loc(#loc165)
  } loc(#loc162)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s03/CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc6 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":24:1)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":43:1)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":26:5)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":26:11)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":28:12)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":28:5)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":29:5)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":35:5)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":29:11)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":32:23)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":32:30)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":32:34)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":32:44)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":32:45)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":32:9)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":33:9)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":33:37)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":33:13)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":33:21)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":33:27)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":33:28)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":33:34)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":33:33)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":34:9)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":36:5)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":42:5)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":36:11)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":40:16)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":24:6)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":41:9)
#loc37 = loc("/usr/include/stdlib.h":687:1)
#loc38 = loc("/usr/include/stdlib.h":687:32)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":50:1)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":68:1)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":52:5)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":52:11)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":54:12)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":54:5)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":55:5)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":61:5)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":55:11)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":58:23)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":58:30)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":58:34)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":58:44)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":58:45)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":58:9)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":59:9)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":59:37)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":59:13)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":59:21)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":59:27)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":59:28)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":59:34)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":59:33)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":60:9)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":62:5)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":67:5)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":62:11)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":65:9)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":65:14)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":66:9)
#loc69 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc70 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":71:1)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":89:1)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":73:5)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":73:11)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":75:12)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":75:5)
#loc77 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":76:5)
#loc78 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":81:5)
#loc79 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":76:11)
#loc80 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":79:16)
#loc81 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":79:20)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":71:13)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":79:9)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":80:9)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":82:5)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":88:5)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":82:11)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":86:16)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":87:9)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":91:1)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":95:1)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":93:5)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":94:5)
#loc94 = loc("/usr/include/stdlib.h":575:1)
#loc95 = loc("/usr/include/stdlib.h":575:41)
#loc96 = loc("/usr/include/time.h":76:1)
#loc97 = loc("/usr/include/time.h":76:38)
#loc98 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc99 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc100 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":115:15)
#loc101 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":117:15)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":120:15)
#loc103 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":122:15)
#loc104 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":110:1)
#loc105 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":125:1)
#loc110 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":111:1)
#loc111 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":113:27)
#loc112 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":113:22)
#loc113 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":113:5)
#loc114 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":115:5)
#loc115 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":116:5)
#loc116 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":117:5)
#loc117 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":120:5)
#loc118 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":121:5)
#loc119 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":122:5)
#loc120 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":124:12)
#loc121 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_int_malloc_16.cpp":124:5)
#loc122 = loc(fused[#loc1, #loc2])
#loc123 = loc(fused[#loc3, #loc4])
#loc124 = loc(fused[#loc5, #loc6])
#loc125 = loc(fused[#loc7, #loc8])
#loc126 = loc(fused[#loc9, #loc10])
#loc127 = loc(fused[#loc12, #loc11])
#loc128 = loc(fused[#loc13, #loc14])
#loc129 = loc(fused[#loc18, #loc19])
#loc130 = loc(fused[#loc17, #loc19])
#loc131 = loc(fused[#loc16, #loc20])
#loc132 = loc(fused[#loc21, #loc20])
#loc133 = loc(fused[#loc22, #loc23])
#loc134 = loc(fused[#loc24, #loc25])
#loc135 = loc(fused[#loc26, #loc23])
#loc136 = loc(fused[#loc31, #loc32])
#loc137 = loc(fused[#loc37, #loc38])
#loc138 = loc(fused[#loc39, #loc40])
#loc139 = loc(fused[#loc41, #loc42])
#loc140 = loc(fused[#loc44, #loc43])
#loc141 = loc(fused[#loc45, #loc46])
#loc142 = loc(fused[#loc50, #loc51])
#loc143 = loc(fused[#loc49, #loc51])
#loc144 = loc(fused[#loc48, #loc52])
#loc145 = loc(fused[#loc53, #loc52])
#loc146 = loc(fused[#loc54, #loc55])
#loc147 = loc(fused[#loc56, #loc57])
#loc148 = loc(fused[#loc58, #loc55])
#loc149 = loc(fused[#loc63, #loc64])
#loc150 = loc(fused[#loc69, #loc70])
#loc151 = loc(fused[#loc71, #loc72])
#loc152 = loc(fused[#loc73, #loc74])
#loc153 = loc(fused[#loc76, #loc75])
#loc154 = loc(fused[#loc77, #loc78])
#loc155 = loc(fused[#loc80, #loc81])
#loc156 = loc(fused[#loc83, #loc81])
#loc157 = loc(fused[#loc85, #loc86])
#loc158 = loc(fused[#loc90, #loc91])
#loc159 = loc(fused[#loc94, #loc95])
#loc160 = loc(fused[#loc96, #loc97])
#loc161 = loc(fused[#loc98, #loc99])
#loc162 = loc(fused[#loc104, #loc105])
#loc165 = loc(fused[#loc121, #loc120])
