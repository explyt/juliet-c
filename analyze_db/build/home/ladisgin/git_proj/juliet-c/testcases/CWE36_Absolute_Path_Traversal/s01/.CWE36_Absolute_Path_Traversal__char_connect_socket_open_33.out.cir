!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc231 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":193:10)
#loc232 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":193:14)
#loc233 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":193:20)
#loc234 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":193:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc339 = loc(fused[#loc231, #loc232])
#loc340 = loc(fused[#loc233, #loc234])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s01/CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc247)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc248)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc249)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc250)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc251)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc252)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc253)
  cir.func private @close(!s32i) -> !s32i loc(#loc254)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc255)
  cir.func @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc257)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc258)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc259)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc25)
    %3 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc259)
    cir.store %3, %2 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc259)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc28)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc260)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc262)
      %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc263)
      %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc264)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc265)
      %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc266)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc39)
      %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc39)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc265)
      %12 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc42)
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
      %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc42)
      cir.store %14, %9 : !u64i, !cir.ptr<!u64i> loc(#loc266)
      cir.scope {
        cir.do {
          %15 = cir.const #cir.int<2> : !s32i loc(#loc46)
          %16 = cir.const #cir.int<1> : !u32i loc(#loc47)
          %17 = cir.cast(integral, %16 : !u32i), !s32i loc(#loc47)
          %18 = cir.const #cir.int<6> : !u32i loc(#loc48)
          %19 = cir.cast(integral, %18 : !u32i), !s32i loc(#loc48)
          %20 = cir.call @socket(%15, %17, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc49)
          cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc268)
          cir.scope {
            %70 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc54)
            %71 = cir.const #cir.int<1> : !s32i loc(#loc55)
            %72 = cir.unary(minus, %71) : !s32i, !s32i loc(#loc55)
            %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc270)
            cir.if %73 {
              cir.break loc(#loc57)
            } loc(#loc271)
          } loc(#loc269)
          %21 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc272)
          %22 = cir.const #cir.int<0> : !s32i loc(#loc60)
          %23 = cir.const #cir.int<16> : !u64i loc(#loc273)
          cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc274)
          %24 = cir.const #cir.int<2> : !s32i loc(#loc65)
          %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc65)
          %26 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
          cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc275)
          %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
          %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
          %29 = cir.call @inet_addr(%28) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc68)
          %30 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc69)
          %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc70)
          cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc276)
          %32 = cir.const #cir.int<27015> : !s32i loc(#loc73)
          %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc73)
          %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc74)
          %35 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
          cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc277)
          cir.scope {
            %70 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc80)
            %71 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc279)
            %72 = cir.const #cir.int<16> : !u64i loc(#loc280)
            %73 = cir.cast(integral, %72 : !u64i), !u32i loc(#loc280)
            %74 = cir.call @connect(%70, %71, %73) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc85)
            %75 = cir.const #cir.int<1> : !s32i loc(#loc86)
            %76 = cir.unary(minus, %75) : !s32i, !s32i loc(#loc86)
            %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc281)
            cir.if %77 {
              cir.break loc(#loc88)
            } loc(#loc282)
          } loc(#loc278)
          %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc89)
          %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
          %38 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc91)
          %39 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc92)
          %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc283)
          %41 = cir.const #cir.int<1> : !u64i loc(#loc284)
          %42 = cir.const #cir.int<4096> : !s32i loc(#loc97)
          %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc97)
          %44 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc98)
          %45 = cir.binop(sub, %43, %44) : !u64i loc(#loc285)
          %46 = cir.const #cir.int<1> : !s32i loc(#loc99)
          %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc99)
          %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc286)
          %49 = cir.binop(mul, %41, %48) : !u64i loc(#loc287)
          %50 = cir.const #cir.int<0> : !s32i loc(#loc101)
          %51 = cir.call @recv(%36, %40, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc102)
          %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc102)
          cir.store %52, %5 : !s32i, !cir.ptr<!s32i> loc(#loc288)
          cir.scope {
            %70 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc107)
            %71 = cir.const #cir.int<1> : !s32i loc(#loc108)
            %72 = cir.unary(minus, %71) : !s32i, !s32i loc(#loc108)
            %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc290)
            %74 = cir.ternary(%73, true {
              %75 = cir.const #true loc(#loc109)
              cir.yield %75 : !cir.bool loc(#loc109)
            }, false {
              %75 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc110)
              %76 = cir.const #cir.int<0> : !s32i loc(#loc111)
              %77 = cir.cmp(eq, %75, %76) : !s32i, !cir.bool loc(#loc291)
              %78 = cir.ternary(%77, true {
                %79 = cir.const #true loc(#loc109)
                cir.yield %79 : !cir.bool loc(#loc109)
              }, false {
                %79 = cir.const #false loc(#loc109)
                cir.yield %79 : !cir.bool loc(#loc109)
              }) : (!cir.bool) -> !cir.bool loc(#loc109)
              cir.yield %78 : !cir.bool loc(#loc109)
            }) : (!cir.bool) -> !cir.bool loc(#loc109)
            cir.if %74 {
              cir.break loc(#loc113)
            } loc(#loc292)
          } loc(#loc289)
          %53 = cir.const #cir.int<0> : !s8i loc(#loc114)
          %54 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
          %55 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc116)
          %56 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc117)
          %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc117)
          %58 = cir.const #cir.int<1> : !u64i loc(#loc293)
          %59 = cir.binop(div, %57, %58) : !u64i loc(#loc294)
          %60 = cir.binop(add, %55, %59) : !u64i loc(#loc295)
          %61 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %60 : !u64i), !cir.ptr<!s8i> loc(#loc120)
          cir.store %53, %61 : !s8i, !cir.ptr<!s8i> loc(#loc296)
          %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
          %63 = cir.const #cir.int<13> : !s8i loc(#loc122)
          %64 = cir.cast(integral, %63 : !s8i), !s32i loc(#loc122)
          %65 = cir.call @strchr(%62, %64) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc123)
          cir.store %65, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc297)
          cir.scope {
            %70 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
            %71 = cir.cast(ptr_to_bool, %70 : !cir.ptr<!s8i>), !cir.bool loc(#loc128)
            cir.if %71 {
              %72 = cir.const #cir.int<0> : !s8i loc(#loc130)
              %73 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
              cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc300)
            } loc(#loc299)
          } loc(#loc298)
          %66 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
          %67 = cir.const #cir.int<10> : !s8i loc(#loc134)
          %68 = cir.cast(integral, %67 : !s8i), !s32i loc(#loc134)
          %69 = cir.call @strchr(%66, %68) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc135)
          cir.store %69, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc301)
          cir.scope {
            %70 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
            %71 = cir.cast(ptr_to_bool, %70 : !cir.ptr<!s8i>), !cir.bool loc(#loc140)
            cir.if %71 {
              %72 = cir.const #cir.int<0> : !s8i loc(#loc142)
              %73 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
              cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc304)
            } loc(#loc303)
          } loc(#loc302)
          cir.yield loc(#loc45)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc145)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc145)
          cir.condition(%16) loc(#loc145)
        } loc(#loc267)
      } loc(#loc267)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc148)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc149)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc149)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc306)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc151)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc152)
        } loc(#loc307)
      } loc(#loc305)
    } loc(#loc261)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc309)
      %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc156)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc309)
      cir.scope {
        %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc311)
        %9 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
        %10 = cir.const #cir.int<2> : !s32i loc(#loc162)
        %11 = cir.const #cir.int<64> : !s32i loc(#loc163)
        %12 = cir.binop(or, %10, %11) : !s32i loc(#loc312)
        %13 = cir.const #cir.int<256> : !s32i loc(#loc164)
        %14 = cir.const #cir.int<128> : !s32i loc(#loc165)
        %15 = cir.binop(or, %13, %14) : !s32i loc(#loc313)
        %16 = cir.call @open(%9, %12, %15) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc166)
        cir.store %16, %8 : !s32i, !cir.ptr<!s32i> loc(#loc314)
        cir.scope {
          %17 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc171)
          %18 = cir.const #cir.int<1> : !s32i loc(#loc172)
          %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc173)
          %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc316)
          cir.if %20 {
            %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc175)
            %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc176)
          } loc(#loc317)
        } loc(#loc315)
      } loc(#loc310)
    } loc(#loc308)
    cir.return loc(#loc21)
  } loc(#loc256)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc318)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc179)
  cir.func internal private @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc320)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc321)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc322)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc185)
    %3 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc322)
    cir.store %3, %2 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc322)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc188)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc323)
    %5 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc190)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc191)
    %7 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc179)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc179)
    %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc190)
    cir.scope {
      %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc325)
      %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc195)
      %12 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc195)
      cir.store %12, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc325)
      cir.scope {
        %13 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc327)
        %14 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc200)
        %15 = cir.const #cir.int<2> : !s32i loc(#loc201)
        %16 = cir.const #cir.int<64> : !s32i loc(#loc202)
        %17 = cir.binop(or, %15, %16) : !s32i loc(#loc328)
        %18 = cir.const #cir.int<256> : !s32i loc(#loc203)
        %19 = cir.const #cir.int<128> : !s32i loc(#loc204)
        %20 = cir.binop(or, %18, %19) : !s32i loc(#loc329)
        %21 = cir.call @open(%14, %17, %20) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc205)
        cir.store %21, %13 : !s32i, !cir.ptr<!s32i> loc(#loc330)
        cir.scope {
          %22 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc210)
          %23 = cir.const #cir.int<1> : !s32i loc(#loc211)
          %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc212)
          %25 = cir.cmp(ne, %22, %24) : !s32i, !cir.bool loc(#loc332)
          cir.if %25 {
            %26 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc214)
            %27 = cir.call @close(%26) : (!s32i) -> !s32i loc(#loc215)
          } loc(#loc333)
        } loc(#loc331)
      } loc(#loc326)
    } loc(#loc324)
    cir.return loc(#loc181)
  } loc(#loc319)
  cir.func @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_33L7goodG2BEv() : () -> () loc(#loc218)
    cir.return loc(#loc217)
  } loc(#loc334)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc335)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc336)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc337)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc225)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc226)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc227)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc228)
  cir.func @main(%arg0: !s32i loc(fused[#loc231, #loc232]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc233, #loc234])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc339)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc340)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc230)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc235)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc235)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc236)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc237)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc237)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc238)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc225)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc225)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc239)
    cir.call @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_334goodEv() : () -> () loc(#loc240)
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc226)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc226)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc241)
    %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc227)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc227)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc242)
    cir.call @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_333badEv() : () -> () loc(#loc243)
    %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc228)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc228)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc244)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc245)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc341)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc341)
    cir.return %15 : !s32i loc(#loc341)
  } loc(#loc338)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s01/CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":90:49)
#loc8 = loc("/usr/include/netinet/in.h":404:1)
#loc9 = loc("/usr/include/netinet/in.h":405:40)
#loc10 = loc("/usr/include/sys/socket.h":126:1)
#loc11 = loc("/usr/include/sys/socket.h":126:75)
#loc12 = loc("/usr/include/sys/socket.h":145:1)
#loc13 = loc("/usr/include/sys/socket.h":145:68)
#loc14 = loc("/usr/include/string.h":226:1)
#loc15 = loc("/usr/include/string.h":227:50)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("/usr/include/fcntl.h":209:1)
#loc19 = loc("/usr/include/fcntl.h":209:56)
#loc20 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":57:1)
#loc21 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":142:1)
#loc22 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":59:5)
#loc23 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":59:12)
#loc24 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":60:5)
#loc25 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":60:23)
#loc26 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":61:5)
#loc27 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":61:37)
#loc28 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":62:12)
#loc29 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":62:5)
#loc30 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":63:5)
#loc31 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":129:5)
#loc32 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":68:9)
#loc33 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":68:13)
#loc34 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":69:9)
#loc35 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":69:28)
#loc36 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":70:9)
#loc37 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":70:15)
#loc38 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":71:9)
#loc39 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":71:32)
#loc40 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":72:9)
#loc41 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":72:37)
#loc42 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":72:26)
#loc43 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":72:33)
#loc44 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":73:9)
#loc45 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":118:17)
#loc46 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":83:36)
#loc47 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":83:45)
#loc48 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":83:58)
#loc49 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":83:29)
#loc50 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":83:13)
#loc51 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":83:69)
#loc52 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":84:13)
#loc53 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":87:13)
#loc54 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":84:17)
#loc55 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":84:34)
#loc56 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":85:13)
#loc57 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":86:17)
#loc58 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":88:20)
#loc59 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":88:21)
#loc60 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":88:30)
#loc61 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":88:33)
#loc62 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":88:47)
#loc63 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":88:13)
#loc64 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":88:48)
#loc65 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":89:34)
#loc66 = loc("/usr/include/netinet/in.h":249:5)
#loc67 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":89:13)
#loc68 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":90:39)
#loc69 = loc("/usr/include/netinet/in.h":251:20)
#loc70 = loc("/usr/include/netinet/in.h":33:15)
#loc71 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":90:13)
#loc72 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":90:59)
#loc73 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":91:38)
#loc74 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":91:32)
#loc75 = loc("/usr/include/netinet/in.h":250:15)
#loc76 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":91:13)
#loc77 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":91:46)
#loc78 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":92:13)
#loc79 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":95:13)
#loc80 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":92:25)
#loc81 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":92:58)
#loc82 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":92:59)
#loc83 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":92:68)
#loc84 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":92:82)
#loc85 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":92:17)
#loc86 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":92:88)
#loc87 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":93:13)
#loc88 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":94:17)
#loc89 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":99:31)
#loc90 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":99:55)
#loc91 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":99:62)
#loc92 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":99:60)
#loc93 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":99:46)
#loc94 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":99:69)
#loc95 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":99:72)
#loc96 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":99:83)
#loc97 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":99:88)
#loc98 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":99:103)
#loc99 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":99:113)
#loc100 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":99:114)
#loc101 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":99:117)
#loc102 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":99:26)
#loc103 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":99:13)
#loc104 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":99:118)
#loc105 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":100:13)
#loc106 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":103:13)
#loc107 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":100:17)
#loc108 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":100:31)
#loc109 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":100:44)
#loc110 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":100:47)
#loc111 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":100:61)
#loc112 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":101:13)
#loc113 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":102:17)
#loc114 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":105:57)
#loc115 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":105:13)
#loc116 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":105:18)
#loc117 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":105:28)
#loc118 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":105:41)
#loc119 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":105:52)
#loc120 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":105:53)
#loc121 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":107:30)
#loc122 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":107:36)
#loc123 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":107:23)
#loc124 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":107:13)
#loc125 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":107:40)
#loc126 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":108:13)
#loc127 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":111:13)
#loc128 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":108:17)
#loc129 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":109:13)
#loc130 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":110:28)
#loc131 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":110:18)
#loc132 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":110:17)
#loc133 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":112:30)
#loc134 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":112:36)
#loc135 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":112:23)
#loc136 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":112:13)
#loc137 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":112:40)
#loc138 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":113:13)
#loc139 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":116:13)
#loc140 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":113:17)
#loc141 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":114:13)
#loc142 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":115:28)
#loc143 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":115:18)
#loc144 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":115:17)
#loc145 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":118:16)
#loc146 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":119:9)
#loc147 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":122:9)
#loc148 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":119:13)
#loc149 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":119:30)
#loc150 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":120:9)
#loc151 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":121:26)
#loc152 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":121:13)
#loc153 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":130:5)
#loc154 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":141:5)
#loc155 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":131:9)
#loc156 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":131:23)
#loc157 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":132:9)
#loc158 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":140:9)
#loc159 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":133:13)
#loc160 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":133:17)
#loc161 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":135:29)
#loc162 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":135:35)
#loc163 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":135:42)
#loc164 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":135:51)
#loc165 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":135:59)
#loc166 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":135:24)
#loc167 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":135:13)
#loc168 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":135:67)
#loc169 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":136:13)
#loc170 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":139:13)
#loc171 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":136:17)
#loc172 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":136:30)
#loc173 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":136:29)
#loc174 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":137:13)
#loc175 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":138:23)
#loc176 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":138:17)
#loc177 = loc("/usr/include/string.h":149:1)
#loc178 = loc("/usr/include/string.h":150:14)
#loc179 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":160:18)
#loc180 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":149:1)
#loc181 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":174:1)
#loc182 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":151:5)
#loc183 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":151:12)
#loc184 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":152:5)
#loc185 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":152:23)
#loc186 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":153:5)
#loc187 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":153:37)
#loc188 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":154:12)
#loc189 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":154:5)
#loc190 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":160:5)
#loc191 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":160:12)
#loc192 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":162:5)
#loc193 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":173:5)
#loc194 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":163:9)
#loc195 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":163:23)
#loc196 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":164:9)
#loc197 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":172:9)
#loc198 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":165:13)
#loc199 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":165:17)
#loc200 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":167:29)
#loc201 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":167:35)
#loc202 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":167:42)
#loc203 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":167:51)
#loc204 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":167:59)
#loc205 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":167:24)
#loc206 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":167:13)
#loc207 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":167:67)
#loc208 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":168:13)
#loc209 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":171:13)
#loc210 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":168:17)
#loc211 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":168:30)
#loc212 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":168:29)
#loc213 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":169:13)
#loc214 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":170:23)
#loc215 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":170:17)
#loc216 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":176:1)
#loc217 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":179:1)
#loc218 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":178:5)
#loc219 = loc("/usr/include/stdlib.h":575:1)
#loc220 = loc("/usr/include/stdlib.h":575:41)
#loc221 = loc("/usr/include/time.h":76:1)
#loc222 = loc("/usr/include/time.h":76:38)
#loc223 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc224 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc225 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":198:15)
#loc226 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":200:15)
#loc227 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":203:15)
#loc228 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":205:15)
#loc229 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":193:1)
#loc230 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":208:1)
#loc235 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":194:1)
#loc236 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":196:27)
#loc237 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":196:22)
#loc238 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":196:5)
#loc239 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":198:5)
#loc240 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":199:5)
#loc241 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":200:5)
#loc242 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":203:5)
#loc243 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":204:5)
#loc244 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":205:5)
#loc245 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":207:12)
#loc246 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_33.cpp":207:5)
#loc247 = loc(fused[#loc1, #loc2])
#loc248 = loc(fused[#loc3, #loc4])
#loc249 = loc(fused[#loc5, #loc6])
#loc250 = loc(fused[#loc8, #loc9])
#loc251 = loc(fused[#loc10, #loc11])
#loc252 = loc(fused[#loc12, #loc13])
#loc253 = loc(fused[#loc14, #loc15])
#loc254 = loc(fused[#loc16, #loc17])
#loc255 = loc(fused[#loc18, #loc19])
#loc256 = loc(fused[#loc20, #loc21])
#loc257 = loc(fused[#loc22, #loc23])
#loc258 = loc(fused[#loc24, #loc25])
#loc259 = loc(fused[#loc26, #loc27])
#loc260 = loc(fused[#loc29, #loc28])
#loc261 = loc(fused[#loc30, #loc31])
#loc262 = loc(fused[#loc32, #loc33])
#loc263 = loc(fused[#loc34, #loc35])
#loc264 = loc(fused[#loc36, #loc37])
#loc265 = loc(fused[#loc38, #loc39])
#loc266 = loc(fused[#loc40, #loc41])
#loc267 = loc(fused[#loc44, #loc45])
#loc268 = loc(fused[#loc50, #loc51])
#loc269 = loc(fused[#loc52, #loc53])
#loc270 = loc(fused[#loc54, #loc55])
#loc271 = loc(fused[#loc56, #loc53])
#loc272 = loc(fused[#loc58, #loc59])
#loc273 = loc(fused[#loc61, #loc62])
#loc274 = loc(fused[#loc63, #loc64])
#loc275 = loc(fused[#loc67, #loc65])
#loc276 = loc(fused[#loc71, #loc72])
#loc277 = loc(fused[#loc76, #loc77])
#loc278 = loc(fused[#loc78, #loc79])
#loc279 = loc(fused[#loc81, #loc82])
#loc280 = loc(fused[#loc83, #loc84])
#loc281 = loc(fused[#loc85, #loc86])
#loc282 = loc(fused[#loc87, #loc79])
#loc283 = loc(fused[#loc93, #loc94])
#loc284 = loc(fused[#loc95, #loc96])
#loc285 = loc(fused[#loc97, #loc98])
#loc286 = loc(fused[#loc97, #loc99])
#loc287 = loc(fused[#loc95, #loc100])
#loc288 = loc(fused[#loc103, #loc104])
#loc289 = loc(fused[#loc105, #loc106])
#loc290 = loc(fused[#loc107, #loc108])
#loc291 = loc(fused[#loc110, #loc111])
#loc292 = loc(fused[#loc112, #loc106])
#loc293 = loc(fused[#loc118, #loc119])
#loc294 = loc(fused[#loc117, #loc119])
#loc295 = loc(fused[#loc116, #loc119])
#loc296 = loc(fused[#loc115, #loc114])
#loc297 = loc(fused[#loc124, #loc125])
#loc298 = loc(fused[#loc126, #loc127])
#loc299 = loc(fused[#loc129, #loc127])
#loc300 = loc(fused[#loc132, #loc130])
#loc301 = loc(fused[#loc136, #loc137])
#loc302 = loc(fused[#loc138, #loc139])
#loc303 = loc(fused[#loc141, #loc139])
#loc304 = loc(fused[#loc144, #loc142])
#loc305 = loc(fused[#loc146, #loc147])
#loc306 = loc(fused[#loc148, #loc149])
#loc307 = loc(fused[#loc150, #loc147])
#loc308 = loc(fused[#loc153, #loc154])
#loc309 = loc(fused[#loc155, #loc156])
#loc310 = loc(fused[#loc157, #loc158])
#loc311 = loc(fused[#loc159, #loc160])
#loc312 = loc(fused[#loc162, #loc163])
#loc313 = loc(fused[#loc164, #loc165])
#loc314 = loc(fused[#loc167, #loc168])
#loc315 = loc(fused[#loc169, #loc170])
#loc316 = loc(fused[#loc171, #loc172])
#loc317 = loc(fused[#loc174, #loc170])
#loc318 = loc(fused[#loc177, #loc178])
#loc319 = loc(fused[#loc180, #loc181])
#loc320 = loc(fused[#loc182, #loc183])
#loc321 = loc(fused[#loc184, #loc185])
#loc322 = loc(fused[#loc186, #loc187])
#loc323 = loc(fused[#loc189, #loc188])
#loc324 = loc(fused[#loc192, #loc193])
#loc325 = loc(fused[#loc194, #loc195])
#loc326 = loc(fused[#loc196, #loc197])
#loc327 = loc(fused[#loc198, #loc199])
#loc328 = loc(fused[#loc201, #loc202])
#loc329 = loc(fused[#loc203, #loc204])
#loc330 = loc(fused[#loc206, #loc207])
#loc331 = loc(fused[#loc208, #loc209])
#loc332 = loc(fused[#loc210, #loc211])
#loc333 = loc(fused[#loc213, #loc209])
#loc334 = loc(fused[#loc216, #loc217])
#loc335 = loc(fused[#loc219, #loc220])
#loc336 = loc(fused[#loc221, #loc222])
#loc337 = loc(fused[#loc223, #loc224])
#loc338 = loc(fused[#loc229, #loc230])
#loc341 = loc(fused[#loc246, #loc245])
