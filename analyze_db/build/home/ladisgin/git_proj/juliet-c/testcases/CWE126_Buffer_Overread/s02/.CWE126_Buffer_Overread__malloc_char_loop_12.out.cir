!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc134 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":120:10)
#loc135 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":120:14)
#loc136 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":120:20)
#loc137 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":120:32)
#loc308 = loc(fused[#loc134, #loc135])
#loc309 = loc(fused[#loc136, #loc137])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_loop_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc259)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc260)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc261)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc262)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc263)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc264)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_loop_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc266)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc17)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc267)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc269)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc269)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc21)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc21)
      cir.if %5 {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc26)
        %7 = cir.const #cir.int<50> : !s32i loc(#loc27)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc27)
        %9 = cir.const #cir.int<1> : !u64i loc(#loc271)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc272)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc26)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc273)
        cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc274)
        cir.scope {
          %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
          %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc35)
          %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc35)
          %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc276)
          cir.if %30 {
            %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc37)
            %32 = cir.const #cir.int<1> : !s32i loc(#loc38)
            %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc39)
            cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc37)
          } loc(#loc277)
        } loc(#loc275)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc40)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc41)
        %16 = cir.const #cir.int<50> : !s32i loc(#loc42)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc43)
        %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc42)
        %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc42)
        cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc278)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc46)
        %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc46)
        %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
        %23 = cir.const #cir.int<50> : !s32i loc(#loc48)
        %24 = cir.const #cir.int<1> : !s32i loc(#loc49)
        %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc48)
        %26 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc50)
        cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc279)
      } else {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc51)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc52)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc52)
        %9 = cir.const #cir.int<1> : !u64i loc(#loc280)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc281)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc51)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc282)
        cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc283)
        cir.scope {
          %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
          %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc60)
          %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc60)
          %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc285)
          cir.if %30 {
            %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc62)
            %32 = cir.const #cir.int<1> : !s32i loc(#loc63)
            %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc64)
            cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc62)
          } loc(#loc286)
        } loc(#loc284)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc65)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc66)
        %16 = cir.const #cir.int<100> : !s32i loc(#loc67)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc68)
        %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc67)
        %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc67)
        cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc287)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc71)
        %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc71)
        %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
        %23 = cir.const #cir.int<100> : !s32i loc(#loc73)
        %24 = cir.const #cir.int<1> : !s32i loc(#loc74)
        %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc73)
        %26 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc75)
        cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc288)
      } loc(#loc270)
    } loc(#loc268)
    cir.scope {
      %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc290)
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc291)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc292)
      %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc83)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc83)
      %7 = cir.const #cir.int<67> : !s32i loc(#loc84)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc85)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc86)
      %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc85)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc85)
      cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc293)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc89)
      %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc89)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc90)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc91)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc90)
      %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc92)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc92)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc294)
      %19 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc93)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc94)
      %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc93)
      cir.store %21, %3 : !u64i, !cir.ptr<!u64i> loc(#loc295)
      cir.scope {
        %33 = cir.const #cir.int<0> : !s32i loc(#loc99)
        %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc99)
        cir.store %34, %2 : !u64i, !cir.ptr<!u64i> loc(#loc297)
        cir.for : cond {
          %35 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc101)
          %36 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc102)
          %37 = cir.cmp(lt, %35, %36) : !u64i, !cir.bool loc(#loc298)
          cir.condition(%37) loc(#loc103)
        } body {
          cir.scope {
            %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
            %36 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc106)
            %37 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %36 : !u64i), !cir.ptr<!s8i> loc(#loc107)
            %38 = cir.load %37 : !cir.ptr<!s8i>, !s8i loc(#loc105)
            %39 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc108)
            %40 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc109)
            %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc109)
            cir.store %38, %41 : !s8i, !cir.ptr<!s8i> loc(#loc300)
          } loc(#loc299)
          cir.yield loc(#loc98)
        } step {
          %35 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc110)
          %36 = cir.unary(inc, %35) : !u64i, !u64i loc(#loc111)
          cir.store %36, %2 : !u64i, !cir.ptr<!u64i> loc(#loc301)
          cir.yield loc(#loc296)
        } loc(#loc296)
      } loc(#loc296)
      %22 = cir.const #cir.int<0> : !s32i loc(#loc112)
      %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc112)
      %24 = cir.const #cir.int<100> : !s32i loc(#loc113)
      %25 = cir.const #cir.int<1> : !s32i loc(#loc114)
      %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc113)
      %27 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc115)
      %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc115)
      cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc302)
      %29 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc116)
      cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc117)
      %30 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc118)
      %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
      %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc119)
      cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc118)
    } loc(#loc289)
    cir.return loc(#loc14)
  } loc(#loc265)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_loop_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc304)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc122)
    cir.return loc(#loc121)
  } loc(#loc303)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc305)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc306)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc128)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc129)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc130)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc131)
  cir.func @main(%arg0: !s32i loc(fused[#loc134, #loc135]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc136, #loc137])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc308)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc309)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc133)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc138)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc139)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc140)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc140)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc141)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc128)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc128)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc142)
    %8 = cir.get_global @CWE126_Buffer_Overread__malloc_char_loop_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc310)
    cir.call @CWE126_Buffer_Overread__malloc_char_loop_12_good() : () -> () loc(#loc143)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc129)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc129)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc145)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc130)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc130)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc146)
    %13 = cir.get_global @CWE126_Buffer_Overread__malloc_char_loop_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc311)
    cir.call @CWE126_Buffer_Overread__malloc_char_loop_12_bad() : () -> () loc(#loc147)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc131)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc131)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc149)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc150)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc312)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc312)
    cir.return %17 : !s32i loc(#loc312)
  } loc(#loc307)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc314)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc156)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc315)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc317)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc317)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc160)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc160)
      cir.if %5 {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc165)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc166)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc166)
        %9 = cir.const #cir.int<1> : !u64i loc(#loc319)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc320)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc165)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc321)
        cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc322)
        cir.scope {
          %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc173)
          %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc174)
          %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc174)
          %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc324)
          cir.if %30 {
            %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc176)
            %32 = cir.const #cir.int<1> : !s32i loc(#loc177)
            %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc178)
            cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc176)
          } loc(#loc325)
        } loc(#loc323)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc179)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc180)
        %16 = cir.const #cir.int<100> : !s32i loc(#loc181)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc182)
        %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc181)
        %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc181)
        cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc326)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc185)
        %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc185)
        %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc186)
        %23 = cir.const #cir.int<100> : !s32i loc(#loc187)
        %24 = cir.const #cir.int<1> : !s32i loc(#loc188)
        %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc187)
        %26 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc189)
        cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc327)
      } else {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc190)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc191)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc191)
        %9 = cir.const #cir.int<1> : !u64i loc(#loc328)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc329)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc190)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc330)
        cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc331)
        cir.scope {
          %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc198)
          %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc199)
          %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc199)
          %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc333)
          cir.if %30 {
            %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc201)
            %32 = cir.const #cir.int<1> : !s32i loc(#loc202)
            %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc203)
            cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc201)
          } loc(#loc334)
        } loc(#loc332)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc204)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc204)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc205)
        %16 = cir.const #cir.int<100> : !s32i loc(#loc206)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc207)
        %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc206)
        %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc206)
        cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc335)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc210)
        %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc210)
        %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc211)
        %23 = cir.const #cir.int<100> : !s32i loc(#loc212)
        %24 = cir.const #cir.int<1> : !s32i loc(#loc213)
        %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc212)
        %26 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc214)
        cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc336)
      } loc(#loc318)
    } loc(#loc316)
    cir.scope {
      %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc338)
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc339)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc340)
      %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc222)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc222)
      %7 = cir.const #cir.int<67> : !s32i loc(#loc223)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc224)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc225)
      %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc224)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc224)
      cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc341)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc228)
      %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc228)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc229)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc230)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc229)
      %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc231)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc231)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc342)
      %19 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc232)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc233)
      %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc232)
      cir.store %21, %3 : !u64i, !cir.ptr<!u64i> loc(#loc343)
      cir.scope {
        %33 = cir.const #cir.int<0> : !s32i loc(#loc238)
        %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc238)
        cir.store %34, %2 : !u64i, !cir.ptr<!u64i> loc(#loc345)
        cir.for : cond {
          %35 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc240)
          %36 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc241)
          %37 = cir.cmp(lt, %35, %36) : !u64i, !cir.bool loc(#loc346)
          cir.condition(%37) loc(#loc242)
        } body {
          cir.scope {
            %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc244)
            %36 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc245)
            %37 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %36 : !u64i), !cir.ptr<!s8i> loc(#loc246)
            %38 = cir.load %37 : !cir.ptr<!s8i>, !s8i loc(#loc244)
            %39 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc247)
            %40 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc248)
            %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc248)
            cir.store %38, %41 : !s8i, !cir.ptr<!s8i> loc(#loc348)
          } loc(#loc347)
          cir.yield loc(#loc237)
        } step {
          %35 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc249)
          %36 = cir.unary(inc, %35) : !u64i, !u64i loc(#loc250)
          cir.store %36, %2 : !u64i, !cir.ptr<!u64i> loc(#loc349)
          cir.yield loc(#loc344)
        } loc(#loc344)
      } loc(#loc344)
      %22 = cir.const #cir.int<0> : !s32i loc(#loc251)
      %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc251)
      %24 = cir.const #cir.int<100> : !s32i loc(#loc252)
      %25 = cir.const #cir.int<1> : !s32i loc(#loc253)
      %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc252)
      %27 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc254)
      %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc254)
      cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc350)
      %29 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc255)
      cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc256)
      %30 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc257)
      %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc258)
      %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc258)
      cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc257)
    } loc(#loc337)
    cir.return loc(#loc153)
  } loc(#loc313)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_loop_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("/usr/include/stdlib.h":687:1)
#loc12 = loc("/usr/include/stdlib.h":687:32)
#loc13 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":23:1)
#loc14 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":59:1)
#loc15 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":25:5)
#loc16 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":25:12)
#loc17 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":26:12)
#loc18 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":26:5)
#loc19 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":27:5)
#loc20 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":42:5)
#loc21 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":27:8)
#loc22 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":27:33)
#loc23 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":28:5)
#loc24 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":34:5)
#loc25 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":36:5)
#loc26 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":30:24)
#loc27 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":30:31)
#loc28 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":30:34)
#loc29 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":30:45)
#loc30 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":30:46)
#loc31 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":30:9)
#loc32 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":31:9)
#loc33 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":31:37)
#loc34 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":31:13)
#loc35 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":31:21)
#loc36 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":31:27)
#loc37 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":31:28)
#loc38 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":31:34)
#loc39 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":31:33)
#loc40 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":32:16)
#loc41 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":32:22)
#loc42 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":32:27)
#loc43 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":32:30)
#loc44 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":32:9)
#loc45 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":32:31)
#loc46 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":33:22)
#loc47 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":33:9)
#loc48 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":33:14)
#loc49 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":33:17)
#loc50 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":33:18)
#loc51 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":38:24)
#loc52 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":38:31)
#loc53 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":38:35)
#loc54 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":38:46)
#loc55 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":38:47)
#loc56 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":38:9)
#loc57 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":39:9)
#loc58 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":39:37)
#loc59 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":39:13)
#loc60 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":39:21)
#loc61 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":39:27)
#loc62 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":39:28)
#loc63 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":39:34)
#loc64 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":39:33)
#loc65 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":40:16)
#loc66 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":40:22)
#loc67 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":40:27)
#loc68 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":40:31)
#loc69 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":40:9)
#loc70 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":40:32)
#loc71 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":41:23)
#loc72 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":41:9)
#loc73 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":41:14)
#loc74 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":41:18)
#loc75 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":41:19)
#loc76 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":43:5)
#loc77 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":58:5)
#loc78 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":44:9)
#loc79 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":44:16)
#loc80 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":44:19)
#loc81 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":45:9)
#loc82 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":45:22)
#loc83 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":46:16)
#loc84 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":46:22)
#loc85 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":46:27)
#loc86 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":46:31)
#loc87 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":46:9)
#loc88 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":46:32)
#loc89 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":47:23)
#loc90 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":47:14)
#loc91 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":47:18)
#loc92 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":47:9)
#loc93 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":48:19)
#loc94 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":48:26)
#loc95 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":48:9)
#loc96 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":48:30)
#loc97 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":51:9)
#loc98 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":54:9)
#loc99 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":51:18)
#loc100 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":51:14)
#loc101 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":51:21)
#loc102 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":51:25)
#loc103 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":51:23)
#loc104 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":52:9)
#loc105 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":53:23)
#loc106 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":53:28)
#loc107 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":53:29)
#loc108 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":53:18)
#loc109 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":53:13)
#loc110 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":51:35)
#loc111 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":51:34)
#loc112 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":55:23)
#loc113 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":55:14)
#loc114 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":55:18)
#loc115 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":55:9)
#loc116 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":56:19)
#loc117 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":56:9)
#loc118 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":57:9)
#loc119 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":57:14)
#loc120 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":105:1)
#loc121 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":108:1)
#loc122 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":107:5)
#loc123 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":107:13)
#loc124 = loc("/usr/include/stdlib.h":575:1)
#loc125 = loc("/usr/include/stdlib.h":575:41)
#loc126 = loc("/usr/include/time.h":76:1)
#loc127 = loc("/usr/include/time.h":76:38)
#loc128 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":125:15)
#loc129 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":127:15)
#loc130 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":130:15)
#loc131 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":132:15)
#loc132 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":120:1)
#loc133 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":135:1)
#loc138 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":121:1)
#loc139 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":123:27)
#loc140 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":123:22)
#loc141 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":123:5)
#loc142 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":125:5)
#loc143 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":126:5)
#loc144 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":126:54)
#loc145 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":127:5)
#loc146 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":130:5)
#loc147 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":131:5)
#loc148 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":131:53)
#loc149 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":132:5)
#loc150 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":134:12)
#loc151 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":134:5)
#loc152 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":67:1)
#loc153 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":103:1)
#loc154 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":69:5)
#loc155 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":69:12)
#loc156 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":70:12)
#loc157 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":70:5)
#loc158 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":71:5)
#loc159 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":86:5)
#loc160 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":71:8)
#loc161 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":71:33)
#loc162 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":72:5)
#loc163 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":78:5)
#loc164 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":80:5)
#loc165 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":74:24)
#loc166 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":74:31)
#loc167 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":74:35)
#loc168 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":74:46)
#loc169 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":74:47)
#loc170 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":74:9)
#loc171 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":75:9)
#loc172 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":75:37)
#loc173 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":75:13)
#loc174 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":75:21)
#loc175 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":75:27)
#loc176 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":75:28)
#loc177 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":75:34)
#loc178 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":75:33)
#loc179 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":76:16)
#loc180 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":76:22)
#loc181 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":76:27)
#loc182 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":76:31)
#loc183 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":76:9)
#loc184 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":76:32)
#loc185 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":77:23)
#loc186 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":77:9)
#loc187 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":77:14)
#loc188 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":77:18)
#loc189 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":77:19)
#loc190 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":82:24)
#loc191 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":82:31)
#loc192 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":82:35)
#loc193 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":82:46)
#loc194 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":82:47)
#loc195 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":82:9)
#loc196 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":83:9)
#loc197 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":83:37)
#loc198 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":83:13)
#loc199 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":83:21)
#loc200 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":83:27)
#loc201 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":83:28)
#loc202 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":83:34)
#loc203 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":83:33)
#loc204 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":84:16)
#loc205 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":84:22)
#loc206 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":84:27)
#loc207 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":84:31)
#loc208 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":84:9)
#loc209 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":84:32)
#loc210 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":85:23)
#loc211 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":85:9)
#loc212 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":85:14)
#loc213 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":85:18)
#loc214 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":85:19)
#loc215 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":87:5)
#loc216 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":102:5)
#loc217 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":88:9)
#loc218 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":88:16)
#loc219 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":88:19)
#loc220 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":89:9)
#loc221 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":89:22)
#loc222 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":90:16)
#loc223 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":90:22)
#loc224 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":90:27)
#loc225 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":90:31)
#loc226 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":90:9)
#loc227 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":90:32)
#loc228 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":91:23)
#loc229 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":91:14)
#loc230 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":91:18)
#loc231 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":91:9)
#loc232 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":92:19)
#loc233 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":92:26)
#loc234 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":92:9)
#loc235 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":92:30)
#loc236 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":95:9)
#loc237 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":98:9)
#loc238 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":95:18)
#loc239 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":95:14)
#loc240 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":95:21)
#loc241 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":95:25)
#loc242 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":95:23)
#loc243 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":96:9)
#loc244 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":97:23)
#loc245 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":97:28)
#loc246 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":97:29)
#loc247 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":97:18)
#loc248 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":97:13)
#loc249 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":95:35)
#loc250 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":95:34)
#loc251 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":99:23)
#loc252 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":99:14)
#loc253 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":99:18)
#loc254 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":99:9)
#loc255 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":100:19)
#loc256 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":100:9)
#loc257 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":101:9)
#loc258 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":101:14)
#loc259 = loc(fused[#loc1, #loc2])
#loc260 = loc(fused[#loc3, #loc4])
#loc261 = loc(fused[#loc5, #loc6])
#loc262 = loc(fused[#loc7, #loc8])
#loc263 = loc(fused[#loc9, #loc10])
#loc264 = loc(fused[#loc11, #loc12])
#loc265 = loc(fused[#loc13, #loc14])
#loc266 = loc(fused[#loc15, #loc16])
#loc267 = loc(fused[#loc18, #loc17])
#loc268 = loc(fused[#loc19, #loc20])
#loc269 = loc(fused[#loc21, #loc22])
#loc270 = loc(fused[#loc23, #loc24, #loc25, #loc20])
#loc271 = loc(fused[#loc28, #loc29])
#loc272 = loc(fused[#loc27, #loc29])
#loc273 = loc(fused[#loc26, #loc30])
#loc274 = loc(fused[#loc31, #loc30])
#loc275 = loc(fused[#loc32, #loc33])
#loc276 = loc(fused[#loc34, #loc35])
#loc277 = loc(fused[#loc36, #loc33])
#loc278 = loc(fused[#loc44, #loc45])
#loc279 = loc(fused[#loc47, #loc46])
#loc280 = loc(fused[#loc53, #loc54])
#loc281 = loc(fused[#loc52, #loc54])
#loc282 = loc(fused[#loc51, #loc55])
#loc283 = loc(fused[#loc56, #loc55])
#loc284 = loc(fused[#loc57, #loc58])
#loc285 = loc(fused[#loc59, #loc60])
#loc286 = loc(fused[#loc61, #loc58])
#loc287 = loc(fused[#loc69, #loc70])
#loc288 = loc(fused[#loc72, #loc71])
#loc289 = loc(fused[#loc76, #loc77])
#loc290 = loc(fused[#loc78, #loc79])
#loc291 = loc(fused[#loc78, #loc80])
#loc292 = loc(fused[#loc81, #loc82])
#loc293 = loc(fused[#loc87, #loc88])
#loc294 = loc(fused[#loc92, #loc89])
#loc295 = loc(fused[#loc95, #loc96])
#loc296 = loc(fused[#loc97, #loc98])
#loc297 = loc(fused[#loc100, #loc99])
#loc298 = loc(fused[#loc101, #loc102])
#loc299 = loc(fused[#loc104, #loc98])
#loc300 = loc(fused[#loc109, #loc107])
#loc301 = loc(fused[#loc111, #loc110])
#loc302 = loc(fused[#loc115, #loc112])
#loc303 = loc(fused[#loc120, #loc121])
#loc304 = loc(fused[#loc122, #loc123])
#loc305 = loc(fused[#loc124, #loc125])
#loc306 = loc(fused[#loc126, #loc127])
#loc307 = loc(fused[#loc132, #loc133])
#loc310 = loc(fused[#loc143, #loc144])
#loc311 = loc(fused[#loc147, #loc148])
#loc312 = loc(fused[#loc151, #loc150])
#loc313 = loc(fused[#loc152, #loc153])
#loc314 = loc(fused[#loc154, #loc155])
#loc315 = loc(fused[#loc157, #loc156])
#loc316 = loc(fused[#loc158, #loc159])
#loc317 = loc(fused[#loc160, #loc161])
#loc318 = loc(fused[#loc162, #loc163, #loc164, #loc159])
#loc319 = loc(fused[#loc167, #loc168])
#loc320 = loc(fused[#loc166, #loc168])
#loc321 = loc(fused[#loc165, #loc169])
#loc322 = loc(fused[#loc170, #loc169])
#loc323 = loc(fused[#loc171, #loc172])
#loc324 = loc(fused[#loc173, #loc174])
#loc325 = loc(fused[#loc175, #loc172])
#loc326 = loc(fused[#loc183, #loc184])
#loc327 = loc(fused[#loc186, #loc185])
#loc328 = loc(fused[#loc192, #loc193])
#loc329 = loc(fused[#loc191, #loc193])
#loc330 = loc(fused[#loc190, #loc194])
#loc331 = loc(fused[#loc195, #loc194])
#loc332 = loc(fused[#loc196, #loc197])
#loc333 = loc(fused[#loc198, #loc199])
#loc334 = loc(fused[#loc200, #loc197])
#loc335 = loc(fused[#loc208, #loc209])
#loc336 = loc(fused[#loc211, #loc210])
#loc337 = loc(fused[#loc215, #loc216])
#loc338 = loc(fused[#loc217, #loc218])
#loc339 = loc(fused[#loc217, #loc219])
#loc340 = loc(fused[#loc220, #loc221])
#loc341 = loc(fused[#loc226, #loc227])
#loc342 = loc(fused[#loc231, #loc228])
#loc343 = loc(fused[#loc234, #loc235])
#loc344 = loc(fused[#loc236, #loc237])
#loc345 = loc(fused[#loc239, #loc238])
#loc346 = loc(fused[#loc240, #loc241])
#loc347 = loc(fused[#loc243, #loc237])
#loc348 = loc(fused[#loc248, #loc246])
#loc349 = loc(fused[#loc250, #loc249])
#loc350 = loc(fused[#loc254, #loc251])
