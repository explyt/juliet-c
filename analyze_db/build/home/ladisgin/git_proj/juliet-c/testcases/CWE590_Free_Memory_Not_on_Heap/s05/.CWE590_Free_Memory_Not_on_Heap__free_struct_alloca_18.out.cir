!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":96:10)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":96:14)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":96:20)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":96:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc163 = loc(fused[#loc64, #loc65])
#loc164 = loc(fused[#loc66, #loc67])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc140)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc141)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc143)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc144)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc11)
    cir.store %2, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc145)
    cir.goto "source" loc(#loc146)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc15)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc10)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc10)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc10)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc10)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc10)
    cir.store %9, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc144)
    cir.scope {
      %17 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc148)
      cir.scope {
        %18 = cir.const #cir.int<0> : !s32i loc(#loc22)
        %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc22)
        cir.store %19, %17 : !u64i, !cir.ptr<!u64i> loc(#loc150)
        cir.for : cond {
          %20 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc24)
          %21 = cir.const #cir.int<100> : !s32i loc(#loc25)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc25)
          %23 = cir.cmp(lt, %20, %22) : !u64i, !cir.bool loc(#loc151)
          cir.condition(%23) loc(#loc26)
        } body {
          cir.scope {
            %20 = cir.const #cir.int<1> : !s32i loc(#loc28)
            %21 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc29)
            %22 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc30)
            %23 = cir.ptr_stride(%21 : !cir.ptr<!ty__twoIntsStruct>, %22 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc31)
            %24 = cir.get_member %23[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
            cir.store %20, %24 : !s32i, !cir.ptr<!s32i> loc(#loc153)
            %25 = cir.const #cir.int<1> : !s32i loc(#loc33)
            %26 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
            %27 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc35)
            %28 = cir.ptr_stride(%26 : !cir.ptr<!ty__twoIntsStruct>, %27 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc36)
            %29 = cir.get_member %28[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
            cir.store %25, %29 : !s32i, !cir.ptr<!s32i> loc(#loc154)
          } loc(#loc152)
          cir.yield loc(#loc21)
        } step {
          %20 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc38)
          %21 = cir.unary(inc, %20) : !u64i, !u64i loc(#loc39)
          cir.store %21, %17 : !u64i, !cir.ptr<!u64i> loc(#loc155)
          cir.yield loc(#loc149)
        } loc(#loc149)
      } loc(#loc149)
    } loc(#loc147)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc40)
    cir.store %10, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc156)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc42)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc43)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!ty__twoIntsStruct>, %12 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc44)
    cir.call @printStructLine(%13) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc45)
    %14 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc46)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc47)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc47)
    cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc46)
    cir.return loc(#loc6)
  } loc(#loc142)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc158)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc50)
    cir.return loc(#loc49)
  } loc(#loc157)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc159)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc160)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc161)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc58)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc60)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc61)
  cir.func @main(%arg0: !s32i loc(fused[#loc64, #loc65]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc66, #loc67])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc163)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc164)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc63)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc68)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc68)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc69)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc70)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc70)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc71)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc58)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %8 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc165)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18_good() : () -> () loc(#loc73)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc59)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc60)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %13 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc166)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18_bad() : () -> () loc(#loc77)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc61)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc80)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc167)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc167)
    cir.return %17 : !s32i loc(#loc167)
  } loc(#loc162)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc168)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc84)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc169)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc171)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc172)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc93)
    cir.store %2, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc173)
    cir.goto "source" loc(#loc174)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc97)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc98)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc99)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc99)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc175)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc176)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc98)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc177)
    cir.store %9, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc172)
    cir.scope {
      %17 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc104)
      %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc105)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc105)
      %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc179)
      cir.if %20 {
        %21 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc84)
        %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc84)
        cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc107)
        %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc108)
        %24 = cir.const #cir.int<1> : !s32i loc(#loc109)
        cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc108)
      } loc(#loc180)
    } loc(#loc178)
    cir.scope {
      %17 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc182)
      cir.scope {
        %18 = cir.const #cir.int<0> : !s32i loc(#loc116)
        %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc116)
        cir.store %19, %17 : !u64i, !cir.ptr<!u64i> loc(#loc184)
        cir.for : cond {
          %20 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc118)
          %21 = cir.const #cir.int<100> : !s32i loc(#loc119)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc119)
          %23 = cir.cmp(lt, %20, %22) : !u64i, !cir.bool loc(#loc185)
          cir.condition(%23) loc(#loc120)
        } body {
          cir.scope {
            %20 = cir.const #cir.int<1> : !s32i loc(#loc122)
            %21 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc123)
            %22 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc124)
            %23 = cir.ptr_stride(%21 : !cir.ptr<!ty__twoIntsStruct>, %22 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc125)
            %24 = cir.get_member %23[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
            cir.store %20, %24 : !s32i, !cir.ptr<!s32i> loc(#loc187)
            %25 = cir.const #cir.int<1> : !s32i loc(#loc126)
            %26 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc127)
            %27 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc128)
            %28 = cir.ptr_stride(%26 : !cir.ptr<!ty__twoIntsStruct>, %27 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc129)
            %29 = cir.get_member %28[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
            cir.store %25, %29 : !s32i, !cir.ptr<!s32i> loc(#loc188)
          } loc(#loc186)
          cir.yield loc(#loc115)
        } step {
          %20 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc130)
          %21 = cir.unary(inc, %20) : !u64i, !u64i loc(#loc131)
          cir.store %21, %17 : !u64i, !cir.ptr<!u64i> loc(#loc189)
          cir.yield loc(#loc183)
        } loc(#loc183)
      } loc(#loc183)
    } loc(#loc181)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc132)
    cir.store %10, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc190)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc134)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc135)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!ty__twoIntsStruct>, %12 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc136)
    cir.call @printStructLine(%13) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc137)
    %14 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc138)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc139)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc139)
    cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc138)
    cir.return loc(#loc88)
  } loc(#loc170)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":23:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":45:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":25:5)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":25:21)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":31:9)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":31:55)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":26:12)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":26:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":27:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":27:10)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":28:1)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":32:9)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":39:9)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":33:13)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":33:20)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":34:13)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":38:13)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":34:22)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":34:18)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":34:25)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":34:29)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":34:27)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":35:13)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":36:40)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":36:17)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":36:28)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":36:29)
#loc32 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":37:40)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":37:17)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":37:28)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":37:29)
#loc37 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":34:35)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":34:34)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":40:16)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":40:9)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":42:22)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":42:27)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":42:28)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":42:5)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":44:5)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":44:10)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":81:1)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":84:1)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":83:5)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":83:13)
#loc52 = loc("/usr/include/stdlib.h":575:1)
#loc53 = loc("/usr/include/stdlib.h":575:41)
#loc54 = loc("/usr/include/time.h":76:1)
#loc55 = loc("/usr/include/time.h":76:38)
#loc56 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc57 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":101:15)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":103:15)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":106:15)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":108:15)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":96:1)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":111:1)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":97:1)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":99:27)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":99:22)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":99:5)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":101:5)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":102:5)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":102:64)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":103:5)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":106:5)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":107:5)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":107:63)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":108:5)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":110:12)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":110:5)
#loc82 = loc("/usr/include/stdlib.h":672:1)
#loc83 = loc("/usr/include/stdlib.h":672:45)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":63:23)
#loc85 = loc("/usr/include/stdlib.h":756:1)
#loc86 = loc("/usr/include/stdlib.h":756:70)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":52:1)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":79:1)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":54:5)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":54:21)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":60:9)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":60:87)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":55:12)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":55:5)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":56:5)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":56:10)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":57:1)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":60:55)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":60:62)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":60:66)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":60:86)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":61:9)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":65:9)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":61:13)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":61:27)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":62:9)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":63:13)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":64:13)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":64:18)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":66:9)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":73:9)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":67:13)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":67:20)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":68:13)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":72:13)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":68:22)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":68:18)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":68:25)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":68:29)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":68:27)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":69:13)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":70:40)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":70:17)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":70:28)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":70:29)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":71:40)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":71:17)
#loc128 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":71:28)
#loc129 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":71:29)
#loc130 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":68:35)
#loc131 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":68:34)
#loc132 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":74:16)
#loc133 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":74:9)
#loc134 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":76:22)
#loc135 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":76:27)
#loc136 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":76:28)
#loc137 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":76:5)
#loc138 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":78:5)
#loc139 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_18.c":78:10)
#loc140 = loc(fused[#loc1, #loc2])
#loc141 = loc(fused[#loc3, #loc4])
#loc142 = loc(fused[#loc5, #loc6])
#loc143 = loc(fused[#loc7, #loc8])
#loc144 = loc(fused[#loc9, #loc10])
#loc145 = loc(fused[#loc12, #loc11])
#loc146 = loc(fused[#loc13, #loc14])
#loc147 = loc(fused[#loc16, #loc17])
#loc148 = loc(fused[#loc18, #loc19])
#loc149 = loc(fused[#loc20, #loc21])
#loc150 = loc(fused[#loc23, #loc22])
#loc151 = loc(fused[#loc24, #loc25])
#loc152 = loc(fused[#loc27, #loc21])
#loc153 = loc(fused[#loc29, #loc28])
#loc154 = loc(fused[#loc34, #loc33])
#loc155 = loc(fused[#loc39, #loc38])
#loc156 = loc(fused[#loc41, #loc40])
#loc157 = loc(fused[#loc48, #loc49])
#loc158 = loc(fused[#loc50, #loc51])
#loc159 = loc(fused[#loc52, #loc53])
#loc160 = loc(fused[#loc54, #loc55])
#loc161 = loc(fused[#loc56, #loc57])
#loc162 = loc(fused[#loc62, #loc63])
#loc165 = loc(fused[#loc73, #loc74])
#loc166 = loc(fused[#loc77, #loc78])
#loc167 = loc(fused[#loc81, #loc80])
#loc168 = loc(fused[#loc82, #loc83])
#loc169 = loc(fused[#loc85, #loc86])
#loc170 = loc(fused[#loc87, #loc88])
#loc171 = loc(fused[#loc89, #loc90])
#loc172 = loc(fused[#loc91, #loc92])
#loc173 = loc(fused[#loc94, #loc93])
#loc174 = loc(fused[#loc95, #loc96])
#loc175 = loc(fused[#loc100, #loc101])
#loc176 = loc(fused[#loc99, #loc101])
#loc177 = loc(fused[#loc98, #loc92])
#loc178 = loc(fused[#loc102, #loc103])
#loc179 = loc(fused[#loc104, #loc105])
#loc180 = loc(fused[#loc106, #loc103])
#loc181 = loc(fused[#loc110, #loc111])
#loc182 = loc(fused[#loc112, #loc113])
#loc183 = loc(fused[#loc114, #loc115])
#loc184 = loc(fused[#loc117, #loc116])
#loc185 = loc(fused[#loc118, #loc119])
#loc186 = loc(fused[#loc121, #loc115])
#loc187 = loc(fused[#loc123, #loc122])
#loc188 = loc(fused[#loc127, #loc126])
#loc189 = loc(fused[#loc131, #loc130])
#loc190 = loc(fused[#loc133, #loc132])
