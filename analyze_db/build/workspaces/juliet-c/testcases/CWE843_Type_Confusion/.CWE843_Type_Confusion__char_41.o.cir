!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc5 = loc("CWE843_Type_Confusion__char_41.c":21:45)
#loc6 = loc("CWE843_Type_Confusion__char_41.c":21:52)
#loc28 = loc("CWE843_Type_Confusion__char_41.c":44:49)
#loc29 = loc("CWE843_Type_Confusion__char_41.c":44:56)
#loc55 = loc(fused[#loc5, #loc6])
#loc64 = loc(fused[#loc28, #loc29])
module @"/workspaces/juliet-c/testcases/CWE843_Type_Confusion/CWE843_Type_Confusion__char_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @printIntLine(!s32i) loc(#loc53)
  cir.func @CWE843_Type_Confusion__char_41_badSink(%arg0: !cir.ptr<!void> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data", init] {alignment = 8 : i64} loc(#loc55)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc7)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc8)
    %2 = cir.cast(bitcast, %1 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc8)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc9)
    cir.call @printIntLine(%3) : (!s32i) -> () loc(#loc10)
    cir.return loc(#loc4)
  } loc(#loc54)
  cir.func no_proto @CWE843_Type_Confusion__char_41_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc57)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc15)
    cir.store %1, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc58)
    cir.scope {
      %3 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charBuffer", init] {alignment = 1 : i64} loc(#loc60)
      %4 = cir.const #cir.int<97> : !s32i loc(#loc20)
      %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc20)
      cir.store %5, %3 : !s8i, !cir.ptr<!s8i> loc(#loc60)
      %6 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc61)
      cir.store %6, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc62)
    } loc(#loc59)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc24)
    cir.call @CWE843_Type_Confusion__char_41_badSink(%2) : (!cir.ptr<!void>) -> () loc(#loc25)
    cir.return loc(#loc12)
  } loc(#loc56)
  cir.func @CWE843_Type_Confusion__char_41_goodG2BSink(%arg0: !cir.ptr<!void> loc(fused[#loc28, #loc29])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data", init] {alignment = 8 : i64} loc(#loc64)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc30)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc31)
    %2 = cir.cast(bitcast, %1 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc31)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    cir.call @printIntLine(%3) : (!s32i) -> () loc(#loc33)
    cir.return loc(#loc27)
  } loc(#loc63)
  cir.func no_proto @CWE843_Type_Confusion__char_41_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc66)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc36)
    cir.return loc(#loc35)
  } loc(#loc65)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc68)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc42)
    cir.store %1, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc69)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intBuffer", init] {alignment = 4 : i64} loc(#loc71)
      %4 = cir.const #cir.int<8> : !s32i loc(#loc47)
      cir.store %4, %3 : !s32i, !cir.ptr<!s32i> loc(#loc71)
      %5 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc72)
      cir.store %5, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc73)
    } loc(#loc70)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc51)
    cir.call @CWE843_Type_Confusion__char_41_goodG2BSink(%2) : (!cir.ptr<!void>) -> () loc(#loc52)
    cir.return loc(#loc39)
  } loc(#loc67)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE843_Type_Confusion/CWE843_Type_Confusion__char_41.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE843_Type_Confusion__char_41.c":21:1)
#loc4 = loc("CWE843_Type_Confusion__char_41.c":25:1)
#loc7 = loc("CWE843_Type_Confusion__char_41.c":22:1)
#loc8 = loc("CWE843_Type_Confusion__char_41.c":24:26)
#loc9 = loc("CWE843_Type_Confusion__char_41.c":24:18)
#loc10 = loc("CWE843_Type_Confusion__char_41.c":24:5)
#loc11 = loc("CWE843_Type_Confusion__char_41.c":27:1)
#loc12 = loc("CWE843_Type_Confusion__char_41.c":38:1)
#loc13 = loc("CWE843_Type_Confusion__char_41.c":29:5)
#loc14 = loc("CWE843_Type_Confusion__char_41.c":29:12)
#loc15 = loc("CWE843_Type_Confusion__char_41.c":31:12)
#loc16 = loc("CWE843_Type_Confusion__char_41.c":31:5)
#loc17 = loc("CWE843_Type_Confusion__char_41.c":32:5)
#loc18 = loc("CWE843_Type_Confusion__char_41.c":36:5)
#loc19 = loc("CWE843_Type_Confusion__char_41.c":34:9)
#loc20 = loc("CWE843_Type_Confusion__char_41.c":34:27)
#loc21 = loc("CWE843_Type_Confusion__char_41.c":35:16)
#loc22 = loc("CWE843_Type_Confusion__char_41.c":35:17)
#loc23 = loc("CWE843_Type_Confusion__char_41.c":35:9)
#loc24 = loc("CWE843_Type_Confusion__char_41.c":37:44)
#loc25 = loc("CWE843_Type_Confusion__char_41.c":37:5)
#loc26 = loc("CWE843_Type_Confusion__char_41.c":44:1)
#loc27 = loc("CWE843_Type_Confusion__char_41.c":48:1)
#loc30 = loc("CWE843_Type_Confusion__char_41.c":45:1)
#loc31 = loc("CWE843_Type_Confusion__char_41.c":47:26)
#loc32 = loc("CWE843_Type_Confusion__char_41.c":47:18)
#loc33 = loc("CWE843_Type_Confusion__char_41.c":47:5)
#loc34 = loc("CWE843_Type_Confusion__char_41.c":64:1)
#loc35 = loc("CWE843_Type_Confusion__char_41.c":67:1)
#loc36 = loc("CWE843_Type_Confusion__char_41.c":66:5)
#loc37 = loc("CWE843_Type_Confusion__char_41.c":66:13)
#loc38 = loc("CWE843_Type_Confusion__char_41.c":51:1)
#loc39 = loc("CWE843_Type_Confusion__char_41.c":62:1)
#loc40 = loc("CWE843_Type_Confusion__char_41.c":53:5)
#loc41 = loc("CWE843_Type_Confusion__char_41.c":53:12)
#loc42 = loc("CWE843_Type_Confusion__char_41.c":55:12)
#loc43 = loc("CWE843_Type_Confusion__char_41.c":55:5)
#loc44 = loc("CWE843_Type_Confusion__char_41.c":56:5)
#loc45 = loc("CWE843_Type_Confusion__char_41.c":60:5)
#loc46 = loc("CWE843_Type_Confusion__char_41.c":58:9)
#loc47 = loc("CWE843_Type_Confusion__char_41.c":58:25)
#loc48 = loc("CWE843_Type_Confusion__char_41.c":59:16)
#loc49 = loc("CWE843_Type_Confusion__char_41.c":59:17)
#loc50 = loc("CWE843_Type_Confusion__char_41.c":59:9)
#loc51 = loc("CWE843_Type_Confusion__char_41.c":61:48)
#loc52 = loc("CWE843_Type_Confusion__char_41.c":61:5)
#loc53 = loc(fused[#loc1, #loc2])
#loc54 = loc(fused[#loc3, #loc4])
#loc56 = loc(fused[#loc11, #loc12])
#loc57 = loc(fused[#loc13, #loc14])
#loc58 = loc(fused[#loc16, #loc15])
#loc59 = loc(fused[#loc17, #loc18])
#loc60 = loc(fused[#loc19, #loc20])
#loc61 = loc(fused[#loc21, #loc22])
#loc62 = loc(fused[#loc23, #loc22])
#loc63 = loc(fused[#loc26, #loc27])
#loc65 = loc(fused[#loc34, #loc35])
#loc66 = loc(fused[#loc36, #loc37])
#loc67 = loc(fused[#loc38, #loc39])
#loc68 = loc(fused[#loc40, #loc41])
#loc69 = loc(fused[#loc43, #loc42])
#loc70 = loc(fused[#loc44, #loc45])
#loc71 = loc(fused[#loc46, #loc47])
#loc72 = loc(fused[#loc48, #loc49])
#loc73 = loc(fused[#loc50, #loc49])
