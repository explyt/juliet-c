!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":94:10)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":94:14)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":94:20)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":94:32)
#loc171 = loc(fused[#loc73, #loc74])
#loc172 = loc(fused[#loc75, #loc76])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc145)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc146)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc148)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc149)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc150)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc151)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc149)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc150)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc15)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc154)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc20)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc154)
      %8 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc22)
      %10 = cir.const #cir.int<65> : !s32i loc(#loc23)
      %11 = cir.const #cir.int<100> : !s32i loc(#loc24)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc25)
      %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc24)
      %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc24)
      cir.libc.memset %14 bytes from %9 set to %10 : !cir.ptr<!void>, !s32i, !u64i loc(#loc155)
      %15 = cir.const #cir.int<0> : !s32i loc(#loc28)
      %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc28)
      %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
      %18 = cir.const #cir.int<100> : !s32i loc(#loc30)
      %19 = cir.const #cir.int<1> : !s32i loc(#loc31)
      %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc30)
      %21 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc32)
      cir.store %16, %21 : !s8i, !cir.ptr<!s8i> loc(#loc156)
      %22 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
      %23 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc34)
      cir.store %22, %23 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc157)
    } loc(#loc153)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc159)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc39)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc159)
      cir.scope {
        %8 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc161)
        %9 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc161)
        cir.store %9, %8 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc161)
        %10 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc45)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc45)
        %12 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc46)
        %14 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc47)
        %15 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
        %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc47)
        %17 = cir.const #cir.int<1> : !u64i loc(#loc162)
        %18 = cir.binop(mul, %16, %17) : !u64i loc(#loc163)
        cir.libc.memcpy %18 bytes from %13 to %11 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc164)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc53)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc53)
        %21 = cir.const #cir.int<50> : !s32i loc(#loc54)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc55)
        %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc54)
        %24 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc56)
        %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc56)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc165)
        %26 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
        cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc58)
      } loc(#loc160)
    } loc(#loc158)
    cir.return loc(#loc6)
  } loc(#loc147)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc167)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc61)
    cir.return loc(#loc60)
  } loc(#loc166)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc168)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc169)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc70)
  cir.func @main(%arg0: !s32i loc(fused[#loc73, #loc74]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc75, #loc76])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc171)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc172)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc72)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc77)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc77)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc78)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc79)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc79)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc80)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc67)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32_good : !cir.ptr<!cir.func<!void ()>> loc(#loc173)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32_good() : () -> () loc(#loc82)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc68)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc69)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc174)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32_bad() : () -> () loc(#loc86)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc70)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc89)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc175)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    cir.return %17 : !s32i loc(#loc175)
  } loc(#loc170)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc177)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc178)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc179)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc180)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc178)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc179)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc101)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc181)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc183)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc106)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc183)
      %8 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc108)
      %10 = cir.const #cir.int<65> : !s32i loc(#loc109)
      %11 = cir.const #cir.int<50> : !s32i loc(#loc110)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc111)
      %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc110)
      %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc110)
      cir.libc.memset %14 bytes from %9 set to %10 : !cir.ptr<!void>, !s32i, !u64i loc(#loc184)
      %15 = cir.const #cir.int<0> : !s32i loc(#loc114)
      %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc114)
      %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
      %18 = cir.const #cir.int<50> : !s32i loc(#loc116)
      %19 = cir.const #cir.int<1> : !s32i loc(#loc117)
      %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc116)
      %21 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc118)
      cir.store %16, %21 : !s8i, !cir.ptr<!s8i> loc(#loc185)
      %22 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
      %23 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
      cir.store %22, %23 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc186)
    } loc(#loc182)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc188)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc188)
      cir.scope {
        %8 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc190)
        %9 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc190)
        cir.store %9, %8 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc190)
        %10 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc131)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc131)
        %12 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc132)
        %14 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc133)
        %15 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
        %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc133)
        %17 = cir.const #cir.int<1> : !u64i loc(#loc191)
        %18 = cir.binop(mul, %16, %17) : !u64i loc(#loc192)
        cir.libc.memcpy %18 bytes from %13 to %11 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc193)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc139)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc139)
        %21 = cir.const #cir.int<50> : !s32i loc(#loc140)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc141)
        %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc140)
        %24 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc142)
        %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc142)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc194)
        %26 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
        cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc144)
      } loc(#loc189)
    } loc(#loc187)
    cir.return loc(#loc92)
  } loc(#loc176)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":23:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":47:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":25:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":25:12)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":26:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":26:25)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":27:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":27:25)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":28:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":28:24)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":29:12)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":29:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":30:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":36:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":31:9)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":31:24)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":31:23)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":33:16)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":33:22)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":33:27)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":33:31)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":33:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":33:32)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":34:23)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":34:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":34:14)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":34:18)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":34:19)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":35:21)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":35:10)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":35:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":37:5)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":46:5)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":38:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":38:24)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":38:23)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":39:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":45:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":40:13)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":40:29)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":42:20)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":42:26)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":42:32)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":42:39)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":42:45)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":42:56)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":42:13)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":42:57)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":43:26)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":43:18)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":43:21)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":43:13)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":44:23)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":44:13)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":80:1)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":83:1)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":82:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":82:13)
#loc63 = loc("/usr/include/stdlib.h":575:1)
#loc64 = loc("/usr/include/stdlib.h":575:41)
#loc65 = loc("/usr/include/time.h":76:1)
#loc66 = loc("/usr/include/time.h":76:38)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":99:15)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":101:15)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":104:15)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":106:15)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":94:1)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":109:1)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":95:1)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":97:27)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":97:22)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":97:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":99:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":100:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":100:76)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":101:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":104:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":105:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":105:75)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":106:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":108:12)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":108:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":54:1)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":78:1)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":56:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":56:12)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":57:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":57:25)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":58:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":58:25)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":59:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":59:24)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":60:12)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":60:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":61:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":67:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":62:9)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":62:24)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":62:23)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":64:16)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":64:22)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":64:27)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":64:30)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":64:9)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":64:31)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":65:22)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":65:9)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":65:14)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":65:17)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":65:18)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":66:21)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":66:10)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":66:9)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":68:5)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":77:5)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":69:9)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":69:24)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":69:23)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":70:9)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":76:9)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":71:13)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":71:29)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":73:20)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":73:26)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":73:32)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":73:39)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":73:45)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":73:56)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":73:13)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":73:57)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":74:26)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":74:18)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":74:21)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":74:13)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":75:23)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_32.c":75:13)
#loc145 = loc(fused[#loc1, #loc2])
#loc146 = loc(fused[#loc3, #loc4])
#loc147 = loc(fused[#loc5, #loc6])
#loc148 = loc(fused[#loc7, #loc8])
#loc149 = loc(fused[#loc9, #loc10])
#loc150 = loc(fused[#loc11, #loc12])
#loc151 = loc(fused[#loc13, #loc14])
#loc152 = loc(fused[#loc16, #loc15])
#loc153 = loc(fused[#loc17, #loc18])
#loc154 = loc(fused[#loc19, #loc20])
#loc155 = loc(fused[#loc26, #loc27])
#loc156 = loc(fused[#loc29, #loc28])
#loc157 = loc(fused[#loc35, #loc33])
#loc158 = loc(fused[#loc36, #loc37])
#loc159 = loc(fused[#loc38, #loc39])
#loc160 = loc(fused[#loc41, #loc42])
#loc161 = loc(fused[#loc43, #loc44])
#loc162 = loc(fused[#loc49, #loc50])
#loc163 = loc(fused[#loc47, #loc50])
#loc164 = loc(fused[#loc51, #loc52])
#loc165 = loc(fused[#loc56, #loc53])
#loc166 = loc(fused[#loc59, #loc60])
#loc167 = loc(fused[#loc61, #loc62])
#loc168 = loc(fused[#loc63, #loc64])
#loc169 = loc(fused[#loc65, #loc66])
#loc170 = loc(fused[#loc71, #loc72])
#loc173 = loc(fused[#loc82, #loc83])
#loc174 = loc(fused[#loc86, #loc87])
#loc175 = loc(fused[#loc90, #loc89])
#loc176 = loc(fused[#loc91, #loc92])
#loc177 = loc(fused[#loc93, #loc94])
#loc178 = loc(fused[#loc95, #loc96])
#loc179 = loc(fused[#loc97, #loc98])
#loc180 = loc(fused[#loc99, #loc100])
#loc181 = loc(fused[#loc102, #loc101])
#loc182 = loc(fused[#loc103, #loc104])
#loc183 = loc(fused[#loc105, #loc106])
#loc184 = loc(fused[#loc112, #loc113])
#loc185 = loc(fused[#loc115, #loc114])
#loc186 = loc(fused[#loc121, #loc119])
#loc187 = loc(fused[#loc122, #loc123])
#loc188 = loc(fused[#loc124, #loc125])
#loc189 = loc(fused[#loc127, #loc128])
#loc190 = loc(fused[#loc129, #loc130])
#loc191 = loc(fused[#loc135, #loc136])
#loc192 = loc(fused[#loc133, #loc136])
#loc193 = loc(fused[#loc137, #loc138])
#loc194 = loc(fused[#loc142, #loc139])
