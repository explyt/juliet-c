!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc1 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc40 = loc("../../../testcasesupport/std_testcase.h":68:7)
!ty_OneIntClass = !cir.struct<class "OneIntClass" {!s32i} #cir.record.decl.ast>
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc1)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc1)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc1)
    cir.return loc(#loc1)
  } loc(#loc1)
  cir.func private @printIntLine(!s32i) loc(#loc175)
  cir.func @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_023badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc177)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc178)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc179)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc11)
    %4 = cir.alloca !u8i, !cir.ptr<!u8i>, %3 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc11)
    %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc180)
    %6 = cir.cast(bitcast, %4 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc11)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc11)
    cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc179)
    %8 = cir.const #cir.int<8> : !u64i loc(#loc13)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc13)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc13)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc13)
    cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc180)
    cir.br ^bb1 loc(#loc181)
  ^bb1:  // pred: ^bb0
    %12 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc16)
    cir.brcond %13 ^bb2, ^bb3 loc(#loc182)
  ^bb2:  // pred: ^bb1
    %14 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    cir.store %14, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc183)
    cir.br ^bb3 loc(#loc15)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc15)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc184)
  ^bb5:  // pred: ^bb4
    %15 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc22)
    cir.brcond %16 ^bb6, ^bb9 loc(#loc185)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc186)
  ^bb7:  // pred: ^bb6
    %17 = cir.const #cir.int<8> : !u64i loc(#loc187)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc27)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc187)
    cir.call @_ZN12TwoIntsClassC2Ev(%20) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc7)
    cir.store %20, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc177)
    %21 = cir.const #cir.int<5> : !s32i loc(#loc28)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc29)
    %23 = cir.get_member %22[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
    cir.store %21, %23 : !s32i, !cir.ptr<!s32i> loc(#loc188)
    %24 = cir.const #cir.int<10> : !s32i loc(#loc31)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc32)
    %26 = cir.get_member %25[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc33)
    cir.store %24, %26 : !s32i, !cir.ptr<!s32i> loc(#loc189)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc34)
    %28 = cir.get_member %27[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
    %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc35)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc36)
    cir.br ^bb8 loc(#loc25)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc21)
  ^bb9:  // 2 preds: ^bb5, ^bb8
    cir.br ^bb10 loc(#loc21)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc5)
  } loc(#loc176)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc190)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc39)
  cir.func linkonce_odr @_ZN11OneIntClassC2Ev(%arg0: !cir.ptr<!ty_OneIntClass> loc("../../../testcasesupport/std_testcase.h":68:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["this", init] {alignment = 8 : i64} loc(#loc40)
    cir.store %arg0, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc40)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc40)
    cir.return loc(#loc40)
  } loc(#loc40)
  cir.func internal private @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc192)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc193)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc194)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc48)
    %4 = cir.alloca !u8i, !cir.ptr<!u8i>, %3 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc48)
    %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc195)
    %6 = cir.cast(bitcast, %4 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc48)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc48)
    cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc194)
    %8 = cir.const #cir.int<8> : !u64i loc(#loc50)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc50)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc50)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc50)
    cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc195)
    cir.br ^bb1 loc(#loc196)
  ^bb1:  // pred: ^bb0
    %12 = cir.const #cir.int<1> : !s32i loc(#loc53)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc53)
    cir.brcond %13 ^bb2, ^bb3 loc(#loc197)
  ^bb2:  // pred: ^bb1
    %14 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    cir.store %14, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc198)
    cir.br ^bb3 loc(#loc52)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc52)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc199)
  ^bb5:  // pred: ^bb4
    %15 = cir.const #cir.int<0> : !s32i loc(#loc59)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc59)
    cir.brcond %16 ^bb6, ^bb7 loc(#loc200)
  ^bb6:  // pred: ^bb5
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc39)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    cir.br ^bb10 loc(#loc61)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc201)
  ^bb8:  // pred: ^bb7
    %19 = cir.const #cir.int<4> : !u64i loc(#loc202)
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc67)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc202)
    cir.call @_ZN11OneIntClassC2Ev(%22) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr2) loc(#loc44)
    cir.store %22, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc192)
    %23 = cir.const #cir.int<5> : !s32i loc(#loc68)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc69)
    %25 = cir.get_member %24[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc70)
    cir.store %23, %25 : !s32i, !cir.ptr<!s32i> loc(#loc203)
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc71)
    %27 = cir.get_member %26[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc70)
    %28 = cir.load %27 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    cir.call @printIntLine(%28) : (!s32i) -> () loc(#loc73)
    cir.br ^bb9 loc(#loc65)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc58)
  ^bb10:  // 2 preds: ^bb6, ^bb9
    cir.br ^bb11 loc(#loc58)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc42)
  } loc(#loc191)
  cir.func internal private @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc205)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc206)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc207)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc81)
    %4 = cir.alloca !u8i, !cir.ptr<!u8i>, %3 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc81)
    %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc208)
    %6 = cir.cast(bitcast, %4 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc81)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc81)
    cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc207)
    %8 = cir.const #cir.int<8> : !u64i loc(#loc83)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc83)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc83)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc83)
    cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc208)
    cir.br ^bb1 loc(#loc209)
  ^bb1:  // pred: ^bb0
    %12 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc86)
    cir.brcond %13 ^bb2, ^bb3 loc(#loc210)
  ^bb2:  // pred: ^bb1
    %14 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    cir.store %14, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc211)
    cir.br ^bb3 loc(#loc85)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc85)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc212)
  ^bb5:  // pred: ^bb4
    %15 = cir.const #cir.int<1> : !s32i loc(#loc92)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc92)
    cir.brcond %16 ^bb6, ^bb9 loc(#loc213)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc214)
  ^bb7:  // pred: ^bb6
    %17 = cir.const #cir.int<4> : !u64i loc(#loc215)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc97)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc215)
    cir.call @_ZN11OneIntClassC2Ev(%20) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr2) loc(#loc77)
    cir.store %20, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc205)
    %21 = cir.const #cir.int<5> : !s32i loc(#loc98)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc99)
    %23 = cir.get_member %22[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc70)
    cir.store %21, %23 : !s32i, !cir.ptr<!s32i> loc(#loc216)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc100)
    %25 = cir.get_member %24[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc70)
    %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc101)
    cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc102)
    cir.br ^bb8 loc(#loc95)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc91)
  ^bb9:  // 2 preds: ^bb5, ^bb8
    cir.br ^bb10 loc(#loc91)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc75)
  } loc(#loc204)
  cir.func internal private @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc218)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc219)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc220)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc110)
    %4 = cir.alloca !u8i, !cir.ptr<!u8i>, %3 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc110)
    %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc221)
    %6 = cir.cast(bitcast, %4 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc110)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc110)
    cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc220)
    %8 = cir.const #cir.int<8> : !u64i loc(#loc112)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc112)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc112)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc112)
    cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc221)
    cir.br ^bb1 loc(#loc222)
  ^bb1:  // pred: ^bb0
    %12 = cir.const #cir.int<0> : !s32i loc(#loc115)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc115)
    cir.brcond %13 ^bb2, ^bb3 loc(#loc223)
  ^bb2:  // pred: ^bb1
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc119)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc119)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    cir.br ^bb4 loc(#loc117)
  ^bb3:  // pred: ^bb1
    %16 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
    cir.store %16, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc224)
    cir.br ^bb4 loc(#loc114)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc114)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc225)
  ^bb6:  // pred: ^bb5
    %17 = cir.const #cir.int<1> : !s32i loc(#loc125)
    %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc125)
    cir.brcond %18 ^bb7, ^bb10 loc(#loc226)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc227)
  ^bb8:  // pred: ^bb7
    %19 = cir.const #cir.int<8> : !u64i loc(#loc228)
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc130)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc228)
    cir.call @_ZN12TwoIntsClassC2Ev(%22) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc106)
    cir.store %22, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc218)
    %23 = cir.const #cir.int<5> : !s32i loc(#loc131)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc132)
    %25 = cir.get_member %24[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
    cir.store %23, %25 : !s32i, !cir.ptr<!s32i> loc(#loc229)
    %26 = cir.const #cir.int<10> : !s32i loc(#loc133)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc134)
    %28 = cir.get_member %27[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc33)
    cir.store %26, %28 : !s32i, !cir.ptr<!s32i> loc(#loc230)
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc135)
    %30 = cir.get_member %29[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
    %31 = cir.load %30 : !cir.ptr<!s32i>, !s32i loc(#loc136)
    cir.call @printIntLine(%31) : (!s32i) -> () loc(#loc137)
    cir.br ^bb9 loc(#loc128)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc124)
  ^bb10:  // 2 preds: ^bb6, ^bb9
    cir.br ^bb11 loc(#loc124)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc104)
  } loc(#loc217)
  cir.func internal private @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc232)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc233)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc234)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc145)
    %4 = cir.alloca !u8i, !cir.ptr<!u8i>, %3 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc145)
    %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc235)
    %6 = cir.cast(bitcast, %4 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc145)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc145)
    cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc234)
    %8 = cir.const #cir.int<8> : !u64i loc(#loc147)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc147)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc147)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc147)
    cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc235)
    cir.br ^bb1 loc(#loc236)
  ^bb1:  // pred: ^bb0
    %12 = cir.const #cir.int<1> : !s32i loc(#loc150)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc150)
    cir.brcond %13 ^bb2, ^bb3 loc(#loc237)
  ^bb2:  // pred: ^bb1
    %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
    cir.store %14, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc238)
    cir.br ^bb3 loc(#loc149)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc149)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc239)
  ^bb5:  // pred: ^bb4
    %15 = cir.const #cir.int<1> : !s32i loc(#loc156)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc156)
    cir.brcond %16 ^bb6, ^bb9 loc(#loc240)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc241)
  ^bb7:  // pred: ^bb6
    %17 = cir.const #cir.int<8> : !u64i loc(#loc242)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc161)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc242)
    cir.call @_ZN12TwoIntsClassC2Ev(%20) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc141)
    cir.store %20, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc232)
    %21 = cir.const #cir.int<5> : !s32i loc(#loc162)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc163)
    %23 = cir.get_member %22[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
    cir.store %21, %23 : !s32i, !cir.ptr<!s32i> loc(#loc243)
    %24 = cir.const #cir.int<10> : !s32i loc(#loc164)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc165)
    %26 = cir.get_member %25[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc33)
    cir.store %24, %26 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc166)
    %28 = cir.get_member %27[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc30)
    %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc167)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc168)
    cir.br ^bb8 loc(#loc159)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc155)
  ^bb9:  // 2 preds: ^bb5, ^bb8
    cir.br ^bb10 loc(#loc155)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc139)
  } loc(#loc231)
  cir.func @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_024goodEv() extra(#fn_attr1) {
    cir.call @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02L8goodB2G1Ev() : () -> () loc(#loc171)
    cir.call @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02L8goodB2G2Ev() : () -> () loc(#loc172)
    cir.call @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02L8goodG2B1Ev() : () -> () loc(#loc173)
    cir.call @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02L8goodG2B2Ev() : () -> () loc(#loc174)
    cir.return loc(#loc170)
  } loc(#loc245)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":0:0)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":25:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":51:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":43:13)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":43:49)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":27:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":27:12)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":28:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":28:36)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":29:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":29:37)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":30:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":34:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":30:8)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":31:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":33:16)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":33:9)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":35:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":50:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":35:8)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":36:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":37:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":49:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":43:39)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":43:43)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":45:32)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":45:13)
#loc30 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":46:32)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":46:13)
#loc33 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":47:26)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":47:36)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":47:13)
#loc37 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc38 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":71:19)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":58:1)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":87:1)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":81:13)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":81:48)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":60:5)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":60:12)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":61:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":61:36)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":62:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":62:37)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":63:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":67:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":63:8)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":64:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":66:16)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":66:9)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":68:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":86:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":68:8)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":69:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":72:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":74:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":71:9)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":75:9)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":85:9)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":81:38)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":81:42)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":83:32)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":83:13)
#loc70 = loc("../../../testcasesupport/std_testcase.h":71:13)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":84:26)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":84:36)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":84:13)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":90:1)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":114:1)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":108:13)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":108:48)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":92:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":92:12)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":93:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":93:36)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":94:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":94:37)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":95:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":99:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":95:8)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":96:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":98:16)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":98:9)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":100:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":113:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":100:8)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":101:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":102:9)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":112:9)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":108:38)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":108:42)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":110:32)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":110:13)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":111:26)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":111:36)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":111:13)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":117:1)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":148:1)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":140:13)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":140:49)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":119:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":119:12)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":120:5)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":120:36)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":121:5)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":121:37)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":122:5)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":131:5)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":122:8)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":123:5)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":126:5)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":128:5)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":125:19)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":125:9)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":130:16)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":130:9)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":132:5)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":147:5)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":132:8)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":133:5)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":134:9)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":146:9)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":140:39)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":140:43)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":142:32)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":142:13)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":143:32)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":143:13)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":144:26)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":144:36)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":144:13)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":151:1)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":177:1)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":169:13)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":169:49)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":153:5)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":153:12)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":154:5)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":154:36)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":155:5)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":155:37)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":156:5)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":160:5)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":156:8)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":157:5)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":159:16)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":159:9)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":161:5)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":176:5)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":161:8)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":162:5)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":163:9)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":175:9)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":169:39)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":169:43)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":171:32)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":171:13)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":172:32)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":172:13)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":173:26)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":173:36)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":173:13)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":179:1)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":185:1)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":181:5)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":182:5)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":183:5)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_02.cpp":184:5)
#loc175 = loc(fused[#loc2, #loc3])
#loc176 = loc(fused[#loc4, #loc5])
#loc177 = loc(fused[#loc6, #loc7])
#loc178 = loc(fused[#loc8, #loc9])
#loc179 = loc(fused[#loc10, #loc11])
#loc180 = loc(fused[#loc12, #loc13])
#loc181 = loc(fused[#loc14, #loc15])
#loc182 = loc(fused[#loc17, #loc15])
#loc183 = loc(fused[#loc19, #loc18])
#loc184 = loc(fused[#loc20, #loc21])
#loc185 = loc(fused[#loc23, #loc21])
#loc186 = loc(fused[#loc24, #loc25])
#loc187 = loc(fused[#loc26, #loc7])
#loc188 = loc(fused[#loc29, #loc28])
#loc189 = loc(fused[#loc32, #loc31])
#loc190 = loc(fused[#loc37, #loc38])
#loc191 = loc(fused[#loc41, #loc42])
#loc192 = loc(fused[#loc43, #loc44])
#loc193 = loc(fused[#loc45, #loc46])
#loc194 = loc(fused[#loc47, #loc48])
#loc195 = loc(fused[#loc49, #loc50])
#loc196 = loc(fused[#loc51, #loc52])
#loc197 = loc(fused[#loc54, #loc52])
#loc198 = loc(fused[#loc56, #loc55])
#loc199 = loc(fused[#loc57, #loc58])
#loc200 = loc(fused[#loc60, #loc61, #loc62, #loc58])
#loc201 = loc(fused[#loc64, #loc65])
#loc202 = loc(fused[#loc66, #loc44])
#loc203 = loc(fused[#loc69, #loc68])
#loc204 = loc(fused[#loc74, #loc75])
#loc205 = loc(fused[#loc76, #loc77])
#loc206 = loc(fused[#loc78, #loc79])
#loc207 = loc(fused[#loc80, #loc81])
#loc208 = loc(fused[#loc82, #loc83])
#loc209 = loc(fused[#loc84, #loc85])
#loc210 = loc(fused[#loc87, #loc85])
#loc211 = loc(fused[#loc89, #loc88])
#loc212 = loc(fused[#loc90, #loc91])
#loc213 = loc(fused[#loc93, #loc91])
#loc214 = loc(fused[#loc94, #loc95])
#loc215 = loc(fused[#loc96, #loc77])
#loc216 = loc(fused[#loc99, #loc98])
#loc217 = loc(fused[#loc103, #loc104])
#loc218 = loc(fused[#loc105, #loc106])
#loc219 = loc(fused[#loc107, #loc108])
#loc220 = loc(fused[#loc109, #loc110])
#loc221 = loc(fused[#loc111, #loc112])
#loc222 = loc(fused[#loc113, #loc114])
#loc223 = loc(fused[#loc116, #loc117, #loc118, #loc114])
#loc224 = loc(fused[#loc122, #loc121])
#loc225 = loc(fused[#loc123, #loc124])
#loc226 = loc(fused[#loc126, #loc124])
#loc227 = loc(fused[#loc127, #loc128])
#loc228 = loc(fused[#loc129, #loc106])
#loc229 = loc(fused[#loc132, #loc131])
#loc230 = loc(fused[#loc134, #loc133])
#loc231 = loc(fused[#loc138, #loc139])
#loc232 = loc(fused[#loc140, #loc141])
#loc233 = loc(fused[#loc142, #loc143])
#loc234 = loc(fused[#loc144, #loc145])
#loc235 = loc(fused[#loc146, #loc147])
#loc236 = loc(fused[#loc148, #loc149])
#loc237 = loc(fused[#loc151, #loc149])
#loc238 = loc(fused[#loc153, #loc152])
#loc239 = loc(fused[#loc154, #loc155])
#loc240 = loc(fused[#loc157, #loc155])
#loc241 = loc(fused[#loc158, #loc159])
#loc242 = loc(fused[#loc160, #loc141])
#loc243 = loc(fused[#loc163, #loc162])
#loc244 = loc(fused[#loc165, #loc164])
#loc245 = loc(fused[#loc169, #loc170])
