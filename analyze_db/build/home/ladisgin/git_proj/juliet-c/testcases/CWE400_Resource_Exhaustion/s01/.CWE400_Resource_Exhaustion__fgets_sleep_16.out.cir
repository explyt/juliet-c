!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc66 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":142:10)
#loc67 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":142:14)
#loc68 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":142:20)
#loc69 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":142:32)
#true = #cir.bool<true> : !cir.bool
#loc178 = loc(fused[#loc66, #loc67])
#loc179 = loc(fused[#loc68, #loc69])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fgets_sleep_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc156)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc157)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc158)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc159)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @usleep(!u32i) -> !s32i loc(#loc160)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc12)
  cir.func no_proto @CWE400_Resource_Exhaustion__fgets_sleep_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc162)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc18)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc163)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc22)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc22)
        cir.condition(%4) loc(#loc22)
      } do {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc166)
          %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc166)
          cir.store %4, %3 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc166)
          cir.scope {
            %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc29)
            %6 = cir.const #cir.int<3> : !s32i loc(#loc30)
            %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc30)
            %8 = cir.const #cir.int<4> : !u64i loc(#loc30)
            %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc30)
            %10 = cir.const #cir.int<2> : !s32i loc(#loc30)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc30)
            %12 = cir.binop(add, %9, %11) : !u64i loc(#loc30)
            %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc30)
            %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc157)
            %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc31)
            %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc32)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc33)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc33)
            %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc168)
            cir.if %19 {
              %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc37)
              %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc38)
              cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc170)
            } else {
              %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc41)
            } loc(#loc169)
          } loc(#loc167)
        } loc(#loc165)
        cir.break loc(#loc42)
      } loc(#loc164)
    } loc(#loc164)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc45)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc45)
        cir.condition(%4) loc(#loc45)
      } do {
        %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc46)
        %4 = cir.cast(integral, %3 : !s32i), !u32i loc(#loc46)
        %5 = cir.call @usleep(%4) : (!u32i) -> !s32i loc(#loc47)
        %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc12)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc12)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc48)
        cir.break loc(#loc49)
      } loc(#loc171)
    } loc(#loc171)
    cir.return loc(#loc14)
  } loc(#loc161)
  cir.func no_proto @CWE400_Resource_Exhaustion__fgets_sleep_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc173)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc52)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc174)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    cir.return loc(#loc51)
  } loc(#loc172)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc175)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc176)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc60)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc61)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc62)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc63)
  cir.func @main(%arg0: !s32i loc(fused[#loc66, #loc67]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc68, #loc69])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc178)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc179)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc65)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc70)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc70)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc71)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc72)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc72)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc73)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc60)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %8 = cir.get_global @CWE400_Resource_Exhaustion__fgets_sleep_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc180)
    cir.call @CWE400_Resource_Exhaustion__fgets_sleep_16_good() : () -> () loc(#loc75)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc61)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc62)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %13 = cir.get_global @CWE400_Resource_Exhaustion__fgets_sleep_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc181)
    cir.call @CWE400_Resource_Exhaustion__fgets_sleep_16_bad() : () -> () loc(#loc79)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc63)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc82)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc182)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc182)
    cir.return %17 : !s32i loc(#loc182)
  } loc(#loc177)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc84)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc85)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc184)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc90)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc91)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc185)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc95)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc95)
        cir.condition(%4) loc(#loc95)
      } do {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc188)
          %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc188)
          cir.store %4, %3 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc188)
          cir.scope {
            %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc102)
            %6 = cir.const #cir.int<3> : !s32i loc(#loc103)
            %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc103)
            %8 = cir.const #cir.int<4> : !u64i loc(#loc103)
            %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc103)
            %10 = cir.const #cir.int<2> : !s32i loc(#loc103)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc103)
            %12 = cir.binop(add, %9, %11) : !u64i loc(#loc103)
            %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc103)
            %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc157)
            %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc104)
            %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc105)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc106)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc106)
            %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc190)
            cir.if %19 {
              %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc110)
              %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc111)
              cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc192)
            } else {
              %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc114)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc114)
              cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc115)
            } loc(#loc191)
          } loc(#loc189)
        } loc(#loc187)
        cir.break loc(#loc116)
      } loc(#loc186)
    } loc(#loc186)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc119)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc119)
        cir.condition(%4) loc(#loc119)
      } do {
        cir.scope {
          %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc122)
          %4 = cir.const #cir.int<0> : !s32i loc(#loc123)
          %5 = cir.cmp(gt, %3, %4) : !s32i, !cir.bool loc(#loc195)
          %6 = cir.ternary(%5, true {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc125)
            %8 = cir.const #cir.int<2000> : !s32i loc(#loc126)
            %9 = cir.cmp(le, %7, %8) : !s32i, !cir.bool loc(#loc196)
            %10 = cir.ternary(%9, true {
              %11 = cir.const #true loc(#loc124)
              cir.yield %11 : !cir.bool loc(#loc124)
            }, false {
              %11 = cir.const #false loc(#loc124)
              cir.yield %11 : !cir.bool loc(#loc124)
            }) : (!cir.bool) -> !cir.bool loc(#loc124)
            cir.yield %10 : !cir.bool loc(#loc124)
          }, false {
            %7 = cir.const #false loc(#loc124)
            cir.yield %7 : !cir.bool loc(#loc124)
          }) : (!cir.bool) -> !cir.bool loc(#loc124)
          cir.if %6 {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc130)
            %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc130)
            %9 = cir.call @usleep(%8) : (!u32i) -> !s32i loc(#loc131)
            %10 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc84)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc84)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc132)
          } else {
            %7 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc85)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc85)
            cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc133)
          } loc(#loc197)
        } loc(#loc194)
        cir.break loc(#loc134)
      } loc(#loc193)
    } loc(#loc193)
    cir.return loc(#loc87)
  } loc(#loc183)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc199)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc139)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc140)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc200)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc144)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc144)
        cir.condition(%4) loc(#loc144)
      } do {
        %3 = cir.const #cir.int<20> : !s32i loc(#loc145)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc202)
        cir.break loc(#loc147)
      } loc(#loc201)
    } loc(#loc201)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc150)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc150)
        cir.condition(%4) loc(#loc150)
      } do {
        %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc151)
        %4 = cir.cast(integral, %3 : !s32i), !u32i loc(#loc151)
        %5 = cir.call @usleep(%4) : (!u32i) -> !s32i loc(#loc152)
        %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc153)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc153)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc154)
        cir.break loc(#loc155)
      } loc(#loc203)
    } loc(#loc203)
    cir.return loc(#loc136)
  } loc(#loc198)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fgets_sleep_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":49:27)
#loc10 = loc("/usr/include/unistd.h":480:1)
#loc11 = loc("/usr/include/unistd.h":480:43)
#loc12 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":58:19)
#loc13 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":32:1)
#loc14 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":61:1)
#loc15 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":34:5)
#loc16 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":34:9)
#loc17 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":36:14)
#loc18 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":36:13)
#loc19 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":36:5)
#loc20 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":37:5)
#loc21 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":53:5)
#loc22 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":37:11)
#loc23 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":39:9)
#loc24 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":51:9)
#loc25 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":40:13)
#loc26 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":40:49)
#loc27 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":42:13)
#loc28 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":50:13)
#loc29 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":42:23)
#loc30 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":42:36)
#loc31 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":42:53)
#loc32 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":42:17)
#loc33 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":42:63)
#loc34 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":43:13)
#loc35 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":46:13)
#loc36 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":48:13)
#loc37 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":45:30)
#loc38 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":45:25)
#loc39 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":45:17)
#loc40 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":45:41)
#loc41 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":49:17)
#loc42 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":52:9)
#loc43 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":54:5)
#loc44 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":60:5)
#loc45 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":54:11)
#loc46 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":57:15)
#loc47 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":57:9)
#loc48 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":58:9)
#loc49 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":59:9)
#loc50 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":127:1)
#loc51 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":131:1)
#loc52 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":129:5)
#loc53 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":129:13)
#loc54 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":130:5)
#loc55 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":130:13)
#loc56 = loc("/usr/include/stdlib.h":575:1)
#loc57 = loc("/usr/include/stdlib.h":575:41)
#loc58 = loc("/usr/include/time.h":76:1)
#loc59 = loc("/usr/include/time.h":76:38)
#loc60 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":147:15)
#loc61 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":149:15)
#loc62 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":152:15)
#loc63 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":154:15)
#loc64 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":142:1)
#loc65 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":157:1)
#loc70 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":143:1)
#loc71 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":145:27)
#loc72 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":145:22)
#loc73 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":145:5)
#loc74 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":147:5)
#loc75 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":148:5)
#loc76 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":148:53)
#loc77 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":149:5)
#loc78 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":152:5)
#loc79 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":153:5)
#loc80 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":153:52)
#loc81 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":154:5)
#loc82 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":156:12)
#loc83 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":156:5)
#loc84 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":96:23)
#loc85 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":100:23)
#loc86 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":68:1)
#loc87 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":104:1)
#loc88 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":70:5)
#loc89 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":70:9)
#loc90 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":72:14)
#loc91 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":72:13)
#loc92 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":72:5)
#loc93 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":73:5)
#loc94 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":89:5)
#loc95 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":73:11)
#loc96 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":75:9)
#loc97 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":87:9)
#loc98 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":76:13)
#loc99 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":76:49)
#loc100 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":78:13)
#loc101 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":86:13)
#loc102 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":78:23)
#loc103 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":78:36)
#loc104 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":78:53)
#loc105 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":78:17)
#loc106 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":78:63)
#loc107 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":79:13)
#loc108 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":82:13)
#loc109 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":84:13)
#loc110 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":81:30)
#loc111 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":81:25)
#loc112 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":81:17)
#loc113 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":81:41)
#loc114 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":85:27)
#loc115 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":85:17)
#loc116 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":88:9)
#loc117 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":90:5)
#loc118 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":103:5)
#loc119 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":90:11)
#loc120 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":93:9)
#loc121 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":101:9)
#loc122 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":93:13)
#loc123 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":93:21)
#loc124 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":93:23)
#loc125 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":93:26)
#loc126 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":93:35)
#loc127 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":94:9)
#loc128 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":97:9)
#loc129 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":99:9)
#loc130 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":95:19)
#loc131 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":95:13)
#loc132 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":96:13)
#loc133 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":100:13)
#loc134 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":102:9)
#loc135 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":107:1)
#loc136 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":125:1)
#loc137 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":109:5)
#loc138 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":109:9)
#loc139 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":111:14)
#loc140 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":111:13)
#loc141 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":111:5)
#loc142 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":112:5)
#loc143 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":117:5)
#loc144 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":112:11)
#loc145 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":115:17)
#loc146 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":115:9)
#loc147 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":116:9)
#loc148 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":118:5)
#loc149 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":124:5)
#loc150 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":118:11)
#loc151 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":121:15)
#loc152 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":121:9)
#loc153 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":122:19)
#loc154 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":122:9)
#loc155 = loc("CWE400_Resource_Exhaustion__fgets_sleep_16.c":123:9)
#loc156 = loc(fused[#loc1, #loc2])
#loc157 = loc(fused[#loc3, #loc4])
#loc158 = loc(fused[#loc5, #loc6])
#loc159 = loc(fused[#loc7, #loc8])
#loc160 = loc(fused[#loc10, #loc11])
#loc161 = loc(fused[#loc13, #loc14])
#loc162 = loc(fused[#loc15, #loc16])
#loc163 = loc(fused[#loc19, #loc17])
#loc164 = loc(fused[#loc20, #loc21])
#loc165 = loc(fused[#loc23, #loc24])
#loc166 = loc(fused[#loc25, #loc26])
#loc167 = loc(fused[#loc27, #loc28])
#loc168 = loc(fused[#loc32, #loc33])
#loc169 = loc(fused[#loc34, #loc35, #loc36, #loc28])
#loc170 = loc(fused[#loc39, #loc40])
#loc171 = loc(fused[#loc43, #loc44])
#loc172 = loc(fused[#loc50, #loc51])
#loc173 = loc(fused[#loc52, #loc53])
#loc174 = loc(fused[#loc54, #loc55])
#loc175 = loc(fused[#loc56, #loc57])
#loc176 = loc(fused[#loc58, #loc59])
#loc177 = loc(fused[#loc64, #loc65])
#loc180 = loc(fused[#loc75, #loc76])
#loc181 = loc(fused[#loc79, #loc80])
#loc182 = loc(fused[#loc83, #loc82])
#loc183 = loc(fused[#loc86, #loc87])
#loc184 = loc(fused[#loc88, #loc89])
#loc185 = loc(fused[#loc92, #loc90])
#loc186 = loc(fused[#loc93, #loc94])
#loc187 = loc(fused[#loc96, #loc97])
#loc188 = loc(fused[#loc98, #loc99])
#loc189 = loc(fused[#loc100, #loc101])
#loc190 = loc(fused[#loc105, #loc106])
#loc191 = loc(fused[#loc107, #loc108, #loc109, #loc101])
#loc192 = loc(fused[#loc112, #loc113])
#loc193 = loc(fused[#loc117, #loc118])
#loc194 = loc(fused[#loc120, #loc121])
#loc195 = loc(fused[#loc122, #loc123])
#loc196 = loc(fused[#loc125, #loc126])
#loc197 = loc(fused[#loc127, #loc128, #loc129, #loc121])
#loc198 = loc(fused[#loc135, #loc136])
#loc199 = loc(fused[#loc137, #loc138])
#loc200 = loc(fused[#loc141, #loc139])
#loc201 = loc(fused[#loc142, #loc143])
#loc202 = loc(fused[#loc146, #loc145])
#loc203 = loc(fused[#loc148, #loc149])
