!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc154)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc155)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc156)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc157)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc158)
  cir.func private @printIntLine(!s32i) loc(#loc159)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_323badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc161)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc162)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc163)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc162)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc163)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc23)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc164)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc166)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc28)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc29)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc166)
      cir.scope {
        %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc168)
        %11 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc168)
        cir.store %11, %10 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc168)
        cir.scope {
          %12 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc36)
          %13 = cir.const #cir.int<3> : !s32i loc(#loc37)
          %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc37)
          %15 = cir.const #cir.int<4> : !u64i loc(#loc37)
          %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc37)
          %17 = cir.const #cir.int<2> : !s32i loc(#loc37)
          %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc37)
          %19 = cir.binop(add, %16, %18) : !u64i loc(#loc37)
          %20 = cir.cast(integral, %19 : !u64i), !s32i loc(#loc37)
          %21 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc155)
          %22 = cir.load %21 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc38)
          %23 = cir.call @fgets(%12, %20, %22) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc39)
          %24 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc40)
          %25 = cir.cmp(ne, %23, %24) : !cir.ptr<!s8i>, !cir.bool loc(#loc170)
          cir.if %25 {
            %26 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc44)
            %27 = cir.call @atoi(%26) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc45)
            cir.store %27, %5 : !s32i, !cir.ptr<!s32i> loc(#loc172)
          } else {
            %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
            %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
            cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc48)
          } loc(#loc171)
        } loc(#loc169)
      } loc(#loc167)
      %8 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc49)
      %9 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc50)
      cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    } loc(#loc165)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc175)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc55)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc56)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc175)
      cir.scope {
        %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc177)
        %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc178)
        %10 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc179)
        %11 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc64)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc64)
        %13 = cir.const #cir.int<4> : !u64i loc(#loc180)
        %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc181)
        cir.store %14, %8 : !u64i, !cir.ptr<!u64i> loc(#loc182)
        %15 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc68)
        %16 = cir.call @_Znam(%15) : (!u64i) -> !cir.ptr<!void> loc(#loc69)
        %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc183)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc183)
        cir.store %18, %10 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc184)
        cir.scope {
          %24 = cir.const #cir.int<0> : !s32i loc(#loc75)
          %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc75)
          cir.store %25, %9 : !u64i, !cir.ptr<!u64i> loc(#loc186)
          cir.for : cond {
            %26 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc77)
            %27 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc78)
            %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc78)
            %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc187)
            cir.condition(%29) loc(#loc187)
          } body {
            cir.scope {
              %26 = cir.const #cir.int<0> : !s32i loc(#loc80)
              %27 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc81)
              %28 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc82)
              %29 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %28 : !u64i), !cir.ptr<!s32i> loc(#loc83)
              cir.store %26, %29 : !s32i, !cir.ptr<!s32i> loc(#loc189)
            } loc(#loc188)
            cir.yield loc(#loc74)
          } step {
            %26 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc84)
            %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc85)
            cir.store %27, %9 : !u64i, !cir.ptr<!u64i> loc(#loc190)
            cir.yield loc(#loc185)
          } loc(#loc185)
        } loc(#loc185)
        %19 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc86)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc87)
        %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc88)
        %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc86)
        cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc89)
        %23 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc90)
        cir.delete.array %23 : <!s32i> loc(#loc90)
      } loc(#loc176)
    } loc(#loc174)
    cir.return loc(#loc15)
  } loc(#loc160)
  cir.func internal private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc192)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc193)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc194)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc193)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc194)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc100)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc195)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc197)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc105)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc106)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc197)
      %8 = cir.const #cir.int<20> : !s32i loc(#loc107)
      cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc198)
      %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc109)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc110)
      cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc199)
    } loc(#loc196)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc201)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc115)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc116)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc201)
      cir.scope {
        %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc203)
        %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc204)
        %10 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc205)
        %11 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc124)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc124)
        %13 = cir.const #cir.int<4> : !u64i loc(#loc206)
        %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc207)
        cir.store %14, %8 : !u64i, !cir.ptr<!u64i> loc(#loc208)
        %15 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc128)
        %16 = cir.call @_Znam(%15) : (!u64i) -> !cir.ptr<!void> loc(#loc129)
        %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc209)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc209)
        cir.store %18, %10 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc210)
        cir.scope {
          %24 = cir.const #cir.int<0> : !s32i loc(#loc135)
          %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc135)
          cir.store %25, %9 : !u64i, !cir.ptr<!u64i> loc(#loc212)
          cir.for : cond {
            %26 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc137)
            %27 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc138)
            %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc138)
            %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc213)
            cir.condition(%29) loc(#loc213)
          } body {
            cir.scope {
              %26 = cir.const #cir.int<0> : !s32i loc(#loc140)
              %27 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc141)
              %28 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc142)
              %29 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %28 : !u64i), !cir.ptr<!s32i> loc(#loc143)
              cir.store %26, %29 : !s32i, !cir.ptr<!s32i> loc(#loc215)
            } loc(#loc214)
            cir.yield loc(#loc134)
          } step {
            %26 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc144)
            %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc145)
            cir.store %27, %9 : !u64i, !cir.ptr<!u64i> loc(#loc216)
            cir.yield loc(#loc211)
          } loc(#loc211)
        } loc(#loc211)
        %19 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc146)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc147)
        %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc148)
        %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc146)
        cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc149)
        %23 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc150)
        cir.delete.array %23 : <!s32i> loc(#loc150)
      } loc(#loc202)
    } loc(#loc200)
    cir.return loc(#loc92)
  } loc(#loc191)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_324goodEv() extra(#fn_attr1) {
    cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32L7goodG2BEv() : () -> () loc(#loc153)
    cir.return loc(#loc152)
  } loc(#loc217)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":45:27)
#loc10 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc11 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc12 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":26:1)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":66:1)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":28:5)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":28:9)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":29:5)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":29:22)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":30:5)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":30:22)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":32:13)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":32:12)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":32:5)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":33:5)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":49:5)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":34:9)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":34:21)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":34:20)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":35:9)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":47:9)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":36:13)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":36:49)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":38:13)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":46:13)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":38:23)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":38:36)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":38:53)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":38:17)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":38:63)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":39:13)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":42:13)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":44:13)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":41:29)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":41:24)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":41:17)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":41:40)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":45:17)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":48:21)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":48:10)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":48:9)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":50:5)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":65:5)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":51:9)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":51:21)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":51:20)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":52:9)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":64:9)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":53:13)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":53:20)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":53:30)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":54:13)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":54:18)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":56:25)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":56:32)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":56:42)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":56:13)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":57:41)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":26:6)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":57:32)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":57:50)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":57:13)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":58:13)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":61:13)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":58:22)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":58:18)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":58:25)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":58:37)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":59:13)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":60:33)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":60:17)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":60:28)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":60:29)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":58:44)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":58:43)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":62:26)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":62:37)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":62:38)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":62:13)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":63:23)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":73:1)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":102:1)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":75:5)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":75:9)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":76:5)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":76:22)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":77:5)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":77:22)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":79:13)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":79:12)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":79:5)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":80:5)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":85:5)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":81:9)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":81:21)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":81:20)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":83:16)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":83:9)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":84:21)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":84:10)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":84:9)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":86:5)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":101:5)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":87:9)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":87:21)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":87:20)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":88:9)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":100:9)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":89:13)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":89:20)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":89:30)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":90:13)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":90:18)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":92:25)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":92:32)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":92:42)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":92:13)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":93:41)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":73:13)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":93:32)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":93:50)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":93:13)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":94:13)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":97:13)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":94:22)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":94:18)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":94:25)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":94:37)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":95:13)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":96:33)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":96:17)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":96:28)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":96:29)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":94:44)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":94:43)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":98:26)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":98:37)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":98:38)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":98:13)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":99:23)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":104:1)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":107:1)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_32.cpp":106:5)
#loc154 = loc(fused[#loc1, #loc2])
#loc155 = loc(fused[#loc3, #loc4])
#loc156 = loc(fused[#loc5, #loc6])
#loc157 = loc(fused[#loc7, #loc8])
#loc158 = loc(fused[#loc10, #loc11])
#loc159 = loc(fused[#loc12, #loc13])
#loc160 = loc(fused[#loc14, #loc15])
#loc161 = loc(fused[#loc16, #loc17])
#loc162 = loc(fused[#loc18, #loc19])
#loc163 = loc(fused[#loc20, #loc21])
#loc164 = loc(fused[#loc24, #loc22])
#loc165 = loc(fused[#loc25, #loc26])
#loc166 = loc(fused[#loc27, #loc28])
#loc167 = loc(fused[#loc30, #loc31])
#loc168 = loc(fused[#loc32, #loc33])
#loc169 = loc(fused[#loc34, #loc35])
#loc170 = loc(fused[#loc39, #loc40])
#loc171 = loc(fused[#loc41, #loc42, #loc43, #loc35])
#loc172 = loc(fused[#loc46, #loc47])
#loc173 = loc(fused[#loc51, #loc49])
#loc174 = loc(fused[#loc52, #loc53])
#loc175 = loc(fused[#loc54, #loc55])
#loc176 = loc(fused[#loc57, #loc58])
#loc177 = loc(fused[#loc59, #loc60])
#loc178 = loc(fused[#loc59, #loc61])
#loc179 = loc(fused[#loc62, #loc63])
#loc180 = loc(fused[#loc65, #loc66])
#loc181 = loc(fused[#loc64, #loc66])
#loc182 = loc(fused[#loc67, #loc66])
#loc183 = loc(fused[#loc70, #loc71])
#loc184 = loc(fused[#loc72, #loc71])
#loc185 = loc(fused[#loc73, #loc74])
#loc186 = loc(fused[#loc76, #loc75])
#loc187 = loc(fused[#loc77, #loc78])
#loc188 = loc(fused[#loc79, #loc74])
#loc189 = loc(fused[#loc81, #loc80])
#loc190 = loc(fused[#loc85, #loc84])
#loc191 = loc(fused[#loc91, #loc92])
#loc192 = loc(fused[#loc93, #loc94])
#loc193 = loc(fused[#loc95, #loc96])
#loc194 = loc(fused[#loc97, #loc98])
#loc195 = loc(fused[#loc101, #loc99])
#loc196 = loc(fused[#loc102, #loc103])
#loc197 = loc(fused[#loc104, #loc105])
#loc198 = loc(fused[#loc108, #loc107])
#loc199 = loc(fused[#loc111, #loc109])
#loc200 = loc(fused[#loc112, #loc113])
#loc201 = loc(fused[#loc114, #loc115])
#loc202 = loc(fused[#loc117, #loc118])
#loc203 = loc(fused[#loc119, #loc120])
#loc204 = loc(fused[#loc119, #loc121])
#loc205 = loc(fused[#loc122, #loc123])
#loc206 = loc(fused[#loc125, #loc126])
#loc207 = loc(fused[#loc124, #loc126])
#loc208 = loc(fused[#loc127, #loc126])
#loc209 = loc(fused[#loc130, #loc131])
#loc210 = loc(fused[#loc132, #loc131])
#loc211 = loc(fused[#loc133, #loc134])
#loc212 = loc(fused[#loc136, #loc135])
#loc213 = loc(fused[#loc137, #loc138])
#loc214 = loc(fused[#loc139, #loc134])
#loc215 = loc(fused[#loc141, #loc140])
#loc216 = loc(fused[#loc145, #loc144])
#loc217 = loc(fused[#loc151, #loc152])
