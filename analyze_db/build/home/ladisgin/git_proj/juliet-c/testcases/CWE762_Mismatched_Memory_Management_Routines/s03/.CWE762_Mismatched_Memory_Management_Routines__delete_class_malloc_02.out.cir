!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc105 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc166 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":155:10)
#loc167 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":155:14)
#loc168 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":155:20)
#loc169 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":155:32)
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
#loc252 = loc(fused[#loc166, #loc167])
#loc253 = loc(fused[#loc168, #loc169])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s03/CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc182)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc183)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc184)
  cir.func @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_023badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc186)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc187)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc15)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc15)
      cir.if %3 {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc17)
        %5 = cir.const #cir.int<100> : !s32i loc(#loc18)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc18)
        %7 = cir.const #cir.int<8> : !u64i loc(#loc190)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc191)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc17)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc192)
        cir.store %10, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc193)
        cir.scope {
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc25)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc26)
          %13 = cir.cmp(eq, %11, %12) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc195)
          cir.if %13 {
            %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc28)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc29)
            %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc30)
            cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc28)
          } loc(#loc196)
        } loc(#loc194)
      } loc(#loc189)
    } loc(#loc188)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc33)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc33)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc35)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc35)
        cir.call @_ZdlPv(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc36)
      } loc(#loc198)
    } loc(#loc197)
    cir.return loc(#loc8)
  } loc(#loc185)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc37)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc199)
  cir.func internal private @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc201)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc44)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc202)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc48)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc48)
      cir.if %3 {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc50)
        %5 = cir.const #cir.int<100> : !s32i loc(#loc51)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc51)
        %7 = cir.const #cir.int<8> : !u64i loc(#loc205)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc206)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc50)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc207)
        cir.store %10, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc208)
        cir.scope {
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc58)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc59)
          %13 = cir.cmp(eq, %11, %12) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc210)
          cir.if %13 {
            %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc61)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc62)
            %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc63)
            cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc61)
          } loc(#loc211)
        } loc(#loc209)
      } loc(#loc204)
    } loc(#loc203)
    cir.scope {
      %2 = cir.const #cir.int<0> : !s32i loc(#loc66)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc66)
      cir.if %3 {
        %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc37)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc37)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc70)
      } else {
        %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc71)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc72)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc72)
        cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc71)
      } loc(#loc213)
    } loc(#loc212)
    cir.return loc(#loc41)
  } loc(#loc200)
  cir.func internal private @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc215)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc77)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc216)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc81)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc81)
      cir.if %3 {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc83)
        %5 = cir.const #cir.int<100> : !s32i loc(#loc84)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc84)
        %7 = cir.const #cir.int<8> : !u64i loc(#loc219)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc220)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc83)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc221)
        cir.store %10, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc222)
        cir.scope {
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc91)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc92)
          %13 = cir.cmp(eq, %11, %12) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc224)
          cir.if %13 {
            %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc94)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc95)
            %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc96)
            cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc94)
          } loc(#loc225)
        } loc(#loc223)
      } loc(#loc218)
    } loc(#loc217)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc99)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc99)
      cir.if %3 {
        %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc101)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc102)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc102)
        cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc101)
      } loc(#loc227)
    } loc(#loc226)
    cir.return loc(#loc74)
  } loc(#loc214)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc228)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc105)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc105)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc105)
    cir.return loc(#loc105)
  } loc(#loc105)
  cir.func internal private @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc230)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc110)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc231)
    cir.scope {
      %2 = cir.const #cir.int<0> : !s32i loc(#loc114)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc114)
      cir.if %3 {
        %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc118)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc118)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc119)
      } else {
        %4 = cir.const #cir.int<8> : !u64i loc(#loc234)
        %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc122)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc234)
        cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc121)
        cir.store %6, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc235)
      } loc(#loc233)
    } loc(#loc232)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc126)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc126)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc128)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc128)
        cir.call @_ZdlPv(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc122)
      } loc(#loc237)
    } loc(#loc236)
    cir.return loc(#loc107)
  } loc(#loc229)
  cir.func internal private @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc239)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc133)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc240)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc137)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc137)
      cir.if %3 {
        %4 = cir.const #cir.int<8> : !u64i loc(#loc243)
        %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc141)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc243)
        cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc140)
        cir.store %6, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc244)
      } loc(#loc242)
    } loc(#loc241)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc145)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc145)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc147)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc147)
        cir.call @_ZdlPv(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc141)
      } loc(#loc246)
    } loc(#loc245)
    cir.return loc(#loc130)
  } loc(#loc238)
  cir.func @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_024goodEv() extra(#fn_attr1) {
    cir.call @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02L8goodB2G1Ev() : () -> () loc(#loc150)
    cir.call @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02L8goodB2G2Ev() : () -> () loc(#loc151)
    cir.call @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02L8goodG2B1Ev() : () -> () loc(#loc152)
    cir.call @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02L8goodG2B2Ev() : () -> () loc(#loc153)
    cir.return loc(#loc149)
  } loc(#loc247)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc248)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc249)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc250)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc160)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc161)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc162)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc163)
  cir.func @main(%arg0: !s32i loc(fused[#loc166, #loc167]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc168, #loc169])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc252)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc253)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc165)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc170)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc170)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc171)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc172)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc172)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc173)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc160)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc160)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc174)
    cir.call @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_024goodEv() : () -> () loc(#loc175)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc161)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc161)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc176)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc162)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc162)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc177)
    cir.call @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_023badEv() : () -> () loc(#loc178)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc163)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc163)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc179)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc180)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc254)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc254)
    cir.return %15 : !s32i loc(#loc254)
  } loc(#loc251)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s03/CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc6 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":25:1)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":42:1)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":27:5)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":27:20)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":29:12)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":29:5)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":30:5)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":35:5)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":30:8)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":31:5)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":33:32)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":33:39)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":33:43)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":33:62)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":33:63)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":33:9)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":34:9)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":34:37)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":34:13)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":34:21)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":34:27)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":34:28)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":34:34)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":34:33)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":36:5)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":41:5)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":36:8)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":37:5)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":40:16)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":25:6)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":63:19)
#loc38 = loc("/usr/include/stdlib.h":687:1)
#loc39 = loc("/usr/include/stdlib.h":687:32)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":49:1)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":70:1)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":51:5)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":51:20)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":53:12)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":53:5)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":54:5)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":59:5)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":54:8)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":55:5)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":57:32)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":57:39)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":57:43)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":57:62)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":57:63)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":57:9)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":58:9)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":58:37)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":58:13)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":58:21)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":58:27)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":58:28)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":58:34)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":58:33)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":60:5)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":69:5)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":60:8)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":61:5)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":64:5)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":66:5)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":63:9)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":68:9)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":68:14)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":73:1)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":89:1)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":75:5)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":75:20)
#loc77 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":77:12)
#loc78 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":77:5)
#loc79 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":78:5)
#loc80 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":83:5)
#loc81 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":78:8)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":79:5)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":81:32)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":81:39)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":81:43)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":81:62)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":81:63)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":81:9)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":82:9)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":82:37)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":82:13)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":82:21)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":82:27)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":82:28)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":82:34)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":82:33)
#loc97 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":84:5)
#loc98 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":88:5)
#loc99 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":84:8)
#loc100 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":85:5)
#loc101 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":87:9)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":87:14)
#loc103 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc104 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":92:1)
#loc107 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":113:1)
#loc108 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":94:5)
#loc109 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":94:20)
#loc110 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":96:12)
#loc111 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":96:5)
#loc112 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":97:5)
#loc113 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":106:5)
#loc114 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":97:8)
#loc115 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":98:5)
#loc116 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":101:5)
#loc117 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":103:5)
#loc118 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":100:19)
#loc119 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":100:9)
#loc120 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":105:16)
#loc121 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":105:20)
#loc122 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":92:13)
#loc123 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":105:9)
#loc124 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":107:5)
#loc125 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":112:5)
#loc126 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":107:8)
#loc127 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":108:5)
#loc128 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":111:16)
#loc129 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":116:1)
#loc130 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":132:1)
#loc131 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":118:5)
#loc132 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":118:20)
#loc133 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":120:12)
#loc134 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":120:5)
#loc135 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":121:5)
#loc136 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":125:5)
#loc137 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":121:8)
#loc138 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":122:5)
#loc139 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":124:16)
#loc140 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":124:20)
#loc141 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":116:13)
#loc142 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":124:9)
#loc143 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":126:5)
#loc144 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":131:5)
#loc145 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":126:8)
#loc146 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":127:5)
#loc147 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":130:16)
#loc148 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":134:1)
#loc149 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":140:1)
#loc150 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":136:5)
#loc151 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":137:5)
#loc152 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":138:5)
#loc153 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":139:5)
#loc154 = loc("/usr/include/stdlib.h":575:1)
#loc155 = loc("/usr/include/stdlib.h":575:41)
#loc156 = loc("/usr/include/time.h":76:1)
#loc157 = loc("/usr/include/time.h":76:38)
#loc158 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc159 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc160 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":160:15)
#loc161 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":162:15)
#loc162 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":165:15)
#loc163 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":167:15)
#loc164 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":155:1)
#loc165 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":170:1)
#loc170 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":156:1)
#loc171 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":158:27)
#loc172 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":158:22)
#loc173 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":158:5)
#loc174 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":160:5)
#loc175 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":161:5)
#loc176 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":162:5)
#loc177 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":165:5)
#loc178 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":166:5)
#loc179 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":167:5)
#loc180 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":169:12)
#loc181 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_02.cpp":169:5)
#loc182 = loc(fused[#loc1, #loc2])
#loc183 = loc(fused[#loc3, #loc4])
#loc184 = loc(fused[#loc5, #loc6])
#loc185 = loc(fused[#loc7, #loc8])
#loc186 = loc(fused[#loc9, #loc10])
#loc187 = loc(fused[#loc12, #loc11])
#loc188 = loc(fused[#loc13, #loc14])
#loc189 = loc(fused[#loc16, #loc14])
#loc190 = loc(fused[#loc19, #loc20])
#loc191 = loc(fused[#loc18, #loc20])
#loc192 = loc(fused[#loc17, #loc21])
#loc193 = loc(fused[#loc22, #loc21])
#loc194 = loc(fused[#loc23, #loc24])
#loc195 = loc(fused[#loc25, #loc26])
#loc196 = loc(fused[#loc27, #loc24])
#loc197 = loc(fused[#loc31, #loc32])
#loc198 = loc(fused[#loc34, #loc32])
#loc199 = loc(fused[#loc38, #loc39])
#loc200 = loc(fused[#loc40, #loc41])
#loc201 = loc(fused[#loc42, #loc43])
#loc202 = loc(fused[#loc45, #loc44])
#loc203 = loc(fused[#loc46, #loc47])
#loc204 = loc(fused[#loc49, #loc47])
#loc205 = loc(fused[#loc52, #loc53])
#loc206 = loc(fused[#loc51, #loc53])
#loc207 = loc(fused[#loc50, #loc54])
#loc208 = loc(fused[#loc55, #loc54])
#loc209 = loc(fused[#loc56, #loc57])
#loc210 = loc(fused[#loc58, #loc59])
#loc211 = loc(fused[#loc60, #loc57])
#loc212 = loc(fused[#loc64, #loc65])
#loc213 = loc(fused[#loc67, #loc68, #loc69, #loc65])
#loc214 = loc(fused[#loc73, #loc74])
#loc215 = loc(fused[#loc75, #loc76])
#loc216 = loc(fused[#loc78, #loc77])
#loc217 = loc(fused[#loc79, #loc80])
#loc218 = loc(fused[#loc82, #loc80])
#loc219 = loc(fused[#loc85, #loc86])
#loc220 = loc(fused[#loc84, #loc86])
#loc221 = loc(fused[#loc83, #loc87])
#loc222 = loc(fused[#loc88, #loc87])
#loc223 = loc(fused[#loc89, #loc90])
#loc224 = loc(fused[#loc91, #loc92])
#loc225 = loc(fused[#loc93, #loc90])
#loc226 = loc(fused[#loc97, #loc98])
#loc227 = loc(fused[#loc100, #loc98])
#loc228 = loc(fused[#loc103, #loc104])
#loc229 = loc(fused[#loc106, #loc107])
#loc230 = loc(fused[#loc108, #loc109])
#loc231 = loc(fused[#loc111, #loc110])
#loc232 = loc(fused[#loc112, #loc113])
#loc233 = loc(fused[#loc115, #loc116, #loc117, #loc113])
#loc234 = loc(fused[#loc120, #loc121])
#loc235 = loc(fused[#loc123, #loc121])
#loc236 = loc(fused[#loc124, #loc125])
#loc237 = loc(fused[#loc127, #loc125])
#loc238 = loc(fused[#loc129, #loc130])
#loc239 = loc(fused[#loc131, #loc132])
#loc240 = loc(fused[#loc134, #loc133])
#loc241 = loc(fused[#loc135, #loc136])
#loc242 = loc(fused[#loc138, #loc136])
#loc243 = loc(fused[#loc139, #loc140])
#loc244 = loc(fused[#loc142, #loc140])
#loc245 = loc(fused[#loc143, #loc144])
#loc246 = loc(fused[#loc146, #loc144])
#loc247 = loc(fused[#loc148, #loc149])
#loc248 = loc(fused[#loc154, #loc155])
#loc249 = loc(fused[#loc156, #loc157])
#loc250 = loc(fused[#loc158, #loc159])
#loc251 = loc(fused[#loc164, #loc165])
#loc254 = loc(fused[#loc181, #loc180])
