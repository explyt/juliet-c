!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc37 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":98:10)
#loc38 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":98:14)
#loc39 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":98:20)
#loc40 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":98:32)
#loc155 = loc(fused[#loc37, #loc38])
#loc156 = loc(fused[#loc39, #loc40])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc141)
  cir.func no_proto @CWE758_Undefined_Behavior__int_pointer_alloca_use_02_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc143)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc144)
    cir.br ^bb1 loc(#loc145)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<1> : !s32i loc(#loc11)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc11)
    cir.brcond %3 ^bb2, ^bb5 loc(#loc146)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc147)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.int<8> : !u64i loc(#loc6)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc6)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc6)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc6)
    cir.store %7, %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc143)
    %8 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc8)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc15)
    cir.store %9, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc144)
    %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc16)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc17)
    cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc18)
    cir.br ^bb4 loc(#loc14)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc10)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc10)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc4)
  } loc(#loc142)
  cir.func no_proto @CWE758_Undefined_Behavior__int_pointer_alloca_use_02_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc149)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc21)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc150)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc23)
    cir.return loc(#loc20)
  } loc(#loc148)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc151)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc152)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc153)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc31)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc32)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc33)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc34)
  cir.func @main(%arg0: !s32i loc(fused[#loc37, #loc38]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc39, #loc40])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc155)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc156)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc36)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc41)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc41)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc42)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc43)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc43)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc44)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc31)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc31)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    %8 = cir.get_global @CWE758_Undefined_Behavior__int_pointer_alloca_use_02_good : !cir.ptr<!cir.func<!void ()>> loc(#loc157)
    cir.call @CWE758_Undefined_Behavior__int_pointer_alloca_use_02_good() : () -> () loc(#loc46)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc32)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc32)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc33)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc33)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    %13 = cir.get_global @CWE758_Undefined_Behavior__int_pointer_alloca_use_02_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc158)
    cir.call @CWE758_Undefined_Behavior__int_pointer_alloca_use_02_bad() : () -> () loc(#loc50)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc34)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc53)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc159)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    cir.return %17 : !s32i loc(#loc159)
  } loc(#loc154)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc55)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc160)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc161)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc163)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc164)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc165)
    cir.br ^bb1 loc(#loc166)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc70)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc167)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc55)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    cir.br ^bb12 loc(#loc72)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc168)
  ^bb4:  // pred: ^bb3
    %7 = cir.const #cir.int<8> : !u64i loc(#loc65)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc65)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc65)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc65)
    cir.store %10, %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc164)
    %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc77)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc169)
    %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc77)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc170)
    cir.store %14, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc171)
    cir.br ^bb5 loc(#loc172)
  ^bb5:  // pred: ^bb4
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc84)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc85)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc85)
    %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s32i>, !cir.bool loc(#loc173)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc174)
  ^bb6:  // pred: ^bb5
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc87)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc89)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr1) loc(#loc87)
    cir.br ^bb7 loc(#loc83)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc83)
  ^bb8:  // pred: ^bb7
    %22 = cir.const #cir.int<5> : !s32i loc(#loc90)
    %23 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc91)
    cir.store %22, %23 : !s32i, !cir.ptr<!s32i> loc(#loc175)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc93)
    %25 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc94)
    cir.store %24, %25 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc176)
    cir.br ^bb9 loc(#loc177)
  ^bb9:  // pred: ^bb8
    %26 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc67)
    %27 = cir.load %26 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc98)
    cir.store %27, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc165)
    %28 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc99)
    %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc101)
    cir.br ^bb10 loc(#loc97)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc76)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc69)
  ^bb12:  // 2 preds: ^bb2, ^bb11
    cir.br ^bb13 loc(#loc69)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc61)
  } loc(#loc162)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc179)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc180)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc181)
    cir.br ^bb1 loc(#loc182)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc112)
    cir.brcond %4 ^bb2, ^bb11 loc(#loc183)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc184)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.int<8> : !u64i loc(#loc107)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc107)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc107)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc107)
    cir.store %8, %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc180)
    %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc116)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc185)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc116)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc186)
    cir.store %12, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc187)
    cir.br ^bb4 loc(#loc188)
  ^bb4:  // pred: ^bb3
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc123)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc124)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc124)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc189)
    cir.brcond %16 ^bb5, ^bb6 loc(#loc190)
  ^bb5:  // pred: ^bb4
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc126)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc127)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc128)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr1) loc(#loc126)
    cir.br ^bb6 loc(#loc122)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc122)
  ^bb7:  // pred: ^bb6
    %20 = cir.const #cir.int<5> : !s32i loc(#loc129)
    %21 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc130)
    cir.store %20, %21 : !s32i, !cir.ptr<!s32i> loc(#loc191)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc132)
    %23 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc133)
    cir.store %22, %23 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc192)
    cir.br ^bb8 loc(#loc193)
  ^bb8:  // pred: ^bb7
    %24 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc109)
    %25 = cir.load %24 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc137)
    cir.store %25, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc181)
    %26 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc138)
    %27 = cir.load %26 : !cir.ptr<!s32i>, !s32i loc(#loc139)
    cir.call @printIntLine(%27) : (!s32i) -> () loc(#loc140)
    cir.br ^bb9 loc(#loc136)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc115)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc111)
  ^bb11:  // 2 preds: ^bb1, ^bb10
    cir.br ^bb12 loc(#loc111)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc103)
  } loc(#loc178)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":20:1)
#loc4 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":30:1)
#loc5 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":25:13)
#loc6 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":25:40)
#loc7 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":26:13)
#loc8 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":26:27)
#loc9 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":22:5)
#loc10 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":29:5)
#loc11 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":22:8)
#loc12 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":23:5)
#loc13 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":24:9)
#loc14 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":28:9)
#loc15 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":26:26)
#loc16 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":27:27)
#loc17 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":27:26)
#loc18 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":27:13)
#loc19 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":83:1)
#loc20 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":87:1)
#loc21 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":85:5)
#loc22 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":85:11)
#loc23 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":86:5)
#loc24 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":86:11)
#loc25 = loc("/usr/include/stdlib.h":575:1)
#loc26 = loc("/usr/include/stdlib.h":575:41)
#loc27 = loc("/usr/include/time.h":76:1)
#loc28 = loc("/usr/include/time.h":76:38)
#loc29 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc30 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc31 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":103:15)
#loc32 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":105:15)
#loc33 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":108:15)
#loc34 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":110:15)
#loc35 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":98:1)
#loc36 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":113:1)
#loc41 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":99:1)
#loc42 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":101:27)
#loc43 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":101:22)
#loc44 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":101:5)
#loc45 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":103:5)
#loc46 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":104:5)
#loc47 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":104:63)
#loc48 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":105:5)
#loc49 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":108:5)
#loc50 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":109:5)
#loc51 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":109:62)
#loc52 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":110:5)
#loc53 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":112:12)
#loc54 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":112:5)
#loc55 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":42:19)
#loc56 = loc("/usr/include/stdlib.h":672:1)
#loc57 = loc("/usr/include/stdlib.h":672:45)
#loc58 = loc("/usr/include/stdlib.h":756:1)
#loc59 = loc("/usr/include/stdlib.h":756:70)
#loc60 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":37:1)
#loc61 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":60:1)
#loc62 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":47:13)
#loc63 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":47:19)
#loc64 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":48:13)
#loc65 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":48:40)
#loc66 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":55:17)
#loc67 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":55:31)
#loc68 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":39:5)
#loc69 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":59:5)
#loc70 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":39:8)
#loc71 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":40:5)
#loc72 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":43:5)
#loc73 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":45:5)
#loc74 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":42:9)
#loc75 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":46:9)
#loc76 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":58:9)
#loc77 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":50:27)
#loc78 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":50:34)
#loc79 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":50:44)
#loc80 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":50:45)
#loc81 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":50:13)
#loc82 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":51:13)
#loc83 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":51:41)
#loc84 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":51:17)
#loc85 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":51:25)
#loc86 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":51:31)
#loc87 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":51:32)
#loc88 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":51:38)
#loc89 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":51:37)
#loc90 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":52:21)
#loc91 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":52:14)
#loc92 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":52:13)
#loc93 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":53:24)
#loc94 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":53:14)
#loc95 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":53:13)
#loc96 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":54:13)
#loc97 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":57:13)
#loc98 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":55:30)
#loc99 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":56:31)
#loc100 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":56:30)
#loc101 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":56:17)
#loc102 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":63:1)
#loc103 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":81:1)
#loc104 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":68:13)
#loc105 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":68:19)
#loc106 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":69:13)
#loc107 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":69:40)
#loc108 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":76:17)
#loc109 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":76:31)
#loc110 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":65:5)
#loc111 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":80:5)
#loc112 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":65:8)
#loc113 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":66:5)
#loc114 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":67:9)
#loc115 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":79:9)
#loc116 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":71:27)
#loc117 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":71:34)
#loc118 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":71:44)
#loc119 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":71:45)
#loc120 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":71:13)
#loc121 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":72:13)
#loc122 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":72:41)
#loc123 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":72:17)
#loc124 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":72:25)
#loc125 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":72:31)
#loc126 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":72:32)
#loc127 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":72:38)
#loc128 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":72:37)
#loc129 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":73:21)
#loc130 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":73:14)
#loc131 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":73:13)
#loc132 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":74:24)
#loc133 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":74:14)
#loc134 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":74:13)
#loc135 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":75:13)
#loc136 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":78:13)
#loc137 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":76:30)
#loc138 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":77:31)
#loc139 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":77:30)
#loc140 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_02.c":77:17)
#loc141 = loc(fused[#loc1, #loc2])
#loc142 = loc(fused[#loc3, #loc4])
#loc143 = loc(fused[#loc5, #loc6])
#loc144 = loc(fused[#loc7, #loc8])
#loc145 = loc(fused[#loc9, #loc10])
#loc146 = loc(fused[#loc12, #loc10])
#loc147 = loc(fused[#loc13, #loc14])
#loc148 = loc(fused[#loc19, #loc20])
#loc149 = loc(fused[#loc21, #loc22])
#loc150 = loc(fused[#loc23, #loc24])
#loc151 = loc(fused[#loc25, #loc26])
#loc152 = loc(fused[#loc27, #loc28])
#loc153 = loc(fused[#loc29, #loc30])
#loc154 = loc(fused[#loc35, #loc36])
#loc157 = loc(fused[#loc46, #loc47])
#loc158 = loc(fused[#loc50, #loc51])
#loc159 = loc(fused[#loc54, #loc53])
#loc160 = loc(fused[#loc56, #loc57])
#loc161 = loc(fused[#loc58, #loc59])
#loc162 = loc(fused[#loc60, #loc61])
#loc163 = loc(fused[#loc62, #loc63])
#loc164 = loc(fused[#loc64, #loc65])
#loc165 = loc(fused[#loc66, #loc67])
#loc166 = loc(fused[#loc68, #loc69])
#loc167 = loc(fused[#loc71, #loc72, #loc73, #loc69])
#loc168 = loc(fused[#loc75, #loc76])
#loc169 = loc(fused[#loc78, #loc79])
#loc170 = loc(fused[#loc77, #loc80])
#loc171 = loc(fused[#loc81, #loc80])
#loc172 = loc(fused[#loc82, #loc83])
#loc173 = loc(fused[#loc84, #loc85])
#loc174 = loc(fused[#loc86, #loc83])
#loc175 = loc(fused[#loc92, #loc90])
#loc176 = loc(fused[#loc95, #loc93])
#loc177 = loc(fused[#loc96, #loc97])
#loc178 = loc(fused[#loc102, #loc103])
#loc179 = loc(fused[#loc104, #loc105])
#loc180 = loc(fused[#loc106, #loc107])
#loc181 = loc(fused[#loc108, #loc109])
#loc182 = loc(fused[#loc110, #loc111])
#loc183 = loc(fused[#loc113, #loc111])
#loc184 = loc(fused[#loc114, #loc115])
#loc185 = loc(fused[#loc117, #loc118])
#loc186 = loc(fused[#loc116, #loc119])
#loc187 = loc(fused[#loc120, #loc119])
#loc188 = loc(fused[#loc121, #loc122])
#loc189 = loc(fused[#loc123, #loc124])
#loc190 = loc(fused[#loc125, #loc122])
#loc191 = loc(fused[#loc131, #loc129])
#loc192 = loc(fused[#loc134, #loc132])
#loc193 = loc(fused[#loc135, #loc136])
