!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc229)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc230)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc231)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc232)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc233)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc234)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc235)
  cir.func private @close(!s32i) -> !s32i loc(#loc236)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc237)
  cir.func private @printIntLine(!s32i) loc(#loc238)
  cir.func @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_183badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc240)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc241)
    %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc242)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc243)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc244)
    %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc245)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc36)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc246)
    cir.goto "source" loc(#loc247)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc40)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc30)
    cir.store %9, %3 : !s32i, !cir.ptr<!s32i> loc(#loc243)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc32)
    cir.store %11, %4 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    cir.scope {
      cir.do {
        cir.scope {
          %12 = cir.const #cir.int<2> : !s32i loc(#loc45)
          %13 = cir.const #cir.int<1> : !u32i loc(#loc46)
          %14 = cir.cast(integral, %13 : !u32i), !s32i loc(#loc46)
          %15 = cir.const #cir.int<6> : !u32i loc(#loc47)
          %16 = cir.cast(integral, %15 : !u32i), !s32i loc(#loc47)
          %17 = cir.call @socket(%12, %14, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc48)
          cir.store %17, %3 : !s32i, !cir.ptr<!s32i> loc(#loc250)
          cir.scope {
            %58 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc53)
            %59 = cir.const #cir.int<1> : !s32i loc(#loc54)
            %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc54)
            %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc252)
            cir.if %61 {
              cir.break loc(#loc56)
            } loc(#loc253)
          } loc(#loc251)
          %18 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc254)
          %19 = cir.const #cir.int<0> : !s32i loc(#loc59)
          %20 = cir.const #cir.int<16> : !u64i loc(#loc255)
          cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc256)
          %21 = cir.const #cir.int<2> : !s32i loc(#loc64)
          %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc64)
          %23 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
          cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc257)
          %24 = cir.const #cir.int<0> : !s32i loc(#loc67)
          %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc67)
          %26 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
          %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
          cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc258)
          %28 = cir.const #cir.int<27015> : !s32i loc(#loc71)
          %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc71)
          %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc72)
          %31 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
          cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc259)
          cir.scope {
            %58 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc78)
            %59 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc261)
            %60 = cir.const #cir.int<16> : !u64i loc(#loc262)
            %61 = cir.cast(integral, %60 : !u64i), !u32i loc(#loc262)
            %62 = cir.call @bind(%58, %59, %61) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc83)
            %63 = cir.const #cir.int<1> : !s32i loc(#loc84)
            %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc84)
            %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc263)
            cir.if %65 {
              cir.break loc(#loc86)
            } loc(#loc264)
          } loc(#loc260)
          cir.scope {
            %58 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc89)
            %59 = cir.const #cir.int<5> : !s32i loc(#loc90)
            %60 = cir.call @listen(%58, %59) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc91)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc92)
            %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc92)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc266)
            cir.if %63 {
              cir.break loc(#loc94)
            } loc(#loc267)
          } loc(#loc265)
          %32 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc95)
          %33 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc96)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc97)
          %35 = cir.call @accept(%32, %33, %34) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc98)
          cir.store %35, %4 : !s32i, !cir.ptr<!s32i> loc(#loc268)
          cir.scope {
            %58 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc103)
            %59 = cir.const #cir.int<1> : !s32i loc(#loc104)
            %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc104)
            %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc270)
            cir.if %61 {
              cir.break loc(#loc106)
            } loc(#loc271)
          } loc(#loc269)
          %36 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc107)
          %37 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc108)
          %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc108)
          %39 = cir.const #cir.int<3> : !s32i loc(#loc109)
          %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc109)
          %41 = cir.const #cir.int<4> : !u64i loc(#loc109)
          %42 = cir.binop(mul, %40, %41) : !u64i loc(#loc109)
          %43 = cir.const #cir.int<2> : !s32i loc(#loc109)
          %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc109)
          %45 = cir.binop(add, %42, %44) : !u64i loc(#loc109)
          %46 = cir.const #cir.int<1> : !s32i loc(#loc110)
          %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc110)
          %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc272)
          %49 = cir.const #cir.int<0> : !s32i loc(#loc111)
          %50 = cir.call @recv(%36, %38, %48, %49) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc112)
          %51 = cir.cast(integral, %50 : !s64i), !s32i loc(#loc112)
          cir.store %51, %1 : !s32i, !cir.ptr<!s32i> loc(#loc273)
          cir.scope {
            %58 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc117)
            %59 = cir.const #cir.int<1> : !s32i loc(#loc118)
            %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc118)
            %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc275)
            %62 = cir.ternary(%61, true {
              %63 = cir.const #true loc(#loc119)
              cir.yield %63 : !cir.bool loc(#loc119)
            }, false {
              %63 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc120)
              %64 = cir.const #cir.int<0> : !s32i loc(#loc121)
              %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc276)
              %66 = cir.ternary(%65, true {
                %67 = cir.const #true loc(#loc119)
                cir.yield %67 : !cir.bool loc(#loc119)
              }, false {
                %67 = cir.const #false loc(#loc119)
                cir.yield %67 : !cir.bool loc(#loc119)
              }) : (!cir.bool) -> !cir.bool loc(#loc119)
              cir.yield %66 : !cir.bool loc(#loc119)
            }) : (!cir.bool) -> !cir.bool loc(#loc119)
            cir.if %62 {
              cir.break loc(#loc123)
            } loc(#loc277)
          } loc(#loc274)
          %52 = cir.const #cir.int<0> : !s8i loc(#loc124)
          %53 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc125)
          %54 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc126)
          %55 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %53 : !s32i), !cir.ptr<!s8i> loc(#loc126)
          cir.store %52, %55 : !s8i, !cir.ptr<!s8i> loc(#loc278)
          %56 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc127)
          %57 = cir.call @atoi(%56) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc128)
          cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc279)
        } loc(#loc249)
        cir.yield loc(#loc42)
      } while {
        %12 = cir.const #cir.int<0> : !s32i loc(#loc131)
        %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc131)
        cir.condition(%13) loc(#loc131)
      } loc(#loc248)
    } loc(#loc248)
    cir.scope {
      %12 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc134)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc135)
      %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc135)
      %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc281)
      cir.if %15 {
        %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc137)
        %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc138)
      } loc(#loc282)
    } loc(#loc280)
    cir.scope {
      %12 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc141)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc142)
      %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc142)
      %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc284)
      cir.if %15 {
        %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc144)
        %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc145)
      } loc(#loc285)
    } loc(#loc283)
    cir.scope {
      %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc287)
      %13 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc288)
      %14 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc289)
      %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc153)
      %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc153)
      %17 = cir.const #cir.int<4> : !u64i loc(#loc290)
      %18 = cir.binop(mul, %16, %17) : !u64i loc(#loc291)
      cir.store %18, %12 : !u64i, !cir.ptr<!u64i> loc(#loc292)
      %19 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc157)
      %20 = cir.call @_Znam(%19) : (!u64i) -> !cir.ptr<!void> loc(#loc158)
      %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc293)
      %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc293)
      cir.store %22, %14 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc294)
      cir.scope {
        %28 = cir.const #cir.int<0> : !s32i loc(#loc164)
        %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc164)
        cir.store %29, %13 : !u64i, !cir.ptr<!u64i> loc(#loc296)
        cir.for : cond {
          %30 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc166)
          %31 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc167)
          %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc167)
          %33 = cir.cmp(lt, %30, %32) : !u64i, !cir.bool loc(#loc297)
          cir.condition(%33) loc(#loc297)
        } body {
          cir.scope {
            %30 = cir.const #cir.int<0> : !s32i loc(#loc169)
            %31 = cir.load %14 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc170)
            %32 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc171)
            %33 = cir.ptr_stride(%31 : !cir.ptr<!s32i>, %32 : !u64i), !cir.ptr<!s32i> loc(#loc172)
            cir.store %30, %33 : !s32i, !cir.ptr<!s32i> loc(#loc299)
          } loc(#loc298)
          cir.yield loc(#loc163)
        } step {
          %30 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc173)
          %31 = cir.unary(inc, %30) : !u64i, !u64i loc(#loc174)
          cir.store %31, %13 : !u64i, !cir.ptr<!u64i> loc(#loc300)
          cir.yield loc(#loc295)
        } loc(#loc295)
      } loc(#loc295)
      %23 = cir.load %14 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc175)
      %24 = cir.const #cir.int<0> : !s32i loc(#loc176)
      %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !s32i), !cir.ptr<!s32i> loc(#loc177)
      %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc175)
      cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc178)
      %27 = cir.load %14 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc179)
      cir.delete.array %27 : <!s32i> loc(#loc179)
    } loc(#loc286)
    cir.return loc(#loc22)
  } loc(#loc239)
  cir.func internal private @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc302)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc184)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc185)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc303)
    cir.goto "source" loc(#loc304)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc189)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc190)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc305)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc307)
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc308)
      %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc309)
      %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc199)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc199)
      %9 = cir.const #cir.int<4> : !u64i loc(#loc310)
      %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc311)
      cir.store %10, %4 : !u64i, !cir.ptr<!u64i> loc(#loc312)
      %11 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc203)
      %12 = cir.call @_Znam(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc204)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc313)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc313)
      cir.store %14, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc314)
      cir.scope {
        %20 = cir.const #cir.int<0> : !s32i loc(#loc210)
        %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc210)
        cir.store %21, %5 : !u64i, !cir.ptr<!u64i> loc(#loc316)
        cir.for : cond {
          %22 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc212)
          %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc213)
          %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc213)
          %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc317)
          cir.condition(%25) loc(#loc317)
        } body {
          cir.scope {
            %22 = cir.const #cir.int<0> : !s32i loc(#loc215)
            %23 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc216)
            %24 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc217)
            %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !u64i), !cir.ptr<!s32i> loc(#loc218)
            cir.store %22, %25 : !s32i, !cir.ptr<!s32i> loc(#loc319)
          } loc(#loc318)
          cir.yield loc(#loc209)
        } step {
          %22 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc219)
          %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc220)
          cir.store %23, %5 : !u64i, !cir.ptr<!u64i> loc(#loc320)
          cir.yield loc(#loc315)
        } loc(#loc315)
      } loc(#loc315)
      %15 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc221)
      %16 = cir.const #cir.int<0> : !s32i loc(#loc222)
      %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc223)
      %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc221)
      cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc224)
      %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc225)
      cir.delete.array %19 : <!s32i> loc(#loc225)
    } loc(#loc306)
    cir.return loc(#loc181)
  } loc(#loc301)
  cir.func @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_184goodEv() extra(#fn_attr1) {
    cir.call @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18L7goodG2BEv() : () -> () loc(#loc228)
    cir.return loc(#loc227)
  } loc(#loc321)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc18 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc19 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc20 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":46:1)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":135:1)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":48:5)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":48:9)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":58:9)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":58:13)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":59:9)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":59:28)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":60:9)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":60:31)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":61:9)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":61:31)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":62:9)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":62:41)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":50:13)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":50:12)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":50:5)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":51:5)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":51:10)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":52:1)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":63:9)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":106:17)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":64:9)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":105:9)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":73:35)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":73:44)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":73:57)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":73:28)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":73:13)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":73:68)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":74:13)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":77:13)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":74:17)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":74:33)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":75:13)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":76:17)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":78:20)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":78:21)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":78:30)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":78:33)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":78:47)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":78:13)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":78:48)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":79:34)
#loc65 = loc("/usr/include/netinet/in.h":249:5)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":79:13)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":80:39)
#loc68 = loc("/usr/include/netinet/in.h":251:20)
#loc69 = loc("/usr/include/netinet/in.h":33:15)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":80:13)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":81:38)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":81:32)
#loc73 = loc("/usr/include/netinet/in.h":250:15)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":81:13)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":81:46)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":82:13)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":85:13)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":82:22)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":82:54)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":82:55)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":82:64)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":82:78)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":82:17)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":82:84)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":83:13)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":84:17)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":86:13)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":89:13)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":86:24)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":86:38)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":86:17)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":86:57)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":87:13)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":88:17)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":90:35)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":90:49)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":90:55)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":90:28)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":90:13)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":90:59)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":91:13)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":94:13)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":91:17)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":91:33)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":92:13)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":93:17)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":96:31)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":96:45)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":96:58)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":96:76)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":96:79)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":96:26)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":96:13)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":96:80)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":97:13)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":100:13)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":97:17)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":97:31)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":97:44)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":97:47)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":97:61)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":98:13)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":99:17)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":102:39)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":102:25)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":102:13)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":104:25)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":104:20)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":104:13)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":104:36)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":106:16)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":107:9)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":110:9)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":107:13)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":107:29)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":108:9)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":109:26)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":109:13)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":111:9)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":114:9)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":111:13)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":111:29)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":112:9)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":113:26)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":113:13)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":122:5)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":134:5)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":123:9)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":123:16)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":123:26)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":124:9)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":124:14)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":126:21)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":126:28)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":126:38)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":126:9)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":127:37)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":46:6)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":127:28)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":127:46)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":127:9)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":128:9)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":131:9)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":128:18)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":128:14)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":128:21)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":128:33)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":129:9)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":130:29)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":130:13)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":130:24)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":130:25)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":128:40)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":128:39)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":132:22)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":132:33)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":132:34)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":132:9)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":133:19)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":142:1)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":164:1)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":144:5)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":144:9)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":146:13)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":146:12)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":146:5)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":147:5)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":147:10)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":148:1)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":150:12)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":150:5)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":151:5)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":163:5)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":152:9)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":152:16)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":152:26)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":153:9)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":153:14)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":155:21)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":155:28)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":155:38)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":155:9)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":156:37)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":142:13)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":156:28)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":156:46)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":156:9)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":157:9)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":160:9)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":157:18)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":157:14)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":157:21)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":157:33)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":158:9)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":159:29)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":159:13)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":159:24)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":159:25)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":157:40)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":157:39)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":161:22)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":161:33)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":161:34)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":161:9)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":162:19)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":166:1)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":169:1)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_18.cpp":168:5)
#loc229 = loc(fused[#loc1, #loc2])
#loc230 = loc(fused[#loc3, #loc4])
#loc231 = loc(fused[#loc5, #loc6])
#loc232 = loc(fused[#loc7, #loc8])
#loc233 = loc(fused[#loc9, #loc10])
#loc234 = loc(fused[#loc11, #loc12])
#loc235 = loc(fused[#loc13, #loc14])
#loc236 = loc(fused[#loc15, #loc16])
#loc237 = loc(fused[#loc17, #loc18])
#loc238 = loc(fused[#loc19, #loc20])
#loc239 = loc(fused[#loc21, #loc22])
#loc240 = loc(fused[#loc23, #loc24])
#loc241 = loc(fused[#loc25, #loc26])
#loc242 = loc(fused[#loc27, #loc28])
#loc243 = loc(fused[#loc29, #loc30])
#loc244 = loc(fused[#loc31, #loc32])
#loc245 = loc(fused[#loc33, #loc34])
#loc246 = loc(fused[#loc37, #loc35])
#loc247 = loc(fused[#loc38, #loc39])
#loc248 = loc(fused[#loc41, #loc42])
#loc249 = loc(fused[#loc43, #loc44])
#loc250 = loc(fused[#loc49, #loc50])
#loc251 = loc(fused[#loc51, #loc52])
#loc252 = loc(fused[#loc53, #loc54])
#loc253 = loc(fused[#loc55, #loc52])
#loc254 = loc(fused[#loc57, #loc58])
#loc255 = loc(fused[#loc60, #loc61])
#loc256 = loc(fused[#loc62, #loc63])
#loc257 = loc(fused[#loc66, #loc64])
#loc258 = loc(fused[#loc70, #loc67])
#loc259 = loc(fused[#loc74, #loc75])
#loc260 = loc(fused[#loc76, #loc77])
#loc261 = loc(fused[#loc79, #loc80])
#loc262 = loc(fused[#loc81, #loc82])
#loc263 = loc(fused[#loc83, #loc84])
#loc264 = loc(fused[#loc85, #loc77])
#loc265 = loc(fused[#loc87, #loc88])
#loc266 = loc(fused[#loc91, #loc92])
#loc267 = loc(fused[#loc93, #loc88])
#loc268 = loc(fused[#loc99, #loc100])
#loc269 = loc(fused[#loc101, #loc102])
#loc270 = loc(fused[#loc103, #loc104])
#loc271 = loc(fused[#loc105, #loc102])
#loc272 = loc(fused[#loc109, #loc110])
#loc273 = loc(fused[#loc113, #loc114])
#loc274 = loc(fused[#loc115, #loc116])
#loc275 = loc(fused[#loc117, #loc118])
#loc276 = loc(fused[#loc120, #loc121])
#loc277 = loc(fused[#loc122, #loc116])
#loc278 = loc(fused[#loc126, #loc124])
#loc279 = loc(fused[#loc129, #loc130])
#loc280 = loc(fused[#loc132, #loc133])
#loc281 = loc(fused[#loc134, #loc135])
#loc282 = loc(fused[#loc136, #loc133])
#loc283 = loc(fused[#loc139, #loc140])
#loc284 = loc(fused[#loc141, #loc142])
#loc285 = loc(fused[#loc143, #loc140])
#loc286 = loc(fused[#loc146, #loc147])
#loc287 = loc(fused[#loc148, #loc149])
#loc288 = loc(fused[#loc148, #loc150])
#loc289 = loc(fused[#loc151, #loc152])
#loc290 = loc(fused[#loc154, #loc155])
#loc291 = loc(fused[#loc153, #loc155])
#loc292 = loc(fused[#loc156, #loc155])
#loc293 = loc(fused[#loc159, #loc160])
#loc294 = loc(fused[#loc161, #loc160])
#loc295 = loc(fused[#loc162, #loc163])
#loc296 = loc(fused[#loc165, #loc164])
#loc297 = loc(fused[#loc166, #loc167])
#loc298 = loc(fused[#loc168, #loc163])
#loc299 = loc(fused[#loc170, #loc169])
#loc300 = loc(fused[#loc174, #loc173])
#loc301 = loc(fused[#loc180, #loc181])
#loc302 = loc(fused[#loc182, #loc183])
#loc303 = loc(fused[#loc186, #loc184])
#loc304 = loc(fused[#loc187, #loc188])
#loc305 = loc(fused[#loc191, #loc190])
#loc306 = loc(fused[#loc192, #loc193])
#loc307 = loc(fused[#loc194, #loc195])
#loc308 = loc(fused[#loc194, #loc196])
#loc309 = loc(fused[#loc197, #loc198])
#loc310 = loc(fused[#loc200, #loc201])
#loc311 = loc(fused[#loc199, #loc201])
#loc312 = loc(fused[#loc202, #loc201])
#loc313 = loc(fused[#loc205, #loc206])
#loc314 = loc(fused[#loc207, #loc206])
#loc315 = loc(fused[#loc208, #loc209])
#loc316 = loc(fused[#loc211, #loc210])
#loc317 = loc(fused[#loc212, #loc213])
#loc318 = loc(fused[#loc214, #loc209])
#loc319 = loc(fused[#loc216, #loc215])
#loc320 = loc(fused[#loc220, #loc219])
#loc321 = loc(fused[#loc226, #loc227])
