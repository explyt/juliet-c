!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":28:21)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":28:28)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":100:25)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":100:32)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":66:25)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":66:32)
#true = #cir.bool<true> : !cir.bool
#loc184 = loc(fused[#loc20, #loc21])
#loc205 = loc(fused[#loc75, #loc76])
#loc224 = loc(fused[#loc128, #loc129])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc176)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc177)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%zu\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc5)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc178)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc179)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc180)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc12)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc181)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc182)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc17)
  cir.func internal private @badSink(%arg0: !u64i loc(fused[#loc20, #loc21])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc184)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc22)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc186)
      cir.scope {
        %2 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc29)
        %3 = cir.const #cir.int<5> : !u64i loc(#loc188)
        %4 = cir.cmp(gt, %2, %3) : !u64i, !cir.bool loc(#loc189)
        cir.if %4 {
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc35)
          %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc36)
          %7 = cir.const #cir.int<1> : !u64i loc(#loc191)
          %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc192)
          %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc35)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc193)
          cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc194)
          cir.scope {
            %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc44)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc44)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc196)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc46)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc47)
              %26 = cir.unary(minus, %25) nsw : !s32i, !s32i loc(#loc48)
              cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc46)
            } loc(#loc197)
          } loc(#loc195)
          %11 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc49)
          %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
          %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc12)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc12)
          %15 = cir.call @strcpy(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc49)
          %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
          cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc52)
          %17 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc53)
          %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc54)
          cir.call @free(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc53)
        } else {
          %5 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc17)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc17)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc55)
        } loc(#loc190)
      } loc(#loc187)
    } loc(#loc185)
    cir.return loc(#loc19)
  } loc(#loc183)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc199)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc60)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc60)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc200)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc62)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc177)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc63)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc5)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc5)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u64i>) -> !s32i loc(#loc62)
    %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc64)
    cir.call @badSink(%9) : (!u64i) -> () loc(#loc65)
    cir.return loc(#loc57)
  } loc(#loc198)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc202)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc68)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc203)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc70)
    cir.return loc(#loc67)
  } loc(#loc201)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc72)
  cir.func internal private @goodB2GSink(%arg0: !u64i loc(fused[#loc75, #loc76])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc205)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc77)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc207)
      cir.scope {
        %2 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc84)
        %3 = cir.const #cir.int<5> : !u64i loc(#loc209)
        %4 = cir.cmp(gt, %2, %3) : !u64i, !cir.bool loc(#loc210)
        %5 = cir.ternary(%4, true {
          %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc88)
          %7 = cir.const #cir.int<100> : !s32i loc(#loc89)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc89)
          %9 = cir.cmp(lt, %6, %8) : !u64i, !cir.bool loc(#loc211)
          %10 = cir.ternary(%9, true {
            %11 = cir.const #true loc(#loc87)
            cir.yield %11 : !cir.bool loc(#loc87)
          }, false {
            %11 = cir.const #false loc(#loc87)
            cir.yield %11 : !cir.bool loc(#loc87)
          }) : (!cir.bool) -> !cir.bool loc(#loc87)
          cir.yield %10 : !cir.bool loc(#loc87)
        }, false {
          %6 = cir.const #false loc(#loc87)
          cir.yield %6 : !cir.bool loc(#loc87)
        }) : (!cir.bool) -> !cir.bool loc(#loc87)
        cir.if %5 {
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc93)
          %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc94)
          %8 = cir.const #cir.int<1> : !u64i loc(#loc213)
          %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc214)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc93)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc215)
          cir.store %11, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc216)
          cir.scope {
            %21 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc102)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc102)
            %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!s8i>, !cir.bool loc(#loc218)
            cir.if %24 {
              %25 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc104)
              %26 = cir.const #cir.int<1> : !s32i loc(#loc105)
              %27 = cir.unary(minus, %26) nsw : !s32i, !s32i loc(#loc106)
              cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc104)
            } loc(#loc219)
          } loc(#loc217)
          %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc107)
          %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
          %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc109)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc109)
          %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc107)
          %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
          cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc111)
          %18 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc112)
          %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc113)
          cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc112)
        } else {
          %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc72)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc72)
          cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc114)
        } loc(#loc212)
      } loc(#loc208)
    } loc(#loc206)
    cir.return loc(#loc74)
  } loc(#loc204)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc221)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc119)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc119)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc222)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc121)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc177)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc122)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc123)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc123)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u64i>) -> !s32i loc(#loc121)
    %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc124)
    cir.call @goodB2GSink(%9) : (!u64i) -> () loc(#loc125)
    cir.return loc(#loc116)
  } loc(#loc220)
  cir.func internal private @goodG2BSink(%arg0: !u64i loc(fused[#loc128, #loc129])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc224)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc130)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc226)
      cir.scope {
        %2 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc137)
        %3 = cir.const #cir.int<5> : !u64i loc(#loc228)
        %4 = cir.cmp(gt, %2, %3) : !u64i, !cir.bool loc(#loc229)
        cir.if %4 {
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc143)
          %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc144)
          %7 = cir.const #cir.int<1> : !u64i loc(#loc231)
          %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc232)
          %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc143)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc233)
          cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc234)
          cir.scope {
            %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc152)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc152)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc236)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc154)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc155)
              %26 = cir.unary(minus, %25) nsw : !s32i, !s32i loc(#loc156)
              cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc154)
            } loc(#loc237)
          } loc(#loc235)
          %11 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc157)
          %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
          %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc159)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc159)
          %15 = cir.call @strcpy(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc157)
          %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
          cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc161)
          %17 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc162)
          %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc163)
          cir.call @free(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc162)
        } else {
          %5 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc164)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc164)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc165)
        } loc(#loc230)
      } loc(#loc227)
    } loc(#loc225)
    cir.return loc(#loc127)
  } loc(#loc223)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc239)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc170)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc170)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc240)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc172)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc172)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc241)
    %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc174)
    cir.call @goodG2BSink(%5) : (!u64i) -> () loc(#loc175)
    cir.return loc(#loc167)
  } loc(#loc238)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":57:19)
#loc6 = loc("/usr/include/stdlib.h":672:1)
#loc7 = loc("/usr/include/stdlib.h":672:45)
#loc8 = loc("/usr/include/stdlib.h":756:1)
#loc9 = loc("/usr/include/stdlib.h":756:70)
#loc10 = loc("/usr/include/string.h":141:1)
#loc11 = loc("/usr/include/string.h":142:14)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":40:30)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc15 = loc("/usr/include/stdlib.h":687:1)
#loc16 = loc("/usr/include/stdlib.h":687:32)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":46:23)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":28:1)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":49:1)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":29:1)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":30:5)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":48:5)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":31:9)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":31:16)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":35:9)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":47:9)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":35:13)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":35:20)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":35:39)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":36:9)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":43:9)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":45:9)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":37:32)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":37:39)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":37:44)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":37:55)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":37:56)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":37:13)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":38:13)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":38:45)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":38:17)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":38:29)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":38:35)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":38:36)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":38:42)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":38:41)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":40:13)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":40:20)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":41:23)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":41:13)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":42:13)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":42:18)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":46:13)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":51:1)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":59:1)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":53:5)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":53:12)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":55:12)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":55:5)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":57:5)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":57:12)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":58:13)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":58:5)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":133:1)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":137:1)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":135:5)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":135:13)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":136:5)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":136:13)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":118:23)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":100:1)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":121:1)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":101:1)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":102:5)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":120:5)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":103:9)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":103:16)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":107:9)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":119:9)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":107:13)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":107:20)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":107:39)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":107:41)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":107:44)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":107:51)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":108:9)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":115:9)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":117:9)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":109:32)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":109:39)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":109:44)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":109:55)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":109:56)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":109:13)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":110:13)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":110:45)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":110:17)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":110:29)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":110:35)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":110:36)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":110:42)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":110:41)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":112:13)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":112:20)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":112:30)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":113:23)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":113:13)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":114:13)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":114:18)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":118:13)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":123:1)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":131:1)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":125:5)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":125:12)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":127:12)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":127:5)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":129:5)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":129:12)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":129:19)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":130:17)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":130:5)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":66:1)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":87:1)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":67:1)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":68:5)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":86:5)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":69:9)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":69:16)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":73:9)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":85:9)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":73:13)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":73:20)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":73:39)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":74:9)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":81:9)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":83:9)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":75:32)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":75:39)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":75:44)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":75:55)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":75:56)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":75:13)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":76:13)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":76:45)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":76:17)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":76:29)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":76:35)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":76:36)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":76:42)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":76:41)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":78:13)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":78:20)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":78:30)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":79:23)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":79:13)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":80:13)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":80:18)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":84:23)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":84:13)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":89:1)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":97:1)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":91:5)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":91:12)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":93:12)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":93:5)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":95:12)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":95:5)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":96:17)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_41.c":96:5)
#loc176 = loc(fused[#loc1, #loc2])
#loc177 = loc(fused[#loc3, #loc4])
#loc178 = loc(fused[#loc6, #loc7])
#loc179 = loc(fused[#loc8, #loc9])
#loc180 = loc(fused[#loc10, #loc11])
#loc181 = loc(fused[#loc13, #loc14])
#loc182 = loc(fused[#loc15, #loc16])
#loc183 = loc(fused[#loc18, #loc19])
#loc185 = loc(fused[#loc23, #loc24])
#loc186 = loc(fused[#loc25, #loc26])
#loc187 = loc(fused[#loc27, #loc28])
#loc188 = loc(fused[#loc30, #loc31])
#loc189 = loc(fused[#loc29, #loc31])
#loc190 = loc(fused[#loc32, #loc33, #loc34, #loc28])
#loc191 = loc(fused[#loc37, #loc38])
#loc192 = loc(fused[#loc36, #loc38])
#loc193 = loc(fused[#loc35, #loc39])
#loc194 = loc(fused[#loc40, #loc39])
#loc195 = loc(fused[#loc41, #loc42])
#loc196 = loc(fused[#loc43, #loc44])
#loc197 = loc(fused[#loc45, #loc42])
#loc198 = loc(fused[#loc56, #loc57])
#loc199 = loc(fused[#loc58, #loc59])
#loc200 = loc(fused[#loc61, #loc60])
#loc201 = loc(fused[#loc66, #loc67])
#loc202 = loc(fused[#loc68, #loc69])
#loc203 = loc(fused[#loc70, #loc71])
#loc204 = loc(fused[#loc73, #loc74])
#loc206 = loc(fused[#loc78, #loc79])
#loc207 = loc(fused[#loc80, #loc81])
#loc208 = loc(fused[#loc82, #loc83])
#loc209 = loc(fused[#loc85, #loc86])
#loc210 = loc(fused[#loc84, #loc86])
#loc211 = loc(fused[#loc88, #loc89])
#loc212 = loc(fused[#loc90, #loc91, #loc92, #loc83])
#loc213 = loc(fused[#loc95, #loc96])
#loc214 = loc(fused[#loc94, #loc96])
#loc215 = loc(fused[#loc93, #loc97])
#loc216 = loc(fused[#loc98, #loc97])
#loc217 = loc(fused[#loc99, #loc100])
#loc218 = loc(fused[#loc101, #loc102])
#loc219 = loc(fused[#loc103, #loc100])
#loc220 = loc(fused[#loc115, #loc116])
#loc221 = loc(fused[#loc117, #loc118])
#loc222 = loc(fused[#loc120, #loc119])
#loc223 = loc(fused[#loc126, #loc127])
#loc225 = loc(fused[#loc131, #loc132])
#loc226 = loc(fused[#loc133, #loc134])
#loc227 = loc(fused[#loc135, #loc136])
#loc228 = loc(fused[#loc138, #loc139])
#loc229 = loc(fused[#loc137, #loc139])
#loc230 = loc(fused[#loc140, #loc141, #loc142, #loc136])
#loc231 = loc(fused[#loc145, #loc146])
#loc232 = loc(fused[#loc144, #loc146])
#loc233 = loc(fused[#loc143, #loc147])
#loc234 = loc(fused[#loc148, #loc147])
#loc235 = loc(fused[#loc149, #loc150])
#loc236 = loc(fused[#loc151, #loc152])
#loc237 = loc(fused[#loc153, #loc150])
#loc238 = loc(fused[#loc166, #loc167])
#loc239 = loc(fused[#loc168, #loc169])
#loc240 = loc(fused[#loc171, #loc170])
#loc241 = loc(fused[#loc173, #loc172])
