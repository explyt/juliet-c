!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc74 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":93:10)
#loc75 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":93:14)
#loc76 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":93:20)
#loc77 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":93:32)
#loc173 = loc(fused[#loc74, #loc75])
#loc174 = loc(fused[#loc76, #loc77])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE475_Undefined_Behavior_for_Input_to_API/CWE475_Undefined_Behavior_for_Input_to_API__char_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc145)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc146)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"abcdefghijklmnopqrstuvwxyz\00" : !cir.array<!s8i x 27>> : !cir.array<!s8i x 27> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc147)
  cir.func no_proto @CWE475_Undefined_Behavior_for_Input_to_API__char_12_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc150)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc150)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc12)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc12)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc153)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc154)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc153)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc153)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc22)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc154)
          %8 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc23)
          %9 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
          %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 27>> loc(#loc5)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 27>>), !cir.ptr<!s8i> loc(#loc5)
          %12 = cir.call @strcpy(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc23)
          %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
          %14 = cir.const #cir.int<6> : !s32i loc(#loc26)
          %15 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc27)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc155)
          %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
          %18 = cir.const #cir.int<4> : !s32i loc(#loc29)
          %19 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc30)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc156)
          %21 = cir.const #cir.int<10> : !s32i loc(#loc31)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc31)
          %23 = cir.const #cir.int<1> : !u64i loc(#loc157)
          %24 = cir.binop(mul, %22, %23) : !u64i loc(#loc158)
          cir.libc.memcpy %24 bytes from %20 to %16 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc159)
          %25 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
          cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc37)
        } loc(#loc152)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc161)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc162)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc161)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc161)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc43)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc162)
          %8 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc44)
          %9 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
          %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 27>> loc(#loc46)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 27>>), !cir.ptr<!s8i> loc(#loc46)
          %12 = cir.call @strcpy(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc44)
          %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
          %14 = cir.const #cir.int<6> : !s32i loc(#loc48)
          %15 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc49)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc163)
          %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
          %18 = cir.const #cir.int<4> : !s32i loc(#loc51)
          %19 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc52)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc164)
          %21 = cir.const #cir.int<10> : !s32i loc(#loc53)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc53)
          %23 = cir.const #cir.int<1> : !u64i loc(#loc165)
          %24 = cir.binop(mul, %22, %23) : !u64i loc(#loc166)
          cir.libc.memmove %24 bytes from %20 to %16 : !cir.ptr<!void>, !u64i loc(#loc167)
          %25 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
          cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc59)
        } loc(#loc160)
      } loc(#loc151)
    } loc(#loc149)
    cir.return loc(#loc9)
  } loc(#loc148)
  cir.func no_proto @CWE475_Undefined_Behavior_for_Input_to_API__char_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc169)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc62)
    cir.return loc(#loc61)
  } loc(#loc168)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc170)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc171)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc71)
  cir.func @main(%arg0: !s32i loc(fused[#loc74, #loc75]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc76, #loc77])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc173)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc174)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc73)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc78)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc78)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc79)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc80)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc80)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc81)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc68)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %8 = cir.get_global @CWE475_Undefined_Behavior_for_Input_to_API__char_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc175)
    cir.call @CWE475_Undefined_Behavior_for_Input_to_API__char_12_good() : () -> () loc(#loc83)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc69)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc70)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %13 = cir.get_global @CWE475_Undefined_Behavior_for_Input_to_API__char_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc176)
    cir.call @CWE475_Undefined_Behavior_for_Input_to_API__char_12_bad() : () -> () loc(#loc87)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc71)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc90)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc177)
    cir.return %17 : !s32i loc(#loc177)
  } loc(#loc172)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc180)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc180)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc96)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc96)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc183)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc184)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc183)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc183)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc106)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc184)
          %8 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc107)
          %9 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
          %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 27>> loc(#loc109)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 27>>), !cir.ptr<!s8i> loc(#loc109)
          %12 = cir.call @strcpy(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc107)
          %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
          %14 = cir.const #cir.int<6> : !s32i loc(#loc111)
          %15 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc112)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc185)
          %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
          %18 = cir.const #cir.int<4> : !s32i loc(#loc114)
          %19 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc115)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc186)
          %21 = cir.const #cir.int<10> : !s32i loc(#loc116)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc116)
          %23 = cir.const #cir.int<1> : !u64i loc(#loc187)
          %24 = cir.binop(mul, %22, %23) : !u64i loc(#loc188)
          cir.libc.memmove %24 bytes from %20 to %16 : !cir.ptr<!void>, !u64i loc(#loc189)
          %25 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
          cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc122)
        } loc(#loc182)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc191)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc192)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc191)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc191)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc128)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc192)
          %8 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc129)
          %9 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
          %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 27>> loc(#loc131)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 27>>), !cir.ptr<!s8i> loc(#loc131)
          %12 = cir.call @strcpy(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc129)
          %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
          %14 = cir.const #cir.int<6> : !s32i loc(#loc133)
          %15 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc134)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc193)
          %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
          %18 = cir.const #cir.int<4> : !s32i loc(#loc136)
          %19 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc137)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc194)
          %21 = cir.const #cir.int<10> : !s32i loc(#loc138)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc138)
          %23 = cir.const #cir.int<1> : !u64i loc(#loc195)
          %24 = cir.binop(mul, %22, %23) : !u64i loc(#loc196)
          cir.libc.memmove %24 bytes from %20 to %16 : !cir.ptr<!void>, !u64i loc(#loc197)
          %25 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
          cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc144)
        } loc(#loc190)
      } loc(#loc181)
    } loc(#loc179)
    cir.return loc(#loc93)
  } loc(#loc178)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE475_Undefined_Behavior_for_Input_to_API/CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/string.h":141:1)
#loc4 = loc("/usr/include/string.h":142:14)
#loc5 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":29:26)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":22:1)
#loc9 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":46:1)
#loc10 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":24:5)
#loc11 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":45:5)
#loc12 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":24:8)
#loc13 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":24:33)
#loc14 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":25:5)
#loc15 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":34:5)
#loc16 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":36:5)
#loc17 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":26:9)
#loc18 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":33:9)
#loc19 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":27:13)
#loc20 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":27:36)
#loc21 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":28:13)
#loc22 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":28:27)
#loc23 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":29:13)
#loc24 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":29:20)
#loc25 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":31:20)
#loc26 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":31:27)
#loc27 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":31:25)
#loc28 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":31:30)
#loc29 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":31:37)
#loc30 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":31:35)
#loc31 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":31:40)
#loc32 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":31:43)
#loc33 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":31:54)
#loc34 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":31:13)
#loc35 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":31:55)
#loc36 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":32:23)
#loc37 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":32:13)
#loc38 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":37:9)
#loc39 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":44:9)
#loc40 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":38:13)
#loc41 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":38:36)
#loc42 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":39:13)
#loc43 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":39:27)
#loc44 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":40:13)
#loc45 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":40:20)
#loc46 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":40:26)
#loc47 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":42:21)
#loc48 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":42:28)
#loc49 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":42:26)
#loc50 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":42:31)
#loc51 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":42:38)
#loc52 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":42:36)
#loc53 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":42:41)
#loc54 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":42:44)
#loc55 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":42:55)
#loc56 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":42:13)
#loc57 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":42:56)
#loc58 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":43:23)
#loc59 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":43:13)
#loc60 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":79:1)
#loc61 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":82:1)
#loc62 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":81:5)
#loc63 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":81:11)
#loc64 = loc("/usr/include/stdlib.h":575:1)
#loc65 = loc("/usr/include/stdlib.h":575:41)
#loc66 = loc("/usr/include/time.h":76:1)
#loc67 = loc("/usr/include/time.h":76:38)
#loc68 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":98:15)
#loc69 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":100:15)
#loc70 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":103:15)
#loc71 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":105:15)
#loc72 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":93:1)
#loc73 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":108:1)
#loc78 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":94:1)
#loc79 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":96:27)
#loc80 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":96:22)
#loc81 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":96:5)
#loc82 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":98:5)
#loc83 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":99:5)
#loc84 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":99:62)
#loc85 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":100:5)
#loc86 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":103:5)
#loc87 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":104:5)
#loc88 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":104:61)
#loc89 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":105:5)
#loc90 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":107:12)
#loc91 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":107:5)
#loc92 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":53:1)
#loc93 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":77:1)
#loc94 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":55:5)
#loc95 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":76:5)
#loc96 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":55:8)
#loc97 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":55:33)
#loc98 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":56:5)
#loc99 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":65:5)
#loc100 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":67:5)
#loc101 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":57:9)
#loc102 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":64:9)
#loc103 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":58:13)
#loc104 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":58:36)
#loc105 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":59:13)
#loc106 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":59:27)
#loc107 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":60:13)
#loc108 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":60:20)
#loc109 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":60:26)
#loc110 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":62:21)
#loc111 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":62:28)
#loc112 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":62:26)
#loc113 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":62:31)
#loc114 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":62:38)
#loc115 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":62:36)
#loc116 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":62:41)
#loc117 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":62:44)
#loc118 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":62:55)
#loc119 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":62:13)
#loc120 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":62:56)
#loc121 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":63:23)
#loc122 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":63:13)
#loc123 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":68:9)
#loc124 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":75:9)
#loc125 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":69:13)
#loc126 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":69:36)
#loc127 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":70:13)
#loc128 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":70:27)
#loc129 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":71:13)
#loc130 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":71:20)
#loc131 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":71:26)
#loc132 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":73:21)
#loc133 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":73:28)
#loc134 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":73:26)
#loc135 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":73:31)
#loc136 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":73:38)
#loc137 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":73:36)
#loc138 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":73:41)
#loc139 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":73:44)
#loc140 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":73:55)
#loc141 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":73:13)
#loc142 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":73:56)
#loc143 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":74:23)
#loc144 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_12.c":74:13)
#loc145 = loc(fused[#loc1, #loc2])
#loc146 = loc(fused[#loc3, #loc4])
#loc147 = loc(fused[#loc6, #loc7])
#loc148 = loc(fused[#loc8, #loc9])
#loc149 = loc(fused[#loc10, #loc11])
#loc150 = loc(fused[#loc12, #loc13])
#loc151 = loc(fused[#loc14, #loc15, #loc16, #loc11])
#loc152 = loc(fused[#loc17, #loc18])
#loc153 = loc(fused[#loc19, #loc20])
#loc154 = loc(fused[#loc21, #loc22])
#loc155 = loc(fused[#loc25, #loc26])
#loc156 = loc(fused[#loc28, #loc29])
#loc157 = loc(fused[#loc32, #loc33])
#loc158 = loc(fused[#loc31, #loc33])
#loc159 = loc(fused[#loc34, #loc35])
#loc160 = loc(fused[#loc38, #loc39])
#loc161 = loc(fused[#loc40, #loc41])
#loc162 = loc(fused[#loc42, #loc43])
#loc163 = loc(fused[#loc47, #loc48])
#loc164 = loc(fused[#loc50, #loc51])
#loc165 = loc(fused[#loc54, #loc55])
#loc166 = loc(fused[#loc53, #loc55])
#loc167 = loc(fused[#loc56, #loc57])
#loc168 = loc(fused[#loc60, #loc61])
#loc169 = loc(fused[#loc62, #loc63])
#loc170 = loc(fused[#loc64, #loc65])
#loc171 = loc(fused[#loc66, #loc67])
#loc172 = loc(fused[#loc72, #loc73])
#loc175 = loc(fused[#loc83, #loc84])
#loc176 = loc(fused[#loc87, #loc88])
#loc177 = loc(fused[#loc91, #loc90])
#loc178 = loc(fused[#loc92, #loc93])
#loc179 = loc(fused[#loc94, #loc95])
#loc180 = loc(fused[#loc96, #loc97])
#loc181 = loc(fused[#loc98, #loc99, #loc100, #loc95])
#loc182 = loc(fused[#loc101, #loc102])
#loc183 = loc(fused[#loc103, #loc104])
#loc184 = loc(fused[#loc105, #loc106])
#loc185 = loc(fused[#loc110, #loc111])
#loc186 = loc(fused[#loc113, #loc114])
#loc187 = loc(fused[#loc117, #loc118])
#loc188 = loc(fused[#loc116, #loc118])
#loc189 = loc(fused[#loc119, #loc120])
#loc190 = loc(fused[#loc123, #loc124])
#loc191 = loc(fused[#loc125, #loc126])
#loc192 = loc(fused[#loc127, #loc128])
#loc193 = loc(fused[#loc132, #loc133])
#loc194 = loc(fused[#loc135, #loc136])
#loc195 = loc(fused[#loc139, #loc140])
#loc196 = loc(fused[#loc138, #loc140])
#loc197 = loc(fused[#loc141, #loc142])
