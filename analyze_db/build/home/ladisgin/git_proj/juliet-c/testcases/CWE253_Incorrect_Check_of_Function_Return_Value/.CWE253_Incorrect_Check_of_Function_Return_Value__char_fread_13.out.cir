!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":105:10)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":105:14)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":105:20)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":105:32)
#loc152 = loc(fused[#loc52, #loc53])
#loc153 = loc(fused[#loc54, #loc55])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant external @GLOBAL_CONST_FIVE : !s32i {alignment = 4 : i64} loc(#loc130)
  cir.func private @fread(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc131)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc132)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc133)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fread failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc9)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc135)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc136)
    cir.br ^bb1 loc(#loc137)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc130)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc18)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc19)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc138)
    cir.brcond %5 ^bb2, ^bb9 loc(#loc139)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc140)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc135)
    cir.store %6, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc135)
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc15)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc136)
    cir.br ^bb4 loc(#loc141)
  ^bb4:  // pred: ^bb3
    %8 = cir.get_global @fread : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc25)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc142)
    %11 = cir.const #cir.int<1> : !u64i loc(#loc143)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc30)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc30)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc30)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc132)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc32)
    %18 = cir.call @fread(%10, %11, %15, %17) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc25)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc33)
    %21 = cir.cmp(eq, %18, %20) : !u64i, !cir.bool loc(#loc144)
    cir.brcond %21 ^bb5, ^bb6 loc(#loc145)
  ^bb5:  // pred: ^bb4
    %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc9)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc35)
    cir.br ^bb6 loc(#loc24)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc24)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc22)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc17)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc17)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc11)
  } loc(#loc134)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc147)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc148)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc37)
  } loc(#loc146)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc149)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc49)
  cir.func @main(%arg0: !s32i loc(fused[#loc52, #loc53]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc54, #loc55])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc152)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc153)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc51)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc56)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc56)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc57)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc58)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc58)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc59)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc46)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %8 = cir.get_global @CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13_good : !cir.ptr<!cir.func<!void ()>> loc(#loc154)
    cir.call @CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13_good() : () -> () loc(#loc61)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc47)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc48)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %13 = cir.get_global @CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc155)
    cir.call @CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13_bad() : () -> () loc(#loc65)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc49)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc68)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    cir.return %17 : !s32i loc(#loc156)
  } loc(#loc151)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc70)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc158)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc159)
    cir.br ^bb1 loc(#loc160)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc130)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc80)
    %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc161)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc162)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc70)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    cir.br ^bb10 loc(#loc82)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc163)
  ^bb4:  // pred: ^bb3
    %8 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc158)
    cir.store %8, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc158)
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc76)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc159)
    cir.br ^bb5 loc(#loc164)
  ^bb5:  // pred: ^bb4
    %10 = cir.get_global @fread : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc89)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc165)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc166)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc94)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc94)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc94)
    %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc132)
    %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc96)
    %20 = cir.call @fread(%12, %13, %17, %19) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc89)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc97)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc97)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc97)
    %25 = cir.cmp(ne, %20, %24) : !u64i, !cir.bool loc(#loc167)
    cir.brcond %25 ^bb6, ^bb7 loc(#loc168)
  ^bb6:  // pred: ^bb5
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc100)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    cir.br ^bb7 loc(#loc88)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc88)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc86)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc78)
  ^bb10:  // 2 preds: ^bb2, ^bb9
    cir.br ^bb11 loc(#loc78)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc72)
  } loc(#loc157)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc170)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc171)
    cir.br ^bb1 loc(#loc172)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc130)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc111)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc173)
    cir.brcond %5 ^bb2, ^bb9 loc(#loc174)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc175)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc170)
    cir.store %6, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc170)
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc107)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc171)
    cir.br ^bb4 loc(#loc176)
  ^bb4:  // pred: ^bb3
    %8 = cir.get_global @fread : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc117)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc177)
    %11 = cir.const #cir.int<1> : !u64i loc(#loc178)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc122)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc123)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc122)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc122)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc132)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc124)
    %18 = cir.call @fread(%10, %11, %15, %17) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc117)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc125)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc126)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc125)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc125)
    %23 = cir.cmp(ne, %18, %22) : !u64i, !cir.bool loc(#loc179)
    cir.brcond %23 ^bb5, ^bb6 loc(#loc180)
  ^bb5:  // pred: ^bb4
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc128)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc128)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc129)
    cir.br ^bb6 loc(#loc116)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc116)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc114)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc109)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc109)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc103)
  } loc(#loc169)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase.h":111:1)
#loc2 = loc("../../testcasesupport/std_testcase.h":111:18)
#loc3 = loc("/usr/include/stdio.h":728:1)
#loc4 = loc("/usr/include/stdio.h":730:3)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":37:27)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":24:1)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":41:1)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":31:13)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":31:36)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":32:13)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":32:27)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":26:5)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":40:5)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":26:8)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":26:27)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":27:5)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":28:9)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":39:9)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":35:13)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":38:13)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":35:17)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":35:31)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":35:23)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":35:37)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":35:48)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":35:60)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":35:64)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":35:68)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":35:78)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":36:13)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":37:17)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":90:1)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":94:1)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":92:5)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":92:11)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":93:5)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":93:11)
#loc42 = loc("/usr/include/stdlib.h":575:1)
#loc43 = loc("/usr/include/stdlib.h":575:41)
#loc44 = loc("/usr/include/time.h":76:1)
#loc45 = loc("/usr/include/time.h":76:38)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":110:15)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":112:15)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":115:15)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":117:15)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":105:1)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":120:1)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":106:1)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":108:27)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":108:22)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":108:5)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":110:5)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":111:5)
#loc62 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":111:73)
#loc63 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":112:5)
#loc64 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":115:5)
#loc65 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":116:5)
#loc66 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":116:72)
#loc67 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":117:5)
#loc68 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":119:12)
#loc69 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":119:5)
#loc70 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":53:19)
#loc71 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":48:1)
#loc72 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":69:1)
#loc73 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":60:13)
#loc74 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":60:36)
#loc75 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":61:13)
#loc76 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":61:27)
#loc77 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":50:5)
#loc78 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":68:5)
#loc79 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":50:8)
#loc80 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":50:27)
#loc81 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":51:5)
#loc82 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":54:5)
#loc83 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":56:5)
#loc84 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":53:9)
#loc85 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":57:9)
#loc86 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":67:9)
#loc87 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":63:13)
#loc88 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":66:13)
#loc89 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":63:17)
#loc90 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":63:31)
#loc91 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":63:23)
#loc92 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":63:37)
#loc93 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":63:48)
#loc94 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":63:60)
#loc95 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":63:64)
#loc96 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":63:68)
#loc97 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":63:78)
#loc98 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":63:82)
#loc99 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":64:13)
#loc100 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":65:27)
#loc101 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":65:17)
#loc102 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":72:1)
#loc103 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":88:1)
#loc104 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":79:13)
#loc105 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":79:36)
#loc106 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":80:13)
#loc107 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":80:27)
#loc108 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":74:5)
#loc109 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":87:5)
#loc110 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":74:8)
#loc111 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":74:27)
#loc112 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":75:5)
#loc113 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":76:9)
#loc114 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":86:9)
#loc115 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":82:13)
#loc116 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":85:13)
#loc117 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":82:17)
#loc118 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":82:31)
#loc119 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":82:23)
#loc120 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":82:37)
#loc121 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":82:48)
#loc122 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":82:60)
#loc123 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":82:64)
#loc124 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":82:68)
#loc125 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":82:78)
#loc126 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":82:82)
#loc127 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":83:13)
#loc128 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":84:27)
#loc129 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_13.c":84:17)
#loc130 = loc(fused[#loc1, #loc2])
#loc131 = loc(fused[#loc3, #loc4])
#loc132 = loc(fused[#loc5, #loc6])
#loc133 = loc(fused[#loc7, #loc8])
#loc134 = loc(fused[#loc10, #loc11])
#loc135 = loc(fused[#loc12, #loc13])
#loc136 = loc(fused[#loc14, #loc15])
#loc137 = loc(fused[#loc16, #loc17])
#loc138 = loc(fused[#loc18, #loc19])
#loc139 = loc(fused[#loc20, #loc17])
#loc140 = loc(fused[#loc21, #loc22])
#loc141 = loc(fused[#loc23, #loc24])
#loc142 = loc(fused[#loc27, #loc26])
#loc143 = loc(fused[#loc28, #loc29])
#loc144 = loc(fused[#loc25, #loc33])
#loc145 = loc(fused[#loc34, #loc24])
#loc146 = loc(fused[#loc36, #loc37])
#loc147 = loc(fused[#loc38, #loc39])
#loc148 = loc(fused[#loc40, #loc41])
#loc149 = loc(fused[#loc42, #loc43])
#loc150 = loc(fused[#loc44, #loc45])
#loc151 = loc(fused[#loc50, #loc51])
#loc154 = loc(fused[#loc61, #loc62])
#loc155 = loc(fused[#loc65, #loc66])
#loc156 = loc(fused[#loc69, #loc68])
#loc157 = loc(fused[#loc71, #loc72])
#loc158 = loc(fused[#loc73, #loc74])
#loc159 = loc(fused[#loc75, #loc76])
#loc160 = loc(fused[#loc77, #loc78])
#loc161 = loc(fused[#loc79, #loc80])
#loc162 = loc(fused[#loc81, #loc82, #loc83, #loc78])
#loc163 = loc(fused[#loc85, #loc86])
#loc164 = loc(fused[#loc87, #loc88])
#loc165 = loc(fused[#loc91, #loc90])
#loc166 = loc(fused[#loc92, #loc93])
#loc167 = loc(fused[#loc89, #loc98])
#loc168 = loc(fused[#loc99, #loc88])
#loc169 = loc(fused[#loc102, #loc103])
#loc170 = loc(fused[#loc104, #loc105])
#loc171 = loc(fused[#loc106, #loc107])
#loc172 = loc(fused[#loc108, #loc109])
#loc173 = loc(fused[#loc110, #loc111])
#loc174 = loc(fused[#loc112, #loc109])
#loc175 = loc(fused[#loc113, #loc114])
#loc176 = loc(fused[#loc115, #loc116])
#loc177 = loc(fused[#loc119, #loc118])
#loc178 = loc(fused[#loc120, #loc121])
#loc179 = loc(fused[#loc117, #loc126])
#loc180 = loc(fused[#loc127, #loc116])
