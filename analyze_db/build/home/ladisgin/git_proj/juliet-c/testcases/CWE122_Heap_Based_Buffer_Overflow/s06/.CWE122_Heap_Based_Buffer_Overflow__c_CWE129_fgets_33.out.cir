!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":154:27)
#loc287 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":190:10)
#loc288 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":190:14)
#loc289 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":190:20)
#loc290 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":190:32)
#true = #cir.bool<true> : !cir.bool
#loc413 = loc(fused[#loc287, #loc288])
#loc414 = loc(fused[#loc289, #loc290])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc303)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc304)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc305)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc306)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc307)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc308)
  cir.func private @printIntLine(!s32i) loc(#loc309)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc16)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc310)
  cir.func @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc312)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc313)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc314)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc315)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc316)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc317)
    cir.store %4, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc32)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc34)
    cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc318)
    cir.br ^bb1 loc(#loc319)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc312)
    cir.store %8, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc312)
    cir.br ^bb2 loc(#loc320)
  ^bb2:  // pred: ^bb1
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc40)
    %10 = cir.const #cir.int<3> : !s32i loc(#loc41)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc41)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc41)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc41)
    %14 = cir.const #cir.int<2> : !s32i loc(#loc41)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc41)
    %16 = cir.binop(add, %13, %15) : !u64i loc(#loc41)
    %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc41)
    %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc304)
    %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc42)
    %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc43)
    %21 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc44)
    %22 = cir.cmp(ne, %20, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc321)
    cir.brcond %22 ^bb3, ^bb4 loc(#loc322)
  ^bb3:  // pred: ^bb2
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc48)
    %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc49)
    cir.store %24, %4 : !s32i, !cir.ptr<!s32i> loc(#loc323)
    cir.br ^bb5 loc(#loc46)
  ^bb4:  // pred: ^bb2
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    cir.br ^bb5 loc(#loc39)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc39)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc37)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc324)
  ^bb8:  // pred: ^bb7
    %27 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc24)
    %28 = cir.load %27 : !cir.ptr<!s32i>, !s32i loc(#loc24)
    cir.store %28, %1 : !s32i, !cir.ptr<!s32i> loc(#loc313)
    cir.br ^bb9 loc(#loc325)
  ^bb9:  // pred: ^bb8
    %29 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc57)
    %30 = cir.const #cir.int<10> : !s32i loc(#loc58)
    %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc58)
    %32 = cir.const #cir.int<4> : !u64i loc(#loc326)
    %33 = cir.binop(mul, %31, %32) : !u64i loc(#loc327)
    %34 = cir.call @malloc(%33) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc57)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc328)
    cir.store %35, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc315)
    cir.br ^bb10 loc(#loc329)
  ^bb10:  // pred: ^bb9
    %36 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc63)
    %37 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc64)
    %38 = cir.cmp(eq, %36, %37) : !cir.ptr<!s32i>, !cir.bool loc(#loc330)
    cir.brcond %38 ^bb11, ^bb12 loc(#loc331)
  ^bb11:  // pred: ^bb10
    %39 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc66)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %41 = cir.unary(minus, %40) : !s32i, !s32i loc(#loc68)
    cir.call @exit(%41) : (!s32i) -> () extra(#fn_attr) loc(#loc66)
    cir.br ^bb12 loc(#loc62)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc62)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc332)
  ^bb14:  // pred: ^bb13
    %42 = cir.const #cir.int<0> : !s32i loc(#loc71)
    cir.store %42, %2 : !s32i, !cir.ptr<!s32i> loc(#loc333)
    cir.br ^bb15 loc(#loc332)
  ^bb15:  // 2 preds: ^bb14, ^bb17
    %43 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc73)
    %44 = cir.const #cir.int<10> : !s32i loc(#loc74)
    %45 = cir.cmp(lt, %43, %44) : !s32i, !cir.bool loc(#loc334)
    cir.brcond %45 ^bb16, ^bb18 loc(#loc334)
  ^bb16:  // pred: ^bb15
    %46 = cir.const #cir.int<0> : !s32i loc(#loc75)
    %47 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc76)
    %48 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc77)
    %49 = cir.ptr_stride(%47 : !cir.ptr<!s32i>, %48 : !s32i), !cir.ptr<!s32i> loc(#loc78)
    cir.store %46, %49 : !s32i, !cir.ptr<!s32i> loc(#loc335)
    cir.br ^bb17 loc(#loc70)
  ^bb17:  // pred: ^bb16
    %50 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    %51 = cir.unary(inc, %50) : !s32i, !s32i loc(#loc80)
    cir.store %51, %2 : !s32i, !cir.ptr<!s32i> loc(#loc336)
    cir.br ^bb15 loc(#loc332)
  ^bb18:  // pred: ^bb15
    cir.br ^bb19 loc(#loc70)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc337)
  ^bb20:  // pred: ^bb19
    %52 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    %53 = cir.const #cir.int<0> : !s32i loc(#loc84)
    %54 = cir.cmp(ge, %52, %53) : !s32i, !cir.bool loc(#loc338)
    cir.brcond %54 ^bb21, ^bb28 loc(#loc339)
  ^bb21:  // pred: ^bb20
    %55 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %56 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc89)
    %57 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    %58 = cir.ptr_stride(%56 : !cir.ptr<!s32i>, %57 : !s32i), !cir.ptr<!s32i> loc(#loc91)
    cir.store %55, %58 : !s32i, !cir.ptr<!s32i> loc(#loc340)
    cir.br ^bb22 loc(#loc341)
  ^bb22:  // pred: ^bb21
    %59 = cir.const #cir.int<0> : !s32i loc(#loc94)
    cir.store %59, %2 : !s32i, !cir.ptr<!s32i> loc(#loc342)
    cir.br ^bb23 loc(#loc341)
  ^bb23:  // 2 preds: ^bb22, ^bb25
    %60 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    %61 = cir.const #cir.int<10> : !s32i loc(#loc97)
    %62 = cir.cmp(lt, %60, %61) : !s32i, !cir.bool loc(#loc343)
    cir.brcond %62 ^bb24, ^bb26 loc(#loc343)
  ^bb24:  // pred: ^bb23
    %63 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc98)
    %64 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %65 = cir.ptr_stride(%63 : !cir.ptr<!s32i>, %64 : !s32i), !cir.ptr<!s32i> loc(#loc100)
    %66 = cir.load %65 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    cir.call @printIntLine(%66) : (!s32i) -> () loc(#loc101)
    cir.br ^bb25 loc(#loc93)
  ^bb25:  // pred: ^bb24
    %67 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc102)
    %68 = cir.unary(inc, %67) : !s32i, !s32i loc(#loc103)
    cir.store %68, %2 : !s32i, !cir.ptr<!s32i> loc(#loc344)
    cir.br ^bb23 loc(#loc341)
  ^bb26:  // pred: ^bb23
    cir.br ^bb27 loc(#loc93)
  ^bb27:  // pred: ^bb26
    cir.br ^bb29 loc(#loc86)
  ^bb28:  // pred: ^bb20
    %69 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc16)
    %70 = cir.cast(array_to_ptrdecay, %69 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc16)
    cir.call @printLine(%70) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    cir.br ^bb29 loc(#loc82)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc82)
  ^bb30:  // pred: ^bb29
    %71 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc105)
    %72 = cir.cast(bitcast, %71 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc105)
    cir.call @free(%72) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc106)
    cir.br ^bb31 loc(#loc56)
  ^bb31:  // pred: ^bb30
    cir.br ^bb32 loc(#loc54)
  ^bb32:  // pred: ^bb31
    cir.return loc(#loc20)
  } loc(#loc311)
  cir.func internal private @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc346)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc347)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc348)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc349)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc350)
    cir.store %3, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc118)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc120)
    cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc351)
    %7 = cir.const #cir.int<7> : !s32i loc(#loc122)
    cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc352)
    cir.br ^bb1 loc(#loc353)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc110)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc346)
    cir.br ^bb2 loc(#loc354)
  ^bb2:  // pred: ^bb1
    %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc128)
    %11 = cir.const #cir.int<10> : !s32i loc(#loc129)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc129)
    %13 = cir.const #cir.int<4> : !u64i loc(#loc355)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc356)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc128)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc357)
    cir.store %16, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc348)
    cir.br ^bb3 loc(#loc358)
  ^bb3:  // pred: ^bb2
    %17 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc134)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc135)
    %19 = cir.cmp(eq, %17, %18) : !cir.ptr<!s32i>, !cir.bool loc(#loc359)
    cir.brcond %19 ^bb4, ^bb5 loc(#loc360)
  ^bb4:  // pred: ^bb3
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc137)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc138)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc139)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc137)
    cir.br ^bb5 loc(#loc133)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc133)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc361)
  ^bb7:  // pred: ^bb6
    %23 = cir.const #cir.int<0> : !s32i loc(#loc142)
    cir.store %23, %1 : !s32i, !cir.ptr<!s32i> loc(#loc362)
    cir.br ^bb8 loc(#loc361)
  ^bb8:  // 2 preds: ^bb7, ^bb10
    %24 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    %25 = cir.const #cir.int<10> : !s32i loc(#loc145)
    %26 = cir.cmp(lt, %24, %25) : !s32i, !cir.bool loc(#loc363)
    cir.brcond %26 ^bb9, ^bb11 loc(#loc363)
  ^bb9:  // pred: ^bb8
    %27 = cir.const #cir.int<0> : !s32i loc(#loc146)
    %28 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc147)
    %29 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc148)
    %30 = cir.ptr_stride(%28 : !cir.ptr<!s32i>, %29 : !s32i), !cir.ptr<!s32i> loc(#loc149)
    cir.store %27, %30 : !s32i, !cir.ptr<!s32i> loc(#loc364)
    cir.br ^bb10 loc(#loc141)
  ^bb10:  // pred: ^bb9
    %31 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    %32 = cir.unary(inc, %31) : !s32i, !s32i loc(#loc151)
    cir.store %32, %1 : !s32i, !cir.ptr<!s32i> loc(#loc365)
    cir.br ^bb8 loc(#loc361)
  ^bb11:  // pred: ^bb8
    cir.br ^bb12 loc(#loc141)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc366)
  ^bb13:  // pred: ^bb12
    %33 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc154)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc155)
    %35 = cir.cmp(ge, %33, %34) : !s32i, !cir.bool loc(#loc367)
    cir.brcond %35 ^bb14, ^bb21 loc(#loc368)
  ^bb14:  // pred: ^bb13
    %36 = cir.const #cir.int<1> : !s32i loc(#loc159)
    %37 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc160)
    %38 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc161)
    %39 = cir.ptr_stride(%37 : !cir.ptr<!s32i>, %38 : !s32i), !cir.ptr<!s32i> loc(#loc162)
    cir.store %36, %39 : !s32i, !cir.ptr<!s32i> loc(#loc369)
    cir.br ^bb15 loc(#loc370)
  ^bb15:  // pred: ^bb14
    %40 = cir.const #cir.int<0> : !s32i loc(#loc165)
    cir.store %40, %1 : !s32i, !cir.ptr<!s32i> loc(#loc371)
    cir.br ^bb16 loc(#loc370)
  ^bb16:  // 2 preds: ^bb15, ^bb18
    %41 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc167)
    %42 = cir.const #cir.int<10> : !s32i loc(#loc168)
    %43 = cir.cmp(lt, %41, %42) : !s32i, !cir.bool loc(#loc372)
    cir.brcond %43 ^bb17, ^bb19 loc(#loc372)
  ^bb17:  // pred: ^bb16
    %44 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc169)
    %45 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc170)
    %46 = cir.ptr_stride(%44 : !cir.ptr<!s32i>, %45 : !s32i), !cir.ptr<!s32i> loc(#loc171)
    %47 = cir.load %46 : !cir.ptr<!s32i>, !s32i loc(#loc169)
    cir.call @printIntLine(%47) : (!s32i) -> () loc(#loc172)
    cir.br ^bb18 loc(#loc164)
  ^bb18:  // pred: ^bb17
    %48 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc173)
    %49 = cir.unary(inc, %48) : !s32i, !s32i loc(#loc174)
    cir.store %49, %1 : !s32i, !cir.ptr<!s32i> loc(#loc373)
    cir.br ^bb16 loc(#loc370)
  ^bb19:  // pred: ^bb16
    cir.br ^bb20 loc(#loc164)
  ^bb20:  // pred: ^bb19
    cir.br ^bb22 loc(#loc157)
  ^bb21:  // pred: ^bb13
    %50 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc175)
    %51 = cir.cast(array_to_ptrdecay, %50 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc175)
    cir.call @printLine(%51) : (!cir.ptr<!s8i>) -> () loc(#loc176)
    cir.br ^bb22 loc(#loc153)
  ^bb22:  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc153)
  ^bb23:  // pred: ^bb22
    %52 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc177)
    %53 = cir.cast(bitcast, %52 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc177)
    cir.call @free(%53) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc178)
    cir.br ^bb24 loc(#loc127)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc125)
  ^bb25:  // pred: ^bb24
    cir.return loc(#loc108)
  } loc(#loc345)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc179)
  cir.func internal private @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc375)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc376)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc377)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc378)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc379)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc380)
    cir.store %4, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc193)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc194)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc195)
    cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc381)
    cir.br ^bb1 loc(#loc382)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc375)
    cir.store %8, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc375)
    cir.br ^bb2 loc(#loc383)
  ^bb2:  // pred: ^bb1
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc201)
    %10 = cir.const #cir.int<3> : !s32i loc(#loc202)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc202)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc202)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc202)
    %14 = cir.const #cir.int<2> : !s32i loc(#loc202)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc202)
    %16 = cir.binop(add, %13, %15) : !u64i loc(#loc202)
    %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc202)
    %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc304)
    %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc203)
    %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc204)
    %21 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc205)
    %22 = cir.cmp(ne, %20, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc384)
    cir.brcond %22 ^bb3, ^bb4 loc(#loc385)
  ^bb3:  // pred: ^bb2
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc209)
    %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc210)
    cir.store %24, %4 : !s32i, !cir.ptr<!s32i> loc(#loc386)
    cir.br ^bb5 loc(#loc207)
  ^bb4:  // pred: ^bb2
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc213)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc213)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc214)
    cir.br ^bb5 loc(#loc200)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc200)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc198)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc387)
  ^bb8:  // pred: ^bb7
    %27 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc185)
    %28 = cir.load %27 : !cir.ptr<!s32i>, !s32i loc(#loc185)
    cir.store %28, %1 : !s32i, !cir.ptr<!s32i> loc(#loc376)
    cir.br ^bb9 loc(#loc388)
  ^bb9:  // pred: ^bb8
    %29 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc219)
    %30 = cir.const #cir.int<10> : !s32i loc(#loc220)
    %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc220)
    %32 = cir.const #cir.int<4> : !u64i loc(#loc389)
    %33 = cir.binop(mul, %31, %32) : !u64i loc(#loc390)
    %34 = cir.call @malloc(%33) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc219)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc391)
    cir.store %35, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc378)
    cir.br ^bb10 loc(#loc392)
  ^bb10:  // pred: ^bb9
    %36 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc225)
    %37 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc226)
    %38 = cir.cmp(eq, %36, %37) : !cir.ptr<!s32i>, !cir.bool loc(#loc393)
    cir.brcond %38 ^bb11, ^bb12 loc(#loc394)
  ^bb11:  // pred: ^bb10
    %39 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc228)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc229)
    %41 = cir.unary(minus, %40) : !s32i, !s32i loc(#loc230)
    cir.call @exit(%41) : (!s32i) -> () extra(#fn_attr) loc(#loc228)
    cir.br ^bb12 loc(#loc224)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc224)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc395)
  ^bb14:  // pred: ^bb13
    %42 = cir.const #cir.int<0> : !s32i loc(#loc233)
    cir.store %42, %2 : !s32i, !cir.ptr<!s32i> loc(#loc396)
    cir.br ^bb15 loc(#loc395)
  ^bb15:  // 2 preds: ^bb14, ^bb17
    %43 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc235)
    %44 = cir.const #cir.int<10> : !s32i loc(#loc236)
    %45 = cir.cmp(lt, %43, %44) : !s32i, !cir.bool loc(#loc397)
    cir.brcond %45 ^bb16, ^bb18 loc(#loc397)
  ^bb16:  // pred: ^bb15
    %46 = cir.const #cir.int<0> : !s32i loc(#loc237)
    %47 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc238)
    %48 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc239)
    %49 = cir.ptr_stride(%47 : !cir.ptr<!s32i>, %48 : !s32i), !cir.ptr<!s32i> loc(#loc240)
    cir.store %46, %49 : !s32i, !cir.ptr<!s32i> loc(#loc398)
    cir.br ^bb17 loc(#loc232)
  ^bb17:  // pred: ^bb16
    %50 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc241)
    %51 = cir.unary(inc, %50) : !s32i, !s32i loc(#loc242)
    cir.store %51, %2 : !s32i, !cir.ptr<!s32i> loc(#loc399)
    cir.br ^bb15 loc(#loc395)
  ^bb18:  // pred: ^bb15
    cir.br ^bb19 loc(#loc232)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc400)
  ^bb20:  // pred: ^bb19
    %52 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc245)
    %53 = cir.const #cir.int<0> : !s32i loc(#loc246)
    %54 = cir.cmp(ge, %52, %53) : !s32i, !cir.bool loc(#loc401)
    cir.brcond %54 ^bb21, ^bb26 loc(#loc247)
  ^bb21:  // pred: ^bb20
    %55 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc248)
    %56 = cir.const #cir.int<10> : !s32i loc(#loc249)
    %57 = cir.cmp(lt, %55, %56) : !s32i, !cir.bool loc(#loc402)
    cir.brcond %57 ^bb22, ^bb23 loc(#loc247)
  ^bb22:  // pred: ^bb21
    %58 = cir.const #true loc(#loc247)
    cir.br ^bb24(%58 : !cir.bool) loc(#loc247)
  ^bb23:  // pred: ^bb21
    %59 = cir.const #false loc(#loc247)
    cir.br ^bb24(%59 : !cir.bool) loc(#loc247)
  ^bb24(%60: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":154:27)):  // 2 preds: ^bb22, ^bb23
    cir.br ^bb25 loc(#loc247)
  ^bb25:  // pred: ^bb24
    cir.br ^bb27(%60 : !cir.bool) loc(#loc247)
  ^bb26:  // pred: ^bb20
    %61 = cir.const #false loc(#loc247)
    cir.br ^bb27(%61 : !cir.bool) loc(#loc247)
  ^bb27(%62: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":154:27)):  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc247)
  ^bb28:  // pred: ^bb27
    cir.brcond %62 ^bb29, ^bb36 loc(#loc403)
  ^bb29:  // pred: ^bb28
    %63 = cir.const #cir.int<1> : !s32i loc(#loc254)
    %64 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc255)
    %65 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc256)
    %66 = cir.ptr_stride(%64 : !cir.ptr<!s32i>, %65 : !s32i), !cir.ptr<!s32i> loc(#loc257)
    cir.store %63, %66 : !s32i, !cir.ptr<!s32i> loc(#loc404)
    cir.br ^bb30 loc(#loc405)
  ^bb30:  // pred: ^bb29
    %67 = cir.const #cir.int<0> : !s32i loc(#loc260)
    cir.store %67, %2 : !s32i, !cir.ptr<!s32i> loc(#loc406)
    cir.br ^bb31 loc(#loc405)
  ^bb31:  // 2 preds: ^bb30, ^bb33
    %68 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc262)
    %69 = cir.const #cir.int<10> : !s32i loc(#loc263)
    %70 = cir.cmp(lt, %68, %69) : !s32i, !cir.bool loc(#loc407)
    cir.brcond %70 ^bb32, ^bb34 loc(#loc407)
  ^bb32:  // pred: ^bb31
    %71 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc264)
    %72 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc265)
    %73 = cir.ptr_stride(%71 : !cir.ptr<!s32i>, %72 : !s32i), !cir.ptr<!s32i> loc(#loc266)
    %74 = cir.load %73 : !cir.ptr<!s32i>, !s32i loc(#loc264)
    cir.call @printIntLine(%74) : (!s32i) -> () loc(#loc267)
    cir.br ^bb33 loc(#loc259)
  ^bb33:  // pred: ^bb32
    %75 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc268)
    %76 = cir.unary(inc, %75) : !s32i, !s32i loc(#loc269)
    cir.store %76, %2 : !s32i, !cir.ptr<!s32i> loc(#loc408)
    cir.br ^bb31 loc(#loc405)
  ^bb34:  // pred: ^bb31
    cir.br ^bb35 loc(#loc259)
  ^bb35:  // pred: ^bb34
    cir.br ^bb37 loc(#loc252)
  ^bb36:  // pred: ^bb28
    %77 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc179)
    %78 = cir.cast(array_to_ptrdecay, %77 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc179)
    cir.call @printLine(%78) : (!cir.ptr<!s8i>) -> () loc(#loc270)
    cir.br ^bb37 loc(#loc244)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc244)
  ^bb38:  // pred: ^bb37
    %79 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc271)
    %80 = cir.cast(bitcast, %79 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc271)
    cir.call @free(%80) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc272)
    cir.br ^bb39 loc(#loc218)
  ^bb39:  // pred: ^bb38
    cir.br ^bb40 loc(#loc216)
  ^bb40:  // pred: ^bb39
    cir.return loc(#loc181)
  } loc(#loc374)
  cir.func @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33L7goodG2BEv() : () -> () loc(#loc275)
    cir.call @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33L7goodB2GEv() : () -> () loc(#loc276)
    cir.return loc(#loc274)
  } loc(#loc409)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc410)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc411)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc281)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc282)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc283)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc284)
  cir.func @main(%arg0: !s32i loc(fused[#loc287, #loc288]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc289, #loc290])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc413)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc414)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc286)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc291)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc291)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc292)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc293)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc293)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc294)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc281)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc281)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc295)
    cir.call @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_334goodEv() : () -> () loc(#loc296)
    %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc282)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc282)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc297)
    %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc283)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc283)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc298)
    cir.call @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_333badEv() : () -> () loc(#loc299)
    %12 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc284)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc284)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc300)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc301)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc415)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc415)
    cir.return %15 : !s32i loc(#loc415)
  } loc(#loc412)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":43:23)
#loc10 = loc("/usr/include/stdlib.h":672:1)
#loc11 = loc("/usr/include/stdlib.h":672:45)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":70:27)
#loc17 = loc("/usr/include/stdlib.h":687:1)
#loc18 = loc("/usr/include/stdlib.h":687:32)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":27:1)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":75:1)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":34:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":34:45)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":47:9)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":47:20)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":49:13)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":49:17)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":50:13)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":50:58)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":29:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":29:9)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":30:5)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":30:20)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":32:13)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":32:12)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":32:5)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":33:5)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":45:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":36:9)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":44:9)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":36:19)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":36:32)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":36:49)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":36:13)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":36:59)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":37:9)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":40:9)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":42:9)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":39:25)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":39:20)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":39:13)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":39:36)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":43:13)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":46:5)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":74:5)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":48:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":73:9)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":50:35)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":50:42)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":50:47)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":50:57)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":51:13)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":51:43)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":51:17)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":51:27)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":51:33)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":51:34)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":51:40)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":51:39)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":53:13)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":56:13)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":53:22)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":53:18)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":53:25)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":53:29)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":55:29)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":55:17)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":55:24)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":55:25)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":53:34)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":53:33)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":59:13)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":71:13)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":59:17)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":59:25)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":60:13)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":67:13)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":69:13)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":61:32)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":61:17)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":61:24)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":61:28)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":63:17)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":66:17)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":63:25)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":63:21)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":63:28)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":63:32)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":65:34)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":65:41)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":65:42)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":65:21)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":63:37)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":63:36)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":70:17)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":72:18)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":72:13)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":82:1)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":120:1)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":92:9)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":92:20)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":94:13)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":94:17)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":95:13)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":95:58)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":84:5)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":84:9)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":85:5)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":85:20)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":87:13)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":87:12)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":87:5)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":90:12)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":90:5)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":91:5)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":119:5)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":93:9)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":118:9)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":95:35)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":95:42)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":95:47)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":95:57)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":96:13)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":96:43)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":96:17)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":96:27)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":96:33)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":96:34)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":96:40)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":96:39)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":98:13)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":101:13)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":98:22)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":98:18)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":98:25)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":98:29)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":100:29)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":100:17)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":100:24)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":100:25)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":98:34)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":98:33)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":104:13)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":116:13)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":104:17)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":104:25)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":105:13)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":112:13)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":114:13)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":106:32)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":106:17)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":106:24)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":106:28)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":108:17)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":111:17)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":108:25)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":108:21)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":108:28)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":108:32)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":110:34)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":110:41)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":110:42)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":110:21)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":108:37)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":108:36)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":115:27)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":115:17)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":117:18)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":117:13)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":165:27)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":123:1)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":170:1)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":130:9)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":130:45)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":143:9)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":143:20)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":145:13)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":145:17)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":146:13)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":146:58)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":125:5)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":125:9)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":126:5)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":126:20)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":128:13)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":128:12)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":128:5)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":129:5)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":141:5)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":132:9)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":140:9)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":132:19)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":132:32)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":132:49)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":132:13)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":132:59)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":133:9)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":136:9)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":138:9)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":135:25)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":135:20)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":135:13)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":135:36)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":139:23)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":139:13)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":142:5)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":169:5)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":144:9)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":168:9)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":146:35)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":146:42)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":146:47)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":146:57)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":147:13)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":147:43)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":147:17)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":147:27)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":147:33)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":147:34)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":147:40)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":147:39)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":149:13)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":152:13)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":149:22)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":149:18)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":149:25)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":149:29)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":151:29)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":151:17)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":151:24)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":151:25)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":149:34)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":149:33)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":154:13)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":166:13)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":154:17)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":154:25)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":154:30)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":154:38)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":154:40)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":155:13)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":162:13)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":164:13)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":156:32)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":156:17)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":156:24)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":156:28)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":158:17)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":161:17)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":158:25)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":158:21)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":158:28)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":158:32)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":160:34)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":160:41)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":160:42)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":160:21)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":158:37)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":158:36)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":165:17)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":167:18)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":167:13)
#loc273 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":172:1)
#loc274 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":176:1)
#loc275 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":174:5)
#loc276 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":175:5)
#loc277 = loc("/usr/include/stdlib.h":575:1)
#loc278 = loc("/usr/include/stdlib.h":575:41)
#loc279 = loc("/usr/include/time.h":76:1)
#loc280 = loc("/usr/include/time.h":76:38)
#loc281 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":195:15)
#loc282 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":197:15)
#loc283 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":200:15)
#loc284 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":202:15)
#loc285 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":190:1)
#loc286 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":205:1)
#loc291 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":191:1)
#loc292 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":193:27)
#loc293 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":193:22)
#loc294 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":193:5)
#loc295 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":195:5)
#loc296 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":196:5)
#loc297 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":197:5)
#loc298 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":200:5)
#loc299 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":201:5)
#loc300 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":202:5)
#loc301 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":204:12)
#loc302 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_33.cpp":204:5)
#loc303 = loc(fused[#loc1, #loc2])
#loc304 = loc(fused[#loc3, #loc4])
#loc305 = loc(fused[#loc5, #loc6])
#loc306 = loc(fused[#loc7, #loc8])
#loc307 = loc(fused[#loc10, #loc11])
#loc308 = loc(fused[#loc12, #loc13])
#loc309 = loc(fused[#loc14, #loc15])
#loc310 = loc(fused[#loc17, #loc18])
#loc311 = loc(fused[#loc19, #loc20])
#loc312 = loc(fused[#loc21, #loc22])
#loc313 = loc(fused[#loc23, #loc24])
#loc314 = loc(fused[#loc25, #loc26])
#loc315 = loc(fused[#loc27, #loc28])
#loc316 = loc(fused[#loc29, #loc30])
#loc317 = loc(fused[#loc31, #loc32])
#loc318 = loc(fused[#loc35, #loc33])
#loc319 = loc(fused[#loc36, #loc37])
#loc320 = loc(fused[#loc38, #loc39])
#loc321 = loc(fused[#loc43, #loc44])
#loc322 = loc(fused[#loc45, #loc46, #loc47, #loc39])
#loc323 = loc(fused[#loc50, #loc51])
#loc324 = loc(fused[#loc53, #loc54])
#loc325 = loc(fused[#loc55, #loc56])
#loc326 = loc(fused[#loc59, #loc60])
#loc327 = loc(fused[#loc58, #loc60])
#loc328 = loc(fused[#loc57, #loc28])
#loc329 = loc(fused[#loc61, #loc62])
#loc330 = loc(fused[#loc63, #loc64])
#loc331 = loc(fused[#loc65, #loc62])
#loc332 = loc(fused[#loc69, #loc70])
#loc333 = loc(fused[#loc72, #loc71])
#loc334 = loc(fused[#loc73, #loc74])
#loc335 = loc(fused[#loc76, #loc75])
#loc336 = loc(fused[#loc80, #loc79])
#loc337 = loc(fused[#loc81, #loc82])
#loc338 = loc(fused[#loc83, #loc84])
#loc339 = loc(fused[#loc85, #loc86, #loc87, #loc82])
#loc340 = loc(fused[#loc89, #loc88])
#loc341 = loc(fused[#loc92, #loc93])
#loc342 = loc(fused[#loc95, #loc94])
#loc343 = loc(fused[#loc96, #loc97])
#loc344 = loc(fused[#loc103, #loc102])
#loc345 = loc(fused[#loc107, #loc108])
#loc346 = loc(fused[#loc109, #loc110])
#loc347 = loc(fused[#loc111, #loc112])
#loc348 = loc(fused[#loc113, #loc114])
#loc349 = loc(fused[#loc115, #loc116])
#loc350 = loc(fused[#loc117, #loc118])
#loc351 = loc(fused[#loc121, #loc119])
#loc352 = loc(fused[#loc123, #loc122])
#loc353 = loc(fused[#loc124, #loc125])
#loc354 = loc(fused[#loc126, #loc127])
#loc355 = loc(fused[#loc130, #loc131])
#loc356 = loc(fused[#loc129, #loc131])
#loc357 = loc(fused[#loc128, #loc114])
#loc358 = loc(fused[#loc132, #loc133])
#loc359 = loc(fused[#loc134, #loc135])
#loc360 = loc(fused[#loc136, #loc133])
#loc361 = loc(fused[#loc140, #loc141])
#loc362 = loc(fused[#loc143, #loc142])
#loc363 = loc(fused[#loc144, #loc145])
#loc364 = loc(fused[#loc147, #loc146])
#loc365 = loc(fused[#loc151, #loc150])
#loc366 = loc(fused[#loc152, #loc153])
#loc367 = loc(fused[#loc154, #loc155])
#loc368 = loc(fused[#loc156, #loc157, #loc158, #loc153])
#loc369 = loc(fused[#loc160, #loc159])
#loc370 = loc(fused[#loc163, #loc164])
#loc371 = loc(fused[#loc166, #loc165])
#loc372 = loc(fused[#loc167, #loc168])
#loc373 = loc(fused[#loc174, #loc173])
#loc374 = loc(fused[#loc180, #loc181])
#loc375 = loc(fused[#loc182, #loc183])
#loc376 = loc(fused[#loc184, #loc185])
#loc377 = loc(fused[#loc186, #loc187])
#loc378 = loc(fused[#loc188, #loc189])
#loc379 = loc(fused[#loc190, #loc191])
#loc380 = loc(fused[#loc192, #loc193])
#loc381 = loc(fused[#loc196, #loc194])
#loc382 = loc(fused[#loc197, #loc198])
#loc383 = loc(fused[#loc199, #loc200])
#loc384 = loc(fused[#loc204, #loc205])
#loc385 = loc(fused[#loc206, #loc207, #loc208, #loc200])
#loc386 = loc(fused[#loc211, #loc212])
#loc387 = loc(fused[#loc215, #loc216])
#loc388 = loc(fused[#loc217, #loc218])
#loc389 = loc(fused[#loc221, #loc222])
#loc390 = loc(fused[#loc220, #loc222])
#loc391 = loc(fused[#loc219, #loc189])
#loc392 = loc(fused[#loc223, #loc224])
#loc393 = loc(fused[#loc225, #loc226])
#loc394 = loc(fused[#loc227, #loc224])
#loc395 = loc(fused[#loc231, #loc232])
#loc396 = loc(fused[#loc234, #loc233])
#loc397 = loc(fused[#loc235, #loc236])
#loc398 = loc(fused[#loc238, #loc237])
#loc399 = loc(fused[#loc242, #loc241])
#loc400 = loc(fused[#loc243, #loc244])
#loc401 = loc(fused[#loc245, #loc246])
#loc402 = loc(fused[#loc248, #loc250])
#loc403 = loc(fused[#loc251, #loc252, #loc253, #loc244])
#loc404 = loc(fused[#loc255, #loc254])
#loc405 = loc(fused[#loc258, #loc259])
#loc406 = loc(fused[#loc261, #loc260])
#loc407 = loc(fused[#loc262, #loc263])
#loc408 = loc(fused[#loc269, #loc268])
#loc409 = loc(fused[#loc273, #loc274])
#loc410 = loc(fused[#loc277, #loc278])
#loc411 = loc(fused[#loc279, #loc280])
#loc412 = loc(fused[#loc285, #loc286])
#loc415 = loc(fused[#loc302, #loc301])
