!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__char_alloca_loop_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc159)
  cir.func no_proto @CWE124_Buffer_Underwrite__char_alloca_loop_32_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc161)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc162)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc163)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc164)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc162)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc163)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc12)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc12)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc12)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc12)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %10, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc164)
    %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc13)
    %13 = cir.const #cir.int<65> : !s32i loc(#loc14)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc15)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc15)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc15)
    cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc165)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc19)
    %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc21)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc21)
    %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc23)
    cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc166)
    cir.scope {
      %25 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc168)
      %26 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc27)
      %27 = cir.load %26 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
      cir.store %27, %25 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc168)
      %28 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
      %29 = cir.const #cir.int<8> : !s32i loc(#loc30)
      %30 = cir.unary(minus, %29) : !s32i, !s32i loc(#loc30)
      %31 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc31)
      cir.store %31, %25 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc169)
      %32 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
      %33 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc34)
      cir.store %32, %33 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc170)
    } loc(#loc167)
    cir.scope {
      %25 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc172)
      %26 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc39)
      %27 = cir.load %26 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
      cir.store %27, %25 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc172)
      cir.scope {
        %28 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc174)
        %29 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc175)
        %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
        %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc47)
        %32 = cir.const #cir.int<67> : !s32i loc(#loc48)
        %33 = cir.const #cir.int<100> : !s32i loc(#loc49)
        %34 = cir.const #cir.int<1> : !s32i loc(#loc50)
        %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc49)
        %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc49)
        cir.libc.memset %36 bytes from %31 set to %32 : !cir.ptr<!void>, !s32i, !u64i loc(#loc176)
        %37 = cir.const #cir.int<0> : !s32i loc(#loc53)
        %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc53)
        %39 = cir.const #cir.int<100> : !s32i loc(#loc54)
        %40 = cir.const #cir.int<1> : !s32i loc(#loc55)
        %41 = cir.binop(sub, %39, %40) nsw : !s32i loc(#loc54)
        %42 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc56)
        %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !s32i), !cir.ptr<!s8i> loc(#loc56)
        cir.store %38, %43 : !s8i, !cir.ptr<!s8i> loc(#loc177)
        cir.scope {
          %52 = cir.const #cir.int<0> : !s32i loc(#loc59)
          %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc59)
          cir.store %53, %28 : !u64i, !cir.ptr<!u64i> loc(#loc179)
          cir.for : cond {
            %54 = cir.load %28 : !cir.ptr<!u64i>, !u64i loc(#loc61)
            %55 = cir.const #cir.int<100> : !s32i loc(#loc62)
            %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc62)
            %57 = cir.cmp(lt, %54, %56) : !u64i, !cir.bool loc(#loc180)
            cir.condition(%57) loc(#loc63)
          } body {
            cir.scope {
              %54 = cir.load %28 : !cir.ptr<!u64i>, !u64i loc(#loc65)
              %55 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc66)
              %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !u64i), !cir.ptr<!s8i> loc(#loc66)
              %57 = cir.load %56 : !cir.ptr<!s8i>, !s8i loc(#loc66)
              %58 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
              %59 = cir.load %28 : !cir.ptr<!u64i>, !u64i loc(#loc68)
              %60 = cir.ptr_stride(%58 : !cir.ptr<!s8i>, %59 : !u64i), !cir.ptr<!s8i> loc(#loc69)
              cir.store %57, %60 : !s8i, !cir.ptr<!s8i> loc(#loc182)
            } loc(#loc181)
            cir.yield loc(#loc58)
          } step {
            %54 = cir.load %28 : !cir.ptr<!u64i>, !u64i loc(#loc71)
            %55 = cir.unary(inc, %54) : !u64i, !u64i loc(#loc72)
            cir.store %55, %28 : !u64i, !cir.ptr<!u64i> loc(#loc183)
            cir.yield loc(#loc178)
          } loc(#loc178)
        } loc(#loc178)
        %44 = cir.const #cir.int<0> : !s32i loc(#loc73)
        %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc73)
        %46 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
        %47 = cir.const #cir.int<100> : !s32i loc(#loc75)
        %48 = cir.const #cir.int<1> : !s32i loc(#loc76)
        %49 = cir.binop(sub, %47, %48) nsw : !s32i loc(#loc75)
        %50 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc77)
        cir.store %45, %50 : !s8i, !cir.ptr<!s8i> loc(#loc184)
        %51 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
        cir.call @printLine(%51) : (!cir.ptr<!s8i>) -> () loc(#loc79)
      } loc(#loc173)
    } loc(#loc171)
    cir.return loc(#loc4)
  } loc(#loc160)
  cir.func no_proto @CWE124_Buffer_Underwrite__char_alloca_loop_32_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc186)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc82)
    cir.return loc(#loc81)
  } loc(#loc185)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc188)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc189)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc190)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc191)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc189)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc190)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc93)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc93)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc93)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc93)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc93)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc93)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc93)
    cir.store %10, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc191)
    %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc94)
    %13 = cir.const #cir.int<65> : !s32i loc(#loc95)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc96)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc96)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc96)
    cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc192)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc100)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc100)
    %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc102)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc103)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc102)
    %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc104)
    cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc193)
    cir.scope {
      %25 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc195)
      %26 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc108)
      %27 = cir.load %26 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
      cir.store %27, %25 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc195)
      %28 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
      cir.store %28, %25 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc196)
      %29 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
      %30 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc113)
      cir.store %29, %30 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc197)
    } loc(#loc194)
    cir.scope {
      %25 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc199)
      %26 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc118)
      %27 = cir.load %26 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
      cir.store %27, %25 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc199)
      cir.scope {
        %28 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc201)
        %29 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc202)
        %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc126)
        %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc126)
        %32 = cir.const #cir.int<67> : !s32i loc(#loc127)
        %33 = cir.const #cir.int<100> : !s32i loc(#loc128)
        %34 = cir.const #cir.int<1> : !s32i loc(#loc129)
        %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc128)
        %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc128)
        cir.libc.memset %36 bytes from %31 set to %32 : !cir.ptr<!void>, !s32i, !u64i loc(#loc203)
        %37 = cir.const #cir.int<0> : !s32i loc(#loc132)
        %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc132)
        %39 = cir.const #cir.int<100> : !s32i loc(#loc133)
        %40 = cir.const #cir.int<1> : !s32i loc(#loc134)
        %41 = cir.binop(sub, %39, %40) nsw : !s32i loc(#loc133)
        %42 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc135)
        %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !s32i), !cir.ptr<!s8i> loc(#loc135)
        cir.store %38, %43 : !s8i, !cir.ptr<!s8i> loc(#loc204)
        cir.scope {
          %52 = cir.const #cir.int<0> : !s32i loc(#loc138)
          %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc138)
          cir.store %53, %28 : !u64i, !cir.ptr<!u64i> loc(#loc206)
          cir.for : cond {
            %54 = cir.load %28 : !cir.ptr<!u64i>, !u64i loc(#loc140)
            %55 = cir.const #cir.int<100> : !s32i loc(#loc141)
            %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc141)
            %57 = cir.cmp(lt, %54, %56) : !u64i, !cir.bool loc(#loc207)
            cir.condition(%57) loc(#loc142)
          } body {
            cir.scope {
              %54 = cir.load %28 : !cir.ptr<!u64i>, !u64i loc(#loc144)
              %55 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc145)
              %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !u64i), !cir.ptr<!s8i> loc(#loc145)
              %57 = cir.load %56 : !cir.ptr<!s8i>, !s8i loc(#loc145)
              %58 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
              %59 = cir.load %28 : !cir.ptr<!u64i>, !u64i loc(#loc147)
              %60 = cir.ptr_stride(%58 : !cir.ptr<!s8i>, %59 : !u64i), !cir.ptr<!s8i> loc(#loc148)
              cir.store %57, %60 : !s8i, !cir.ptr<!s8i> loc(#loc209)
            } loc(#loc208)
            cir.yield loc(#loc137)
          } step {
            %54 = cir.load %28 : !cir.ptr<!u64i>, !u64i loc(#loc150)
            %55 = cir.unary(inc, %54) : !u64i, !u64i loc(#loc151)
            cir.store %55, %28 : !u64i, !cir.ptr<!u64i> loc(#loc210)
            cir.yield loc(#loc205)
          } loc(#loc205)
        } loc(#loc205)
        %44 = cir.const #cir.int<0> : !s32i loc(#loc152)
        %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc152)
        %46 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
        %47 = cir.const #cir.int<100> : !s32i loc(#loc154)
        %48 = cir.const #cir.int<1> : !s32i loc(#loc155)
        %49 = cir.binop(sub, %47, %48) nsw : !s32i loc(#loc154)
        %50 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc156)
        cir.store %45, %50 : !s8i, !cir.ptr<!s8i> loc(#loc211)
        %51 = cir.load %25 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
        cir.call @printLine(%51) : (!cir.ptr<!s8i>) -> () loc(#loc158)
      } loc(#loc200)
    } loc(#loc198)
    cir.return loc(#loc85)
  } loc(#loc187)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__char_alloca_loop_32.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":23:1)
#loc4 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":54:1)
#loc5 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":25:5)
#loc6 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":25:12)
#loc7 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":26:5)
#loc8 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":26:25)
#loc9 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":27:5)
#loc10 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":27:25)
#loc11 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":28:5)
#loc12 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":28:33)
#loc13 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":29:12)
#loc14 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":29:24)
#loc15 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":29:29)
#loc16 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":29:33)
#loc17 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":29:5)
#loc18 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":29:34)
#loc19 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":30:25)
#loc20 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":30:5)
#loc21 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":30:16)
#loc22 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":30:20)
#loc23 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":30:21)
#loc24 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":31:5)
#loc25 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":36:5)
#loc26 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":32:9)
#loc27 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":32:24)
#loc28 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":32:23)
#loc29 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":34:16)
#loc30 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":34:29)
#loc31 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":34:27)
#loc32 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":34:9)
#loc33 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":35:21)
#loc34 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":35:10)
#loc35 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":35:9)
#loc36 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":37:5)
#loc37 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":53:5)
#loc38 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":38:9)
#loc39 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":38:24)
#loc40 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":38:23)
#loc41 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":39:9)
#loc42 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":52:9)
#loc43 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":40:13)
#loc44 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":40:20)
#loc45 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":41:13)
#loc46 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":41:28)
#loc47 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":42:20)
#loc48 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":42:28)
#loc49 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":42:33)
#loc50 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":42:37)
#loc51 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":42:13)
#loc52 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":42:38)
#loc53 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":43:29)
#loc54 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":43:20)
#loc55 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":43:24)
#loc56 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":43:13)
#loc57 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":45:13)
#loc58 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":48:13)
#loc59 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":45:22)
#loc60 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":45:18)
#loc61 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":45:25)
#loc62 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":45:29)
#loc63 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":45:27)
#loc64 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":46:13)
#loc65 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":47:34)
#loc66 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":47:27)
#loc67 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":47:17)
#loc68 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":47:22)
#loc69 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":47:23)
#loc70 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":47:35)
#loc71 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":45:35)
#loc72 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":45:34)
#loc73 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":50:27)
#loc74 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":50:13)
#loc75 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":50:18)
#loc76 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":50:22)
#loc77 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":50:23)
#loc78 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":51:23)
#loc79 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":51:13)
#loc80 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":94:1)
#loc81 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":97:1)
#loc82 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":96:5)
#loc83 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":96:13)
#loc84 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":61:1)
#loc85 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":92:1)
#loc86 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":63:5)
#loc87 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":63:12)
#loc88 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":64:5)
#loc89 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":64:25)
#loc90 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":65:5)
#loc91 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":65:25)
#loc92 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":66:5)
#loc93 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":66:33)
#loc94 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":67:12)
#loc95 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":67:24)
#loc96 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":67:29)
#loc97 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":67:33)
#loc98 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":67:5)
#loc99 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":67:34)
#loc100 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":68:25)
#loc101 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":68:5)
#loc102 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":68:16)
#loc103 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":68:20)
#loc104 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":68:21)
#loc105 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":69:5)
#loc106 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":74:5)
#loc107 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":70:9)
#loc108 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":70:24)
#loc109 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":70:23)
#loc110 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":72:16)
#loc111 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":72:9)
#loc112 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":73:21)
#loc113 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":73:10)
#loc114 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":73:9)
#loc115 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":75:5)
#loc116 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":91:5)
#loc117 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":76:9)
#loc118 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":76:24)
#loc119 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":76:23)
#loc120 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":77:9)
#loc121 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":90:9)
#loc122 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":78:13)
#loc123 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":78:20)
#loc124 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":79:13)
#loc125 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":79:28)
#loc126 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":80:20)
#loc127 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":80:28)
#loc128 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":80:33)
#loc129 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":80:37)
#loc130 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":80:13)
#loc131 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":80:38)
#loc132 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":81:29)
#loc133 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":81:20)
#loc134 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":81:24)
#loc135 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":81:13)
#loc136 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":83:13)
#loc137 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":86:13)
#loc138 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":83:22)
#loc139 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":83:18)
#loc140 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":83:25)
#loc141 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":83:29)
#loc142 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":83:27)
#loc143 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":84:13)
#loc144 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":85:34)
#loc145 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":85:27)
#loc146 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":85:17)
#loc147 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":85:22)
#loc148 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":85:23)
#loc149 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":85:35)
#loc150 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":83:35)
#loc151 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":83:34)
#loc152 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":88:27)
#loc153 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":88:13)
#loc154 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":88:18)
#loc155 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":88:22)
#loc156 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":88:23)
#loc157 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":89:23)
#loc158 = loc("CWE124_Buffer_Underwrite__char_alloca_loop_32.c":89:13)
#loc159 = loc(fused[#loc1, #loc2])
#loc160 = loc(fused[#loc3, #loc4])
#loc161 = loc(fused[#loc5, #loc6])
#loc162 = loc(fused[#loc7, #loc8])
#loc163 = loc(fused[#loc9, #loc10])
#loc164 = loc(fused[#loc11, #loc12])
#loc165 = loc(fused[#loc17, #loc18])
#loc166 = loc(fused[#loc20, #loc19])
#loc167 = loc(fused[#loc24, #loc25])
#loc168 = loc(fused[#loc26, #loc27])
#loc169 = loc(fused[#loc32, #loc30])
#loc170 = loc(fused[#loc35, #loc33])
#loc171 = loc(fused[#loc36, #loc37])
#loc172 = loc(fused[#loc38, #loc39])
#loc173 = loc(fused[#loc41, #loc42])
#loc174 = loc(fused[#loc43, #loc44])
#loc175 = loc(fused[#loc45, #loc46])
#loc176 = loc(fused[#loc51, #loc52])
#loc177 = loc(fused[#loc56, #loc53])
#loc178 = loc(fused[#loc57, #loc58])
#loc179 = loc(fused[#loc60, #loc59])
#loc180 = loc(fused[#loc61, #loc62])
#loc181 = loc(fused[#loc64, #loc58])
#loc182 = loc(fused[#loc67, #loc70])
#loc183 = loc(fused[#loc72, #loc71])
#loc184 = loc(fused[#loc74, #loc73])
#loc185 = loc(fused[#loc80, #loc81])
#loc186 = loc(fused[#loc82, #loc83])
#loc187 = loc(fused[#loc84, #loc85])
#loc188 = loc(fused[#loc86, #loc87])
#loc189 = loc(fused[#loc88, #loc89])
#loc190 = loc(fused[#loc90, #loc91])
#loc191 = loc(fused[#loc92, #loc93])
#loc192 = loc(fused[#loc98, #loc99])
#loc193 = loc(fused[#loc101, #loc100])
#loc194 = loc(fused[#loc105, #loc106])
#loc195 = loc(fused[#loc107, #loc108])
#loc196 = loc(fused[#loc111, #loc110])
#loc197 = loc(fused[#loc114, #loc112])
#loc198 = loc(fused[#loc115, #loc116])
#loc199 = loc(fused[#loc117, #loc118])
#loc200 = loc(fused[#loc120, #loc121])
#loc201 = loc(fused[#loc122, #loc123])
#loc202 = loc(fused[#loc124, #loc125])
#loc203 = loc(fused[#loc130, #loc131])
#loc204 = loc(fused[#loc135, #loc132])
#loc205 = loc(fused[#loc136, #loc137])
#loc206 = loc(fused[#loc139, #loc138])
#loc207 = loc(fused[#loc140, #loc141])
#loc208 = loc(fused[#loc143, #loc137])
#loc209 = loc(fused[#loc146, #loc149])
#loc210 = loc(fused[#loc151, #loc150])
#loc211 = loc(fused[#loc153, #loc152])
