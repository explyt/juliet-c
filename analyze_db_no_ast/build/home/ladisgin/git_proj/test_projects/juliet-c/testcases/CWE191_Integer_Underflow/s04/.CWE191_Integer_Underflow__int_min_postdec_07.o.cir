!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__int_min_postdec_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc183)
  cir.func private  @printIntLine(!s32i) loc(#loc184)
  cir.func no_proto  @CWE191_Integer_Underflow__int_min_postdec_07_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc186)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc9)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc187)
    cir.scope {
      %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc183)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc13)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc14)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !s32i loc(#loc189)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc15)
      cir.if %6 {
        %7 = cir.const #cir.int<2147483647> : !s32i loc(#loc17)
        %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc17)
        %9 = cir.const #cir.int<1> : !s32i loc(#loc17)
        %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc17)
        cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc191)
      } loc(#loc190)
    } loc(#loc188)
    cir.scope {
      %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc183)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc21)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc22)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !s32i loc(#loc193)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc23)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc196)
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc29)
          %9 = cir.unary(dec, %8) : !s32i, !s32i loc(#loc30)
          cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc197)
          %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc28)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc196)
          %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc31)
          cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc32)
        } loc(#loc195)
      } loc(#loc194)
    } loc(#loc192)
    cir.return loc(#loc6)
  } loc(#loc185)
  cir.func no_proto  @CWE191_Integer_Underflow__int_min_postdec_07_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc199)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc35)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc200)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc37)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc201)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc39)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc202)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    cir.return loc(#loc34)
  } loc(#loc198)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc203)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc45)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc46)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc205)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc51)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc206)
    cir.scope {
      %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc183)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc55)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc56)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !s32i loc(#loc208)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc57)
      cir.if %6 {
        %7 = cir.const #cir.int<2147483647> : !s32i loc(#loc59)
        %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc59)
        %9 = cir.const #cir.int<1> : !s32i loc(#loc59)
        %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc59)
        cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc210)
      } loc(#loc209)
    } loc(#loc207)
    cir.scope {
      %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc183)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc63)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc64)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !s32i loc(#loc212)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc65)
      cir.if %6 {
        %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc45)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc45)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc69)
      } else {
        cir.scope {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc72)
          %8 = cir.const #cir.int<2147483647> : !s32i loc(#loc73)
          %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc73)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc73)
          %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc73)
          %12 = cir.cmp(gt, %7, %11) : !s32i, !s32i loc(#loc215)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc74)
          cir.if %13 {
            %14 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc217)
            %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc80)
            %16 = cir.unary(dec, %15) : !s32i, !s32i loc(#loc81)
            cir.store %16, %0 : !s32i, !cir.ptr<!s32i> loc(#loc218)
            %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc79)
            cir.store %17, %14 : !s32i, !cir.ptr<!s32i> loc(#loc217)
            %18 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc82)
            cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc83)
          } else {
            %14 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc46)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc46)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc84)
          } loc(#loc216)
        } loc(#loc214)
      } loc(#loc213)
    } loc(#loc211)
    cir.return loc(#loc48)
  } loc(#loc204)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc220)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc89)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc221)
    cir.scope {
      %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc183)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc93)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc94)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !s32i loc(#loc223)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc95)
      cir.if %6 {
        %7 = cir.const #cir.int<2147483647> : !s32i loc(#loc97)
        %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc97)
        %9 = cir.const #cir.int<1> : !s32i loc(#loc97)
        %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc97)
        cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc225)
      } loc(#loc224)
    } loc(#loc222)
    cir.scope {
      %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc183)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc101)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc102)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !s32i loc(#loc227)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc103)
      cir.if %6 {
        cir.scope {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc107)
          %8 = cir.const #cir.int<2147483647> : !s32i loc(#loc108)
          %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc108)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc108)
          %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc108)
          %12 = cir.cmp(gt, %7, %11) : !s32i, !s32i loc(#loc230)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc109)
          cir.if %13 {
            %14 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc232)
            %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc115)
            %16 = cir.unary(dec, %15) : !s32i, !s32i loc(#loc116)
            cir.store %16, %0 : !s32i, !cir.ptr<!s32i> loc(#loc233)
            %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc114)
            cir.store %17, %14 : !s32i, !cir.ptr<!s32i> loc(#loc232)
            %18 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc117)
            cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc118)
          } else {
            %14 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc119)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc119)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc120)
          } loc(#loc231)
        } loc(#loc229)
      } loc(#loc228)
    } loc(#loc226)
    cir.return loc(#loc86)
  } loc(#loc219)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc235)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc125)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc236)
    cir.scope {
      %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc183)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc129)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc130)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !s32i loc(#loc238)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc131)
      cir.if %6 {
        %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc135)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc135)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc136)
      } else {
        %7 = cir.const #cir.int<2> : !s32i loc(#loc137)
        %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc138)
        cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc240)
      } loc(#loc239)
    } loc(#loc237)
    cir.scope {
      %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc183)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc142)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc143)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !s32i loc(#loc242)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc144)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc245)
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc150)
          %9 = cir.unary(dec, %8) : !s32i, !s32i loc(#loc151)
          cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc246)
          %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc149)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc245)
          %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc152)
          cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc153)
        } loc(#loc244)
      } loc(#loc243)
    } loc(#loc241)
    cir.return loc(#loc122)
  } loc(#loc234)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc248)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc158)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc249)
    cir.scope {
      %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc183)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc162)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc163)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !s32i loc(#loc251)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc164)
      cir.if %6 {
        %7 = cir.const #cir.int<2> : !s32i loc(#loc166)
        %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc167)
        cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc253)
      } loc(#loc252)
    } loc(#loc250)
    cir.scope {
      %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc183)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc171)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc172)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !s32i loc(#loc255)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc173)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc258)
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc179)
          %9 = cir.unary(dec, %8) : !s32i, !s32i loc(#loc180)
          cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc259)
          %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc178)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc258)
          %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc181)
          cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc182)
        } loc(#loc257)
      } loc(#loc256)
    } loc(#loc254)
    cir.return loc(#loc155)
  } loc(#loc247)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__int_min_postdec_07.c":0:0)
#loc1 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":23:1)
#loc2 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":23:25)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":27:1)
#loc6 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":46:1)
#loc7 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":29:5)
#loc8 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":29:9)
#loc9 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":31:12)
#loc10 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":31:5)
#loc11 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":32:5)
#loc12 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":36:5)
#loc13 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":32:8)
#loc14 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":32:20)
#loc15 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":32:18)
#loc16 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":33:5)
#loc17 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":35:16)
#loc18 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":35:9)
#loc19 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":37:5)
#loc20 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":45:5)
#loc21 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":37:8)
#loc22 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":37:20)
#loc23 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":37:18)
#loc24 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":38:5)
#loc25 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":39:9)
#loc26 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":44:9)
#loc27 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":42:13)
#loc28 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":42:26)
#loc29 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":41:17)
#loc30 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":41:13)
#loc31 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":43:26)
#loc32 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":43:13)
#loc33 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":160:1)
#loc34 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":166:1)
#loc35 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":162:5)
#loc36 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":162:14)
#loc37 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":163:5)
#loc38 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":163:14)
#loc39 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":164:5)
#loc40 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":164:14)
#loc41 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":165:5)
#loc42 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":165:14)
#loc43 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc44 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc45 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":66:19)
#loc46 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":79:23)
#loc47 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":53:1)
#loc48 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":82:1)
#loc49 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":55:5)
#loc50 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":55:9)
#loc51 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":57:12)
#loc52 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":57:5)
#loc53 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":58:5)
#loc54 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":62:5)
#loc55 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":58:8)
#loc56 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":58:20)
#loc57 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":58:18)
#loc58 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":59:5)
#loc59 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":61:16)
#loc60 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":61:9)
#loc61 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":63:5)
#loc62 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":81:5)
#loc63 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":63:8)
#loc64 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":63:20)
#loc65 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":63:18)
#loc66 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":64:5)
#loc67 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":67:5)
#loc68 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":69:5)
#loc69 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":66:9)
#loc70 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":71:9)
#loc71 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":80:9)
#loc72 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":71:13)
#loc73 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":71:20)
#loc74 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":71:18)
#loc75 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":72:9)
#loc76 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":76:9)
#loc77 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":78:9)
#loc78 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":74:13)
#loc79 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":74:26)
#loc80 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":73:17)
#loc81 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":73:13)
#loc82 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":75:26)
#loc83 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":75:13)
#loc84 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":79:13)
#loc85 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":85:1)
#loc86 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":109:1)
#loc87 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":87:5)
#loc88 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":87:9)
#loc89 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":89:12)
#loc90 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":89:5)
#loc91 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":90:5)
#loc92 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":94:5)
#loc93 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":90:8)
#loc94 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":90:20)
#loc95 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":90:18)
#loc96 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":91:5)
#loc97 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":93:16)
#loc98 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":93:9)
#loc99 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":95:5)
#loc100 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":108:5)
#loc101 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":95:8)
#loc102 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":95:20)
#loc103 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":95:18)
#loc104 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":96:5)
#loc105 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":98:9)
#loc106 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":107:9)
#loc107 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":98:13)
#loc108 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":98:20)
#loc109 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":98:18)
#loc110 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":99:9)
#loc111 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":103:9)
#loc112 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":105:9)
#loc113 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":101:13)
#loc114 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":101:26)
#loc115 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":100:17)
#loc116 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":100:13)
#loc117 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":102:26)
#loc118 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":102:13)
#loc119 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":106:23)
#loc120 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":106:13)
#loc121 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":112:1)
#loc122 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":136:1)
#loc123 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":114:5)
#loc124 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":114:9)
#loc125 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":116:12)
#loc126 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":116:5)
#loc127 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":117:5)
#loc128 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":126:5)
#loc129 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":117:8)
#loc130 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":117:20)
#loc131 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":117:18)
#loc132 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":118:5)
#loc133 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":121:5)
#loc134 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":123:5)
#loc135 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":120:19)
#loc136 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":120:9)
#loc137 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":125:17)
#loc138 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":125:16)
#loc139 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":125:9)
#loc140 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":127:5)
#loc141 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":135:5)
#loc142 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":127:8)
#loc143 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":127:20)
#loc144 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":127:18)
#loc145 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":128:5)
#loc146 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":129:9)
#loc147 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":134:9)
#loc148 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":132:13)
#loc149 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":132:26)
#loc150 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":131:17)
#loc151 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":131:13)
#loc152 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":133:26)
#loc153 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":133:13)
#loc154 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":139:1)
#loc155 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":158:1)
#loc156 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":141:5)
#loc157 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":141:9)
#loc158 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":143:12)
#loc159 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":143:5)
#loc160 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":144:5)
#loc161 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":148:5)
#loc162 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":144:8)
#loc163 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":144:20)
#loc164 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":144:18)
#loc165 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":145:5)
#loc166 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":147:17)
#loc167 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":147:16)
#loc168 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":147:9)
#loc169 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":149:5)
#loc170 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":157:5)
#loc171 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":149:8)
#loc172 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":149:20)
#loc173 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":149:18)
#loc174 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":150:5)
#loc175 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":151:9)
#loc176 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":156:9)
#loc177 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":154:13)
#loc178 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":154:26)
#loc179 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":153:17)
#loc180 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":153:13)
#loc181 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":155:26)
#loc182 = loc("CWE191_Integer_Underflow__int_min_postdec_07.c":155:13)
#loc183 = loc(fused[#loc1, #loc2])
#loc184 = loc(fused[#loc3, #loc4])
#loc185 = loc(fused[#loc5, #loc6])
#loc186 = loc(fused[#loc7, #loc8])
#loc187 = loc(fused[#loc10, #loc9])
#loc188 = loc(fused[#loc11, #loc12])
#loc189 = loc(fused[#loc13, #loc14])
#loc190 = loc(fused[#loc16, #loc12])
#loc191 = loc(fused[#loc18, #loc17])
#loc192 = loc(fused[#loc19, #loc20])
#loc193 = loc(fused[#loc21, #loc22])
#loc194 = loc(fused[#loc24, #loc20])
#loc195 = loc(fused[#loc25, #loc26])
#loc196 = loc(fused[#loc27, #loc28])
#loc197 = loc(fused[#loc30, #loc29])
#loc198 = loc(fused[#loc33, #loc34])
#loc199 = loc(fused[#loc35, #loc36])
#loc200 = loc(fused[#loc37, #loc38])
#loc201 = loc(fused[#loc39, #loc40])
#loc202 = loc(fused[#loc41, #loc42])
#loc203 = loc(fused[#loc43, #loc44])
#loc204 = loc(fused[#loc47, #loc48])
#loc205 = loc(fused[#loc49, #loc50])
#loc206 = loc(fused[#loc52, #loc51])
#loc207 = loc(fused[#loc53, #loc54])
#loc208 = loc(fused[#loc55, #loc56])
#loc209 = loc(fused[#loc58, #loc54])
#loc210 = loc(fused[#loc60, #loc59])
#loc211 = loc(fused[#loc61, #loc62])
#loc212 = loc(fused[#loc63, #loc64])
#loc213 = loc(fused[#loc66, #loc67, #loc68, #loc62])
#loc214 = loc(fused[#loc70, #loc71])
#loc215 = loc(fused[#loc72, #loc73])
#loc216 = loc(fused[#loc75, #loc76, #loc77, #loc71])
#loc217 = loc(fused[#loc78, #loc79])
#loc218 = loc(fused[#loc81, #loc80])
#loc219 = loc(fused[#loc85, #loc86])
#loc220 = loc(fused[#loc87, #loc88])
#loc221 = loc(fused[#loc90, #loc89])
#loc222 = loc(fused[#loc91, #loc92])
#loc223 = loc(fused[#loc93, #loc94])
#loc224 = loc(fused[#loc96, #loc92])
#loc225 = loc(fused[#loc98, #loc97])
#loc226 = loc(fused[#loc99, #loc100])
#loc227 = loc(fused[#loc101, #loc102])
#loc228 = loc(fused[#loc104, #loc100])
#loc229 = loc(fused[#loc105, #loc106])
#loc230 = loc(fused[#loc107, #loc108])
#loc231 = loc(fused[#loc110, #loc111, #loc112, #loc106])
#loc232 = loc(fused[#loc113, #loc114])
#loc233 = loc(fused[#loc116, #loc115])
#loc234 = loc(fused[#loc121, #loc122])
#loc235 = loc(fused[#loc123, #loc124])
#loc236 = loc(fused[#loc126, #loc125])
#loc237 = loc(fused[#loc127, #loc128])
#loc238 = loc(fused[#loc129, #loc130])
#loc239 = loc(fused[#loc132, #loc133, #loc134, #loc128])
#loc240 = loc(fused[#loc139, #loc137])
#loc241 = loc(fused[#loc140, #loc141])
#loc242 = loc(fused[#loc142, #loc143])
#loc243 = loc(fused[#loc145, #loc141])
#loc244 = loc(fused[#loc146, #loc147])
#loc245 = loc(fused[#loc148, #loc149])
#loc246 = loc(fused[#loc151, #loc150])
#loc247 = loc(fused[#loc154, #loc155])
#loc248 = loc(fused[#loc156, #loc157])
#loc249 = loc(fused[#loc159, #loc158])
#loc250 = loc(fused[#loc160, #loc161])
#loc251 = loc(fused[#loc162, #loc163])
#loc252 = loc(fused[#loc165, #loc161])
#loc253 = loc(fused[#loc168, #loc166])
#loc254 = loc(fused[#loc169, #loc170])
#loc255 = loc(fused[#loc171, #loc172])
#loc256 = loc(fused[#loc174, #loc170])
#loc257 = loc(fused[#loc175, #loc176])
#loc258 = loc(fused[#loc177, #loc178])
#loc259 = loc(fused[#loc180, #loc179])
