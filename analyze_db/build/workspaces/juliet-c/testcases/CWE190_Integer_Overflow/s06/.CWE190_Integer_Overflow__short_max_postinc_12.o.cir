!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_max_postinc_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc154)
  cir.func private @printIntLine(!s32i) loc(#loc155)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc156)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE190_Integer_Overflow__short_max_postinc_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc158)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc159)
    %2 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc160)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc16)
    %4 = cir.cast(integral, %3 : !s32i), !s16i loc(#loc16)
    cir.store %4, %2 : !s16i, !cir.ptr<!s16i> loc(#loc161)
    cir.br ^bb1 loc(#loc162)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc163)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc163)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc20)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc20)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc164)
  ^bb2:  // pred: ^bb1
    %9 = cir.const #cir.int<32767> : !s32i loc(#loc25)
    %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc25)
    cir.store %10, %2 : !s16i, !cir.ptr<!s16i> loc(#loc165)
    cir.br ^bb4 loc(#loc23)
  ^bb3:  // pred: ^bb1
    %11 = cir.const #cir.int<2> : !s32i loc(#loc27)
    %12 = cir.cast(integral, %11 : !s32i), !s16i loc(#loc27)
    cir.store %12, %2 : !s16i, !cir.ptr<!s16i> loc(#loc166)
    cir.br ^bb4 loc(#loc19)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc19)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc167)
  ^bb6:  // pred: ^bb5
    %13 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc168)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc168)
    %15 = cir.call %14() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc31)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc31)
    cir.brcond %16 ^bb7, ^bb10 loc(#loc169)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc170)
  ^bb8:  // pred: ^bb7
    %17 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc38)
    %18 = cir.unary(inc, %17) : !s16i, !s16i loc(#loc39)
    cir.store %18, %2 : !s16i, !cir.ptr<!s16i> loc(#loc171)
    %19 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc11)
    cir.store %19, %0 : !s16i, !cir.ptr<!s16i> loc(#loc158)
    %20 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc40)
    %21 = cir.cast(integral, %20 : !s16i), !s32i loc(#loc40)
    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc41)
    cir.br ^bb9 loc(#loc37)
  ^bb9:  // pred: ^bb8
    cir.br ^bb16 loc(#loc34)
  ^bb10:  // pred: ^bb6
    cir.br ^bb11 loc(#loc172)
  ^bb11:  // pred: ^bb10
    %22 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc44)
    %23 = cir.cast(integral, %22 : !s16i), !s32i loc(#loc44)
    %24 = cir.const #cir.int<32767> : !s32i loc(#loc45)
    %25 = cir.cmp(lt, %23, %24) : !s32i, !cir.bool loc(#loc173)
    cir.brcond %25 ^bb12, ^bb13 loc(#loc174)
  ^bb12:  // pred: ^bb11
    %26 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc49)
    %27 = cir.unary(inc, %26) : !s16i, !s16i loc(#loc50)
    cir.store %27, %2 : !s16i, !cir.ptr<!s16i> loc(#loc175)
    %28 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc13)
    cir.store %28, %1 : !s16i, !cir.ptr<!s16i> loc(#loc159)
    %29 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc51)
    %30 = cir.cast(integral, %29 : !s16i), !s32i loc(#loc51)
    cir.call @printIntLine(%30) : (!s32i) -> () loc(#loc52)
    cir.br ^bb14 loc(#loc47)
  ^bb13:  // pred: ^bb11
    %31 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc7)
    %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    cir.br ^bb14 loc(#loc43)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc43)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc30)
  ^bb16:  // 2 preds: ^bb9, ^bb15
    cir.br ^bb17 loc(#loc30)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc9)
  } loc(#loc157)
  cir.func no_proto @CWE190_Integer_Overflow__short_max_postinc_12_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc177)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc56)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc178)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc58)
    cir.return loc(#loc55)
  } loc(#loc176)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc180)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc181)
    %2 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc182)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %4 = cir.cast(integral, %3 : !s32i), !s16i loc(#loc68)
    cir.store %4, %2 : !s16i, !cir.ptr<!s16i> loc(#loc183)
    cir.br ^bb1 loc(#loc184)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc185)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc185)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc72)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc72)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc186)
  ^bb2:  // pred: ^bb1
    %9 = cir.const #cir.int<32767> : !s32i loc(#loc77)
    %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc77)
    cir.store %10, %2 : !s16i, !cir.ptr<!s16i> loc(#loc187)
    cir.br ^bb4 loc(#loc75)
  ^bb3:  // pred: ^bb1
    %11 = cir.const #cir.int<32767> : !s32i loc(#loc79)
    %12 = cir.cast(integral, %11 : !s32i), !s16i loc(#loc79)
    cir.store %12, %2 : !s16i, !cir.ptr<!s16i> loc(#loc188)
    cir.br ^bb4 loc(#loc71)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc71)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc189)
  ^bb6:  // pred: ^bb5
    %13 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc190)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc190)
    %15 = cir.call %14() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc83)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc83)
    cir.brcond %16 ^bb7, ^bb13 loc(#loc191)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc192)
  ^bb8:  // pred: ^bb7
    %17 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc90)
    %18 = cir.cast(integral, %17 : !s16i), !s32i loc(#loc90)
    %19 = cir.const #cir.int<32767> : !s32i loc(#loc91)
    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc193)
    cir.brcond %20 ^bb9, ^bb10 loc(#loc194)
  ^bb9:  // pred: ^bb8
    %21 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc95)
    %22 = cir.unary(inc, %21) : !s16i, !s16i loc(#loc96)
    cir.store %22, %2 : !s16i, !cir.ptr<!s16i> loc(#loc195)
    %23 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc63)
    cir.store %23, %0 : !s16i, !cir.ptr<!s16i> loc(#loc180)
    %24 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc97)
    %25 = cir.cast(integral, %24 : !s16i), !s32i loc(#loc97)
    cir.call @printIntLine(%25) : (!s32i) -> () loc(#loc98)
    cir.br ^bb11 loc(#loc93)
  ^bb10:  // pred: ^bb8
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc99)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    cir.br ^bb11 loc(#loc89)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc89)
  ^bb12:  // pred: ^bb11
    cir.br ^bb19 loc(#loc86)
  ^bb13:  // pred: ^bb6
    cir.br ^bb14 loc(#loc196)
  ^bb14:  // pred: ^bb13
    %28 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc103)
    %29 = cir.cast(integral, %28 : !s16i), !s32i loc(#loc103)
    %30 = cir.const #cir.int<32767> : !s32i loc(#loc104)
    %31 = cir.cmp(lt, %29, %30) : !s32i, !cir.bool loc(#loc197)
    cir.brcond %31 ^bb15, ^bb16 loc(#loc198)
  ^bb15:  // pred: ^bb14
    %32 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc108)
    %33 = cir.unary(inc, %32) : !s16i, !s16i loc(#loc109)
    cir.store %33, %2 : !s16i, !cir.ptr<!s16i> loc(#loc199)
    %34 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc65)
    cir.store %34, %1 : !s16i, !cir.ptr<!s16i> loc(#loc181)
    %35 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc110)
    %36 = cir.cast(integral, %35 : !s16i), !s32i loc(#loc110)
    cir.call @printIntLine(%36) : (!s32i) -> () loc(#loc111)
    cir.br ^bb17 loc(#loc106)
  ^bb16:  // pred: ^bb14
    %37 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc112)
    %38 = cir.cast(array_to_ptrdecay, %37 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc112)
    cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc113)
    cir.br ^bb17 loc(#loc102)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc102)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc82)
  ^bb19:  // 2 preds: ^bb12, ^bb18
    cir.br ^bb20 loc(#loc82)
  ^bb20:  // pred: ^bb19
    cir.return loc(#loc61)
  } loc(#loc179)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc201)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc202)
    %2 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc203)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc122)
    %4 = cir.cast(integral, %3 : !s32i), !s16i loc(#loc122)
    cir.store %4, %2 : !s16i, !cir.ptr<!s16i> loc(#loc204)
    cir.br ^bb1 loc(#loc205)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc206)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc206)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc126)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc126)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc207)
  ^bb2:  // pred: ^bb1
    %9 = cir.const #cir.int<2> : !s32i loc(#loc131)
    %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc131)
    cir.store %10, %2 : !s16i, !cir.ptr<!s16i> loc(#loc208)
    cir.br ^bb4 loc(#loc129)
  ^bb3:  // pred: ^bb1
    %11 = cir.const #cir.int<2> : !s32i loc(#loc133)
    %12 = cir.cast(integral, %11 : !s32i), !s16i loc(#loc133)
    cir.store %12, %2 : !s16i, !cir.ptr<!s16i> loc(#loc209)
    cir.br ^bb4 loc(#loc125)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc125)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc210)
  ^bb6:  // pred: ^bb5
    %13 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc211)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc211)
    %15 = cir.call %14() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc137)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc137)
    cir.brcond %16 ^bb7, ^bb10 loc(#loc212)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc213)
  ^bb8:  // pred: ^bb7
    %17 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc144)
    %18 = cir.unary(inc, %17) : !s16i, !s16i loc(#loc145)
    cir.store %18, %2 : !s16i, !cir.ptr<!s16i> loc(#loc214)
    %19 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc117)
    cir.store %19, %0 : !s16i, !cir.ptr<!s16i> loc(#loc201)
    %20 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc146)
    %21 = cir.cast(integral, %20 : !s16i), !s32i loc(#loc146)
    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc147)
    cir.br ^bb9 loc(#loc143)
  ^bb9:  // pred: ^bb8
    cir.br ^bb13 loc(#loc140)
  ^bb10:  // pred: ^bb6
    cir.br ^bb11 loc(#loc215)
  ^bb11:  // pred: ^bb10
    %22 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc150)
    %23 = cir.unary(inc, %22) : !s16i, !s16i loc(#loc151)
    cir.store %23, %2 : !s16i, !cir.ptr<!s16i> loc(#loc216)
    %24 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc119)
    cir.store %24, %1 : !s16i, !cir.ptr<!s16i> loc(#loc202)
    %25 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc152)
    %26 = cir.cast(integral, %25 : !s16i), !s32i loc(#loc152)
    cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc153)
    cir.br ^bb12 loc(#loc149)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc136)
  ^bb13:  // 2 preds: ^bb9, ^bb12
    cir.br ^bb14 loc(#loc136)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc115)
  } loc(#loc200)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__short_max_postinc_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":56:23)
#loc8 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":22:1)
#loc9 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":59:1)
#loc10 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":41:13)
#loc11 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":41:28)
#loc12 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":51:13)
#loc13 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":51:28)
#loc14 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":24:5)
#loc15 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":24:11)
#loc16 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":25:12)
#loc17 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":25:5)
#loc18 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":26:5)
#loc19 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":35:5)
#loc20 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":26:8)
#loc21 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":26:33)
#loc22 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":27:5)
#loc23 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":30:5)
#loc24 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":32:5)
#loc25 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":29:16)
#loc26 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":29:9)
#loc27 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":34:16)
#loc28 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":34:9)
#loc29 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":36:5)
#loc30 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":58:5)
#loc31 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":36:8)
#loc32 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":36:33)
#loc33 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":37:5)
#loc34 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":44:5)
#loc35 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":46:5)
#loc36 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":38:9)
#loc37 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":43:9)
#loc38 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":40:17)
#loc39 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":40:13)
#loc40 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":42:26)
#loc41 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":42:13)
#loc42 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":48:9)
#loc43 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":57:9)
#loc44 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":48:13)
#loc45 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":48:20)
#loc46 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":49:9)
#loc47 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":53:9)
#loc48 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":55:9)
#loc49 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":50:17)
#loc50 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":50:13)
#loc51 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":52:26)
#loc52 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":52:13)
#loc53 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":56:13)
#loc54 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":149:1)
#loc55 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":153:1)
#loc56 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":151:5)
#loc57 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":151:13)
#loc58 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":152:5)
#loc59 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":152:13)
#loc60 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":68:1)
#loc61 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":110:1)
#loc62 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":88:13)
#loc63 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":88:28)
#loc64 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":102:13)
#loc65 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":102:28)
#loc66 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":70:5)
#loc67 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":70:11)
#loc68 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":71:12)
#loc69 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":71:5)
#loc70 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":72:5)
#loc71 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":81:5)
#loc72 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":72:8)
#loc73 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":72:33)
#loc74 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":73:5)
#loc75 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":76:5)
#loc76 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":78:5)
#loc77 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":75:16)
#loc78 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":75:9)
#loc79 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":80:16)
#loc80 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":80:9)
#loc81 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":82:5)
#loc82 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":109:5)
#loc83 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":82:8)
#loc84 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":82:33)
#loc85 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":83:5)
#loc86 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":95:5)
#loc87 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":97:5)
#loc88 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":85:9)
#loc89 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":94:9)
#loc90 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":85:13)
#loc91 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":85:20)
#loc92 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":86:9)
#loc93 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":90:9)
#loc94 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":92:9)
#loc95 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":87:17)
#loc96 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":87:13)
#loc97 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":89:26)
#loc98 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":89:13)
#loc99 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":93:23)
#loc100 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":93:13)
#loc101 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":99:9)
#loc102 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":108:9)
#loc103 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":99:13)
#loc104 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":99:20)
#loc105 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":100:9)
#loc106 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":104:9)
#loc107 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":106:9)
#loc108 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":101:17)
#loc109 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":101:13)
#loc110 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":103:26)
#loc111 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":103:13)
#loc112 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":107:23)
#loc113 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":107:13)
#loc114 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":115:1)
#loc115 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":147:1)
#loc116 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":134:13)
#loc117 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":134:28)
#loc118 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":143:13)
#loc119 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":143:28)
#loc120 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":117:5)
#loc121 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":117:11)
#loc122 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":118:12)
#loc123 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":118:5)
#loc124 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":119:5)
#loc125 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":128:5)
#loc126 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":119:8)
#loc127 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":119:33)
#loc128 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":120:5)
#loc129 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":123:5)
#loc130 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":125:5)
#loc131 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":122:16)
#loc132 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":122:9)
#loc133 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":127:16)
#loc134 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":127:9)
#loc135 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":129:5)
#loc136 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":146:5)
#loc137 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":129:8)
#loc138 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":129:33)
#loc139 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":130:5)
#loc140 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":137:5)
#loc141 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":139:5)
#loc142 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":131:9)
#loc143 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":136:9)
#loc144 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":133:17)
#loc145 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":133:13)
#loc146 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":135:26)
#loc147 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":135:13)
#loc148 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":140:9)
#loc149 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":145:9)
#loc150 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":142:17)
#loc151 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":142:13)
#loc152 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":144:26)
#loc153 = loc("CWE190_Integer_Overflow__short_max_postinc_12.c":144:13)
#loc154 = loc(fused[#loc1, #loc2])
#loc155 = loc(fused[#loc3, #loc4])
#loc156 = loc(fused[#loc5, #loc6])
#loc157 = loc(fused[#loc8, #loc9])
#loc158 = loc(fused[#loc10, #loc11])
#loc159 = loc(fused[#loc12, #loc13])
#loc160 = loc(fused[#loc14, #loc15])
#loc161 = loc(fused[#loc17, #loc16])
#loc162 = loc(fused[#loc18, #loc19])
#loc163 = loc(fused[#loc20, #loc21])
#loc164 = loc(fused[#loc22, #loc23, #loc24, #loc19])
#loc165 = loc(fused[#loc26, #loc25])
#loc166 = loc(fused[#loc28, #loc27])
#loc167 = loc(fused[#loc29, #loc30])
#loc168 = loc(fused[#loc31, #loc32])
#loc169 = loc(fused[#loc33, #loc34, #loc35, #loc30])
#loc170 = loc(fused[#loc36, #loc37])
#loc171 = loc(fused[#loc39, #loc38])
#loc172 = loc(fused[#loc42, #loc43])
#loc173 = loc(fused[#loc44, #loc45])
#loc174 = loc(fused[#loc46, #loc47, #loc48, #loc43])
#loc175 = loc(fused[#loc50, #loc49])
#loc176 = loc(fused[#loc54, #loc55])
#loc177 = loc(fused[#loc56, #loc57])
#loc178 = loc(fused[#loc58, #loc59])
#loc179 = loc(fused[#loc60, #loc61])
#loc180 = loc(fused[#loc62, #loc63])
#loc181 = loc(fused[#loc64, #loc65])
#loc182 = loc(fused[#loc66, #loc67])
#loc183 = loc(fused[#loc69, #loc68])
#loc184 = loc(fused[#loc70, #loc71])
#loc185 = loc(fused[#loc72, #loc73])
#loc186 = loc(fused[#loc74, #loc75, #loc76, #loc71])
#loc187 = loc(fused[#loc78, #loc77])
#loc188 = loc(fused[#loc80, #loc79])
#loc189 = loc(fused[#loc81, #loc82])
#loc190 = loc(fused[#loc83, #loc84])
#loc191 = loc(fused[#loc85, #loc86, #loc87, #loc82])
#loc192 = loc(fused[#loc88, #loc89])
#loc193 = loc(fused[#loc90, #loc91])
#loc194 = loc(fused[#loc92, #loc93, #loc94, #loc89])
#loc195 = loc(fused[#loc96, #loc95])
#loc196 = loc(fused[#loc101, #loc102])
#loc197 = loc(fused[#loc103, #loc104])
#loc198 = loc(fused[#loc105, #loc106, #loc107, #loc102])
#loc199 = loc(fused[#loc109, #loc108])
#loc200 = loc(fused[#loc114, #loc115])
#loc201 = loc(fused[#loc116, #loc117])
#loc202 = loc(fused[#loc118, #loc119])
#loc203 = loc(fused[#loc120, #loc121])
#loc204 = loc(fused[#loc123, #loc122])
#loc205 = loc(fused[#loc124, #loc125])
#loc206 = loc(fused[#loc126, #loc127])
#loc207 = loc(fused[#loc128, #loc129, #loc130, #loc125])
#loc208 = loc(fused[#loc132, #loc131])
#loc209 = loc(fused[#loc134, #loc133])
#loc210 = loc(fused[#loc135, #loc136])
#loc211 = loc(fused[#loc137, #loc138])
#loc212 = loc(fused[#loc139, #loc140, #loc141, #loc136])
#loc213 = loc(fused[#loc142, #loc143])
#loc214 = loc(fused[#loc145, #loc144])
#loc215 = loc(fused[#loc148, #loc149])
#loc216 = loc(fused[#loc151, #loc150])
