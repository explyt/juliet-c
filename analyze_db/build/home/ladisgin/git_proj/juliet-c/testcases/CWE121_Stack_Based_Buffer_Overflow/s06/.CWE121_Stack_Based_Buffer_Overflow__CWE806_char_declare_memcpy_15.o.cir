!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc146)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc3)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc147)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc149)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc150)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc151)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc14)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
    cir.br ^bb1 loc(#loc153)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<6> : !s32i loc(#loc18)
    cir.br ^bb2 loc(#loc16)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc16)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc19)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc20)
    %7 = cir.const #cir.int<65> : !s32i loc(#loc21)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc22)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc22)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc22)
    cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc154)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc26)
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc28)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc28)
    %18 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc30)
    cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc155)
    cir.br ^bb6 loc(#loc31)
  ^bb5:  // pred: ^bb2
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc3)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc3)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc32)
    cir.br ^bb6 loc(#loc33)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc17)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc156)
  ^bb8:  // pred: ^bb7
    %21 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc149)
    cir.store %21, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc149)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc36)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc36)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc37)
    %26 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc38)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
    %28 = cir.call @strlen(%27) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc38)
    %29 = cir.const #cir.int<1> : !u64i loc(#loc157)
    %30 = cir.binop(mul, %28, %29) : !u64i loc(#loc158)
    cir.libc.memcpy %30 bytes from %25 to %23 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc159)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc44)
    %33 = cir.const #cir.int<50> : !s32i loc(#loc45)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc46)
    %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc45)
    %36 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc47)
    %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !s32i), !cir.ptr<!s8i> loc(#loc47)
    cir.store %32, %37 : !s8i, !cir.ptr<!s8i> loc(#loc160)
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    cir.br ^bb9 loc(#loc35)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc7)
  } loc(#loc148)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc162)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc52)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc163)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    cir.return loc(#loc51)
  } loc(#loc161)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc165)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc166)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc167)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc64)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc168)
    cir.br ^bb1 loc(#loc169)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<5> : !s32i loc(#loc68)
    cir.br ^bb2 loc(#loc66)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc66)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc69)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc70)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    cir.br ^bb6 loc(#loc72)
  ^bb5:  // pred: ^bb2
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc73)
    %9 = cir.const #cir.int<65> : !s32i loc(#loc74)
    %10 = cir.const #cir.int<50> : !s32i loc(#loc75)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc76)
    %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc75)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc75)
    cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc170)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc79)
    %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc79)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
    %17 = cir.const #cir.int<50> : !s32i loc(#loc81)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc82)
    %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc81)
    %20 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc83)
    cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc171)
    cir.br ^bb6 loc(#loc84)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc67)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc172)
  ^bb8:  // pred: ^bb7
    %21 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc165)
    cir.store %21, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc165)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc87)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc87)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc88)
    %26 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc89)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
    %28 = cir.call @strlen(%27) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc89)
    %29 = cir.const #cir.int<1> : !u64i loc(#loc173)
    %30 = cir.binop(mul, %28, %29) : !u64i loc(#loc174)
    cir.libc.memcpy %30 bytes from %25 to %23 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc175)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc95)
    %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc95)
    %33 = cir.const #cir.int<50> : !s32i loc(#loc96)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc96)
    %36 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc98)
    %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !s32i), !cir.ptr<!s8i> loc(#loc98)
    cir.store %32, %37 : !s8i, !cir.ptr<!s8i> loc(#loc176)
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    cir.br ^bb9 loc(#loc86)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc57)
  } loc(#loc164)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc178)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc179)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc180)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc109)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc181)
    cir.br ^bb1 loc(#loc182)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<6> : !s32i loc(#loc113)
    cir.br ^bb2 loc(#loc111)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc111)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc114)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc115)
    %7 = cir.const #cir.int<65> : !s32i loc(#loc116)
    %8 = cir.const #cir.int<50> : !s32i loc(#loc117)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc118)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc117)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc117)
    cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc183)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc121)
    %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc121)
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
    %15 = cir.const #cir.int<50> : !s32i loc(#loc123)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc124)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc123)
    %18 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc125)
    cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc184)
    cir.br ^bb6 loc(#loc126)
  ^bb5:  // pred: ^bb2
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc127)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc127)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc128)
    cir.br ^bb6 loc(#loc129)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc112)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc185)
  ^bb8:  // pred: ^bb7
    %21 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc178)
    cir.store %21, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc178)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc132)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc132)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc133)
    %26 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc134)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
    %28 = cir.call @strlen(%27) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc134)
    %29 = cir.const #cir.int<1> : !u64i loc(#loc186)
    %30 = cir.binop(mul, %28, %29) : !u64i loc(#loc187)
    cir.libc.memcpy %30 bytes from %25 to %23 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc188)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc140)
    %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc140)
    %33 = cir.const #cir.int<50> : !s32i loc(#loc141)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc142)
    %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc141)
    %36 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc143)
    %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !s32i), !cir.ptr<!s8i> loc(#loc143)
    cir.store %32, %37 : !s8i, !cir.ptr<!s8i> loc(#loc189)
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
    cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc145)
    cir.br ^bb9 loc(#loc131)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc102)
  } loc(#loc177)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":37:19)
#loc4 = loc("/usr/include/string.h":407:1)
#loc5 = loc("/usr/include/string.h":408:33)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":23:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":47:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":41:9)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":41:25)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":25:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":25:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":26:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":26:24)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":27:12)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":27:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":28:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":39:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":28:12)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":30:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":32:16)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":32:22)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":32:27)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":32:31)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":32:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":32:32)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":33:23)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":33:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":33:14)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":33:18)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":33:19)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":34:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":37:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":38:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":40:5)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":46:5)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":43:16)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":43:22)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":43:28)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":43:35)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":43:41)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":43:52)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":43:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":43:53)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":44:22)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":44:14)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":44:17)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":44:9)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":45:19)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":45:9)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":107:1)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":111:1)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":109:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":109:14)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":110:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":110:14)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":54:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":78:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":72:9)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":72:25)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":56:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":56:12)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":57:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":57:24)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":58:12)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":58:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":59:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":70:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":59:12)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":61:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":63:19)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":63:9)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":64:9)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":67:16)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":67:22)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":67:27)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":67:30)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":67:9)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":67:31)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":68:22)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":68:9)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":68:14)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":68:17)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":68:18)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":69:9)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":71:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":77:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":74:16)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":74:22)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":74:28)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":74:35)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":74:41)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":74:52)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":74:9)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":74:53)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":75:22)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":75:14)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":75:17)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":75:9)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":76:19)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":76:9)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":81:1)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":105:1)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":99:9)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":99:25)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":83:5)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":83:12)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":84:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":84:24)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":85:12)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":85:5)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":86:5)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":97:5)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":86:12)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":88:5)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":90:16)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":90:22)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":90:27)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":90:30)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":90:9)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":90:31)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":91:22)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":91:9)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":91:14)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":91:17)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":91:18)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":92:9)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":95:19)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":95:9)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":96:9)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":98:5)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":104:5)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":101:16)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":101:22)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":101:28)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":101:35)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":101:41)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":101:52)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":101:9)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":101:53)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":102:22)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":102:14)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":102:17)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":102:9)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":103:19)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_15.c":103:9)
#loc146 = loc(fused[#loc1, #loc2])
#loc147 = loc(fused[#loc4, #loc5])
#loc148 = loc(fused[#loc6, #loc7])
#loc149 = loc(fused[#loc8, #loc9])
#loc150 = loc(fused[#loc10, #loc11])
#loc151 = loc(fused[#loc12, #loc13])
#loc152 = loc(fused[#loc15, #loc14])
#loc153 = loc(fused[#loc16, #loc17])
#loc154 = loc(fused[#loc24, #loc25])
#loc155 = loc(fused[#loc27, #loc26])
#loc156 = loc(fused[#loc34, #loc35])
#loc157 = loc(fused[#loc40, #loc41])
#loc158 = loc(fused[#loc38, #loc41])
#loc159 = loc(fused[#loc42, #loc43])
#loc160 = loc(fused[#loc47, #loc44])
#loc161 = loc(fused[#loc50, #loc51])
#loc162 = loc(fused[#loc52, #loc53])
#loc163 = loc(fused[#loc54, #loc55])
#loc164 = loc(fused[#loc56, #loc57])
#loc165 = loc(fused[#loc58, #loc59])
#loc166 = loc(fused[#loc60, #loc61])
#loc167 = loc(fused[#loc62, #loc63])
#loc168 = loc(fused[#loc65, #loc64])
#loc169 = loc(fused[#loc66, #loc67])
#loc170 = loc(fused[#loc77, #loc78])
#loc171 = loc(fused[#loc80, #loc79])
#loc172 = loc(fused[#loc85, #loc86])
#loc173 = loc(fused[#loc91, #loc92])
#loc174 = loc(fused[#loc89, #loc92])
#loc175 = loc(fused[#loc93, #loc94])
#loc176 = loc(fused[#loc98, #loc95])
#loc177 = loc(fused[#loc101, #loc102])
#loc178 = loc(fused[#loc103, #loc104])
#loc179 = loc(fused[#loc105, #loc106])
#loc180 = loc(fused[#loc107, #loc108])
#loc181 = loc(fused[#loc110, #loc109])
#loc182 = loc(fused[#loc111, #loc112])
#loc183 = loc(fused[#loc119, #loc120])
#loc184 = loc(fused[#loc122, #loc121])
#loc185 = loc(fused[#loc130, #loc131])
#loc186 = loc(fused[#loc136, #loc137])
#loc187 = loc(fused[#loc134, #loc137])
#loc188 = loc(fused[#loc138, #loc139])
#loc189 = loc(fused[#loc143, #loc140])
