!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":27:21)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":27:25)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":85:26)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":85:30)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":138:26)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":138:30)
#loc262 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":186:25)
#loc263 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":186:29)
#true = #cir.bool<true> : !cir.bool
#loc321 = loc(fused[#loc17, #loc18])
#loc352 = loc(fused[#loc100, #loc101])
#loc380 = loc(fused[#loc182, #loc183])
#loc408 = loc(fused[#loc262, #loc263])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc314)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc315)
  cir.func private  @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc316)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc317)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.global "private"  internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc318)
  cir.func private  @printIntLine(!s32i) loc(#loc319)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc14)
  cir.func internal private  @badSink(%arg0: !s32i loc(fused[#loc17, #loc18])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc321)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc19)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc318)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc22)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc22)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc325)
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc326)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc326)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc326)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc32)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc33)
            %9 = cir.cmp(ge, %7, %8) : !s32i, !s32i loc(#loc328)
            %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc34)
            cir.if %10 {
              %11 = cir.const #cir.int<1> : !s32i loc(#loc38)
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc39)
              %13 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc40)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc40)
              cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc330)
              cir.scope {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc43)
                cir.store %15, %4 : !s32i, !cir.ptr<!s32i> loc(#loc332)
                cir.for : cond {
                  %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc45)
                  %17 = cir.const #cir.int<10> : !s32i loc(#loc46)
                  %18 = cir.cmp(lt, %16, %17) : !s32i, !s32i loc(#loc333)
                  %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc47)
                  cir.condition(%19) loc(#loc47)
                } body {
                  cir.scope {
                    %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc49)
                    %17 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc50)
                    %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc50)
                    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc50)
                    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc51)
                  } loc(#loc334)
                  cir.yield loc(#loc42)
                } step {
                  %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc52)
                  %17 = cir.unary(inc, %16) : !s32i, !s32i loc(#loc53)
                  cir.store %17, %4 : !s32i, !cir.ptr<!s32i> loc(#loc335)
                  cir.yield loc(#loc331)
                } loc(#loc331)
              } loc(#loc331)
            } else {
              %11 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc14)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc14)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc54)
            } loc(#loc329)
          } loc(#loc327)
        } loc(#loc324)
      } loc(#loc323)
    } loc(#loc322)
    cir.return loc(#loc16)
  } loc(#loc320)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc337)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc60)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc338)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc340)
      %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc340)
      cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc340)
      cir.scope {
        %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc68)
        %9 = cir.const #cir.int<3> : !s32i loc(#loc69)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc69)
        %11 = cir.const #cir.int<4> : !u64i loc(#loc69)
        %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc69)
        %13 = cir.const #cir.int<2> : !s32i loc(#loc69)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc69)
        %15 = cir.binop(add, %12, %14) : !u64i loc(#loc69)
        %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc69)
        %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc315)
        %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc70)
        %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc71)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc72)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc72)
        %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !s32i loc(#loc342)
        %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc73)
        cir.if %23 {
          %24 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc77)
          %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc78)
          cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc344)
        } else {
          %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc81)
        } loc(#loc343)
      } loc(#loc341)
    } loc(#loc339)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc82)
    %4 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc318)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc345)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc84)
    cir.call @badSink(%5) : (!s32i) -> () loc(#loc85)
    cir.return loc(#loc56)
  } loc(#loc336)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc347)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc88)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc348)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc90)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc349)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc92)
    cir.return loc(#loc87)
  } loc(#loc346)
  cir.global "private"  internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc350)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc96)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc97)
  cir.func internal private  @goodB2G1Sink(%arg0: !s32i loc(fused[#loc100, #loc101])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc352)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc102)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc350)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc105)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc105)
      cir.if %3 {
        %4 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc96)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc96)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc109)
      } else {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc356)
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc357)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc357)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc357)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc118)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc119)
            %9 = cir.cmp(ge, %7, %8) : !s32i, !s32i loc(#loc359)
            %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc120)
            %11 = cir.ternary(%10, true {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc122)
              %13 = cir.const #cir.int<10> : !s32i loc(#loc123)
              %14 = cir.cmp(lt, %12, %13) : !s32i, !s32i loc(#loc360)
              %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc125)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc121)
                cir.yield %17 : !cir.bool loc(#loc121)
              }, false {
                %17 = cir.const #false loc(#loc121)
                cir.yield %17 : !cir.bool loc(#loc121)
              }) : (!cir.bool) -> !cir.bool loc(#loc121)
              cir.yield %16 : !cir.bool loc(#loc121)
            }, false {
              %12 = cir.const #false loc(#loc121)
              cir.yield %12 : !cir.bool loc(#loc121)
            }) : (!cir.bool) -> !cir.bool loc(#loc121)
            cir.if %11 {
              %12 = cir.const #cir.int<1> : !s32i loc(#loc129)
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc130)
              %14 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc131)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc131)
              cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc362)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc134)
                cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc364)
                cir.for : cond {
                  %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc136)
                  %18 = cir.const #cir.int<10> : !s32i loc(#loc137)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !s32i loc(#loc365)
                  %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc138)
                  cir.condition(%20) loc(#loc138)
                } body {
                  cir.scope {
                    %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc140)
                    %18 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc141)
                    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc141)
                    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc141)
                    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc142)
                  } loc(#loc366)
                  cir.yield loc(#loc133)
                } step {
                  %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc143)
                  %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc144)
                  cir.store %18, %4 : !s32i, !cir.ptr<!s32i> loc(#loc367)
                  cir.yield loc(#loc363)
                } loc(#loc363)
              } loc(#loc363)
            } else {
              %12 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc97)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc97)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc145)
            } loc(#loc361)
          } loc(#loc358)
        } loc(#loc355)
      } loc(#loc354)
    } loc(#loc353)
    cir.return loc(#loc99)
  } loc(#loc351)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc369)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc150)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc151)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc370)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc372)
      %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc372)
      cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc372)
      cir.scope {
        %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc159)
        %9 = cir.const #cir.int<3> : !s32i loc(#loc160)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc160)
        %11 = cir.const #cir.int<4> : !u64i loc(#loc160)
        %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc160)
        %13 = cir.const #cir.int<2> : !s32i loc(#loc160)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc160)
        %15 = cir.binop(add, %12, %14) : !u64i loc(#loc160)
        %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc160)
        %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc315)
        %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc161)
        %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc162)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc163)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc163)
        %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !s32i loc(#loc374)
        %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc164)
        cir.if %23 {
          %24 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc168)
          %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc169)
          cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc376)
        } else {
          %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc172)
          %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc172)
          cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc173)
        } loc(#loc375)
      } loc(#loc373)
    } loc(#loc371)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc174)
    %4 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc350)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc377)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc176)
    cir.call @goodB2G1Sink(%5) : (!s32i) -> () loc(#loc177)
    cir.return loc(#loc147)
  } loc(#loc368)
  cir.global "private"  internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc378)
  cir.func internal private  @goodB2G2Sink(%arg0: !s32i loc(fused[#loc182, #loc183])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc380)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc184)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc378)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc187)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc187)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc384)
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc385)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc385)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc385)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc197)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc198)
            %9 = cir.cmp(ge, %7, %8) : !s32i, !s32i loc(#loc387)
            %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc199)
            %11 = cir.ternary(%10, true {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc201)
              %13 = cir.const #cir.int<10> : !s32i loc(#loc202)
              %14 = cir.cmp(lt, %12, %13) : !s32i, !s32i loc(#loc388)
              %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc204)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc200)
                cir.yield %17 : !cir.bool loc(#loc200)
              }, false {
                %17 = cir.const #false loc(#loc200)
                cir.yield %17 : !cir.bool loc(#loc200)
              }) : (!cir.bool) -> !cir.bool loc(#loc200)
              cir.yield %16 : !cir.bool loc(#loc200)
            }, false {
              %12 = cir.const #false loc(#loc200)
              cir.yield %12 : !cir.bool loc(#loc200)
            }) : (!cir.bool) -> !cir.bool loc(#loc200)
            cir.if %11 {
              %12 = cir.const #cir.int<1> : !s32i loc(#loc208)
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc209)
              %14 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc210)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc210)
              cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc390)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc213)
                cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc392)
                cir.for : cond {
                  %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc215)
                  %18 = cir.const #cir.int<10> : !s32i loc(#loc216)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !s32i loc(#loc393)
                  %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc217)
                  cir.condition(%20) loc(#loc217)
                } body {
                  cir.scope {
                    %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc219)
                    %18 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc220)
                    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc220)
                    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc220)
                    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc221)
                  } loc(#loc394)
                  cir.yield loc(#loc212)
                } step {
                  %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc222)
                  %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc223)
                  cir.store %18, %4 : !s32i, !cir.ptr<!s32i> loc(#loc395)
                  cir.yield loc(#loc391)
                } loc(#loc391)
              } loc(#loc391)
            } else {
              %12 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc224)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc224)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc225)
            } loc(#loc389)
          } loc(#loc386)
        } loc(#loc383)
      } loc(#loc382)
    } loc(#loc381)
    cir.return loc(#loc181)
  } loc(#loc379)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc397)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc230)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc231)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc398)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc400)
      %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc400)
      cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc400)
      cir.scope {
        %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc239)
        %9 = cir.const #cir.int<3> : !s32i loc(#loc240)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc240)
        %11 = cir.const #cir.int<4> : !u64i loc(#loc240)
        %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc240)
        %13 = cir.const #cir.int<2> : !s32i loc(#loc240)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc240)
        %15 = cir.binop(add, %12, %14) : !u64i loc(#loc240)
        %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc240)
        %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc315)
        %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc241)
        %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc242)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc243)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc243)
        %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !s32i loc(#loc402)
        %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc244)
        cir.if %23 {
          %24 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc248)
          %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc249)
          cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc404)
        } else {
          %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc252)
          %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc252)
          cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc253)
        } loc(#loc403)
      } loc(#loc401)
    } loc(#loc399)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc254)
    %4 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc378)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc405)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc256)
    cir.call @goodB2G2Sink(%5) : (!s32i) -> () loc(#loc257)
    cir.return loc(#loc227)
  } loc(#loc396)
  cir.global "private"  internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc406)
  cir.func internal private  @goodG2BSink(%arg0: !s32i loc(fused[#loc262, #loc263])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc408)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc264)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc406)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc267)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc267)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc412)
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc413)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc413)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc413)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc277)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc278)
            %9 = cir.cmp(ge, %7, %8) : !s32i, !s32i loc(#loc415)
            %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc279)
            cir.if %10 {
              %11 = cir.const #cir.int<1> : !s32i loc(#loc283)
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc284)
              %13 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc285)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc285)
              cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc417)
              cir.scope {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc288)
                cir.store %15, %4 : !s32i, !cir.ptr<!s32i> loc(#loc419)
                cir.for : cond {
                  %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc290)
                  %17 = cir.const #cir.int<10> : !s32i loc(#loc291)
                  %18 = cir.cmp(lt, %16, %17) : !s32i, !s32i loc(#loc420)
                  %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc292)
                  cir.condition(%19) loc(#loc292)
                } body {
                  cir.scope {
                    %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc294)
                    %17 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc295)
                    %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc295)
                    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc295)
                    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc296)
                  } loc(#loc421)
                  cir.yield loc(#loc287)
                } step {
                  %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc297)
                  %17 = cir.unary(inc, %16) : !s32i, !s32i loc(#loc298)
                  cir.store %17, %4 : !s32i, !cir.ptr<!s32i> loc(#loc422)
                  cir.yield loc(#loc418)
                } loc(#loc418)
              } loc(#loc418)
            } else {
              %11 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc299)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc299)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc300)
            } loc(#loc416)
          } loc(#loc414)
        } loc(#loc411)
      } loc(#loc410)
    } loc(#loc409)
    cir.return loc(#loc261)
  } loc(#loc407)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc424)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc305)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc306)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc425)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc308)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc426)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc310)
    %5 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc406)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc427)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc312)
    cir.call @goodG2BSink(%6) : (!s32i) -> () loc(#loc313)
    cir.return loc(#loc302)
  } loc(#loc423)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":68:23)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":25:1)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":25:24)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":47:27)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":27:1)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":51:1)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":28:1)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":29:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":50:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":29:8)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":30:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":31:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":49:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":32:13)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":32:17)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":33:13)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":33:34)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":36:13)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":48:13)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":36:17)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":36:25)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":36:22)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":37:13)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":44:13)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":46:13)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":38:32)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":38:24)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":38:17)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":40:17)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":43:17)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":40:25)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":40:21)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":40:28)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":40:32)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":40:30)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":41:17)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":42:41)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":42:34)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":42:21)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":40:37)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":40:36)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":47:17)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":53:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":73:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":55:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":55:9)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":57:13)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":57:12)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":57:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":58:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":70:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":59:9)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":59:45)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":61:9)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":69:9)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":61:19)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":61:32)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":61:49)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":61:13)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":61:59)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":61:56)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":62:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":65:9)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":67:9)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":64:25)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":64:20)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":64:13)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":64:36)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":68:13)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":71:17)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":71:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":72:13)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":72:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":224:1)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":229:1)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":226:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":226:14)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":227:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":227:14)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":228:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":228:13)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":80:1)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":80:29)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":90:19)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":109:27)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":85:1)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":113:1)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":86:1)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":87:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":112:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":87:8)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":88:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":91:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":93:5)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":90:9)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":94:9)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":111:9)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":95:13)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":95:17)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":96:13)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":96:34)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":98:13)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":110:13)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":98:17)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":98:25)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":98:22)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":98:27)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":98:30)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":98:38)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":98:40)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":98:35)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":99:13)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":106:13)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":108:13)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":100:32)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":100:24)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":100:17)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":102:17)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":105:17)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":102:25)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":102:21)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":102:28)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":102:32)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":102:30)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":103:17)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":104:41)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":104:34)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":104:21)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":102:37)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":102:36)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":109:17)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":115:1)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":135:1)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":117:5)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":117:9)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":119:13)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":119:12)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":119:5)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":120:5)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":132:5)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":121:9)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":121:45)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":123:9)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":131:9)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":123:19)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":123:32)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":123:49)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":123:13)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":123:59)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":123:56)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":124:9)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":127:9)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":129:9)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":126:25)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":126:20)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":126:13)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":126:36)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":130:23)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":130:13)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":133:22)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":133:5)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":134:18)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":134:5)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":81:1)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":81:29)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":138:1)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":161:1)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":139:1)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":140:5)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":160:5)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":140:8)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":141:5)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":142:9)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":159:9)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":143:13)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":143:17)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":144:13)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":144:34)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":146:13)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":158:13)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":146:17)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":146:25)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":146:22)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":146:27)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":146:30)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":146:38)
#loc203 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":146:40)
#loc204 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":146:35)
#loc205 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":147:13)
#loc206 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":154:13)
#loc207 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":156:13)
#loc208 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":148:32)
#loc209 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":148:24)
#loc210 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":148:17)
#loc211 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":150:17)
#loc212 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":153:17)
#loc213 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":150:25)
#loc214 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":150:21)
#loc215 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":150:28)
#loc216 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":150:32)
#loc217 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":150:30)
#loc218 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":151:17)
#loc219 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":152:41)
#loc220 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":152:34)
#loc221 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":152:21)
#loc222 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":150:37)
#loc223 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":150:36)
#loc224 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":157:27)
#loc225 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":157:17)
#loc226 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":163:1)
#loc227 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":183:1)
#loc228 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":165:5)
#loc229 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":165:9)
#loc230 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":167:13)
#loc231 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":167:12)
#loc232 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":167:5)
#loc233 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":168:5)
#loc234 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":180:5)
#loc235 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":169:9)
#loc236 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":169:45)
#loc237 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":171:9)
#loc238 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":179:9)
#loc239 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":171:19)
#loc240 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":171:32)
#loc241 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":171:49)
#loc242 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":171:13)
#loc243 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":171:59)
#loc244 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":171:56)
#loc245 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":172:9)
#loc246 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":175:9)
#loc247 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":177:9)
#loc248 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":174:25)
#loc249 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":174:20)
#loc250 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":174:13)
#loc251 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":174:36)
#loc252 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":178:23)
#loc253 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":178:13)
#loc254 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":181:22)
#loc255 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":181:5)
#loc256 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":182:18)
#loc257 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":182:5)
#loc258 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":82:1)
#loc259 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":82:28)
#loc260 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":186:1)
#loc261 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":210:1)
#loc264 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":187:1)
#loc265 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":188:5)
#loc266 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":209:5)
#loc267 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":188:8)
#loc268 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":189:5)
#loc269 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":190:9)
#loc270 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":208:9)
#loc271 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":191:13)
#loc272 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":191:17)
#loc273 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":192:13)
#loc274 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":192:34)
#loc275 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":195:13)
#loc276 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":207:13)
#loc277 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":195:17)
#loc278 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":195:25)
#loc279 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":195:22)
#loc280 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":196:13)
#loc281 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":203:13)
#loc282 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":205:13)
#loc283 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":197:32)
#loc284 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":197:24)
#loc285 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":197:17)
#loc286 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":199:17)
#loc287 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":202:17)
#loc288 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":199:25)
#loc289 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":199:21)
#loc290 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":199:28)
#loc291 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":199:32)
#loc292 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":199:30)
#loc293 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":200:17)
#loc294 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":201:41)
#loc295 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":201:34)
#loc296 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":201:21)
#loc297 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":199:37)
#loc298 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":199:36)
#loc299 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":206:27)
#loc300 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":206:17)
#loc301 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":212:1)
#loc302 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":222:1)
#loc303 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":214:5)
#loc304 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":214:9)
#loc305 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":216:13)
#loc306 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":216:12)
#loc307 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":216:5)
#loc308 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":219:12)
#loc309 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":219:5)
#loc310 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":220:21)
#loc311 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":220:5)
#loc312 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":221:17)
#loc313 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_21.c":221:5)
#loc314 = loc(fused[#loc1, #loc2])
#loc315 = loc(fused[#loc3, #loc4])
#loc316 = loc(fused[#loc5, #loc6])
#loc317 = loc(fused[#loc7, #loc8])
#loc318 = loc(fused[#loc10, #loc11])
#loc319 = loc(fused[#loc12, #loc13])
#loc320 = loc(fused[#loc15, #loc16])
#loc322 = loc(fused[#loc20, #loc21])
#loc323 = loc(fused[#loc23, #loc21])
#loc324 = loc(fused[#loc24, #loc25])
#loc325 = loc(fused[#loc26, #loc27])
#loc326 = loc(fused[#loc28, #loc29])
#loc327 = loc(fused[#loc30, #loc31])
#loc328 = loc(fused[#loc32, #loc33])
#loc329 = loc(fused[#loc35, #loc36, #loc37, #loc31])
#loc330 = loc(fused[#loc40, #loc38])
#loc331 = loc(fused[#loc41, #loc42])
#loc332 = loc(fused[#loc44, #loc43])
#loc333 = loc(fused[#loc45, #loc46])
#loc334 = loc(fused[#loc48, #loc42])
#loc335 = loc(fused[#loc53, #loc52])
#loc336 = loc(fused[#loc55, #loc56])
#loc337 = loc(fused[#loc57, #loc58])
#loc338 = loc(fused[#loc61, #loc59])
#loc339 = loc(fused[#loc62, #loc63])
#loc340 = loc(fused[#loc64, #loc65])
#loc341 = loc(fused[#loc66, #loc67])
#loc342 = loc(fused[#loc71, #loc72])
#loc343 = loc(fused[#loc74, #loc75, #loc76, #loc67])
#loc344 = loc(fused[#loc79, #loc80])
#loc345 = loc(fused[#loc83, #loc82])
#loc346 = loc(fused[#loc86, #loc87])
#loc347 = loc(fused[#loc88, #loc89])
#loc348 = loc(fused[#loc90, #loc91])
#loc349 = loc(fused[#loc92, #loc93])
#loc350 = loc(fused[#loc94, #loc95])
#loc351 = loc(fused[#loc98, #loc99])
#loc353 = loc(fused[#loc103, #loc104])
#loc354 = loc(fused[#loc106, #loc107, #loc108, #loc104])
#loc355 = loc(fused[#loc110, #loc111])
#loc356 = loc(fused[#loc112, #loc113])
#loc357 = loc(fused[#loc114, #loc115])
#loc358 = loc(fused[#loc116, #loc117])
#loc359 = loc(fused[#loc118, #loc119])
#loc360 = loc(fused[#loc122, #loc124])
#loc361 = loc(fused[#loc126, #loc127, #loc128, #loc117])
#loc362 = loc(fused[#loc131, #loc129])
#loc363 = loc(fused[#loc132, #loc133])
#loc364 = loc(fused[#loc135, #loc134])
#loc365 = loc(fused[#loc136, #loc137])
#loc366 = loc(fused[#loc139, #loc133])
#loc367 = loc(fused[#loc144, #loc143])
#loc368 = loc(fused[#loc146, #loc147])
#loc369 = loc(fused[#loc148, #loc149])
#loc370 = loc(fused[#loc152, #loc150])
#loc371 = loc(fused[#loc153, #loc154])
#loc372 = loc(fused[#loc155, #loc156])
#loc373 = loc(fused[#loc157, #loc158])
#loc374 = loc(fused[#loc162, #loc163])
#loc375 = loc(fused[#loc165, #loc166, #loc167, #loc158])
#loc376 = loc(fused[#loc170, #loc171])
#loc377 = loc(fused[#loc175, #loc174])
#loc378 = loc(fused[#loc178, #loc179])
#loc379 = loc(fused[#loc180, #loc181])
#loc381 = loc(fused[#loc185, #loc186])
#loc382 = loc(fused[#loc188, #loc186])
#loc383 = loc(fused[#loc189, #loc190])
#loc384 = loc(fused[#loc191, #loc192])
#loc385 = loc(fused[#loc193, #loc194])
#loc386 = loc(fused[#loc195, #loc196])
#loc387 = loc(fused[#loc197, #loc198])
#loc388 = loc(fused[#loc201, #loc203])
#loc389 = loc(fused[#loc205, #loc206, #loc207, #loc196])
#loc390 = loc(fused[#loc210, #loc208])
#loc391 = loc(fused[#loc211, #loc212])
#loc392 = loc(fused[#loc214, #loc213])
#loc393 = loc(fused[#loc215, #loc216])
#loc394 = loc(fused[#loc218, #loc212])
#loc395 = loc(fused[#loc223, #loc222])
#loc396 = loc(fused[#loc226, #loc227])
#loc397 = loc(fused[#loc228, #loc229])
#loc398 = loc(fused[#loc232, #loc230])
#loc399 = loc(fused[#loc233, #loc234])
#loc400 = loc(fused[#loc235, #loc236])
#loc401 = loc(fused[#loc237, #loc238])
#loc402 = loc(fused[#loc242, #loc243])
#loc403 = loc(fused[#loc245, #loc246, #loc247, #loc238])
#loc404 = loc(fused[#loc250, #loc251])
#loc405 = loc(fused[#loc255, #loc254])
#loc406 = loc(fused[#loc258, #loc259])
#loc407 = loc(fused[#loc260, #loc261])
#loc409 = loc(fused[#loc265, #loc266])
#loc410 = loc(fused[#loc268, #loc266])
#loc411 = loc(fused[#loc269, #loc270])
#loc412 = loc(fused[#loc271, #loc272])
#loc413 = loc(fused[#loc273, #loc274])
#loc414 = loc(fused[#loc275, #loc276])
#loc415 = loc(fused[#loc277, #loc278])
#loc416 = loc(fused[#loc280, #loc281, #loc282, #loc276])
#loc417 = loc(fused[#loc285, #loc283])
#loc418 = loc(fused[#loc286, #loc287])
#loc419 = loc(fused[#loc289, #loc288])
#loc420 = loc(fused[#loc290, #loc291])
#loc421 = loc(fused[#loc293, #loc287])
#loc422 = loc(fused[#loc298, #loc297])
#loc423 = loc(fused[#loc301, #loc302])
#loc424 = loc(fused[#loc303, #loc304])
#loc425 = loc(fused[#loc307, #loc305])
#loc426 = loc(fused[#loc309, #loc308])
#loc427 = loc(fused[#loc311, #loc310])
