!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc12 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":37:16)
#loc13 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":37:24)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":71:20)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":71:28)
#true = #cir.bool<true> : !cir.bool
#loc80 = loc(fused[#loc12, #loc13])
#loc102 = loc(fused[#loc70, #loc71])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc75)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc76)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc77)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.func @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_629badSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc12, #loc13])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc80)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc14)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc82)
      %2 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc19)
      %3 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc20)
      %4 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
      %5 = cir.call @strlen(%4) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc19)
      cir.store %5, %1 : !u64i, !cir.ptr<!u64i> loc(#loc82)
      cir.scope {
        %6 = cir.const #cir.int<4096> : !s32i loc(#loc23)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc23)
        %8 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc24)
        %9 = cir.binop(sub, %7, %8) : !u64i loc(#loc84)
        %10 = cir.const #cir.int<1> : !s32i loc(#loc25)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc25)
        %12 = cir.cmp(gt, %9, %11) : !u64i, !cir.bool loc(#loc85)
        cir.if %12 {
          cir.scope {
            %13 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc29)
            %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
            %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc30)
            %16 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %15 : !u64i), !cir.ptr<!s8i> loc(#loc31)
            %17 = cir.const #cir.int<4096> : !s32i loc(#loc32)
            %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc32)
            %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc33)
            %20 = cir.binop(sub, %18, %19) : !u64i loc(#loc88)
            %21 = cir.cast(integral, %20 : !u64i), !s32i loc(#loc88)
            %22 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc77)
            %23 = cir.load %22 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc34)
            %24 = cir.call @fgets(%16, %21, %23) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc35)
            %25 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc36)
            %26 = cir.cmp(ne, %24, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc89)
            cir.if %26 {
              %27 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc40)
              %28 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc41)
              %29 = cir.load %28 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
              %30 = cir.call @strlen(%29) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc40)
              cir.store %30, %1 : !u64i, !cir.ptr<!u64i> loc(#loc91)
              cir.scope {
                %31 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc46)
                %32 = cir.const #cir.int<0> : !s32i loc(#loc47)
                %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc47)
                %34 = cir.cmp(gt, %31, %33) : !u64i, !cir.bool loc(#loc93)
                %35 = cir.ternary(%34, true {
                  %36 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc49)
                  %37 = cir.load %36 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
                  %38 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc50)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc51)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc51)
                  %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc94)
                  %42 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc52)
                  %43 = cir.load %42 : !cir.ptr<!s8i>, !s8i loc(#loc49)
                  %44 = cir.cast(integral, %43 : !s8i), !s32i loc(#loc49)
                  %45 = cir.const #cir.int<10> : !s8i loc(#loc53)
                  %46 = cir.cast(integral, %45 : !s8i), !s32i loc(#loc53)
                  %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc95)
                  %48 = cir.ternary(%47, true {
                    %49 = cir.const #true loc(#loc48)
                    cir.yield %49 : !cir.bool loc(#loc48)
                  }, false {
                    %49 = cir.const #false loc(#loc48)
                    cir.yield %49 : !cir.bool loc(#loc48)
                  }) : (!cir.bool) -> !cir.bool loc(#loc48)
                  cir.yield %48 : !cir.bool loc(#loc48)
                }, false {
                  %36 = cir.const #false loc(#loc48)
                  cir.yield %36 : !cir.bool loc(#loc48)
                }) : (!cir.bool) -> !cir.bool loc(#loc48)
                cir.if %35 {
                  %36 = cir.const #cir.int<0> : !s8i loc(#loc55)
                  %37 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc56)
                  %38 = cir.load %37 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
                  %39 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc57)
                  %40 = cir.const #cir.int<1> : !s32i loc(#loc58)
                  %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc58)
                  %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc97)
                  %43 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc59)
                  cir.store %36, %43 : !s8i, !cir.ptr<!s8i> loc(#loc98)
                } loc(#loc96)
              } loc(#loc92)
            } else {
              %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
              %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc60)
              %29 = cir.const #cir.int<0> : !s8i loc(#loc61)
              %30 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc62)
              %31 = cir.load %30 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
              %32 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc63)
              %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc64)
              cir.store %29, %33 : !s8i, !cir.ptr<!s8i> loc(#loc99)
            } loc(#loc90)
          } loc(#loc87)
        } loc(#loc86)
      } loc(#loc83)
    } loc(#loc81)
    cir.return loc(#loc11)
  } loc(#loc79)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc100)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc67)
  cir.func @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_6213goodG2BSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc70, #loc71])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc102)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc72)
    %1 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc73)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc74)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
    %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc67)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc67)
    %6 = cir.call @strcat(%3, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc73)
    cir.return loc(#loc69)
  } loc(#loc101)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":58:27)
#loc10 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":37:1)
#loc11 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":64:1)
#loc14 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":38:1)
#loc15 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":39:5)
#loc16 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":63:5)
#loc17 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":41:9)
#loc18 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":41:37)
#loc19 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":41:26)
#loc20 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":41:33)
#loc21 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":43:9)
#loc22 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":62:9)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":43:13)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":43:26)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":43:36)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":44:9)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":46:13)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":61:13)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":46:23)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":46:28)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":46:27)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":46:43)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":46:56)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":46:66)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":46:17)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":46:76)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":47:13)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":55:13)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":57:13)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":50:27)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":50:34)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":50:17)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":50:38)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":51:17)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":54:17)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":51:21)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":51:31)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":51:33)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":51:36)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":51:41)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":51:49)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":51:50)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":51:55)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":52:17)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":53:39)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":53:21)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":53:26)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":53:34)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":53:35)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":58:17)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":60:33)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":60:17)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":60:22)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":60:29)
#loc65 = loc("/usr/include/string.h":149:1)
#loc66 = loc("/usr/include/string.h":150:14)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":74:18)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":71:1)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":75:1)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":72:1)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":74:5)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_62b.cpp":74:12)
#loc75 = loc(fused[#loc1, #loc2])
#loc76 = loc(fused[#loc3, #loc4])
#loc77 = loc(fused[#loc5, #loc6])
#loc78 = loc(fused[#loc7, #loc8])
#loc79 = loc(fused[#loc10, #loc11])
#loc81 = loc(fused[#loc15, #loc16])
#loc82 = loc(fused[#loc17, #loc18])
#loc83 = loc(fused[#loc21, #loc22])
#loc84 = loc(fused[#loc23, #loc24])
#loc85 = loc(fused[#loc23, #loc25])
#loc86 = loc(fused[#loc26, #loc22])
#loc87 = loc(fused[#loc27, #loc28])
#loc88 = loc(fused[#loc32, #loc33])
#loc89 = loc(fused[#loc35, #loc36])
#loc90 = loc(fused[#loc37, #loc38, #loc39, #loc28])
#loc91 = loc(fused[#loc42, #loc43])
#loc92 = loc(fused[#loc44, #loc45])
#loc93 = loc(fused[#loc46, #loc47])
#loc94 = loc(fused[#loc50, #loc51])
#loc95 = loc(fused[#loc49, #loc53])
#loc96 = loc(fused[#loc54, #loc45])
#loc97 = loc(fused[#loc57, #loc58])
#loc98 = loc(fused[#loc56, #loc55])
#loc99 = loc(fused[#loc62, #loc61])
#loc100 = loc(fused[#loc65, #loc66])
#loc101 = loc(fused[#loc68, #loc69])
