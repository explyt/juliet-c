!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":84:10)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":84:14)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":84:20)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":84:32)
#loc137 = loc(fused[#loc61, #loc62])
#loc138 = loc(fused[#loc63, #loc64])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc113)
  cir.global "private" constant cir_private @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc114)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc115)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc116)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc117)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc118)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc119)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc121)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc19)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
    cir.goto "source" loc(#loc123)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc23)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc24)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc25)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc25)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc124)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc125)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc24)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc126)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc127)
    cir.scope {
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
      %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc33)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc33)
      %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc129)
      cir.if %12 {
        %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc35)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc36)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc37)
        cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc35)
      } loc(#loc130)
    } loc(#loc128)
    cir.scope {
      %9 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc114)
      %10 = cir.get_global @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc114)
      cir.copy %10 to %9 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc114)
      %11 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc40)
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
      %13 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc42)
      %14 = cir.call @strcpy(%12, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc40)
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
      cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc44)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc45)
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc46)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc45)
    } loc(#loc131)
    cir.return loc(#loc16)
  } loc(#loc120)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc133)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    cir.return loc(#loc48)
  } loc(#loc132)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc134)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc135)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc58)
  cir.func @main(%arg0: !s32i loc(fused[#loc61, #loc62]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc63, #loc64])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc137)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc138)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc60)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc65)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc65)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc66)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc67)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc67)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc68)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc55)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc139)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18_good() : () -> () loc(#loc70)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc56)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc57)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc140)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18_bad() : () -> () loc(#loc74)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc58)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc77)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc141)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc141)
    cir.return %17 : !s32i loc(#loc141)
  } loc(#loc136)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc143)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc83)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc144)
    cir.goto "source" loc(#loc145)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc87)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc88)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc89)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc90)
    %5 = cir.binop(add, %3, %4) nsw : !s32i loc(#loc89)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc89)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc146)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc147)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc88)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc148)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc149)
    cir.scope {
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
      %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc99)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc99)
      %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc151)
      cir.if %14 {
        %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc101)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc102)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc103)
        cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc101)
      } loc(#loc152)
    } loc(#loc150)
    cir.scope {
      %11 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc113)
      %12 = cir.get_global @__const.goodG2B.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc113)
      cir.copy %12 to %11 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc113)
      %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc106)
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
      %15 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc108)
      %16 = cir.call @strcpy(%14, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc106)
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
      cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc110)
      %18 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc111)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc112)
      cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc111)
    } loc(#loc153)
    cir.return loc(#loc80)
  } loc(#loc142)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":61:9)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":61:29)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":38:9)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":38:29)
#loc5 = loc("/usr/include/stdlib.h":672:1)
#loc6 = loc("/usr/include/stdlib.h":672:45)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("/usr/include/string.h":141:1)
#loc10 = loc("/usr/include/string.h":142:14)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("/usr/include/stdlib.h":687:1)
#loc14 = loc("/usr/include/stdlib.h":687:32)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":28:1)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":44:1)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":30:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":30:12)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":31:12)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":31:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":32:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":32:10)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":33:1)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":35:20)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":35:27)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":35:30)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":35:41)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":35:42)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":35:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":36:5)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":36:33)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":36:9)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":36:17)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":36:23)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":36:24)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":36:30)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":36:29)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":37:5)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":43:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":40:9)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":40:16)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":40:22)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":41:19)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":41:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":42:9)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":42:14)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":69:1)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":72:1)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":71:5)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":71:13)
#loc51 = loc("/usr/include/stdlib.h":575:1)
#loc52 = loc("/usr/include/stdlib.h":575:41)
#loc53 = loc("/usr/include/time.h":76:1)
#loc54 = loc("/usr/include/time.h":76:38)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":89:15)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":91:15)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":94:15)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":96:15)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":84:1)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":99:1)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":85:1)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":87:27)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":87:22)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":87:5)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":89:5)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":90:5)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":90:66)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":91:5)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":94:5)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":95:5)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":95:65)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":96:5)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":98:12)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":98:5)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":51:1)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":67:1)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":53:5)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":53:12)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":54:12)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":54:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":55:5)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":55:10)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":56:1)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":58:20)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":58:28)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":58:31)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":58:34)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":58:45)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":58:27)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":58:46)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":58:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":59:5)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":59:33)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":59:9)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":59:17)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":59:23)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":59:24)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":59:30)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":59:29)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":60:5)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":66:5)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":63:9)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":63:16)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":63:22)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":64:19)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":64:9)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":65:9)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_18.c":65:14)
#loc113 = loc(fused[#loc1, #loc2])
#loc114 = loc(fused[#loc3, #loc4])
#loc115 = loc(fused[#loc5, #loc6])
#loc116 = loc(fused[#loc7, #loc8])
#loc117 = loc(fused[#loc9, #loc10])
#loc118 = loc(fused[#loc11, #loc12])
#loc119 = loc(fused[#loc13, #loc14])
#loc120 = loc(fused[#loc15, #loc16])
#loc121 = loc(fused[#loc17, #loc18])
#loc122 = loc(fused[#loc20, #loc19])
#loc123 = loc(fused[#loc21, #loc22])
#loc124 = loc(fused[#loc26, #loc27])
#loc125 = loc(fused[#loc25, #loc27])
#loc126 = loc(fused[#loc24, #loc28])
#loc127 = loc(fused[#loc29, #loc28])
#loc128 = loc(fused[#loc30, #loc31])
#loc129 = loc(fused[#loc32, #loc33])
#loc130 = loc(fused[#loc34, #loc31])
#loc131 = loc(fused[#loc38, #loc39])
#loc132 = loc(fused[#loc47, #loc48])
#loc133 = loc(fused[#loc49, #loc50])
#loc134 = loc(fused[#loc51, #loc52])
#loc135 = loc(fused[#loc53, #loc54])
#loc136 = loc(fused[#loc59, #loc60])
#loc139 = loc(fused[#loc70, #loc71])
#loc140 = loc(fused[#loc74, #loc75])
#loc141 = loc(fused[#loc78, #loc77])
#loc142 = loc(fused[#loc79, #loc80])
#loc143 = loc(fused[#loc81, #loc82])
#loc144 = loc(fused[#loc84, #loc83])
#loc145 = loc(fused[#loc85, #loc86])
#loc146 = loc(fused[#loc91, #loc92])
#loc147 = loc(fused[#loc93, #loc92])
#loc148 = loc(fused[#loc88, #loc94])
#loc149 = loc(fused[#loc95, #loc94])
#loc150 = loc(fused[#loc96, #loc97])
#loc151 = loc(fused[#loc98, #loc99])
#loc152 = loc(fused[#loc100, #loc97])
#loc153 = loc(fused[#loc104, #loc105])
