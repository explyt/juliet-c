!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc8 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":55:14)
#loc9 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":55:31)
#loc32 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":75:18)
#loc33 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":75:35)
#loc58 = loc(fused[#loc8, #loc9])
#loc67 = loc(fused[#loc32, #loc33])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s02/CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"wb+\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc3)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc56)
  cir.func @_ZN58CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_667badSinkEPPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc8, #loc9])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc59)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc58)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc60)
    cir.store %arg0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc14)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc15)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc16)
    %5 = cir.ptr_stride(%3 : !cir.ptr<!cir.ptr<!s8i>>, %4 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc13)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
    cir.store %6, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc60)
    cir.br ^bb1 loc(#loc61)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc11)
    cir.store %7, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc59)
    %8 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc19)
    %9 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc3)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc3)
    %12 = cir.call @fopen(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc19)
    cir.store %12, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc62)
    cir.br ^bb2 loc(#loc63)
  ^bb2:  // pred: ^bb1
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc25)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc26)
    %15 = cir.cmp(ne, %13, %14) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc64)
    cir.brcond %15 ^bb3, ^bb4 loc(#loc65)
  ^bb3:  // pred: ^bb2
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
    %17 = cir.call @fclose(%16) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc29)
    cir.br ^bb4 loc(#loc24)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc24)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc18)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc7)
  } loc(#loc57)
  cir.func @_ZN58CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_6611goodG2BSinkEPPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc32, #loc33])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc68)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc67)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc69)
    cir.store %arg0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc38)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc39)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc40)
    %5 = cir.ptr_stride(%3 : !cir.ptr<!cir.ptr<!s8i>>, %4 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc37)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
    cir.store %6, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc69)
    cir.br ^bb1 loc(#loc70)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc35)
    cir.store %7, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc68)
    %8 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc43)
    %9 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc45)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc45)
    %12 = cir.call @fopen(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc43)
    cir.store %12, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc71)
    cir.br ^bb2 loc(#loc72)
  ^bb2:  // pred: ^bb1
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc50)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc51)
    %15 = cir.cmp(ne, %13, %14) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc73)
    cir.brcond %15 ^bb3, ^bb4 loc(#loc74)
  ^bb3:  // pred: ^bb2
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc53)
    %17 = cir.call @fclose(%16) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc54)
    cir.br ^bb4 loc(#loc49)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc49)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc42)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc31)
  } loc(#loc66)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s02/CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":264:1)
#loc2 = loc("/usr/include/stdio.h":266:3)
#loc3 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":62:29)
#loc4 = loc("/usr/include/stdio.h":184:1)
#loc5 = loc("/usr/include/stdio.h":184:36)
#loc6 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":55:1)
#loc7 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":68:1)
#loc10 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":60:9)
#loc11 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":60:23)
#loc12 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":58:5)
#loc13 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":58:30)
#loc14 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":56:1)
#loc15 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":58:19)
#loc16 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":58:29)
#loc17 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":59:5)
#loc18 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":67:5)
#loc19 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":62:17)
#loc20 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":62:23)
#loc21 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":62:9)
#loc22 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":62:34)
#loc23 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":63:9)
#loc24 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":66:9)
#loc25 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":63:13)
#loc26 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":63:22)
#loc27 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":64:9)
#loc28 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":65:20)
#loc29 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":65:13)
#loc30 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":75:1)
#loc31 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":87:1)
#loc34 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":79:9)
#loc35 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":79:23)
#loc36 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":77:5)
#loc37 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":77:30)
#loc38 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":76:1)
#loc39 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":77:19)
#loc40 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":77:29)
#loc41 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":78:5)
#loc42 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":86:5)
#loc43 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":81:17)
#loc44 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":81:23)
#loc45 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":81:29)
#loc46 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":81:9)
#loc47 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":81:34)
#loc48 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":82:9)
#loc49 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":85:9)
#loc50 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":82:13)
#loc51 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":82:22)
#loc52 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":83:9)
#loc53 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":84:20)
#loc54 = loc("CWE36_Absolute_Path_Traversal__char_listen_socket_fopen_66b.cpp":84:13)
#loc55 = loc(fused[#loc1, #loc2])
#loc56 = loc(fused[#loc4, #loc5])
#loc57 = loc(fused[#loc6, #loc7])
#loc59 = loc(fused[#loc10, #loc11])
#loc60 = loc(fused[#loc12, #loc13])
#loc61 = loc(fused[#loc17, #loc18])
#loc62 = loc(fused[#loc21, #loc22])
#loc63 = loc(fused[#loc23, #loc24])
#loc64 = loc(fused[#loc25, #loc26])
#loc65 = loc(fused[#loc27, #loc24])
#loc66 = loc(fused[#loc30, #loc31])
#loc68 = loc(fused[#loc34, #loc35])
#loc69 = loc(fused[#loc36, #loc37])
#loc70 = loc(fused[#loc41, #loc42])
#loc71 = loc(fused[#loc46, #loc47])
#loc72 = loc(fused[#loc48, #loc49])
#loc73 = loc(fused[#loc50, #loc51])
#loc74 = loc(fused[#loc52, #loc49])
