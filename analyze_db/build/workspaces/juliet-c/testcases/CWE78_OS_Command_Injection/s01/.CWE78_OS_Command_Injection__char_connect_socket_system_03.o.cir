!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc124 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":100:48)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_system_03.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B2.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc236)
  cir.global "private" constant cir_private @__const.goodG2B1.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc237)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_connect_socket_system_03_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc238)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc239)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc240)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc241)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc13)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc242)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc243)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc244)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc245)
  cir.func private @close(!s32i) -> !s32i loc(#loc246)
  cir.func private @system(!cir.ptr<!s8i>) -> !s32i loc(#loc247)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc248)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc28)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc249)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_system_03_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc251)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc252)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc253)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc254)
    %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc255)
    %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc256)
    %6 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc238)
    %7 = cir.get_global @__const.CWE78_OS_Command_Injection__char_connect_socket_system_03_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc238)
    cir.copy %7 to %6 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc238)
    %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc45)
    cir.store %8, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc257)
    cir.br ^bb1 loc(#loc258)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.int<5> : !s32i loc(#loc49)
    %10 = cir.const #cir.int<5> : !s32i loc(#loc50)
    %11 = cir.cmp(eq, %9, %10) : !s32i, !cir.bool loc(#loc259)
    cir.brcond %11 ^bb2, ^bb44 loc(#loc260)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc261)
  ^bb3:  // pred: ^bb2
    %12 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc40)
    cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc254)
    %14 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc54)
    %15 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc54)
    cir.store %16, %4 : !u64i, !cir.ptr<!u64i> loc(#loc255)
    cir.br ^bb4 loc(#loc262)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc262)
  ^bb5:  // pred: ^bb36
    %17 = cir.const #cir.int<0> : !s32i loc(#loc58)
    %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc58)
    cir.brcond %18 ^bb6, ^bb37 loc(#loc58)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc263)
  ^bb7:  // pred: ^bb6
    %19 = cir.const #cir.int<2> : !s32i loc(#loc61)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc62)
    %21 = cir.const #cir.int<6> : !s32i loc(#loc63)
    %22 = cir.call @socket(%19, %20, %21) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc64)
    cir.store %22, %3 : !s32i, !cir.ptr<!s32i> loc(#loc264)
    cir.br ^bb8 loc(#loc265)
  ^bb8:  // pred: ^bb7
    %23 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc69)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc70)
    %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc70)
    %26 = cir.cmp(eq, %23, %25) : !s32i, !cir.bool loc(#loc266)
    cir.brcond %26 ^bb9, ^bb10 loc(#loc267)
  ^bb9:  // pred: ^bb8
    cir.br ^bb37 loc(#loc72)
  ^bb10:  // pred: ^bb8
    cir.br ^bb11 loc(#loc68)
  ^bb11:  // pred: ^bb10
    %27 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc268)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc75)
    %29 = cir.const #cir.int<16> : !u64i loc(#loc269)
    cir.libc.memset %29 bytes from %27 set to %28 : !cir.ptr<!void>, !s32i, !u64i loc(#loc270)
    %30 = cir.const #cir.int<2> : !s32i loc(#loc80)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc80)
    %32 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
    cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc271)
    %33 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc13)
    %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc13)
    %35 = cir.call @inet_addr(%34) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc83)
    %36 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc84)
    %37 = cir.get_member %36[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc85)
    cir.store %35, %37 : !u32i, !cir.ptr<!u32i> loc(#loc272)
    %38 = cir.const #cir.int<27015> : !s32i loc(#loc88)
    %39 = cir.cast(integral, %38 : !s32i), !u16i loc(#loc88)
    %40 = cir.call @htons(%39) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc89)
    %41 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc90)
    cir.store %40, %41 : !u16i, !cir.ptr<!u16i> loc(#loc273)
    cir.br ^bb12 loc(#loc274)
  ^bb12:  // pred: ^bb11
    %42 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %43 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc275)
    %44 = cir.const #cir.int<16> : !u64i loc(#loc276)
    %45 = cir.cast(integral, %44 : !u64i), !u32i loc(#loc276)
    %46 = cir.call @connect(%42, %43, %45) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc100)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc101)
    %48 = cir.unary(minus, %47) nsw : !s32i, !s32i loc(#loc101)
    %49 = cir.cmp(eq, %46, %48) : !s32i, !cir.bool loc(#loc277)
    cir.brcond %49 ^bb13, ^bb14 loc(#loc278)
  ^bb13:  // pred: ^bb12
    cir.br ^bb37 loc(#loc103)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc94)
  ^bb15:  // pred: ^bb14
    %50 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    %51 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
    %52 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc106)
    %53 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %52 : !u64i), !cir.ptr<!s8i> loc(#loc107)
    %54 = cir.cast(bitcast, %53 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc279)
    %55 = cir.const #cir.int<1> : !u64i loc(#loc280)
    %56 = cir.const #cir.int<100> : !s32i loc(#loc112)
    %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc112)
    %58 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc113)
    %59 = cir.binop(sub, %57, %58) : !u64i loc(#loc281)
    %60 = cir.const #cir.int<1> : !s32i loc(#loc114)
    %61 = cir.cast(integral, %60 : !s32i), !u64i loc(#loc114)
    %62 = cir.binop(sub, %59, %61) : !u64i loc(#loc282)
    %63 = cir.binop(mul, %55, %62) : !u64i loc(#loc283)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc116)
    %65 = cir.call @recv(%50, %54, %63, %64) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc117)
    %66 = cir.cast(integral, %65 : !s64i), !s32i loc(#loc117)
    cir.store %66, %0 : !s32i, !cir.ptr<!s32i> loc(#loc284)
    cir.br ^bb16 loc(#loc285)
  ^bb16:  // pred: ^bb15
    %67 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    %68 = cir.const #cir.int<1> : !s32i loc(#loc123)
    %69 = cir.unary(minus, %68) nsw : !s32i, !s32i loc(#loc123)
    %70 = cir.cmp(eq, %67, %69) : !s32i, !cir.bool loc(#loc286)
    cir.brcond %70 ^bb17, ^bb18 loc(#loc124)
  ^bb17:  // pred: ^bb16
    %71 = cir.const #true loc(#loc124)
    cir.br ^bb23(%71 : !cir.bool) loc(#loc124)
  ^bb18:  // pred: ^bb16
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %73 = cir.const #cir.int<0> : !s32i loc(#loc126)
    %74 = cir.cmp(eq, %72, %73) : !s32i, !cir.bool loc(#loc287)
    cir.brcond %74 ^bb19, ^bb20 loc(#loc124)
  ^bb19:  // pred: ^bb18
    %75 = cir.const #true loc(#loc124)
    cir.br ^bb21(%75 : !cir.bool) loc(#loc124)
  ^bb20:  // pred: ^bb18
    %76 = cir.const #false loc(#loc124)
    cir.br ^bb21(%76 : !cir.bool) loc(#loc124)
  ^bb21(%77: !cir.bool loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":100:48)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc124)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23(%77 : !cir.bool) loc(#loc124)
  ^bb23(%78: !cir.bool loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":100:48)):  // 2 preds: ^bb17, ^bb22
    cir.br ^bb24 loc(#loc124)
  ^bb24:  // pred: ^bb23
    cir.brcond %78 ^bb25, ^bb26 loc(#loc288)
  ^bb25:  // pred: ^bb24
    cir.br ^bb37 loc(#loc128)
  ^bb26:  // pred: ^bb24
    cir.br ^bb27 loc(#loc121)
  ^bb27:  // pred: ^bb26
    %79 = cir.const #cir.int<0> : !s32i loc(#loc129)
    %80 = cir.cast(integral, %79 : !s32i), !s8i loc(#loc129)
    %81 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
    %82 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc131)
    %83 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    %84 = cir.cast(integral, %83 : !s32i), !u64i loc(#loc132)
    %85 = cir.const #cir.int<1> : !u64i loc(#loc289)
    %86 = cir.binop(div, %84, %85) : !u64i loc(#loc290)
    %87 = cir.binop(add, %82, %86) : !u64i loc(#loc291)
    %88 = cir.ptr_stride(%81 : !cir.ptr<!s8i>, %87 : !u64i), !cir.ptr<!s8i> loc(#loc135)
    cir.store %80, %88 : !s8i, !cir.ptr<!s8i> loc(#loc292)
    %89 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
    %90 = cir.const #cir.int<13> : !s32i loc(#loc137)
    %91 = cir.call @strchr(%89, %90) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc138)
    cir.store %91, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc293)
    cir.br ^bb28 loc(#loc294)
  ^bb28:  // pred: ^bb27
    %92 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
    %93 = cir.cast(ptr_to_bool, %92 : !cir.ptr<!s8i>), !cir.bool loc(#loc143)
    cir.brcond %93 ^bb29, ^bb30 loc(#loc295)
  ^bb29:  // pred: ^bb28
    %94 = cir.const #cir.int<0> : !s32i loc(#loc145)
    %95 = cir.cast(integral, %94 : !s32i), !s8i loc(#loc145)
    %96 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
    cir.store %95, %96 : !s8i, !cir.ptr<!s8i> loc(#loc296)
    cir.br ^bb30 loc(#loc142)
  ^bb30:  // 2 preds: ^bb28, ^bb29
    cir.br ^bb31 loc(#loc142)
  ^bb31:  // pred: ^bb30
    %97 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
    %98 = cir.const #cir.int<10> : !s32i loc(#loc149)
    %99 = cir.call @strchr(%97, %98) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc150)
    cir.store %99, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc297)
    cir.br ^bb32 loc(#loc298)
  ^bb32:  // pred: ^bb31
    %100 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
    %101 = cir.cast(ptr_to_bool, %100 : !cir.ptr<!s8i>), !cir.bool loc(#loc155)
    cir.brcond %101 ^bb33, ^bb34 loc(#loc299)
  ^bb33:  // pred: ^bb32
    %102 = cir.const #cir.int<0> : !s32i loc(#loc157)
    %103 = cir.cast(integral, %102 : !s32i), !s8i loc(#loc157)
    %104 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
    cir.store %103, %104 : !s8i, !cir.ptr<!s8i> loc(#loc300)
    cir.br ^bb34 loc(#loc154)
  ^bb34:  // 2 preds: ^bb32, ^bb33
    cir.br ^bb35 loc(#loc154)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc60)
  ^bb36:  // pred: ^bb35
    cir.br ^bb5 loc(#loc57)
  ^bb37:  // 4 preds: ^bb5, ^bb9, ^bb13, ^bb25
    cir.br ^bb38 loc(#loc57)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc301)
  ^bb39:  // pred: ^bb38
    %105 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    %106 = cir.const #cir.int<1> : !s32i loc(#loc163)
    %107 = cir.unary(minus, %106) nsw : !s32i, !s32i loc(#loc163)
    %108 = cir.cmp(ne, %105, %107) : !s32i, !cir.bool loc(#loc302)
    cir.brcond %108 ^bb40, ^bb41 loc(#loc303)
  ^bb40:  // pred: ^bb39
    %109 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc165)
    %110 = cir.call @close(%109) : (!s32i) -> !s32i loc(#loc166)
    cir.br ^bb41 loc(#loc161)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc161)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc53)
  ^bb43:  // pred: ^bb42
    cir.br ^bb44 loc(#loc48)
  ^bb44:  // 2 preds: ^bb1, ^bb43
    cir.br ^bb45 loc(#loc48)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc304)
  ^bb46:  // pred: ^bb45
    %111 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
    %112 = cir.call @system(%111) : (!cir.ptr<!s8i>) -> !s32i loc(#loc170)
    %113 = cir.const #cir.int<0> : !s32i loc(#loc171)
    %114 = cir.cmp(ne, %112, %113) : !s32i, !cir.bool loc(#loc305)
    cir.brcond %114 ^bb47, ^bb48 loc(#loc306)
  ^bb47:  // pred: ^bb46
    %115 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc28)
    %116 = cir.cast(array_to_ptrdecay, %115 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc28)
    cir.call @printLine(%116) : (!cir.ptr<!s8i>) -> () loc(#loc173)
    %117 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc174)
    %118 = cir.const #cir.int<1> : !s32i loc(#loc175)
    cir.call @exit(%118) : (!s32i) -> () extra(#fn_attr) loc(#loc174)
    cir.br ^bb48 loc(#loc168)
  ^bb48:  // 2 preds: ^bb46, ^bb47
    cir.br ^bb49 loc(#loc168)
  ^bb49:  // pred: ^bb48
    cir.return loc(#loc32)
  } loc(#loc250)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_system_03_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc308)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc178)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc309)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc180)
    cir.return loc(#loc177)
  } loc(#loc307)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc182)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc310)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc185)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc312)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc237)
    %2 = cir.get_global @__const.goodG2B1.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc237)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc237)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc190)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc313)
    cir.br ^bb1 loc(#loc314)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<5> : !s32i loc(#loc194)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc195)
    %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc315)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc316)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc182)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc182)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc199)
    cir.br ^bb4 loc(#loc197)
  ^bb3:  // pred: ^bb1
    %9 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc200)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc201)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc185)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc185)
    %13 = cir.call @strcat(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc200)
    cir.br ^bb4 loc(#loc193)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc193)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc317)
  ^bb6:  // pred: ^bb5
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc204)
    %15 = cir.call @system(%14) : (!cir.ptr<!s8i>) -> !s32i loc(#loc205)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc206)
    %17 = cir.cmp(ne, %15, %16) : !s32i, !cir.bool loc(#loc318)
    cir.brcond %17 ^bb7, ^bb8 loc(#loc319)
  ^bb7:  // pred: ^bb6
    %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc208)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc208)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc209)
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc210)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc211)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc210)
    cir.br ^bb8 loc(#loc203)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc203)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc187)
  } loc(#loc311)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc321)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc236)
    %2 = cir.get_global @__const.goodG2B2.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc236)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc236)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc216)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc322)
    cir.br ^bb1 loc(#loc323)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<5> : !s32i loc(#loc220)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc221)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc324)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc325)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc223)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc224)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc225)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc225)
    %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc223)
    cir.br ^bb3 loc(#loc219)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc219)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc326)
  ^bb5:  // pred: ^bb4
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc228)
    %13 = cir.call @system(%12) : (!cir.ptr<!s8i>) -> !s32i loc(#loc229)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc230)
    %15 = cir.cmp(ne, %13, %14) : !s32i, !cir.bool loc(#loc327)
    cir.brcond %15 ^bb6, ^bb7 loc(#loc328)
  ^bb6:  // pred: ^bb5
    %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc232)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc232)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc233)
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc234)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc235)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc234)
    cir.br ^bb7 loc(#loc227)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc227)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc213)
  } loc(#loc320)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_system_03.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":171:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":171:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":147:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":147:26)
#loc5 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":59:5)
#loc6 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":59:26)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc11 = loc("/usr/include/arpa/inet.h":34:1)
#loc12 = loc("/usr/include/arpa/inet.h":34:47)
#loc13 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":90:53)
#loc14 = loc("/usr/include/netinet/in.h":402:1)
#loc15 = loc("/usr/include/netinet/in.h":403:40)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc17 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc18 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc19 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc20 = loc("/usr/include/string.h":246:1)
#loc21 = loc("/usr/include/string.h":247:33)
#loc22 = loc("/usr/include/unistd.h":358:1)
#loc23 = loc("/usr/include/unistd.h":358:27)
#loc24 = loc("/usr/include/stdlib.h":923:1)
#loc25 = loc("/usr/include/stdlib.h":923:41)
#loc26 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc27 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc28 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":134:19)
#loc29 = loc("/usr/include/stdlib.h":756:1)
#loc30 = loc("/usr/include/stdlib.h":756:70)
#loc31 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":56:1)
#loc32 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":137:1)
#loc33 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":68:13)
#loc34 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":68:17)
#loc35 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":69:13)
#loc36 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":69:32)
#loc37 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":70:13)
#loc38 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":70:19)
#loc39 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":71:13)
#loc40 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":71:36)
#loc41 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":72:13)
#loc42 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":72:41)
#loc43 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":58:5)
#loc44 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":58:12)
#loc45 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":60:12)
#loc46 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":60:5)
#loc47 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":61:5)
#loc48 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":130:5)
#loc49 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":61:8)
#loc50 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":61:11)
#loc51 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":62:5)
#loc52 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":63:9)
#loc53 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":129:9)
#loc54 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":72:30)
#loc55 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":72:37)
#loc56 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":73:13)
#loc57 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":118:21)
#loc58 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":118:20)
#loc59 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":74:13)
#loc60 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":117:13)
#loc61 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":83:40)
#loc62 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":83:49)
#loc63 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":83:62)
#loc64 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":83:33)
#loc65 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":83:17)
#loc66 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":83:73)
#loc67 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":84:17)
#loc68 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":87:17)
#loc69 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":84:21)
#loc70 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":84:38)
#loc71 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":85:17)
#loc72 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":86:21)
#loc73 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":88:24)
#loc74 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":88:25)
#loc75 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":88:34)
#loc76 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":88:37)
#loc77 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":88:51)
#loc78 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":88:17)
#loc79 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":88:52)
#loc80 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":89:38)
#loc81 = loc("/usr/include/netinet/in.h":249:5)
#loc82 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":89:17)
#loc83 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":90:43)
#loc84 = loc("/usr/include/netinet/in.h":251:20)
#loc85 = loc("/usr/include/netinet/in.h":33:15)
#loc86 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":90:17)
#loc87 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":90:63)
#loc88 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":91:42)
#loc89 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":91:36)
#loc90 = loc("/usr/include/netinet/in.h":250:15)
#loc91 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":91:17)
#loc92 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":91:50)
#loc93 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":92:17)
#loc94 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":95:17)
#loc95 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":92:29)
#loc96 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":92:62)
#loc97 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":92:63)
#loc98 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":92:72)
#loc99 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":92:86)
#loc100 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":92:21)
#loc101 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":92:92)
#loc102 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":93:17)
#loc103 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":94:21)
#loc104 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":99:35)
#loc105 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":99:59)
#loc106 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":99:66)
#loc107 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":99:64)
#loc108 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":99:50)
#loc109 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":99:73)
#loc110 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":99:76)
#loc111 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":99:87)
#loc112 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":99:92)
#loc113 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":99:98)
#loc114 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":99:108)
#loc115 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":99:109)
#loc116 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":99:112)
#loc117 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":99:30)
#loc118 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":99:17)
#loc119 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":99:113)
#loc120 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":100:17)
#loc121 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":103:17)
#loc122 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":100:21)
#loc123 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":100:35)
#loc125 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":100:51)
#loc126 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":100:65)
#loc127 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":101:17)
#loc128 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":102:21)
#loc129 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":105:61)
#loc130 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":105:17)
#loc131 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":105:22)
#loc132 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":105:32)
#loc133 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":105:45)
#loc134 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":105:56)
#loc135 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":105:57)
#loc136 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":107:34)
#loc137 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":107:40)
#loc138 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":107:27)
#loc139 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":107:17)
#loc140 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":107:44)
#loc141 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":108:17)
#loc142 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":111:17)
#loc143 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":108:21)
#loc144 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":109:17)
#loc145 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":110:32)
#loc146 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":110:22)
#loc147 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":110:21)
#loc148 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":112:34)
#loc149 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":112:40)
#loc150 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":112:27)
#loc151 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":112:17)
#loc152 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":112:44)
#loc153 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":113:17)
#loc154 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":116:17)
#loc155 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":113:21)
#loc156 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":114:17)
#loc157 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":115:32)
#loc158 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":115:22)
#loc159 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":115:21)
#loc160 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":119:13)
#loc161 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":122:13)
#loc162 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":119:17)
#loc163 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":119:34)
#loc164 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":120:13)
#loc165 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":121:30)
#loc166 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":121:17)
#loc167 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":132:5)
#loc168 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":136:5)
#loc169 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":132:16)
#loc170 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":132:9)
#loc171 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":132:25)
#loc172 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":133:5)
#loc173 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":134:9)
#loc174 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":135:9)
#loc175 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":135:14)
#loc176 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":186:1)
#loc177 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":190:1)
#loc178 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":188:5)
#loc179 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":188:14)
#loc180 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":189:5)
#loc181 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":189:14)
#loc182 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":152:19)
#loc183 = loc("/usr/include/string.h":149:1)
#loc184 = loc("/usr/include/string.h":150:14)
#loc185 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":157:22)
#loc186 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":144:1)
#loc187 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":165:1)
#loc188 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":146:5)
#loc189 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":146:12)
#loc190 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":148:12)
#loc191 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":148:5)
#loc192 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":149:5)
#loc193 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":158:5)
#loc194 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":149:8)
#loc195 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":149:11)
#loc196 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":150:5)
#loc197 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":153:5)
#loc198 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":155:5)
#loc199 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":152:9)
#loc200 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":157:9)
#loc201 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":157:16)
#loc202 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":160:5)
#loc203 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":164:5)
#loc204 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":160:16)
#loc205 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":160:9)
#loc206 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":160:25)
#loc207 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":161:5)
#loc208 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":162:19)
#loc209 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":162:9)
#loc210 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":163:9)
#loc211 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":163:14)
#loc212 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":168:1)
#loc213 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":184:1)
#loc214 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":170:5)
#loc215 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":170:12)
#loc216 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":172:12)
#loc217 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":172:5)
#loc218 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":173:5)
#loc219 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":177:5)
#loc220 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":173:8)
#loc221 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":173:11)
#loc222 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":174:5)
#loc223 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":176:9)
#loc224 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":176:16)
#loc225 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":176:22)
#loc226 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":179:5)
#loc227 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":183:5)
#loc228 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":179:16)
#loc229 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":179:9)
#loc230 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":179:25)
#loc231 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":180:5)
#loc232 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":181:19)
#loc233 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":181:9)
#loc234 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":182:9)
#loc235 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_03.c":182:14)
#loc236 = loc(fused[#loc1, #loc2])
#loc237 = loc(fused[#loc3, #loc4])
#loc238 = loc(fused[#loc5, #loc6])
#loc239 = loc(fused[#loc7, #loc8])
#loc240 = loc(fused[#loc9, #loc10])
#loc241 = loc(fused[#loc11, #loc12])
#loc242 = loc(fused[#loc14, #loc15])
#loc243 = loc(fused[#loc16, #loc17])
#loc244 = loc(fused[#loc18, #loc19])
#loc245 = loc(fused[#loc20, #loc21])
#loc246 = loc(fused[#loc22, #loc23])
#loc247 = loc(fused[#loc24, #loc25])
#loc248 = loc(fused[#loc26, #loc27])
#loc249 = loc(fused[#loc29, #loc30])
#loc250 = loc(fused[#loc31, #loc32])
#loc251 = loc(fused[#loc33, #loc34])
#loc252 = loc(fused[#loc35, #loc36])
#loc253 = loc(fused[#loc37, #loc38])
#loc254 = loc(fused[#loc39, #loc40])
#loc255 = loc(fused[#loc41, #loc42])
#loc256 = loc(fused[#loc43, #loc44])
#loc257 = loc(fused[#loc46, #loc45])
#loc258 = loc(fused[#loc47, #loc48])
#loc259 = loc(fused[#loc49, #loc50])
#loc260 = loc(fused[#loc51, #loc48])
#loc261 = loc(fused[#loc52, #loc53])
#loc262 = loc(fused[#loc56, #loc57])
#loc263 = loc(fused[#loc59, #loc60])
#loc264 = loc(fused[#loc65, #loc66])
#loc265 = loc(fused[#loc67, #loc68])
#loc266 = loc(fused[#loc69, #loc70])
#loc267 = loc(fused[#loc71, #loc68])
#loc268 = loc(fused[#loc73, #loc74])
#loc269 = loc(fused[#loc76, #loc77])
#loc270 = loc(fused[#loc78, #loc79])
#loc271 = loc(fused[#loc82, #loc80])
#loc272 = loc(fused[#loc86, #loc87])
#loc273 = loc(fused[#loc91, #loc92])
#loc274 = loc(fused[#loc93, #loc94])
#loc275 = loc(fused[#loc96, #loc97])
#loc276 = loc(fused[#loc98, #loc99])
#loc277 = loc(fused[#loc100, #loc101])
#loc278 = loc(fused[#loc102, #loc94])
#loc279 = loc(fused[#loc108, #loc109])
#loc280 = loc(fused[#loc110, #loc111])
#loc281 = loc(fused[#loc112, #loc113])
#loc282 = loc(fused[#loc112, #loc114])
#loc283 = loc(fused[#loc110, #loc115])
#loc284 = loc(fused[#loc118, #loc119])
#loc285 = loc(fused[#loc120, #loc121])
#loc286 = loc(fused[#loc122, #loc123])
#loc287 = loc(fused[#loc125, #loc126])
#loc288 = loc(fused[#loc127, #loc121])
#loc289 = loc(fused[#loc133, #loc134])
#loc290 = loc(fused[#loc132, #loc134])
#loc291 = loc(fused[#loc131, #loc134])
#loc292 = loc(fused[#loc130, #loc129])
#loc293 = loc(fused[#loc139, #loc140])
#loc294 = loc(fused[#loc141, #loc142])
#loc295 = loc(fused[#loc144, #loc142])
#loc296 = loc(fused[#loc147, #loc145])
#loc297 = loc(fused[#loc151, #loc152])
#loc298 = loc(fused[#loc153, #loc154])
#loc299 = loc(fused[#loc156, #loc154])
#loc300 = loc(fused[#loc159, #loc157])
#loc301 = loc(fused[#loc160, #loc161])
#loc302 = loc(fused[#loc162, #loc163])
#loc303 = loc(fused[#loc164, #loc161])
#loc304 = loc(fused[#loc167, #loc168])
#loc305 = loc(fused[#loc170, #loc171])
#loc306 = loc(fused[#loc172, #loc168])
#loc307 = loc(fused[#loc176, #loc177])
#loc308 = loc(fused[#loc178, #loc179])
#loc309 = loc(fused[#loc180, #loc181])
#loc310 = loc(fused[#loc183, #loc184])
#loc311 = loc(fused[#loc186, #loc187])
#loc312 = loc(fused[#loc188, #loc189])
#loc313 = loc(fused[#loc191, #loc190])
#loc314 = loc(fused[#loc192, #loc193])
#loc315 = loc(fused[#loc194, #loc195])
#loc316 = loc(fused[#loc196, #loc197, #loc198, #loc193])
#loc317 = loc(fused[#loc202, #loc203])
#loc318 = loc(fused[#loc205, #loc206])
#loc319 = loc(fused[#loc207, #loc203])
#loc320 = loc(fused[#loc212, #loc213])
#loc321 = loc(fused[#loc214, #loc215])
#loc322 = loc(fused[#loc217, #loc216])
#loc323 = loc(fused[#loc218, #loc219])
#loc324 = loc(fused[#loc220, #loc221])
#loc325 = loc(fused[#loc222, #loc219])
#loc326 = loc(fused[#loc226, #loc227])
#loc327 = loc(fused[#loc229, #loc230])
#loc328 = loc(fused[#loc231, #loc227])
