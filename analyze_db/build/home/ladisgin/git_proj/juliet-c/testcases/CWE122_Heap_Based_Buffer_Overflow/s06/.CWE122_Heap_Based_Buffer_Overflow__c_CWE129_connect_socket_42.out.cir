!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":44:22)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":44:26)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":81:44)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":296:10)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":296:14)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":296:20)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":296:32)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":187:26)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":187:30)
#loc296 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":224:44)
#loc365 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":264:23)
#loc395 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":144:26)
#loc396 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":144:30)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc482 = loc(fused[#loc18, #loc19])
#loc555 = loc(fused[#loc208, #loc209])
#loc556 = loc(fused[#loc210, #loc211])
#loc561 = loc(fused[#loc228, #loc229])
#loc625 = loc(fused[#loc395, #loc396])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc474)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc475)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc476)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc477)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc478)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc479)
  cir.func private @close(!s32i) -> !s32i loc(#loc480)
  cir.func internal private @badSource(%arg0: !s32i loc(fused[#loc18, #loc19])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc483)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc484)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc485)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc486)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc482)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc17)
    cir.store %arg0, %4 : !s32i, !cir.ptr<!s32i> loc(#loc28)
    cir.br ^bb1 loc(#loc487)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc25)
    cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc485)
    cir.br ^bb2 loc(#loc488)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc488)
  ^bb3:  // pred: ^bb24
    %8 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc33)
    cir.brcond %9 ^bb4, ^bb25 loc(#loc33)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %10 = cir.const #cir.int<2> : !s32i loc(#loc34)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %12 = cir.const #cir.int<6> : !s32i loc(#loc36)
    %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc37)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc489)
    cir.br ^bb5 loc(#loc490)
  ^bb5:  // pred: ^bb4
    %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc42)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc43)
    %17 = cir.cmp(eq, %14, %16) : !s32i, !cir.bool loc(#loc491)
    cir.brcond %17 ^bb6, ^bb7 loc(#loc492)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc45)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc41)
  ^bb8:  // pred: ^bb7
    %18 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc493)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc48)
    %20 = cir.const #cir.int<16> : !u64i loc(#loc494)
    cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc495)
    %21 = cir.const #cir.int<2> : !s32i loc(#loc53)
    %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc53)
    %23 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc54)
    cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc496)
    %24 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %26 = cir.call @inet_addr(%25) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc56)
    %27 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc57)
    %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc58)
    cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc497)
    %29 = cir.const #cir.int<27015> : !s32i loc(#loc61)
    %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc61)
    %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc62)
    %32 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc63)
    cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc498)
    cir.br ^bb9 loc(#loc499)
  ^bb9:  // pred: ^bb8
    %33 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc68)
    %34 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc500)
    %35 = cir.const #cir.int<16> : !u64i loc(#loc501)
    %36 = cir.cast(integral, %35 : !u64i), !u32i loc(#loc501)
    %37 = cir.call @connect(%33, %34, %36) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc73)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc74)
    %39 = cir.unary(minus, %38) : !s32i, !s32i loc(#loc74)
    %40 = cir.cmp(eq, %37, %39) : !s32i, !cir.bool loc(#loc502)
    cir.brcond %40 ^bb10, ^bb11 loc(#loc503)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc76)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc67)
  ^bb12:  // pred: ^bb11
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc77)
    %42 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc78)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc78)
    %44 = cir.const #cir.int<3> : !s32i loc(#loc79)
    %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc79)
    %46 = cir.const #cir.int<4> : !u64i loc(#loc79)
    %47 = cir.binop(mul, %45, %46) : !u64i loc(#loc79)
    %48 = cir.const #cir.int<2> : !s32i loc(#loc79)
    %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc79)
    %50 = cir.binop(add, %47, %49) : !u64i loc(#loc79)
    %51 = cir.const #cir.int<1> : !s32i loc(#loc80)
    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc80)
    %53 = cir.binop(sub, %50, %52) : !u64i loc(#loc504)
    %54 = cir.const #cir.int<0> : !s32i loc(#loc81)
    %55 = cir.call @recv(%41, %43, %53, %54) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc82)
    %56 = cir.cast(integral, %55 : !s64i), !s32i loc(#loc82)
    cir.store %56, %0 : !s32i, !cir.ptr<!s32i> loc(#loc505)
    cir.br ^bb13 loc(#loc506)
  ^bb13:  // pred: ^bb12
    %57 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc87)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc88)
    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc507)
    cir.brcond %60 ^bb14, ^bb15 loc(#loc89)
  ^bb14:  // pred: ^bb13
    %61 = cir.const #true loc(#loc89)
    cir.br ^bb20(%61 : !cir.bool) loc(#loc89)
  ^bb15:  // pred: ^bb13
    %62 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    %63 = cir.const #cir.int<0> : !s32i loc(#loc91)
    %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc508)
    cir.brcond %64 ^bb16, ^bb17 loc(#loc89)
  ^bb16:  // pred: ^bb15
    %65 = cir.const #true loc(#loc89)
    cir.br ^bb18(%65 : !cir.bool) loc(#loc89)
  ^bb17:  // pred: ^bb15
    %66 = cir.const #false loc(#loc89)
    cir.br ^bb18(%66 : !cir.bool) loc(#loc89)
  ^bb18(%67: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":81:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc89)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%67 : !cir.bool) loc(#loc89)
  ^bb20(%68: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":81:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc89)
  ^bb21:  // pred: ^bb20
    cir.brcond %68 ^bb22, ^bb23 loc(#loc509)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc93)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc86)
  ^bb24:  // pred: ^bb23
    %69 = cir.const #cir.int<0> : !s32i loc(#loc94)
    %70 = cir.cast(integral, %69 : !s32i), !s8i loc(#loc94)
    %71 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %72 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc96)
    %73 = cir.ptr_stride(%72 : !cir.ptr<!s8i>, %71 : !s32i), !cir.ptr<!s8i> loc(#loc96)
    cir.store %70, %73 : !s8i, !cir.ptr<!s8i> loc(#loc510)
    %74 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc97)
    %75 = cir.call @atoi(%74) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc98)
    cir.store %75, %4 : !s32i, !cir.ptr<!s32i> loc(#loc511)
    cir.br ^bb3 loc(#loc32)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc32)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc512)
  ^bb27:  // pred: ^bb26
    %76 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %77 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc104)
    %79 = cir.cmp(ne, %76, %78) : !s32i, !cir.bool loc(#loc513)
    cir.brcond %79 ^bb28, ^bb29 loc(#loc514)
  ^bb28:  // pred: ^bb27
    %80 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    %81 = cir.call @close(%80) : (!s32i) -> !s32i loc(#loc107)
    cir.br ^bb29 loc(#loc102)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc102)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc30)
  ^bb31:  // pred: ^bb30
    %82 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc108)
    cir.store %82, %5 : !s32i, !cir.ptr<!s32i> loc(#loc515)
    %83 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc515)
    cir.return %83 : !s32i loc(#loc515)
  } loc(#loc481)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc516)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc517)
  cir.func private @printIntLine(!s32i) loc(#loc518)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc519)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc118)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc520)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc522)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc523)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc524)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc129)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc130)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc525)
    %5 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    %6 = cir.call @badSource(%5) : (!s32i) -> !s32i loc(#loc133)
    cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc526)
    cir.br ^bb1 loc(#loc527)
  ^bb1:  // pred: ^bb0
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc138)
    %8 = cir.const #cir.int<10> : !s32i loc(#loc139)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc139)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc528)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc529)
    %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc138)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc530)
    cir.store %13, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc523)
    cir.br ^bb2 loc(#loc531)
  ^bb2:  // pred: ^bb1
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc144)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc145)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc145)
    %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s32i>, !cir.bool loc(#loc532)
    cir.brcond %17 ^bb3, ^bb4 loc(#loc533)
  ^bb3:  // pred: ^bb2
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc147)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc148)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc149)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc147)
    cir.br ^bb4 loc(#loc143)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc143)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc534)
  ^bb6:  // pred: ^bb5
    %21 = cir.const #cir.int<0> : !s32i loc(#loc152)
    cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc535)
    cir.br ^bb7 loc(#loc534)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc154)
    %23 = cir.const #cir.int<10> : !s32i loc(#loc155)
    %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc536)
    cir.brcond %24 ^bb8, ^bb12 loc(#loc156)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc537)
  ^bb9:  // pred: ^bb8
    %25 = cir.const #cir.int<0> : !s32i loc(#loc158)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc159)
    %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc160)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !s32i), !cir.ptr<!s32i> loc(#loc161)
    cir.store %25, %28 : !s32i, !cir.ptr<!s32i> loc(#loc538)
    cir.br ^bb10 loc(#loc151)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc151)
  ^bb11:  // pred: ^bb10
    %29 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    %30 = cir.unary(inc, %29) : !s32i, !s32i loc(#loc163)
    cir.store %30, %0 : !s32i, !cir.ptr<!s32i> loc(#loc539)
    cir.br ^bb7 loc(#loc534)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc151)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc540)
  ^bb14:  // pred: ^bb13
    %31 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc167)
    %33 = cir.cmp(ge, %31, %32) : !s32i, !cir.bool loc(#loc541)
    cir.brcond %33 ^bb15, ^bb24 loc(#loc542)
  ^bb15:  // pred: ^bb14
    %34 = cir.const #cir.int<1> : !s32i loc(#loc171)
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc172)
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc173)
    %37 = cir.ptr_stride(%35 : !cir.ptr<!s32i>, %36 : !s32i), !cir.ptr<!s32i> loc(#loc174)
    cir.store %34, %37 : !s32i, !cir.ptr<!s32i> loc(#loc543)
    cir.br ^bb16 loc(#loc544)
  ^bb16:  // pred: ^bb15
    %38 = cir.const #cir.int<0> : !s32i loc(#loc177)
    cir.store %38, %0 : !s32i, !cir.ptr<!s32i> loc(#loc545)
    cir.br ^bb17 loc(#loc544)
  ^bb17:  // 2 preds: ^bb16, ^bb21
    %39 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc179)
    %40 = cir.const #cir.int<10> : !s32i loc(#loc180)
    %41 = cir.cmp(lt, %39, %40) : !s32i, !cir.bool loc(#loc546)
    cir.brcond %41 ^bb18, ^bb22 loc(#loc181)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc547)
  ^bb19:  // pred: ^bb18
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc183)
    %43 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc184)
    %44 = cir.ptr_stride(%42 : !cir.ptr<!s32i>, %43 : !s32i), !cir.ptr<!s32i> loc(#loc185)
    %45 = cir.load %44 : !cir.ptr<!s32i>, !s32i loc(#loc183)
    cir.call @printIntLine(%45) : (!s32i) -> () loc(#loc186)
    cir.br ^bb20 loc(#loc176)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc176)
  ^bb21:  // pred: ^bb20
    %46 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc187)
    %47 = cir.unary(inc, %46) : !s32i, !s32i loc(#loc188)
    cir.store %47, %0 : !s32i, !cir.ptr<!s32i> loc(#loc548)
    cir.br ^bb17 loc(#loc544)
  ^bb22:  // pred: ^bb17
    cir.br ^bb23 loc(#loc176)
  ^bb23:  // pred: ^bb22
    cir.br ^bb25 loc(#loc169)
  ^bb24:  // pred: ^bb14
    %48 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc118)
    %49 = cir.cast(array_to_ptrdecay, %48 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc118)
    cir.call @printLine(%49) : (!cir.ptr<!s8i>) -> () loc(#loc189)
    cir.br ^bb25 loc(#loc165)
  ^bb25:  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc165)
  ^bb26:  // pred: ^bb25
    %50 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc190)
    %51 = cir.cast(bitcast, %50 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc190)
    cir.call @free(%51) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc191)
    cir.br ^bb27 loc(#loc137)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc122)
  } loc(#loc521)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc550)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc194)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc551)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc196)
    cir.return loc(#loc193)
  } loc(#loc549)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc552)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc553)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc202)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc203)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc204)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc205)
  cir.func @main(%arg0: !s32i loc(fused[#loc208, #loc209]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc210, #loc211])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc555)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc556)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc207)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc212)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc212)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc213)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc214)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc214)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc215)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc202)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc202)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc216)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42_good : !cir.ptr<!cir.func<!void ()>> loc(#loc557)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42_good() : () -> () loc(#loc217)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc203)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc203)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc219)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc204)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc204)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc220)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc558)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42_bad() : () -> () loc(#loc221)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc205)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc205)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc223)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc224)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc559)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc559)
    cir.return %17 : !s32i loc(#loc559)
  } loc(#loc554)
  cir.func internal private @goodB2GSource(%arg0: !s32i loc(fused[#loc228, #loc229])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc562)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc563)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc564)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc565)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc561)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc227)
    cir.store %arg0, %4 : !s32i, !cir.ptr<!s32i> loc(#loc238)
    cir.br ^bb1 loc(#loc566)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<1> : !s32i loc(#loc235)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc235)
    cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc564)
    cir.br ^bb2 loc(#loc567)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc567)
  ^bb3:  // pred: ^bb24
    %8 = cir.const #cir.int<0> : !s32i loc(#loc243)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc243)
    cir.brcond %9 ^bb4, ^bb25 loc(#loc243)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %10 = cir.const #cir.int<2> : !s32i loc(#loc244)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc245)
    %12 = cir.const #cir.int<6> : !s32i loc(#loc246)
    %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc247)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc568)
    cir.br ^bb5 loc(#loc569)
  ^bb5:  // pred: ^bb4
    %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc252)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc253)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc253)
    %17 = cir.cmp(eq, %14, %16) : !s32i, !cir.bool loc(#loc570)
    cir.brcond %17 ^bb6, ^bb7 loc(#loc571)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc255)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc251)
  ^bb8:  // pred: ^bb7
    %18 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc572)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc258)
    %20 = cir.const #cir.int<16> : !u64i loc(#loc573)
    cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc574)
    %21 = cir.const #cir.int<2> : !s32i loc(#loc263)
    %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc263)
    %23 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc54)
    cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc575)
    %24 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc265)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc265)
    %26 = cir.call @inet_addr(%25) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc266)
    %27 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc57)
    %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc58)
    cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc576)
    %29 = cir.const #cir.int<27015> : !s32i loc(#loc269)
    %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc269)
    %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc270)
    %32 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc63)
    cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc577)
    cir.br ^bb9 loc(#loc578)
  ^bb9:  // pred: ^bb8
    %33 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc275)
    %34 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc579)
    %35 = cir.const #cir.int<16> : !u64i loc(#loc580)
    %36 = cir.cast(integral, %35 : !u64i), !u32i loc(#loc580)
    %37 = cir.call @connect(%33, %34, %36) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc280)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc281)
    %39 = cir.unary(minus, %38) : !s32i, !s32i loc(#loc281)
    %40 = cir.cmp(eq, %37, %39) : !s32i, !cir.bool loc(#loc581)
    cir.brcond %40 ^bb10, ^bb11 loc(#loc582)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc283)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc274)
  ^bb12:  // pred: ^bb11
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc284)
    %42 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc285)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc285)
    %44 = cir.const #cir.int<3> : !s32i loc(#loc286)
    %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc286)
    %46 = cir.const #cir.int<4> : !u64i loc(#loc286)
    %47 = cir.binop(mul, %45, %46) : !u64i loc(#loc286)
    %48 = cir.const #cir.int<2> : !s32i loc(#loc286)
    %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc286)
    %50 = cir.binop(add, %47, %49) : !u64i loc(#loc286)
    %51 = cir.const #cir.int<1> : !s32i loc(#loc287)
    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc287)
    %53 = cir.binop(sub, %50, %52) : !u64i loc(#loc583)
    %54 = cir.const #cir.int<0> : !s32i loc(#loc288)
    %55 = cir.call @recv(%41, %43, %53, %54) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc289)
    %56 = cir.cast(integral, %55 : !s64i), !s32i loc(#loc289)
    cir.store %56, %0 : !s32i, !cir.ptr<!s32i> loc(#loc584)
    cir.br ^bb13 loc(#loc585)
  ^bb13:  // pred: ^bb12
    %57 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc294)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc295)
    %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc295)
    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc586)
    cir.brcond %60 ^bb14, ^bb15 loc(#loc296)
  ^bb14:  // pred: ^bb13
    %61 = cir.const #true loc(#loc296)
    cir.br ^bb20(%61 : !cir.bool) loc(#loc296)
  ^bb15:  // pred: ^bb13
    %62 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc297)
    %63 = cir.const #cir.int<0> : !s32i loc(#loc298)
    %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc587)
    cir.brcond %64 ^bb16, ^bb17 loc(#loc296)
  ^bb16:  // pred: ^bb15
    %65 = cir.const #true loc(#loc296)
    cir.br ^bb18(%65 : !cir.bool) loc(#loc296)
  ^bb17:  // pred: ^bb15
    %66 = cir.const #false loc(#loc296)
    cir.br ^bb18(%66 : !cir.bool) loc(#loc296)
  ^bb18(%67: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":224:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc296)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%67 : !cir.bool) loc(#loc296)
  ^bb20(%68: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":224:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc296)
  ^bb21:  // pred: ^bb20
    cir.brcond %68 ^bb22, ^bb23 loc(#loc588)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc300)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc293)
  ^bb24:  // pred: ^bb23
    %69 = cir.const #cir.int<0> : !s32i loc(#loc301)
    %70 = cir.cast(integral, %69 : !s32i), !s8i loc(#loc301)
    %71 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc302)
    %72 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc303)
    %73 = cir.ptr_stride(%72 : !cir.ptr<!s8i>, %71 : !s32i), !cir.ptr<!s8i> loc(#loc303)
    cir.store %70, %73 : !s8i, !cir.ptr<!s8i> loc(#loc589)
    %74 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc304)
    %75 = cir.call @atoi(%74) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc305)
    cir.store %75, %4 : !s32i, !cir.ptr<!s32i> loc(#loc590)
    cir.br ^bb3 loc(#loc242)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc242)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc591)
  ^bb27:  // pred: ^bb26
    %76 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc310)
    %77 = cir.const #cir.int<1> : !s32i loc(#loc311)
    %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc311)
    %79 = cir.cmp(ne, %76, %78) : !s32i, !cir.bool loc(#loc592)
    cir.brcond %79 ^bb28, ^bb29 loc(#loc593)
  ^bb28:  // pred: ^bb27
    %80 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc313)
    %81 = cir.call @close(%80) : (!s32i) -> !s32i loc(#loc314)
    cir.br ^bb29 loc(#loc309)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc309)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc240)
  ^bb31:  // pred: ^bb30
    %82 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc315)
    cir.store %82, %5 : !s32i, !cir.ptr<!s32i> loc(#loc594)
    %83 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc594)
    cir.return %83 : !s32i loc(#loc594)
  } loc(#loc560)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc317)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc596)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc597)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc598)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc326)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc327)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc599)
    %5 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc329)
    %6 = cir.call @goodB2GSource(%5) : (!s32i) -> !s32i loc(#loc330)
    cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc600)
    cir.br ^bb1 loc(#loc601)
  ^bb1:  // pred: ^bb0
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc335)
    %8 = cir.const #cir.int<10> : !s32i loc(#loc336)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc336)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc602)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc603)
    %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc335)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc604)
    cir.store %13, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc597)
    cir.br ^bb2 loc(#loc605)
  ^bb2:  // pred: ^bb1
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc341)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc342)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc342)
    %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s32i>, !cir.bool loc(#loc606)
    cir.brcond %17 ^bb3, ^bb4 loc(#loc607)
  ^bb3:  // pred: ^bb2
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc344)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc345)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc346)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc344)
    cir.br ^bb4 loc(#loc340)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc340)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc608)
  ^bb6:  // pred: ^bb5
    %21 = cir.const #cir.int<0> : !s32i loc(#loc349)
    cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc609)
    cir.br ^bb7 loc(#loc608)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc351)
    %23 = cir.const #cir.int<10> : !s32i loc(#loc352)
    %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc610)
    cir.brcond %24 ^bb8, ^bb12 loc(#loc353)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc611)
  ^bb9:  // pred: ^bb8
    %25 = cir.const #cir.int<0> : !s32i loc(#loc355)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc356)
    %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc357)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !s32i), !cir.ptr<!s32i> loc(#loc358)
    cir.store %25, %28 : !s32i, !cir.ptr<!s32i> loc(#loc612)
    cir.br ^bb10 loc(#loc348)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc348)
  ^bb11:  // pred: ^bb10
    %29 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc359)
    %30 = cir.unary(inc, %29) : !s32i, !s32i loc(#loc360)
    cir.store %30, %0 : !s32i, !cir.ptr<!s32i> loc(#loc613)
    cir.br ^bb7 loc(#loc608)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc348)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc614)
  ^bb14:  // pred: ^bb13
    %31 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc363)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc364)
    %33 = cir.cmp(ge, %31, %32) : !s32i, !cir.bool loc(#loc615)
    cir.brcond %33 ^bb15, ^bb20 loc(#loc365)
  ^bb15:  // pred: ^bb14
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc366)
    %35 = cir.const #cir.int<10> : !s32i loc(#loc367)
    %36 = cir.cmp(lt, %34, %35) : !s32i, !cir.bool loc(#loc616)
    cir.brcond %36 ^bb16, ^bb17 loc(#loc365)
  ^bb16:  // pred: ^bb15
    %37 = cir.const #true loc(#loc365)
    cir.br ^bb18(%37 : !cir.bool) loc(#loc365)
  ^bb17:  // pred: ^bb15
    %38 = cir.const #false loc(#loc365)
    cir.br ^bb18(%38 : !cir.bool) loc(#loc365)
  ^bb18(%39: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":264:23)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc365)
  ^bb19:  // pred: ^bb18
    cir.br ^bb21(%39 : !cir.bool) loc(#loc365)
  ^bb20:  // pred: ^bb14
    %40 = cir.const #false loc(#loc365)
    cir.br ^bb21(%40 : !cir.bool) loc(#loc365)
  ^bb21(%41: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":264:23)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc365)
  ^bb22:  // pred: ^bb21
    cir.brcond %41 ^bb23, ^bb32 loc(#loc617)
  ^bb23:  // pred: ^bb22
    %42 = cir.const #cir.int<1> : !s32i loc(#loc372)
    %43 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc373)
    %44 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc374)
    %45 = cir.ptr_stride(%43 : !cir.ptr<!s32i>, %44 : !s32i), !cir.ptr<!s32i> loc(#loc375)
    cir.store %42, %45 : !s32i, !cir.ptr<!s32i> loc(#loc618)
    cir.br ^bb24 loc(#loc619)
  ^bb24:  // pred: ^bb23
    %46 = cir.const #cir.int<0> : !s32i loc(#loc378)
    cir.store %46, %0 : !s32i, !cir.ptr<!s32i> loc(#loc620)
    cir.br ^bb25 loc(#loc619)
  ^bb25:  // 2 preds: ^bb24, ^bb29
    %47 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc380)
    %48 = cir.const #cir.int<10> : !s32i loc(#loc381)
    %49 = cir.cmp(lt, %47, %48) : !s32i, !cir.bool loc(#loc621)
    cir.brcond %49 ^bb26, ^bb30 loc(#loc382)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc622)
  ^bb27:  // pred: ^bb26
    %50 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc384)
    %51 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc385)
    %52 = cir.ptr_stride(%50 : !cir.ptr<!s32i>, %51 : !s32i), !cir.ptr<!s32i> loc(#loc386)
    %53 = cir.load %52 : !cir.ptr<!s32i>, !s32i loc(#loc384)
    cir.call @printIntLine(%53) : (!s32i) -> () loc(#loc387)
    cir.br ^bb28 loc(#loc377)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc377)
  ^bb29:  // pred: ^bb28
    %54 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc388)
    %55 = cir.unary(inc, %54) : !s32i, !s32i loc(#loc389)
    cir.store %55, %0 : !s32i, !cir.ptr<!s32i> loc(#loc623)
    cir.br ^bb25 loc(#loc619)
  ^bb30:  // pred: ^bb25
    cir.br ^bb31 loc(#loc377)
  ^bb31:  // pred: ^bb30
    cir.br ^bb33 loc(#loc370)
  ^bb32:  // pred: ^bb22
    %56 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc317)
    %57 = cir.cast(array_to_ptrdecay, %56 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc317)
    cir.call @printLine(%57) : (!cir.ptr<!s8i>) -> () loc(#loc390)
    cir.br ^bb33 loc(#loc362)
  ^bb33:  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc362)
  ^bb34:  // pred: ^bb33
    %58 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc391)
    %59 = cir.cast(bitcast, %58 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc391)
    cir.call @free(%59) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc392)
    cir.br ^bb35 loc(#loc334)
  ^bb35:  // pred: ^bb34
    cir.return loc(#loc319)
  } loc(#loc595)
  cir.func internal private @goodG2BSource(%arg0: !s32i loc(fused[#loc395, #loc396])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc625)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc394)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc397)
    %2 = cir.const #cir.int<7> : !s32i loc(#loc398)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc626)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc400)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc627)
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc627)
    cir.return %4 : !s32i loc(#loc627)
  } loc(#loc624)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc629)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc630)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc631)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc410)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc411)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc632)
    %5 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc413)
    %6 = cir.call @goodG2BSource(%5) : (!s32i) -> !s32i loc(#loc414)
    cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc633)
    cir.br ^bb1 loc(#loc634)
  ^bb1:  // pred: ^bb0
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc419)
    %8 = cir.const #cir.int<10> : !s32i loc(#loc420)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc420)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc635)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc636)
    %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc419)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc637)
    cir.store %13, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc630)
    cir.br ^bb2 loc(#loc638)
  ^bb2:  // pred: ^bb1
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc425)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc426)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc426)
    %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s32i>, !cir.bool loc(#loc639)
    cir.brcond %17 ^bb3, ^bb4 loc(#loc640)
  ^bb3:  // pred: ^bb2
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc428)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc429)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc430)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc428)
    cir.br ^bb4 loc(#loc424)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc424)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc641)
  ^bb6:  // pred: ^bb5
    %21 = cir.const #cir.int<0> : !s32i loc(#loc433)
    cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc642)
    cir.br ^bb7 loc(#loc641)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc435)
    %23 = cir.const #cir.int<10> : !s32i loc(#loc436)
    %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc643)
    cir.brcond %24 ^bb8, ^bb12 loc(#loc437)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc644)
  ^bb9:  // pred: ^bb8
    %25 = cir.const #cir.int<0> : !s32i loc(#loc439)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc440)
    %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc441)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !s32i), !cir.ptr<!s32i> loc(#loc442)
    cir.store %25, %28 : !s32i, !cir.ptr<!s32i> loc(#loc645)
    cir.br ^bb10 loc(#loc432)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc432)
  ^bb11:  // pred: ^bb10
    %29 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc443)
    %30 = cir.unary(inc, %29) : !s32i, !s32i loc(#loc444)
    cir.store %30, %0 : !s32i, !cir.ptr<!s32i> loc(#loc646)
    cir.br ^bb7 loc(#loc641)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc432)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc647)
  ^bb14:  // pred: ^bb13
    %31 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc447)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc448)
    %33 = cir.cmp(ge, %31, %32) : !s32i, !cir.bool loc(#loc648)
    cir.brcond %33 ^bb15, ^bb24 loc(#loc649)
  ^bb15:  // pred: ^bb14
    %34 = cir.const #cir.int<1> : !s32i loc(#loc452)
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc453)
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc454)
    %37 = cir.ptr_stride(%35 : !cir.ptr<!s32i>, %36 : !s32i), !cir.ptr<!s32i> loc(#loc455)
    cir.store %34, %37 : !s32i, !cir.ptr<!s32i> loc(#loc650)
    cir.br ^bb16 loc(#loc651)
  ^bb16:  // pred: ^bb15
    %38 = cir.const #cir.int<0> : !s32i loc(#loc458)
    cir.store %38, %0 : !s32i, !cir.ptr<!s32i> loc(#loc652)
    cir.br ^bb17 loc(#loc651)
  ^bb17:  // 2 preds: ^bb16, ^bb21
    %39 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc460)
    %40 = cir.const #cir.int<10> : !s32i loc(#loc461)
    %41 = cir.cmp(lt, %39, %40) : !s32i, !cir.bool loc(#loc653)
    cir.brcond %41 ^bb18, ^bb22 loc(#loc462)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc654)
  ^bb19:  // pred: ^bb18
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc464)
    %43 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc465)
    %44 = cir.ptr_stride(%42 : !cir.ptr<!s32i>, %43 : !s32i), !cir.ptr<!s32i> loc(#loc466)
    %45 = cir.load %44 : !cir.ptr<!s32i>, !s32i loc(#loc464)
    cir.call @printIntLine(%45) : (!s32i) -> () loc(#loc467)
    cir.br ^bb20 loc(#loc457)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc457)
  ^bb21:  // pred: ^bb20
    %46 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc468)
    %47 = cir.unary(inc, %46) : !s32i, !s32i loc(#loc469)
    cir.store %47, %0 : !s32i, !cir.ptr<!s32i> loc(#loc655)
    cir.br ^bb17 loc(#loc651)
  ^bb22:  // pred: ^bb17
    cir.br ^bb23 loc(#loc457)
  ^bb23:  // pred: ^bb22
    cir.br ^bb25 loc(#loc450)
  ^bb24:  // pred: ^bb14
    %48 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc470)
    %49 = cir.cast(array_to_ptrdecay, %48 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc470)
    cir.call @printLine(%49) : (!cir.ptr<!s8i>) -> () loc(#loc471)
    cir.br ^bb25 loc(#loc446)
  ^bb25:  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc446)
  ^bb26:  // pred: ^bb25
    %50 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc472)
    %51 = cir.cast(bitcast, %50 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc472)
    cir.call @free(%51) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc473)
    cir.br ^bb27 loc(#loc418)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc403)
  } loc(#loc628)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":72:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":44:1)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":103:1)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":51:9)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":51:13)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":52:9)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":52:28)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":53:9)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":53:32)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":54:9)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":54:41)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":45:1)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":46:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":101:5)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":55:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":90:17)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":90:16)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":65:36)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":65:45)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":65:58)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":65:29)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":65:13)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":65:69)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":66:13)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":69:13)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":66:17)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":66:34)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":67:13)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":68:17)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":70:20)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":70:21)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":70:30)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":70:33)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":70:47)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":70:13)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":70:48)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":71:34)
#loc54 = loc("/usr/include/netinet/in.h":249:5)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":71:13)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":72:39)
#loc57 = loc("/usr/include/netinet/in.h":251:20)
#loc58 = loc("/usr/include/netinet/in.h":33:15)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":72:13)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":72:59)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":73:38)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":73:32)
#loc63 = loc("/usr/include/netinet/in.h":250:15)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":73:13)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":73:46)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":74:13)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":77:13)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":74:25)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":74:58)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":74:59)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":74:68)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":74:82)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":74:17)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":74:88)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":75:13)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":76:17)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":80:31)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":80:46)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":80:59)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":80:77)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":80:80)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":80:26)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":80:13)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":80:81)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":81:13)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":84:13)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":81:17)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":81:31)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":81:47)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":81:61)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":82:13)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":83:17)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":86:39)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":86:25)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":86:13)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":88:25)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":88:20)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":88:13)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":88:36)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":91:9)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":94:9)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":91:13)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":91:30)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":92:9)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":93:26)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":93:13)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":102:12)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":102:5)
#loc110 = loc("/usr/include/stdlib.h":672:1)
#loc111 = loc("/usr/include/stdlib.h":672:45)
#loc112 = loc("/usr/include/stdlib.h":756:1)
#loc113 = loc("/usr/include/stdlib.h":756:70)
#loc114 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc115 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc116 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc117 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":133:23)
#loc119 = loc("/usr/include/stdlib.h":687:1)
#loc120 = loc("/usr/include/stdlib.h":687:32)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":105:1)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":137:1)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":112:9)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":112:13)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":113:9)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":113:54)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":107:5)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":107:9)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":109:13)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":109:12)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":109:5)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":110:22)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":110:12)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":110:5)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":110:26)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":111:5)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":136:5)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":113:31)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":113:38)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":113:43)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":113:53)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":114:9)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":114:39)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":114:13)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":114:23)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":114:29)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":114:30)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":114:36)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":114:35)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":116:9)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":119:9)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":116:18)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":116:14)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":116:21)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":116:25)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":116:23)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":117:9)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":118:25)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":118:13)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":118:20)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":118:21)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":116:30)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":116:29)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":122:9)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":134:9)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":122:13)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":122:21)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":123:9)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":130:9)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":132:9)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":124:28)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":124:13)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":124:20)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":124:24)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":126:13)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":129:13)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":126:21)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":126:17)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":126:24)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":126:28)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":126:26)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":127:13)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":128:30)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":128:37)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":128:38)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":128:17)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":126:33)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":126:32)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":133:13)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":135:14)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":135:9)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":281:1)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":285:1)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":283:5)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":283:13)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":284:5)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":284:13)
#loc198 = loc("/usr/include/stdlib.h":575:1)
#loc199 = loc("/usr/include/stdlib.h":575:41)
#loc200 = loc("/usr/include/time.h":76:1)
#loc201 = loc("/usr/include/time.h":76:38)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":301:15)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":303:15)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":306:15)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":308:15)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":296:1)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":311:1)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":297:1)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":299:27)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":299:22)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":299:5)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":301:5)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":302:5)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":302:72)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":303:5)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":306:5)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":307:5)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":307:71)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":308:5)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":310:12)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":310:5)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":187:1)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":246:1)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":194:9)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":194:13)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":195:9)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":195:28)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":196:9)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":196:32)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":197:9)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":197:41)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":188:1)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":189:5)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":244:5)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":198:9)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":233:17)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":233:16)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":208:36)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":208:45)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":208:58)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":208:29)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":208:13)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":208:69)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":209:13)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":212:13)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":209:17)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":209:34)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":210:13)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":211:17)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":213:20)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":213:21)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":213:30)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":213:33)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":213:47)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":213:13)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":213:48)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":214:34)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":214:13)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":215:49)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":215:39)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":215:13)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":215:59)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":216:38)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":216:32)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":216:13)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":216:46)
#loc273 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":217:13)
#loc274 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":220:13)
#loc275 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":217:25)
#loc276 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":217:58)
#loc277 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":217:59)
#loc278 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":217:68)
#loc279 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":217:82)
#loc280 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":217:17)
#loc281 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":217:88)
#loc282 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":218:13)
#loc283 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":219:17)
#loc284 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":223:31)
#loc285 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":223:46)
#loc286 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":223:59)
#loc287 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":223:77)
#loc288 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":223:80)
#loc289 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":223:26)
#loc290 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":223:13)
#loc291 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":223:81)
#loc292 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":224:13)
#loc293 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":227:13)
#loc294 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":224:17)
#loc295 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":224:31)
#loc297 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":224:47)
#loc298 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":224:61)
#loc299 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":225:13)
#loc300 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":226:17)
#loc301 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":229:39)
#loc302 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":229:25)
#loc303 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":229:13)
#loc304 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":231:25)
#loc305 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":231:20)
#loc306 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":231:13)
#loc307 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":231:36)
#loc308 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":234:9)
#loc309 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":237:9)
#loc310 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":234:13)
#loc311 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":234:30)
#loc312 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":235:9)
#loc313 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":236:26)
#loc314 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":236:13)
#loc315 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":245:12)
#loc316 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":245:5)
#loc317 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":275:23)
#loc318 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":248:1)
#loc319 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":279:1)
#loc320 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":255:9)
#loc321 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":255:13)
#loc322 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":256:9)
#loc323 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":256:54)
#loc324 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":250:5)
#loc325 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":250:9)
#loc326 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":252:13)
#loc327 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":252:12)
#loc328 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":252:5)
#loc329 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":253:26)
#loc330 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":253:12)
#loc331 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":253:5)
#loc332 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":253:30)
#loc333 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":254:5)
#loc334 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":278:5)
#loc335 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":256:31)
#loc336 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":256:38)
#loc337 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":256:43)
#loc338 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":256:53)
#loc339 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":257:9)
#loc340 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":257:39)
#loc341 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":257:13)
#loc342 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":257:23)
#loc343 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":257:29)
#loc344 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":257:30)
#loc345 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":257:36)
#loc346 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":257:35)
#loc347 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":259:9)
#loc348 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":262:9)
#loc349 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":259:18)
#loc350 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":259:14)
#loc351 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":259:21)
#loc352 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":259:25)
#loc353 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":259:23)
#loc354 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":260:9)
#loc355 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":261:25)
#loc356 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":261:13)
#loc357 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":261:20)
#loc358 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":261:21)
#loc359 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":259:30)
#loc360 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":259:29)
#loc361 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":264:9)
#loc362 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":276:9)
#loc363 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":264:13)
#loc364 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":264:21)
#loc366 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":264:26)
#loc367 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":264:34)
#loc368 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":264:36)
#loc369 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":265:9)
#loc370 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":272:9)
#loc371 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":274:9)
#loc372 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":266:28)
#loc373 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":266:13)
#loc374 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":266:20)
#loc375 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":266:24)
#loc376 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":268:13)
#loc377 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":271:13)
#loc378 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":268:21)
#loc379 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":268:17)
#loc380 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":268:24)
#loc381 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":268:28)
#loc382 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":268:26)
#loc383 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":269:13)
#loc384 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":270:30)
#loc385 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":270:37)
#loc386 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":270:38)
#loc387 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":270:17)
#loc388 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":268:33)
#loc389 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":268:32)
#loc390 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":275:13)
#loc391 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":277:14)
#loc392 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":277:9)
#loc393 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":144:1)
#loc394 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":150:1)
#loc397 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":145:1)
#loc398 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":148:12)
#loc399 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":148:5)
#loc400 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":149:12)
#loc401 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":149:5)
#loc402 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":152:1)
#loc403 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":184:1)
#loc404 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":159:9)
#loc405 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":159:13)
#loc406 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":160:9)
#loc407 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":160:54)
#loc408 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":154:5)
#loc409 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":154:9)
#loc410 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":156:13)
#loc411 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":156:12)
#loc412 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":156:5)
#loc413 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":157:26)
#loc414 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":157:12)
#loc415 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":157:5)
#loc416 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":157:30)
#loc417 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":158:5)
#loc418 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":183:5)
#loc419 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":160:31)
#loc420 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":160:38)
#loc421 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":160:43)
#loc422 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":160:53)
#loc423 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":161:9)
#loc424 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":161:39)
#loc425 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":161:13)
#loc426 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":161:23)
#loc427 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":161:29)
#loc428 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":161:30)
#loc429 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":161:36)
#loc430 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":161:35)
#loc431 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":163:9)
#loc432 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":166:9)
#loc433 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":163:18)
#loc434 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":163:14)
#loc435 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":163:21)
#loc436 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":163:25)
#loc437 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":163:23)
#loc438 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":164:9)
#loc439 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":165:25)
#loc440 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":165:13)
#loc441 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":165:20)
#loc442 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":165:21)
#loc443 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":163:30)
#loc444 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":163:29)
#loc445 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":169:9)
#loc446 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":181:9)
#loc447 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":169:13)
#loc448 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":169:21)
#loc449 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":170:9)
#loc450 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":177:9)
#loc451 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":179:9)
#loc452 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":171:28)
#loc453 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":171:13)
#loc454 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":171:20)
#loc455 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":171:24)
#loc456 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":173:13)
#loc457 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":176:13)
#loc458 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":173:21)
#loc459 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":173:17)
#loc460 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":173:24)
#loc461 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":173:28)
#loc462 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":173:26)
#loc463 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":174:13)
#loc464 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":175:30)
#loc465 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":175:37)
#loc466 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":175:38)
#loc467 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":175:17)
#loc468 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":173:33)
#loc469 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":173:32)
#loc470 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":180:23)
#loc471 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":180:13)
#loc472 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":182:14)
#loc473 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_42.c":182:9)
#loc474 = loc(fused[#loc1, #loc2])
#loc475 = loc(fused[#loc3, #loc4])
#loc476 = loc(fused[#loc6, #loc7])
#loc477 = loc(fused[#loc8, #loc9])
#loc478 = loc(fused[#loc10, #loc11])
#loc479 = loc(fused[#loc12, #loc13])
#loc480 = loc(fused[#loc14, #loc15])
#loc481 = loc(fused[#loc16, #loc17])
#loc483 = loc(fused[#loc20, #loc21])
#loc484 = loc(fused[#loc22, #loc23])
#loc485 = loc(fused[#loc24, #loc25])
#loc486 = loc(fused[#loc26, #loc27])
#loc487 = loc(fused[#loc29, #loc30])
#loc488 = loc(fused[#loc31, #loc32])
#loc489 = loc(fused[#loc38, #loc39])
#loc490 = loc(fused[#loc40, #loc41])
#loc491 = loc(fused[#loc42, #loc43])
#loc492 = loc(fused[#loc44, #loc41])
#loc493 = loc(fused[#loc46, #loc47])
#loc494 = loc(fused[#loc49, #loc50])
#loc495 = loc(fused[#loc51, #loc52])
#loc496 = loc(fused[#loc55, #loc53])
#loc497 = loc(fused[#loc59, #loc60])
#loc498 = loc(fused[#loc64, #loc65])
#loc499 = loc(fused[#loc66, #loc67])
#loc500 = loc(fused[#loc69, #loc70])
#loc501 = loc(fused[#loc71, #loc72])
#loc502 = loc(fused[#loc73, #loc74])
#loc503 = loc(fused[#loc75, #loc67])
#loc504 = loc(fused[#loc79, #loc80])
#loc505 = loc(fused[#loc83, #loc84])
#loc506 = loc(fused[#loc85, #loc86])
#loc507 = loc(fused[#loc87, #loc88])
#loc508 = loc(fused[#loc90, #loc91])
#loc509 = loc(fused[#loc92, #loc86])
#loc510 = loc(fused[#loc96, #loc94])
#loc511 = loc(fused[#loc99, #loc100])
#loc512 = loc(fused[#loc101, #loc102])
#loc513 = loc(fused[#loc103, #loc104])
#loc514 = loc(fused[#loc105, #loc102])
#loc515 = loc(fused[#loc109, #loc108])
#loc516 = loc(fused[#loc110, #loc111])
#loc517 = loc(fused[#loc112, #loc113])
#loc518 = loc(fused[#loc114, #loc115])
#loc519 = loc(fused[#loc116, #loc117])
#loc520 = loc(fused[#loc119, #loc120])
#loc521 = loc(fused[#loc121, #loc122])
#loc522 = loc(fused[#loc123, #loc124])
#loc523 = loc(fused[#loc125, #loc126])
#loc524 = loc(fused[#loc127, #loc128])
#loc525 = loc(fused[#loc131, #loc129])
#loc526 = loc(fused[#loc134, #loc135])
#loc527 = loc(fused[#loc136, #loc137])
#loc528 = loc(fused[#loc140, #loc141])
#loc529 = loc(fused[#loc139, #loc141])
#loc530 = loc(fused[#loc138, #loc126])
#loc531 = loc(fused[#loc142, #loc143])
#loc532 = loc(fused[#loc144, #loc145])
#loc533 = loc(fused[#loc146, #loc143])
#loc534 = loc(fused[#loc150, #loc151])
#loc535 = loc(fused[#loc153, #loc152])
#loc536 = loc(fused[#loc154, #loc155])
#loc537 = loc(fused[#loc157, #loc151])
#loc538 = loc(fused[#loc159, #loc158])
#loc539 = loc(fused[#loc163, #loc162])
#loc540 = loc(fused[#loc164, #loc165])
#loc541 = loc(fused[#loc166, #loc167])
#loc542 = loc(fused[#loc168, #loc169, #loc170, #loc165])
#loc543 = loc(fused[#loc172, #loc171])
#loc544 = loc(fused[#loc175, #loc176])
#loc545 = loc(fused[#loc178, #loc177])
#loc546 = loc(fused[#loc179, #loc180])
#loc547 = loc(fused[#loc182, #loc176])
#loc548 = loc(fused[#loc188, #loc187])
#loc549 = loc(fused[#loc192, #loc193])
#loc550 = loc(fused[#loc194, #loc195])
#loc551 = loc(fused[#loc196, #loc197])
#loc552 = loc(fused[#loc198, #loc199])
#loc553 = loc(fused[#loc200, #loc201])
#loc554 = loc(fused[#loc206, #loc207])
#loc557 = loc(fused[#loc217, #loc218])
#loc558 = loc(fused[#loc221, #loc222])
#loc559 = loc(fused[#loc225, #loc224])
#loc560 = loc(fused[#loc226, #loc227])
#loc562 = loc(fused[#loc230, #loc231])
#loc563 = loc(fused[#loc232, #loc233])
#loc564 = loc(fused[#loc234, #loc235])
#loc565 = loc(fused[#loc236, #loc237])
#loc566 = loc(fused[#loc239, #loc240])
#loc567 = loc(fused[#loc241, #loc242])
#loc568 = loc(fused[#loc248, #loc249])
#loc569 = loc(fused[#loc250, #loc251])
#loc570 = loc(fused[#loc252, #loc253])
#loc571 = loc(fused[#loc254, #loc251])
#loc572 = loc(fused[#loc256, #loc257])
#loc573 = loc(fused[#loc259, #loc260])
#loc574 = loc(fused[#loc261, #loc262])
#loc575 = loc(fused[#loc264, #loc263])
#loc576 = loc(fused[#loc267, #loc268])
#loc577 = loc(fused[#loc271, #loc272])
#loc578 = loc(fused[#loc273, #loc274])
#loc579 = loc(fused[#loc276, #loc277])
#loc580 = loc(fused[#loc278, #loc279])
#loc581 = loc(fused[#loc280, #loc281])
#loc582 = loc(fused[#loc282, #loc274])
#loc583 = loc(fused[#loc286, #loc287])
#loc584 = loc(fused[#loc290, #loc291])
#loc585 = loc(fused[#loc292, #loc293])
#loc586 = loc(fused[#loc294, #loc295])
#loc587 = loc(fused[#loc297, #loc298])
#loc588 = loc(fused[#loc299, #loc293])
#loc589 = loc(fused[#loc303, #loc301])
#loc590 = loc(fused[#loc306, #loc307])
#loc591 = loc(fused[#loc308, #loc309])
#loc592 = loc(fused[#loc310, #loc311])
#loc593 = loc(fused[#loc312, #loc309])
#loc594 = loc(fused[#loc316, #loc315])
#loc595 = loc(fused[#loc318, #loc319])
#loc596 = loc(fused[#loc320, #loc321])
#loc597 = loc(fused[#loc322, #loc323])
#loc598 = loc(fused[#loc324, #loc325])
#loc599 = loc(fused[#loc328, #loc326])
#loc600 = loc(fused[#loc331, #loc332])
#loc601 = loc(fused[#loc333, #loc334])
#loc602 = loc(fused[#loc337, #loc338])
#loc603 = loc(fused[#loc336, #loc338])
#loc604 = loc(fused[#loc335, #loc323])
#loc605 = loc(fused[#loc339, #loc340])
#loc606 = loc(fused[#loc341, #loc342])
#loc607 = loc(fused[#loc343, #loc340])
#loc608 = loc(fused[#loc347, #loc348])
#loc609 = loc(fused[#loc350, #loc349])
#loc610 = loc(fused[#loc351, #loc352])
#loc611 = loc(fused[#loc354, #loc348])
#loc612 = loc(fused[#loc356, #loc355])
#loc613 = loc(fused[#loc360, #loc359])
#loc614 = loc(fused[#loc361, #loc362])
#loc615 = loc(fused[#loc363, #loc364])
#loc616 = loc(fused[#loc366, #loc368])
#loc617 = loc(fused[#loc369, #loc370, #loc371, #loc362])
#loc618 = loc(fused[#loc373, #loc372])
#loc619 = loc(fused[#loc376, #loc377])
#loc620 = loc(fused[#loc379, #loc378])
#loc621 = loc(fused[#loc380, #loc381])
#loc622 = loc(fused[#loc383, #loc377])
#loc623 = loc(fused[#loc389, #loc388])
#loc624 = loc(fused[#loc393, #loc394])
#loc626 = loc(fused[#loc399, #loc398])
#loc627 = loc(fused[#loc401, #loc400])
#loc628 = loc(fused[#loc402, #loc403])
#loc629 = loc(fused[#loc404, #loc405])
#loc630 = loc(fused[#loc406, #loc407])
#loc631 = loc(fused[#loc408, #loc409])
#loc632 = loc(fused[#loc412, #loc410])
#loc633 = loc(fused[#loc415, #loc416])
#loc634 = loc(fused[#loc417, #loc418])
#loc635 = loc(fused[#loc421, #loc422])
#loc636 = loc(fused[#loc420, #loc422])
#loc637 = loc(fused[#loc419, #loc407])
#loc638 = loc(fused[#loc423, #loc424])
#loc639 = loc(fused[#loc425, #loc426])
#loc640 = loc(fused[#loc427, #loc424])
#loc641 = loc(fused[#loc431, #loc432])
#loc642 = loc(fused[#loc434, #loc433])
#loc643 = loc(fused[#loc435, #loc436])
#loc644 = loc(fused[#loc438, #loc432])
#loc645 = loc(fused[#loc440, #loc439])
#loc646 = loc(fused[#loc444, #loc443])
#loc647 = loc(fused[#loc445, #loc446])
#loc648 = loc(fused[#loc447, #loc448])
#loc649 = loc(fused[#loc449, #loc450, #loc451, #loc446])
#loc650 = loc(fused[#loc453, #loc452])
#loc651 = loc(fused[#loc456, #loc457])
#loc652 = loc(fused[#loc459, #loc458])
#loc653 = loc(fused[#loc460, #loc461])
#loc654 = loc(fused[#loc463, #loc457])
#loc655 = loc(fused[#loc469, #loc468])
