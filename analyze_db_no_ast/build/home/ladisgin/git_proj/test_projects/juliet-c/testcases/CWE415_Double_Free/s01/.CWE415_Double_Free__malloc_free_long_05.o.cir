!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_long_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc188)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc189)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc190)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc191)
  cir.func no_proto  @CWE415_Double_Free__malloc_free_long_05_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc193)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc194)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc188)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc17)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc17)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc19)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc20)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc20)
        %8 = cir.const #cir.int<8> : !u64i loc(#loc197)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc198)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc19)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc199)
        cir.store %11, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc200)
        cir.scope {
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc27)
          %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc28)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc28)
          %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s64i>, !s32i loc(#loc202)
          %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc29)
          cir.if %19 {
            %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc31)
            %21 = cir.const #cir.int<1> : !s32i loc(#loc32)
            %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc33)
            cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
          } loc(#loc203)
        } loc(#loc201)
        %12 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc34)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc35)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc35)
        cir.call @free(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc34)
      } loc(#loc196)
    } loc(#loc195)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc188)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc38)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc38)
      cir.if %4 {
        %5 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc40)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc41)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc41)
        cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc40)
      } loc(#loc205)
    } loc(#loc204)
    cir.return loc(#loc10)
  } loc(#loc192)
  cir.func no_proto  @CWE415_Double_Free__malloc_free_long_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc207)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc208)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc209)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc48)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc210)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc50)
    cir.return loc(#loc43)
  } loc(#loc206)
  cir.global "private"  internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc211)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc212)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc56)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc214)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc61)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc215)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc188)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc65)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc65)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc67)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc68)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc68)
        %8 = cir.const #cir.int<8> : !u64i loc(#loc218)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc219)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc67)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc220)
        cir.store %11, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc221)
        cir.scope {
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc75)
          %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc76)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc76)
          %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s64i>, !s32i loc(#loc223)
          %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc77)
          cir.if %19 {
            %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc79)
            %21 = cir.const #cir.int<1> : !s32i loc(#loc80)
            %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc81)
            cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc79)
          } loc(#loc224)
        } loc(#loc222)
        %12 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc82)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc83)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc83)
        cir.call @free(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc82)
      } loc(#loc217)
    } loc(#loc216)
    cir.scope {
      %2 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc211)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc86)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc86)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc56)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc56)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc90)
      } else {
      } loc(#loc226)
    } loc(#loc225)
    cir.return loc(#loc58)
  } loc(#loc213)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc228)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc95)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc229)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc188)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc99)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc99)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc101)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc102)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc102)
        %8 = cir.const #cir.int<8> : !u64i loc(#loc232)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc233)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc101)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc234)
        cir.store %11, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc235)
        cir.scope {
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc109)
          %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc110)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc110)
          %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s64i>, !s32i loc(#loc237)
          %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc111)
          cir.if %19 {
            %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc113)
            %21 = cir.const #cir.int<1> : !s32i loc(#loc114)
            %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc115)
            cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc113)
          } loc(#loc238)
        } loc(#loc236)
        %12 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc116)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc117)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc117)
        cir.call @free(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc116)
      } loc(#loc231)
    } loc(#loc230)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc188)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc120)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc120)
      cir.if %4 {
      } loc(#loc240)
    } loc(#loc239)
    cir.return loc(#loc92)
  } loc(#loc227)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc242)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc126)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc243)
    cir.scope {
      %2 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc211)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc130)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc130)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc134)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc134)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc135)
      } else {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc136)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc137)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc137)
        %8 = cir.const #cir.int<8> : !u64i loc(#loc246)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc247)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc136)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc248)
        cir.store %11, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc249)
        cir.scope {
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc144)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc145)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc145)
          %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s64i>, !s32i loc(#loc251)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc146)
          cir.if %16 {
            %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc148)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc149)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc150)
            cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc148)
          } loc(#loc252)
        } loc(#loc250)
      } loc(#loc245)
    } loc(#loc244)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc188)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc153)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc153)
      cir.if %4 {
        %5 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc155)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc156)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc156)
        cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc155)
      } loc(#loc254)
    } loc(#loc253)
    cir.return loc(#loc123)
  } loc(#loc241)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc256)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc161)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc257)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc188)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc165)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc165)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc167)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc168)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc168)
        %8 = cir.const #cir.int<8> : !u64i loc(#loc260)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc261)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc167)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc262)
        cir.store %11, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc263)
        cir.scope {
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc175)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc176)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc176)
          %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s64i>, !s32i loc(#loc265)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc177)
          cir.if %16 {
            %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc179)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc180)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc181)
            cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc179)
          } loc(#loc266)
        } loc(#loc264)
      } loc(#loc259)
    } loc(#loc258)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc188)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc184)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc184)
      cir.if %4 {
        %5 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc186)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc187)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc187)
        cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc186)
      } loc(#loc268)
    } loc(#loc267)
    cir.return loc(#loc158)
  } loc(#loc255)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_long_05.c":0:0)
#loc1 = loc("CWE415_Double_Free__malloc_free_long_05.c":25:1)
#loc2 = loc("CWE415_Double_Free__malloc_free_long_05.c":25:25)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE415_Double_Free__malloc_free_long_05.c":30:1)
#loc10 = loc("CWE415_Double_Free__malloc_free_long_05.c":47:1)
#loc11 = loc("CWE415_Double_Free__malloc_free_long_05.c":32:5)
#loc12 = loc("CWE415_Double_Free__malloc_free_long_05.c":32:12)
#loc13 = loc("CWE415_Double_Free__malloc_free_long_05.c":34:12)
#loc14 = loc("CWE415_Double_Free__malloc_free_long_05.c":34:5)
#loc15 = loc("CWE415_Double_Free__malloc_free_long_05.c":35:5)
#loc16 = loc("CWE415_Double_Free__malloc_free_long_05.c":41:5)
#loc17 = loc("CWE415_Double_Free__malloc_free_long_05.c":35:8)
#loc18 = loc("CWE415_Double_Free__malloc_free_long_05.c":36:5)
#loc19 = loc("CWE415_Double_Free__malloc_free_long_05.c":37:24)
#loc20 = loc("CWE415_Double_Free__malloc_free_long_05.c":37:31)
#loc21 = loc("CWE415_Double_Free__malloc_free_long_05.c":37:35)
#loc22 = loc("CWE415_Double_Free__malloc_free_long_05.c":37:46)
#loc23 = loc("CWE415_Double_Free__malloc_free_long_05.c":37:47)
#loc24 = loc("CWE415_Double_Free__malloc_free_long_05.c":37:9)
#loc25 = loc("CWE415_Double_Free__malloc_free_long_05.c":38:9)
#loc26 = loc("CWE415_Double_Free__malloc_free_long_05.c":38:37)
#loc27 = loc("CWE415_Double_Free__malloc_free_long_05.c":38:13)
#loc28 = loc("CWE415_Double_Free__malloc_free_long_05.c":38:21)
#loc29 = loc("CWE415_Double_Free__malloc_free_long_05.c":38:18)
#loc30 = loc("CWE415_Double_Free__malloc_free_long_05.c":38:27)
#loc31 = loc("CWE415_Double_Free__malloc_free_long_05.c":38:28)
#loc32 = loc("CWE415_Double_Free__malloc_free_long_05.c":38:34)
#loc33 = loc("CWE415_Double_Free__malloc_free_long_05.c":38:33)
#loc34 = loc("CWE415_Double_Free__malloc_free_long_05.c":40:9)
#loc35 = loc("CWE415_Double_Free__malloc_free_long_05.c":40:14)
#loc36 = loc("CWE415_Double_Free__malloc_free_long_05.c":42:5)
#loc37 = loc("CWE415_Double_Free__malloc_free_long_05.c":46:5)
#loc38 = loc("CWE415_Double_Free__malloc_free_long_05.c":42:8)
#loc39 = loc("CWE415_Double_Free__malloc_free_long_05.c":43:5)
#loc40 = loc("CWE415_Double_Free__malloc_free_long_05.c":45:9)
#loc41 = loc("CWE415_Double_Free__malloc_free_long_05.c":45:14)
#loc42 = loc("CWE415_Double_Free__malloc_free_long_05.c":143:1)
#loc43 = loc("CWE415_Double_Free__malloc_free_long_05.c":149:1)
#loc44 = loc("CWE415_Double_Free__malloc_free_long_05.c":145:5)
#loc45 = loc("CWE415_Double_Free__malloc_free_long_05.c":145:14)
#loc46 = loc("CWE415_Double_Free__malloc_free_long_05.c":146:5)
#loc47 = loc("CWE415_Double_Free__malloc_free_long_05.c":146:14)
#loc48 = loc("CWE415_Double_Free__malloc_free_long_05.c":147:5)
#loc49 = loc("CWE415_Double_Free__malloc_free_long_05.c":147:14)
#loc50 = loc("CWE415_Double_Free__malloc_free_long_05.c":148:5)
#loc51 = loc("CWE415_Double_Free__malloc_free_long_05.c":148:14)
#loc52 = loc("CWE415_Double_Free__malloc_free_long_05.c":26:1)
#loc53 = loc("CWE415_Double_Free__malloc_free_long_05.c":26:26)
#loc54 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc55 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc56 = loc("CWE415_Double_Free__malloc_free_long_05.c":69:19)
#loc57 = loc("CWE415_Double_Free__malloc_free_long_05.c":54:1)
#loc58 = loc("CWE415_Double_Free__malloc_free_long_05.c":77:1)
#loc59 = loc("CWE415_Double_Free__malloc_free_long_05.c":56:5)
#loc60 = loc("CWE415_Double_Free__malloc_free_long_05.c":56:12)
#loc61 = loc("CWE415_Double_Free__malloc_free_long_05.c":58:12)
#loc62 = loc("CWE415_Double_Free__malloc_free_long_05.c":58:5)
#loc63 = loc("CWE415_Double_Free__malloc_free_long_05.c":59:5)
#loc64 = loc("CWE415_Double_Free__malloc_free_long_05.c":65:5)
#loc65 = loc("CWE415_Double_Free__malloc_free_long_05.c":59:8)
#loc66 = loc("CWE415_Double_Free__malloc_free_long_05.c":60:5)
#loc67 = loc("CWE415_Double_Free__malloc_free_long_05.c":61:24)
#loc68 = loc("CWE415_Double_Free__malloc_free_long_05.c":61:31)
#loc69 = loc("CWE415_Double_Free__malloc_free_long_05.c":61:35)
#loc70 = loc("CWE415_Double_Free__malloc_free_long_05.c":61:46)
#loc71 = loc("CWE415_Double_Free__malloc_free_long_05.c":61:47)
#loc72 = loc("CWE415_Double_Free__malloc_free_long_05.c":61:9)
#loc73 = loc("CWE415_Double_Free__malloc_free_long_05.c":62:9)
#loc74 = loc("CWE415_Double_Free__malloc_free_long_05.c":62:37)
#loc75 = loc("CWE415_Double_Free__malloc_free_long_05.c":62:13)
#loc76 = loc("CWE415_Double_Free__malloc_free_long_05.c":62:21)
#loc77 = loc("CWE415_Double_Free__malloc_free_long_05.c":62:18)
#loc78 = loc("CWE415_Double_Free__malloc_free_long_05.c":62:27)
#loc79 = loc("CWE415_Double_Free__malloc_free_long_05.c":62:28)
#loc80 = loc("CWE415_Double_Free__malloc_free_long_05.c":62:34)
#loc81 = loc("CWE415_Double_Free__malloc_free_long_05.c":62:33)
#loc82 = loc("CWE415_Double_Free__malloc_free_long_05.c":64:9)
#loc83 = loc("CWE415_Double_Free__malloc_free_long_05.c":64:14)
#loc84 = loc("CWE415_Double_Free__malloc_free_long_05.c":66:5)
#loc85 = loc("CWE415_Double_Free__malloc_free_long_05.c":76:5)
#loc86 = loc("CWE415_Double_Free__malloc_free_long_05.c":66:8)
#loc87 = loc("CWE415_Double_Free__malloc_free_long_05.c":67:5)
#loc88 = loc("CWE415_Double_Free__malloc_free_long_05.c":70:5)
#loc89 = loc("CWE415_Double_Free__malloc_free_long_05.c":72:5)
#loc90 = loc("CWE415_Double_Free__malloc_free_long_05.c":69:9)
#loc91 = loc("CWE415_Double_Free__malloc_free_long_05.c":80:1)
#loc92 = loc("CWE415_Double_Free__malloc_free_long_05.c":98:1)
#loc93 = loc("CWE415_Double_Free__malloc_free_long_05.c":82:5)
#loc94 = loc("CWE415_Double_Free__malloc_free_long_05.c":82:12)
#loc95 = loc("CWE415_Double_Free__malloc_free_long_05.c":84:12)
#loc96 = loc("CWE415_Double_Free__malloc_free_long_05.c":84:5)
#loc97 = loc("CWE415_Double_Free__malloc_free_long_05.c":85:5)
#loc98 = loc("CWE415_Double_Free__malloc_free_long_05.c":91:5)
#loc99 = loc("CWE415_Double_Free__malloc_free_long_05.c":85:8)
#loc100 = loc("CWE415_Double_Free__malloc_free_long_05.c":86:5)
#loc101 = loc("CWE415_Double_Free__malloc_free_long_05.c":87:24)
#loc102 = loc("CWE415_Double_Free__malloc_free_long_05.c":87:31)
#loc103 = loc("CWE415_Double_Free__malloc_free_long_05.c":87:35)
#loc104 = loc("CWE415_Double_Free__malloc_free_long_05.c":87:46)
#loc105 = loc("CWE415_Double_Free__malloc_free_long_05.c":87:47)
#loc106 = loc("CWE415_Double_Free__malloc_free_long_05.c":87:9)
#loc107 = loc("CWE415_Double_Free__malloc_free_long_05.c":88:9)
#loc108 = loc("CWE415_Double_Free__malloc_free_long_05.c":88:37)
#loc109 = loc("CWE415_Double_Free__malloc_free_long_05.c":88:13)
#loc110 = loc("CWE415_Double_Free__malloc_free_long_05.c":88:21)
#loc111 = loc("CWE415_Double_Free__malloc_free_long_05.c":88:18)
#loc112 = loc("CWE415_Double_Free__malloc_free_long_05.c":88:27)
#loc113 = loc("CWE415_Double_Free__malloc_free_long_05.c":88:28)
#loc114 = loc("CWE415_Double_Free__malloc_free_long_05.c":88:34)
#loc115 = loc("CWE415_Double_Free__malloc_free_long_05.c":88:33)
#loc116 = loc("CWE415_Double_Free__malloc_free_long_05.c":90:9)
#loc117 = loc("CWE415_Double_Free__malloc_free_long_05.c":90:14)
#loc118 = loc("CWE415_Double_Free__malloc_free_long_05.c":92:5)
#loc119 = loc("CWE415_Double_Free__malloc_free_long_05.c":97:5)
#loc120 = loc("CWE415_Double_Free__malloc_free_long_05.c":92:8)
#loc121 = loc("CWE415_Double_Free__malloc_free_long_05.c":93:5)
#loc122 = loc("CWE415_Double_Free__malloc_free_long_05.c":101:1)
#loc123 = loc("CWE415_Double_Free__malloc_free_long_05.c":122:1)
#loc124 = loc("CWE415_Double_Free__malloc_free_long_05.c":103:5)
#loc125 = loc("CWE415_Double_Free__malloc_free_long_05.c":103:12)
#loc126 = loc("CWE415_Double_Free__malloc_free_long_05.c":105:12)
#loc127 = loc("CWE415_Double_Free__malloc_free_long_05.c":105:5)
#loc128 = loc("CWE415_Double_Free__malloc_free_long_05.c":106:5)
#loc129 = loc("CWE415_Double_Free__malloc_free_long_05.c":116:5)
#loc130 = loc("CWE415_Double_Free__malloc_free_long_05.c":106:8)
#loc131 = loc("CWE415_Double_Free__malloc_free_long_05.c":107:5)
#loc132 = loc("CWE415_Double_Free__malloc_free_long_05.c":110:5)
#loc133 = loc("CWE415_Double_Free__malloc_free_long_05.c":112:5)
#loc134 = loc("CWE415_Double_Free__malloc_free_long_05.c":109:19)
#loc135 = loc("CWE415_Double_Free__malloc_free_long_05.c":109:9)
#loc136 = loc("CWE415_Double_Free__malloc_free_long_05.c":113:24)
#loc137 = loc("CWE415_Double_Free__malloc_free_long_05.c":113:31)
#loc138 = loc("CWE415_Double_Free__malloc_free_long_05.c":113:35)
#loc139 = loc("CWE415_Double_Free__malloc_free_long_05.c":113:46)
#loc140 = loc("CWE415_Double_Free__malloc_free_long_05.c":113:47)
#loc141 = loc("CWE415_Double_Free__malloc_free_long_05.c":113:9)
#loc142 = loc("CWE415_Double_Free__malloc_free_long_05.c":114:9)
#loc143 = loc("CWE415_Double_Free__malloc_free_long_05.c":114:37)
#loc144 = loc("CWE415_Double_Free__malloc_free_long_05.c":114:13)
#loc145 = loc("CWE415_Double_Free__malloc_free_long_05.c":114:21)
#loc146 = loc("CWE415_Double_Free__malloc_free_long_05.c":114:18)
#loc147 = loc("CWE415_Double_Free__malloc_free_long_05.c":114:27)
#loc148 = loc("CWE415_Double_Free__malloc_free_long_05.c":114:28)
#loc149 = loc("CWE415_Double_Free__malloc_free_long_05.c":114:34)
#loc150 = loc("CWE415_Double_Free__malloc_free_long_05.c":114:33)
#loc151 = loc("CWE415_Double_Free__malloc_free_long_05.c":117:5)
#loc152 = loc("CWE415_Double_Free__malloc_free_long_05.c":121:5)
#loc153 = loc("CWE415_Double_Free__malloc_free_long_05.c":117:8)
#loc154 = loc("CWE415_Double_Free__malloc_free_long_05.c":118:5)
#loc155 = loc("CWE415_Double_Free__malloc_free_long_05.c":120:9)
#loc156 = loc("CWE415_Double_Free__malloc_free_long_05.c":120:14)
#loc157 = loc("CWE415_Double_Free__malloc_free_long_05.c":125:1)
#loc158 = loc("CWE415_Double_Free__malloc_free_long_05.c":141:1)
#loc159 = loc("CWE415_Double_Free__malloc_free_long_05.c":127:5)
#loc160 = loc("CWE415_Double_Free__malloc_free_long_05.c":127:12)
#loc161 = loc("CWE415_Double_Free__malloc_free_long_05.c":129:12)
#loc162 = loc("CWE415_Double_Free__malloc_free_long_05.c":129:5)
#loc163 = loc("CWE415_Double_Free__malloc_free_long_05.c":130:5)
#loc164 = loc("CWE415_Double_Free__malloc_free_long_05.c":135:5)
#loc165 = loc("CWE415_Double_Free__malloc_free_long_05.c":130:8)
#loc166 = loc("CWE415_Double_Free__malloc_free_long_05.c":131:5)
#loc167 = loc("CWE415_Double_Free__malloc_free_long_05.c":132:24)
#loc168 = loc("CWE415_Double_Free__malloc_free_long_05.c":132:31)
#loc169 = loc("CWE415_Double_Free__malloc_free_long_05.c":132:35)
#loc170 = loc("CWE415_Double_Free__malloc_free_long_05.c":132:46)
#loc171 = loc("CWE415_Double_Free__malloc_free_long_05.c":132:47)
#loc172 = loc("CWE415_Double_Free__malloc_free_long_05.c":132:9)
#loc173 = loc("CWE415_Double_Free__malloc_free_long_05.c":133:9)
#loc174 = loc("CWE415_Double_Free__malloc_free_long_05.c":133:37)
#loc175 = loc("CWE415_Double_Free__malloc_free_long_05.c":133:13)
#loc176 = loc("CWE415_Double_Free__malloc_free_long_05.c":133:21)
#loc177 = loc("CWE415_Double_Free__malloc_free_long_05.c":133:18)
#loc178 = loc("CWE415_Double_Free__malloc_free_long_05.c":133:27)
#loc179 = loc("CWE415_Double_Free__malloc_free_long_05.c":133:28)
#loc180 = loc("CWE415_Double_Free__malloc_free_long_05.c":133:34)
#loc181 = loc("CWE415_Double_Free__malloc_free_long_05.c":133:33)
#loc182 = loc("CWE415_Double_Free__malloc_free_long_05.c":136:5)
#loc183 = loc("CWE415_Double_Free__malloc_free_long_05.c":140:5)
#loc184 = loc("CWE415_Double_Free__malloc_free_long_05.c":136:8)
#loc185 = loc("CWE415_Double_Free__malloc_free_long_05.c":137:5)
#loc186 = loc("CWE415_Double_Free__malloc_free_long_05.c":139:9)
#loc187 = loc("CWE415_Double_Free__malloc_free_long_05.c":139:14)
#loc188 = loc(fused[#loc1, #loc2])
#loc189 = loc(fused[#loc3, #loc4])
#loc190 = loc(fused[#loc5, #loc6])
#loc191 = loc(fused[#loc7, #loc8])
#loc192 = loc(fused[#loc9, #loc10])
#loc193 = loc(fused[#loc11, #loc12])
#loc194 = loc(fused[#loc14, #loc13])
#loc195 = loc(fused[#loc15, #loc16])
#loc196 = loc(fused[#loc18, #loc16])
#loc197 = loc(fused[#loc21, #loc22])
#loc198 = loc(fused[#loc20, #loc22])
#loc199 = loc(fused[#loc19, #loc23])
#loc200 = loc(fused[#loc24, #loc23])
#loc201 = loc(fused[#loc25, #loc26])
#loc202 = loc(fused[#loc27, #loc28])
#loc203 = loc(fused[#loc30, #loc26])
#loc204 = loc(fused[#loc36, #loc37])
#loc205 = loc(fused[#loc39, #loc37])
#loc206 = loc(fused[#loc42, #loc43])
#loc207 = loc(fused[#loc44, #loc45])
#loc208 = loc(fused[#loc46, #loc47])
#loc209 = loc(fused[#loc48, #loc49])
#loc210 = loc(fused[#loc50, #loc51])
#loc211 = loc(fused[#loc52, #loc53])
#loc212 = loc(fused[#loc54, #loc55])
#loc213 = loc(fused[#loc57, #loc58])
#loc214 = loc(fused[#loc59, #loc60])
#loc215 = loc(fused[#loc62, #loc61])
#loc216 = loc(fused[#loc63, #loc64])
#loc217 = loc(fused[#loc66, #loc64])
#loc218 = loc(fused[#loc69, #loc70])
#loc219 = loc(fused[#loc68, #loc70])
#loc220 = loc(fused[#loc67, #loc71])
#loc221 = loc(fused[#loc72, #loc71])
#loc222 = loc(fused[#loc73, #loc74])
#loc223 = loc(fused[#loc75, #loc76])
#loc224 = loc(fused[#loc78, #loc74])
#loc225 = loc(fused[#loc84, #loc85])
#loc226 = loc(fused[#loc87, #loc88, #loc89, #loc85])
#loc227 = loc(fused[#loc91, #loc92])
#loc228 = loc(fused[#loc93, #loc94])
#loc229 = loc(fused[#loc96, #loc95])
#loc230 = loc(fused[#loc97, #loc98])
#loc231 = loc(fused[#loc100, #loc98])
#loc232 = loc(fused[#loc103, #loc104])
#loc233 = loc(fused[#loc102, #loc104])
#loc234 = loc(fused[#loc101, #loc105])
#loc235 = loc(fused[#loc106, #loc105])
#loc236 = loc(fused[#loc107, #loc108])
#loc237 = loc(fused[#loc109, #loc110])
#loc238 = loc(fused[#loc112, #loc108])
#loc239 = loc(fused[#loc118, #loc119])
#loc240 = loc(fused[#loc121, #loc119])
#loc241 = loc(fused[#loc122, #loc123])
#loc242 = loc(fused[#loc124, #loc125])
#loc243 = loc(fused[#loc127, #loc126])
#loc244 = loc(fused[#loc128, #loc129])
#loc245 = loc(fused[#loc131, #loc132, #loc133, #loc129])
#loc246 = loc(fused[#loc138, #loc139])
#loc247 = loc(fused[#loc137, #loc139])
#loc248 = loc(fused[#loc136, #loc140])
#loc249 = loc(fused[#loc141, #loc140])
#loc250 = loc(fused[#loc142, #loc143])
#loc251 = loc(fused[#loc144, #loc145])
#loc252 = loc(fused[#loc147, #loc143])
#loc253 = loc(fused[#loc151, #loc152])
#loc254 = loc(fused[#loc154, #loc152])
#loc255 = loc(fused[#loc157, #loc158])
#loc256 = loc(fused[#loc159, #loc160])
#loc257 = loc(fused[#loc162, #loc161])
#loc258 = loc(fused[#loc163, #loc164])
#loc259 = loc(fused[#loc166, #loc164])
#loc260 = loc(fused[#loc169, #loc170])
#loc261 = loc(fused[#loc168, #loc170])
#loc262 = loc(fused[#loc167, #loc171])
#loc263 = loc(fused[#loc172, #loc171])
#loc264 = loc(fused[#loc173, #loc174])
#loc265 = loc(fused[#loc175, #loc176])
#loc266 = loc(fused[#loc178, #loc174])
#loc267 = loc(fused[#loc182, #loc183])
#loc268 = loc(fused[#loc185, #loc183])
