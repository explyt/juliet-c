!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s06/CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @_ZL10staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc149)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc150)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc151)
  cir.func @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_053badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc153)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc154)
    cir.scope {
      %2 = cir.get_global @_ZL10staticTrue : !cir.ptr<!s32i> loc(#loc149)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc15)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc15)
      cir.if %4 {
        %5 = cir.const #cir.int<8> : !u64i loc(#loc157)
        %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc19)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc157)
        cir.store %7, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc158)
      } loc(#loc156)
    } loc(#loc155)
    cir.scope {
      %2 = cir.get_global @_ZL10staticTrue : !cir.ptr<!s32i> loc(#loc149)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc23)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc23)
      cir.if %4 {
        %5 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc25)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc26)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc26)
        cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc25)
      } loc(#loc160)
    } loc(#loc159)
    cir.return loc(#loc8)
  } loc(#loc152)
  cir.global "private" internal dsolocal @_ZL11staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc161)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc162)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc31)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc163)
  cir.func internal private @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc165)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc38)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc166)
    cir.scope {
      %2 = cir.get_global @_ZL10staticTrue : !cir.ptr<!s32i> loc(#loc149)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc42)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc42)
      cir.if %4 {
        %5 = cir.const #cir.int<8> : !u64i loc(#loc169)
        %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc46)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc169)
        cir.store %7, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc170)
      } loc(#loc168)
    } loc(#loc167)
    cir.scope {
      %2 = cir.get_global @_ZL11staticFalse : !cir.ptr<!s32i> loc(#loc161)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc50)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc50)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc31)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc31)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc54)
      } else {
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc55)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc55)
        cir.call @_ZdlPv(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc46)
      } loc(#loc172)
    } loc(#loc171)
    cir.return loc(#loc35)
  } loc(#loc164)
  cir.func internal private @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc174)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc60)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc175)
    cir.scope {
      %2 = cir.get_global @_ZL10staticTrue : !cir.ptr<!s32i> loc(#loc149)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc64)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc64)
      cir.if %4 {
        %5 = cir.const #cir.int<8> : !u64i loc(#loc178)
        %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc68)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc178)
        cir.store %7, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc179)
      } loc(#loc177)
    } loc(#loc176)
    cir.scope {
      %2 = cir.get_global @_ZL10staticTrue : !cir.ptr<!s32i> loc(#loc149)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc72)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc72)
      cir.if %4 {
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc74)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc74)
        cir.call @_ZdlPv(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc68)
      } loc(#loc181)
    } loc(#loc180)
    cir.return loc(#loc57)
  } loc(#loc173)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc182)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc183)
  cir.func internal private @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc185)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc83)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc186)
    cir.scope {
      %2 = cir.get_global @_ZL11staticFalse : !cir.ptr<!s32i> loc(#loc161)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc87)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc87)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc91)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc91)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc92)
      } else {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc93)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc94)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc94)
        %8 = cir.const #cir.int<8> : !u64i loc(#loc189)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc190)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc93)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc191)
        cir.store %11, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc192)
        cir.scope {
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc101)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc102)
          %14 = cir.cmp(eq, %12, %13) : !cir.ptr<!s64i>, !cir.bool loc(#loc194)
          cir.if %14 {
            %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc104)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc105)
            %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc106)
            cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc104)
          } loc(#loc195)
        } loc(#loc193)
      } loc(#loc188)
    } loc(#loc187)
    cir.scope {
      %2 = cir.get_global @_ZL10staticTrue : !cir.ptr<!s32i> loc(#loc149)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc109)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc109)
      cir.if %4 {
        %5 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc111)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc112)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc112)
        cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc111)
      } loc(#loc197)
    } loc(#loc196)
    cir.return loc(#loc80)
  } loc(#loc184)
  cir.func internal private @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc199)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc117)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc200)
    cir.scope {
      %2 = cir.get_global @_ZL10staticTrue : !cir.ptr<!s32i> loc(#loc149)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc121)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc121)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc123)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc124)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc124)
        %8 = cir.const #cir.int<8> : !u64i loc(#loc203)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc204)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc123)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc205)
        cir.store %11, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc206)
        cir.scope {
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc131)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc132)
          %14 = cir.cmp(eq, %12, %13) : !cir.ptr<!s64i>, !cir.bool loc(#loc208)
          cir.if %14 {
            %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc134)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc135)
            %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc136)
            cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc134)
          } loc(#loc209)
        } loc(#loc207)
      } loc(#loc202)
    } loc(#loc201)
    cir.scope {
      %2 = cir.get_global @_ZL10staticTrue : !cir.ptr<!s32i> loc(#loc149)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc139)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc139)
      cir.if %4 {
        %5 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc141)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc142)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc142)
        cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc141)
      } loc(#loc211)
    } loc(#loc210)
    cir.return loc(#loc114)
  } loc(#loc198)
  cir.func @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_054goodEv() extra(#fn_attr1) {
    cir.call @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05L8goodB2G1Ev() : () -> () loc(#loc145)
    cir.call @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05L8goodB2G2Ev() : () -> () loc(#loc146)
    cir.call @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05L8goodG2B1Ev() : () -> () loc(#loc147)
    cir.call @_ZN65CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05L8goodG2B2Ev() : () -> () loc(#loc148)
    cir.return loc(#loc144)
  } loc(#loc212)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s06/CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":0:0)
#loc1 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":23:1)
#loc2 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":23:25)
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":31:1)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":47:1)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":33:5)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":33:15)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":35:12)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":35:5)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":36:5)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":40:5)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":36:8)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":37:5)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":39:16)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":39:20)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":31:6)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":39:9)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":41:5)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":46:5)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":41:8)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":42:5)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":45:9)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":45:14)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":24:1)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":24:26)
#loc29 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc30 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":67:19)
#loc32 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc33 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":54:1)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":74:1)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":56:5)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":56:15)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":58:12)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":58:5)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":59:5)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":63:5)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":59:8)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":60:5)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":62:16)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":62:20)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":54:13)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":62:9)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":64:5)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":73:5)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":64:8)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":65:5)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":68:5)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":70:5)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":67:9)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":72:16)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":77:1)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":92:1)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":79:5)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":79:15)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":81:12)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":81:5)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":82:5)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":86:5)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":82:8)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":83:5)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":85:16)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":85:20)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":77:13)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":85:9)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":87:5)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":91:5)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":87:8)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":88:5)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":90:16)
#loc75 = loc("/usr/include/stdlib.h":672:1)
#loc76 = loc("/usr/include/stdlib.h":672:45)
#loc77 = loc("/usr/include/stdlib.h":756:1)
#loc78 = loc("/usr/include/stdlib.h":756:70)
#loc79 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":95:1)
#loc80 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":117:1)
#loc81 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":97:5)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":97:15)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":99:12)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":99:5)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":100:5)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":110:5)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":100:8)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":101:5)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":104:5)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":106:5)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":103:19)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":103:9)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":108:27)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":108:34)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":108:38)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":108:52)
#loc97 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":108:53)
#loc98 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":108:9)
#loc99 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":109:9)
#loc100 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":109:37)
#loc101 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":109:13)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":109:21)
#loc103 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":109:27)
#loc104 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":109:28)
#loc105 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":109:34)
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":109:33)
#loc107 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":111:5)
#loc108 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":116:5)
#loc109 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":111:8)
#loc110 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":112:5)
#loc111 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":115:9)
#loc112 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":115:14)
#loc113 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":120:1)
#loc114 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":137:1)
#loc115 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":122:5)
#loc116 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":122:15)
#loc117 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":124:12)
#loc118 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":124:5)
#loc119 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":125:5)
#loc120 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":130:5)
#loc121 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":125:8)
#loc122 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":126:5)
#loc123 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":128:27)
#loc124 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":128:34)
#loc125 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":128:38)
#loc126 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":128:52)
#loc127 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":128:53)
#loc128 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":128:9)
#loc129 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":129:9)
#loc130 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":129:37)
#loc131 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":129:13)
#loc132 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":129:21)
#loc133 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":129:27)
#loc134 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":129:28)
#loc135 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":129:34)
#loc136 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":129:33)
#loc137 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":131:5)
#loc138 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":136:5)
#loc139 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":131:8)
#loc140 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":132:5)
#loc141 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":135:9)
#loc142 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":135:14)
#loc143 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":139:1)
#loc144 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":145:1)
#loc145 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":141:5)
#loc146 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":142:5)
#loc147 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":143:5)
#loc148 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int64_t_05.cpp":144:5)
#loc149 = loc(fused[#loc1, #loc2])
#loc150 = loc(fused[#loc3, #loc4])
#loc151 = loc(fused[#loc5, #loc6])
#loc152 = loc(fused[#loc7, #loc8])
#loc153 = loc(fused[#loc9, #loc10])
#loc154 = loc(fused[#loc12, #loc11])
#loc155 = loc(fused[#loc13, #loc14])
#loc156 = loc(fused[#loc16, #loc14])
#loc157 = loc(fused[#loc17, #loc18])
#loc158 = loc(fused[#loc20, #loc18])
#loc159 = loc(fused[#loc21, #loc22])
#loc160 = loc(fused[#loc24, #loc22])
#loc161 = loc(fused[#loc27, #loc28])
#loc162 = loc(fused[#loc29, #loc30])
#loc163 = loc(fused[#loc32, #loc33])
#loc164 = loc(fused[#loc34, #loc35])
#loc165 = loc(fused[#loc36, #loc37])
#loc166 = loc(fused[#loc39, #loc38])
#loc167 = loc(fused[#loc40, #loc41])
#loc168 = loc(fused[#loc43, #loc41])
#loc169 = loc(fused[#loc44, #loc45])
#loc170 = loc(fused[#loc47, #loc45])
#loc171 = loc(fused[#loc48, #loc49])
#loc172 = loc(fused[#loc51, #loc52, #loc53, #loc49])
#loc173 = loc(fused[#loc56, #loc57])
#loc174 = loc(fused[#loc58, #loc59])
#loc175 = loc(fused[#loc61, #loc60])
#loc176 = loc(fused[#loc62, #loc63])
#loc177 = loc(fused[#loc65, #loc63])
#loc178 = loc(fused[#loc66, #loc67])
#loc179 = loc(fused[#loc69, #loc67])
#loc180 = loc(fused[#loc70, #loc71])
#loc181 = loc(fused[#loc73, #loc71])
#loc182 = loc(fused[#loc75, #loc76])
#loc183 = loc(fused[#loc77, #loc78])
#loc184 = loc(fused[#loc79, #loc80])
#loc185 = loc(fused[#loc81, #loc82])
#loc186 = loc(fused[#loc84, #loc83])
#loc187 = loc(fused[#loc85, #loc86])
#loc188 = loc(fused[#loc88, #loc89, #loc90, #loc86])
#loc189 = loc(fused[#loc95, #loc96])
#loc190 = loc(fused[#loc94, #loc96])
#loc191 = loc(fused[#loc93, #loc97])
#loc192 = loc(fused[#loc98, #loc97])
#loc193 = loc(fused[#loc99, #loc100])
#loc194 = loc(fused[#loc101, #loc102])
#loc195 = loc(fused[#loc103, #loc100])
#loc196 = loc(fused[#loc107, #loc108])
#loc197 = loc(fused[#loc110, #loc108])
#loc198 = loc(fused[#loc113, #loc114])
#loc199 = loc(fused[#loc115, #loc116])
#loc200 = loc(fused[#loc118, #loc117])
#loc201 = loc(fused[#loc119, #loc120])
#loc202 = loc(fused[#loc122, #loc120])
#loc203 = loc(fused[#loc125, #loc126])
#loc204 = loc(fused[#loc124, #loc126])
#loc205 = loc(fused[#loc123, #loc127])
#loc206 = loc(fused[#loc128, #loc127])
#loc207 = loc(fused[#loc129, #loc130])
#loc208 = loc(fused[#loc131, #loc132])
#loc209 = loc(fused[#loc133, #loc130])
#loc210 = loc(fused[#loc137, #loc138])
#loc211 = loc(fused[#loc140, #loc138])
#loc212 = loc(fused[#loc143, #loc144])
