!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc21 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":46:21)
#loc22 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":46:27)
#loc129 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":104:44)
#loc168 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":157:25)
#loc169 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":157:31)
#loc279 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":220:44)
#loc309 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":137:25)
#loc310 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":137:31)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc340 = loc(fused[#loc21, #loc22])
#loc395 = loc(fused[#loc168, #loc169])
#loc448 = loc(fused[#loc309, #loc310])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc330)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc331)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc332)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc333)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc334)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc335)
  cir.func private @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc336)
  cir.func private @close(!s32i) -> !s32i loc(#loc337)
  cir.func private @printIntLine(!s32i) loc(#loc338)
  cir.func internal private @badSink(%arg0: !cir.float loc(fused[#loc21, #loc22])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc341)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc340)
    cir.store %arg0, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc25)
    cir.br ^bb1 loc(#loc342)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc28)
    %3 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc29)
    %4 = cir.cast(floating, %3 : !cir.float), !cir.double loc(#loc29)
    %5 = cir.binop(div, %2, %4) : !cir.double loc(#loc343)
    %6 = cir.cast(float_to_int, %5 : !cir.double), !s32i loc(#loc343)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc341)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc31)
    cir.br ^bb2 loc(#loc27)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc20)
  } loc(#loc339)
  cir.func no_proto @CWE369_Divide_by_Zero__float_listenSocket_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc345)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc346)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc347)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc348)
    %4 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc349)
    %5 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc350)
    %6 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc46)
    cir.store %6, %5 : !cir.float, !cir.ptr<!cir.float> loc(#loc351)
    cir.br ^bb1 loc(#loc352)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc39)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc347)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc41)
    cir.store %10, %3 : !s32i, !cir.ptr<!s32i> loc(#loc348)
    cir.br ^bb2 loc(#loc353)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc353)
  ^bb3:  // pred: ^bb34
    %11 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc52)
    cir.brcond %12 ^bb4, ^bb35 loc(#loc52)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc354)
  ^bb5:  // pred: ^bb4
    %13 = cir.const #cir.int<2> : !s32i loc(#loc55)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %15 = cir.const #cir.int<6> : !s32i loc(#loc57)
    %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc58)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc355)
    cir.br ^bb6 loc(#loc356)
  ^bb6:  // pred: ^bb5
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc63)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc64)
    %20 = cir.cmp(eq, %17, %19) : !s32i, !cir.bool loc(#loc357)
    cir.brcond %20 ^bb7, ^bb8 loc(#loc358)
  ^bb7:  // pred: ^bb6
    cir.br ^bb35 loc(#loc66)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc62)
  ^bb9:  // pred: ^bb8
    %21 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc359)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc69)
    %23 = cir.const #cir.int<16> : !u64i loc(#loc360)
    cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc361)
    %24 = cir.const #cir.int<2> : !s32i loc(#loc74)
    %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc74)
    %26 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
    cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc362)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc77)
    %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc77)
    %29 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc78)
    %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc79)
    cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc363)
    %31 = cir.const #cir.int<27015> : !s32i loc(#loc81)
    %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc81)
    %33 = cir.call @htons(%32) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc82)
    %34 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
    cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc364)
    cir.br ^bb10 loc(#loc365)
  ^bb10:  // pred: ^bb9
    %35 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    %36 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc366)
    %37 = cir.const #cir.int<16> : !u64i loc(#loc367)
    %38 = cir.cast(integral, %37 : !u64i), !u32i loc(#loc367)
    %39 = cir.call @bind(%35, %36, %38) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc93)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %41 = cir.unary(minus, %40) nsw : !s32i, !s32i loc(#loc94)
    %42 = cir.cmp(eq, %39, %41) : !s32i, !cir.bool loc(#loc368)
    cir.brcond %42 ^bb11, ^bb12 loc(#loc369)
  ^bb11:  // pred: ^bb10
    cir.br ^bb35 loc(#loc96)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc87)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc370)
  ^bb14:  // pred: ^bb13
    %43 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %44 = cir.const #cir.int<5> : !s32i loc(#loc100)
    %45 = cir.call @listen(%43, %44) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc101)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %47 = cir.unary(minus, %46) nsw : !s32i, !s32i loc(#loc102)
    %48 = cir.cmp(eq, %45, %47) : !s32i, !cir.bool loc(#loc371)
    cir.brcond %48 ^bb15, ^bb16 loc(#loc372)
  ^bb15:  // pred: ^bb14
    cir.br ^bb35 loc(#loc104)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc98)
  ^bb17:  // pred: ^bb16
    %49 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    %50 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc106)
    %51 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc107)
    %52 = cir.call @accept(%49, %50, %51) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc108)
    cir.store %52, %3 : !s32i, !cir.ptr<!s32i> loc(#loc373)
    cir.br ^bb18 loc(#loc374)
  ^bb18:  // pred: ^bb17
    %53 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc114)
    %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc114)
    %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc375)
    cir.brcond %56 ^bb19, ^bb20 loc(#loc376)
  ^bb19:  // pred: ^bb18
    cir.br ^bb35 loc(#loc116)
  ^bb20:  // pred: ^bb18
    cir.br ^bb21 loc(#loc112)
  ^bb21:  // pred: ^bb20
    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %58 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc118)
    %59 = cir.cast(bitcast, %58 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc118)
    %60 = cir.const #cir.int<20> : !s32i loc(#loc119)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %62 = cir.binop(sub, %60, %61) nsw : !s32i loc(#loc119)
    %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc119)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc121)
    %65 = cir.call @recv(%57, %59, %63, %64) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc122)
    %66 = cir.cast(integral, %65 : !s64i), !s32i loc(#loc122)
    cir.store %66, %0 : !s32i, !cir.ptr<!s32i> loc(#loc377)
    cir.br ^bb22 loc(#loc378)
  ^bb22:  // pred: ^bb21
    %67 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %68 = cir.const #cir.int<1> : !s32i loc(#loc128)
    %69 = cir.unary(minus, %68) nsw : !s32i, !s32i loc(#loc128)
    %70 = cir.cmp(eq, %67, %69) : !s32i, !cir.bool loc(#loc379)
    cir.brcond %70 ^bb23, ^bb24 loc(#loc129)
  ^bb23:  // pred: ^bb22
    %71 = cir.const #true loc(#loc129)
    cir.br ^bb29(%71 : !cir.bool) loc(#loc129)
  ^bb24:  // pred: ^bb22
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    %73 = cir.const #cir.int<0> : !s32i loc(#loc131)
    %74 = cir.cmp(eq, %72, %73) : !s32i, !cir.bool loc(#loc380)
    cir.brcond %74 ^bb25, ^bb26 loc(#loc129)
  ^bb25:  // pred: ^bb24
    %75 = cir.const #true loc(#loc129)
    cir.br ^bb27(%75 : !cir.bool) loc(#loc129)
  ^bb26:  // pred: ^bb24
    %76 = cir.const #false loc(#loc129)
    cir.br ^bb27(%76 : !cir.bool) loc(#loc129)
  ^bb27(%77: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":104:44)):  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc129)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29(%77 : !cir.bool) loc(#loc129)
  ^bb29(%78: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":104:44)):  // 2 preds: ^bb23, ^bb28
    cir.br ^bb30 loc(#loc129)
  ^bb30:  // pred: ^bb29
    cir.brcond %78 ^bb31, ^bb32 loc(#loc381)
  ^bb31:  // pred: ^bb30
    cir.br ^bb35 loc(#loc133)
  ^bb32:  // pred: ^bb30
    cir.br ^bb33 loc(#loc126)
  ^bb33:  // pred: ^bb32
    %79 = cir.const #cir.int<0> : !s32i loc(#loc134)
    %80 = cir.cast(integral, %79 : !s32i), !s8i loc(#loc134)
    %81 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    %82 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc136)
    %83 = cir.ptr_stride(%82 : !cir.ptr<!s8i>, %81 : !s32i), !cir.ptr<!s8i> loc(#loc136)
    cir.store %80, %83 : !s8i, !cir.ptr<!s8i> loc(#loc382)
    %84 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc137)
    %85 = cir.call @atof(%84) : (!cir.ptr<!s8i>) -> !cir.double side_effect(pure) extra(#fn_attr) loc(#loc138)
    %86 = cir.cast(floating, %85 : !cir.double), !cir.float loc(#loc138)
    cir.store %86, %5 : !cir.float, !cir.ptr<!cir.float> loc(#loc383)
    cir.br ^bb34 loc(#loc54)
  ^bb34:  // pred: ^bb33
    cir.br ^bb3 loc(#loc51)
  ^bb35:  // 6 preds: ^bb3, ^bb7, ^bb11, ^bb15, ^bb19, ^bb31
    cir.br ^bb36 loc(#loc51)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc384)
  ^bb37:  // pred: ^bb36
    %87 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    %88 = cir.const #cir.int<1> : !s32i loc(#loc144)
    %89 = cir.unary(minus, %88) nsw : !s32i, !s32i loc(#loc144)
    %90 = cir.cmp(ne, %87, %89) : !s32i, !cir.bool loc(#loc385)
    cir.brcond %90 ^bb38, ^bb39 loc(#loc386)
  ^bb38:  // pred: ^bb37
    %91 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    %92 = cir.call @close(%91) : (!s32i) -> !s32i loc(#loc147)
    cir.br ^bb39 loc(#loc142)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc142)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc387)
  ^bb41:  // pred: ^bb40
    %93 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    %94 = cir.const #cir.int<1> : !s32i loc(#loc151)
    %95 = cir.unary(minus, %94) nsw : !s32i, !s32i loc(#loc151)
    %96 = cir.cmp(ne, %93, %95) : !s32i, !cir.bool loc(#loc388)
    cir.brcond %96 ^bb42, ^bb43 loc(#loc389)
  ^bb42:  // pred: ^bb41
    %97 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    %98 = cir.call @close(%97) : (!s32i) -> !s32i loc(#loc154)
    cir.br ^bb43 loc(#loc149)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc149)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc49)
  ^bb45:  // pred: ^bb44
    %99 = cir.load %5 : !cir.ptr<!cir.float>, !cir.float loc(#loc155)
    cir.call @badSink(%99) : (!cir.float) -> () loc(#loc156)
    cir.return loc(#loc33)
  } loc(#loc344)
  cir.func no_proto @CWE369_Divide_by_Zero__float_listenSocket_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc391)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc159)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc392)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc161)
    cir.return loc(#loc158)
  } loc(#loc390)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc393)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc165)
  cir.func internal private @goodB2GSink(%arg0: !cir.float loc(fused[#loc168, #loc169])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc396)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc395)
    cir.store %arg0, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc172)
    cir.br ^bb1 loc(#loc397)
  ^bb1:  // pred: ^bb0
    %2 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc175)
    %3 = cir.cast(floating, %2 : !cir.float), !cir.double loc(#loc175)
    %4 = cir.fabs %3 : !cir.double loc(#loc175)
    %5 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc176)
    %6 = cir.cmp(gt, %4, %5) : !cir.double, !cir.bool loc(#loc398)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc399)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc181)
    %8 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc182)
    %9 = cir.cast(floating, %8 : !cir.float), !cir.double loc(#loc182)
    %10 = cir.binop(div, %7, %9) : !cir.double loc(#loc400)
    %11 = cir.cast(float_to_int, %10 : !cir.double), !s32i loc(#loc400)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc396)
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc183)
    cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc184)
    cir.br ^bb4 loc(#loc179)
  ^bb3:  // pred: ^bb1
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc165)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc165)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc185)
    cir.br ^bb4 loc(#loc174)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc174)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc167)
  } loc(#loc394)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc402)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc403)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc404)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc405)
    %4 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc406)
    %5 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc407)
    %6 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc200)
    cir.store %6, %5 : !cir.float, !cir.ptr<!cir.float> loc(#loc408)
    cir.br ^bb1 loc(#loc409)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc193)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc193)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc404)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc195)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc195)
    cir.store %10, %3 : !s32i, !cir.ptr<!s32i> loc(#loc405)
    cir.br ^bb2 loc(#loc410)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc410)
  ^bb3:  // pred: ^bb34
    %11 = cir.const #cir.int<0> : !s32i loc(#loc206)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc206)
    cir.brcond %12 ^bb4, ^bb35 loc(#loc206)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc411)
  ^bb5:  // pred: ^bb4
    %13 = cir.const #cir.int<2> : !s32i loc(#loc209)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc210)
    %15 = cir.const #cir.int<6> : !s32i loc(#loc211)
    %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc212)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc412)
    cir.br ^bb6 loc(#loc413)
  ^bb6:  // pred: ^bb5
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc217)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc218)
    %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc218)
    %20 = cir.cmp(eq, %17, %19) : !s32i, !cir.bool loc(#loc414)
    cir.brcond %20 ^bb7, ^bb8 loc(#loc415)
  ^bb7:  // pred: ^bb6
    cir.br ^bb35 loc(#loc220)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc216)
  ^bb9:  // pred: ^bb8
    %21 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc416)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc223)
    %23 = cir.const #cir.int<16> : !u64i loc(#loc417)
    cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc418)
    %24 = cir.const #cir.int<2> : !s32i loc(#loc228)
    %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc228)
    %26 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
    cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc419)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc230)
    %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc230)
    %29 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc78)
    %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc79)
    cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc420)
    %31 = cir.const #cir.int<27015> : !s32i loc(#loc232)
    %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc232)
    %33 = cir.call @htons(%32) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc233)
    %34 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
    cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc421)
    cir.br ^bb10 loc(#loc422)
  ^bb10:  // pred: ^bb9
    %35 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc238)
    %36 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc423)
    %37 = cir.const #cir.int<16> : !u64i loc(#loc424)
    %38 = cir.cast(integral, %37 : !u64i), !u32i loc(#loc424)
    %39 = cir.call @bind(%35, %36, %38) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc243)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc244)
    %41 = cir.unary(minus, %40) nsw : !s32i, !s32i loc(#loc244)
    %42 = cir.cmp(eq, %39, %41) : !s32i, !cir.bool loc(#loc425)
    cir.brcond %42 ^bb11, ^bb12 loc(#loc426)
  ^bb11:  // pred: ^bb10
    cir.br ^bb35 loc(#loc246)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc237)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc427)
  ^bb14:  // pred: ^bb13
    %43 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc249)
    %44 = cir.const #cir.int<5> : !s32i loc(#loc250)
    %45 = cir.call @listen(%43, %44) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc251)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc252)
    %47 = cir.unary(minus, %46) nsw : !s32i, !s32i loc(#loc252)
    %48 = cir.cmp(eq, %45, %47) : !s32i, !cir.bool loc(#loc428)
    cir.brcond %48 ^bb15, ^bb16 loc(#loc429)
  ^bb15:  // pred: ^bb14
    cir.br ^bb35 loc(#loc254)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc248)
  ^bb17:  // pred: ^bb16
    %49 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc255)
    %50 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc256)
    %51 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc257)
    %52 = cir.call @accept(%49, %50, %51) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc258)
    cir.store %52, %3 : !s32i, !cir.ptr<!s32i> loc(#loc430)
    cir.br ^bb18 loc(#loc431)
  ^bb18:  // pred: ^bb17
    %53 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc263)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc264)
    %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc264)
    %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc432)
    cir.brcond %56 ^bb19, ^bb20 loc(#loc433)
  ^bb19:  // pred: ^bb18
    cir.br ^bb35 loc(#loc266)
  ^bb20:  // pred: ^bb18
    cir.br ^bb21 loc(#loc262)
  ^bb21:  // pred: ^bb20
    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc267)
    %58 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc268)
    %59 = cir.cast(bitcast, %58 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc268)
    %60 = cir.const #cir.int<20> : !s32i loc(#loc269)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc270)
    %62 = cir.binop(sub, %60, %61) nsw : !s32i loc(#loc269)
    %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc269)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc271)
    %65 = cir.call @recv(%57, %59, %63, %64) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc272)
    %66 = cir.cast(integral, %65 : !s64i), !s32i loc(#loc272)
    cir.store %66, %0 : !s32i, !cir.ptr<!s32i> loc(#loc434)
    cir.br ^bb22 loc(#loc435)
  ^bb22:  // pred: ^bb21
    %67 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc277)
    %68 = cir.const #cir.int<1> : !s32i loc(#loc278)
    %69 = cir.unary(minus, %68) nsw : !s32i, !s32i loc(#loc278)
    %70 = cir.cmp(eq, %67, %69) : !s32i, !cir.bool loc(#loc436)
    cir.brcond %70 ^bb23, ^bb24 loc(#loc279)
  ^bb23:  // pred: ^bb22
    %71 = cir.const #true loc(#loc279)
    cir.br ^bb29(%71 : !cir.bool) loc(#loc279)
  ^bb24:  // pred: ^bb22
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc280)
    %73 = cir.const #cir.int<0> : !s32i loc(#loc281)
    %74 = cir.cmp(eq, %72, %73) : !s32i, !cir.bool loc(#loc437)
    cir.brcond %74 ^bb25, ^bb26 loc(#loc279)
  ^bb25:  // pred: ^bb24
    %75 = cir.const #true loc(#loc279)
    cir.br ^bb27(%75 : !cir.bool) loc(#loc279)
  ^bb26:  // pred: ^bb24
    %76 = cir.const #false loc(#loc279)
    cir.br ^bb27(%76 : !cir.bool) loc(#loc279)
  ^bb27(%77: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":220:44)):  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc279)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29(%77 : !cir.bool) loc(#loc279)
  ^bb29(%78: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":220:44)):  // 2 preds: ^bb23, ^bb28
    cir.br ^bb30 loc(#loc279)
  ^bb30:  // pred: ^bb29
    cir.brcond %78 ^bb31, ^bb32 loc(#loc438)
  ^bb31:  // pred: ^bb30
    cir.br ^bb35 loc(#loc283)
  ^bb32:  // pred: ^bb30
    cir.br ^bb33 loc(#loc276)
  ^bb33:  // pred: ^bb32
    %79 = cir.const #cir.int<0> : !s32i loc(#loc284)
    %80 = cir.cast(integral, %79 : !s32i), !s8i loc(#loc284)
    %81 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc285)
    %82 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc286)
    %83 = cir.ptr_stride(%82 : !cir.ptr<!s8i>, %81 : !s32i), !cir.ptr<!s8i> loc(#loc286)
    cir.store %80, %83 : !s8i, !cir.ptr<!s8i> loc(#loc439)
    %84 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc287)
    %85 = cir.call @atof(%84) : (!cir.ptr<!s8i>) -> !cir.double side_effect(pure) extra(#fn_attr) loc(#loc288)
    %86 = cir.cast(floating, %85 : !cir.double), !cir.float loc(#loc288)
    cir.store %86, %5 : !cir.float, !cir.ptr<!cir.float> loc(#loc440)
    cir.br ^bb34 loc(#loc208)
  ^bb34:  // pred: ^bb33
    cir.br ^bb3 loc(#loc205)
  ^bb35:  // 6 preds: ^bb3, ^bb7, ^bb11, ^bb15, ^bb19, ^bb31
    cir.br ^bb36 loc(#loc205)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc441)
  ^bb37:  // pred: ^bb36
    %87 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc293)
    %88 = cir.const #cir.int<1> : !s32i loc(#loc294)
    %89 = cir.unary(minus, %88) nsw : !s32i, !s32i loc(#loc294)
    %90 = cir.cmp(ne, %87, %89) : !s32i, !cir.bool loc(#loc442)
    cir.brcond %90 ^bb38, ^bb39 loc(#loc443)
  ^bb38:  // pred: ^bb37
    %91 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc296)
    %92 = cir.call @close(%91) : (!s32i) -> !s32i loc(#loc297)
    cir.br ^bb39 loc(#loc292)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc292)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc444)
  ^bb41:  // pred: ^bb40
    %93 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc300)
    %94 = cir.const #cir.int<1> : !s32i loc(#loc301)
    %95 = cir.unary(minus, %94) nsw : !s32i, !s32i loc(#loc301)
    %96 = cir.cmp(ne, %93, %95) : !s32i, !cir.bool loc(#loc445)
    cir.brcond %96 ^bb42, ^bb43 loc(#loc446)
  ^bb42:  // pred: ^bb41
    %97 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc303)
    %98 = cir.call @close(%97) : (!s32i) -> !s32i loc(#loc304)
    cir.br ^bb43 loc(#loc299)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc299)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc203)
  ^bb45:  // pred: ^bb44
    %99 = cir.load %5 : !cir.ptr<!cir.float>, !cir.float loc(#loc305)
    cir.call @goodB2GSink(%99) : (!cir.float) -> () loc(#loc306)
    cir.return loc(#loc187)
  } loc(#loc401)
  cir.func internal private @goodG2BSink(%arg0: !cir.float loc(fused[#loc309, #loc310])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc449)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc448)
    cir.store %arg0, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc313)
    cir.br ^bb1 loc(#loc450)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc316)
    %3 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc317)
    %4 = cir.cast(floating, %3 : !cir.float), !cir.double loc(#loc317)
    %5 = cir.binop(div, %2, %4) : !cir.double loc(#loc451)
    %6 = cir.cast(float_to_int, %5 : !cir.double), !s32i loc(#loc451)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc449)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc318)
    cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc319)
    cir.br ^bb2 loc(#loc315)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc308)
  } loc(#loc447)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc453)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc324)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc454)
    %2 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc326)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc455)
    %3 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc328)
    cir.call @goodG2BSink(%3) : (!cir.float) -> () loc(#loc329)
    cir.return loc(#loc321)
  } loc(#loc452)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_41.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":102:1)
#loc14 = loc("/usr/include/stdlib.h":103:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc19 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":46:1)
#loc20 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":53:1)
#loc23 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":50:9)
#loc24 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":50:40)
#loc25 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":47:1)
#loc26 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":48:5)
#loc27 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":52:5)
#loc28 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":50:28)
#loc29 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":50:36)
#loc30 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":51:22)
#loc31 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":51:9)
#loc32 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":55:1)
#loc33 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":130:1)
#loc34 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":65:9)
#loc35 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":65:13)
#loc36 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":66:9)
#loc37 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":66:28)
#loc38 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":67:9)
#loc39 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":67:31)
#loc40 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":68:9)
#loc41 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":68:31)
#loc42 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":69:9)
#loc43 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":69:41)
#loc44 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":57:5)
#loc45 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":57:11)
#loc46 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":59:12)
#loc47 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":59:5)
#loc48 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":60:5)
#loc49 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":128:5)
#loc50 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":70:9)
#loc51 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":113:17)
#loc52 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":113:16)
#loc53 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":71:9)
#loc54 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":112:9)
#loc55 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":79:35)
#loc56 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":79:44)
#loc57 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":79:57)
#loc58 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":79:28)
#loc59 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":79:13)
#loc60 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":79:68)
#loc61 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":80:13)
#loc62 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":83:13)
#loc63 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":80:17)
#loc64 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":80:33)
#loc65 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":81:13)
#loc66 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":82:17)
#loc67 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":84:20)
#loc68 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":84:21)
#loc69 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":84:30)
#loc70 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":84:33)
#loc71 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":84:47)
#loc72 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":84:13)
#loc73 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":84:48)
#loc74 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":85:34)
#loc75 = loc("/usr/include/netinet/in.h":249:5)
#loc76 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":85:13)
#loc77 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":86:39)
#loc78 = loc("/usr/include/netinet/in.h":251:20)
#loc79 = loc("/usr/include/netinet/in.h":33:15)
#loc80 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":86:13)
#loc81 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":87:38)
#loc82 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":87:32)
#loc83 = loc("/usr/include/netinet/in.h":250:15)
#loc84 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":87:13)
#loc85 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":87:46)
#loc86 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":88:13)
#loc87 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":91:13)
#loc88 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":88:22)
#loc89 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":88:54)
#loc90 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":88:55)
#loc91 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":88:64)
#loc92 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":88:78)
#loc93 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":88:17)
#loc94 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":88:84)
#loc95 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":89:13)
#loc96 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":90:17)
#loc97 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":92:13)
#loc98 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":95:13)
#loc99 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":92:24)
#loc100 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":92:38)
#loc101 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":92:17)
#loc102 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":92:57)
#loc103 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":93:13)
#loc104 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":94:17)
#loc105 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":96:35)
#loc106 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":96:49)
#loc107 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":96:55)
#loc108 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":96:28)
#loc109 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":96:13)
#loc110 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":96:59)
#loc111 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":97:13)
#loc112 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":100:13)
#loc113 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":97:17)
#loc114 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":97:33)
#loc115 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":98:13)
#loc116 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":99:17)
#loc117 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":103:31)
#loc118 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":103:45)
#loc119 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":103:58)
#loc120 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":103:76)
#loc121 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":103:79)
#loc122 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":103:26)
#loc123 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":103:13)
#loc124 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":103:80)
#loc125 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":104:13)
#loc126 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":107:13)
#loc127 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":104:17)
#loc128 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":104:31)
#loc130 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":104:47)
#loc131 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":104:61)
#loc132 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":105:13)
#loc133 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":106:17)
#loc134 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":109:39)
#loc135 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":109:25)
#loc136 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":109:13)
#loc137 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":111:32)
#loc138 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":111:27)
#loc139 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":111:13)
#loc140 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":111:43)
#loc141 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":114:9)
#loc142 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":117:9)
#loc143 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":114:13)
#loc144 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":114:29)
#loc145 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":115:9)
#loc146 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":116:26)
#loc147 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":116:13)
#loc148 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":118:9)
#loc149 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":121:9)
#loc150 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":118:13)
#loc151 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":118:29)
#loc152 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":119:9)
#loc153 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":120:26)
#loc154 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":120:13)
#loc155 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":129:13)
#loc156 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":129:5)
#loc157 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":248:1)
#loc158 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":252:1)
#loc159 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":250:5)
#loc160 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":250:13)
#loc161 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":251:5)
#loc162 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":251:13)
#loc163 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc164 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc165 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":167:19)
#loc166 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":157:1)
#loc167 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":169:1)
#loc170 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":162:9)
#loc171 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":162:40)
#loc172 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":158:1)
#loc173 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":160:5)
#loc174 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":168:5)
#loc175 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":160:13)
#loc176 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":160:21)
#loc177 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":160:8)
#loc178 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":161:5)
#loc179 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":164:5)
#loc180 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":166:5)
#loc181 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":162:28)
#loc182 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":162:36)
#loc183 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":163:22)
#loc184 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":163:9)
#loc185 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":167:9)
#loc186 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":171:1)
#loc187 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":246:1)
#loc188 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":181:9)
#loc189 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":181:13)
#loc190 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":182:9)
#loc191 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":182:28)
#loc192 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":183:9)
#loc193 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":183:31)
#loc194 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":184:9)
#loc195 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":184:31)
#loc196 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":185:9)
#loc197 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":185:41)
#loc198 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":173:5)
#loc199 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":173:11)
#loc200 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":175:12)
#loc201 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":175:5)
#loc202 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":176:5)
#loc203 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":244:5)
#loc204 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":186:9)
#loc205 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":229:17)
#loc206 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":229:16)
#loc207 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":187:9)
#loc208 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":228:9)
#loc209 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":195:35)
#loc210 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":195:44)
#loc211 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":195:57)
#loc212 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":195:28)
#loc213 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":195:13)
#loc214 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":195:68)
#loc215 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":196:13)
#loc216 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":199:13)
#loc217 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":196:17)
#loc218 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":196:33)
#loc219 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":197:13)
#loc220 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":198:17)
#loc221 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":200:20)
#loc222 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":200:21)
#loc223 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":200:30)
#loc224 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":200:33)
#loc225 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":200:47)
#loc226 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":200:13)
#loc227 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":200:48)
#loc228 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":201:34)
#loc229 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":201:13)
#loc230 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":202:39)
#loc231 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":202:13)
#loc232 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":203:38)
#loc233 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":203:32)
#loc234 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":203:13)
#loc235 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":203:46)
#loc236 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":204:13)
#loc237 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":207:13)
#loc238 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":204:22)
#loc239 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":204:54)
#loc240 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":204:55)
#loc241 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":204:64)
#loc242 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":204:78)
#loc243 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":204:17)
#loc244 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":204:84)
#loc245 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":205:13)
#loc246 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":206:17)
#loc247 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":208:13)
#loc248 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":211:13)
#loc249 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":208:24)
#loc250 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":208:38)
#loc251 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":208:17)
#loc252 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":208:57)
#loc253 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":209:13)
#loc254 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":210:17)
#loc255 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":212:35)
#loc256 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":212:49)
#loc257 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":212:55)
#loc258 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":212:28)
#loc259 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":212:13)
#loc260 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":212:59)
#loc261 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":213:13)
#loc262 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":216:13)
#loc263 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":213:17)
#loc264 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":213:33)
#loc265 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":214:13)
#loc266 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":215:17)
#loc267 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":219:31)
#loc268 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":219:45)
#loc269 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":219:58)
#loc270 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":219:76)
#loc271 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":219:79)
#loc272 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":219:26)
#loc273 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":219:13)
#loc274 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":219:80)
#loc275 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":220:13)
#loc276 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":223:13)
#loc277 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":220:17)
#loc278 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":220:31)
#loc280 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":220:47)
#loc281 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":220:61)
#loc282 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":221:13)
#loc283 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":222:17)
#loc284 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":225:39)
#loc285 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":225:25)
#loc286 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":225:13)
#loc287 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":227:32)
#loc288 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":227:27)
#loc289 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":227:13)
#loc290 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":227:43)
#loc291 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":230:9)
#loc292 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":233:9)
#loc293 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":230:13)
#loc294 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":230:29)
#loc295 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":231:9)
#loc296 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":232:26)
#loc297 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":232:13)
#loc298 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":234:9)
#loc299 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":237:9)
#loc300 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":234:13)
#loc301 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":234:29)
#loc302 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":235:9)
#loc303 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":236:26)
#loc304 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":236:13)
#loc305 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":245:17)
#loc306 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":245:5)
#loc307 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":137:1)
#loc308 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":144:1)
#loc311 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":141:9)
#loc312 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":141:40)
#loc313 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":138:1)
#loc314 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":139:5)
#loc315 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":143:5)
#loc316 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":141:28)
#loc317 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":141:36)
#loc318 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":142:22)
#loc319 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":142:9)
#loc320 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":146:1)
#loc321 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":154:1)
#loc322 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":148:5)
#loc323 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":148:11)
#loc324 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":150:12)
#loc325 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":150:5)
#loc326 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":152:12)
#loc327 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":152:5)
#loc328 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":153:17)
#loc329 = loc("CWE369_Divide_by_Zero__float_listenSocket_41.c":153:5)
#loc330 = loc(fused[#loc1, #loc2])
#loc331 = loc(fused[#loc3, #loc4])
#loc332 = loc(fused[#loc5, #loc6])
#loc333 = loc(fused[#loc7, #loc8])
#loc334 = loc(fused[#loc9, #loc10])
#loc335 = loc(fused[#loc11, #loc12])
#loc336 = loc(fused[#loc13, #loc14])
#loc337 = loc(fused[#loc15, #loc16])
#loc338 = loc(fused[#loc17, #loc18])
#loc339 = loc(fused[#loc19, #loc20])
#loc341 = loc(fused[#loc23, #loc24])
#loc342 = loc(fused[#loc26, #loc27])
#loc343 = loc(fused[#loc28, #loc29])
#loc344 = loc(fused[#loc32, #loc33])
#loc345 = loc(fused[#loc34, #loc35])
#loc346 = loc(fused[#loc36, #loc37])
#loc347 = loc(fused[#loc38, #loc39])
#loc348 = loc(fused[#loc40, #loc41])
#loc349 = loc(fused[#loc42, #loc43])
#loc350 = loc(fused[#loc44, #loc45])
#loc351 = loc(fused[#loc47, #loc46])
#loc352 = loc(fused[#loc48, #loc49])
#loc353 = loc(fused[#loc50, #loc51])
#loc354 = loc(fused[#loc53, #loc54])
#loc355 = loc(fused[#loc59, #loc60])
#loc356 = loc(fused[#loc61, #loc62])
#loc357 = loc(fused[#loc63, #loc64])
#loc358 = loc(fused[#loc65, #loc62])
#loc359 = loc(fused[#loc67, #loc68])
#loc360 = loc(fused[#loc70, #loc71])
#loc361 = loc(fused[#loc72, #loc73])
#loc362 = loc(fused[#loc76, #loc74])
#loc363 = loc(fused[#loc80, #loc77])
#loc364 = loc(fused[#loc84, #loc85])
#loc365 = loc(fused[#loc86, #loc87])
#loc366 = loc(fused[#loc89, #loc90])
#loc367 = loc(fused[#loc91, #loc92])
#loc368 = loc(fused[#loc93, #loc94])
#loc369 = loc(fused[#loc95, #loc87])
#loc370 = loc(fused[#loc97, #loc98])
#loc371 = loc(fused[#loc101, #loc102])
#loc372 = loc(fused[#loc103, #loc98])
#loc373 = loc(fused[#loc109, #loc110])
#loc374 = loc(fused[#loc111, #loc112])
#loc375 = loc(fused[#loc113, #loc114])
#loc376 = loc(fused[#loc115, #loc112])
#loc377 = loc(fused[#loc123, #loc124])
#loc378 = loc(fused[#loc125, #loc126])
#loc379 = loc(fused[#loc127, #loc128])
#loc380 = loc(fused[#loc130, #loc131])
#loc381 = loc(fused[#loc132, #loc126])
#loc382 = loc(fused[#loc136, #loc134])
#loc383 = loc(fused[#loc139, #loc140])
#loc384 = loc(fused[#loc141, #loc142])
#loc385 = loc(fused[#loc143, #loc144])
#loc386 = loc(fused[#loc145, #loc142])
#loc387 = loc(fused[#loc148, #loc149])
#loc388 = loc(fused[#loc150, #loc151])
#loc389 = loc(fused[#loc152, #loc149])
#loc390 = loc(fused[#loc157, #loc158])
#loc391 = loc(fused[#loc159, #loc160])
#loc392 = loc(fused[#loc161, #loc162])
#loc393 = loc(fused[#loc163, #loc164])
#loc394 = loc(fused[#loc166, #loc167])
#loc396 = loc(fused[#loc170, #loc171])
#loc397 = loc(fused[#loc173, #loc174])
#loc398 = loc(fused[#loc177, #loc176])
#loc399 = loc(fused[#loc178, #loc179, #loc180, #loc174])
#loc400 = loc(fused[#loc181, #loc182])
#loc401 = loc(fused[#loc186, #loc187])
#loc402 = loc(fused[#loc188, #loc189])
#loc403 = loc(fused[#loc190, #loc191])
#loc404 = loc(fused[#loc192, #loc193])
#loc405 = loc(fused[#loc194, #loc195])
#loc406 = loc(fused[#loc196, #loc197])
#loc407 = loc(fused[#loc198, #loc199])
#loc408 = loc(fused[#loc201, #loc200])
#loc409 = loc(fused[#loc202, #loc203])
#loc410 = loc(fused[#loc204, #loc205])
#loc411 = loc(fused[#loc207, #loc208])
#loc412 = loc(fused[#loc213, #loc214])
#loc413 = loc(fused[#loc215, #loc216])
#loc414 = loc(fused[#loc217, #loc218])
#loc415 = loc(fused[#loc219, #loc216])
#loc416 = loc(fused[#loc221, #loc222])
#loc417 = loc(fused[#loc224, #loc225])
#loc418 = loc(fused[#loc226, #loc227])
#loc419 = loc(fused[#loc229, #loc228])
#loc420 = loc(fused[#loc231, #loc230])
#loc421 = loc(fused[#loc234, #loc235])
#loc422 = loc(fused[#loc236, #loc237])
#loc423 = loc(fused[#loc239, #loc240])
#loc424 = loc(fused[#loc241, #loc242])
#loc425 = loc(fused[#loc243, #loc244])
#loc426 = loc(fused[#loc245, #loc237])
#loc427 = loc(fused[#loc247, #loc248])
#loc428 = loc(fused[#loc251, #loc252])
#loc429 = loc(fused[#loc253, #loc248])
#loc430 = loc(fused[#loc259, #loc260])
#loc431 = loc(fused[#loc261, #loc262])
#loc432 = loc(fused[#loc263, #loc264])
#loc433 = loc(fused[#loc265, #loc262])
#loc434 = loc(fused[#loc273, #loc274])
#loc435 = loc(fused[#loc275, #loc276])
#loc436 = loc(fused[#loc277, #loc278])
#loc437 = loc(fused[#loc280, #loc281])
#loc438 = loc(fused[#loc282, #loc276])
#loc439 = loc(fused[#loc286, #loc284])
#loc440 = loc(fused[#loc289, #loc290])
#loc441 = loc(fused[#loc291, #loc292])
#loc442 = loc(fused[#loc293, #loc294])
#loc443 = loc(fused[#loc295, #loc292])
#loc444 = loc(fused[#loc298, #loc299])
#loc445 = loc(fused[#loc300, #loc301])
#loc446 = loc(fused[#loc302, #loc299])
#loc447 = loc(fused[#loc307, #loc308])
#loc449 = loc(fused[#loc311, #loc312])
#loc450 = loc(fused[#loc314, #loc315])
#loc451 = loc(fused[#loc316, #loc317])
#loc452 = loc(fused[#loc320, #loc321])
#loc453 = loc(fused[#loc322, #loc323])
#loc454 = loc(fused[#loc325, #loc324])
#loc455 = loc(fused[#loc327, #loc326])
