!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc59 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":99:10)
#loc60 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":99:14)
#loc61 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":99:20)
#loc62 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":99:32)
#loc169 = loc(fused[#loc59, #loc60])
#loc170 = loc(fused[#loc61, #loc62])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE467_Use_of_sizeof_on_Pointer_Type/CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc145)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc146)
  cir.func private @printIntLine(!s32i) loc(#loc147)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc148)
  cir.func no_proto @CWE467_Use_of_sizeof_on_Pointer_Type__int_06_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc13)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc14)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc151)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["badInt", init] {alignment = 8 : i64} loc(#loc154)
          %4 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc19)
          cir.store %4, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc154)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc20)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc155)
          %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc156)
          cir.store %8, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc157)
          cir.scope {
            %16 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc27)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc28)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc28)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s32i>, !cir.bool loc(#loc159)
            cir.if %19 {
              %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc30)
              %21 = cir.const #cir.int<1> : !s32i loc(#loc31)
              %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc32)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc30)
            } loc(#loc160)
          } loc(#loc158)
          %9 = cir.const #cir.int<5> : !s32i loc(#loc33)
          %10 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc34)
          cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc161)
          %11 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc36)
          %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc37)
          cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc38)
          %13 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc39)
          %14 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc40)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc40)
          cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc39)
        } loc(#loc153)
      } loc(#loc152)
    } loc(#loc150)
    cir.return loc(#loc10)
  } loc(#loc149)
  cir.func no_proto @CWE467_Use_of_sizeof_on_Pointer_Type__int_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc163)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc164)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    cir.return loc(#loc42)
  } loc(#loc162)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc165)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc166)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc167)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc56)
  cir.func @main(%arg0: !s32i loc(fused[#loc59, #loc60]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc61, #loc62])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc169)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc170)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc58)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc63)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc63)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc64)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc65)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc65)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc66)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc53)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %8 = cir.get_global @CWE467_Use_of_sizeof_on_Pointer_Type__int_06_good : !cir.ptr<!cir.func<!void ()>> loc(#loc171)
    cir.call @CWE467_Use_of_sizeof_on_Pointer_Type__int_06_good() : () -> () loc(#loc68)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc54)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc55)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %13 = cir.get_global @CWE467_Use_of_sizeof_on_Pointer_Type__int_06_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc172)
    cir.call @CWE467_Use_of_sizeof_on_Pointer_Type__int_06_bad() : () -> () loc(#loc72)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc56)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc75)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc173)
    cir.return %17 : !s32i loc(#loc173)
  } loc(#loc168)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc77)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc82)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc83)
      %2 = cir.cmp(ne, %0, %1) : !s32i, !cir.bool loc(#loc176)
      cir.if %2 {
        %3 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc77)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc77)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc87)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["goodInt", init] {alignment = 8 : i64} loc(#loc179)
          %4 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc91)
          cir.store %4, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc179)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc92)
          %6 = cir.const #cir.int<4> : !u64i loc(#loc180)
          %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc92)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc181)
          cir.store %8, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc182)
          cir.scope {
            %16 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc99)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc100)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc100)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s32i>, !cir.bool loc(#loc184)
            cir.if %19 {
              %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc102)
              %21 = cir.const #cir.int<1> : !s32i loc(#loc103)
              %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc104)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc102)
            } loc(#loc185)
          } loc(#loc183)
          %9 = cir.const #cir.int<6> : !s32i loc(#loc105)
          %10 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc106)
          cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc186)
          %11 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc108)
          %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc109)
          cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc110)
          %13 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc111)
          %14 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc112)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc112)
          cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc111)
        } loc(#loc178)
      } loc(#loc177)
    } loc(#loc175)
    cir.return loc(#loc79)
  } loc(#loc174)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc117)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc118)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc189)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["goodInt", init] {alignment = 8 : i64} loc(#loc192)
          %4 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc123)
          cir.store %4, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc192)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc124)
          %6 = cir.const #cir.int<4> : !u64i loc(#loc193)
          %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc124)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc194)
          cir.store %8, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc195)
          cir.scope {
            %16 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc131)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc132)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc132)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s32i>, !cir.bool loc(#loc197)
            cir.if %19 {
              %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc134)
              %21 = cir.const #cir.int<1> : !s32i loc(#loc135)
              %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc136)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc134)
            } loc(#loc198)
          } loc(#loc196)
          %9 = cir.const #cir.int<6> : !s32i loc(#loc137)
          %10 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc138)
          cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc199)
          %11 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc140)
          %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc141)
          cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc142)
          %13 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc143)
          %14 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc144)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc144)
          cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc143)
        } loc(#loc191)
      } loc(#loc190)
    } loc(#loc188)
    cir.return loc(#loc114)
  } loc(#loc187)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE467_Use_of_sizeof_on_Pointer_Type/CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":25:1)
#loc10 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":39:1)
#loc11 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":27:5)
#loc12 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":38:5)
#loc13 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":27:8)
#loc14 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":27:27)
#loc15 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":28:5)
#loc16 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":29:9)
#loc17 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":37:9)
#loc18 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":30:13)
#loc19 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":30:28)
#loc20 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":32:29)
#loc21 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":32:36)
#loc22 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":32:49)
#loc23 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":32:50)
#loc24 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":32:13)
#loc25 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":33:13)
#loc26 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":33:43)
#loc27 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":33:17)
#loc28 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":33:27)
#loc29 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":33:33)
#loc30 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":33:34)
#loc31 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":33:40)
#loc32 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":33:39)
#loc33 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":34:23)
#loc34 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":34:14)
#loc35 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":34:13)
#loc36 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":35:27)
#loc37 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":35:26)
#loc38 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":35:13)
#loc39 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":36:13)
#loc40 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":36:18)
#loc41 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":84:1)
#loc42 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":88:1)
#loc43 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":86:5)
#loc44 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":86:11)
#loc45 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":87:5)
#loc46 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":87:11)
#loc47 = loc("/usr/include/stdlib.h":575:1)
#loc48 = loc("/usr/include/stdlib.h":575:41)
#loc49 = loc("/usr/include/time.h":76:1)
#loc50 = loc("/usr/include/time.h":76:38)
#loc51 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc52 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc53 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":104:15)
#loc54 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":106:15)
#loc55 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":109:15)
#loc56 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":111:15)
#loc57 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":99:1)
#loc58 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":114:1)
#loc63 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":100:1)
#loc64 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":102:27)
#loc65 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":102:22)
#loc66 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":102:5)
#loc67 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":104:5)
#loc68 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":105:5)
#loc69 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":105:55)
#loc70 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":106:5)
#loc71 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":109:5)
#loc72 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":110:5)
#loc73 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":110:54)
#loc74 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":111:5)
#loc75 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":113:12)
#loc76 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":113:5)
#loc77 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":51:19)
#loc78 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":46:1)
#loc79 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":65:1)
#loc80 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":48:5)
#loc81 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":64:5)
#loc82 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":48:8)
#loc83 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":48:27)
#loc84 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":49:5)
#loc85 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":52:5)
#loc86 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":54:5)
#loc87 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":51:9)
#loc88 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":55:9)
#loc89 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":63:9)
#loc90 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":56:13)
#loc91 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":56:29)
#loc92 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":58:30)
#loc93 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":58:37)
#loc94 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":58:52)
#loc95 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":58:53)
#loc96 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":58:13)
#loc97 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":59:13)
#loc98 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":59:44)
#loc99 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":59:17)
#loc100 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":59:28)
#loc101 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":59:34)
#loc102 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":59:35)
#loc103 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":59:41)
#loc104 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":59:40)
#loc105 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":60:24)
#loc106 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":60:14)
#loc107 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":60:13)
#loc108 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":61:27)
#loc109 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":61:26)
#loc110 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":61:13)
#loc111 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":62:13)
#loc112 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":62:18)
#loc113 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":68:1)
#loc114 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":82:1)
#loc115 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":70:5)
#loc116 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":81:5)
#loc117 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":70:8)
#loc118 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":70:27)
#loc119 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":71:5)
#loc120 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":72:9)
#loc121 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":80:9)
#loc122 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":73:13)
#loc123 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":73:29)
#loc124 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":75:30)
#loc125 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":75:37)
#loc126 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":75:52)
#loc127 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":75:53)
#loc128 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":75:13)
#loc129 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":76:13)
#loc130 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":76:44)
#loc131 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":76:17)
#loc132 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":76:28)
#loc133 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":76:34)
#loc134 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":76:35)
#loc135 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":76:41)
#loc136 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":76:40)
#loc137 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":77:24)
#loc138 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":77:14)
#loc139 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":77:13)
#loc140 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":78:27)
#loc141 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":78:26)
#loc142 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":78:13)
#loc143 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":79:13)
#loc144 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__int_06.c":79:18)
#loc145 = loc(fused[#loc1, #loc2])
#loc146 = loc(fused[#loc3, #loc4])
#loc147 = loc(fused[#loc5, #loc6])
#loc148 = loc(fused[#loc7, #loc8])
#loc149 = loc(fused[#loc9, #loc10])
#loc150 = loc(fused[#loc11, #loc12])
#loc151 = loc(fused[#loc13, #loc14])
#loc152 = loc(fused[#loc15, #loc12])
#loc153 = loc(fused[#loc16, #loc17])
#loc154 = loc(fused[#loc18, #loc19])
#loc155 = loc(fused[#loc21, #loc22])
#loc156 = loc(fused[#loc20, #loc23])
#loc157 = loc(fused[#loc24, #loc23])
#loc158 = loc(fused[#loc25, #loc26])
#loc159 = loc(fused[#loc27, #loc28])
#loc160 = loc(fused[#loc29, #loc26])
#loc161 = loc(fused[#loc35, #loc33])
#loc162 = loc(fused[#loc41, #loc42])
#loc163 = loc(fused[#loc43, #loc44])
#loc164 = loc(fused[#loc45, #loc46])
#loc165 = loc(fused[#loc47, #loc48])
#loc166 = loc(fused[#loc49, #loc50])
#loc167 = loc(fused[#loc51, #loc52])
#loc168 = loc(fused[#loc57, #loc58])
#loc171 = loc(fused[#loc68, #loc69])
#loc172 = loc(fused[#loc72, #loc73])
#loc173 = loc(fused[#loc76, #loc75])
#loc174 = loc(fused[#loc78, #loc79])
#loc175 = loc(fused[#loc80, #loc81])
#loc176 = loc(fused[#loc82, #loc83])
#loc177 = loc(fused[#loc84, #loc85, #loc86, #loc81])
#loc178 = loc(fused[#loc88, #loc89])
#loc179 = loc(fused[#loc90, #loc91])
#loc180 = loc(fused[#loc93, #loc94])
#loc181 = loc(fused[#loc92, #loc95])
#loc182 = loc(fused[#loc96, #loc95])
#loc183 = loc(fused[#loc97, #loc98])
#loc184 = loc(fused[#loc99, #loc100])
#loc185 = loc(fused[#loc101, #loc98])
#loc186 = loc(fused[#loc107, #loc105])
#loc187 = loc(fused[#loc113, #loc114])
#loc188 = loc(fused[#loc115, #loc116])
#loc189 = loc(fused[#loc117, #loc118])
#loc190 = loc(fused[#loc119, #loc116])
#loc191 = loc(fused[#loc120, #loc121])
#loc192 = loc(fused[#loc122, #loc123])
#loc193 = loc(fused[#loc125, #loc126])
#loc194 = loc(fused[#loc124, #loc127])
#loc195 = loc(fused[#loc128, #loc127])
#loc196 = loc(fused[#loc129, #loc130])
#loc197 = loc(fused[#loc131, #loc132])
#loc198 = loc(fused[#loc133, #loc130])
#loc199 = loc(fused[#loc139, #loc137])
