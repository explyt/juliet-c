!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc8 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":22:22)
#loc9 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":22:26)
#loc42 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":68:26)
#loc43 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":68:30)
#loc78 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":47:26)
#loc79 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":47:30)
#loc106 = loc(fused[#loc8, #loc9])
#loc119 = loc(fused[#loc42, #loc43])
#loc131 = loc(fused[#loc78, #loc79])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fscanf_sub_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc103)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc104)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func internal private @badSource(%arg0: !s32i loc(fused[#loc8, #loc9])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc106)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc7)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc10)
    %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc11)
    %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc104)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc12)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc11)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc13)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc107)
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    cir.return %9 : !s32i loc(#loc107)
  } loc(#loc105)
  cir.func private @printIntLine(!s32i) loc(#loc108)
  cir.func no_proto @CWE191_Integer_Underflow__int_fscanf_sub_42_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc110)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc21)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc111)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc23)
    %3 = cir.call @badSource(%2) : (!s32i) -> !s32i loc(#loc24)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc112)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc114)
      %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc31)
      %6 = cir.const #cir.int<1> : !s32i loc(#loc30)
      %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc31)
      cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc114)
      %8 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc32)
      cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc33)
    } loc(#loc113)
    cir.return loc(#loc18)
  } loc(#loc109)
  cir.func no_proto @CWE191_Integer_Underflow__int_fscanf_sub_42_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc116)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc36)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc117)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc38)
    cir.return loc(#loc35)
  } loc(#loc115)
  cir.func internal private @goodB2GSource(%arg0: !s32i loc(fused[#loc42, #loc43])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc119)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc41)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc44)
    %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc45)
    %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc104)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc46)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc47)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc47)
    %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc45)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc48)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc120)
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc120)
    cir.return %9 : !s32i loc(#loc120)
  } loc(#loc118)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc121)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform subtraction.\00" : !cir.array<!s8i x 48>> : !cir.array<!s8i x 48> {alignment = 1 : i64} loc(#loc52)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc123)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc57)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc124)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc59)
    %3 = cir.call @goodB2GSource(%2) : (!s32i) -> !s32i loc(#loc60)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc125)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc65)
      %5 = cir.const #cir.int<2147483647> : !s32i loc(#loc66)
      %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc66)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc66)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc66)
      %9 = cir.cmp(gt, %4, %8) : !s32i, !cir.bool loc(#loc127)
      cir.if %9 {
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc129)
        %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc72)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc71)
        %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc72)
        cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc129)
        %14 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc73)
        cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc74)
      } else {
        %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc52)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc52)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc75)
      } loc(#loc128)
    } loc(#loc126)
    cir.return loc(#loc54)
  } loc(#loc122)
  cir.func internal private @goodG2BSource(%arg0: !s32i loc(fused[#loc78, #loc79])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc131)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc77)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc80)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc81)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc82)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc132)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc84)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc133)
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    cir.return %5 : !s32i loc(#loc133)
  } loc(#loc130)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc135)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc90)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc136)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    %3 = cir.call @goodG2BSource(%2) : (!s32i) -> !s32i loc(#loc93)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc137)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc139)
      %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc100)
      %6 = cir.const #cir.int<1> : !s32i loc(#loc99)
      %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc100)
      cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc139)
      %8 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc101)
      cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc102)
    } loc(#loc138)
    cir.return loc(#loc87)
  } loc(#loc134)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fscanf_sub_42.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":25:19)
#loc6 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":22:1)
#loc7 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":27:1)
#loc10 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":23:1)
#loc11 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":25:5)
#loc12 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":25:12)
#loc13 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":26:12)
#loc14 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":26:5)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc17 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":29:1)
#loc18 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":40:1)
#loc19 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":31:5)
#loc20 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":31:9)
#loc21 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":33:12)
#loc22 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":33:5)
#loc23 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":34:22)
#loc24 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":34:12)
#loc25 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":34:5)
#loc26 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":34:26)
#loc27 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":35:5)
#loc28 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":39:5)
#loc29 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":37:9)
#loc30 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":37:29)
#loc31 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":37:22)
#loc32 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":38:22)
#loc33 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":38:9)
#loc34 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":93:1)
#loc35 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":97:1)
#loc36 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":95:5)
#loc37 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":95:13)
#loc38 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":96:5)
#loc39 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":96:13)
#loc40 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":68:1)
#loc41 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":73:1)
#loc44 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":69:1)
#loc45 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":71:5)
#loc46 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":71:12)
#loc47 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":71:19)
#loc48 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":72:12)
#loc49 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":72:5)
#loc50 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc51 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc52 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":89:19)
#loc53 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":75:1)
#loc54 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":91:1)
#loc55 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":77:5)
#loc56 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":77:9)
#loc57 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":79:12)
#loc58 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":79:5)
#loc59 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":80:26)
#loc60 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":80:12)
#loc61 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":80:5)
#loc62 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":80:30)
#loc63 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":82:5)
#loc64 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":90:5)
#loc65 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":82:9)
#loc66 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":82:16)
#loc67 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":83:5)
#loc68 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":86:5)
#loc69 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":88:5)
#loc70 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":84:9)
#loc71 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":84:29)
#loc72 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":84:22)
#loc73 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":85:22)
#loc74 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":85:9)
#loc75 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":89:9)
#loc76 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":47:1)
#loc77 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":52:1)
#loc80 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":48:1)
#loc81 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":50:13)
#loc82 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":50:12)
#loc83 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":50:5)
#loc84 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":51:12)
#loc85 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":51:5)
#loc86 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":54:1)
#loc87 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":65:1)
#loc88 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":56:5)
#loc89 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":56:9)
#loc90 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":58:12)
#loc91 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":58:5)
#loc92 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":59:26)
#loc93 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":59:12)
#loc94 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":59:5)
#loc95 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":59:30)
#loc96 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":60:5)
#loc97 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":64:5)
#loc98 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":62:9)
#loc99 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":62:29)
#loc100 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":62:22)
#loc101 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":63:22)
#loc102 = loc("CWE191_Integer_Underflow__int_fscanf_sub_42.c":63:9)
#loc103 = loc(fused[#loc1, #loc2])
#loc104 = loc(fused[#loc3, #loc4])
#loc105 = loc(fused[#loc6, #loc7])
#loc107 = loc(fused[#loc14, #loc13])
#loc108 = loc(fused[#loc15, #loc16])
#loc109 = loc(fused[#loc17, #loc18])
#loc110 = loc(fused[#loc19, #loc20])
#loc111 = loc(fused[#loc22, #loc21])
#loc112 = loc(fused[#loc25, #loc26])
#loc113 = loc(fused[#loc27, #loc28])
#loc114 = loc(fused[#loc29, #loc30])
#loc115 = loc(fused[#loc34, #loc35])
#loc116 = loc(fused[#loc36, #loc37])
#loc117 = loc(fused[#loc38, #loc39])
#loc118 = loc(fused[#loc40, #loc41])
#loc120 = loc(fused[#loc49, #loc48])
#loc121 = loc(fused[#loc50, #loc51])
#loc122 = loc(fused[#loc53, #loc54])
#loc123 = loc(fused[#loc55, #loc56])
#loc124 = loc(fused[#loc58, #loc57])
#loc125 = loc(fused[#loc61, #loc62])
#loc126 = loc(fused[#loc63, #loc64])
#loc127 = loc(fused[#loc65, #loc66])
#loc128 = loc(fused[#loc67, #loc68, #loc69, #loc64])
#loc129 = loc(fused[#loc70, #loc71])
#loc130 = loc(fused[#loc76, #loc77])
#loc132 = loc(fused[#loc83, #loc81])
#loc133 = loc(fused[#loc85, #loc84])
#loc134 = loc(fused[#loc86, #loc87])
#loc135 = loc(fused[#loc88, #loc89])
#loc136 = loc(fused[#loc91, #loc90])
#loc137 = loc(fused[#loc94, #loc95])
#loc138 = loc(fused[#loc96, #loc97])
#loc139 = loc(fused[#loc98, #loc99])
