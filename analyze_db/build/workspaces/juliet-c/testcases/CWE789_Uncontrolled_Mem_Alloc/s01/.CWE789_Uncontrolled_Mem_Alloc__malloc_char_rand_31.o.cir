!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":113:45)
#true = #cir.bool<true> : !cir.bool
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc171)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc172)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc173)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc174)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc175)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc176)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc14)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc178)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc179)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc180)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc181)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc25)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc25)
    cir.store %5, %3 : !u64i, !cir.ptr<!u64i> loc(#loc182)
    %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc27)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc27)
    cir.store %7, %3 : !u64i, !cir.ptr<!u64i> loc(#loc183)
    cir.br ^bb1 loc(#loc184)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc18)
    cir.store %8, %0 : !u64i, !cir.ptr<!u64i> loc(#loc178)
    %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc20)
    cir.store %9, %1 : !u64i, !cir.ptr<!u64i> loc(#loc179)
    cir.br ^bb2 loc(#loc185)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc186)
  ^bb3:  // pred: ^bb2
    %10 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc36)
    %11 = cir.const #cir.int<5> : !u64i loc(#loc187)
    %12 = cir.cmp(gt, %10, %11) : !u64i, !cir.bool loc(#loc188)
    cir.brcond %12 ^bb4, ^bb9 loc(#loc189)
  ^bb4:  // pred: ^bb3
    %13 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc42)
    %14 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc43)
    %15 = cir.const #cir.int<1> : !u64i loc(#loc190)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc191)
    %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc42)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc192)
    cir.store %18, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc193)
    cir.br ^bb5 loc(#loc194)
  ^bb5:  // pred: ^bb4
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc51)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc51)
    %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc195)
    cir.brcond %22 ^bb6, ^bb7 loc(#loc196)
  ^bb6:  // pred: ^bb5
    %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc53)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc55)
    cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc53)
    cir.br ^bb7 loc(#loc49)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc49)
  ^bb8:  // pred: ^bb7
    %26 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc9)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc9)
    %29 = cir.call @strcpy(%26, %28) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc57)
    %30 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %31 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc60)
    cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc61)
    cir.br ^bb10 loc(#loc40)
  ^bb9:  // pred: ^bb3
    %33 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc14)
    %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc14)
    cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    cir.br ^bb10 loc(#loc35)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc35)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc33)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc31)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc16)
  } loc(#loc177)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc198)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc65)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc199)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc67)
    cir.return loc(#loc64)
  } loc(#loc197)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc201)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc202)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc203)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc204)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc79)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc79)
    cir.store %5, %3 : !u64i, !cir.ptr<!u64i> loc(#loc205)
    %6 = cir.const #cir.int<20> : !s32i loc(#loc81)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc81)
    cir.store %7, %3 : !u64i, !cir.ptr<!u64i> loc(#loc206)
    cir.br ^bb1 loc(#loc207)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc72)
    cir.store %8, %0 : !u64i, !cir.ptr<!u64i> loc(#loc201)
    %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc74)
    cir.store %9, %1 : !u64i, !cir.ptr<!u64i> loc(#loc202)
    cir.br ^bb2 loc(#loc208)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc209)
  ^bb3:  // pred: ^bb2
    %10 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc89)
    %11 = cir.const #cir.int<5> : !u64i loc(#loc210)
    %12 = cir.cmp(gt, %10, %11) : !u64i, !cir.bool loc(#loc211)
    cir.brcond %12 ^bb4, ^bb9 loc(#loc212)
  ^bb4:  // pred: ^bb3
    %13 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc95)
    %14 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc96)
    %15 = cir.const #cir.int<1> : !u64i loc(#loc213)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc214)
    %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc95)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc215)
    cir.store %18, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc216)
    cir.br ^bb5 loc(#loc217)
  ^bb5:  // pred: ^bb4
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc104)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc104)
    %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc218)
    cir.brcond %22 ^bb6, ^bb7 loc(#loc219)
  ^bb6:  // pred: ^bb5
    %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc106)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc108)
    cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc106)
    cir.br ^bb7 loc(#loc102)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc102)
  ^bb8:  // pred: ^bb7
    %26 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
    %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc110)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc110)
    %29 = cir.call @strcpy(%26, %28) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc111)
    %30 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc113)
    %31 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc114)
    cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc115)
    cir.br ^bb10 loc(#loc93)
  ^bb9:  // pred: ^bb3
    %33 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc116)
    %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc116)
    cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    cir.br ^bb10 loc(#loc88)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc88)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc86)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc84)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc70)
  } loc(#loc200)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc118)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc221)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc222)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc223)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc224)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc129)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc129)
    cir.store %5, %3 : !u64i, !cir.ptr<!u64i> loc(#loc225)
    %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc131)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc131)
    cir.store %7, %3 : !u64i, !cir.ptr<!u64i> loc(#loc226)
    cir.br ^bb1 loc(#loc227)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc122)
    cir.store %8, %0 : !u64i, !cir.ptr<!u64i> loc(#loc221)
    %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc124)
    cir.store %9, %1 : !u64i, !cir.ptr<!u64i> loc(#loc222)
    cir.br ^bb2 loc(#loc228)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc229)
  ^bb3:  // pred: ^bb2
    %10 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc140)
    %11 = cir.const #cir.int<5> : !u64i loc(#loc230)
    %12 = cir.cmp(gt, %10, %11) : !u64i, !cir.bool loc(#loc231)
    cir.brcond %12 ^bb4, ^bb9 loc(#loc143)
  ^bb4:  // pred: ^bb3
    %13 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc144)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc145)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc145)
    %16 = cir.cmp(lt, %13, %15) : !u64i, !cir.bool loc(#loc232)
    cir.brcond %16 ^bb5, ^bb6 loc(#loc143)
  ^bb5:  // pred: ^bb4
    %17 = cir.const #true loc(#loc143)
    cir.br ^bb7(%17 : !cir.bool) loc(#loc143)
  ^bb6:  // pred: ^bb4
    %18 = cir.const #false loc(#loc143)
    cir.br ^bb7(%18 : !cir.bool) loc(#loc143)
  ^bb7(%19: !cir.bool loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":113:45)):  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc143)
  ^bb8:  // pred: ^bb7
    cir.br ^bb10(%19 : !cir.bool) loc(#loc143)
  ^bb9:  // pred: ^bb3
    %20 = cir.const #false loc(#loc143)
    cir.br ^bb10(%20 : !cir.bool) loc(#loc143)
  ^bb10(%21: !cir.bool loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":113:45)):  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc143)
  ^bb11:  // pred: ^bb10
    cir.brcond %21 ^bb12, ^bb17 loc(#loc233)
  ^bb12:  // pred: ^bb11
    %22 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc149)
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc150)
    %24 = cir.const #cir.int<1> : !u64i loc(#loc234)
    %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc235)
    %26 = cir.call @malloc(%25) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc149)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc236)
    cir.store %27, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc237)
    cir.br ^bb13 loc(#loc238)
  ^bb13:  // pred: ^bb12
    %28 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
    %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc158)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc158)
    %31 = cir.cmp(eq, %28, %30) : !cir.ptr<!s8i>, !cir.bool loc(#loc239)
    cir.brcond %31 ^bb14, ^bb15 loc(#loc240)
  ^bb14:  // pred: ^bb13
    %32 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc160)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc161)
    %34 = cir.unary(minus, %33) nsw : !s32i, !s32i loc(#loc162)
    cir.call @exit(%34) : (!s32i) -> () extra(#fn_attr) loc(#loc160)
    cir.br ^bb15 loc(#loc156)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc156)
  ^bb16:  // pred: ^bb15
    %35 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
    %36 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc164)
    %37 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc164)
    %38 = cir.call @strcpy(%35, %37) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc165)
    %39 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
    cir.call @printLine(%39) : (!cir.ptr<!s8i>) -> () loc(#loc167)
    %40 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
    %41 = cir.cast(bitcast, %40 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc168)
    cir.call @free(%41) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc169)
    cir.br ^bb18 loc(#loc147)
  ^bb17:  // pred: ^bb11
    %42 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc118)
    %43 = cir.cast(array_to_ptrdecay, %42 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc118)
    cir.call @printLine(%43) : (!cir.ptr<!s8i>) -> () loc(#loc170)
    cir.br ^bb18 loc(#loc139)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc139)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc137)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc135)
  ^bb21:  // pred: ^bb20
    cir.return loc(#loc120)
  } loc(#loc220)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/string.h":141:1)
#loc8 = loc("/usr/include/string.h":142:14)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":48:34)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("/usr/include/stdlib.h":687:1)
#loc13 = loc("/usr/include/stdlib.h":687:32)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":54:27)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":28:1)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":58:1)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":36:9)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":36:27)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":37:9)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":37:23)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":39:13)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":39:20)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":30:5)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":30:12)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":32:12)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":32:5)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":34:12)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":34:5)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":34:17)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":35:5)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":57:5)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":38:9)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":56:9)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":43:13)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":55:13)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":43:17)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":43:24)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":43:43)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":44:13)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":51:13)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":53:13)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":45:36)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":45:43)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":45:48)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":45:59)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":45:60)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":45:17)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":46:17)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":46:49)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":46:21)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":46:33)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":46:39)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":46:40)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":46:46)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":46:45)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":48:24)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":48:17)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":49:27)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":49:17)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":50:22)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":50:17)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":54:17)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":130:1)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":134:1)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":132:5)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":132:13)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":133:5)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":133:13)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":65:1)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":95:1)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":73:9)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":73:27)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":74:9)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":74:23)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":76:13)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":76:20)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":67:5)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":67:12)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":69:12)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":69:5)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":71:12)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":71:5)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":72:5)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":94:5)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":75:9)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":93:9)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":80:13)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":92:13)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":80:17)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":80:24)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":80:43)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":81:13)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":88:13)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":90:13)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":82:36)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":82:43)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":82:48)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":82:59)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":82:60)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":82:17)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":83:17)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":83:49)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":83:21)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":83:33)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":83:39)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":83:40)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":83:46)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":83:45)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":85:24)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":85:34)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":85:17)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":86:27)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":86:17)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":87:22)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":87:17)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":91:27)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":91:17)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":124:27)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":98:1)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":128:1)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":106:9)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":106:27)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":107:9)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":107:23)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":109:13)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":109:20)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":100:5)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":100:12)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":102:12)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":102:5)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":104:12)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":104:5)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":104:17)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":105:5)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":127:5)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":108:9)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":126:9)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":113:13)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":125:13)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":113:17)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":113:24)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":113:43)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":113:48)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":113:55)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":114:13)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":121:13)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":123:13)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":115:36)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":115:43)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":115:48)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":115:59)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":115:60)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":115:17)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":116:17)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":116:49)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":116:21)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":116:33)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":116:39)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":116:40)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":116:46)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":116:45)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":118:24)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":118:34)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":118:17)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":119:27)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":119:17)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":120:22)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":120:17)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":124:17)
#loc171 = loc(fused[#loc1, #loc2])
#loc172 = loc(fused[#loc3, #loc4])
#loc173 = loc(fused[#loc5, #loc6])
#loc174 = loc(fused[#loc7, #loc8])
#loc175 = loc(fused[#loc10, #loc11])
#loc176 = loc(fused[#loc12, #loc13])
#loc177 = loc(fused[#loc15, #loc16])
#loc178 = loc(fused[#loc17, #loc18])
#loc179 = loc(fused[#loc19, #loc20])
#loc180 = loc(fused[#loc21, #loc22])
#loc181 = loc(fused[#loc23, #loc24])
#loc182 = loc(fused[#loc26, #loc25])
#loc183 = loc(fused[#loc28, #loc29])
#loc184 = loc(fused[#loc30, #loc31])
#loc185 = loc(fused[#loc32, #loc33])
#loc186 = loc(fused[#loc34, #loc35])
#loc187 = loc(fused[#loc37, #loc38])
#loc188 = loc(fused[#loc36, #loc38])
#loc189 = loc(fused[#loc39, #loc40, #loc41, #loc35])
#loc190 = loc(fused[#loc44, #loc45])
#loc191 = loc(fused[#loc43, #loc45])
#loc192 = loc(fused[#loc42, #loc46])
#loc193 = loc(fused[#loc47, #loc46])
#loc194 = loc(fused[#loc48, #loc49])
#loc195 = loc(fused[#loc50, #loc51])
#loc196 = loc(fused[#loc52, #loc49])
#loc197 = loc(fused[#loc63, #loc64])
#loc198 = loc(fused[#loc65, #loc66])
#loc199 = loc(fused[#loc67, #loc68])
#loc200 = loc(fused[#loc69, #loc70])
#loc201 = loc(fused[#loc71, #loc72])
#loc202 = loc(fused[#loc73, #loc74])
#loc203 = loc(fused[#loc75, #loc76])
#loc204 = loc(fused[#loc77, #loc78])
#loc205 = loc(fused[#loc80, #loc79])
#loc206 = loc(fused[#loc82, #loc81])
#loc207 = loc(fused[#loc83, #loc84])
#loc208 = loc(fused[#loc85, #loc86])
#loc209 = loc(fused[#loc87, #loc88])
#loc210 = loc(fused[#loc90, #loc91])
#loc211 = loc(fused[#loc89, #loc91])
#loc212 = loc(fused[#loc92, #loc93, #loc94, #loc88])
#loc213 = loc(fused[#loc97, #loc98])
#loc214 = loc(fused[#loc96, #loc98])
#loc215 = loc(fused[#loc95, #loc99])
#loc216 = loc(fused[#loc100, #loc99])
#loc217 = loc(fused[#loc101, #loc102])
#loc218 = loc(fused[#loc103, #loc104])
#loc219 = loc(fused[#loc105, #loc102])
#loc220 = loc(fused[#loc119, #loc120])
#loc221 = loc(fused[#loc121, #loc122])
#loc222 = loc(fused[#loc123, #loc124])
#loc223 = loc(fused[#loc125, #loc126])
#loc224 = loc(fused[#loc127, #loc128])
#loc225 = loc(fused[#loc130, #loc129])
#loc226 = loc(fused[#loc132, #loc133])
#loc227 = loc(fused[#loc134, #loc135])
#loc228 = loc(fused[#loc136, #loc137])
#loc229 = loc(fused[#loc138, #loc139])
#loc230 = loc(fused[#loc141, #loc142])
#loc231 = loc(fused[#loc140, #loc142])
#loc232 = loc(fused[#loc144, #loc145])
#loc233 = loc(fused[#loc146, #loc147, #loc148, #loc139])
#loc234 = loc(fused[#loc151, #loc152])
#loc235 = loc(fused[#loc150, #loc152])
#loc236 = loc(fused[#loc149, #loc153])
#loc237 = loc(fused[#loc154, #loc153])
#loc238 = loc(fused[#loc155, #loc156])
#loc239 = loc(fused[#loc157, #loc158])
#loc240 = loc(fused[#loc159, #loc156])
