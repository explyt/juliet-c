!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc7 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":25:58)
#loc8 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":25:62)
#loc25 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":44:63)
#loc26 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":44:67)
#loc50 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":66:63)
#loc51 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":66:67)
#loc73 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":83:62)
#loc74 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":83:66)
#loc86 = loc(fused[#loc7, #loc8])
#loc93 = loc(fused[#loc25, #loc26])
#loc102 = loc(fused[#loc50, #loc51])
#loc111 = loc(fused[#loc73, #loc74])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" external @CWE369_Divide_by_Zero__int_fscanf_modulo_22_badGlobal : !s32i {alignment = 4 : i64} loc(#loc83)
  cir.func private @printIntLine(!s32i) loc(#loc84)
  cir.func @CWE369_Divide_by_Zero__int_fscanf_modulo_22_badSink(%arg0: !s32i loc(fused[#loc7, #loc8])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc86)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc9)
    cir.scope {
      %1 = cir.get_global @CWE369_Divide_by_Zero__int_fscanf_modulo_22_badGlobal : !cir.ptr<!s32i> loc(#loc83)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc12)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc12)
      cir.if %3 {
        %4 = cir.const #cir.int<100> : !s32i loc(#loc14)
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc15)
        %6 = cir.binop(rem, %4, %5) : !s32i loc(#loc89)
        cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc16)
      } loc(#loc88)
    } loc(#loc87)
    cir.return loc(#loc6)
  } loc(#loc85)
  cir.global "private" external @CWE369_Divide_by_Zero__int_fscanf_modulo_22_goodB2G1Global : !s32i {alignment = 4 : i64} loc(#loc90)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc91)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc21)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc22)
  cir.func @CWE369_Divide_by_Zero__int_fscanf_modulo_22_goodB2G1Sink(%arg0: !s32i loc(fused[#loc25, #loc26])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc93)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc27)
    cir.scope {
      %1 = cir.get_global @CWE369_Divide_by_Zero__int_fscanf_modulo_22_goodB2G1Global : !cir.ptr<!s32i> loc(#loc90)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc30)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc30)
      cir.if %3 {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc21)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc21)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc34)
      } else {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc37)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc38)
          %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc97)
          cir.if %6 {
            %7 = cir.const #cir.int<100> : !s32i loc(#loc42)
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc43)
            %9 = cir.binop(rem, %7, %8) : !s32i loc(#loc99)
            cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc44)
          } else {
            %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc22)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc22)
            cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc45)
          } loc(#loc98)
        } loc(#loc96)
      } loc(#loc95)
    } loc(#loc94)
    cir.return loc(#loc24)
  } loc(#loc92)
  cir.global "private" external @CWE369_Divide_by_Zero__int_fscanf_modulo_22_goodB2G2Global : !s32i {alignment = 4 : i64} loc(#loc100)
  cir.func @CWE369_Divide_by_Zero__int_fscanf_modulo_22_goodB2G2Sink(%arg0: !s32i loc(fused[#loc50, #loc51])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc102)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc52)
    cir.scope {
      %1 = cir.get_global @CWE369_Divide_by_Zero__int_fscanf_modulo_22_goodB2G2Global : !cir.ptr<!s32i> loc(#loc100)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc55)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc55)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc59)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc60)
          %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc106)
          cir.if %6 {
            %7 = cir.const #cir.int<100> : !s32i loc(#loc64)
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc65)
            %9 = cir.binop(rem, %7, %8) : !s32i loc(#loc108)
            cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc66)
          } else {
            %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc67)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc67)
            cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc68)
          } loc(#loc107)
        } loc(#loc105)
      } loc(#loc104)
    } loc(#loc103)
    cir.return loc(#loc49)
  } loc(#loc101)
  cir.global "private" external @CWE369_Divide_by_Zero__int_fscanf_modulo_22_goodG2BGlobal : !s32i {alignment = 4 : i64} loc(#loc109)
  cir.func @CWE369_Divide_by_Zero__int_fscanf_modulo_22_goodG2BSink(%arg0: !s32i loc(fused[#loc73, #loc74])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc111)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc75)
    cir.scope {
      %1 = cir.get_global @CWE369_Divide_by_Zero__int_fscanf_modulo_22_goodG2BGlobal : !cir.ptr<!s32i> loc(#loc109)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc78)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc78)
      cir.if %3 {
        %4 = cir.const #cir.int<100> : !s32i loc(#loc80)
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc81)
        %6 = cir.binop(rem, %4, %5) : !s32i loc(#loc114)
        cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc82)
      } loc(#loc113)
    } loc(#loc112)
    cir.return loc(#loc72)
  } loc(#loc110)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":0:0)
#loc1 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":23:1)
#loc2 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":23:12)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":25:1)
#loc6 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":32:1)
#loc9 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":26:1)
#loc10 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":27:5)
#loc11 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":31:5)
#loc12 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":27:8)
#loc13 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":28:5)
#loc14 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":30:22)
#loc15 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":30:28)
#loc16 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":30:9)
#loc17 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":39:1)
#loc18 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":39:12)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc21 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":49:19)
#loc22 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":60:23)
#loc23 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":44:1)
#loc24 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":63:1)
#loc27 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":45:1)
#loc28 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":46:5)
#loc29 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":62:5)
#loc30 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":46:8)
#loc31 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":47:5)
#loc32 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":50:5)
#loc33 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":52:5)
#loc34 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":49:9)
#loc35 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":54:9)
#loc36 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":61:9)
#loc37 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":54:13)
#loc38 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":54:21)
#loc39 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":55:9)
#loc40 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":57:9)
#loc41 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":59:9)
#loc42 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":56:26)
#loc43 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":56:32)
#loc44 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":56:13)
#loc45 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":60:13)
#loc46 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":40:1)
#loc47 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":40:12)
#loc48 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":66:1)
#loc49 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":80:1)
#loc52 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":67:1)
#loc53 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":68:5)
#loc54 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":79:5)
#loc55 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":68:8)
#loc56 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":69:5)
#loc57 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":71:9)
#loc58 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":78:9)
#loc59 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":71:13)
#loc60 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":71:21)
#loc61 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":72:9)
#loc62 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":74:9)
#loc63 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":76:9)
#loc64 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":73:26)
#loc65 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":73:32)
#loc66 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":73:13)
#loc67 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":77:23)
#loc68 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":77:13)
#loc69 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":41:1)
#loc70 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":41:12)
#loc71 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":83:1)
#loc72 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":90:1)
#loc75 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":84:1)
#loc76 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":85:5)
#loc77 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":89:5)
#loc78 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":85:8)
#loc79 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":86:5)
#loc80 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":88:22)
#loc81 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":88:28)
#loc82 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_22b.c":88:9)
#loc83 = loc(fused[#loc1, #loc2])
#loc84 = loc(fused[#loc3, #loc4])
#loc85 = loc(fused[#loc5, #loc6])
#loc87 = loc(fused[#loc10, #loc11])
#loc88 = loc(fused[#loc13, #loc11])
#loc89 = loc(fused[#loc14, #loc15])
#loc90 = loc(fused[#loc17, #loc18])
#loc91 = loc(fused[#loc19, #loc20])
#loc92 = loc(fused[#loc23, #loc24])
#loc94 = loc(fused[#loc28, #loc29])
#loc95 = loc(fused[#loc31, #loc32, #loc33, #loc29])
#loc96 = loc(fused[#loc35, #loc36])
#loc97 = loc(fused[#loc37, #loc38])
#loc98 = loc(fused[#loc39, #loc40, #loc41, #loc36])
#loc99 = loc(fused[#loc42, #loc43])
#loc100 = loc(fused[#loc46, #loc47])
#loc101 = loc(fused[#loc48, #loc49])
#loc103 = loc(fused[#loc53, #loc54])
#loc104 = loc(fused[#loc56, #loc54])
#loc105 = loc(fused[#loc57, #loc58])
#loc106 = loc(fused[#loc59, #loc60])
#loc107 = loc(fused[#loc61, #loc62, #loc63, #loc58])
#loc108 = loc(fused[#loc64, #loc65])
#loc109 = loc(fused[#loc69, #loc70])
#loc110 = loc(fused[#loc71, #loc72])
#loc112 = loc(fused[#loc76, #loc77])
#loc113 = loc(fused[#loc79, #loc77])
#loc114 = loc(fused[#loc80, #loc81])
