!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fscanf_sleep_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc181)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc182)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private  @usleep(!u32i) -> !s32i loc(#loc183)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc184)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc10)
  cir.func no_proto  @CWE400_Resource_Exhaustion__fscanf_sleep_08_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc186)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc16)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc187)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc189)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc20)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc20)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc23)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc182)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc24)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc23)
      } loc(#loc190)
    } loc(#loc188)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc192)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc27)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc27)
      cir.if %5 {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc30)
        %7 = cir.cast(integral, %6 : !s32i), !u32i loc(#loc30)
        %8 = cir.call @usleep(%7) : (!u32i) -> !s32i loc(#loc31)
        %9 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc10)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc10)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc32)
      } loc(#loc193)
    } loc(#loc191)
    cir.return loc(#loc12)
  } loc(#loc185)
  cir.func no_proto  @CWE400_Resource_Exhaustion__fscanf_sleep_08_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc195)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc35)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc196)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc37)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc197)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc39)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc198)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    cir.return loc(#loc34)
  } loc(#loc194)
  cir.func no_proto internal private  @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc44)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc45)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc200)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc200)
    cir.return %2 : !s32i loc(#loc200)
  } loc(#loc199)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc47)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc48)
  cir.global "private"  constant internal dsolocal @".str4" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc49)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc202)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc55)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc203)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc205)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc59)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc59)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc62)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc182)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc63)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc64)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc64)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc62)
      } loc(#loc206)
    } loc(#loc204)
    cir.scope {
      %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc208)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc67)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc67)
      cir.if %5 {
        %6 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc47)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc47)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc72)
      } else {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc75)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc76)
          %8 = cir.cmp(gt, %6, %7) : !s32i, !s32i loc(#loc211)
          %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc77)
          %10 = cir.ternary(%9, true {
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc79)
            %12 = cir.const #cir.int<2000> : !s32i loc(#loc80)
            %13 = cir.cmp(le, %11, %12) : !s32i, !s32i loc(#loc212)
            %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc81)
            %15 = cir.ternary(%14, true {
              %16 = cir.const #true loc(#loc78)
              cir.yield %16 : !cir.bool loc(#loc78)
            }, false {
              %16 = cir.const #false loc(#loc78)
              cir.yield %16 : !cir.bool loc(#loc78)
            }) : (!cir.bool) -> !cir.bool loc(#loc78)
            cir.yield %15 : !cir.bool loc(#loc78)
          }, false {
            %11 = cir.const #false loc(#loc78)
            cir.yield %11 : !cir.bool loc(#loc78)
          }) : (!cir.bool) -> !cir.bool loc(#loc78)
          cir.if %10 {
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc85)
            %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc85)
            %13 = cir.call @usleep(%12) : (!u32i) -> !s32i loc(#loc86)
            %14 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc48)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc48)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc87)
          } else {
            %11 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc49)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc49)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc88)
          } loc(#loc213)
        } loc(#loc210)
      } loc(#loc209)
    } loc(#loc207)
    cir.return loc(#loc51)
  } loc(#loc201)
  cir.func no_proto internal private  @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc90)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc91)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc215)
    cir.return %2 : !s32i loc(#loc215)
  } loc(#loc214)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc217)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc98)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc218)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc220)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc102)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc102)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc105)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc182)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc106)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc107)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc107)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc105)
      } loc(#loc221)
    } loc(#loc219)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc223)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc110)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc110)
      cir.if %5 {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc115)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc116)
          %8 = cir.cmp(gt, %6, %7) : !s32i, !s32i loc(#loc226)
          %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc117)
          %10 = cir.ternary(%9, true {
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc119)
            %12 = cir.const #cir.int<2000> : !s32i loc(#loc120)
            %13 = cir.cmp(le, %11, %12) : !s32i, !s32i loc(#loc227)
            %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc121)
            %15 = cir.ternary(%14, true {
              %16 = cir.const #true loc(#loc118)
              cir.yield %16 : !cir.bool loc(#loc118)
            }, false {
              %16 = cir.const #false loc(#loc118)
              cir.yield %16 : !cir.bool loc(#loc118)
            }) : (!cir.bool) -> !cir.bool loc(#loc118)
            cir.yield %15 : !cir.bool loc(#loc118)
          }, false {
            %11 = cir.const #false loc(#loc118)
            cir.yield %11 : !cir.bool loc(#loc118)
          }) : (!cir.bool) -> !cir.bool loc(#loc118)
          cir.if %10 {
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc125)
            %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc125)
            %13 = cir.call @usleep(%12) : (!u32i) -> !s32i loc(#loc126)
            %14 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc127)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc127)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc128)
          } else {
            %11 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc129)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc129)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc130)
          } loc(#loc228)
        } loc(#loc225)
      } loc(#loc224)
    } loc(#loc222)
    cir.return loc(#loc94)
  } loc(#loc216)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc230)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc135)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc136)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc231)
    cir.scope {
      %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc233)
      %4 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc140)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc140)
      cir.if %5 {
        %6 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc145)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc145)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc146)
      } else {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc147)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc235)
      } loc(#loc234)
    } loc(#loc232)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc237)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc151)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc151)
      cir.if %5 {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc154)
        %7 = cir.cast(integral, %6 : !s32i), !u32i loc(#loc154)
        %8 = cir.call @usleep(%7) : (!u32i) -> !s32i loc(#loc155)
        %9 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc156)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc156)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc157)
      } loc(#loc238)
    } loc(#loc236)
    cir.return loc(#loc132)
  } loc(#loc229)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc240)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc162)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc163)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc241)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc243)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc167)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc167)
      cir.if %5 {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc170)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc245)
      } loc(#loc244)
    } loc(#loc242)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc247)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc174)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc174)
      cir.if %5 {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc177)
        %7 = cir.cast(integral, %6 : !s32i), !u32i loc(#loc177)
        %8 = cir.call @usleep(%7) : (!u32i) -> !s32i loc(#loc178)
        %9 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc179)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc179)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc180)
      } loc(#loc248)
    } loc(#loc246)
    cir.return loc(#loc159)
  } loc(#loc239)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fscanf_sleep_08.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":51:23)
#loc6 = loc("/usr/include/unistd.h":480:1)
#loc7 = loc("/usr/include/unistd.h":480:43)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":57:19)
#loc11 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":43:1)
#loc12 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":59:1)
#loc13 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":45:5)
#loc14 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":45:9)
#loc15 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":47:14)
#loc16 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":47:13)
#loc17 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":47:5)
#loc18 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":48:5)
#loc19 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":52:5)
#loc20 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":48:8)
#loc21 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":48:26)
#loc22 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":49:5)
#loc23 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":51:9)
#loc24 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":51:16)
#loc25 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":53:5)
#loc26 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":58:5)
#loc27 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":53:8)
#loc28 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":53:26)
#loc29 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":54:5)
#loc30 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":56:15)
#loc31 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":56:9)
#loc32 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":57:9)
#loc33 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":165:1)
#loc34 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":171:1)
#loc35 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":167:5)
#loc36 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":167:14)
#loc37 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":168:5)
#loc38 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":168:14)
#loc39 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":169:5)
#loc40 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":169:14)
#loc41 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":170:5)
#loc42 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":170:14)
#loc43 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":31:1)
#loc44 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":34:1)
#loc45 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":33:12)
#loc46 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":33:5)
#loc47 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":79:19)
#loc48 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":87:23)
#loc49 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":91:23)
#loc50 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":66:1)
#loc51 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":94:1)
#loc52 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":68:5)
#loc53 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":68:9)
#loc54 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":70:14)
#loc55 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":70:13)
#loc56 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":70:5)
#loc57 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":71:5)
#loc58 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":75:5)
#loc59 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":71:8)
#loc60 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":71:26)
#loc61 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":72:5)
#loc62 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":74:9)
#loc63 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":74:16)
#loc64 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":74:23)
#loc65 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":76:5)
#loc66 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":93:5)
#loc67 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":76:8)
#loc68 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":76:27)
#loc69 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":77:5)
#loc70 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":80:5)
#loc71 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":82:5)
#loc72 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":79:9)
#loc73 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":84:9)
#loc74 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":92:9)
#loc75 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":84:13)
#loc76 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":84:21)
#loc77 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":84:19)
#loc78 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":84:23)
#loc79 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":84:26)
#loc80 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":84:35)
#loc81 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":84:32)
#loc82 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":85:9)
#loc83 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":88:9)
#loc84 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":90:9)
#loc85 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":86:19)
#loc86 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":86:13)
#loc87 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":87:13)
#loc88 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":91:13)
#loc89 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":36:1)
#loc90 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":39:1)
#loc91 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":38:12)
#loc92 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":38:5)
#loc93 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":97:1)
#loc94 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":120:1)
#loc95 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":99:5)
#loc96 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":99:9)
#loc97 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":101:14)
#loc98 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":101:13)
#loc99 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":101:5)
#loc100 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":102:5)
#loc101 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":106:5)
#loc102 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":102:8)
#loc103 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":102:26)
#loc104 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":103:5)
#loc105 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":105:9)
#loc106 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":105:16)
#loc107 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":105:23)
#loc108 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":107:5)
#loc109 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":119:5)
#loc110 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":107:8)
#loc111 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":107:26)
#loc112 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":108:5)
#loc113 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":110:9)
#loc114 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":118:9)
#loc115 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":110:13)
#loc116 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":110:21)
#loc117 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":110:19)
#loc118 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":110:23)
#loc119 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":110:26)
#loc120 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":110:35)
#loc121 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":110:32)
#loc122 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":111:9)
#loc123 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":114:9)
#loc124 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":116:9)
#loc125 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":112:19)
#loc126 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":112:13)
#loc127 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":113:23)
#loc128 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":113:13)
#loc129 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":117:23)
#loc130 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":117:13)
#loc131 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":123:1)
#loc132 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":144:1)
#loc133 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":125:5)
#loc134 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":125:9)
#loc135 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":127:14)
#loc136 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":127:13)
#loc137 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":127:5)
#loc138 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":128:5)
#loc139 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":137:5)
#loc140 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":128:8)
#loc141 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":128:27)
#loc142 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":129:5)
#loc143 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":132:5)
#loc144 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":134:5)
#loc145 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":131:19)
#loc146 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":131:9)
#loc147 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":136:17)
#loc148 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":136:9)
#loc149 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":138:5)
#loc150 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":143:5)
#loc151 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":138:8)
#loc152 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":138:26)
#loc153 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":139:5)
#loc154 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":141:15)
#loc155 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":141:9)
#loc156 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":142:19)
#loc157 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":142:9)
#loc158 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":147:1)
#loc159 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":163:1)
#loc160 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":149:5)
#loc161 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":149:9)
#loc162 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":151:14)
#loc163 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":151:13)
#loc164 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":151:5)
#loc165 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":152:5)
#loc166 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":156:5)
#loc167 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":152:8)
#loc168 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":152:26)
#loc169 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":153:5)
#loc170 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":155:17)
#loc171 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":155:9)
#loc172 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":157:5)
#loc173 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":162:5)
#loc174 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":157:8)
#loc175 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":157:26)
#loc176 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":158:5)
#loc177 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":160:15)
#loc178 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":160:9)
#loc179 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":161:19)
#loc180 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_08.c":161:9)
#loc181 = loc(fused[#loc1, #loc2])
#loc182 = loc(fused[#loc3, #loc4])
#loc183 = loc(fused[#loc6, #loc7])
#loc184 = loc(fused[#loc8, #loc9])
#loc185 = loc(fused[#loc11, #loc12])
#loc186 = loc(fused[#loc13, #loc14])
#loc187 = loc(fused[#loc17, #loc15])
#loc188 = loc(fused[#loc18, #loc19])
#loc189 = loc(fused[#loc20, #loc21])
#loc190 = loc(fused[#loc22, #loc19])
#loc191 = loc(fused[#loc25, #loc26])
#loc192 = loc(fused[#loc27, #loc28])
#loc193 = loc(fused[#loc29, #loc26])
#loc194 = loc(fused[#loc33, #loc34])
#loc195 = loc(fused[#loc35, #loc36])
#loc196 = loc(fused[#loc37, #loc38])
#loc197 = loc(fused[#loc39, #loc40])
#loc198 = loc(fused[#loc41, #loc42])
#loc199 = loc(fused[#loc43, #loc44])
#loc200 = loc(fused[#loc46, #loc45])
#loc201 = loc(fused[#loc50, #loc51])
#loc202 = loc(fused[#loc52, #loc53])
#loc203 = loc(fused[#loc56, #loc54])
#loc204 = loc(fused[#loc57, #loc58])
#loc205 = loc(fused[#loc59, #loc60])
#loc206 = loc(fused[#loc61, #loc58])
#loc207 = loc(fused[#loc65, #loc66])
#loc208 = loc(fused[#loc67, #loc68])
#loc209 = loc(fused[#loc69, #loc70, #loc71, #loc66])
#loc210 = loc(fused[#loc73, #loc74])
#loc211 = loc(fused[#loc75, #loc76])
#loc212 = loc(fused[#loc79, #loc80])
#loc213 = loc(fused[#loc82, #loc83, #loc84, #loc74])
#loc214 = loc(fused[#loc89, #loc90])
#loc215 = loc(fused[#loc92, #loc91])
#loc216 = loc(fused[#loc93, #loc94])
#loc217 = loc(fused[#loc95, #loc96])
#loc218 = loc(fused[#loc99, #loc97])
#loc219 = loc(fused[#loc100, #loc101])
#loc220 = loc(fused[#loc102, #loc103])
#loc221 = loc(fused[#loc104, #loc101])
#loc222 = loc(fused[#loc108, #loc109])
#loc223 = loc(fused[#loc110, #loc111])
#loc224 = loc(fused[#loc112, #loc109])
#loc225 = loc(fused[#loc113, #loc114])
#loc226 = loc(fused[#loc115, #loc116])
#loc227 = loc(fused[#loc119, #loc120])
#loc228 = loc(fused[#loc122, #loc123, #loc124, #loc114])
#loc229 = loc(fused[#loc131, #loc132])
#loc230 = loc(fused[#loc133, #loc134])
#loc231 = loc(fused[#loc137, #loc135])
#loc232 = loc(fused[#loc138, #loc139])
#loc233 = loc(fused[#loc140, #loc141])
#loc234 = loc(fused[#loc142, #loc143, #loc144, #loc139])
#loc235 = loc(fused[#loc148, #loc147])
#loc236 = loc(fused[#loc149, #loc150])
#loc237 = loc(fused[#loc151, #loc152])
#loc238 = loc(fused[#loc153, #loc150])
#loc239 = loc(fused[#loc158, #loc159])
#loc240 = loc(fused[#loc160, #loc161])
#loc241 = loc(fused[#loc164, #loc162])
#loc242 = loc(fused[#loc165, #loc166])
#loc243 = loc(fused[#loc167, #loc168])
#loc244 = loc(fused[#loc169, #loc166])
#loc245 = loc(fused[#loc171, #loc170])
#loc246 = loc(fused[#loc172, #loc173])
#loc247 = loc(fused[#loc174, #loc175])
#loc248 = loc(fused[#loc176, #loc173])
