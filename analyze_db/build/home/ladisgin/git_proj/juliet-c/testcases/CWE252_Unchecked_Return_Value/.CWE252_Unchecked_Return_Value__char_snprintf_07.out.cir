!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc44 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":114:10)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":114:14)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":114:20)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":114:32)
#loc139 = loc(fused[#loc44, #loc45])
#loc140 = loc(fused[#loc46, #loc47])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_snprintf_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc120)
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc121)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\0A\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc5)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc6)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_snprintf_07_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc123)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc124)
    cir.br ^bb1 loc(#loc125)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc120)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc15)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc16)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc126)
    cir.brcond %5 ^bb2, ^bb5 loc(#loc127)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc128)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc123)
    cir.store %6, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc123)
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc124)
    %8 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc20)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc22)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc22)
    %12 = cir.const #cir.int<6> : !u64i loc(#loc129)
    %13 = cir.binop(sub, %11, %12) : !u64i loc(#loc130)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc25)
    %16 = cir.binop(sub, %13, %15) : !u64i loc(#loc131)
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc5)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc5)
    %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc6)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc6)
    %21 = cir.call @snprintf(%9, %16, %18, %20) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc20)
    cir.br ^bb4 loc(#loc19)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc14)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc14)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc8)
  } loc(#loc122)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_snprintf_07_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc133)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc28)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc134)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc30)
    cir.return loc(#loc27)
  } loc(#loc132)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc135)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc136)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc137)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc38)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc39)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc40)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc41)
  cir.func @main(%arg0: !s32i loc(fused[#loc44, #loc45]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc46, #loc47])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc139)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc140)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc43)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc48)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc48)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc49)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc50)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc50)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc51)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc38)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    %8 = cir.get_global @CWE252_Unchecked_Return_Value__char_snprintf_07_good : !cir.ptr<!cir.func<!void ()>> loc(#loc141)
    cir.call @CWE252_Unchecked_Return_Value__char_snprintf_07_good() : () -> () loc(#loc53)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc39)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc40)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    %13 = cir.get_global @CWE252_Unchecked_Return_Value__char_snprintf_07_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc142)
    cir.call @CWE252_Unchecked_Return_Value__char_snprintf_07_bad() : () -> () loc(#loc57)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc41)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc60)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc143)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    cir.return %17 : !s32i loc(#loc143)
  } loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc62)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"snprintf failed!\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc63)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc145)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc146)
    cir.br ^bb1 loc(#loc147)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc120)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc73)
    %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc148)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc149)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc62)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    cir.br ^bb10 loc(#loc75)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc150)
  ^bb4:  // pred: ^bb3
    %8 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc145)
    cir.store %8, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc145)
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc69)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
    cir.br ^bb5 loc(#loc151)
  ^bb5:  // pred: ^bb4
    %10 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc82)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc84)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc84)
    %14 = cir.const #cir.int<6> : !u64i loc(#loc152)
    %15 = cir.binop(sub, %13, %14) : !u64i loc(#loc153)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc87)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc87)
    %18 = cir.binop(sub, %15, %17) : !u64i loc(#loc154)
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc88)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc88)
    %21 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc89)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc89)
    %23 = cir.call @snprintf(%11, %18, %20, %22) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc82)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc90)
    %25 = cir.cmp(lt, %23, %24) : !s32i, !cir.bool loc(#loc155)
    cir.brcond %25 ^bb6, ^bb7 loc(#loc156)
  ^bb6:  // pred: ^bb5
    %26 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc63)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    cir.br ^bb7 loc(#loc81)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc81)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc79)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc71)
  ^bb10:  // 2 preds: ^bb2, ^bb9
    cir.br ^bb11 loc(#loc71)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc65)
  } loc(#loc144)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc158)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc159)
    cir.br ^bb1 loc(#loc160)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc120)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc101)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc102)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc161)
    cir.brcond %5 ^bb2, ^bb9 loc(#loc162)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc163)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc158)
    cir.store %6, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc158)
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc98)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc159)
    cir.br ^bb4 loc(#loc164)
  ^bb4:  // pred: ^bb3
    %8 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc108)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc110)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc110)
    %12 = cir.const #cir.int<6> : !u64i loc(#loc165)
    %13 = cir.binop(sub, %11, %12) : !u64i loc(#loc166)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc113)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc113)
    %16 = cir.binop(sub, %13, %15) : !u64i loc(#loc167)
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc114)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc114)
    %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc115)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc115)
    %21 = cir.call @snprintf(%9, %16, %18, %20) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc108)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc116)
    %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc168)
    cir.brcond %23 ^bb5, ^bb6 loc(#loc169)
  ^bb5:  // pred: ^bb4
    %24 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc118)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc118)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    cir.br ^bb6 loc(#loc107)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc107)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc105)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc100)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc100)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc94)
  } loc(#loc157)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_snprintf_07.c":0:0)
#loc1 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":33:1)
#loc2 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":33:25)
#loc3 = loc("/usr/include/stdio.h":385:1)
#loc4 = loc("/usr/include/stdio.h":387:62)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":47:46)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":47:54)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":37:1)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":50:1)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":44:13)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":44:36)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":45:13)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":45:27)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":39:5)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":49:5)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":39:8)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":39:20)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":40:5)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":41:9)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":48:9)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":47:13)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":47:22)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":47:27)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":47:31)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":47:41)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":47:43)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":99:1)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":103:1)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":101:5)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":101:11)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":102:5)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":102:11)
#loc32 = loc("/usr/include/stdlib.h":575:1)
#loc33 = loc("/usr/include/stdlib.h":575:41)
#loc34 = loc("/usr/include/time.h":76:1)
#loc35 = loc("/usr/include/time.h":76:38)
#loc36 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc37 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":119:15)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":121:15)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":124:15)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":126:15)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":114:1)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":129:1)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":115:1)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":117:27)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":117:22)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":117:5)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":119:5)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":120:5)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":120:58)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":121:5)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":124:5)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":125:5)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":125:57)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":126:5)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":128:12)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":128:5)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":62:19)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":74:27)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":57:1)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":78:1)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":69:13)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":69:36)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":70:13)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":70:27)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":59:5)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":77:5)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":59:8)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":59:20)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":60:5)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":63:5)
#loc76 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":65:5)
#loc77 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":62:9)
#loc78 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":66:9)
#loc79 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":76:9)
#loc80 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":72:13)
#loc81 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":75:13)
#loc82 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":72:17)
#loc83 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":72:26)
#loc84 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":72:31)
#loc85 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":72:35)
#loc86 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":72:45)
#loc87 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":72:47)
#loc88 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":72:50)
#loc89 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":72:58)
#loc90 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":72:65)
#loc91 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":73:13)
#loc92 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":74:17)
#loc93 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":81:1)
#loc94 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":97:1)
#loc95 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":88:13)
#loc96 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":88:36)
#loc97 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":89:13)
#loc98 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":89:27)
#loc99 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":83:5)
#loc100 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":96:5)
#loc101 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":83:8)
#loc102 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":83:20)
#loc103 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":84:5)
#loc104 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":85:9)
#loc105 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":95:9)
#loc106 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":91:13)
#loc107 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":94:13)
#loc108 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":91:17)
#loc109 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":91:26)
#loc110 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":91:31)
#loc111 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":91:35)
#loc112 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":91:45)
#loc113 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":91:47)
#loc114 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":91:50)
#loc115 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":91:58)
#loc116 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":91:65)
#loc117 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":92:13)
#loc118 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":93:27)
#loc119 = loc("CWE252_Unchecked_Return_Value__char_snprintf_07.c":93:17)
#loc120 = loc(fused[#loc1, #loc2])
#loc121 = loc(fused[#loc3, #loc4])
#loc122 = loc(fused[#loc7, #loc8])
#loc123 = loc(fused[#loc9, #loc10])
#loc124 = loc(fused[#loc11, #loc12])
#loc125 = loc(fused[#loc13, #loc14])
#loc126 = loc(fused[#loc15, #loc16])
#loc127 = loc(fused[#loc17, #loc14])
#loc128 = loc(fused[#loc18, #loc19])
#loc129 = loc(fused[#loc23, #loc24])
#loc130 = loc(fused[#loc22, #loc24])
#loc131 = loc(fused[#loc22, #loc25])
#loc132 = loc(fused[#loc26, #loc27])
#loc133 = loc(fused[#loc28, #loc29])
#loc134 = loc(fused[#loc30, #loc31])
#loc135 = loc(fused[#loc32, #loc33])
#loc136 = loc(fused[#loc34, #loc35])
#loc137 = loc(fused[#loc36, #loc37])
#loc138 = loc(fused[#loc42, #loc43])
#loc141 = loc(fused[#loc53, #loc54])
#loc142 = loc(fused[#loc57, #loc58])
#loc143 = loc(fused[#loc61, #loc60])
#loc144 = loc(fused[#loc64, #loc65])
#loc145 = loc(fused[#loc66, #loc67])
#loc146 = loc(fused[#loc68, #loc69])
#loc147 = loc(fused[#loc70, #loc71])
#loc148 = loc(fused[#loc72, #loc73])
#loc149 = loc(fused[#loc74, #loc75, #loc76, #loc71])
#loc150 = loc(fused[#loc78, #loc79])
#loc151 = loc(fused[#loc80, #loc81])
#loc152 = loc(fused[#loc85, #loc86])
#loc153 = loc(fused[#loc84, #loc86])
#loc154 = loc(fused[#loc84, #loc87])
#loc155 = loc(fused[#loc82, #loc90])
#loc156 = loc(fused[#loc91, #loc81])
#loc157 = loc(fused[#loc93, #loc94])
#loc158 = loc(fused[#loc95, #loc96])
#loc159 = loc(fused[#loc97, #loc98])
#loc160 = loc(fused[#loc99, #loc100])
#loc161 = loc(fused[#loc101, #loc102])
#loc162 = loc(fused[#loc103, #loc100])
#loc163 = loc(fused[#loc104, #loc105])
#loc164 = loc(fused[#loc106, #loc107])
#loc165 = loc(fused[#loc111, #loc112])
#loc166 = loc(fused[#loc110, #loc112])
#loc167 = loc(fused[#loc110, #loc113])
#loc168 = loc(fused[#loc108, #loc116])
#loc169 = loc(fused[#loc117, #loc107])
