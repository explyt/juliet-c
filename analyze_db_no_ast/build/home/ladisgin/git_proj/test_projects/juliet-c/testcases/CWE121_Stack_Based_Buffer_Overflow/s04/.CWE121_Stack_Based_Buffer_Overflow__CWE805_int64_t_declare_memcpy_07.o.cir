!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc110)
  cir.func private  @printLongLongLine(!s64i) loc(#loc111)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc113)
    %1 = cir.alloca !cir.array<!s64i x 50>, !cir.ptr<!cir.array<!s64i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc114)
    %2 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc115)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc110)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc15)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc16)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !s32i loc(#loc117)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc17)
      cir.if %7 {
        %8 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s64i x 50>>), !cir.ptr<!s64i> loc(#loc19)
        cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc119)
      } loc(#loc118)
    } loc(#loc116)
    cir.scope {
      %3 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc121)
      %4 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc121)
      cir.store %4, %3 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc121)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc25)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc25)
      %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc26)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc26)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc27)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc27)
      %11 = cir.const #cir.int<8> : !u64i loc(#loc122)
      %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc123)
      cir.libc.memcpy %12 bytes from %8 to %6 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc124)
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc32)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc33)
      %15 = cir.ptr_stride(%13 : !cir.ptr<!s64i>, %14 : !s32i), !cir.ptr<!s64i> loc(#loc34)
      %16 = cir.load %15 : !cir.ptr<!s64i>, !s64i loc(#loc32)
      cir.call @printLongLongLine(%16) : (!s64i) -> () loc(#loc35)
    } loc(#loc120)
    cir.return loc(#loc6)
  } loc(#loc112)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc126)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc127)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc37)
  } loc(#loc125)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc128)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc44)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc130)
    %1 = cir.alloca !cir.array<!s64i x 50>, !cir.ptr<!cir.array<!s64i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc131)
    %2 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc132)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc110)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc55)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc56)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !s32i loc(#loc134)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc57)
      cir.if %7 {
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc44)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc44)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc61)
      } else {
        %8 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc62)
        cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc136)
      } loc(#loc135)
    } loc(#loc133)
    cir.scope {
      %3 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc138)
      %4 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc138)
      cir.store %4, %3 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc138)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc68)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc68)
      %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc69)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc69)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc70)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc70)
      %11 = cir.const #cir.int<8> : !u64i loc(#loc139)
      %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc140)
      cir.libc.memcpy %12 bytes from %8 to %6 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc141)
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc75)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc76)
      %15 = cir.ptr_stride(%13 : !cir.ptr<!s64i>, %14 : !s32i), !cir.ptr<!s64i> loc(#loc77)
      %16 = cir.load %15 : !cir.ptr<!s64i>, !s64i loc(#loc75)
      cir.call @printLongLongLine(%16) : (!s64i) -> () loc(#loc78)
    } loc(#loc137)
    cir.return loc(#loc46)
  } loc(#loc129)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc143)
    %1 = cir.alloca !cir.array<!s64i x 50>, !cir.ptr<!cir.array<!s64i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc144)
    %2 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc145)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc110)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc89)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc90)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !s32i loc(#loc147)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc91)
      cir.if %7 {
        %8 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc93)
        cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc149)
      } loc(#loc148)
    } loc(#loc146)
    cir.scope {
      %3 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc151)
      %4 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc151)
      cir.store %4, %3 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc151)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc99)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc99)
      %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc100)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc100)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc101)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc101)
      %11 = cir.const #cir.int<8> : !u64i loc(#loc152)
      %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc153)
      cir.libc.memcpy %12 bytes from %8 to %6 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc154)
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc106)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc107)
      %15 = cir.ptr_stride(%13 : !cir.ptr<!s64i>, %14 : !s32i), !cir.ptr<!s64i> loc(#loc108)
      %16 = cir.load %15 : !cir.ptr<!s64i>, !s64i loc(#loc106)
      cir.call @printLongLongLine(%16) : (!s64i) -> () loc(#loc109)
    } loc(#loc150)
    cir.return loc(#loc80)
  } loc(#loc142)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":23:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":23:25)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":27:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":44:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":29:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":29:15)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":30:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":30:29)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":31:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":31:31)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":32:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":37:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":32:8)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":32:20)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":32:18)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":33:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":36:16)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":36:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":38:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":43:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":39:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":39:33)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":41:16)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":41:22)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":41:30)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":41:34)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":41:48)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":41:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":41:49)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":42:27)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":42:32)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":42:33)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":42:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":93:1)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":97:1)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":95:5)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":95:14)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":96:5)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":96:14)
#loc42 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc43 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":59:19)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":51:1)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":72:1)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":53:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":53:15)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":54:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":54:29)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":55:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":55:31)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":56:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":65:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":56:8)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":56:20)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":56:18)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":57:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":60:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":62:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":59:9)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":64:16)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":64:9)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":66:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":71:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":67:9)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":67:33)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":69:16)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":69:22)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":69:30)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":69:34)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":69:48)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":69:9)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":69:49)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":70:27)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":70:32)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":70:33)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":70:9)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":75:1)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":91:1)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":77:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":77:15)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":78:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":78:29)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":79:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":79:31)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":80:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":84:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":80:8)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":80:20)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":80:18)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":81:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":83:16)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":83:9)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":85:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":90:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":86:9)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":86:33)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":88:16)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":88:22)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":88:30)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":88:34)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":88:48)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":88:9)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":88:49)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":89:27)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":89:32)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":89:33)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_declare_memcpy_07.c":89:9)
#loc110 = loc(fused[#loc1, #loc2])
#loc111 = loc(fused[#loc3, #loc4])
#loc112 = loc(fused[#loc5, #loc6])
#loc113 = loc(fused[#loc7, #loc8])
#loc114 = loc(fused[#loc9, #loc10])
#loc115 = loc(fused[#loc11, #loc12])
#loc116 = loc(fused[#loc13, #loc14])
#loc117 = loc(fused[#loc15, #loc16])
#loc118 = loc(fused[#loc18, #loc14])
#loc119 = loc(fused[#loc20, #loc19])
#loc120 = loc(fused[#loc21, #loc22])
#loc121 = loc(fused[#loc23, #loc24])
#loc122 = loc(fused[#loc28, #loc29])
#loc123 = loc(fused[#loc27, #loc29])
#loc124 = loc(fused[#loc30, #loc31])
#loc125 = loc(fused[#loc36, #loc37])
#loc126 = loc(fused[#loc38, #loc39])
#loc127 = loc(fused[#loc40, #loc41])
#loc128 = loc(fused[#loc42, #loc43])
#loc129 = loc(fused[#loc45, #loc46])
#loc130 = loc(fused[#loc47, #loc48])
#loc131 = loc(fused[#loc49, #loc50])
#loc132 = loc(fused[#loc51, #loc52])
#loc133 = loc(fused[#loc53, #loc54])
#loc134 = loc(fused[#loc55, #loc56])
#loc135 = loc(fused[#loc58, #loc59, #loc60, #loc54])
#loc136 = loc(fused[#loc63, #loc62])
#loc137 = loc(fused[#loc64, #loc65])
#loc138 = loc(fused[#loc66, #loc67])
#loc139 = loc(fused[#loc71, #loc72])
#loc140 = loc(fused[#loc70, #loc72])
#loc141 = loc(fused[#loc73, #loc74])
#loc142 = loc(fused[#loc79, #loc80])
#loc143 = loc(fused[#loc81, #loc82])
#loc144 = loc(fused[#loc83, #loc84])
#loc145 = loc(fused[#loc85, #loc86])
#loc146 = loc(fused[#loc87, #loc88])
#loc147 = loc(fused[#loc89, #loc90])
#loc148 = loc(fused[#loc92, #loc88])
#loc149 = loc(fused[#loc94, #loc93])
#loc150 = loc(fused[#loc95, #loc96])
#loc151 = loc(fused[#loc97, #loc98])
#loc152 = loc(fused[#loc102, #loc103])
#loc153 = loc(fused[#loc101, #loc103])
#loc154 = loc(fused[#loc104, #loc105])
