!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":416:10)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":416:14)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":416:20)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":416:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc643 = loc(fused[#loc175, #loc176])
#loc644 = loc(fused[#loc177, #loc178])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc573)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc574)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc575)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc576)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc577)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc578)
  cir.func private @close(!s32i) -> !s32i loc(#loc579)
  cir.func private @printIntLine(!s32i) loc(#loc580)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc581)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc20)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc583)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc26)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc584)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc30)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc31)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc586)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc589)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc590)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc591)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc592)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc40)
          %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc40)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc591)
          cir.scope {
            cir.do {
              %12 = cir.const #cir.int<2> : !s32i loc(#loc45)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc46)
              %14 = cir.const #cir.int<6> : !s32i loc(#loc47)
              %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc48)
              cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc594)
              cir.scope {
                %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc53)
                %55 = cir.const #cir.int<1> : !s32i loc(#loc54)
                %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc54)
                %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc596)
                cir.if %57 {
                  cir.break loc(#loc56)
                } loc(#loc597)
              } loc(#loc595)
              %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc598)
              %17 = cir.const #cir.int<0> : !s32i loc(#loc59)
              %18 = cir.const #cir.int<16> : !u64i loc(#loc599)
              cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc600)
              %19 = cir.const #cir.int<2> : !s32i loc(#loc64)
              %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc64)
              %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
              cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc601)
              %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
              %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc67)
              %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
              %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
              cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc602)
              %27 = cir.const #cir.int<27015> : !s32i loc(#loc72)
              %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc72)
              %29 = cir.call @htons(%28) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc73)
              %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
              cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc603)
              cir.scope {
                %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc79)
                %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc605)
                %56 = cir.const #cir.int<16> : !u64i loc(#loc606)
                %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc606)
                %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc84)
                %59 = cir.const #cir.int<1> : !s32i loc(#loc85)
                %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc85)
                %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc607)
                cir.if %61 {
                  cir.break loc(#loc87)
                } loc(#loc608)
              } loc(#loc604)
              %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc88)
              %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc89)
              %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc89)
              %34 = cir.const #cir.int<3> : !s32i loc(#loc90)
              %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc90)
              %36 = cir.const #cir.int<4> : !u64i loc(#loc90)
              %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc90)
              %38 = cir.const #cir.int<2> : !s32i loc(#loc90)
              %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc90)
              %40 = cir.binop(add, %37, %39) : !u64i loc(#loc90)
              %41 = cir.const #cir.int<1> : !s32i loc(#loc91)
              %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc91)
              %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc609)
              %44 = cir.const #cir.int<0> : !s32i loc(#loc92)
              %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc93)
              %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc93)
              cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc610)
              cir.scope {
                %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc98)
                %55 = cir.const #cir.int<1> : !s32i loc(#loc99)
                %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc99)
                %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc612)
                %58 = cir.ternary(%57, true {
                  %59 = cir.const #true loc(#loc100)
                  cir.yield %59 : !cir.bool loc(#loc100)
                }, false {
                  %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc101)
                  %60 = cir.const #cir.int<0> : !s32i loc(#loc102)
                  %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc613)
                  %62 = cir.ternary(%61, true {
                    %63 = cir.const #true loc(#loc100)
                    cir.yield %63 : !cir.bool loc(#loc100)
                  }, false {
                    %63 = cir.const #false loc(#loc100)
                    cir.yield %63 : !cir.bool loc(#loc100)
                  }) : (!cir.bool) -> !cir.bool loc(#loc100)
                  cir.yield %62 : !cir.bool loc(#loc100)
                }) : (!cir.bool) -> !cir.bool loc(#loc100)
                cir.if %58 {
                  cir.break loc(#loc104)
                } loc(#loc614)
              } loc(#loc611)
              %47 = cir.const #cir.int<0> : !s32i loc(#loc105)
              %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc105)
              %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc106)
              %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc107)
              %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc107)
              cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc615)
              %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc108)
              %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc109)
              cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc616)
              cir.yield loc(#loc44)
            } while {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc112)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc112)
              cir.condition(%13) loc(#loc112)
            } loc(#loc593)
          } loc(#loc593)
          cir.scope {
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc115)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc116)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc116)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc618)
            cir.if %15 {
              %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc118)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc119)
            } loc(#loc619)
          } loc(#loc617)
        } loc(#loc588)
      } loc(#loc587)
    } loc(#loc585)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc122)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc123)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc621)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc624)
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc625)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc625)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc625)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc133)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc134)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc627)
            cir.if %11 {
              %12 = cir.const #cir.int<1> : !s32i loc(#loc138)
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc139)
              %14 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc140)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc140)
              cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc629)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc143)
                cir.store %16, %6 : !s32i, !cir.ptr<!s32i> loc(#loc631)
                cir.for : cond {
                  %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc145)
                  %18 = cir.const #cir.int<10> : !s32i loc(#loc146)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc632)
                  cir.condition(%19) loc(#loc147)
                } body {
                  cir.scope {
                    %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc149)
                    %18 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc150)
                    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc150)
                    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc150)
                    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc151)
                  } loc(#loc633)
                  cir.yield loc(#loc142)
                } step {
                  %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc152)
                  %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc153)
                  cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc634)
                  cir.yield loc(#loc630)
                } loc(#loc630)
              } loc(#loc630)
            } else {
              %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc20)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc20)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc154)
            } loc(#loc628)
          } loc(#loc626)
        } loc(#loc623)
      } loc(#loc622)
    } loc(#loc620)
    cir.return loc(#loc22)
  } loc(#loc582)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc636)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc157)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc637)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc159)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc638)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc161)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc639)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc163)
    cir.return loc(#loc156)
  } loc(#loc635)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc640)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc641)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc169)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc170)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc171)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc172)
  cir.func @main(%arg0: !s32i loc(fused[#loc175, #loc176]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc177, #loc178])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc643)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc644)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc174)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc179)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc179)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc180)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc181)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc181)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc182)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc169)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc169)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc183)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06_good : !cir.ptr<!cir.func<!void ()>> loc(#loc645)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06_good() : () -> () loc(#loc184)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc170)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc170)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc186)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc171)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc171)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc187)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc646)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06_bad() : () -> () loc(#loc188)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc172)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc172)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc190)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc191)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc647)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc647)
    cir.return %17 : !s32i loc(#loc647)
  } loc(#loc642)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc193)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc194)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc649)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc199)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc200)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc650)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc204)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc205)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc652)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc655)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc656)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc657)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc658)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc214)
          %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc214)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc657)
          cir.scope {
            cir.do {
              %12 = cir.const #cir.int<2> : !s32i loc(#loc219)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc220)
              %14 = cir.const #cir.int<6> : !s32i loc(#loc221)
              %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc222)
              cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc660)
              cir.scope {
                %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc227)
                %55 = cir.const #cir.int<1> : !s32i loc(#loc228)
                %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc228)
                %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc662)
                cir.if %57 {
                  cir.break loc(#loc230)
                } loc(#loc663)
              } loc(#loc661)
              %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc664)
              %17 = cir.const #cir.int<0> : !s32i loc(#loc233)
              %18 = cir.const #cir.int<16> : !u64i loc(#loc665)
              cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc666)
              %19 = cir.const #cir.int<2> : !s32i loc(#loc238)
              %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc238)
              %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
              cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc667)
              %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc240)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc240)
              %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc241)
              %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
              %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
              cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc668)
              %27 = cir.const #cir.int<27015> : !s32i loc(#loc244)
              %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc244)
              %29 = cir.call @htons(%28) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc245)
              %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
              cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc669)
              cir.scope {
                %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc250)
                %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc671)
                %56 = cir.const #cir.int<16> : !u64i loc(#loc672)
                %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc672)
                %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc255)
                %59 = cir.const #cir.int<1> : !s32i loc(#loc256)
                %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc256)
                %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc673)
                cir.if %61 {
                  cir.break loc(#loc258)
                } loc(#loc674)
              } loc(#loc670)
              %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc259)
              %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc260)
              %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc260)
              %34 = cir.const #cir.int<3> : !s32i loc(#loc261)
              %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc261)
              %36 = cir.const #cir.int<4> : !u64i loc(#loc261)
              %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc261)
              %38 = cir.const #cir.int<2> : !s32i loc(#loc261)
              %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc261)
              %40 = cir.binop(add, %37, %39) : !u64i loc(#loc261)
              %41 = cir.const #cir.int<1> : !s32i loc(#loc262)
              %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc262)
              %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc675)
              %44 = cir.const #cir.int<0> : !s32i loc(#loc263)
              %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc264)
              %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc264)
              cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc676)
              cir.scope {
                %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc269)
                %55 = cir.const #cir.int<1> : !s32i loc(#loc270)
                %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc270)
                %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc678)
                %58 = cir.ternary(%57, true {
                  %59 = cir.const #true loc(#loc271)
                  cir.yield %59 : !cir.bool loc(#loc271)
                }, false {
                  %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc272)
                  %60 = cir.const #cir.int<0> : !s32i loc(#loc273)
                  %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc679)
                  %62 = cir.ternary(%61, true {
                    %63 = cir.const #true loc(#loc271)
                    cir.yield %63 : !cir.bool loc(#loc271)
                  }, false {
                    %63 = cir.const #false loc(#loc271)
                    cir.yield %63 : !cir.bool loc(#loc271)
                  }) : (!cir.bool) -> !cir.bool loc(#loc271)
                  cir.yield %62 : !cir.bool loc(#loc271)
                }) : (!cir.bool) -> !cir.bool loc(#loc271)
                cir.if %58 {
                  cir.break loc(#loc275)
                } loc(#loc680)
              } loc(#loc677)
              %47 = cir.const #cir.int<0> : !s32i loc(#loc276)
              %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc276)
              %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc277)
              %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc278)
              %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc278)
              cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc681)
              %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc279)
              %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc280)
              cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc682)
              cir.yield loc(#loc218)
            } while {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc283)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc283)
              cir.condition(%13) loc(#loc283)
            } loc(#loc659)
          } loc(#loc659)
          cir.scope {
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc286)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc287)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc287)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc684)
            cir.if %15 {
              %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc289)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc290)
            } loc(#loc685)
          } loc(#loc683)
        } loc(#loc654)
      } loc(#loc653)
    } loc(#loc651)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc293)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc294)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc687)
      cir.if %5 {
        %6 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc193)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc193)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc298)
      } else {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc690)
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc691)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc691)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc691)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc307)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc308)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc693)
            %12 = cir.ternary(%11, true {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc310)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc311)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc694)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc309)
                cir.yield %17 : !cir.bool loc(#loc309)
              }, false {
                %17 = cir.const #false loc(#loc309)
                cir.yield %17 : !cir.bool loc(#loc309)
              }) : (!cir.bool) -> !cir.bool loc(#loc309)
              cir.yield %16 : !cir.bool loc(#loc309)
            }, false {
              %13 = cir.const #false loc(#loc309)
              cir.yield %13 : !cir.bool loc(#loc309)
            }) : (!cir.bool) -> !cir.bool loc(#loc309)
            cir.if %12 {
              %13 = cir.const #cir.int<1> : !s32i loc(#loc316)
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc317)
              %15 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc318)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc318)
              cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc696)
              cir.scope {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc321)
                cir.store %17, %6 : !s32i, !cir.ptr<!s32i> loc(#loc698)
                cir.for : cond {
                  %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc323)
                  %19 = cir.const #cir.int<10> : !s32i loc(#loc324)
                  %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc699)
                  cir.condition(%20) loc(#loc325)
                } body {
                  cir.scope {
                    %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc327)
                    %19 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc328)
                    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc328)
                    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc328)
                    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc329)
                  } loc(#loc700)
                  cir.yield loc(#loc320)
                } step {
                  %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc330)
                  %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc331)
                  cir.store %19, %6 : !s32i, !cir.ptr<!s32i> loc(#loc701)
                  cir.yield loc(#loc697)
                } loc(#loc697)
              } loc(#loc697)
            } else {
              %13 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc194)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc194)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc332)
            } loc(#loc695)
          } loc(#loc692)
        } loc(#loc689)
      } loc(#loc688)
    } loc(#loc686)
    cir.return loc(#loc196)
  } loc(#loc648)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc703)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc337)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc338)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc704)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc342)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc343)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc706)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc709)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc710)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc711)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc712)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc352)
          %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc352)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc711)
          cir.scope {
            cir.do {
              %12 = cir.const #cir.int<2> : !s32i loc(#loc357)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc358)
              %14 = cir.const #cir.int<6> : !s32i loc(#loc359)
              %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc360)
              cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc714)
              cir.scope {
                %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc365)
                %55 = cir.const #cir.int<1> : !s32i loc(#loc366)
                %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc366)
                %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc716)
                cir.if %57 {
                  cir.break loc(#loc368)
                } loc(#loc717)
              } loc(#loc715)
              %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc718)
              %17 = cir.const #cir.int<0> : !s32i loc(#loc371)
              %18 = cir.const #cir.int<16> : !u64i loc(#loc719)
              cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc720)
              %19 = cir.const #cir.int<2> : !s32i loc(#loc376)
              %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc376)
              %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
              cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc721)
              %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc378)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc378)
              %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc379)
              %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
              %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
              cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc722)
              %27 = cir.const #cir.int<27015> : !s32i loc(#loc382)
              %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc382)
              %29 = cir.call @htons(%28) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc383)
              %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
              cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc723)
              cir.scope {
                %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc388)
                %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc725)
                %56 = cir.const #cir.int<16> : !u64i loc(#loc726)
                %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc726)
                %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc393)
                %59 = cir.const #cir.int<1> : !s32i loc(#loc394)
                %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc394)
                %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc727)
                cir.if %61 {
                  cir.break loc(#loc396)
                } loc(#loc728)
              } loc(#loc724)
              %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc397)
              %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc398)
              %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc398)
              %34 = cir.const #cir.int<3> : !s32i loc(#loc399)
              %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc399)
              %36 = cir.const #cir.int<4> : !u64i loc(#loc399)
              %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc399)
              %38 = cir.const #cir.int<2> : !s32i loc(#loc399)
              %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc399)
              %40 = cir.binop(add, %37, %39) : !u64i loc(#loc399)
              %41 = cir.const #cir.int<1> : !s32i loc(#loc400)
              %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc400)
              %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc729)
              %44 = cir.const #cir.int<0> : !s32i loc(#loc401)
              %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc402)
              %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc402)
              cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc730)
              cir.scope {
                %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc407)
                %55 = cir.const #cir.int<1> : !s32i loc(#loc408)
                %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc408)
                %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc732)
                %58 = cir.ternary(%57, true {
                  %59 = cir.const #true loc(#loc409)
                  cir.yield %59 : !cir.bool loc(#loc409)
                }, false {
                  %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc410)
                  %60 = cir.const #cir.int<0> : !s32i loc(#loc411)
                  %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc733)
                  %62 = cir.ternary(%61, true {
                    %63 = cir.const #true loc(#loc409)
                    cir.yield %63 : !cir.bool loc(#loc409)
                  }, false {
                    %63 = cir.const #false loc(#loc409)
                    cir.yield %63 : !cir.bool loc(#loc409)
                  }) : (!cir.bool) -> !cir.bool loc(#loc409)
                  cir.yield %62 : !cir.bool loc(#loc409)
                }) : (!cir.bool) -> !cir.bool loc(#loc409)
                cir.if %58 {
                  cir.break loc(#loc413)
                } loc(#loc734)
              } loc(#loc731)
              %47 = cir.const #cir.int<0> : !s32i loc(#loc414)
              %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc414)
              %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc415)
              %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc416)
              %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc416)
              cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc735)
              %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc417)
              %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc418)
              cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc736)
              cir.yield loc(#loc356)
            } while {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc421)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc421)
              cir.condition(%13) loc(#loc421)
            } loc(#loc713)
          } loc(#loc713)
          cir.scope {
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc424)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc425)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc425)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc738)
            cir.if %15 {
              %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc427)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc428)
            } loc(#loc739)
          } loc(#loc737)
        } loc(#loc708)
      } loc(#loc707)
    } loc(#loc705)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc431)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc432)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc741)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc744)
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc745)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc745)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc745)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc442)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc443)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc747)
            %12 = cir.ternary(%11, true {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc445)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc446)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc748)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc444)
                cir.yield %17 : !cir.bool loc(#loc444)
              }, false {
                %17 = cir.const #false loc(#loc444)
                cir.yield %17 : !cir.bool loc(#loc444)
              }) : (!cir.bool) -> !cir.bool loc(#loc444)
              cir.yield %16 : !cir.bool loc(#loc444)
            }, false {
              %13 = cir.const #false loc(#loc444)
              cir.yield %13 : !cir.bool loc(#loc444)
            }) : (!cir.bool) -> !cir.bool loc(#loc444)
            cir.if %12 {
              %13 = cir.const #cir.int<1> : !s32i loc(#loc451)
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc452)
              %15 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc453)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc453)
              cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc750)
              cir.scope {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc456)
                cir.store %17, %6 : !s32i, !cir.ptr<!s32i> loc(#loc752)
                cir.for : cond {
                  %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc458)
                  %19 = cir.const #cir.int<10> : !s32i loc(#loc459)
                  %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc753)
                  cir.condition(%20) loc(#loc460)
                } body {
                  cir.scope {
                    %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc462)
                    %19 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc463)
                    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc463)
                    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc463)
                    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc464)
                  } loc(#loc754)
                  cir.yield loc(#loc455)
                } step {
                  %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc465)
                  %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc466)
                  cir.store %19, %6 : !s32i, !cir.ptr<!s32i> loc(#loc755)
                  cir.yield loc(#loc751)
                } loc(#loc751)
              } loc(#loc751)
            } else {
              %13 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc467)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc467)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc468)
            } loc(#loc749)
          } loc(#loc746)
        } loc(#loc743)
      } loc(#loc742)
    } loc(#loc740)
    cir.return loc(#loc334)
  } loc(#loc702)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc757)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc473)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc474)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc758)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc478)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc479)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc760)
      cir.if %5 {
        %6 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc483)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc483)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc484)
      } else {
        %6 = cir.const #cir.int<7> : !s32i loc(#loc485)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc762)
      } loc(#loc761)
    } loc(#loc759)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc489)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc490)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc764)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc767)
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc768)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc768)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc768)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc500)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc501)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc770)
            cir.if %11 {
              %12 = cir.const #cir.int<1> : !s32i loc(#loc505)
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc506)
              %14 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc507)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc507)
              cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc772)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc510)
                cir.store %16, %6 : !s32i, !cir.ptr<!s32i> loc(#loc774)
                cir.for : cond {
                  %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc512)
                  %18 = cir.const #cir.int<10> : !s32i loc(#loc513)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc775)
                  cir.condition(%19) loc(#loc514)
                } body {
                  cir.scope {
                    %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc516)
                    %18 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc517)
                    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc517)
                    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc517)
                    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc518)
                  } loc(#loc776)
                  cir.yield loc(#loc509)
                } step {
                  %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc519)
                  %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc520)
                  cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc777)
                  cir.yield loc(#loc773)
                } loc(#loc773)
              } loc(#loc773)
            } else {
              %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc521)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc521)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc522)
            } loc(#loc771)
          } loc(#loc769)
        } loc(#loc766)
      } loc(#loc765)
    } loc(#loc763)
    cir.return loc(#loc470)
  } loc(#loc756)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc779)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc527)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc528)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc780)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc532)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc533)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc782)
      cir.if %5 {
        %6 = cir.const #cir.int<7> : !s32i loc(#loc535)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc784)
      } loc(#loc783)
    } loc(#loc781)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc539)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc540)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc786)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc789)
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc790)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc790)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc790)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc550)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc551)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc792)
            cir.if %11 {
              %12 = cir.const #cir.int<1> : !s32i loc(#loc555)
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc556)
              %14 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc557)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc557)
              cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc794)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc560)
                cir.store %16, %6 : !s32i, !cir.ptr<!s32i> loc(#loc796)
                cir.for : cond {
                  %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc562)
                  %18 = cir.const #cir.int<10> : !s32i loc(#loc563)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc797)
                  cir.condition(%19) loc(#loc564)
                } body {
                  cir.scope {
                    %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc566)
                    %18 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc567)
                    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc567)
                    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc567)
                    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc568)
                  } loc(#loc798)
                  cir.yield loc(#loc559)
                } step {
                  %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc569)
                  %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc570)
                  cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc799)
                  cir.yield loc(#loc795)
                } loc(#loc795)
              } loc(#loc795)
            } else {
              %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc571)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc571)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc572)
            } loc(#loc793)
          } loc(#loc791)
        } loc(#loc788)
      } loc(#loc787)
    } loc(#loc785)
    cir.return loc(#loc524)
  } loc(#loc778)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":82:53)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":131:27)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":49:1)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":135:1)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":51:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":51:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":53:13)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":53:12)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":53:5)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":54:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":112:5)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":54:8)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":54:27)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":55:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":56:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":111:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":61:13)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":61:17)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":62:13)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":62:32)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":63:13)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":63:36)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":64:13)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":64:45)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":65:13)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":100:21)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":75:40)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":75:49)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":75:62)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":75:33)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":75:17)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":75:73)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":76:17)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":79:17)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":76:21)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":76:38)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":77:17)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":78:21)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":80:24)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":80:25)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":80:34)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":80:37)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":80:51)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":80:17)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":80:52)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":81:38)
#loc65 = loc("/usr/include/netinet/in.h":249:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":81:17)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":82:43)
#loc68 = loc("/usr/include/netinet/in.h":251:20)
#loc69 = loc("/usr/include/netinet/in.h":33:15)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":82:17)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":82:63)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":83:42)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":83:36)
#loc74 = loc("/usr/include/netinet/in.h":250:15)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":83:17)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":83:50)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":84:17)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":87:17)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":84:29)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":84:62)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":84:63)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":84:72)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":84:86)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":84:21)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":84:92)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":85:17)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":86:21)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":90:35)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":90:50)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":90:63)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":90:81)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":90:84)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":90:30)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":90:17)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":90:85)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":91:17)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":94:17)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":91:21)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":91:35)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":91:48)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":91:51)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":91:65)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":92:17)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":93:21)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":96:43)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":96:29)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":96:17)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":98:29)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":98:24)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":98:17)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":98:40)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":100:20)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":101:13)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":104:13)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":101:17)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":101:34)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":102:13)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":103:30)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":103:17)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":113:5)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":134:5)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":113:8)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":113:27)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":114:5)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":115:9)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":133:9)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":116:13)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":116:17)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":117:13)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":117:34)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":120:13)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":132:13)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":120:17)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":120:25)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":121:13)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":128:13)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":130:13)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":122:32)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":122:24)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":122:17)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":124:17)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":127:17)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":124:25)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":124:21)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":124:28)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":124:32)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":124:30)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":125:17)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":126:41)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":126:34)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":126:21)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":124:37)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":124:36)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":131:17)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":399:1)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":405:1)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":401:5)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":401:14)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":402:5)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":402:14)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":403:5)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":403:14)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":404:5)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":404:14)
#loc165 = loc("/usr/include/stdlib.h":575:1)
#loc166 = loc("/usr/include/stdlib.h":575:41)
#loc167 = loc("/usr/include/time.h":76:1)
#loc168 = loc("/usr/include/time.h":76:38)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":421:15)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":423:15)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":426:15)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":428:15)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":416:1)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":431:1)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":417:1)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":419:27)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":419:22)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":419:5)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":421:5)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":422:5)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":422:71)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":423:5)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":426:5)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":427:5)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":427:70)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":428:5)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":430:12)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":430:5)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":209:19)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":228:27)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":142:1)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":232:1)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":144:5)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":144:9)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":146:13)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":146:12)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":146:5)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":147:5)
#loc203 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":205:5)
#loc204 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":147:8)
#loc205 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":147:27)
#loc206 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":148:5)
#loc207 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":149:9)
#loc208 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":204:9)
#loc209 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":154:13)
#loc210 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":154:17)
#loc211 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":155:13)
#loc212 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":155:32)
#loc213 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":156:13)
#loc214 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":156:36)
#loc215 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":157:13)
#loc216 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":157:45)
#loc217 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":158:13)
#loc218 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":193:21)
#loc219 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":168:40)
#loc220 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":168:49)
#loc221 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":168:62)
#loc222 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":168:33)
#loc223 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":168:17)
#loc224 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":168:73)
#loc225 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":169:17)
#loc226 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":172:17)
#loc227 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":169:21)
#loc228 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":169:38)
#loc229 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":170:17)
#loc230 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":171:21)
#loc231 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":173:24)
#loc232 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":173:25)
#loc233 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":173:34)
#loc234 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":173:37)
#loc235 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":173:51)
#loc236 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":173:17)
#loc237 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":173:52)
#loc238 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":174:38)
#loc239 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":174:17)
#loc240 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":175:53)
#loc241 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":175:43)
#loc242 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":175:17)
#loc243 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":175:63)
#loc244 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":176:42)
#loc245 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":176:36)
#loc246 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":176:17)
#loc247 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":176:50)
#loc248 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":177:17)
#loc249 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":180:17)
#loc250 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":177:29)
#loc251 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":177:62)
#loc252 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":177:63)
#loc253 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":177:72)
#loc254 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":177:86)
#loc255 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":177:21)
#loc256 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":177:92)
#loc257 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":178:17)
#loc258 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":179:21)
#loc259 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":183:35)
#loc260 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":183:50)
#loc261 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":183:63)
#loc262 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":183:81)
#loc263 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":183:84)
#loc264 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":183:30)
#loc265 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":183:17)
#loc266 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":183:85)
#loc267 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":184:17)
#loc268 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":187:17)
#loc269 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":184:21)
#loc270 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":184:35)
#loc271 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":184:48)
#loc272 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":184:51)
#loc273 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":184:65)
#loc274 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":185:17)
#loc275 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":186:21)
#loc276 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":189:43)
#loc277 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":189:29)
#loc278 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":189:17)
#loc279 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":191:29)
#loc280 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":191:24)
#loc281 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":191:17)
#loc282 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":191:40)
#loc283 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":193:20)
#loc284 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":194:13)
#loc285 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":197:13)
#loc286 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":194:17)
#loc287 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":194:34)
#loc288 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":195:13)
#loc289 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":196:30)
#loc290 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":196:17)
#loc291 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":206:5)
#loc292 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":231:5)
#loc293 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":206:8)
#loc294 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":206:27)
#loc295 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":207:5)
#loc296 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":210:5)
#loc297 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":212:5)
#loc298 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":209:9)
#loc299 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":213:9)
#loc300 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":230:9)
#loc301 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":214:13)
#loc302 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":214:17)
#loc303 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":215:13)
#loc304 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":215:34)
#loc305 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":217:13)
#loc306 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":229:13)
#loc307 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":217:17)
#loc308 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":217:25)
#loc309 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":217:27)
#loc310 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":217:30)
#loc311 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":217:38)
#loc312 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":217:40)
#loc313 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":218:13)
#loc314 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":225:13)
#loc315 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":227:13)
#loc316 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":219:32)
#loc317 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":219:24)
#loc318 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":219:17)
#loc319 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":221:17)
#loc320 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":224:17)
#loc321 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":221:25)
#loc322 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":221:21)
#loc323 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":221:28)
#loc324 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":221:32)
#loc325 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":221:30)
#loc326 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":222:17)
#loc327 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":223:41)
#loc328 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":223:34)
#loc329 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":223:21)
#loc330 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":221:37)
#loc331 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":221:36)
#loc332 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":228:17)
#loc333 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":235:1)
#loc334 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":320:1)
#loc335 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":237:5)
#loc336 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":237:9)
#loc337 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":239:13)
#loc338 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":239:12)
#loc339 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":239:5)
#loc340 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":240:5)
#loc341 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":298:5)
#loc342 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":240:8)
#loc343 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":240:27)
#loc344 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":241:5)
#loc345 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":242:9)
#loc346 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":297:9)
#loc347 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":247:13)
#loc348 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":247:17)
#loc349 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":248:13)
#loc350 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":248:32)
#loc351 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":249:13)
#loc352 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":249:36)
#loc353 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":250:13)
#loc354 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":250:45)
#loc355 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":251:13)
#loc356 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":286:21)
#loc357 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":261:40)
#loc358 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":261:49)
#loc359 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":261:62)
#loc360 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":261:33)
#loc361 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":261:17)
#loc362 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":261:73)
#loc363 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":262:17)
#loc364 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":265:17)
#loc365 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":262:21)
#loc366 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":262:38)
#loc367 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":263:17)
#loc368 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":264:21)
#loc369 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":266:24)
#loc370 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":266:25)
#loc371 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":266:34)
#loc372 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":266:37)
#loc373 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":266:51)
#loc374 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":266:17)
#loc375 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":266:52)
#loc376 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":267:38)
#loc377 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":267:17)
#loc378 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":268:53)
#loc379 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":268:43)
#loc380 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":268:17)
#loc381 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":268:63)
#loc382 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":269:42)
#loc383 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":269:36)
#loc384 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":269:17)
#loc385 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":269:50)
#loc386 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":270:17)
#loc387 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":273:17)
#loc388 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":270:29)
#loc389 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":270:62)
#loc390 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":270:63)
#loc391 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":270:72)
#loc392 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":270:86)
#loc393 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":270:21)
#loc394 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":270:92)
#loc395 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":271:17)
#loc396 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":272:21)
#loc397 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":276:35)
#loc398 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":276:50)
#loc399 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":276:63)
#loc400 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":276:81)
#loc401 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":276:84)
#loc402 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":276:30)
#loc403 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":276:17)
#loc404 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":276:85)
#loc405 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":277:17)
#loc406 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":280:17)
#loc407 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":277:21)
#loc408 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":277:35)
#loc409 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":277:48)
#loc410 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":277:51)
#loc411 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":277:65)
#loc412 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":278:17)
#loc413 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":279:21)
#loc414 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":282:43)
#loc415 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":282:29)
#loc416 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":282:17)
#loc417 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":284:29)
#loc418 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":284:24)
#loc419 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":284:17)
#loc420 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":284:40)
#loc421 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":286:20)
#loc422 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":287:13)
#loc423 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":290:13)
#loc424 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":287:17)
#loc425 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":287:34)
#loc426 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":288:13)
#loc427 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":289:30)
#loc428 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":289:17)
#loc429 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":299:5)
#loc430 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":319:5)
#loc431 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":299:8)
#loc432 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":299:27)
#loc433 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":300:5)
#loc434 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":301:9)
#loc435 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":318:9)
#loc436 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":302:13)
#loc437 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":302:17)
#loc438 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":303:13)
#loc439 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":303:34)
#loc440 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":305:13)
#loc441 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":317:13)
#loc442 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":305:17)
#loc443 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":305:25)
#loc444 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":305:27)
#loc445 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":305:30)
#loc446 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":305:38)
#loc447 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":305:40)
#loc448 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":306:13)
#loc449 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":313:13)
#loc450 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":315:13)
#loc451 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":307:32)
#loc452 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":307:24)
#loc453 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":307:17)
#loc454 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":309:17)
#loc455 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":312:17)
#loc456 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":309:25)
#loc457 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":309:21)
#loc458 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":309:28)
#loc459 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":309:32)
#loc460 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":309:30)
#loc461 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":310:17)
#loc462 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":311:41)
#loc463 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":311:34)
#loc464 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":311:21)
#loc465 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":309:37)
#loc466 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":309:36)
#loc467 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":316:27)
#loc468 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":316:17)
#loc469 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":323:1)
#loc470 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":361:1)
#loc471 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":325:5)
#loc472 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":325:9)
#loc473 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":327:13)
#loc474 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":327:12)
#loc475 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":327:5)
#loc476 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":328:5)
#loc477 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":338:5)
#loc478 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":328:8)
#loc479 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":328:27)
#loc480 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":329:5)
#loc481 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":332:5)
#loc482 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":334:5)
#loc483 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":331:19)
#loc484 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":331:9)
#loc485 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":337:16)
#loc486 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":337:9)
#loc487 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":339:5)
#loc488 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":360:5)
#loc489 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":339:8)
#loc490 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":339:27)
#loc491 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":340:5)
#loc492 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":341:9)
#loc493 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":359:9)
#loc494 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":342:13)
#loc495 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":342:17)
#loc496 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":343:13)
#loc497 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":343:34)
#loc498 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":346:13)
#loc499 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":358:13)
#loc500 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":346:17)
#loc501 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":346:25)
#loc502 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":347:13)
#loc503 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":354:13)
#loc504 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":356:13)
#loc505 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":348:32)
#loc506 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":348:24)
#loc507 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":348:17)
#loc508 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":350:17)
#loc509 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":353:17)
#loc510 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":350:25)
#loc511 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":350:21)
#loc512 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":350:28)
#loc513 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":350:32)
#loc514 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":350:30)
#loc515 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":351:17)
#loc516 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":352:41)
#loc517 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":352:34)
#loc518 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":352:21)
#loc519 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":350:37)
#loc520 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":350:36)
#loc521 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":357:27)
#loc522 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":357:17)
#loc523 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":364:1)
#loc524 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":397:1)
#loc525 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":366:5)
#loc526 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":366:9)
#loc527 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":368:13)
#loc528 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":368:12)
#loc529 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":368:5)
#loc530 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":369:5)
#loc531 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":374:5)
#loc532 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":369:8)
#loc533 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":369:27)
#loc534 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":370:5)
#loc535 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":373:16)
#loc536 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":373:9)
#loc537 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":375:5)
#loc538 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":396:5)
#loc539 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":375:8)
#loc540 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":375:27)
#loc541 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":376:5)
#loc542 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":377:9)
#loc543 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":395:9)
#loc544 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":378:13)
#loc545 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":378:17)
#loc546 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":379:13)
#loc547 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":379:34)
#loc548 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":382:13)
#loc549 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":394:13)
#loc550 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":382:17)
#loc551 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":382:25)
#loc552 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":383:13)
#loc553 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":390:13)
#loc554 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":392:13)
#loc555 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":384:32)
#loc556 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":384:24)
#loc557 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":384:17)
#loc558 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":386:17)
#loc559 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":389:17)
#loc560 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":386:25)
#loc561 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":386:21)
#loc562 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":386:28)
#loc563 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":386:32)
#loc564 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":386:30)
#loc565 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":387:17)
#loc566 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":388:41)
#loc567 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":388:34)
#loc568 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":388:21)
#loc569 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":386:37)
#loc570 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":386:36)
#loc571 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":393:27)
#loc572 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_06.c":393:17)
#loc573 = loc(fused[#loc1, #loc2])
#loc574 = loc(fused[#loc3, #loc4])
#loc575 = loc(fused[#loc6, #loc7])
#loc576 = loc(fused[#loc8, #loc9])
#loc577 = loc(fused[#loc10, #loc11])
#loc578 = loc(fused[#loc12, #loc13])
#loc579 = loc(fused[#loc14, #loc15])
#loc580 = loc(fused[#loc16, #loc17])
#loc581 = loc(fused[#loc18, #loc19])
#loc582 = loc(fused[#loc21, #loc22])
#loc583 = loc(fused[#loc23, #loc24])
#loc584 = loc(fused[#loc27, #loc25])
#loc585 = loc(fused[#loc28, #loc29])
#loc586 = loc(fused[#loc30, #loc31])
#loc587 = loc(fused[#loc32, #loc29])
#loc588 = loc(fused[#loc33, #loc34])
#loc589 = loc(fused[#loc35, #loc36])
#loc590 = loc(fused[#loc37, #loc38])
#loc591 = loc(fused[#loc39, #loc40])
#loc592 = loc(fused[#loc41, #loc42])
#loc593 = loc(fused[#loc43, #loc44])
#loc594 = loc(fused[#loc49, #loc50])
#loc595 = loc(fused[#loc51, #loc52])
#loc596 = loc(fused[#loc53, #loc54])
#loc597 = loc(fused[#loc55, #loc52])
#loc598 = loc(fused[#loc57, #loc58])
#loc599 = loc(fused[#loc60, #loc61])
#loc600 = loc(fused[#loc62, #loc63])
#loc601 = loc(fused[#loc66, #loc64])
#loc602 = loc(fused[#loc70, #loc71])
#loc603 = loc(fused[#loc75, #loc76])
#loc604 = loc(fused[#loc77, #loc78])
#loc605 = loc(fused[#loc80, #loc81])
#loc606 = loc(fused[#loc82, #loc83])
#loc607 = loc(fused[#loc84, #loc85])
#loc608 = loc(fused[#loc86, #loc78])
#loc609 = loc(fused[#loc90, #loc91])
#loc610 = loc(fused[#loc94, #loc95])
#loc611 = loc(fused[#loc96, #loc97])
#loc612 = loc(fused[#loc98, #loc99])
#loc613 = loc(fused[#loc101, #loc102])
#loc614 = loc(fused[#loc103, #loc97])
#loc615 = loc(fused[#loc107, #loc105])
#loc616 = loc(fused[#loc110, #loc111])
#loc617 = loc(fused[#loc113, #loc114])
#loc618 = loc(fused[#loc115, #loc116])
#loc619 = loc(fused[#loc117, #loc114])
#loc620 = loc(fused[#loc120, #loc121])
#loc621 = loc(fused[#loc122, #loc123])
#loc622 = loc(fused[#loc124, #loc121])
#loc623 = loc(fused[#loc125, #loc126])
#loc624 = loc(fused[#loc127, #loc128])
#loc625 = loc(fused[#loc129, #loc130])
#loc626 = loc(fused[#loc131, #loc132])
#loc627 = loc(fused[#loc133, #loc134])
#loc628 = loc(fused[#loc135, #loc136, #loc137, #loc132])
#loc629 = loc(fused[#loc140, #loc138])
#loc630 = loc(fused[#loc141, #loc142])
#loc631 = loc(fused[#loc144, #loc143])
#loc632 = loc(fused[#loc145, #loc146])
#loc633 = loc(fused[#loc148, #loc142])
#loc634 = loc(fused[#loc153, #loc152])
#loc635 = loc(fused[#loc155, #loc156])
#loc636 = loc(fused[#loc157, #loc158])
#loc637 = loc(fused[#loc159, #loc160])
#loc638 = loc(fused[#loc161, #loc162])
#loc639 = loc(fused[#loc163, #loc164])
#loc640 = loc(fused[#loc165, #loc166])
#loc641 = loc(fused[#loc167, #loc168])
#loc642 = loc(fused[#loc173, #loc174])
#loc645 = loc(fused[#loc184, #loc185])
#loc646 = loc(fused[#loc188, #loc189])
#loc647 = loc(fused[#loc192, #loc191])
#loc648 = loc(fused[#loc195, #loc196])
#loc649 = loc(fused[#loc197, #loc198])
#loc650 = loc(fused[#loc201, #loc199])
#loc651 = loc(fused[#loc202, #loc203])
#loc652 = loc(fused[#loc204, #loc205])
#loc653 = loc(fused[#loc206, #loc203])
#loc654 = loc(fused[#loc207, #loc208])
#loc655 = loc(fused[#loc209, #loc210])
#loc656 = loc(fused[#loc211, #loc212])
#loc657 = loc(fused[#loc213, #loc214])
#loc658 = loc(fused[#loc215, #loc216])
#loc659 = loc(fused[#loc217, #loc218])
#loc660 = loc(fused[#loc223, #loc224])
#loc661 = loc(fused[#loc225, #loc226])
#loc662 = loc(fused[#loc227, #loc228])
#loc663 = loc(fused[#loc229, #loc226])
#loc664 = loc(fused[#loc231, #loc232])
#loc665 = loc(fused[#loc234, #loc235])
#loc666 = loc(fused[#loc236, #loc237])
#loc667 = loc(fused[#loc239, #loc238])
#loc668 = loc(fused[#loc242, #loc243])
#loc669 = loc(fused[#loc246, #loc247])
#loc670 = loc(fused[#loc248, #loc249])
#loc671 = loc(fused[#loc251, #loc252])
#loc672 = loc(fused[#loc253, #loc254])
#loc673 = loc(fused[#loc255, #loc256])
#loc674 = loc(fused[#loc257, #loc249])
#loc675 = loc(fused[#loc261, #loc262])
#loc676 = loc(fused[#loc265, #loc266])
#loc677 = loc(fused[#loc267, #loc268])
#loc678 = loc(fused[#loc269, #loc270])
#loc679 = loc(fused[#loc272, #loc273])
#loc680 = loc(fused[#loc274, #loc268])
#loc681 = loc(fused[#loc278, #loc276])
#loc682 = loc(fused[#loc281, #loc282])
#loc683 = loc(fused[#loc284, #loc285])
#loc684 = loc(fused[#loc286, #loc287])
#loc685 = loc(fused[#loc288, #loc285])
#loc686 = loc(fused[#loc291, #loc292])
#loc687 = loc(fused[#loc293, #loc294])
#loc688 = loc(fused[#loc295, #loc296, #loc297, #loc292])
#loc689 = loc(fused[#loc299, #loc300])
#loc690 = loc(fused[#loc301, #loc302])
#loc691 = loc(fused[#loc303, #loc304])
#loc692 = loc(fused[#loc305, #loc306])
#loc693 = loc(fused[#loc307, #loc308])
#loc694 = loc(fused[#loc310, #loc312])
#loc695 = loc(fused[#loc313, #loc314, #loc315, #loc306])
#loc696 = loc(fused[#loc318, #loc316])
#loc697 = loc(fused[#loc319, #loc320])
#loc698 = loc(fused[#loc322, #loc321])
#loc699 = loc(fused[#loc323, #loc324])
#loc700 = loc(fused[#loc326, #loc320])
#loc701 = loc(fused[#loc331, #loc330])
#loc702 = loc(fused[#loc333, #loc334])
#loc703 = loc(fused[#loc335, #loc336])
#loc704 = loc(fused[#loc339, #loc337])
#loc705 = loc(fused[#loc340, #loc341])
#loc706 = loc(fused[#loc342, #loc343])
#loc707 = loc(fused[#loc344, #loc341])
#loc708 = loc(fused[#loc345, #loc346])
#loc709 = loc(fused[#loc347, #loc348])
#loc710 = loc(fused[#loc349, #loc350])
#loc711 = loc(fused[#loc351, #loc352])
#loc712 = loc(fused[#loc353, #loc354])
#loc713 = loc(fused[#loc355, #loc356])
#loc714 = loc(fused[#loc361, #loc362])
#loc715 = loc(fused[#loc363, #loc364])
#loc716 = loc(fused[#loc365, #loc366])
#loc717 = loc(fused[#loc367, #loc364])
#loc718 = loc(fused[#loc369, #loc370])
#loc719 = loc(fused[#loc372, #loc373])
#loc720 = loc(fused[#loc374, #loc375])
#loc721 = loc(fused[#loc377, #loc376])
#loc722 = loc(fused[#loc380, #loc381])
#loc723 = loc(fused[#loc384, #loc385])
#loc724 = loc(fused[#loc386, #loc387])
#loc725 = loc(fused[#loc389, #loc390])
#loc726 = loc(fused[#loc391, #loc392])
#loc727 = loc(fused[#loc393, #loc394])
#loc728 = loc(fused[#loc395, #loc387])
#loc729 = loc(fused[#loc399, #loc400])
#loc730 = loc(fused[#loc403, #loc404])
#loc731 = loc(fused[#loc405, #loc406])
#loc732 = loc(fused[#loc407, #loc408])
#loc733 = loc(fused[#loc410, #loc411])
#loc734 = loc(fused[#loc412, #loc406])
#loc735 = loc(fused[#loc416, #loc414])
#loc736 = loc(fused[#loc419, #loc420])
#loc737 = loc(fused[#loc422, #loc423])
#loc738 = loc(fused[#loc424, #loc425])
#loc739 = loc(fused[#loc426, #loc423])
#loc740 = loc(fused[#loc429, #loc430])
#loc741 = loc(fused[#loc431, #loc432])
#loc742 = loc(fused[#loc433, #loc430])
#loc743 = loc(fused[#loc434, #loc435])
#loc744 = loc(fused[#loc436, #loc437])
#loc745 = loc(fused[#loc438, #loc439])
#loc746 = loc(fused[#loc440, #loc441])
#loc747 = loc(fused[#loc442, #loc443])
#loc748 = loc(fused[#loc445, #loc447])
#loc749 = loc(fused[#loc448, #loc449, #loc450, #loc441])
#loc750 = loc(fused[#loc453, #loc451])
#loc751 = loc(fused[#loc454, #loc455])
#loc752 = loc(fused[#loc457, #loc456])
#loc753 = loc(fused[#loc458, #loc459])
#loc754 = loc(fused[#loc461, #loc455])
#loc755 = loc(fused[#loc466, #loc465])
#loc756 = loc(fused[#loc469, #loc470])
#loc757 = loc(fused[#loc471, #loc472])
#loc758 = loc(fused[#loc475, #loc473])
#loc759 = loc(fused[#loc476, #loc477])
#loc760 = loc(fused[#loc478, #loc479])
#loc761 = loc(fused[#loc480, #loc481, #loc482, #loc477])
#loc762 = loc(fused[#loc486, #loc485])
#loc763 = loc(fused[#loc487, #loc488])
#loc764 = loc(fused[#loc489, #loc490])
#loc765 = loc(fused[#loc491, #loc488])
#loc766 = loc(fused[#loc492, #loc493])
#loc767 = loc(fused[#loc494, #loc495])
#loc768 = loc(fused[#loc496, #loc497])
#loc769 = loc(fused[#loc498, #loc499])
#loc770 = loc(fused[#loc500, #loc501])
#loc771 = loc(fused[#loc502, #loc503, #loc504, #loc499])
#loc772 = loc(fused[#loc507, #loc505])
#loc773 = loc(fused[#loc508, #loc509])
#loc774 = loc(fused[#loc511, #loc510])
#loc775 = loc(fused[#loc512, #loc513])
#loc776 = loc(fused[#loc515, #loc509])
#loc777 = loc(fused[#loc520, #loc519])
#loc778 = loc(fused[#loc523, #loc524])
#loc779 = loc(fused[#loc525, #loc526])
#loc780 = loc(fused[#loc529, #loc527])
#loc781 = loc(fused[#loc530, #loc531])
#loc782 = loc(fused[#loc532, #loc533])
#loc783 = loc(fused[#loc534, #loc531])
#loc784 = loc(fused[#loc536, #loc535])
#loc785 = loc(fused[#loc537, #loc538])
#loc786 = loc(fused[#loc539, #loc540])
#loc787 = loc(fused[#loc541, #loc538])
#loc788 = loc(fused[#loc542, #loc543])
#loc789 = loc(fused[#loc544, #loc545])
#loc790 = loc(fused[#loc546, #loc547])
#loc791 = loc(fused[#loc548, #loc549])
#loc792 = loc(fused[#loc550, #loc551])
#loc793 = loc(fused[#loc552, #loc553, #loc554, #loc549])
#loc794 = loc(fused[#loc557, #loc555])
#loc795 = loc(fused[#loc558, #loc559])
#loc796 = loc(fused[#loc561, #loc560])
#loc797 = loc(fused[#loc562, #loc563])
#loc798 = loc(fused[#loc565, #loc559])
#loc799 = loc(fused[#loc570, #loc569])
