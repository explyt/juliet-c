!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc3 = loc("CWE415_Double_Free__malloc_free_char_44.c":24:21)
#loc4 = loc("CWE415_Double_Free__malloc_free_char_44.c":24:28)
#loc49 = loc("CWE415_Double_Free__malloc_free_char_44.c":50:25)
#loc50 = loc("CWE415_Double_Free__malloc_free_char_44.c":50:32)
#loc81 = loc("CWE415_Double_Free__malloc_free_char_44.c":69:25)
#loc82 = loc("CWE415_Double_Free__malloc_free_char_44.c":69:32)
#loc112 = loc(fused[#loc3, #loc4])
#loc131 = loc(fused[#loc49, #loc50])
#loc144 = loc(fused[#loc81, #loc82])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_char_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func internal private  @badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc3, #loc4])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc112)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc5)
    %1 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc6)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc7)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc7)
    cir.call @free(%3) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc6)
    cir.return loc(#loc2)
  } loc(#loc111)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc113)
  cir.func private  @exit(!s32i) extra(#fn_attr1) loc(#loc114)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc115)
  cir.func no_proto  @CWE415_Double_Free__malloc_free_char_44_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc117)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc118)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc19)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc118)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc20)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc119)
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc22)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc23)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc23)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc120)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc121)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc22)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc122)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc123)
    cir.scope {
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
      %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc31)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc31)
      %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !s32i loc(#loc125)
      %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc32)
      cir.if %20 {
        %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc34)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc35)
        %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc36)
        cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr1) loc(#loc34)
      } loc(#loc126)
    } loc(#loc124)
    %11 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc37)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc38)
    cir.call @free(%13) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc37)
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc39)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    cir.call %14(%15) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc39)
    cir.return loc(#loc15)
  } loc(#loc116)
  cir.func no_proto  @CWE415_Double_Free__malloc_free_char_44_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc128)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc129)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    cir.return loc(#loc42)
  } loc(#loc127)
  cir.func internal private  @goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc49, #loc50])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc131)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc51)
    %1 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc52)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc53)
    cir.call @free(%3) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc52)
    cir.return loc(#loc48)
  } loc(#loc130)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc133)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc134)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc59)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc134)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc60)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc135)
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc62)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc63)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc63)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc136)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc137)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc62)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc138)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc139)
    cir.scope {
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
      %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc71)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc71)
      %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s8i>, !s32i loc(#loc141)
      %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc72)
      cir.if %17 {
        %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc74)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc75)
        %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc76)
        cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr1) loc(#loc74)
      } loc(#loc142)
    } loc(#loc140)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc77)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
    cir.call %11(%12) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc77)
    cir.return loc(#loc55)
  } loc(#loc132)
  cir.func internal private  @goodB2GSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc81, #loc82])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc144)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc83)
    cir.return loc(#loc80)
  } loc(#loc143)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc146)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc147)
    %2 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc89)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc147)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc90)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc148)
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc92)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc93)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc93)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc149)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc150)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc92)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc151)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
    cir.scope {
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
      %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc101)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc101)
      %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !s32i loc(#loc154)
      %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc102)
      cir.if %20 {
        %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc104)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc105)
        %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc106)
        cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr1) loc(#loc104)
      } loc(#loc155)
    } loc(#loc153)
    %11 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc107)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc108)
    cir.call @free(%13) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc107)
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc109)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
    cir.call %14(%15) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc109)
    cir.return loc(#loc85)
  } loc(#loc145)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_char_44.c":0:0)
#loc1 = loc("CWE415_Double_Free__malloc_free_char_44.c":24:1)
#loc2 = loc("CWE415_Double_Free__malloc_free_char_44.c":28:1)
#loc5 = loc("CWE415_Double_Free__malloc_free_char_44.c":25:1)
#loc6 = loc("CWE415_Double_Free__malloc_free_char_44.c":27:5)
#loc7 = loc("CWE415_Double_Free__malloc_free_char_44.c":27:10)
#loc8 = loc("/usr/include/stdlib.h":672:1)
#loc9 = loc("/usr/include/stdlib.h":672:45)
#loc10 = loc("/usr/include/stdlib.h":756:1)
#loc11 = loc("/usr/include/stdlib.h":756:70)
#loc12 = loc("/usr/include/stdlib.h":687:1)
#loc13 = loc("/usr/include/stdlib.h":687:32)
#loc14 = loc("CWE415_Double_Free__malloc_free_char_44.c":30:1)
#loc15 = loc("CWE415_Double_Free__malloc_free_char_44.c":43:1)
#loc16 = loc("CWE415_Double_Free__malloc_free_char_44.c":32:5)
#loc17 = loc("CWE415_Double_Free__malloc_free_char_44.c":32:12)
#loc18 = loc("CWE415_Double_Free__malloc_free_char_44.c":34:5)
#loc19 = loc("CWE415_Double_Free__malloc_free_char_44.c":34:32)
#loc20 = loc("CWE415_Double_Free__malloc_free_char_44.c":36:12)
#loc21 = loc("CWE415_Double_Free__malloc_free_char_44.c":36:5)
#loc22 = loc("CWE415_Double_Free__malloc_free_char_44.c":37:20)
#loc23 = loc("CWE415_Double_Free__malloc_free_char_44.c":37:27)
#loc24 = loc("CWE415_Double_Free__malloc_free_char_44.c":37:31)
#loc25 = loc("CWE415_Double_Free__malloc_free_char_44.c":37:42)
#loc26 = loc("CWE415_Double_Free__malloc_free_char_44.c":37:43)
#loc27 = loc("CWE415_Double_Free__malloc_free_char_44.c":37:5)
#loc28 = loc("CWE415_Double_Free__malloc_free_char_44.c":38:5)
#loc29 = loc("CWE415_Double_Free__malloc_free_char_44.c":38:33)
#loc30 = loc("CWE415_Double_Free__malloc_free_char_44.c":38:9)
#loc31 = loc("CWE415_Double_Free__malloc_free_char_44.c":38:17)
#loc32 = loc("CWE415_Double_Free__malloc_free_char_44.c":38:14)
#loc33 = loc("CWE415_Double_Free__malloc_free_char_44.c":38:23)
#loc34 = loc("CWE415_Double_Free__malloc_free_char_44.c":38:24)
#loc35 = loc("CWE415_Double_Free__malloc_free_char_44.c":38:30)
#loc36 = loc("CWE415_Double_Free__malloc_free_char_44.c":38:29)
#loc37 = loc("CWE415_Double_Free__malloc_free_char_44.c":40:5)
#loc38 = loc("CWE415_Double_Free__malloc_free_char_44.c":40:10)
#loc39 = loc("CWE415_Double_Free__malloc_free_char_44.c":42:5)
#loc40 = loc("CWE415_Double_Free__malloc_free_char_44.c":42:13)
#loc41 = loc("CWE415_Double_Free__malloc_free_char_44.c":89:1)
#loc42 = loc("CWE415_Double_Free__malloc_free_char_44.c":93:1)
#loc43 = loc("CWE415_Double_Free__malloc_free_char_44.c":91:5)
#loc44 = loc("CWE415_Double_Free__malloc_free_char_44.c":91:13)
#loc45 = loc("CWE415_Double_Free__malloc_free_char_44.c":92:5)
#loc46 = loc("CWE415_Double_Free__malloc_free_char_44.c":92:13)
#loc47 = loc("CWE415_Double_Free__malloc_free_char_44.c":50:1)
#loc48 = loc("CWE415_Double_Free__malloc_free_char_44.c":54:1)
#loc51 = loc("CWE415_Double_Free__malloc_free_char_44.c":51:1)
#loc52 = loc("CWE415_Double_Free__malloc_free_char_44.c":53:5)
#loc53 = loc("CWE415_Double_Free__malloc_free_char_44.c":53:10)
#loc54 = loc("CWE415_Double_Free__malloc_free_char_44.c":56:1)
#loc55 = loc("CWE415_Double_Free__malloc_free_char_44.c":66:1)
#loc56 = loc("CWE415_Double_Free__malloc_free_char_44.c":58:5)
#loc57 = loc("CWE415_Double_Free__malloc_free_char_44.c":58:12)
#loc58 = loc("CWE415_Double_Free__malloc_free_char_44.c":59:5)
#loc59 = loc("CWE415_Double_Free__malloc_free_char_44.c":59:32)
#loc60 = loc("CWE415_Double_Free__malloc_free_char_44.c":61:12)
#loc61 = loc("CWE415_Double_Free__malloc_free_char_44.c":61:5)
#loc62 = loc("CWE415_Double_Free__malloc_free_char_44.c":62:20)
#loc63 = loc("CWE415_Double_Free__malloc_free_char_44.c":62:27)
#loc64 = loc("CWE415_Double_Free__malloc_free_char_44.c":62:31)
#loc65 = loc("CWE415_Double_Free__malloc_free_char_44.c":62:42)
#loc66 = loc("CWE415_Double_Free__malloc_free_char_44.c":62:43)
#loc67 = loc("CWE415_Double_Free__malloc_free_char_44.c":62:5)
#loc68 = loc("CWE415_Double_Free__malloc_free_char_44.c":63:5)
#loc69 = loc("CWE415_Double_Free__malloc_free_char_44.c":63:33)
#loc70 = loc("CWE415_Double_Free__malloc_free_char_44.c":63:9)
#loc71 = loc("CWE415_Double_Free__malloc_free_char_44.c":63:17)
#loc72 = loc("CWE415_Double_Free__malloc_free_char_44.c":63:14)
#loc73 = loc("CWE415_Double_Free__malloc_free_char_44.c":63:23)
#loc74 = loc("CWE415_Double_Free__malloc_free_char_44.c":63:24)
#loc75 = loc("CWE415_Double_Free__malloc_free_char_44.c":63:30)
#loc76 = loc("CWE415_Double_Free__malloc_free_char_44.c":63:29)
#loc77 = loc("CWE415_Double_Free__malloc_free_char_44.c":65:5)
#loc78 = loc("CWE415_Double_Free__malloc_free_char_44.c":65:13)
#loc79 = loc("CWE415_Double_Free__malloc_free_char_44.c":69:1)
#loc80 = loc("CWE415_Double_Free__malloc_free_char_44.c":74:1)
#loc83 = loc("CWE415_Double_Free__malloc_free_char_44.c":70:1)
#loc84 = loc("CWE415_Double_Free__malloc_free_char_44.c":76:1)
#loc85 = loc("CWE415_Double_Free__malloc_free_char_44.c":87:1)
#loc86 = loc("CWE415_Double_Free__malloc_free_char_44.c":78:5)
#loc87 = loc("CWE415_Double_Free__malloc_free_char_44.c":78:12)
#loc88 = loc("CWE415_Double_Free__malloc_free_char_44.c":79:5)
#loc89 = loc("CWE415_Double_Free__malloc_free_char_44.c":79:32)
#loc90 = loc("CWE415_Double_Free__malloc_free_char_44.c":81:12)
#loc91 = loc("CWE415_Double_Free__malloc_free_char_44.c":81:5)
#loc92 = loc("CWE415_Double_Free__malloc_free_char_44.c":82:20)
#loc93 = loc("CWE415_Double_Free__malloc_free_char_44.c":82:27)
#loc94 = loc("CWE415_Double_Free__malloc_free_char_44.c":82:31)
#loc95 = loc("CWE415_Double_Free__malloc_free_char_44.c":82:42)
#loc96 = loc("CWE415_Double_Free__malloc_free_char_44.c":82:43)
#loc97 = loc("CWE415_Double_Free__malloc_free_char_44.c":82:5)
#loc98 = loc("CWE415_Double_Free__malloc_free_char_44.c":83:5)
#loc99 = loc("CWE415_Double_Free__malloc_free_char_44.c":83:33)
#loc100 = loc("CWE415_Double_Free__malloc_free_char_44.c":83:9)
#loc101 = loc("CWE415_Double_Free__malloc_free_char_44.c":83:17)
#loc102 = loc("CWE415_Double_Free__malloc_free_char_44.c":83:14)
#loc103 = loc("CWE415_Double_Free__malloc_free_char_44.c":83:23)
#loc104 = loc("CWE415_Double_Free__malloc_free_char_44.c":83:24)
#loc105 = loc("CWE415_Double_Free__malloc_free_char_44.c":83:30)
#loc106 = loc("CWE415_Double_Free__malloc_free_char_44.c":83:29)
#loc107 = loc("CWE415_Double_Free__malloc_free_char_44.c":85:5)
#loc108 = loc("CWE415_Double_Free__malloc_free_char_44.c":85:10)
#loc109 = loc("CWE415_Double_Free__malloc_free_char_44.c":86:5)
#loc110 = loc("CWE415_Double_Free__malloc_free_char_44.c":86:13)
#loc111 = loc(fused[#loc1, #loc2])
#loc113 = loc(fused[#loc8, #loc9])
#loc114 = loc(fused[#loc10, #loc11])
#loc115 = loc(fused[#loc12, #loc13])
#loc116 = loc(fused[#loc14, #loc15])
#loc117 = loc(fused[#loc16, #loc17])
#loc118 = loc(fused[#loc18, #loc19])
#loc119 = loc(fused[#loc21, #loc20])
#loc120 = loc(fused[#loc24, #loc25])
#loc121 = loc(fused[#loc23, #loc25])
#loc122 = loc(fused[#loc22, #loc26])
#loc123 = loc(fused[#loc27, #loc26])
#loc124 = loc(fused[#loc28, #loc29])
#loc125 = loc(fused[#loc30, #loc31])
#loc126 = loc(fused[#loc33, #loc29])
#loc127 = loc(fused[#loc41, #loc42])
#loc128 = loc(fused[#loc43, #loc44])
#loc129 = loc(fused[#loc45, #loc46])
#loc130 = loc(fused[#loc47, #loc48])
#loc132 = loc(fused[#loc54, #loc55])
#loc133 = loc(fused[#loc56, #loc57])
#loc134 = loc(fused[#loc58, #loc59])
#loc135 = loc(fused[#loc61, #loc60])
#loc136 = loc(fused[#loc64, #loc65])
#loc137 = loc(fused[#loc63, #loc65])
#loc138 = loc(fused[#loc62, #loc66])
#loc139 = loc(fused[#loc67, #loc66])
#loc140 = loc(fused[#loc68, #loc69])
#loc141 = loc(fused[#loc70, #loc71])
#loc142 = loc(fused[#loc73, #loc69])
#loc143 = loc(fused[#loc79, #loc80])
#loc145 = loc(fused[#loc84, #loc85])
#loc146 = loc(fused[#loc86, #loc87])
#loc147 = loc(fused[#loc88, #loc89])
#loc148 = loc(fused[#loc91, #loc90])
#loc149 = loc(fused[#loc94, #loc95])
#loc150 = loc(fused[#loc93, #loc95])
#loc151 = loc(fused[#loc92, #loc96])
#loc152 = loc(fused[#loc97, #loc96])
#loc153 = loc(fused[#loc98, #loc99])
#loc154 = loc(fused[#loc100, #loc101])
#loc155 = loc(fused[#loc103, #loc99])
