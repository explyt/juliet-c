!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc109)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc110)
  cir.func private @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc111)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc112)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc113)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fgets_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc115)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc116)
    %2 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc117)
    %3 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc20)
    cir.store %3, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc118)
    cir.br ^bb1 loc(#loc119)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc120)
  ^bb2:  // pred: ^bb1
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc26)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc27)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc110)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
    %8 = cir.call @fgets(%4, %5, %7) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc29)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc30)
    %11 = cir.cmp(ne, %8, %10) : !cir.ptr<!s8i>, !cir.bool loc(#loc121)
    cir.brcond %11 ^bb3, ^bb4 loc(#loc122)
  ^bb3:  // pred: ^bb2
    %12 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc34)
    %13 = cir.call @atof(%12) : (!cir.ptr<!s8i>) -> !cir.double side_effect(pure) extra(#fn_attr) loc(#loc35)
    %14 = cir.cast(floating, %13 : !cir.double), !cir.float loc(#loc35)
    cir.store %14, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc123)
    cir.br ^bb5 loc(#loc32)
  ^bb4:  // pred: ^bb2
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc38)
    cir.br ^bb5 loc(#loc25)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc25)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc23)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc124)
  ^bb8:  // pred: ^bb7
    %17 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc41)
    %18 = cir.load %2 : !cir.ptr<!cir.float>, !cir.float loc(#loc42)
    %19 = cir.cast(floating, %18 : !cir.float), !cir.double loc(#loc42)
    %20 = cir.binop(div, %17, %19) : !cir.double loc(#loc125)
    %21 = cir.cast(float_to_int, %20 : !cir.double), !s32i loc(#loc125)
    cir.store %21, %1 : !s32i, !cir.ptr<!s32i> loc(#loc116)
    %22 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc43)
    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc44)
    cir.br ^bb9 loc(#loc40)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc13)
  } loc(#loc114)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fgets_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc127)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc47)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc128)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc49)
    cir.return loc(#loc46)
  } loc(#loc126)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc130)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc131)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc57)
    cir.store %2, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc132)
    %3 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc59)
    cir.store %3, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc133)
    cir.br ^bb1 loc(#loc134)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc63)
    %5 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc64)
    %6 = cir.cast(floating, %5 : !cir.float), !cir.double loc(#loc64)
    %7 = cir.binop(div, %4, %6) : !cir.double loc(#loc135)
    %8 = cir.cast(float_to_int, %7 : !cir.double), !s32i loc(#loc135)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc130)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc66)
    cir.br ^bb2 loc(#loc62)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc52)
  } loc(#loc129)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc67)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc137)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc138)
    %2 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc139)
    %3 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc76)
    cir.store %3, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc140)
    cir.br ^bb1 loc(#loc141)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc142)
  ^bb2:  // pred: ^bb1
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc82)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc83)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc110)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc84)
    %8 = cir.call @fgets(%4, %5, %7) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc85)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc86)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc86)
    %11 = cir.cmp(ne, %8, %10) : !cir.ptr<!s8i>, !cir.bool loc(#loc143)
    cir.brcond %11 ^bb3, ^bb4 loc(#loc144)
  ^bb3:  // pred: ^bb2
    %12 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc90)
    %13 = cir.call @atof(%12) : (!cir.ptr<!s8i>) -> !cir.double side_effect(pure) extra(#fn_attr) loc(#loc91)
    %14 = cir.cast(floating, %13 : !cir.double), !cir.float loc(#loc91)
    cir.store %14, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc145)
    cir.br ^bb5 loc(#loc88)
  ^bb4:  // pred: ^bb2
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc94)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc94)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    cir.br ^bb5 loc(#loc81)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc81)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc79)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc146)
  ^bb8:  // pred: ^bb7
    %17 = cir.load %2 : !cir.ptr<!cir.float>, !cir.float loc(#loc98)
    %18 = cir.cast(floating, %17 : !cir.float), !cir.double loc(#loc98)
    %19 = cir.fabs %18 : !cir.double loc(#loc98)
    %20 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc99)
    %21 = cir.cmp(gt, %19, %20) : !cir.double, !cir.bool loc(#loc147)
    cir.brcond %21 ^bb9, ^bb10 loc(#loc148)
  ^bb9:  // pred: ^bb8
    %22 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc104)
    %23 = cir.load %2 : !cir.ptr<!cir.float>, !cir.float loc(#loc105)
    %24 = cir.cast(floating, %23 : !cir.float), !cir.double loc(#loc105)
    %25 = cir.binop(div, %22, %24) : !cir.double loc(#loc149)
    %26 = cir.cast(float_to_int, %25 : !cir.double), !s32i loc(#loc149)
    cir.store %26, %1 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    %27 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    cir.call @printIntLine(%27) : (!s32i) -> () loc(#loc107)
    cir.br ^bb11 loc(#loc102)
  ^bb10:  // pred: ^bb8
    %28 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc67)
    %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    cir.br ^bb11 loc(#loc97)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc97)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc69)
  } loc(#loc136)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_01.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":102:1)
#loc6 = loc("/usr/include/stdlib.h":103:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":41:23)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":26:1)
#loc13 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":49:1)
#loc14 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":32:9)
#loc15 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":32:41)
#loc16 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":46:9)
#loc17 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":46:40)
#loc18 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":28:5)
#loc19 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":28:11)
#loc20 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":30:12)
#loc21 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":30:5)
#loc22 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":31:5)
#loc23 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":43:5)
#loc24 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":34:9)
#loc25 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":42:9)
#loc26 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":34:19)
#loc27 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":34:32)
#loc28 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":34:49)
#loc29 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":34:13)
#loc30 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":34:59)
#loc31 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":35:9)
#loc32 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":38:9)
#loc33 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":40:9)
#loc34 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":37:32)
#loc35 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":37:27)
#loc36 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":37:13)
#loc37 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":37:43)
#loc38 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":41:13)
#loc39 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":44:5)
#loc40 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":48:5)
#loc41 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":46:28)
#loc42 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":46:36)
#loc43 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":47:22)
#loc44 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":47:9)
#loc45 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":101:1)
#loc46 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":105:1)
#loc47 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":103:5)
#loc48 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":103:13)
#loc49 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":104:5)
#loc50 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":104:13)
#loc51 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":56:1)
#loc52 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":68:1)
#loc53 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":65:9)
#loc54 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":65:40)
#loc55 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":58:5)
#loc56 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":58:11)
#loc57 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":60:12)
#loc58 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":60:5)
#loc59 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":62:12)
#loc60 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":62:5)
#loc61 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":63:5)
#loc62 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":67:5)
#loc63 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":65:28)
#loc64 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":65:36)
#loc65 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":66:22)
#loc66 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":66:9)
#loc67 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":97:19)
#loc68 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":71:1)
#loc69 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":99:1)
#loc70 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":77:9)
#loc71 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":77:41)
#loc72 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":92:9)
#loc73 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":92:40)
#loc74 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":73:5)
#loc75 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":73:11)
#loc76 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":75:12)
#loc77 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":75:5)
#loc78 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":76:5)
#loc79 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":88:5)
#loc80 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":79:9)
#loc81 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":87:9)
#loc82 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":79:19)
#loc83 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":79:32)
#loc84 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":79:49)
#loc85 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":79:13)
#loc86 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":79:59)
#loc87 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":80:9)
#loc88 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":83:9)
#loc89 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":85:9)
#loc90 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":82:32)
#loc91 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":82:27)
#loc92 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":82:13)
#loc93 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":82:43)
#loc94 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":86:23)
#loc95 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":86:13)
#loc96 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":90:5)
#loc97 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":98:5)
#loc98 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":90:13)
#loc99 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":90:21)
#loc100 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":90:8)
#loc101 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":91:5)
#loc102 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":94:5)
#loc103 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":96:5)
#loc104 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":92:28)
#loc105 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":92:36)
#loc106 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":93:22)
#loc107 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":93:9)
#loc108 = loc("CWE369_Divide_by_Zero__float_fgets_01.c":97:9)
#loc109 = loc(fused[#loc1, #loc2])
#loc110 = loc(fused[#loc3, #loc4])
#loc111 = loc(fused[#loc5, #loc6])
#loc112 = loc(fused[#loc7, #loc8])
#loc113 = loc(fused[#loc10, #loc11])
#loc114 = loc(fused[#loc12, #loc13])
#loc115 = loc(fused[#loc14, #loc15])
#loc116 = loc(fused[#loc16, #loc17])
#loc117 = loc(fused[#loc18, #loc19])
#loc118 = loc(fused[#loc21, #loc20])
#loc119 = loc(fused[#loc22, #loc23])
#loc120 = loc(fused[#loc24, #loc25])
#loc121 = loc(fused[#loc29, #loc30])
#loc122 = loc(fused[#loc31, #loc32, #loc33, #loc25])
#loc123 = loc(fused[#loc36, #loc37])
#loc124 = loc(fused[#loc39, #loc40])
#loc125 = loc(fused[#loc41, #loc42])
#loc126 = loc(fused[#loc45, #loc46])
#loc127 = loc(fused[#loc47, #loc48])
#loc128 = loc(fused[#loc49, #loc50])
#loc129 = loc(fused[#loc51, #loc52])
#loc130 = loc(fused[#loc53, #loc54])
#loc131 = loc(fused[#loc55, #loc56])
#loc132 = loc(fused[#loc58, #loc57])
#loc133 = loc(fused[#loc60, #loc59])
#loc134 = loc(fused[#loc61, #loc62])
#loc135 = loc(fused[#loc63, #loc64])
#loc136 = loc(fused[#loc68, #loc69])
#loc137 = loc(fused[#loc70, #loc71])
#loc138 = loc(fused[#loc72, #loc73])
#loc139 = loc(fused[#loc74, #loc75])
#loc140 = loc(fused[#loc77, #loc76])
#loc141 = loc(fused[#loc78, #loc79])
#loc142 = loc(fused[#loc80, #loc81])
#loc143 = loc(fused[#loc85, #loc86])
#loc144 = loc(fused[#loc87, #loc88, #loc89, #loc81])
#loc145 = loc(fused[#loc92, #loc93])
#loc146 = loc(fused[#loc96, #loc97])
#loc147 = loc(fused[#loc100, #loc99])
#loc148 = loc(fused[#loc101, #loc102, #loc103, #loc97])
#loc149 = loc(fused[#loc104, #loc105])
