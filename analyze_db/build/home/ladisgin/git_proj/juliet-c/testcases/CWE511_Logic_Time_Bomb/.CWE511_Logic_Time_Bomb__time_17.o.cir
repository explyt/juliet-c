!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE511_Logic_Time_Bomb/CWE511_Logic_Time_Bomb__time_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc63)
  cir.func private @unlink(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"important_file.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc5)
  cir.func no_proto @CWE511_Logic_Time_Bomb__time_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["currentTime"] {alignment = 8 : i64} loc(#loc66)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc67)
    cir.br ^bb1 loc(#loc68)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<0> : !s32i loc(#loc14)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc69)
    cir.br ^bb2 loc(#loc68)
  ^bb2:  // 2 preds: ^bb1, ^bb12
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc16)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %5 = cir.cmp(lt, %3, %4) : !s32i, !cir.bool loc(#loc70)
    cir.brcond %5 ^bb3, ^bb13 loc(#loc18)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc71)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc72)
  ^bb5:  // pred: ^bb4
    %6 = cir.call @time(%0) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc22)
    cir.br ^bb6 loc(#loc73)
  ^bb6:  // pred: ^bb5
    %7 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc25)
    %8 = cir.const #cir.int<1199163600> : !s32i loc(#loc26)
    %9 = cir.cast(integral, %8 : !s32i), !s64i loc(#loc26)
    %10 = cir.cmp(gt, %7, %9) : !s64i, !cir.bool loc(#loc74)
    cir.brcond %10 ^bb7, ^bb8 loc(#loc75)
  ^bb7:  // pred: ^bb6
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc5)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc5)
    %13 = cir.call @unlink(%12) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc28)
    cir.br ^bb8 loc(#loc24)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc24)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc21)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc13)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc13)
  ^bb12:  // pred: ^bb11
    %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc30)
    cir.store %15, %1 : !s32i, !cir.ptr<!s32i> loc(#loc76)
    cir.br ^bb2 loc(#loc68)
  ^bb13:  // pred: ^bb2
    cir.br ^bb14 loc(#loc13)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc7)
  } loc(#loc65)
  cir.func no_proto @CWE511_Logic_Time_Bomb__time_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc78)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc33)
    cir.return loc(#loc32)
  } loc(#loc77)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc79)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Happy New Year!\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc37)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["currentTime"] {alignment = 8 : i64} loc(#loc81)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc82)
    cir.br ^bb1 loc(#loc83)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<0> : !s32i loc(#loc46)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc84)
    cir.br ^bb2 loc(#loc83)
  ^bb2:  // 2 preds: ^bb1, ^bb12
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc48)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %5 = cir.cmp(lt, %3, %4) : !s32i, !cir.bool loc(#loc85)
    cir.brcond %5 ^bb3, ^bb13 loc(#loc50)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc86)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc87)
  ^bb5:  // pred: ^bb4
    %6 = cir.call @time(%0) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc54)
    cir.br ^bb6 loc(#loc88)
  ^bb6:  // pred: ^bb5
    %7 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc57)
    %8 = cir.const #cir.int<1199163600> : !s32i loc(#loc58)
    %9 = cir.cast(integral, %8 : !s32i), !s64i loc(#loc58)
    %10 = cir.cmp(gt, %7, %9) : !s64i, !cir.bool loc(#loc89)
    cir.brcond %10 ^bb7, ^bb8 loc(#loc90)
  ^bb7:  // pred: ^bb6
    %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc37)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    cir.br ^bb8 loc(#loc56)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc56)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc53)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc45)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc45)
  ^bb12:  // pred: ^bb11
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc61)
    %14 = cir.unary(inc, %13) : !s32i, !s32i loc(#loc62)
    cir.store %14, %1 : !s32i, !cir.ptr<!s32i> loc(#loc91)
    cir.br ^bb2 loc(#loc83)
  ^bb13:  // pred: ^bb2
    cir.br ^bb14 loc(#loc45)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc39)
  } loc(#loc80)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE511_Logic_Time_Bomb/CWE511_Logic_Time_Bomb__time_17.c":0:0)
#loc1 = loc("/usr/include/time.h":76:1)
#loc2 = loc("/usr/include/time.h":76:38)
#loc3 = loc("/usr/include/unistd.h":858:1)
#loc4 = loc("/usr/include/unistd.h":858:48)
#loc5 = loc("CWE511_Logic_Time_Bomb__time_17.c":42:24)
#loc6 = loc("CWE511_Logic_Time_Bomb__time_17.c":31:1)
#loc7 = loc("CWE511_Logic_Time_Bomb__time_17.c":46:1)
#loc8 = loc("CWE511_Logic_Time_Bomb__time_17.c":37:13)
#loc9 = loc("CWE511_Logic_Time_Bomb__time_17.c":37:20)
#loc10 = loc("CWE511_Logic_Time_Bomb__time_17.c":33:5)
#loc11 = loc("CWE511_Logic_Time_Bomb__time_17.c":33:9)
#loc12 = loc("CWE511_Logic_Time_Bomb__time_17.c":34:5)
#loc13 = loc("CWE511_Logic_Time_Bomb__time_17.c":45:5)
#loc14 = loc("CWE511_Logic_Time_Bomb__time_17.c":34:13)
#loc15 = loc("CWE511_Logic_Time_Bomb__time_17.c":34:9)
#loc16 = loc("CWE511_Logic_Time_Bomb__time_17.c":34:16)
#loc17 = loc("CWE511_Logic_Time_Bomb__time_17.c":34:20)
#loc18 = loc("CWE511_Logic_Time_Bomb__time_17.c":34:18)
#loc19 = loc("CWE511_Logic_Time_Bomb__time_17.c":35:5)
#loc20 = loc("CWE511_Logic_Time_Bomb__time_17.c":36:9)
#loc21 = loc("CWE511_Logic_Time_Bomb__time_17.c":44:9)
#loc22 = loc("CWE511_Logic_Time_Bomb__time_17.c":39:13)
#loc23 = loc("CWE511_Logic_Time_Bomb__time_17.c":40:13)
#loc24 = loc("CWE511_Logic_Time_Bomb__time_17.c":43:13)
#loc25 = loc("CWE511_Logic_Time_Bomb__time_17.c":40:17)
#loc26 = loc("CWE511_Logic_Time_Bomb__time_17.c":40:31)
#loc27 = loc("CWE511_Logic_Time_Bomb__time_17.c":41:13)
#loc28 = loc("CWE511_Logic_Time_Bomb__time_17.c":42:17)
#loc29 = loc("CWE511_Logic_Time_Bomb__time_17.c":34:24)
#loc30 = loc("CWE511_Logic_Time_Bomb__time_17.c":34:23)
#loc31 = loc("CWE511_Logic_Time_Bomb__time_17.c":70:1)
#loc32 = loc("CWE511_Logic_Time_Bomb__time_17.c":73:1)
#loc33 = loc("CWE511_Logic_Time_Bomb__time_17.c":72:5)
#loc34 = loc("CWE511_Logic_Time_Bomb__time_17.c":72:11)
#loc35 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc36 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc37 = loc("CWE511_Logic_Time_Bomb__time_17.c":64:27)
#loc38 = loc("CWE511_Logic_Time_Bomb__time_17.c":53:1)
#loc39 = loc("CWE511_Logic_Time_Bomb__time_17.c":68:1)
#loc40 = loc("CWE511_Logic_Time_Bomb__time_17.c":59:13)
#loc41 = loc("CWE511_Logic_Time_Bomb__time_17.c":59:20)
#loc42 = loc("CWE511_Logic_Time_Bomb__time_17.c":55:5)
#loc43 = loc("CWE511_Logic_Time_Bomb__time_17.c":55:9)
#loc44 = loc("CWE511_Logic_Time_Bomb__time_17.c":56:5)
#loc45 = loc("CWE511_Logic_Time_Bomb__time_17.c":67:5)
#loc46 = loc("CWE511_Logic_Time_Bomb__time_17.c":56:13)
#loc47 = loc("CWE511_Logic_Time_Bomb__time_17.c":56:9)
#loc48 = loc("CWE511_Logic_Time_Bomb__time_17.c":56:16)
#loc49 = loc("CWE511_Logic_Time_Bomb__time_17.c":56:20)
#loc50 = loc("CWE511_Logic_Time_Bomb__time_17.c":56:18)
#loc51 = loc("CWE511_Logic_Time_Bomb__time_17.c":57:5)
#loc52 = loc("CWE511_Logic_Time_Bomb__time_17.c":58:9)
#loc53 = loc("CWE511_Logic_Time_Bomb__time_17.c":66:9)
#loc54 = loc("CWE511_Logic_Time_Bomb__time_17.c":61:13)
#loc55 = loc("CWE511_Logic_Time_Bomb__time_17.c":62:13)
#loc56 = loc("CWE511_Logic_Time_Bomb__time_17.c":65:13)
#loc57 = loc("CWE511_Logic_Time_Bomb__time_17.c":62:17)
#loc58 = loc("CWE511_Logic_Time_Bomb__time_17.c":62:31)
#loc59 = loc("CWE511_Logic_Time_Bomb__time_17.c":63:13)
#loc60 = loc("CWE511_Logic_Time_Bomb__time_17.c":64:17)
#loc61 = loc("CWE511_Logic_Time_Bomb__time_17.c":56:24)
#loc62 = loc("CWE511_Logic_Time_Bomb__time_17.c":56:23)
#loc63 = loc(fused[#loc1, #loc2])
#loc64 = loc(fused[#loc3, #loc4])
#loc65 = loc(fused[#loc6, #loc7])
#loc66 = loc(fused[#loc8, #loc9])
#loc67 = loc(fused[#loc10, #loc11])
#loc68 = loc(fused[#loc12, #loc13])
#loc69 = loc(fused[#loc15, #loc14])
#loc70 = loc(fused[#loc16, #loc17])
#loc71 = loc(fused[#loc19, #loc13])
#loc72 = loc(fused[#loc20, #loc21])
#loc73 = loc(fused[#loc23, #loc24])
#loc74 = loc(fused[#loc25, #loc26])
#loc75 = loc(fused[#loc27, #loc24])
#loc76 = loc(fused[#loc30, #loc29])
#loc77 = loc(fused[#loc31, #loc32])
#loc78 = loc(fused[#loc33, #loc34])
#loc79 = loc(fused[#loc35, #loc36])
#loc80 = loc(fused[#loc38, #loc39])
#loc81 = loc(fused[#loc40, #loc41])
#loc82 = loc(fused[#loc42, #loc43])
#loc83 = loc(fused[#loc44, #loc45])
#loc84 = loc(fused[#loc47, #loc46])
#loc85 = loc(fused[#loc48, #loc49])
#loc86 = loc(fused[#loc51, #loc45])
#loc87 = loc(fused[#loc52, #loc53])
#loc88 = loc(fused[#loc55, #loc56])
#loc89 = loc(fused[#loc57, #loc58])
#loc90 = loc(fused[#loc59, #loc56])
#loc91 = loc(fused[#loc62, #loc61])
