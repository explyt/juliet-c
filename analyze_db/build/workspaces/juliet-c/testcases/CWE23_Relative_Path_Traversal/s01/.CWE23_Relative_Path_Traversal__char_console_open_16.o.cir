!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_open_16.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" constant cir_private @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_16L7goodG2BEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc138)
  cir.global "private" constant cir_private @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_163badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc139)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc140)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc141)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc142)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc143)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc13)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc144)
  cir.func private @close(!s32i) -> !s32i loc(#loc145)
  cir.func @_ZN51CWE23_Relative_Path_Traversal__char_console_open_163badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc147)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc139)
    %2 = cir.get_global @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_163badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc139)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc139)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc22)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc148)
    cir.scope {
      cir.while {
        %4 = cir.const #cir.int<1> : !s32i loc(#loc26)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc26)
        cir.condition(%5) loc(#loc26)
      } do {
        cir.scope {
          cir.scope {
            %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc152)
            %5 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc32)
            %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
            %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc32)
            cir.store %7, %4 : !u64i, !cir.ptr<!u64i> loc(#loc152)
            cir.scope {
              %8 = cir.const #cir.int<4096> : !s32i loc(#loc36)
              %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc36)
              %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc37)
              %11 = cir.binop(sub, %9, %10) : !u64i loc(#loc154)
              %12 = cir.const #cir.int<1> : !s32i loc(#loc38)
              %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc38)
              %14 = cir.cmp(gt, %11, %13) : !u64i, !cir.bool loc(#loc155)
              cir.if %14 {
                cir.scope {
                  %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
                  %16 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc43)
                  %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc44)
                  %18 = cir.const #cir.int<4096> : !s32i loc(#loc45)
                  %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc45)
                  %20 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc46)
                  %21 = cir.binop(sub, %19, %20) : !u64i loc(#loc158)
                  %22 = cir.cast(integral, %21 : !u64i), !s32i loc(#loc158)
                  %23 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc142)
                  %24 = cir.load %23 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc47)
                  %25 = cir.call @fgets(%17, %22, %24) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc48)
                  %26 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc49)
                  %27 = cir.cmp(ne, %25, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc159)
                  cir.if %27 {
                    %28 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc53)
                    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
                    %30 = cir.call @strlen(%29) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc53)
                    cir.store %30, %4 : !u64i, !cir.ptr<!u64i> loc(#loc161)
                    cir.scope {
                      %31 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc59)
                      %32 = cir.const #cir.int<0> : !s32i loc(#loc60)
                      %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc60)
                      %34 = cir.cmp(gt, %31, %33) : !u64i, !cir.bool loc(#loc163)
                      %35 = cir.ternary(%34, true {
                        %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
                        %37 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc63)
                        %38 = cir.const #cir.int<1> : !s32i loc(#loc64)
                        %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc64)
                        %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc164)
                        %41 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %40 : !u64i), !cir.ptr<!s8i> loc(#loc65)
                        %42 = cir.load %41 : !cir.ptr<!s8i>, !s8i loc(#loc62)
                        %43 = cir.cast(integral, %42 : !s8i), !s32i loc(#loc62)
                        %44 = cir.const #cir.int<10> : !s8i loc(#loc66)
                        %45 = cir.cast(integral, %44 : !s8i), !s32i loc(#loc66)
                        %46 = cir.cmp(eq, %43, %45) : !s32i, !cir.bool loc(#loc165)
                        %47 = cir.ternary(%46, true {
                          %48 = cir.const #true loc(#loc61)
                          cir.yield %48 : !cir.bool loc(#loc61)
                        }, false {
                          %48 = cir.const #false loc(#loc61)
                          cir.yield %48 : !cir.bool loc(#loc61)
                        }) : (!cir.bool) -> !cir.bool loc(#loc61)
                        cir.yield %47 : !cir.bool loc(#loc61)
                      }, false {
                        %36 = cir.const #false loc(#loc61)
                        cir.yield %36 : !cir.bool loc(#loc61)
                      }) : (!cir.bool) -> !cir.bool loc(#loc61)
                      cir.if %35 {
                        %36 = cir.const #cir.int<0> : !s8i loc(#loc68)
                        %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
                        %38 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc70)
                        %39 = cir.const #cir.int<1> : !s32i loc(#loc71)
                        %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc71)
                        %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc167)
                        %42 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc72)
                        cir.store %36, %42 : !s8i, !cir.ptr<!s8i> loc(#loc168)
                      } loc(#loc166)
                    } loc(#loc162)
                  } else {
                    %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc13)
                    %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc13)
                    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc73)
                    %30 = cir.const #cir.int<0> : !s8i loc(#loc74)
                    %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
                    %32 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc76)
                    %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc77)
                    cir.store %30, %33 : !s8i, !cir.ptr<!s8i> loc(#loc169)
                  } loc(#loc160)
                } loc(#loc157)
              } loc(#loc156)
            } loc(#loc153)
          } loc(#loc151)
          cir.break loc(#loc78)
        } loc(#loc150)
        cir.yield loc(#loc25)
      } loc(#loc149)
    } loc(#loc149)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc171)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc84)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc85)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc172)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc86)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc87)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc173)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc88)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc174)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc93)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc94)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc95)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc176)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc97)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc98)
        } loc(#loc177)
      } loc(#loc175)
    } loc(#loc170)
    cir.return loc(#loc19)
  } loc(#loc146)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc178)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc101)
  cir.func internal private @_ZN51CWE23_Relative_Path_Traversal__char_console_open_16L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc180)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc138)
    %2 = cir.get_global @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_16L7goodG2BEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc138)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc138)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc106)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc181)
    cir.scope {
      cir.while {
        %4 = cir.const #cir.int<1> : !s32i loc(#loc110)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc110)
        cir.condition(%5) loc(#loc110)
      } do {
        cir.scope {
          %4 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc112)
          %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
          %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc101)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc101)
          %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc112)
          cir.break loc(#loc114)
        } loc(#loc183)
        cir.yield loc(#loc109)
      } loc(#loc182)
    } loc(#loc182)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc185)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc120)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc121)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc186)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc122)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc123)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc187)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc124)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc188)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc129)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc130)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc131)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc190)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc133)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc134)
        } loc(#loc191)
      } loc(#loc189)
    } loc(#loc184)
    cir.return loc(#loc103)
  } loc(#loc179)
  cir.func @_ZN51CWE23_Relative_Path_Traversal__char_console_open_164goodEv() extra(#fn_attr1) {
    cir.call @_ZN51CWE23_Relative_Path_Traversal__char_console_open_16L7goodG2BEv() : () -> () loc(#loc137)
    cir.return loc(#loc136)
  } loc(#loc192)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_open_16.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":93:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":93:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":43:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":43:37)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("/usr/include/stdio.h":149:1)
#loc10 = loc("/usr/include/stdio.h":149:14)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":66:31)
#loc14 = loc("/usr/include/fcntl.h":209:1)
#loc15 = loc("/usr/include/fcntl.h":209:56)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":40:1)
#loc19 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":83:1)
#loc20 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":42:5)
#loc21 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":42:12)
#loc22 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":44:12)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":44:5)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":45:5)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":73:5)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":45:11)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":46:5)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":47:9)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":71:9)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":49:13)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":49:41)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":49:30)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":49:37)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":51:13)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":70:13)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":51:17)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":51:30)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":51:40)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":52:13)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":54:17)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":69:17)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":54:27)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":54:32)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":54:31)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":54:47)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":54:60)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":54:70)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":54:21)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":54:80)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":55:17)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":63:17)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":65:17)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":58:31)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":58:38)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":58:21)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":58:42)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":59:21)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":62:21)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":59:25)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":59:35)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":59:37)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":59:40)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":59:45)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":59:53)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":59:54)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":59:59)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":60:21)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":61:43)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":61:25)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":61:30)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":61:38)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":61:39)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":66:21)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":68:37)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":68:21)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":68:26)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":68:33)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":72:9)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":74:5)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":82:5)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":75:9)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":75:13)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":77:25)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":77:31)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":77:38)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":77:47)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":77:55)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":77:20)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":77:9)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":77:63)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":78:9)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":81:9)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":78:13)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":78:26)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":78:25)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":79:9)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":80:19)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":80:13)
#loc99 = loc("/usr/include/string.h":149:1)
#loc100 = loc("/usr/include/string.h":150:14)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":98:22)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":90:1)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":110:1)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":92:5)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":92:12)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":94:12)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":94:5)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":95:5)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":100:5)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":95:11)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":96:5)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":98:9)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":98:16)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":99:9)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":101:5)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":109:5)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":102:9)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":102:13)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":104:25)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":104:31)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":104:38)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":104:47)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":104:55)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":104:20)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":104:9)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":104:63)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":105:9)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":108:9)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":105:13)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":105:26)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":105:25)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":106:9)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":107:19)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":107:13)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":112:1)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":115:1)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_console_open_16.cpp":114:5)
#loc138 = loc(fused[#loc1, #loc2])
#loc139 = loc(fused[#loc3, #loc4])
#loc140 = loc(fused[#loc5, #loc6])
#loc141 = loc(fused[#loc7, #loc8])
#loc142 = loc(fused[#loc9, #loc10])
#loc143 = loc(fused[#loc11, #loc12])
#loc144 = loc(fused[#loc14, #loc15])
#loc145 = loc(fused[#loc16, #loc17])
#loc146 = loc(fused[#loc18, #loc19])
#loc147 = loc(fused[#loc20, #loc21])
#loc148 = loc(fused[#loc23, #loc22])
#loc149 = loc(fused[#loc24, #loc25])
#loc150 = loc(fused[#loc27, #loc25])
#loc151 = loc(fused[#loc28, #loc29])
#loc152 = loc(fused[#loc30, #loc31])
#loc153 = loc(fused[#loc34, #loc35])
#loc154 = loc(fused[#loc36, #loc37])
#loc155 = loc(fused[#loc36, #loc38])
#loc156 = loc(fused[#loc39, #loc35])
#loc157 = loc(fused[#loc40, #loc41])
#loc158 = loc(fused[#loc45, #loc46])
#loc159 = loc(fused[#loc48, #loc49])
#loc160 = loc(fused[#loc50, #loc51, #loc52, #loc41])
#loc161 = loc(fused[#loc55, #loc56])
#loc162 = loc(fused[#loc57, #loc58])
#loc163 = loc(fused[#loc59, #loc60])
#loc164 = loc(fused[#loc63, #loc64])
#loc165 = loc(fused[#loc62, #loc66])
#loc166 = loc(fused[#loc67, #loc58])
#loc167 = loc(fused[#loc70, #loc71])
#loc168 = loc(fused[#loc69, #loc68])
#loc169 = loc(fused[#loc75, #loc74])
#loc170 = loc(fused[#loc79, #loc80])
#loc171 = loc(fused[#loc81, #loc82])
#loc172 = loc(fused[#loc84, #loc85])
#loc173 = loc(fused[#loc86, #loc87])
#loc174 = loc(fused[#loc89, #loc90])
#loc175 = loc(fused[#loc91, #loc92])
#loc176 = loc(fused[#loc93, #loc94])
#loc177 = loc(fused[#loc96, #loc92])
#loc178 = loc(fused[#loc99, #loc100])
#loc179 = loc(fused[#loc102, #loc103])
#loc180 = loc(fused[#loc104, #loc105])
#loc181 = loc(fused[#loc107, #loc106])
#loc182 = loc(fused[#loc108, #loc109])
#loc183 = loc(fused[#loc111, #loc109])
#loc184 = loc(fused[#loc115, #loc116])
#loc185 = loc(fused[#loc117, #loc118])
#loc186 = loc(fused[#loc120, #loc121])
#loc187 = loc(fused[#loc122, #loc123])
#loc188 = loc(fused[#loc125, #loc126])
#loc189 = loc(fused[#loc127, #loc128])
#loc190 = loc(fused[#loc129, #loc130])
#loc191 = loc(fused[#loc132, #loc128])
#loc192 = loc(fused[#loc135, #loc136])
