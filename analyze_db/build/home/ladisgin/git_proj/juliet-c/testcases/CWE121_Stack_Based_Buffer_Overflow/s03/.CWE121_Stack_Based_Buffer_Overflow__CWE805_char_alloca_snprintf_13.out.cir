!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":120:10)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":120:14)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":120:20)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":120:32)
#loc187 = loc(fused[#loc63, #loc64])
#loc188 = loc(fused[#loc65, #loc66])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant external @GLOBAL_CONST_FIVE : !s32i {alignment = 4 : i64} loc(#loc165)
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc166)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc167)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc169)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc170)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc171)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc15)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc15)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc15)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc15)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc15)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc172)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc15)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc15)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc171)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc17)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc17)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc17)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc17)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc17)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc17)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc17)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc172)
    cir.br ^bb1 loc(#loc173)
  ^bb1:  // pred: ^bb0
    %18 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc165)
    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc20)
    %20 = cir.const #cir.int<5> : !s32i loc(#loc21)
    %21 = cir.cmp(eq, %19, %20) : !s32i, !cir.bool loc(#loc174)
    cir.brcond %21 ^bb2, ^bb3 loc(#loc175)
  ^bb2:  // pred: ^bb1
    %22 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
    cir.store %22, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc176)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc25)
    %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc25)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc27)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc28)
    cir.store %24, %27 : !s8i, !cir.ptr<!s8i> loc(#loc177)
    cir.br ^bb3 loc(#loc19)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc19)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc178)
  ^bb5:  // pred: ^bb4
    %28 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc31)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc31)
    %30 = cir.const #cir.int<67> : !s32i loc(#loc32)
    %31 = cir.const #cir.int<100> : !s32i loc(#loc33)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %33 = cir.binop(sub, %31, %32) nsw : !s32i loc(#loc33)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc33)
    cir.libc.memset %34 bytes from %29 set to %30 : !cir.ptr<!void>, !s32i, !u64i loc(#loc179)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc37)
    %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc37)
    %37 = cir.const #cir.int<100> : !s32i loc(#loc38)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %39 = cir.binop(sub, %37, %38) nsw : !s32i loc(#loc38)
    %40 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc40)
    %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !s32i), !cir.ptr<!s8i> loc(#loc40)
    cir.store %36, %41 : !s8i, !cir.ptr<!s8i> loc(#loc180)
    %42 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc41)
    %43 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    %44 = cir.const #cir.int<100> : !s32i loc(#loc43)
    %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc43)
    %46 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %47 = cir.cast(array_to_ptrdecay, %46 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %48 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc44)
    %49 = cir.call @snprintf(%43, %45, %47, %48) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc41)
    %50 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%50) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    cir.br ^bb6 loc(#loc30)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc9)
  } loc(#loc168)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc182)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc183)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc51)
    cir.return loc(#loc48)
  } loc(#loc181)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc184)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc185)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc58)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc60)
  cir.func @main(%arg0: !s32i loc(fused[#loc63, #loc64]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc65, #loc66])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc187)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc188)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc62)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc67)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc67)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc68)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc69)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc69)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc70)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc57)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13_good : !cir.ptr<!cir.func<!void ()>> loc(#loc189)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13_good() : () -> () loc(#loc72)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc58)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc59)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc190)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13_bad() : () -> () loc(#loc76)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc60)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc79)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc191)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc191)
    cir.return %17 : !s32i loc(#loc191)
  } loc(#loc186)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc81)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc193)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc194)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc195)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc89)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc89)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc89)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc89)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc89)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc196)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc89)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc89)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc195)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc91)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc91)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc91)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc91)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc91)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc91)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc91)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc196)
    cir.br ^bb1 loc(#loc197)
  ^bb1:  // pred: ^bb0
    %18 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc165)
    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    %20 = cir.const #cir.int<5> : !s32i loc(#loc95)
    %21 = cir.cmp(ne, %19, %20) : !s32i, !cir.bool loc(#loc198)
    cir.brcond %21 ^bb2, ^bb3 loc(#loc199)
  ^bb2:  // pred: ^bb1
    %22 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc81)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    cir.br ^bb4 loc(#loc97)
  ^bb3:  // pred: ^bb1
    %24 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
    cir.store %24, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc200)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc102)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc102)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc104)
    %29 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc105)
    cir.store %26, %29 : !s8i, !cir.ptr<!s8i> loc(#loc201)
    cir.br ^bb4 loc(#loc93)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc93)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc202)
  ^bb6:  // pred: ^bb5
    %30 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc108)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc108)
    %32 = cir.const #cir.int<67> : !s32i loc(#loc109)
    %33 = cir.const #cir.int<100> : !s32i loc(#loc110)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc110)
    %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc110)
    cir.libc.memset %36 bytes from %31 set to %32 : !cir.ptr<!void>, !s32i, !u64i loc(#loc203)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc114)
    %39 = cir.const #cir.int<100> : !s32i loc(#loc115)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %41 = cir.binop(sub, %39, %40) nsw : !s32i loc(#loc115)
    %42 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc117)
    %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !s32i), !cir.ptr<!s8i> loc(#loc117)
    cir.store %38, %43 : !s8i, !cir.ptr<!s8i> loc(#loc204)
    %44 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc118)
    %45 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
    %46 = cir.const #cir.int<100> : !s32i loc(#loc120)
    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc120)
    %48 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc121)
    %49 = cir.cast(array_to_ptrdecay, %48 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc121)
    %50 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc122)
    %51 = cir.call @snprintf(%45, %47, %49, %50) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc118)
    %52 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
    cir.call @printLine(%52) : (!cir.ptr<!s8i>) -> () loc(#loc124)
    cir.br ^bb7 loc(#loc107)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc83)
  } loc(#loc192)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc206)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc207)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc208)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc132)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc132)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc132)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc132)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc132)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc209)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc132)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc132)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc208)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc134)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc134)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc134)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc134)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc134)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc134)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc134)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc209)
    cir.br ^bb1 loc(#loc210)
  ^bb1:  // pred: ^bb0
    %18 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc165)
    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    %20 = cir.const #cir.int<5> : !s32i loc(#loc138)
    %21 = cir.cmp(eq, %19, %20) : !s32i, !cir.bool loc(#loc211)
    cir.brcond %21 ^bb2, ^bb3 loc(#loc212)
  ^bb2:  // pred: ^bb1
    %22 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
    cir.store %22, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc213)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc142)
    %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc142)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc144)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc145)
    cir.store %24, %27 : !s8i, !cir.ptr<!s8i> loc(#loc214)
    cir.br ^bb3 loc(#loc136)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc136)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc215)
  ^bb5:  // pred: ^bb4
    %28 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc148)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc148)
    %30 = cir.const #cir.int<67> : !s32i loc(#loc149)
    %31 = cir.const #cir.int<100> : !s32i loc(#loc150)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc151)
    %33 = cir.binop(sub, %31, %32) nsw : !s32i loc(#loc150)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc150)
    cir.libc.memset %34 bytes from %29 set to %30 : !cir.ptr<!void>, !s32i, !u64i loc(#loc216)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc154)
    %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc154)
    %37 = cir.const #cir.int<100> : !s32i loc(#loc155)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc156)
    %39 = cir.binop(sub, %37, %38) nsw : !s32i loc(#loc155)
    %40 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc157)
    %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !s32i), !cir.ptr<!s8i> loc(#loc157)
    cir.store %36, %41 : !s8i, !cir.ptr<!s8i> loc(#loc217)
    %42 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc158)
    %43 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
    %44 = cir.const #cir.int<100> : !s32i loc(#loc160)
    %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc160)
    %46 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc161)
    %47 = cir.cast(array_to_ptrdecay, %46 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc161)
    %48 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc162)
    %49 = cir.call @snprintf(%43, %45, %47, %48) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc158)
    %50 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
    cir.call @printLine(%50) : (!cir.ptr<!s8i>) -> () loc(#loc164)
    cir.br ^bb6 loc(#loc147)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc126)
  } loc(#loc205)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":111:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":111:18)
#loc3 = loc("/usr/include/stdio.h":385:1)
#loc4 = loc("/usr/include/stdio.h":387:62)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":46:29)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":29:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":49:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":42:9)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":42:24)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":31:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":31:12)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":32:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":32:36)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":33:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":33:37)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":34:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":40:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":34:8)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":34:27)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":35:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":38:16)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":38:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":39:19)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":39:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":39:14)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":39:15)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":41:5)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":48:5)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":43:16)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":43:24)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":43:29)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":43:33)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":43:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":43:34)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":44:25)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":44:16)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":44:20)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":44:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":46:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":46:18)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":46:24)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":46:35)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":47:19)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":47:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":104:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":108:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":106:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":106:14)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":107:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":107:14)
#loc53 = loc("/usr/include/stdlib.h":575:1)
#loc54 = loc("/usr/include/stdlib.h":575:41)
#loc55 = loc("/usr/include/time.h":76:1)
#loc56 = loc("/usr/include/time.h":76:38)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":125:15)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":127:15)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":130:15)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":132:15)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":120:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":135:1)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":121:1)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":123:27)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":123:22)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":123:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":125:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":126:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":126:77)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":127:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":130:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":131:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":131:76)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":132:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":134:12)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":134:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":64:19)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":56:1)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":80:1)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":73:9)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":73:24)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":58:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":58:12)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":59:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":59:36)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":60:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":60:37)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":61:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":71:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":61:8)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":61:27)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":62:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":65:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":67:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":64:9)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":69:16)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":69:9)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":70:19)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":70:9)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":70:14)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":70:15)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":72:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":79:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":74:16)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":74:24)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":74:29)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":74:33)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":74:9)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":74:34)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":75:25)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":75:16)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":75:20)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":75:9)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":77:9)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":77:18)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":77:24)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":77:29)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":77:35)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":78:19)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":78:9)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":83:1)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":102:1)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":95:9)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":95:24)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":85:5)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":85:12)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":86:5)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":86:36)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":87:5)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":87:37)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":88:5)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":93:5)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":88:8)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":88:27)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":89:5)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":91:16)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":91:9)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":92:19)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":92:9)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":92:14)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":92:15)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":94:5)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":101:5)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":96:16)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":96:24)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":96:29)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":96:33)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":96:9)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":96:34)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":97:25)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":97:16)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":97:20)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":97:9)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":99:9)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":99:18)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":99:24)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":99:29)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":99:35)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":100:19)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_snprintf_13.c":100:9)
#loc165 = loc(fused[#loc1, #loc2])
#loc166 = loc(fused[#loc3, #loc4])
#loc167 = loc(fused[#loc6, #loc7])
#loc168 = loc(fused[#loc8, #loc9])
#loc169 = loc(fused[#loc10, #loc11])
#loc170 = loc(fused[#loc12, #loc13])
#loc171 = loc(fused[#loc14, #loc15])
#loc172 = loc(fused[#loc16, #loc17])
#loc173 = loc(fused[#loc18, #loc19])
#loc174 = loc(fused[#loc20, #loc21])
#loc175 = loc(fused[#loc22, #loc19])
#loc176 = loc(fused[#loc24, #loc23])
#loc177 = loc(fused[#loc26, #loc25])
#loc178 = loc(fused[#loc29, #loc30])
#loc179 = loc(fused[#loc35, #loc36])
#loc180 = loc(fused[#loc40, #loc37])
#loc181 = loc(fused[#loc47, #loc48])
#loc182 = loc(fused[#loc49, #loc50])
#loc183 = loc(fused[#loc51, #loc52])
#loc184 = loc(fused[#loc53, #loc54])
#loc185 = loc(fused[#loc55, #loc56])
#loc186 = loc(fused[#loc61, #loc62])
#loc189 = loc(fused[#loc72, #loc73])
#loc190 = loc(fused[#loc76, #loc77])
#loc191 = loc(fused[#loc80, #loc79])
#loc192 = loc(fused[#loc82, #loc83])
#loc193 = loc(fused[#loc84, #loc85])
#loc194 = loc(fused[#loc86, #loc87])
#loc195 = loc(fused[#loc88, #loc89])
#loc196 = loc(fused[#loc90, #loc91])
#loc197 = loc(fused[#loc92, #loc93])
#loc198 = loc(fused[#loc94, #loc95])
#loc199 = loc(fused[#loc96, #loc97, #loc98, #loc93])
#loc200 = loc(fused[#loc101, #loc100])
#loc201 = loc(fused[#loc103, #loc102])
#loc202 = loc(fused[#loc106, #loc107])
#loc203 = loc(fused[#loc112, #loc113])
#loc204 = loc(fused[#loc117, #loc114])
#loc205 = loc(fused[#loc125, #loc126])
#loc206 = loc(fused[#loc127, #loc128])
#loc207 = loc(fused[#loc129, #loc130])
#loc208 = loc(fused[#loc131, #loc132])
#loc209 = loc(fused[#loc133, #loc134])
#loc210 = loc(fused[#loc135, #loc136])
#loc211 = loc(fused[#loc137, #loc138])
#loc212 = loc(fused[#loc139, #loc136])
#loc213 = loc(fused[#loc141, #loc140])
#loc214 = loc(fused[#loc143, #loc142])
#loc215 = loc(fused[#loc146, #loc147])
#loc216 = loc(fused[#loc152, #loc153])
#loc217 = loc(fused[#loc157, #loc154])
