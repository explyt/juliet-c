!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @rename(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc63)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"oldbadfilename.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"newbadfilename.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc4)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"rename failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03_bad() extra(#fn_attr1) {
    cir.br ^bb1 loc(#loc66)
  ^bb1:  // pred: ^bb0
    %0 = cir.const #cir.int<5> : !s32i loc(#loc12)
    %1 = cir.const #cir.int<5> : !s32i loc(#loc13)
    %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc67)
    cir.brcond %2 ^bb2, ^bb7 loc(#loc68)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc69)
  ^bb3:  // pred: ^bb2
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc3)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc3)
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc4)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc4)
    %7 = cir.call @rename(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc17)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc18)
    %9 = cir.cmp(eq, %7, %8) : !s32i, !cir.bool loc(#loc70)
    cir.brcond %9 ^bb4, ^bb5 loc(#loc71)
  ^bb4:  // pred: ^bb3
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc7)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc20)
    cir.br ^bb5 loc(#loc16)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc16)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc11)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc11)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc9)
  } loc(#loc65)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc73)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc23)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc74)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc25)
    cir.return loc(#loc22)
  } loc(#loc72)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc27)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"oldgoodfilename.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc28)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"newgoodfilename.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc29)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.br ^bb1 loc(#loc76)
  ^bb1:  // pred: ^bb0
    %0 = cir.const #cir.int<5> : !s32i loc(#loc34)
    %1 = cir.const #cir.int<5> : !s32i loc(#loc35)
    %2 = cir.cmp(ne, %0, %1) : !s32i, !cir.bool loc(#loc77)
    cir.brcond %2 ^bb2, ^bb3 loc(#loc78)
  ^bb2:  // pred: ^bb1
    %3 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc27)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc27)
    cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc39)
    cir.br ^bb8 loc(#loc37)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc79)
  ^bb4:  // pred: ^bb3
    %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc28)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc28)
    %7 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc29)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc29)
    %9 = cir.call @rename(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc42)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc43)
    %11 = cir.cmp(ne, %9, %10) : !s32i, !cir.bool loc(#loc80)
    cir.brcond %11 ^bb5, ^bb6 loc(#loc81)
  ^bb5:  // pred: ^bb4
    %12 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc45)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    cir.br ^bb6 loc(#loc41)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc41)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc33)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc33)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc31)
  } loc(#loc75)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.br ^bb1 loc(#loc83)
  ^bb1:  // pred: ^bb0
    %0 = cir.const #cir.int<5> : !s32i loc(#loc51)
    %1 = cir.const #cir.int<5> : !s32i loc(#loc52)
    %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc84)
    cir.brcond %2 ^bb2, ^bb7 loc(#loc85)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc86)
  ^bb3:  // pred: ^bb2
    %3 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc56)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc56)
    %5 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc57)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc57)
    %7 = cir.call @rename(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc58)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc59)
    %9 = cir.cmp(ne, %7, %8) : !s32i, !cir.bool loc(#loc87)
    cir.brcond %9 ^bb4, ^bb5 loc(#loc88)
  ^bb4:  // pred: ^bb3
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc61)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    cir.br ^bb5 loc(#loc55)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc55)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc50)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc50)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc48)
  } loc(#loc82)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":0:0)
#loc1 = loc("/usr/include/stdio.h":160:1)
#loc2 = loc("/usr/include/stdio.h":160:58)
#loc3 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":41:20)
#loc4 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":41:39)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":43:23)
#loc8 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":35:1)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":46:1)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":37:5)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":45:5)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":37:8)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":37:11)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":38:5)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":41:9)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":44:9)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":41:13)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":41:61)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":42:9)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":43:13)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":83:1)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":87:1)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":85:5)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":85:11)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":86:5)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":86:11)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":58:19)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":63:20)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":63:40)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":53:1)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":68:1)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":55:5)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":67:5)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":55:8)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":55:11)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":56:5)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":59:5)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":61:5)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":58:9)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":63:9)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":66:9)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":63:13)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":63:63)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":64:9)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":65:23)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":65:13)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":71:1)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":81:1)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":73:5)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":80:5)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":73:8)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":73:11)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":74:5)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":76:9)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":79:9)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":76:20)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":76:40)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":76:13)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":76:63)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":77:9)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":78:23)
#loc62 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_03.c":78:13)
#loc63 = loc(fused[#loc1, #loc2])
#loc64 = loc(fused[#loc5, #loc6])
#loc65 = loc(fused[#loc8, #loc9])
#loc66 = loc(fused[#loc10, #loc11])
#loc67 = loc(fused[#loc12, #loc13])
#loc68 = loc(fused[#loc14, #loc11])
#loc69 = loc(fused[#loc15, #loc16])
#loc70 = loc(fused[#loc17, #loc18])
#loc71 = loc(fused[#loc19, #loc16])
#loc72 = loc(fused[#loc21, #loc22])
#loc73 = loc(fused[#loc23, #loc24])
#loc74 = loc(fused[#loc25, #loc26])
#loc75 = loc(fused[#loc30, #loc31])
#loc76 = loc(fused[#loc32, #loc33])
#loc77 = loc(fused[#loc34, #loc35])
#loc78 = loc(fused[#loc36, #loc37, #loc38, #loc33])
#loc79 = loc(fused[#loc40, #loc41])
#loc80 = loc(fused[#loc42, #loc43])
#loc81 = loc(fused[#loc44, #loc41])
#loc82 = loc(fused[#loc47, #loc48])
#loc83 = loc(fused[#loc49, #loc50])
#loc84 = loc(fused[#loc51, #loc52])
#loc85 = loc(fused[#loc53, #loc50])
#loc86 = loc(fused[#loc54, #loc55])
#loc87 = loc(fused[#loc58, #loc59])
#loc88 = loc(fused[#loc60, #loc55])
