!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @rand() -> !s32i extra(#fn_attr) loc(#loc263)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"output_bad.txt\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc3)
  cir.func private  @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc264)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc6)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc265)
  cir.func private  @fwrite(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc266)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"This is the sentence we are printing to the file. \00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc11)
  cir.func private  @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc267)
  cir.func no_proto  @CWE400_Resource_Exhaustion__rand_fwrite_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc269)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countPtr1", init] {alignment = 8 : i64} loc(#loc270)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countPtr2", init] {alignment = 8 : i64} loc(#loc271)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc270)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc271)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc23)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc272)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc274)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc28)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc29)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc274)
      %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc30)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc30)
      %10 = cir.binop(and, %8, %9) : !s32i loc(#loc30)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc30)
      %12 = cir.ternary(%11, true {
        %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc30)
        %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc30)
        %18 = cir.const #cir.int<30> : !s32i loc(#loc30)
        %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc30)
        %20 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc30)
        %21 = cir.cast(integral, %20 : !s32i), !u32i loc(#loc30)
        %22 = cir.const #cir.int<15> : !s32i loc(#loc30)
        %23 = cir.shift(left, %21 : !u32i, %22 : !s32i) -> !u32i loc(#loc30)
        %24 = cir.binop(xor, %19, %23) : !u32i loc(#loc30)
        %25 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc30)
        %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc30)
        %27 = cir.binop(xor, %24, %26) : !u32i loc(#loc30)
        cir.yield %27 : !u32i loc(#loc30)
      }, false {
        %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc30)
        %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc30)
        %18 = cir.const #cir.int<30> : !s32i loc(#loc30)
        %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc30)
        %20 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc30)
        %21 = cir.cast(integral, %20 : !s32i), !u32i loc(#loc30)
        %22 = cir.const #cir.int<15> : !s32i loc(#loc30)
        %23 = cir.shift(left, %21 : !u32i, %22 : !s32i) -> !u32i loc(#loc30)
        %24 = cir.binop(xor, %19, %23) : !u32i loc(#loc30)
        %25 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc30)
        %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc30)
        %27 = cir.binop(xor, %24, %26) : !u32i loc(#loc30)
        %28 = cir.unary(minus, %27) : !u32i, !u32i loc(#loc30)
        %29 = cir.const #cir.int<1> : !s32i loc(#loc30)
        %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc30)
        %31 = cir.binop(sub, %28, %30) : !u32i loc(#loc30)
        cir.yield %31 : !u32i loc(#loc30)
      }) : (!cir.bool) -> !u32i loc(#loc30)
      %13 = cir.cast(integral, %12 : !u32i), !s32i loc(#loc30)
      cir.store %13, %5 : !s32i, !cir.ptr<!s32i> loc(#loc275)
      %14 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc32)
      %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc33)
      cir.store %14, %15 : !s32i, !cir.ptr<!s32i> loc(#loc276)
    } loc(#loc273)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc278)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc38)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc39)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc278)
      cir.scope {
        %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc280)
        %9 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc281)
        %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc282)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc43)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc43)
        cir.store %12, %8 : !u64i, !cir.ptr<!u64i> loc(#loc280)
        %13 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc45)
        cir.store %13, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc281)
        %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc3)
        %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc3)
        cir.store %15, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc282)
        %16 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc47)
        %17 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
        %18 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc6)
        %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc6)
        %20 = cir.call @fopen(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc47)
        cir.store %20, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc283)
        cir.scope {
          %21 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc53)
          %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc54)
          %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc54)
          %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc285)
          %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc55)
          cir.if %25 {
            %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc57)
            %27 = cir.const #cir.int<1> : !s32i loc(#loc58)
            cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc57)
          } loc(#loc286)
        } loc(#loc284)
        cir.scope {
          %21 = cir.const #cir.int<0> : !s32i loc(#loc61)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc61)
          cir.store %22, %8 : !u64i, !cir.ptr<!u64i> loc(#loc288)
          cir.for : cond {
            %23 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc63)
            %24 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc64)
            %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc64)
            %26 = cir.cmp(lt, %23, %25) : !u64i, !s32i loc(#loc289)
            %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc65)
            cir.condition(%27) loc(#loc65)
          } body {
            cir.scope {
              cir.scope {
                %23 = cir.const #cir.int<50> : !u64i loc(#loc292)
                %24 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc71)
                %25 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc11)
                %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc11)
                %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc11)
                %28 = cir.const #cir.int<1> : !u64i loc(#loc293)
                %29 = cir.const #cir.int<50> : !u64i loc(#loc294)
                %30 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc76)
                %31 = cir.call @fwrite(%27, %28, %29, %30) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc71)
                %32 = cir.cmp(ne, %23, %31) : !u64i, !s32i loc(#loc295)
                %33 = cir.cast(int_to_bool, %32 : !s32i), !cir.bool loc(#loc78)
                cir.if %33 {
                  %34 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc80)
                  %35 = cir.const #cir.int<1> : !s32i loc(#loc81)
                  cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc80)
                } loc(#loc296)
              } loc(#loc291)
            } loc(#loc290)
            cir.yield loc(#loc60)
          } step {
            %23 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc82)
            %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc83)
            cir.store %24, %8 : !u64i, !cir.ptr<!u64i> loc(#loc297)
            cir.yield loc(#loc287)
          } loc(#loc287)
        } loc(#loc287)
        cir.scope {
          %21 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc86)
          %22 = cir.cast(ptr_to_bool, %21 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc86)
          cir.if %22 {
            %23 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc88)
            %24 = cir.call @fclose(%23) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc89)
          } loc(#loc299)
        } loc(#loc298)
      } loc(#loc279)
    } loc(#loc277)
    cir.return loc(#loc15)
  } loc(#loc268)
  cir.func no_proto  @CWE400_Resource_Exhaustion__rand_fwrite_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc301)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc92)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc302)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc94)
    cir.return loc(#loc91)
  } loc(#loc300)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc304)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countPtr1", init] {alignment = 8 : i64} loc(#loc305)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countPtr2", init] {alignment = 8 : i64} loc(#loc306)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc305)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc306)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc105)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc307)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc309)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc110)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc111)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc309)
      %8 = cir.const #cir.int<20> : !s32i loc(#loc112)
      cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc310)
      %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc114)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc115)
      cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc311)
    } loc(#loc308)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc313)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc120)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc121)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc313)
      cir.scope {
        %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc315)
        %9 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc316)
        %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc317)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc125)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc125)
        cir.store %12, %8 : !u64i, !cir.ptr<!u64i> loc(#loc315)
        %13 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc127)
        cir.store %13, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc316)
        %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc129)
        %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc129)
        cir.store %15, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc317)
        %16 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc130)
        %17 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
        %18 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc132)
        %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc132)
        %20 = cir.call @fopen(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc130)
        cir.store %20, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc318)
        cir.scope {
          %21 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc137)
          %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc138)
          %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc138)
          %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc320)
          %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc139)
          cir.if %25 {
            %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc141)
            %27 = cir.const #cir.int<1> : !s32i loc(#loc142)
            cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc141)
          } loc(#loc321)
        } loc(#loc319)
        cir.scope {
          %21 = cir.const #cir.int<0> : !s32i loc(#loc145)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc145)
          cir.store %22, %8 : !u64i, !cir.ptr<!u64i> loc(#loc323)
          cir.for : cond {
            %23 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc147)
            %24 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc148)
            %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc148)
            %26 = cir.cmp(lt, %23, %25) : !u64i, !s32i loc(#loc324)
            %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc149)
            cir.condition(%27) loc(#loc149)
          } body {
            cir.scope {
              cir.scope {
                %23 = cir.const #cir.int<50> : !u64i loc(#loc327)
                %24 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc155)
                %25 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc156)
                %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc156)
                %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc156)
                %28 = cir.const #cir.int<1> : !u64i loc(#loc328)
                %29 = cir.const #cir.int<50> : !u64i loc(#loc329)
                %30 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc161)
                %31 = cir.call @fwrite(%27, %28, %29, %30) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc155)
                %32 = cir.cmp(ne, %23, %31) : !u64i, !s32i loc(#loc330)
                %33 = cir.cast(int_to_bool, %32 : !s32i), !cir.bool loc(#loc163)
                cir.if %33 {
                  %34 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc165)
                  %35 = cir.const #cir.int<1> : !s32i loc(#loc166)
                  cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc165)
                } loc(#loc331)
              } loc(#loc326)
            } loc(#loc325)
            cir.yield loc(#loc144)
          } step {
            %23 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc167)
            %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc168)
            cir.store %24, %8 : !u64i, !cir.ptr<!u64i> loc(#loc332)
            cir.yield loc(#loc322)
          } loc(#loc322)
        } loc(#loc322)
        cir.scope {
          %21 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc171)
          %22 = cir.cast(ptr_to_bool, %21 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc171)
          cir.if %22 {
            %23 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc173)
            %24 = cir.call @fclose(%23) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc174)
          } loc(#loc334)
        } loc(#loc333)
      } loc(#loc314)
    } loc(#loc312)
    cir.return loc(#loc97)
  } loc(#loc303)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"output_good.txt\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc175)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc336)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countPtr1", init] {alignment = 8 : i64} loc(#loc337)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countPtr2", init] {alignment = 8 : i64} loc(#loc338)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc337)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc338)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc184)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc185)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc339)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc341)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc190)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc191)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc341)
      %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc192)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc192)
      %10 = cir.binop(and, %8, %9) : !s32i loc(#loc192)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc192)
      %12 = cir.ternary(%11, true {
        %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc192)
        %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc192)
        %18 = cir.const #cir.int<30> : !s32i loc(#loc192)
        %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc192)
        %20 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc192)
        %21 = cir.cast(integral, %20 : !s32i), !u32i loc(#loc192)
        %22 = cir.const #cir.int<15> : !s32i loc(#loc192)
        %23 = cir.shift(left, %21 : !u32i, %22 : !s32i) -> !u32i loc(#loc192)
        %24 = cir.binop(xor, %19, %23) : !u32i loc(#loc192)
        %25 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc192)
        %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc192)
        %27 = cir.binop(xor, %24, %26) : !u32i loc(#loc192)
        cir.yield %27 : !u32i loc(#loc192)
      }, false {
        %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc192)
        %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc192)
        %18 = cir.const #cir.int<30> : !s32i loc(#loc192)
        %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc192)
        %20 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc192)
        %21 = cir.cast(integral, %20 : !s32i), !u32i loc(#loc192)
        %22 = cir.const #cir.int<15> : !s32i loc(#loc192)
        %23 = cir.shift(left, %21 : !u32i, %22 : !s32i) -> !u32i loc(#loc192)
        %24 = cir.binop(xor, %19, %23) : !u32i loc(#loc192)
        %25 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc192)
        %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc192)
        %27 = cir.binop(xor, %24, %26) : !u32i loc(#loc192)
        %28 = cir.unary(minus, %27) : !u32i, !u32i loc(#loc192)
        %29 = cir.const #cir.int<1> : !s32i loc(#loc192)
        %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc192)
        %31 = cir.binop(sub, %28, %30) : !u32i loc(#loc192)
        cir.yield %31 : !u32i loc(#loc192)
      }) : (!cir.bool) -> !u32i loc(#loc192)
      %13 = cir.cast(integral, %12 : !u32i), !s32i loc(#loc192)
      cir.store %13, %5 : !s32i, !cir.ptr<!s32i> loc(#loc342)
      %14 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc194)
      %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc195)
      cir.store %14, %15 : !s32i, !cir.ptr<!s32i> loc(#loc343)
    } loc(#loc340)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc345)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc200)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc201)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc345)
      cir.scope {
        %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc347)
        %9 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc348)
        %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc349)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc205)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc205)
        cir.store %12, %8 : !u64i, !cir.ptr<!u64i> loc(#loc347)
        %13 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc207)
        cir.store %13, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc348)
        %14 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc175)
        %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc175)
        cir.store %15, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc349)
        cir.scope {
          %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc211)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc212)
          %18 = cir.cmp(gt, %16, %17) : !s32i, !s32i loc(#loc351)
          %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc213)
          %20 = cir.ternary(%19, true {
            %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc215)
            %22 = cir.const #cir.int<20> : !s32i loc(#loc216)
            %23 = cir.cmp(le, %21, %22) : !s32i, !s32i loc(#loc352)
            %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc217)
            %25 = cir.ternary(%24, true {
              %26 = cir.const #true loc(#loc214)
              cir.yield %26 : !cir.bool loc(#loc214)
            }, false {
              %26 = cir.const #false loc(#loc214)
              cir.yield %26 : !cir.bool loc(#loc214)
            }) : (!cir.bool) -> !cir.bool loc(#loc214)
            cir.yield %25 : !cir.bool loc(#loc214)
          }, false {
            %21 = cir.const #false loc(#loc214)
            cir.yield %21 : !cir.bool loc(#loc214)
          }) : (!cir.bool) -> !cir.bool loc(#loc214)
          cir.if %20 {
            %21 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc219)
            %22 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc220)
            %23 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc221)
            %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc221)
            %25 = cir.call @fopen(%22, %24) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc219)
            cir.store %25, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc354)
            cir.scope {
              %26 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc226)
              %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc227)
              %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc227)
              %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc356)
              %30 = cir.cast(int_to_bool, %29 : !s32i), !cir.bool loc(#loc228)
              cir.if %30 {
                %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc230)
                %32 = cir.const #cir.int<1> : !s32i loc(#loc231)
                cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc230)
              } loc(#loc357)
            } loc(#loc355)
            cir.scope {
              %26 = cir.const #cir.int<0> : !s32i loc(#loc234)
              %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc234)
              cir.store %27, %8 : !u64i, !cir.ptr<!u64i> loc(#loc359)
              cir.for : cond {
                %28 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc236)
                %29 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc237)
                %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc237)
                %31 = cir.cmp(lt, %28, %30) : !u64i, !s32i loc(#loc360)
                %32 = cir.cast(int_to_bool, %31 : !s32i), !cir.bool loc(#loc238)
                cir.condition(%32) loc(#loc238)
              } body {
                cir.scope {
                  cir.scope {
                    %28 = cir.const #cir.int<50> : !u64i loc(#loc363)
                    %29 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc244)
                    %30 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc245)
                    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc245)
                    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc245)
                    %33 = cir.const #cir.int<1> : !u64i loc(#loc364)
                    %34 = cir.const #cir.int<50> : !u64i loc(#loc365)
                    %35 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc250)
                    %36 = cir.call @fwrite(%32, %33, %34, %35) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc244)
                    %37 = cir.cmp(ne, %28, %36) : !u64i, !s32i loc(#loc366)
                    %38 = cir.cast(int_to_bool, %37 : !s32i), !cir.bool loc(#loc252)
                    cir.if %38 {
                      %39 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc253)
                      %40 = cir.const #cir.int<1> : !s32i loc(#loc254)
                      cir.call @exit(%40) : (!s32i) -> () extra(#fn_attr) loc(#loc253)
                    } loc(#loc367)
                  } loc(#loc362)
                } loc(#loc361)
                cir.yield loc(#loc233)
              } step {
                %28 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc255)
                %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc256)
                cir.store %29, %8 : !u64i, !cir.ptr<!u64i> loc(#loc368)
                cir.yield loc(#loc358)
              } loc(#loc358)
            } loc(#loc358)
            cir.scope {
              %26 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc259)
              %27 = cir.cast(ptr_to_bool, %26 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc259)
              cir.if %27 {
                %28 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc261)
                %29 = cir.call @fclose(%28) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc262)
              } loc(#loc370)
            } loc(#loc369)
          } loc(#loc353)
        } loc(#loc350)
      } loc(#loc346)
    } loc(#loc344)
    cir.return loc(#loc177)
  } loc(#loc335)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_32.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":42:36)
#loc4 = loc("/usr/include/stdio.h":264:1)
#loc5 = loc("/usr/include/stdio.h":266:3)
#loc6 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":43:37)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("/usr/include/stdio.h":745:1)
#loc10 = loc("/usr/include/stdio.h":746:43)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":52:48)
#loc12 = loc("/usr/include/stdio.h":184:1)
#loc13 = loc("/usr/include/stdio.h":184:36)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":24:1)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":63:1)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":26:5)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":26:9)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":27:5)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":27:23)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":28:5)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":28:23)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":30:14)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":30:13)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":30:5)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":31:5)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":36:5)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":32:9)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":32:22)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":32:21)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":34:17)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":34:9)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":35:22)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":35:10)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":35:9)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":37:5)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":62:5)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":38:9)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":38:22)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":38:21)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":39:9)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":61:9)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":40:13)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":40:24)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":41:13)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":41:27)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":42:13)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":43:21)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":43:27)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":43:13)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":43:41)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":44:13)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":47:13)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":44:17)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":44:26)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":44:23)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":45:13)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":46:17)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":46:22)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":50:13)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":56:13)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":50:22)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":50:18)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":50:25)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":50:37)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":50:27)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":51:13)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":52:17)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":55:17)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":52:21)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":52:36)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":52:41)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":52:58)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":52:69)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":52:72)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":52:87)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":52:90)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":52:95)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":52:38)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":53:17)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":54:21)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":54:26)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":50:45)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":50:44)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":57:13)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":60:13)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":57:17)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":58:13)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":59:24)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":59:17)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":152:1)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":156:1)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":154:5)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":154:13)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":155:5)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":155:13)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":70:1)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":109:1)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":72:5)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":72:9)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":73:5)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":73:23)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":74:5)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":74:23)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":76:14)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":76:13)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":76:5)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":77:5)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":82:5)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":78:9)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":78:22)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":78:21)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":80:17)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":80:9)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":81:22)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":81:10)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":81:9)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":83:5)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":108:5)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":84:9)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":84:22)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":84:21)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":85:9)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":107:9)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":86:13)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":86:24)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":87:13)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":87:27)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":88:13)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":88:36)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":89:21)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":89:27)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":89:37)
#loc133 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":89:13)
#loc134 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":89:41)
#loc135 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":90:13)
#loc136 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":93:13)
#loc137 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":90:17)
#loc138 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":90:26)
#loc139 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":90:23)
#loc140 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":91:13)
#loc141 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":92:17)
#loc142 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":92:22)
#loc143 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":96:13)
#loc144 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":102:13)
#loc145 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":96:22)
#loc146 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":96:18)
#loc147 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":96:25)
#loc148 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":96:37)
#loc149 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":96:27)
#loc150 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":97:13)
#loc151 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":98:17)
#loc152 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":101:17)
#loc153 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":98:21)
#loc154 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":98:36)
#loc155 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":98:41)
#loc156 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":98:48)
#loc157 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":98:58)
#loc158 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":98:69)
#loc159 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":98:72)
#loc160 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":98:87)
#loc161 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":98:90)
#loc162 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":98:95)
#loc163 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":98:38)
#loc164 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":99:17)
#loc165 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":100:21)
#loc166 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":100:26)
#loc167 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":96:45)
#loc168 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":96:44)
#loc169 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":103:13)
#loc170 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":106:13)
#loc171 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":103:17)
#loc172 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":104:13)
#loc173 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":105:24)
#loc174 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":105:17)
#loc175 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":130:36)
#loc176 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":112:1)
#loc177 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":150:1)
#loc178 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":114:5)
#loc179 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":114:9)
#loc180 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":115:5)
#loc181 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":115:23)
#loc182 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":116:5)
#loc183 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":116:23)
#loc184 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":118:14)
#loc185 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":118:13)
#loc186 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":118:5)
#loc187 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":119:5)
#loc188 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":124:5)
#loc189 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":120:9)
#loc190 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":120:22)
#loc191 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":120:21)
#loc192 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":122:17)
#loc193 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":122:9)
#loc194 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":123:22)
#loc195 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":123:10)
#loc196 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":123:9)
#loc197 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":125:5)
#loc198 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":149:5)
#loc199 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":126:9)
#loc200 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":126:22)
#loc201 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":126:21)
#loc202 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":127:9)
#loc203 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":148:9)
#loc204 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":128:13)
#loc205 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":128:24)
#loc206 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":129:13)
#loc207 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":129:27)
#loc208 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":130:13)
#loc209 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":132:13)
#loc210 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":147:13)
#loc211 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":132:17)
#loc212 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":132:25)
#loc213 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":132:23)
#loc214 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":132:27)
#loc215 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":132:30)
#loc216 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":132:39)
#loc217 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":132:36)
#loc218 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":133:13)
#loc219 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":134:25)
#loc220 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":134:31)
#loc221 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":134:41)
#loc222 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":134:17)
#loc223 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":134:45)
#loc224 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":135:17)
#loc225 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":138:17)
#loc226 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":135:21)
#loc227 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":135:30)
#loc228 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":135:27)
#loc229 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":136:17)
#loc230 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":137:21)
#loc231 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":137:26)
#loc232 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":139:17)
#loc233 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":142:17)
#loc234 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":139:26)
#loc235 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":139:22)
#loc236 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":139:29)
#loc237 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":139:41)
#loc238 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":139:31)
#loc239 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":140:17)
#loc240 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":141:21)
#loc241 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":141:108)
#loc242 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":141:25)
#loc243 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":141:40)
#loc244 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":141:45)
#loc245 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":141:52)
#loc246 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":141:62)
#loc247 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":141:73)
#loc248 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":141:76)
#loc249 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":141:91)
#loc250 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":141:94)
#loc251 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":141:99)
#loc252 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":141:42)
#loc253 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":141:102)
#loc254 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":141:107)
#loc255 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":139:49)
#loc256 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":139:48)
#loc257 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":143:17)
#loc258 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":146:17)
#loc259 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":143:21)
#loc260 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":144:17)
#loc261 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":145:28)
#loc262 = loc("CWE400_Resource_Exhaustion__rand_fwrite_32.c":145:21)
#loc263 = loc(fused[#loc1, #loc2])
#loc264 = loc(fused[#loc4, #loc5])
#loc265 = loc(fused[#loc7, #loc8])
#loc266 = loc(fused[#loc9, #loc10])
#loc267 = loc(fused[#loc12, #loc13])
#loc268 = loc(fused[#loc14, #loc15])
#loc269 = loc(fused[#loc16, #loc17])
#loc270 = loc(fused[#loc18, #loc19])
#loc271 = loc(fused[#loc20, #loc21])
#loc272 = loc(fused[#loc24, #loc22])
#loc273 = loc(fused[#loc25, #loc26])
#loc274 = loc(fused[#loc27, #loc28])
#loc275 = loc(fused[#loc31, #loc30])
#loc276 = loc(fused[#loc34, #loc32])
#loc277 = loc(fused[#loc35, #loc36])
#loc278 = loc(fused[#loc37, #loc38])
#loc279 = loc(fused[#loc40, #loc41])
#loc280 = loc(fused[#loc42, #loc43])
#loc281 = loc(fused[#loc44, #loc45])
#loc282 = loc(fused[#loc46, #loc3])
#loc283 = loc(fused[#loc49, #loc50])
#loc284 = loc(fused[#loc51, #loc52])
#loc285 = loc(fused[#loc53, #loc54])
#loc286 = loc(fused[#loc56, #loc52])
#loc287 = loc(fused[#loc59, #loc60])
#loc288 = loc(fused[#loc62, #loc61])
#loc289 = loc(fused[#loc63, #loc64])
#loc290 = loc(fused[#loc66, #loc60])
#loc291 = loc(fused[#loc67, #loc68])
#loc292 = loc(fused[#loc69, #loc70])
#loc293 = loc(fused[#loc72, #loc73])
#loc294 = loc(fused[#loc74, #loc75])
#loc295 = loc(fused[#loc69, #loc77])
#loc296 = loc(fused[#loc79, #loc68])
#loc297 = loc(fused[#loc83, #loc82])
#loc298 = loc(fused[#loc84, #loc85])
#loc299 = loc(fused[#loc87, #loc85])
#loc300 = loc(fused[#loc90, #loc91])
#loc301 = loc(fused[#loc92, #loc93])
#loc302 = loc(fused[#loc94, #loc95])
#loc303 = loc(fused[#loc96, #loc97])
#loc304 = loc(fused[#loc98, #loc99])
#loc305 = loc(fused[#loc100, #loc101])
#loc306 = loc(fused[#loc102, #loc103])
#loc307 = loc(fused[#loc106, #loc104])
#loc308 = loc(fused[#loc107, #loc108])
#loc309 = loc(fused[#loc109, #loc110])
#loc310 = loc(fused[#loc113, #loc112])
#loc311 = loc(fused[#loc116, #loc114])
#loc312 = loc(fused[#loc117, #loc118])
#loc313 = loc(fused[#loc119, #loc120])
#loc314 = loc(fused[#loc122, #loc123])
#loc315 = loc(fused[#loc124, #loc125])
#loc316 = loc(fused[#loc126, #loc127])
#loc317 = loc(fused[#loc128, #loc129])
#loc318 = loc(fused[#loc133, #loc134])
#loc319 = loc(fused[#loc135, #loc136])
#loc320 = loc(fused[#loc137, #loc138])
#loc321 = loc(fused[#loc140, #loc136])
#loc322 = loc(fused[#loc143, #loc144])
#loc323 = loc(fused[#loc146, #loc145])
#loc324 = loc(fused[#loc147, #loc148])
#loc325 = loc(fused[#loc150, #loc144])
#loc326 = loc(fused[#loc151, #loc152])
#loc327 = loc(fused[#loc153, #loc154])
#loc328 = loc(fused[#loc157, #loc158])
#loc329 = loc(fused[#loc159, #loc160])
#loc330 = loc(fused[#loc153, #loc162])
#loc331 = loc(fused[#loc164, #loc152])
#loc332 = loc(fused[#loc168, #loc167])
#loc333 = loc(fused[#loc169, #loc170])
#loc334 = loc(fused[#loc172, #loc170])
#loc335 = loc(fused[#loc176, #loc177])
#loc336 = loc(fused[#loc178, #loc179])
#loc337 = loc(fused[#loc180, #loc181])
#loc338 = loc(fused[#loc182, #loc183])
#loc339 = loc(fused[#loc186, #loc184])
#loc340 = loc(fused[#loc187, #loc188])
#loc341 = loc(fused[#loc189, #loc190])
#loc342 = loc(fused[#loc193, #loc192])
#loc343 = loc(fused[#loc196, #loc194])
#loc344 = loc(fused[#loc197, #loc198])
#loc345 = loc(fused[#loc199, #loc200])
#loc346 = loc(fused[#loc202, #loc203])
#loc347 = loc(fused[#loc204, #loc205])
#loc348 = loc(fused[#loc206, #loc207])
#loc349 = loc(fused[#loc208, #loc175])
#loc350 = loc(fused[#loc209, #loc210])
#loc351 = loc(fused[#loc211, #loc212])
#loc352 = loc(fused[#loc215, #loc216])
#loc353 = loc(fused[#loc218, #loc210])
#loc354 = loc(fused[#loc222, #loc223])
#loc355 = loc(fused[#loc224, #loc225])
#loc356 = loc(fused[#loc226, #loc227])
#loc357 = loc(fused[#loc229, #loc225])
#loc358 = loc(fused[#loc232, #loc233])
#loc359 = loc(fused[#loc235, #loc234])
#loc360 = loc(fused[#loc236, #loc237])
#loc361 = loc(fused[#loc239, #loc233])
#loc362 = loc(fused[#loc240, #loc241])
#loc363 = loc(fused[#loc242, #loc243])
#loc364 = loc(fused[#loc246, #loc247])
#loc365 = loc(fused[#loc248, #loc249])
#loc366 = loc(fused[#loc242, #loc251])
#loc367 = loc(fused[#loc253, #loc241])
#loc368 = loc(fused[#loc256, #loc255])
#loc369 = loc(fused[#loc257, #loc258])
#loc370 = loc(fused[#loc260, #loc258])
