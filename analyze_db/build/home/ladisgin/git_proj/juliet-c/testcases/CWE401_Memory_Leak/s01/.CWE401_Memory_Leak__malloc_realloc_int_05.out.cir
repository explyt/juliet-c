!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc84 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":131:10)
#loc85 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":131:14)
#loc86 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":131:20)
#loc87 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":131:32)
#loc255 = loc(fused[#loc84, #loc85])
#loc256 = loc(fused[#loc86, #loc87])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc222)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc223)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc224)
  cir.func private @printIntLine(!s32i) loc(#loc225)
  cir.func private @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc226)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc227)
  cir.func no_proto @CWE401_Memory_Leak__malloc_realloc_int_05_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc222)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc17)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc17)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc232)
          %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc23)
          %5 = cir.const #cir.int<100> : !s32i loc(#loc24)
          %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc24)
          %7 = cir.const #cir.int<4> : !u64i loc(#loc233)
          %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc234)
          %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc23)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc235)
          cir.store %10, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc232)
          cir.scope {
            %28 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc29)
            %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc30)
            %31 = cir.cmp(eq, %28, %30) : !cir.ptr<!s32i>, !cir.bool loc(#loc237)
            cir.if %31 {
              %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc32)
              %33 = cir.const #cir.int<1> : !s32i loc(#loc33)
              %34 = cir.unary(minus, %33) : !s32i, !s32i loc(#loc34)
              cir.call @exit(%34) : (!s32i) -> () extra(#fn_attr) loc(#loc32)
            } loc(#loc238)
          } loc(#loc236)
          %11 = cir.const #cir.int<5> : !s32i loc(#loc35)
          %12 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc36)
          %13 = cir.const #cir.int<0> : !s32i loc(#loc37)
          %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc38)
          cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc239)
          %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc39)
          %16 = cir.const #cir.int<0> : !s32i loc(#loc40)
          %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc41)
          %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc39)
          cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc42)
          %19 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc43)
          %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc44)
          %21 = cir.cast(bitcast, %20 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc44)
          %22 = cir.const #cir.int<130000> : !s32i loc(#loc45)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc45)
          %24 = cir.const #cir.int<4> : !u64i loc(#loc240)
          %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc241)
          %26 = cir.call @realloc(%21, %25) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc43)
          %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc242)
          cir.store %27, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc243)
          cir.scope {
            %28 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc53)
            %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc54)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc54)
            %31 = cir.cmp(ne, %28, %30) : !cir.ptr<!s32i>, !cir.bool loc(#loc245)
            cir.if %31 {
              %32 = cir.const #cir.int<10> : !s32i loc(#loc56)
              %33 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc57)
              %34 = cir.const #cir.int<0> : !s32i loc(#loc58)
              %35 = cir.ptr_stride(%33 : !cir.ptr<!s32i>, %34 : !s32i), !cir.ptr<!s32i> loc(#loc59)
              cir.store %32, %35 : !s32i, !cir.ptr<!s32i> loc(#loc247)
              %36 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc60)
              %37 = cir.const #cir.int<0> : !s32i loc(#loc61)
              %38 = cir.ptr_stride(%36 : !cir.ptr<!s32i>, %37 : !s32i), !cir.ptr<!s32i> loc(#loc62)
              %39 = cir.load %38 : !cir.ptr<!s32i>, !s32i loc(#loc60)
              cir.call @printIntLine(%39) : (!s32i) -> () loc(#loc63)
              %40 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc64)
              %41 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc65)
              %42 = cir.cast(bitcast, %41 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc65)
              cir.call @free(%42) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc64)
            } loc(#loc246)
          } loc(#loc244)
        } loc(#loc231)
      } loc(#loc230)
    } loc(#loc229)
    cir.return loc(#loc14)
  } loc(#loc228)
  cir.func no_proto @CWE401_Memory_Leak__malloc_realloc_int_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc249)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc68)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc250)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc70)
    cir.return loc(#loc67)
  } loc(#loc248)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc251)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc252)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc253)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc79)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc80)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc81)
  cir.func @main(%arg0: !s32i loc(fused[#loc84, #loc85]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc86, #loc87])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc255)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc256)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc83)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc88)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc88)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc89)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc90)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc90)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc91)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc78)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    %8 = cir.get_global @CWE401_Memory_Leak__malloc_realloc_int_05_good : !cir.ptr<!cir.func<!void ()>> loc(#loc257)
    cir.call @CWE401_Memory_Leak__malloc_realloc_int_05_good() : () -> () loc(#loc93)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc79)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc80)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    %13 = cir.get_global @CWE401_Memory_Leak__malloc_realloc_int_05_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc258)
    cir.call @CWE401_Memory_Leak__malloc_realloc_int_05_bad() : () -> () loc(#loc97)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc81)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc100)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc259)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc259)
    cir.return %17 : !s32i loc(#loc259)
  } loc(#loc254)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc260)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc104)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc260)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc109)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc109)
      cir.if %2 {
        %3 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc104)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc104)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc113)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc265)
          %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc266)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc120)
          %6 = cir.const #cir.int<100> : !s32i loc(#loc121)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc121)
          %8 = cir.const #cir.int<4> : !u64i loc(#loc267)
          %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc268)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc120)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc269)
          cir.store %11, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc265)
          cir.scope {
            %32 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc126)
            %33 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc127)
            %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc127)
            %35 = cir.cmp(eq, %32, %34) : !cir.ptr<!s32i>, !cir.bool loc(#loc271)
            cir.if %35 {
              %36 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc129)
              %37 = cir.const #cir.int<1> : !s32i loc(#loc130)
              %38 = cir.unary(minus, %37) : !s32i, !s32i loc(#loc131)
              cir.call @exit(%38) : (!s32i) -> () extra(#fn_attr) loc(#loc129)
            } loc(#loc272)
          } loc(#loc270)
          %12 = cir.const #cir.int<5> : !s32i loc(#loc132)
          %13 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc133)
          %14 = cir.const #cir.int<0> : !s32i loc(#loc134)
          %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc135)
          cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc273)
          %16 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc136)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc137)
          %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc138)
          %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc136)
          cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc139)
          %20 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc140)
          %21 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc141)
          %22 = cir.cast(bitcast, %21 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc141)
          %23 = cir.const #cir.int<130000> : !s32i loc(#loc142)
          %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc142)
          %25 = cir.const #cir.int<4> : !u64i loc(#loc274)
          %26 = cir.binop(mul, %24, %25) : !u64i loc(#loc275)
          %27 = cir.call @realloc(%22, %26) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc140)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc276)
          cir.store %28, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc277)
          cir.scope {
            %32 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc150)
            %33 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc151)
            %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc151)
            %35 = cir.cmp(ne, %32, %34) : !cir.ptr<!s32i>, !cir.bool loc(#loc279)
            cir.if %35 {
              %36 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc153)
              cir.store %36, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc281)
              %37 = cir.const #cir.int<10> : !s32i loc(#loc155)
              %38 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc156)
              %39 = cir.const #cir.int<0> : !s32i loc(#loc157)
              %40 = cir.ptr_stride(%38 : !cir.ptr<!s32i>, %39 : !s32i), !cir.ptr<!s32i> loc(#loc158)
              cir.store %37, %40 : !s32i, !cir.ptr<!s32i> loc(#loc282)
              %41 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc159)
              %42 = cir.const #cir.int<0> : !s32i loc(#loc160)
              %43 = cir.ptr_stride(%41 : !cir.ptr<!s32i>, %42 : !s32i), !cir.ptr<!s32i> loc(#loc161)
              %44 = cir.load %43 : !cir.ptr<!s32i>, !s32i loc(#loc159)
              cir.call @printIntLine(%44) : (!s32i) -> () loc(#loc162)
            } loc(#loc280)
          } loc(#loc278)
          %29 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc163)
          %30 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc164)
          %31 = cir.cast(bitcast, %30 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc164)
          cir.call @free(%31) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc163)
        } loc(#loc264)
      } loc(#loc263)
    } loc(#loc262)
    cir.return loc(#loc106)
  } loc(#loc261)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc222)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc169)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc169)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc287)
          %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc288)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc177)
          %6 = cir.const #cir.int<100> : !s32i loc(#loc178)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc178)
          %8 = cir.const #cir.int<4> : !u64i loc(#loc289)
          %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc290)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc177)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc291)
          cir.store %11, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc287)
          cir.scope {
            %32 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc183)
            %33 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc184)
            %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc184)
            %35 = cir.cmp(eq, %32, %34) : !cir.ptr<!s32i>, !cir.bool loc(#loc293)
            cir.if %35 {
              %36 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc186)
              %37 = cir.const #cir.int<1> : !s32i loc(#loc187)
              %38 = cir.unary(minus, %37) : !s32i, !s32i loc(#loc188)
              cir.call @exit(%38) : (!s32i) -> () extra(#fn_attr) loc(#loc186)
            } loc(#loc294)
          } loc(#loc292)
          %12 = cir.const #cir.int<5> : !s32i loc(#loc189)
          %13 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc190)
          %14 = cir.const #cir.int<0> : !s32i loc(#loc191)
          %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc192)
          cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc295)
          %16 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc193)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc194)
          %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc195)
          %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc193)
          cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc196)
          %20 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc197)
          %21 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc198)
          %22 = cir.cast(bitcast, %21 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc198)
          %23 = cir.const #cir.int<130000> : !s32i loc(#loc199)
          %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc199)
          %25 = cir.const #cir.int<4> : !u64i loc(#loc296)
          %26 = cir.binop(mul, %24, %25) : !u64i loc(#loc297)
          %27 = cir.call @realloc(%22, %26) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc197)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc298)
          cir.store %28, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc299)
          cir.scope {
            %32 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc207)
            %33 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc208)
            %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc208)
            %35 = cir.cmp(ne, %32, %34) : !cir.ptr<!s32i>, !cir.bool loc(#loc301)
            cir.if %35 {
              %36 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc210)
              cir.store %36, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc303)
              %37 = cir.const #cir.int<10> : !s32i loc(#loc212)
              %38 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc213)
              %39 = cir.const #cir.int<0> : !s32i loc(#loc214)
              %40 = cir.ptr_stride(%38 : !cir.ptr<!s32i>, %39 : !s32i), !cir.ptr<!s32i> loc(#loc215)
              cir.store %37, %40 : !s32i, !cir.ptr<!s32i> loc(#loc304)
              %41 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc216)
              %42 = cir.const #cir.int<0> : !s32i loc(#loc217)
              %43 = cir.ptr_stride(%41 : !cir.ptr<!s32i>, %42 : !s32i), !cir.ptr<!s32i> loc(#loc218)
              %44 = cir.load %43 : !cir.ptr<!s32i>, !s32i loc(#loc216)
              cir.call @printIntLine(%44) : (!s32i) -> () loc(#loc219)
            } loc(#loc302)
          } loc(#loc300)
          %29 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc220)
          %30 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc221)
          %31 = cir.cast(bitcast, %30 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc221)
          cir.call @free(%31) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc220)
        } loc(#loc286)
      } loc(#loc285)
    } loc(#loc284)
    cir.return loc(#loc166)
  } loc(#loc283)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_05.c":0:0)
#loc1 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":25:1)
#loc2 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":25:25)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc9 = loc("/usr/include/stdlib.h":683:1)
#loc10 = loc("/usr/include/stdlib.h":684:14)
#loc11 = loc("/usr/include/stdlib.h":687:1)
#loc12 = loc("/usr/include/stdlib.h":687:32)
#loc13 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":30:1)
#loc14 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":51:1)
#loc15 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":32:5)
#loc16 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":50:5)
#loc17 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":32:8)
#loc18 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":33:5)
#loc19 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":34:9)
#loc20 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":49:9)
#loc21 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":35:13)
#loc22 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":35:55)
#loc23 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":35:33)
#loc24 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":35:40)
#loc25 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":35:44)
#loc26 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":35:54)
#loc27 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":36:13)
#loc28 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":36:41)
#loc29 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":36:17)
#loc30 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":36:25)
#loc31 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":36:31)
#loc32 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":36:32)
#loc33 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":36:38)
#loc34 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":36:37)
#loc35 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":38:23)
#loc36 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":38:13)
#loc37 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":38:18)
#loc38 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":38:19)
#loc39 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":39:26)
#loc40 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":39:31)
#loc41 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":39:32)
#loc42 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":39:13)
#loc43 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":41:27)
#loc44 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":41:35)
#loc45 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":41:42)
#loc46 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":41:50)
#loc47 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":41:60)
#loc48 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":41:41)
#loc49 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":41:61)
#loc50 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":41:13)
#loc51 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":42:13)
#loc52 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":48:13)
#loc53 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":42:17)
#loc54 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":42:25)
#loc55 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":43:13)
#loc56 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":45:27)
#loc57 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":45:17)
#loc58 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":45:22)
#loc59 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":45:23)
#loc60 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":46:30)
#loc61 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":46:35)
#loc62 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":46:36)
#loc63 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":46:17)
#loc64 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":47:17)
#loc65 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":47:22)
#loc66 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":116:1)
#loc67 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":120:1)
#loc68 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":118:5)
#loc69 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":118:11)
#loc70 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":119:5)
#loc71 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":119:11)
#loc72 = loc("/usr/include/stdlib.h":575:1)
#loc73 = loc("/usr/include/stdlib.h":575:41)
#loc74 = loc("/usr/include/time.h":76:1)
#loc75 = loc("/usr/include/time.h":76:38)
#loc76 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc77 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc78 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":136:15)
#loc79 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":138:15)
#loc80 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":141:15)
#loc81 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":143:15)
#loc82 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":131:1)
#loc83 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":146:1)
#loc88 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":132:1)
#loc89 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":134:27)
#loc90 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":134:22)
#loc91 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":134:5)
#loc92 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":136:5)
#loc93 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":137:5)
#loc94 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":137:52)
#loc95 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":138:5)
#loc96 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":141:5)
#loc97 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":142:5)
#loc98 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":142:51)
#loc99 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":143:5)
#loc100 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":145:12)
#loc101 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":145:5)
#loc102 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":26:1)
#loc103 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":26:26)
#loc104 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":63:19)
#loc105 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":58:1)
#loc106 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":87:1)
#loc107 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":60:5)
#loc108 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":86:5)
#loc109 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":60:8)
#loc110 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":61:5)
#loc111 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":64:5)
#loc112 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":66:5)
#loc113 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":63:9)
#loc114 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":67:9)
#loc115 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":85:9)
#loc116 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":68:13)
#loc117 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":68:55)
#loc118 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":70:13)
#loc119 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":70:19)
#loc120 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":68:33)
#loc121 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":68:40)
#loc122 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":68:44)
#loc123 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":68:54)
#loc124 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":69:13)
#loc125 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":69:41)
#loc126 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":69:17)
#loc127 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":69:25)
#loc128 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":69:31)
#loc129 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":69:32)
#loc130 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":69:38)
#loc131 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":69:37)
#loc132 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":72:23)
#loc133 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":72:13)
#loc134 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":72:18)
#loc135 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":72:19)
#loc136 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":73:26)
#loc137 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":73:31)
#loc138 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":73:32)
#loc139 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":73:13)
#loc140 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":74:30)
#loc141 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":74:38)
#loc142 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":74:45)
#loc143 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":74:53)
#loc144 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":74:63)
#loc145 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":74:44)
#loc146 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":74:64)
#loc147 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":74:13)
#loc148 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":77:13)
#loc149 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":83:13)
#loc150 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":77:17)
#loc151 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":77:28)
#loc152 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":78:13)
#loc153 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":79:24)
#loc154 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":79:17)
#loc155 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":81:27)
#loc156 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":81:17)
#loc157 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":81:22)
#loc158 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":81:23)
#loc159 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":82:30)
#loc160 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":82:35)
#loc161 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":82:36)
#loc162 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":82:17)
#loc163 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":84:13)
#loc164 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":84:18)
#loc165 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":90:1)
#loc166 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":114:1)
#loc167 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":92:5)
#loc168 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":113:5)
#loc169 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":92:8)
#loc170 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":93:5)
#loc171 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":94:9)
#loc172 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":112:9)
#loc173 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":95:13)
#loc174 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":95:55)
#loc175 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":97:13)
#loc176 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":97:19)
#loc177 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":95:33)
#loc178 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":95:40)
#loc179 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":95:44)
#loc180 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":95:54)
#loc181 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":96:13)
#loc182 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":96:41)
#loc183 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":96:17)
#loc184 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":96:25)
#loc185 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":96:31)
#loc186 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":96:32)
#loc187 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":96:38)
#loc188 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":96:37)
#loc189 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":99:23)
#loc190 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":99:13)
#loc191 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":99:18)
#loc192 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":99:19)
#loc193 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":100:26)
#loc194 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":100:31)
#loc195 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":100:32)
#loc196 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":100:13)
#loc197 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":101:30)
#loc198 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":101:38)
#loc199 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":101:45)
#loc200 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":101:53)
#loc201 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":101:63)
#loc202 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":101:44)
#loc203 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":101:64)
#loc204 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":101:13)
#loc205 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":104:13)
#loc206 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":110:13)
#loc207 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":104:17)
#loc208 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":104:28)
#loc209 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":105:13)
#loc210 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":106:24)
#loc211 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":106:17)
#loc212 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":108:27)
#loc213 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":108:17)
#loc214 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":108:22)
#loc215 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":108:23)
#loc216 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":109:30)
#loc217 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":109:35)
#loc218 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":109:36)
#loc219 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":109:17)
#loc220 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":111:13)
#loc221 = loc("CWE401_Memory_Leak__malloc_realloc_int_05.c":111:18)
#loc222 = loc(fused[#loc1, #loc2])
#loc223 = loc(fused[#loc3, #loc4])
#loc224 = loc(fused[#loc5, #loc6])
#loc225 = loc(fused[#loc7, #loc8])
#loc226 = loc(fused[#loc9, #loc10])
#loc227 = loc(fused[#loc11, #loc12])
#loc228 = loc(fused[#loc13, #loc14])
#loc229 = loc(fused[#loc15, #loc16])
#loc230 = loc(fused[#loc18, #loc16])
#loc231 = loc(fused[#loc19, #loc20])
#loc232 = loc(fused[#loc21, #loc22])
#loc233 = loc(fused[#loc25, #loc26])
#loc234 = loc(fused[#loc24, #loc26])
#loc235 = loc(fused[#loc23, #loc22])
#loc236 = loc(fused[#loc27, #loc28])
#loc237 = loc(fused[#loc29, #loc30])
#loc238 = loc(fused[#loc31, #loc28])
#loc239 = loc(fused[#loc36, #loc35])
#loc240 = loc(fused[#loc46, #loc47])
#loc241 = loc(fused[#loc48, #loc47])
#loc242 = loc(fused[#loc43, #loc49])
#loc243 = loc(fused[#loc50, #loc49])
#loc244 = loc(fused[#loc51, #loc52])
#loc245 = loc(fused[#loc53, #loc54])
#loc246 = loc(fused[#loc55, #loc52])
#loc247 = loc(fused[#loc57, #loc56])
#loc248 = loc(fused[#loc66, #loc67])
#loc249 = loc(fused[#loc68, #loc69])
#loc250 = loc(fused[#loc70, #loc71])
#loc251 = loc(fused[#loc72, #loc73])
#loc252 = loc(fused[#loc74, #loc75])
#loc253 = loc(fused[#loc76, #loc77])
#loc254 = loc(fused[#loc82, #loc83])
#loc257 = loc(fused[#loc93, #loc94])
#loc258 = loc(fused[#loc97, #loc98])
#loc259 = loc(fused[#loc101, #loc100])
#loc260 = loc(fused[#loc102, #loc103])
#loc261 = loc(fused[#loc105, #loc106])
#loc262 = loc(fused[#loc107, #loc108])
#loc263 = loc(fused[#loc110, #loc111, #loc112, #loc108])
#loc264 = loc(fused[#loc114, #loc115])
#loc265 = loc(fused[#loc116, #loc117])
#loc266 = loc(fused[#loc118, #loc119])
#loc267 = loc(fused[#loc122, #loc123])
#loc268 = loc(fused[#loc121, #loc123])
#loc269 = loc(fused[#loc120, #loc117])
#loc270 = loc(fused[#loc124, #loc125])
#loc271 = loc(fused[#loc126, #loc127])
#loc272 = loc(fused[#loc128, #loc125])
#loc273 = loc(fused[#loc133, #loc132])
#loc274 = loc(fused[#loc143, #loc144])
#loc275 = loc(fused[#loc145, #loc144])
#loc276 = loc(fused[#loc140, #loc146])
#loc277 = loc(fused[#loc147, #loc146])
#loc278 = loc(fused[#loc148, #loc149])
#loc279 = loc(fused[#loc150, #loc151])
#loc280 = loc(fused[#loc152, #loc149])
#loc281 = loc(fused[#loc154, #loc153])
#loc282 = loc(fused[#loc156, #loc155])
#loc283 = loc(fused[#loc165, #loc166])
#loc284 = loc(fused[#loc167, #loc168])
#loc285 = loc(fused[#loc170, #loc168])
#loc286 = loc(fused[#loc171, #loc172])
#loc287 = loc(fused[#loc173, #loc174])
#loc288 = loc(fused[#loc175, #loc176])
#loc289 = loc(fused[#loc179, #loc180])
#loc290 = loc(fused[#loc178, #loc180])
#loc291 = loc(fused[#loc177, #loc174])
#loc292 = loc(fused[#loc181, #loc182])
#loc293 = loc(fused[#loc183, #loc184])
#loc294 = loc(fused[#loc185, #loc182])
#loc295 = loc(fused[#loc190, #loc189])
#loc296 = loc(fused[#loc200, #loc201])
#loc297 = loc(fused[#loc202, #loc201])
#loc298 = loc(fused[#loc197, #loc203])
#loc299 = loc(fused[#loc204, #loc203])
#loc300 = loc(fused[#loc205, #loc206])
#loc301 = loc(fused[#loc207, #loc208])
#loc302 = loc(fused[#loc209, #loc206])
#loc303 = loc(fused[#loc211, #loc210])
#loc304 = loc(fused[#loc213, #loc212])
