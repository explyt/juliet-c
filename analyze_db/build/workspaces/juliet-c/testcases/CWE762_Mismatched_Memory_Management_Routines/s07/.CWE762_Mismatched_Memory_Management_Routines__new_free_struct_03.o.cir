!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc3 = loc("../../../testcasesupport/std_testcase.h":96:16)
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc156)
  cir.func linkonce_odr @_ZN14_twoIntsStructC2Ev(%arg0: !cir.ptr<!ty__twoIntsStruct> loc("../../../testcasesupport/std_testcase.h":96:16)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc3)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc3)
    cir.return loc(#loc3)
  } loc(#loc3)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc157)
  cir.func @_ZN64CWE762_Mismatched_Memory_Management_Routines__new_free_struct_033badEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc159)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc10)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc160)
    cir.br ^bb1 loc(#loc161)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<5> : !s32i loc(#loc14)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc15)
    %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc162)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc163)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<8> : !u64i loc(#loc164)
    %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc19)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc164)
    cir.call @_ZN14_twoIntsStructC2Ev(%7) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr1) loc(#loc18)
    cir.store %7, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc165)
    cir.br ^bb3 loc(#loc13)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc13)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc166)
  ^bb5:  // pred: ^bb4
    %8 = cir.const #cir.int<5> : !s32i loc(#loc23)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc24)
    %10 = cir.cmp(eq, %8, %9) : !s32i, !cir.bool loc(#loc167)
    cir.brcond %10 ^bb6, ^bb7 loc(#loc168)
  ^bb6:  // pred: ^bb5
    %11 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc26)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc27)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc27)
    cir.call @free(%13) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc26)
    cir.br ^bb7 loc(#loc22)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc22)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc7)
  } loc(#loc158)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc169)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc30)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc170)
  cir.func internal private @_ZN64CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03L8goodB2G1Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc172)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc173)
    cir.br ^bb1 loc(#loc174)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<5> : !s32i loc(#loc41)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc42)
    %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc175)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc176)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<8> : !u64i loc(#loc177)
    %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc46)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc177)
    cir.call @_ZN14_twoIntsStructC2Ev(%7) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr1) loc(#loc45)
    cir.store %7, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc178)
    cir.br ^bb3 loc(#loc40)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc40)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc179)
  ^bb5:  // pred: ^bb4
    %8 = cir.const #cir.int<5> : !s32i loc(#loc50)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc51)
    %10 = cir.cmp(ne, %8, %9) : !s32i, !cir.bool loc(#loc180)
    cir.brcond %10 ^bb6, ^bb7 loc(#loc181)
  ^bb6:  // pred: ^bb5
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc30)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc30)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    cir.br ^bb8 loc(#loc53)
  ^bb7:  // pred: ^bb5
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc56)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc56)
    cir.call @_ZdlPv(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc46)
    cir.br ^bb8 loc(#loc49)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc49)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc34)
  } loc(#loc171)
  cir.func internal private @_ZN64CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03L8goodB2G2Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc183)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc61)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc184)
    cir.br ^bb1 loc(#loc185)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<5> : !s32i loc(#loc65)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc66)
    %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc186)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc187)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<8> : !u64i loc(#loc188)
    %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc70)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc188)
    cir.call @_ZN14_twoIntsStructC2Ev(%7) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr1) loc(#loc69)
    cir.store %7, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc189)
    cir.br ^bb3 loc(#loc64)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc64)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc190)
  ^bb5:  // pred: ^bb4
    %8 = cir.const #cir.int<5> : !s32i loc(#loc74)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc75)
    %10 = cir.cmp(eq, %8, %9) : !s32i, !cir.bool loc(#loc191)
    cir.brcond %10 ^bb6, ^bb7 loc(#loc192)
  ^bb6:  // pred: ^bb5
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc77)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc77)
    cir.call @_ZdlPv(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc70)
    cir.br ^bb7 loc(#loc73)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc73)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc58)
  } loc(#loc182)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc193)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc194)
  cir.func internal private @_ZN64CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03L8goodG2B1Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc196)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc86)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc197)
    cir.br ^bb1 loc(#loc198)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<5> : !s32i loc(#loc90)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc91)
    %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc199)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc200)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc95)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc95)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    cir.br ^bb8 loc(#loc93)
  ^bb3:  // pred: ^bb1
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc97)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc98)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc98)
    %10 = cir.const #cir.int<8> : !u64i loc(#loc201)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc202)
    %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc97)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc203)
    cir.store %13, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc204)
    cir.br ^bb4 loc(#loc205)
  ^bb4:  // pred: ^bb3
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc105)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc106)
    %16 = cir.cmp(eq, %14, %15) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc206)
    cir.brcond %16 ^bb5, ^bb6 loc(#loc207)
  ^bb5:  // pred: ^bb4
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc108)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc110)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr1) loc(#loc108)
    cir.br ^bb6 loc(#loc104)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc104)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc89)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc89)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc208)
  ^bb10:  // pred: ^bb9
    %20 = cir.const #cir.int<5> : !s32i loc(#loc113)
    %21 = cir.const #cir.int<5> : !s32i loc(#loc114)
    %22 = cir.cmp(eq, %20, %21) : !s32i, !cir.bool loc(#loc209)
    cir.brcond %22 ^bb11, ^bb12 loc(#loc210)
  ^bb11:  // pred: ^bb10
    %23 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc116)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc117)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc117)
    cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc116)
    cir.br ^bb12 loc(#loc112)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc112)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc83)
  } loc(#loc195)
  cir.func internal private @_ZN64CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03L8goodG2B2Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc212)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc122)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc213)
    cir.br ^bb1 loc(#loc214)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<5> : !s32i loc(#loc126)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc127)
    %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc215)
    cir.brcond %4 ^bb2, ^bb7 loc(#loc216)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc129)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc130)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc130)
    %8 = cir.const #cir.int<8> : !u64i loc(#loc217)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc218)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc129)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc219)
    cir.store %11, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc220)
    cir.br ^bb3 loc(#loc221)
  ^bb3:  // pred: ^bb2
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc137)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc138)
    %14 = cir.cmp(eq, %12, %13) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc222)
    cir.brcond %14 ^bb4, ^bb5 loc(#loc223)
  ^bb4:  // pred: ^bb3
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc140)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc141)
    %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc142)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr1) loc(#loc140)
    cir.br ^bb5 loc(#loc136)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc136)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc125)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc125)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc224)
  ^bb9:  // pred: ^bb8
    %18 = cir.const #cir.int<5> : !s32i loc(#loc145)
    %19 = cir.const #cir.int<5> : !s32i loc(#loc146)
    %20 = cir.cmp(eq, %18, %19) : !s32i, !cir.bool loc(#loc225)
    cir.brcond %20 ^bb10, ^bb11 loc(#loc226)
  ^bb10:  // pred: ^bb9
    %21 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc148)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc149)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc149)
    cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc148)
    cir.br ^bb11 loc(#loc144)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc144)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc119)
  } loc(#loc211)
  cir.func @_ZN64CWE762_Mismatched_Memory_Management_Routines__new_free_struct_034goodEv() extra(#fn_attr2) {
    cir.call @_ZN64CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03L8goodB2G1Ev() : () -> () loc(#loc152)
    cir.call @_ZN64CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03L8goodB2G2Ev() : () -> () loc(#loc153)
    cir.call @_ZN64CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03L8goodG2B1Ev() : () -> () loc(#loc154)
    cir.call @_ZN64CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03L8goodG2B2Ev() : () -> () loc(#loc155)
    cir.return loc(#loc151)
  } loc(#loc227)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc4 = loc("/usr/include/stdlib.h":687:1)
#loc5 = loc("/usr/include/stdlib.h":687:32)
#loc6 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":25:1)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":41:1)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":27:5)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":27:21)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":29:12)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":29:5)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":30:5)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":34:5)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":30:8)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":30:11)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":31:5)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":33:16)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":33:20)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":25:6)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":33:9)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":35:5)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":40:5)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":35:8)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":35:11)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":36:5)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":39:9)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":39:14)
#loc28 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc29 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":61:19)
#loc31 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc32 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":48:1)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":68:1)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":50:5)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":50:21)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":52:12)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":52:5)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":53:5)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":57:5)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":53:8)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":53:11)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":54:5)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":56:16)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":56:20)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":48:13)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":56:9)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":58:5)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":67:5)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":58:8)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":58:11)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":59:5)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":62:5)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":64:5)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":61:9)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":66:16)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":71:1)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":86:1)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":73:5)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":73:21)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":75:12)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":75:5)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":76:5)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":80:5)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":76:8)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":76:11)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":77:5)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":79:16)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":79:20)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":71:13)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":79:9)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":81:5)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":85:5)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":81:8)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":81:11)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":82:5)
#loc77 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":84:16)
#loc78 = loc("/usr/include/stdlib.h":672:1)
#loc79 = loc("/usr/include/stdlib.h":672:45)
#loc80 = loc("/usr/include/stdlib.h":756:1)
#loc81 = loc("/usr/include/stdlib.h":756:70)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":89:1)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":111:1)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":91:5)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":91:21)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":93:12)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":93:5)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":94:5)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":104:5)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":94:8)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":94:11)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":95:5)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":98:5)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":100:5)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":97:19)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":97:9)
#loc97 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":102:33)
#loc98 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":102:40)
#loc99 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":102:44)
#loc100 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":102:64)
#loc101 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":102:65)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":102:9)
#loc103 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":103:9)
#loc104 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":103:37)
#loc105 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":103:13)
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":103:21)
#loc107 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":103:27)
#loc108 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":103:28)
#loc109 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":103:34)
#loc110 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":103:33)
#loc111 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":105:5)
#loc112 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":110:5)
#loc113 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":105:8)
#loc114 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":105:11)
#loc115 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":106:5)
#loc116 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":109:9)
#loc117 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":109:14)
#loc118 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":114:1)
#loc119 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":131:1)
#loc120 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":116:5)
#loc121 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":116:21)
#loc122 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":118:12)
#loc123 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":118:5)
#loc124 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":119:5)
#loc125 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":124:5)
#loc126 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":119:8)
#loc127 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":119:11)
#loc128 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":120:5)
#loc129 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":122:33)
#loc130 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":122:40)
#loc131 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":122:44)
#loc132 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":122:64)
#loc133 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":122:65)
#loc134 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":122:9)
#loc135 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":123:9)
#loc136 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":123:37)
#loc137 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":123:13)
#loc138 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":123:21)
#loc139 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":123:27)
#loc140 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":123:28)
#loc141 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":123:34)
#loc142 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":123:33)
#loc143 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":125:5)
#loc144 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":130:5)
#loc145 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":125:8)
#loc146 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":125:11)
#loc147 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":126:5)
#loc148 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":129:9)
#loc149 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":129:14)
#loc150 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":133:1)
#loc151 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":139:1)
#loc152 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":135:5)
#loc153 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":136:5)
#loc154 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":137:5)
#loc155 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_03.cpp":138:5)
#loc156 = loc(fused[#loc1, #loc2])
#loc157 = loc(fused[#loc4, #loc5])
#loc158 = loc(fused[#loc6, #loc7])
#loc159 = loc(fused[#loc8, #loc9])
#loc160 = loc(fused[#loc11, #loc10])
#loc161 = loc(fused[#loc12, #loc13])
#loc162 = loc(fused[#loc14, #loc15])
#loc163 = loc(fused[#loc16, #loc13])
#loc164 = loc(fused[#loc17, #loc18])
#loc165 = loc(fused[#loc20, #loc18])
#loc166 = loc(fused[#loc21, #loc22])
#loc167 = loc(fused[#loc23, #loc24])
#loc168 = loc(fused[#loc25, #loc22])
#loc169 = loc(fused[#loc28, #loc29])
#loc170 = loc(fused[#loc31, #loc32])
#loc171 = loc(fused[#loc33, #loc34])
#loc172 = loc(fused[#loc35, #loc36])
#loc173 = loc(fused[#loc38, #loc37])
#loc174 = loc(fused[#loc39, #loc40])
#loc175 = loc(fused[#loc41, #loc42])
#loc176 = loc(fused[#loc43, #loc40])
#loc177 = loc(fused[#loc44, #loc45])
#loc178 = loc(fused[#loc47, #loc45])
#loc179 = loc(fused[#loc48, #loc49])
#loc180 = loc(fused[#loc50, #loc51])
#loc181 = loc(fused[#loc52, #loc53, #loc54, #loc49])
#loc182 = loc(fused[#loc57, #loc58])
#loc183 = loc(fused[#loc59, #loc60])
#loc184 = loc(fused[#loc62, #loc61])
#loc185 = loc(fused[#loc63, #loc64])
#loc186 = loc(fused[#loc65, #loc66])
#loc187 = loc(fused[#loc67, #loc64])
#loc188 = loc(fused[#loc68, #loc69])
#loc189 = loc(fused[#loc71, #loc69])
#loc190 = loc(fused[#loc72, #loc73])
#loc191 = loc(fused[#loc74, #loc75])
#loc192 = loc(fused[#loc76, #loc73])
#loc193 = loc(fused[#loc78, #loc79])
#loc194 = loc(fused[#loc80, #loc81])
#loc195 = loc(fused[#loc82, #loc83])
#loc196 = loc(fused[#loc84, #loc85])
#loc197 = loc(fused[#loc87, #loc86])
#loc198 = loc(fused[#loc88, #loc89])
#loc199 = loc(fused[#loc90, #loc91])
#loc200 = loc(fused[#loc92, #loc93, #loc94, #loc89])
#loc201 = loc(fused[#loc99, #loc100])
#loc202 = loc(fused[#loc98, #loc100])
#loc203 = loc(fused[#loc97, #loc101])
#loc204 = loc(fused[#loc102, #loc101])
#loc205 = loc(fused[#loc103, #loc104])
#loc206 = loc(fused[#loc105, #loc106])
#loc207 = loc(fused[#loc107, #loc104])
#loc208 = loc(fused[#loc111, #loc112])
#loc209 = loc(fused[#loc113, #loc114])
#loc210 = loc(fused[#loc115, #loc112])
#loc211 = loc(fused[#loc118, #loc119])
#loc212 = loc(fused[#loc120, #loc121])
#loc213 = loc(fused[#loc123, #loc122])
#loc214 = loc(fused[#loc124, #loc125])
#loc215 = loc(fused[#loc126, #loc127])
#loc216 = loc(fused[#loc128, #loc125])
#loc217 = loc(fused[#loc131, #loc132])
#loc218 = loc(fused[#loc130, #loc132])
#loc219 = loc(fused[#loc129, #loc133])
#loc220 = loc(fused[#loc134, #loc133])
#loc221 = loc(fused[#loc135, #loc136])
#loc222 = loc(fused[#loc137, #loc138])
#loc223 = loc(fused[#loc139, #loc136])
#loc224 = loc(fused[#loc143, #loc144])
#loc225 = loc(fused[#loc145, #loc146])
#loc226 = loc(fused[#loc147, #loc144])
#loc227 = loc(fused[#loc150, #loc151])
