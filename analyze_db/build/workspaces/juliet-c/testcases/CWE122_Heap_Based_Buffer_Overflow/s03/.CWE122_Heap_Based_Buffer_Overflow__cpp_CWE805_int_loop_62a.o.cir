!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s03/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_ZN57CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_629badSourceERPi(!cir.ptr<!cir.ptr<!s32i>>) loc(#loc80)
  cir.func private @printIntLine(!s32i) loc(#loc81)
  cir.func @_ZN57CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_623badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc83)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc9)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc84)
    cir.call @_ZN57CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_629badSourceERPi(%0) : (!cir.ptr<!cir.ptr<!s32i>>) -> () loc(#loc11)
    cir.scope {
      %2 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc86)
      %3 = cir.const #cir.zero : !cir.array<!s32i x 100> loc(#loc86)
      cir.store %3, %2 : !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>> loc(#loc86)
      cir.scope {
        %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc88)
        cir.scope {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc22)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc22)
          cir.store %11, %4 : !u64i, !cir.ptr<!u64i> loc(#loc90)
          cir.for : cond {
            %12 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc24)
            %13 = cir.const #cir.int<100> : !s32i loc(#loc25)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc25)
            %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc91)
            cir.condition(%15) loc(#loc91)
          } body {
            cir.scope {
              %12 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc27)
              %13 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc28)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !u64i), !cir.ptr<!s32i> loc(#loc28)
              %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc28)
              %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc29)
              %17 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc30)
              %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !u64i), !cir.ptr<!s32i> loc(#loc31)
              cir.store %15, %18 : !s32i, !cir.ptr<!s32i> loc(#loc93)
            } loc(#loc92)
            cir.yield loc(#loc21)
          } step {
            %12 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc33)
            %13 = cir.unary(inc, %12) : !u64i, !u64i loc(#loc34)
            cir.store %13, %4 : !u64i, !cir.ptr<!u64i> loc(#loc94)
            cir.yield loc(#loc89)
          } loc(#loc89)
        } loc(#loc89)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc35)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc36)
        %7 = cir.ptr_stride(%5 : !cir.ptr<!s32i>, %6 : !s32i), !cir.ptr<!s32i> loc(#loc37)
        %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc35)
        cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc38)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc39)
        cir.delete.array %9 : <!s32i> loc(#loc39)
      } loc(#loc87)
    } loc(#loc85)
    cir.return loc(#loc6)
  } loc(#loc82)
  cir.func private @_ZN57CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_6213goodG2BSourceERPi(!cir.ptr<!cir.ptr<!s32i>>) loc(#loc95)
  cir.func internal private @_ZN57CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc97)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc46)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc98)
    cir.call @_ZN57CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_6213goodG2BSourceERPi(%0) : (!cir.ptr<!cir.ptr<!s32i>>) -> () loc(#loc48)
    cir.scope {
      %2 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc100)
      %3 = cir.const #cir.zero : !cir.array<!s32i x 100> loc(#loc100)
      cir.store %3, %2 : !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>> loc(#loc100)
      cir.scope {
        %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc102)
        cir.scope {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc59)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc59)
          cir.store %11, %4 : !u64i, !cir.ptr<!u64i> loc(#loc104)
          cir.for : cond {
            %12 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc61)
            %13 = cir.const #cir.int<100> : !s32i loc(#loc62)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc62)
            %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc105)
            cir.condition(%15) loc(#loc105)
          } body {
            cir.scope {
              %12 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc64)
              %13 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc65)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !u64i), !cir.ptr<!s32i> loc(#loc65)
              %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc65)
              %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc66)
              %17 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc67)
              %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !u64i), !cir.ptr<!s32i> loc(#loc68)
              cir.store %15, %18 : !s32i, !cir.ptr<!s32i> loc(#loc107)
            } loc(#loc106)
            cir.yield loc(#loc58)
          } step {
            %12 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc70)
            %13 = cir.unary(inc, %12) : !u64i, !u64i loc(#loc71)
            cir.store %13, %4 : !u64i, !cir.ptr<!u64i> loc(#loc108)
            cir.yield loc(#loc103)
          } loc(#loc103)
        } loc(#loc103)
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc72)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc73)
        %7 = cir.ptr_stride(%5 : !cir.ptr<!s32i>, %6 : !s32i), !cir.ptr<!s32i> loc(#loc74)
        %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc72)
        cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc75)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc76)
        cir.delete.array %9 : <!s32i> loc(#loc76)
      } loc(#loc101)
    } loc(#loc99)
    cir.return loc(#loc43)
  } loc(#loc96)
  cir.func @_ZN57CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_624goodEv() extra(#fn_attr) {
    cir.call @_ZN57CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62L7goodG2BEv() : () -> () loc(#loc79)
    cir.return loc(#loc78)
  } loc(#loc109)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s03/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":25:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":25:27)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":27:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":45:1)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":29:5)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":29:11)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":30:12)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":30:5)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":31:5)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":32:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":44:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":33:9)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":33:29)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":34:9)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":43:9)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":35:13)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":35:20)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":37:13)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":40:13)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":37:22)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":37:18)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":37:25)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":37:29)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":38:13)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":39:34)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":39:27)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":39:17)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":39:22)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":39:23)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":39:35)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":37:35)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":37:34)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":41:26)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":41:31)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":41:32)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":41:13)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":42:23)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":52:1)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":52:31)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":54:1)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":72:1)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":56:5)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":56:11)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":57:12)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":57:5)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":58:5)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":59:5)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":71:5)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":60:9)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":60:29)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":61:9)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":70:9)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":62:13)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":62:20)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":64:13)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":67:13)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":64:22)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":64:18)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":64:25)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":64:29)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":65:13)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":66:34)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":66:27)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":66:17)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":66:22)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":66:23)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":66:35)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":64:35)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":64:34)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":68:26)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":68:31)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":68:32)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":68:13)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":69:23)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":74:1)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":77:1)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_int_loop_62a.cpp":76:5)
#loc80 = loc(fused[#loc1, #loc2])
#loc81 = loc(fused[#loc3, #loc4])
#loc82 = loc(fused[#loc5, #loc6])
#loc83 = loc(fused[#loc7, #loc8])
#loc84 = loc(fused[#loc10, #loc9])
#loc85 = loc(fused[#loc12, #loc13])
#loc86 = loc(fused[#loc14, #loc15])
#loc87 = loc(fused[#loc16, #loc17])
#loc88 = loc(fused[#loc18, #loc19])
#loc89 = loc(fused[#loc20, #loc21])
#loc90 = loc(fused[#loc23, #loc22])
#loc91 = loc(fused[#loc24, #loc25])
#loc92 = loc(fused[#loc26, #loc21])
#loc93 = loc(fused[#loc29, #loc32])
#loc94 = loc(fused[#loc34, #loc33])
#loc95 = loc(fused[#loc40, #loc41])
#loc96 = loc(fused[#loc42, #loc43])
#loc97 = loc(fused[#loc44, #loc45])
#loc98 = loc(fused[#loc47, #loc46])
#loc99 = loc(fused[#loc49, #loc50])
#loc100 = loc(fused[#loc51, #loc52])
#loc101 = loc(fused[#loc53, #loc54])
#loc102 = loc(fused[#loc55, #loc56])
#loc103 = loc(fused[#loc57, #loc58])
#loc104 = loc(fused[#loc60, #loc59])
#loc105 = loc(fused[#loc61, #loc62])
#loc106 = loc(fused[#loc63, #loc58])
#loc107 = loc(fused[#loc66, #loc69])
#loc108 = loc(fused[#loc71, #loc70])
#loc109 = loc(fused[#loc77, #loc78])
