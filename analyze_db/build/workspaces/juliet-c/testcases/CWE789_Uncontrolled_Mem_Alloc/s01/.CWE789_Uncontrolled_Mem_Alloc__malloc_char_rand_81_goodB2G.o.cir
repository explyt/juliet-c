!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":27:66)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":27:73)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":27:80)
#true = #cir.bool<true> : !cir.bool
#loc63 = loc(fused[#loc16, #loc17])
!ty_anon_struct = !cir.record<struct  {!cir.ptr<!u8i>, !cir.ptr<!u8i>}>
!ty_anon_struct1 = !cir.record<struct  {!cir.ptr<!u8i>, !cir.ptr<!u8i>, !cir.ptr<!u8i>}>
!ty_anon_struct2 = !cir.record<struct  {!cir.array<!cir.ptr<!u8i> x 3>}>
!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_813A3ACWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_base = !cir.record<class "CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81::CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>} #cir.record.decl.ast>
!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_813A3ACWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G = !cir.record<class "CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81::CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G" {!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_813A3ACWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_base} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc57)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc58)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc60)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc61)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc12)
  cir.func @_ZNK50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_8158CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G6actionEm(%arg0: !cir.ptr<!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_813A3ACWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G> loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":27:66), %arg1: !u64i loc(fused[#loc16, #loc17])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_813A3ACWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_813A3ACWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G>>, ["this", init] {alignment = 8 : i64} loc(#loc15)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc63)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_813A3ACWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_813A3ACWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G>> loc(#loc18)
    cir.store %arg1, %1 : !u64i, !cir.ptr<!u64i> loc(#loc18)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_813A3ACWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G>>, !cir.ptr<!ty_CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_813A3ACWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G> loc(#loc15)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc65)
      cir.scope {
        %4 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc25)
        %5 = cir.const #cir.int<5> : !u64i loc(#loc67)
        %6 = cir.cmp(gt, %4, %5) : !u64i, !cir.bool loc(#loc68)
        %7 = cir.ternary(%6, true {
          %8 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc29)
          %9 = cir.const #cir.int<100> : !s32i loc(#loc30)
          %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc30)
          %11 = cir.cmp(lt, %8, %10) : !u64i, !cir.bool loc(#loc69)
          %12 = cir.ternary(%11, true {
            %13 = cir.const #true loc(#loc28)
            cir.yield %13 : !cir.bool loc(#loc28)
          }, false {
            %13 = cir.const #false loc(#loc28)
            cir.yield %13 : !cir.bool loc(#loc28)
          }) : (!cir.bool) -> !cir.bool loc(#loc28)
          cir.yield %12 : !cir.bool loc(#loc28)
        }, false {
          %8 = cir.const #false loc(#loc28)
          cir.yield %8 : !cir.bool loc(#loc28)
        }) : (!cir.bool) -> !cir.bool loc(#loc28)
        cir.if %7 {
          %8 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc34)
          %9 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc35)
          %10 = cir.const #cir.int<1> : !u64i loc(#loc71)
          %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc72)
          %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc34)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc73)
          cir.store %13, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc74)
          cir.scope {
            %23 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
            %24 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc43)
            %25 = cir.cmp(eq, %23, %24) : !cir.ptr<!s8i>, !cir.bool loc(#loc76)
            cir.if %25 {
              %26 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc45)
              %27 = cir.const #cir.int<1> : !s32i loc(#loc46)
              %28 = cir.unary(minus, %27) nsw : !s32i, !s32i loc(#loc47)
              cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc45)
            } loc(#loc77)
          } loc(#loc75)
          %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc48)
          %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
          %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc7)
          %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc7)
          %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc48)
          %19 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
          cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc51)
          %20 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc52)
          %21 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
          %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc53)
          cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc52)
        } else {
          %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc12)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc12)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc54)
        } loc(#loc70)
      } loc(#loc66)
    } loc(#loc64)
    cir.return loc(#loc14)
  } loc(#loc62)
  cir.global external dsolocal @_ZTVN50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_8158CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2GE = #cir.vtable<{#cir.const_array<[#cir.ptr<null> : !cir.ptr<!u8i>, #cir.global_view<@_ZTIN50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_8158CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2GE> : !cir.ptr<!u8i>, #cir.global_view<@_ZNK50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_8158CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G6actionEm> : !cir.ptr<!u8i>]> : !cir.array<!cir.ptr<!u8i> x 3>}> : !ty_anon_struct2 {alignment = 8 : i64} loc(#loc78)
  cir.global "private" external @_ZTVN10__cxxabiv120__si_class_type_infoE : !cir.ptr<!cir.ptr<!u8i>> loc(#loc55)
  cir.global external @_ZTSN50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_8158CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2GE = #cir.const_array<"N50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_8158CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2GE" : !cir.array<!s8i x 114>> : !cir.array<!s8i x 114> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" external @_ZTVN10__cxxabiv117__class_type_infoE : !cir.ptr<!cir.ptr<!u8i>> loc(#loc55)
  cir.global linkonce_odr comdat @_ZTSN50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_8155CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_baseE = #cir.const_array<"N50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_8155CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_baseE" : !cir.array<!s8i x 111>> : !cir.array<!s8i x 111> {alignment = 1 : i64} loc(#loc55)
  cir.global constant external @_ZTIN50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_8155CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_baseE = #cir.typeinfo<{#cir.global_view<@_ZTVN10__cxxabiv117__class_type_infoE, [2 : i32]> : !cir.ptr<!u8i>, #cir.global_view<@_ZTSN50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_8155CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_baseE> : !cir.ptr<!u8i>}> : !ty_anon_struct {alignment = 8 : i64} loc(#loc55)
  cir.global constant external @_ZTIN50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_8158CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2GE = #cir.typeinfo<{#cir.global_view<@_ZTVN10__cxxabiv120__si_class_type_infoE, [2 : i32]> : !cir.ptr<!u8i>, #cir.global_view<@_ZTSN50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_8158CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2GE> : !cir.ptr<!u8i>, #cir.global_view<@_ZTIN50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_8155CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_baseE> : !cir.ptr<!u8i>}> : !ty_anon_struct1 {alignment = 8 : i64} loc(#loc55)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":39:30)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("/usr/include/stdlib.h":687:1)
#loc11 = loc("/usr/include/stdlib.h":687:32)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":45:23)
#loc13 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":27:1)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":48:1)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":28:1)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":29:5)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":47:5)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":30:9)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":30:16)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":34:9)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":46:9)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":34:13)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":34:20)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":34:39)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":34:41)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":34:44)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":34:51)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":35:9)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":42:9)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":44:9)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":36:32)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":36:39)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":36:44)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":36:55)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":36:56)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":36:13)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":37:13)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":37:45)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":37:17)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":37:29)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":37:35)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":37:36)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":37:42)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":37:41)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":39:13)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":39:20)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":40:23)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":40:13)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":41:13)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":41:18)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81_goodB2G.cpp":45:13)
#loc55 = loc("./CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81.h":52:1)
#loc56 = loc("./CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_81.h":56:1)
#loc57 = loc(fused[#loc1, #loc2])
#loc58 = loc(fused[#loc3, #loc4])
#loc59 = loc(fused[#loc5, #loc6])
#loc60 = loc(fused[#loc8, #loc9])
#loc61 = loc(fused[#loc10, #loc11])
#loc62 = loc(fused[#loc13, #loc14])
#loc64 = loc(fused[#loc19, #loc20])
#loc65 = loc(fused[#loc21, #loc22])
#loc66 = loc(fused[#loc23, #loc24])
#loc67 = loc(fused[#loc26, #loc27])
#loc68 = loc(fused[#loc25, #loc27])
#loc69 = loc(fused[#loc29, #loc30])
#loc70 = loc(fused[#loc31, #loc32, #loc33, #loc24])
#loc71 = loc(fused[#loc36, #loc37])
#loc72 = loc(fused[#loc35, #loc37])
#loc73 = loc(fused[#loc34, #loc38])
#loc74 = loc(fused[#loc39, #loc38])
#loc75 = loc(fused[#loc40, #loc41])
#loc76 = loc(fused[#loc42, #loc43])
#loc77 = loc(fused[#loc44, #loc41])
#loc78 = loc(fused[#loc55, #loc56])
