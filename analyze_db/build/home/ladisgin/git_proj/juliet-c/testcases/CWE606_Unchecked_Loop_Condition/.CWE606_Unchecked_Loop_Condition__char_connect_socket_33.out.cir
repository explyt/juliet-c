!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc414 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":290:10)
#loc415 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":290:14)
#loc416 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":290:20)
#loc417 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":290:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc603 = loc(fused[#loc414, #loc415])
#loc604 = loc(fused[#loc416, #loc417])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc430)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc431)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc432)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc433)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc434)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc435)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc436)
  cir.func private @close(!s32i) -> !s32i loc(#loc437)
  cir.func private @__isoc23_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc438)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc20)
  cir.func private @printIntLine(!s32i) loc(#loc439)
  cir.func @_ZN55CWE606_Unchecked_Loop_Condition__char_connect_socket_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc441)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc442)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc443)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc28)
    %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc443)
    cir.store %3, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc443)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc31)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc444)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc446)
      %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc447)
      %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc448)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc449)
      %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc450)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc42)
      %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc42)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc449)
      %12 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc45)
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
      %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc45)
      cir.store %14, %9 : !u64i, !cir.ptr<!u64i> loc(#loc450)
      cir.scope {
        cir.do {
          %15 = cir.const #cir.int<2> : !s32i loc(#loc49)
          %16 = cir.const #cir.int<1> : !u32i loc(#loc50)
          %17 = cir.cast(integral, %16 : !u32i), !s32i loc(#loc50)
          %18 = cir.const #cir.int<6> : !u32i loc(#loc51)
          %19 = cir.cast(integral, %18 : !u32i), !s32i loc(#loc51)
          %20 = cir.call @socket(%15, %17, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc52)
          cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc452)
          cir.scope {
            %70 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc57)
            %71 = cir.const #cir.int<1> : !s32i loc(#loc58)
            %72 = cir.unary(minus, %71) : !s32i, !s32i loc(#loc58)
            %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc454)
            cir.if %73 {
              cir.break loc(#loc60)
            } loc(#loc455)
          } loc(#loc453)
          %21 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc456)
          %22 = cir.const #cir.int<0> : !s32i loc(#loc63)
          %23 = cir.const #cir.int<16> : !u64i loc(#loc457)
          cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc458)
          %24 = cir.const #cir.int<2> : !s32i loc(#loc68)
          %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc68)
          %26 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
          cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc459)
          %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
          %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
          %29 = cir.call @inet_addr(%28) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc71)
          %30 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc72)
          %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc73)
          cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc460)
          %32 = cir.const #cir.int<27015> : !s32i loc(#loc76)
          %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc76)
          %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc77)
          %35 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
          cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc461)
          cir.scope {
            %70 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc83)
            %71 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc463)
            %72 = cir.const #cir.int<16> : !u64i loc(#loc464)
            %73 = cir.cast(integral, %72 : !u64i), !u32i loc(#loc464)
            %74 = cir.call @connect(%70, %71, %73) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc88)
            %75 = cir.const #cir.int<1> : !s32i loc(#loc89)
            %76 = cir.unary(minus, %75) : !s32i, !s32i loc(#loc89)
            %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc465)
            cir.if %77 {
              cir.break loc(#loc91)
            } loc(#loc466)
          } loc(#loc462)
          %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc92)
          %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
          %38 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc94)
          %39 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc95)
          %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc467)
          %41 = cir.const #cir.int<1> : !u64i loc(#loc468)
          %42 = cir.const #cir.int<100> : !s32i loc(#loc100)
          %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc100)
          %44 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc101)
          %45 = cir.binop(sub, %43, %44) : !u64i loc(#loc469)
          %46 = cir.const #cir.int<1> : !s32i loc(#loc102)
          %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc102)
          %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc470)
          %49 = cir.binop(mul, %41, %48) : !u64i loc(#loc471)
          %50 = cir.const #cir.int<0> : !s32i loc(#loc104)
          %51 = cir.call @recv(%36, %40, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc105)
          %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc105)
          cir.store %52, %5 : !s32i, !cir.ptr<!s32i> loc(#loc472)
          cir.scope {
            %70 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc110)
            %71 = cir.const #cir.int<1> : !s32i loc(#loc111)
            %72 = cir.unary(minus, %71) : !s32i, !s32i loc(#loc111)
            %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc474)
            %74 = cir.ternary(%73, true {
              %75 = cir.const #true loc(#loc112)
              cir.yield %75 : !cir.bool loc(#loc112)
            }, false {
              %75 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc113)
              %76 = cir.const #cir.int<0> : !s32i loc(#loc114)
              %77 = cir.cmp(eq, %75, %76) : !s32i, !cir.bool loc(#loc475)
              %78 = cir.ternary(%77, true {
                %79 = cir.const #true loc(#loc112)
                cir.yield %79 : !cir.bool loc(#loc112)
              }, false {
                %79 = cir.const #false loc(#loc112)
                cir.yield %79 : !cir.bool loc(#loc112)
              }) : (!cir.bool) -> !cir.bool loc(#loc112)
              cir.yield %78 : !cir.bool loc(#loc112)
            }) : (!cir.bool) -> !cir.bool loc(#loc112)
            cir.if %74 {
              cir.break loc(#loc116)
            } loc(#loc476)
          } loc(#loc473)
          %53 = cir.const #cir.int<0> : !s8i loc(#loc117)
          %54 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
          %55 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc119)
          %56 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc120)
          %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc120)
          %58 = cir.const #cir.int<1> : !u64i loc(#loc477)
          %59 = cir.binop(div, %57, %58) : !u64i loc(#loc478)
          %60 = cir.binop(add, %55, %59) : !u64i loc(#loc479)
          %61 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %60 : !u64i), !cir.ptr<!s8i> loc(#loc123)
          cir.store %53, %61 : !s8i, !cir.ptr<!s8i> loc(#loc480)
          %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
          %63 = cir.const #cir.int<13> : !s8i loc(#loc125)
          %64 = cir.cast(integral, %63 : !s8i), !s32i loc(#loc125)
          %65 = cir.call @strchr(%62, %64) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc126)
          cir.store %65, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc481)
          cir.scope {
            %70 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
            %71 = cir.cast(ptr_to_bool, %70 : !cir.ptr<!s8i>), !cir.bool loc(#loc131)
            cir.if %71 {
              %72 = cir.const #cir.int<0> : !s8i loc(#loc133)
              %73 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
              cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc484)
            } loc(#loc483)
          } loc(#loc482)
          %66 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
          %67 = cir.const #cir.int<10> : !s8i loc(#loc137)
          %68 = cir.cast(integral, %67 : !s8i), !s32i loc(#loc137)
          %69 = cir.call @strchr(%66, %68) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc138)
          cir.store %69, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc485)
          cir.scope {
            %70 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
            %71 = cir.cast(ptr_to_bool, %70 : !cir.ptr<!s8i>), !cir.bool loc(#loc143)
            cir.if %71 {
              %72 = cir.const #cir.int<0> : !s8i loc(#loc145)
              %73 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
              cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc488)
            } loc(#loc487)
          } loc(#loc486)
          cir.yield loc(#loc48)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc148)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc148)
          cir.condition(%16) loc(#loc148)
        } loc(#loc451)
      } loc(#loc451)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc151)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc152)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc152)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc490)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc154)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc155)
        } loc(#loc491)
      } loc(#loc489)
    } loc(#loc445)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc493)
      %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc159)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc493)
      cir.scope {
        %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc495)
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc496)
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc497)
        cir.scope {
          %11 = cir.get_global @__isoc23_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc168)
          %12 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
          %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc20)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc20)
          %15 = cir.call @__isoc23_sscanf(%12, %14, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc168)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc170)
          %17 = cir.cmp(eq, %15, %16) : !s32i, !cir.bool loc(#loc499)
          cir.if %17 {
            %18 = cir.const #cir.int<0> : !s32i loc(#loc172)
            cir.store %18, %10 : !s32i, !cir.ptr<!s32i> loc(#loc501)
            cir.scope {
              %20 = cir.const #cir.int<0> : !s32i loc(#loc176)
              cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc503)
              cir.for : cond {
                %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc178)
                %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc179)
                %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc504)
                cir.condition(%23) loc(#loc504)
              } body {
                %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc180)
                %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc181)
                cir.store %22, %10 : !s32i, !cir.ptr<!s32i> loc(#loc505)
                cir.yield loc(#loc175)
              } step {
                %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc182)
                %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc183)
                cir.store %22, %8 : !s32i, !cir.ptr<!s32i> loc(#loc506)
                cir.yield loc(#loc502)
              } loc(#loc502)
            } loc(#loc502)
            %19 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc184)
            cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc185)
          } loc(#loc500)
        } loc(#loc498)
      } loc(#loc494)
    } loc(#loc492)
    cir.return loc(#loc24)
  } loc(#loc440)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc507)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc188)
  cir.func internal private @_ZN55CWE606_Unchecked_Loop_Condition__char_connect_socket_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc509)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc510)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc511)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc194)
    %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc511)
    cir.store %3, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc511)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc197)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc512)
    %5 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc199)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc200)
    %7 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc188)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc188)
    %9 = cir.call @strcpy(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc199)
    cir.scope {
      %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc514)
      %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc204)
      %12 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc204)
      cir.store %12, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc514)
      cir.scope {
        %13 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc516)
        %14 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc517)
        %15 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc518)
        cir.scope {
          %16 = cir.get_global @__isoc23_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc213)
          %17 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc214)
          %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc215)
          %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc215)
          %20 = cir.call @__isoc23_sscanf(%17, %19, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc213)
          %21 = cir.const #cir.int<1> : !s32i loc(#loc216)
          %22 = cir.cmp(eq, %20, %21) : !s32i, !cir.bool loc(#loc520)
          cir.if %22 {
            %23 = cir.const #cir.int<0> : !s32i loc(#loc218)
            cir.store %23, %15 : !s32i, !cir.ptr<!s32i> loc(#loc522)
            cir.scope {
              %25 = cir.const #cir.int<0> : !s32i loc(#loc222)
              cir.store %25, %13 : !s32i, !cir.ptr<!s32i> loc(#loc524)
              cir.for : cond {
                %26 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc224)
                %27 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc225)
                %28 = cir.cmp(lt, %26, %27) : !s32i, !cir.bool loc(#loc525)
                cir.condition(%28) loc(#loc525)
              } body {
                %26 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc226)
                %27 = cir.unary(inc, %26) : !s32i, !s32i loc(#loc227)
                cir.store %27, %15 : !s32i, !cir.ptr<!s32i> loc(#loc526)
                cir.yield loc(#loc221)
              } step {
                %26 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc228)
                %27 = cir.unary(inc, %26) : !s32i, !s32i loc(#loc229)
                cir.store %27, %13 : !s32i, !cir.ptr<!s32i> loc(#loc527)
                cir.yield loc(#loc523)
              } loc(#loc523)
            } loc(#loc523)
            %24 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc230)
            cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc231)
          } loc(#loc521)
        } loc(#loc519)
      } loc(#loc515)
    } loc(#loc513)
    cir.return loc(#loc190)
  } loc(#loc508)
  cir.func internal private @_ZN55CWE606_Unchecked_Loop_Condition__char_connect_socket_33L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc529)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc530)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc531)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc237)
    %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc531)
    cir.store %3, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc531)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc240)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc532)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc534)
      %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc535)
      %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc536)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc537)
      %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc538)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc251)
      %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc251)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc537)
      %12 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc254)
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc255)
      %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc254)
      cir.store %14, %9 : !u64i, !cir.ptr<!u64i> loc(#loc538)
      cir.scope {
        cir.do {
          %15 = cir.const #cir.int<2> : !s32i loc(#loc258)
          %16 = cir.const #cir.int<1> : !u32i loc(#loc259)
          %17 = cir.cast(integral, %16 : !u32i), !s32i loc(#loc259)
          %18 = cir.const #cir.int<6> : !u32i loc(#loc260)
          %19 = cir.cast(integral, %18 : !u32i), !s32i loc(#loc260)
          %20 = cir.call @socket(%15, %17, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc261)
          cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc540)
          cir.scope {
            %70 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc266)
            %71 = cir.const #cir.int<1> : !s32i loc(#loc267)
            %72 = cir.unary(minus, %71) : !s32i, !s32i loc(#loc267)
            %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc542)
            cir.if %73 {
              cir.break loc(#loc269)
            } loc(#loc543)
          } loc(#loc541)
          %21 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc544)
          %22 = cir.const #cir.int<0> : !s32i loc(#loc272)
          %23 = cir.const #cir.int<16> : !u64i loc(#loc545)
          cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc546)
          %24 = cir.const #cir.int<2> : !s32i loc(#loc277)
          %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc277)
          %26 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
          cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc547)
          %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc279)
          %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc279)
          %29 = cir.call @inet_addr(%28) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc280)
          %30 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc72)
          %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc73)
          cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc548)
          %32 = cir.const #cir.int<27015> : !s32i loc(#loc283)
          %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc283)
          %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc284)
          %35 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
          cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc549)
          cir.scope {
            %70 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc289)
            %71 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc551)
            %72 = cir.const #cir.int<16> : !u64i loc(#loc552)
            %73 = cir.cast(integral, %72 : !u64i), !u32i loc(#loc552)
            %74 = cir.call @connect(%70, %71, %73) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc294)
            %75 = cir.const #cir.int<1> : !s32i loc(#loc295)
            %76 = cir.unary(minus, %75) : !s32i, !s32i loc(#loc295)
            %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc553)
            cir.if %77 {
              cir.break loc(#loc297)
            } loc(#loc554)
          } loc(#loc550)
          %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc298)
          %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc299)
          %38 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc300)
          %39 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc301)
          %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc555)
          %41 = cir.const #cir.int<1> : !u64i loc(#loc556)
          %42 = cir.const #cir.int<100> : !s32i loc(#loc306)
          %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc306)
          %44 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc307)
          %45 = cir.binop(sub, %43, %44) : !u64i loc(#loc557)
          %46 = cir.const #cir.int<1> : !s32i loc(#loc308)
          %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc308)
          %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc558)
          %49 = cir.binop(mul, %41, %48) : !u64i loc(#loc559)
          %50 = cir.const #cir.int<0> : !s32i loc(#loc310)
          %51 = cir.call @recv(%36, %40, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc311)
          %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc311)
          cir.store %52, %5 : !s32i, !cir.ptr<!s32i> loc(#loc560)
          cir.scope {
            %70 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc316)
            %71 = cir.const #cir.int<1> : !s32i loc(#loc317)
            %72 = cir.unary(minus, %71) : !s32i, !s32i loc(#loc317)
            %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc562)
            %74 = cir.ternary(%73, true {
              %75 = cir.const #true loc(#loc318)
              cir.yield %75 : !cir.bool loc(#loc318)
            }, false {
              %75 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc319)
              %76 = cir.const #cir.int<0> : !s32i loc(#loc320)
              %77 = cir.cmp(eq, %75, %76) : !s32i, !cir.bool loc(#loc563)
              %78 = cir.ternary(%77, true {
                %79 = cir.const #true loc(#loc318)
                cir.yield %79 : !cir.bool loc(#loc318)
              }, false {
                %79 = cir.const #false loc(#loc318)
                cir.yield %79 : !cir.bool loc(#loc318)
              }) : (!cir.bool) -> !cir.bool loc(#loc318)
              cir.yield %78 : !cir.bool loc(#loc318)
            }) : (!cir.bool) -> !cir.bool loc(#loc318)
            cir.if %74 {
              cir.break loc(#loc322)
            } loc(#loc564)
          } loc(#loc561)
          %53 = cir.const #cir.int<0> : !s8i loc(#loc323)
          %54 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc324)
          %55 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc325)
          %56 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc326)
          %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc326)
          %58 = cir.const #cir.int<1> : !u64i loc(#loc565)
          %59 = cir.binop(div, %57, %58) : !u64i loc(#loc566)
          %60 = cir.binop(add, %55, %59) : !u64i loc(#loc567)
          %61 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %60 : !u64i), !cir.ptr<!s8i> loc(#loc329)
          cir.store %53, %61 : !s8i, !cir.ptr<!s8i> loc(#loc568)
          %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc330)
          %63 = cir.const #cir.int<13> : !s8i loc(#loc331)
          %64 = cir.cast(integral, %63 : !s8i), !s32i loc(#loc331)
          %65 = cir.call @strchr(%62, %64) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc332)
          cir.store %65, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc569)
          cir.scope {
            %70 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc337)
            %71 = cir.cast(ptr_to_bool, %70 : !cir.ptr<!s8i>), !cir.bool loc(#loc337)
            cir.if %71 {
              %72 = cir.const #cir.int<0> : !s8i loc(#loc339)
              %73 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc340)
              cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc572)
            } loc(#loc571)
          } loc(#loc570)
          %66 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc342)
          %67 = cir.const #cir.int<10> : !s8i loc(#loc343)
          %68 = cir.cast(integral, %67 : !s8i), !s32i loc(#loc343)
          %69 = cir.call @strchr(%66, %68) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc344)
          cir.store %69, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc573)
          cir.scope {
            %70 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc349)
            %71 = cir.cast(ptr_to_bool, %70 : !cir.ptr<!s8i>), !cir.bool loc(#loc349)
            cir.if %71 {
              %72 = cir.const #cir.int<0> : !s8i loc(#loc351)
              %73 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc352)
              cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc576)
            } loc(#loc575)
          } loc(#loc574)
          cir.yield loc(#loc257)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc354)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc354)
          cir.condition(%16) loc(#loc354)
        } loc(#loc539)
      } loc(#loc539)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc357)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc358)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc358)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc578)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc360)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc361)
        } loc(#loc579)
      } loc(#loc577)
    } loc(#loc533)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc581)
      %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc365)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc365)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc581)
      cir.scope {
        %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc583)
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc584)
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc585)
        cir.scope {
          %11 = cir.get_global @__isoc23_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc374)
          %12 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc375)
          %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc376)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc376)
          %15 = cir.call @__isoc23_sscanf(%12, %14, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc374)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc377)
          %17 = cir.cmp(eq, %15, %16) : !s32i, !cir.bool loc(#loc587)
          cir.if %17 {
            cir.scope {
              %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc381)
              %19 = cir.const #cir.int<10000> : !s32i loc(#loc382)
              %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc590)
              cir.if %20 {
                %21 = cir.const #cir.int<0> : !s32i loc(#loc384)
                cir.store %21, %10 : !s32i, !cir.ptr<!s32i> loc(#loc592)
                cir.scope {
                  %23 = cir.const #cir.int<0> : !s32i loc(#loc388)
                  cir.store %23, %8 : !s32i, !cir.ptr<!s32i> loc(#loc594)
                  cir.for : cond {
                    %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc390)
                    %25 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc391)
                    %26 = cir.cmp(lt, %24, %25) : !s32i, !cir.bool loc(#loc595)
                    cir.condition(%26) loc(#loc595)
                  } body {
                    %24 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc392)
                    %25 = cir.unary(inc, %24) : !s32i, !s32i loc(#loc393)
                    cir.store %25, %10 : !s32i, !cir.ptr<!s32i> loc(#loc596)
                    cir.yield loc(#loc387)
                  } step {
                    %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc394)
                    %25 = cir.unary(inc, %24) : !s32i, !s32i loc(#loc395)
                    cir.store %25, %8 : !s32i, !cir.ptr<!s32i> loc(#loc597)
                    cir.yield loc(#loc593)
                  } loc(#loc593)
                } loc(#loc593)
                %22 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc396)
                cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc397)
              } loc(#loc591)
            } loc(#loc589)
          } loc(#loc588)
        } loc(#loc586)
      } loc(#loc582)
    } loc(#loc580)
    cir.return loc(#loc233)
  } loc(#loc528)
  cir.func @_ZN55CWE606_Unchecked_Loop_Condition__char_connect_socket_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN55CWE606_Unchecked_Loop_Condition__char_connect_socket_33L7goodG2BEv() : () -> () loc(#loc400)
    cir.call @_ZN55CWE606_Unchecked_Loop_Condition__char_connect_socket_33L7goodB2GEv() : () -> () loc(#loc401)
    cir.return loc(#loc399)
  } loc(#loc598)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc599)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc600)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc601)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc408)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc409)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc410)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc411)
  cir.func @main(%arg0: !s32i loc(fused[#loc414, #loc415]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc416, #loc417])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc603)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc604)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc413)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc418)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc418)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc419)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc420)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc420)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc421)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc408)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc408)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc422)
    cir.call @_ZN55CWE606_Unchecked_Loop_Condition__char_connect_socket_334goodEv() : () -> () loc(#loc423)
    %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc409)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc409)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc424)
    %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc410)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc410)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc425)
    cir.call @_ZN55CWE606_Unchecked_Loop_Condition__char_connect_socket_333badEv() : () -> () loc(#loc426)
    %12 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc411)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc411)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc427)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc428)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc605)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc605)
    cir.return %15 : !s32i loc(#loc605)
  } loc(#loc602)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":85:49)
#loc8 = loc("/usr/include/netinet/in.h":404:1)
#loc9 = loc("/usr/include/netinet/in.h":405:40)
#loc10 = loc("/usr/include/sys/socket.h":126:1)
#loc11 = loc("/usr/include/sys/socket.h":126:75)
#loc12 = loc("/usr/include/sys/socket.h":145:1)
#loc13 = loc("/usr/include/sys/socket.h":145:68)
#loc14 = loc("/usr/include/string.h":226:1)
#loc15 = loc("/usr/include/string.h":227:50)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("/usr/include/stdio.h":447:1)
#loc19 = loc("/usr/include/stdio.h":447:12)
#loc20 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":129:30)
#loc21 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc23 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":52:1)
#loc24 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":142:1)
#loc25 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":54:5)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":54:12)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":55:5)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":55:23)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":56:5)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":56:28)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":57:12)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":57:5)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":58:5)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":124:5)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":63:9)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":63:13)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":64:9)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":64:28)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":65:9)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":65:15)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":66:9)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":66:32)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":67:9)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":67:37)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":67:26)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":67:33)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":68:9)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":113:17)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":78:36)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":78:45)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":78:58)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":78:29)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":78:13)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":78:69)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":79:13)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":82:13)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":79:17)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":79:34)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":80:13)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":81:17)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":83:20)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":83:21)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":83:30)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":83:33)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":83:47)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":83:13)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":83:48)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":84:34)
#loc69 = loc("/usr/include/netinet/in.h":249:5)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":84:13)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":85:39)
#loc72 = loc("/usr/include/netinet/in.h":251:20)
#loc73 = loc("/usr/include/netinet/in.h":33:15)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":85:13)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":85:59)
#loc76 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":86:38)
#loc77 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":86:32)
#loc78 = loc("/usr/include/netinet/in.h":250:15)
#loc79 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":86:13)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":86:46)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":87:13)
#loc82 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":90:13)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":87:25)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":87:58)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":87:59)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":87:68)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":87:82)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":87:17)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":87:88)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":88:13)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":89:17)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":94:31)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":94:55)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":94:62)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":94:60)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":94:46)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":94:69)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":94:72)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":94:83)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":94:88)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":94:94)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":94:104)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":94:105)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":94:108)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":94:26)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":94:13)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":94:109)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":95:13)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":98:13)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":95:17)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":95:31)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":95:44)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":95:47)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":95:61)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":96:13)
#loc116 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":97:17)
#loc117 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":100:57)
#loc118 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":100:13)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":100:18)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":100:28)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":100:41)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":100:52)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":100:53)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":102:30)
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":102:36)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":102:23)
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":102:13)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":102:40)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":103:13)
#loc130 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":106:13)
#loc131 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":103:17)
#loc132 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":104:13)
#loc133 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":105:28)
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":105:18)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":105:17)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":107:30)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":107:36)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":107:23)
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":107:13)
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":107:40)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":108:13)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":111:13)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":108:17)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":109:13)
#loc145 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":110:28)
#loc146 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":110:18)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":110:17)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":113:16)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":114:9)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":117:9)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":114:13)
#loc152 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":114:30)
#loc153 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":115:9)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":116:26)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":116:13)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":125:5)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":141:5)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":126:9)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":126:23)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":127:9)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":140:9)
#loc162 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":128:13)
#loc163 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":128:17)
#loc164 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":128:20)
#loc165 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":128:23)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":129:13)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":139:13)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":129:17)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":129:24)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":129:43)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":130:13)
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":132:31)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":132:17)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":133:17)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":137:17)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":133:26)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":133:22)
#loc178 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":133:29)
#loc179 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":133:33)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":136:32)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":136:21)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":133:37)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":133:36)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":138:30)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":138:17)
#loc186 = loc("/usr/include/string.h":141:1)
#loc187 = loc("/usr/include/string.h":142:14)
#loc188 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":156:18)
#loc189 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":149:1)
#loc190 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":174:1)
#loc191 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":151:5)
#loc192 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":151:12)
#loc193 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":152:5)
#loc194 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":152:23)
#loc195 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":153:5)
#loc196 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":153:28)
#loc197 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":154:12)
#loc198 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":154:5)
#loc199 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":156:5)
#loc200 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":156:12)
#loc201 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":157:5)
#loc202 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":173:5)
#loc203 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":158:9)
#loc204 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":158:23)
#loc205 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":159:9)
#loc206 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":172:9)
#loc207 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":160:13)
#loc208 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":160:17)
#loc209 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":160:20)
#loc210 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":160:23)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":161:13)
#loc212 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":171:13)
#loc213 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":161:17)
#loc214 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":161:24)
#loc215 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":161:30)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":161:43)
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":162:13)
#loc218 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":164:31)
#loc219 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":164:17)
#loc220 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":165:17)
#loc221 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":169:17)
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":165:26)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":165:22)
#loc224 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":165:29)
#loc225 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":165:33)
#loc226 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":168:32)
#loc227 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":168:21)
#loc228 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":165:37)
#loc229 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":165:36)
#loc230 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":170:30)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":170:17)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":177:1)
#loc233 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":270:1)
#loc234 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":179:5)
#loc235 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":179:12)
#loc236 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":180:5)
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":180:23)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":181:5)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":181:28)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":182:12)
#loc241 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":182:5)
#loc242 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":183:5)
#loc243 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":249:5)
#loc244 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":188:9)
#loc245 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":188:13)
#loc246 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":189:9)
#loc247 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":189:28)
#loc248 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":190:9)
#loc249 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":190:15)
#loc250 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":191:9)
#loc251 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":191:32)
#loc252 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":192:9)
#loc253 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":192:37)
#loc254 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":192:26)
#loc255 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":192:33)
#loc256 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":193:9)
#loc257 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":238:17)
#loc258 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":203:36)
#loc259 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":203:45)
#loc260 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":203:58)
#loc261 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":203:29)
#loc262 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":203:13)
#loc263 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":203:69)
#loc264 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":204:13)
#loc265 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":207:13)
#loc266 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":204:17)
#loc267 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":204:34)
#loc268 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":205:13)
#loc269 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":206:17)
#loc270 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":208:20)
#loc271 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":208:21)
#loc272 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":208:30)
#loc273 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":208:33)
#loc274 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":208:47)
#loc275 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":208:13)
#loc276 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":208:48)
#loc277 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":209:34)
#loc278 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":209:13)
#loc279 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":210:49)
#loc280 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":210:39)
#loc281 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":210:13)
#loc282 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":210:59)
#loc283 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":211:38)
#loc284 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":211:32)
#loc285 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":211:13)
#loc286 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":211:46)
#loc287 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":212:13)
#loc288 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":215:13)
#loc289 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":212:25)
#loc290 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":212:58)
#loc291 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":212:59)
#loc292 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":212:68)
#loc293 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":212:82)
#loc294 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":212:17)
#loc295 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":212:88)
#loc296 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":213:13)
#loc297 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":214:17)
#loc298 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":219:31)
#loc299 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":219:55)
#loc300 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":219:62)
#loc301 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":219:60)
#loc302 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":219:46)
#loc303 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":219:69)
#loc304 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":219:72)
#loc305 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":219:83)
#loc306 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":219:88)
#loc307 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":219:94)
#loc308 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":219:104)
#loc309 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":219:105)
#loc310 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":219:108)
#loc311 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":219:26)
#loc312 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":219:13)
#loc313 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":219:109)
#loc314 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":220:13)
#loc315 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":223:13)
#loc316 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":220:17)
#loc317 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":220:31)
#loc318 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":220:44)
#loc319 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":220:47)
#loc320 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":220:61)
#loc321 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":221:13)
#loc322 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":222:17)
#loc323 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":225:57)
#loc324 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":225:13)
#loc325 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":225:18)
#loc326 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":225:28)
#loc327 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":225:41)
#loc328 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":225:52)
#loc329 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":225:53)
#loc330 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":227:30)
#loc331 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":227:36)
#loc332 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":227:23)
#loc333 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":227:13)
#loc334 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":227:40)
#loc335 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":228:13)
#loc336 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":231:13)
#loc337 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":228:17)
#loc338 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":229:13)
#loc339 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":230:28)
#loc340 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":230:18)
#loc341 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":230:17)
#loc342 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":232:30)
#loc343 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":232:36)
#loc344 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":232:23)
#loc345 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":232:13)
#loc346 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":232:40)
#loc347 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":233:13)
#loc348 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":236:13)
#loc349 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":233:17)
#loc350 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":234:13)
#loc351 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":235:28)
#loc352 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":235:18)
#loc353 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":235:17)
#loc354 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":238:16)
#loc355 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":239:9)
#loc356 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":242:9)
#loc357 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":239:13)
#loc358 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":239:30)
#loc359 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":240:9)
#loc360 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":241:26)
#loc361 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":241:13)
#loc362 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":250:5)
#loc363 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":269:5)
#loc364 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":251:9)
#loc365 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":251:23)
#loc366 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":252:9)
#loc367 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":268:9)
#loc368 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":253:13)
#loc369 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":253:17)
#loc370 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":253:20)
#loc371 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":253:23)
#loc372 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":254:13)
#loc373 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":267:13)
#loc374 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":254:17)
#loc375 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":254:24)
#loc376 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":254:30)
#loc377 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":254:43)
#loc378 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":255:13)
#loc379 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":257:17)
#loc380 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":266:17)
#loc381 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":257:21)
#loc382 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":257:25)
#loc383 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":258:17)
#loc384 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":259:35)
#loc385 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":259:21)
#loc386 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":260:21)
#loc387 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":264:21)
#loc388 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":260:30)
#loc389 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":260:26)
#loc390 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":260:33)
#loc391 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":260:37)
#loc392 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":263:36)
#loc393 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":263:25)
#loc394 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":260:41)
#loc395 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":260:40)
#loc396 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":265:34)
#loc397 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":265:21)
#loc398 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":272:1)
#loc399 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":276:1)
#loc400 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":274:5)
#loc401 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":275:5)
#loc402 = loc("/usr/include/stdlib.h":575:1)
#loc403 = loc("/usr/include/stdlib.h":575:41)
#loc404 = loc("/usr/include/time.h":76:1)
#loc405 = loc("/usr/include/time.h":76:38)
#loc406 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc407 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc408 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":295:15)
#loc409 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":297:15)
#loc410 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":300:15)
#loc411 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":302:15)
#loc412 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":290:1)
#loc413 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":305:1)
#loc418 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":291:1)
#loc419 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":293:27)
#loc420 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":293:22)
#loc421 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":293:5)
#loc422 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":295:5)
#loc423 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":296:5)
#loc424 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":297:5)
#loc425 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":300:5)
#loc426 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":301:5)
#loc427 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":302:5)
#loc428 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":304:12)
#loc429 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_33.cpp":304:5)
#loc430 = loc(fused[#loc1, #loc2])
#loc431 = loc(fused[#loc3, #loc4])
#loc432 = loc(fused[#loc5, #loc6])
#loc433 = loc(fused[#loc8, #loc9])
#loc434 = loc(fused[#loc10, #loc11])
#loc435 = loc(fused[#loc12, #loc13])
#loc436 = loc(fused[#loc14, #loc15])
#loc437 = loc(fused[#loc16, #loc17])
#loc438 = loc(fused[#loc18, #loc19])
#loc439 = loc(fused[#loc21, #loc22])
#loc440 = loc(fused[#loc23, #loc24])
#loc441 = loc(fused[#loc25, #loc26])
#loc442 = loc(fused[#loc27, #loc28])
#loc443 = loc(fused[#loc29, #loc30])
#loc444 = loc(fused[#loc32, #loc31])
#loc445 = loc(fused[#loc33, #loc34])
#loc446 = loc(fused[#loc35, #loc36])
#loc447 = loc(fused[#loc37, #loc38])
#loc448 = loc(fused[#loc39, #loc40])
#loc449 = loc(fused[#loc41, #loc42])
#loc450 = loc(fused[#loc43, #loc44])
#loc451 = loc(fused[#loc47, #loc48])
#loc452 = loc(fused[#loc53, #loc54])
#loc453 = loc(fused[#loc55, #loc56])
#loc454 = loc(fused[#loc57, #loc58])
#loc455 = loc(fused[#loc59, #loc56])
#loc456 = loc(fused[#loc61, #loc62])
#loc457 = loc(fused[#loc64, #loc65])
#loc458 = loc(fused[#loc66, #loc67])
#loc459 = loc(fused[#loc70, #loc68])
#loc460 = loc(fused[#loc74, #loc75])
#loc461 = loc(fused[#loc79, #loc80])
#loc462 = loc(fused[#loc81, #loc82])
#loc463 = loc(fused[#loc84, #loc85])
#loc464 = loc(fused[#loc86, #loc87])
#loc465 = loc(fused[#loc88, #loc89])
#loc466 = loc(fused[#loc90, #loc82])
#loc467 = loc(fused[#loc96, #loc97])
#loc468 = loc(fused[#loc98, #loc99])
#loc469 = loc(fused[#loc100, #loc101])
#loc470 = loc(fused[#loc100, #loc102])
#loc471 = loc(fused[#loc98, #loc103])
#loc472 = loc(fused[#loc106, #loc107])
#loc473 = loc(fused[#loc108, #loc109])
#loc474 = loc(fused[#loc110, #loc111])
#loc475 = loc(fused[#loc113, #loc114])
#loc476 = loc(fused[#loc115, #loc109])
#loc477 = loc(fused[#loc121, #loc122])
#loc478 = loc(fused[#loc120, #loc122])
#loc479 = loc(fused[#loc119, #loc122])
#loc480 = loc(fused[#loc118, #loc117])
#loc481 = loc(fused[#loc127, #loc128])
#loc482 = loc(fused[#loc129, #loc130])
#loc483 = loc(fused[#loc132, #loc130])
#loc484 = loc(fused[#loc135, #loc133])
#loc485 = loc(fused[#loc139, #loc140])
#loc486 = loc(fused[#loc141, #loc142])
#loc487 = loc(fused[#loc144, #loc142])
#loc488 = loc(fused[#loc147, #loc145])
#loc489 = loc(fused[#loc149, #loc150])
#loc490 = loc(fused[#loc151, #loc152])
#loc491 = loc(fused[#loc153, #loc150])
#loc492 = loc(fused[#loc156, #loc157])
#loc493 = loc(fused[#loc158, #loc159])
#loc494 = loc(fused[#loc160, #loc161])
#loc495 = loc(fused[#loc162, #loc163])
#loc496 = loc(fused[#loc162, #loc164])
#loc497 = loc(fused[#loc162, #loc165])
#loc498 = loc(fused[#loc166, #loc167])
#loc499 = loc(fused[#loc168, #loc170])
#loc500 = loc(fused[#loc171, #loc167])
#loc501 = loc(fused[#loc173, #loc172])
#loc502 = loc(fused[#loc174, #loc175])
#loc503 = loc(fused[#loc177, #loc176])
#loc504 = loc(fused[#loc178, #loc179])
#loc505 = loc(fused[#loc181, #loc180])
#loc506 = loc(fused[#loc183, #loc182])
#loc507 = loc(fused[#loc186, #loc187])
#loc508 = loc(fused[#loc189, #loc190])
#loc509 = loc(fused[#loc191, #loc192])
#loc510 = loc(fused[#loc193, #loc194])
#loc511 = loc(fused[#loc195, #loc196])
#loc512 = loc(fused[#loc198, #loc197])
#loc513 = loc(fused[#loc201, #loc202])
#loc514 = loc(fused[#loc203, #loc204])
#loc515 = loc(fused[#loc205, #loc206])
#loc516 = loc(fused[#loc207, #loc208])
#loc517 = loc(fused[#loc207, #loc209])
#loc518 = loc(fused[#loc207, #loc210])
#loc519 = loc(fused[#loc211, #loc212])
#loc520 = loc(fused[#loc213, #loc216])
#loc521 = loc(fused[#loc217, #loc212])
#loc522 = loc(fused[#loc219, #loc218])
#loc523 = loc(fused[#loc220, #loc221])
#loc524 = loc(fused[#loc223, #loc222])
#loc525 = loc(fused[#loc224, #loc225])
#loc526 = loc(fused[#loc227, #loc226])
#loc527 = loc(fused[#loc229, #loc228])
#loc528 = loc(fused[#loc232, #loc233])
#loc529 = loc(fused[#loc234, #loc235])
#loc530 = loc(fused[#loc236, #loc237])
#loc531 = loc(fused[#loc238, #loc239])
#loc532 = loc(fused[#loc241, #loc240])
#loc533 = loc(fused[#loc242, #loc243])
#loc534 = loc(fused[#loc244, #loc245])
#loc535 = loc(fused[#loc246, #loc247])
#loc536 = loc(fused[#loc248, #loc249])
#loc537 = loc(fused[#loc250, #loc251])
#loc538 = loc(fused[#loc252, #loc253])
#loc539 = loc(fused[#loc256, #loc257])
#loc540 = loc(fused[#loc262, #loc263])
#loc541 = loc(fused[#loc264, #loc265])
#loc542 = loc(fused[#loc266, #loc267])
#loc543 = loc(fused[#loc268, #loc265])
#loc544 = loc(fused[#loc270, #loc271])
#loc545 = loc(fused[#loc273, #loc274])
#loc546 = loc(fused[#loc275, #loc276])
#loc547 = loc(fused[#loc278, #loc277])
#loc548 = loc(fused[#loc281, #loc282])
#loc549 = loc(fused[#loc285, #loc286])
#loc550 = loc(fused[#loc287, #loc288])
#loc551 = loc(fused[#loc290, #loc291])
#loc552 = loc(fused[#loc292, #loc293])
#loc553 = loc(fused[#loc294, #loc295])
#loc554 = loc(fused[#loc296, #loc288])
#loc555 = loc(fused[#loc302, #loc303])
#loc556 = loc(fused[#loc304, #loc305])
#loc557 = loc(fused[#loc306, #loc307])
#loc558 = loc(fused[#loc306, #loc308])
#loc559 = loc(fused[#loc304, #loc309])
#loc560 = loc(fused[#loc312, #loc313])
#loc561 = loc(fused[#loc314, #loc315])
#loc562 = loc(fused[#loc316, #loc317])
#loc563 = loc(fused[#loc319, #loc320])
#loc564 = loc(fused[#loc321, #loc315])
#loc565 = loc(fused[#loc327, #loc328])
#loc566 = loc(fused[#loc326, #loc328])
#loc567 = loc(fused[#loc325, #loc328])
#loc568 = loc(fused[#loc324, #loc323])
#loc569 = loc(fused[#loc333, #loc334])
#loc570 = loc(fused[#loc335, #loc336])
#loc571 = loc(fused[#loc338, #loc336])
#loc572 = loc(fused[#loc341, #loc339])
#loc573 = loc(fused[#loc345, #loc346])
#loc574 = loc(fused[#loc347, #loc348])
#loc575 = loc(fused[#loc350, #loc348])
#loc576 = loc(fused[#loc353, #loc351])
#loc577 = loc(fused[#loc355, #loc356])
#loc578 = loc(fused[#loc357, #loc358])
#loc579 = loc(fused[#loc359, #loc356])
#loc580 = loc(fused[#loc362, #loc363])
#loc581 = loc(fused[#loc364, #loc365])
#loc582 = loc(fused[#loc366, #loc367])
#loc583 = loc(fused[#loc368, #loc369])
#loc584 = loc(fused[#loc368, #loc370])
#loc585 = loc(fused[#loc368, #loc371])
#loc586 = loc(fused[#loc372, #loc373])
#loc587 = loc(fused[#loc374, #loc377])
#loc588 = loc(fused[#loc378, #loc373])
#loc589 = loc(fused[#loc379, #loc380])
#loc590 = loc(fused[#loc381, #loc382])
#loc591 = loc(fused[#loc383, #loc380])
#loc592 = loc(fused[#loc385, #loc384])
#loc593 = loc(fused[#loc386, #loc387])
#loc594 = loc(fused[#loc389, #loc388])
#loc595 = loc(fused[#loc390, #loc391])
#loc596 = loc(fused[#loc393, #loc392])
#loc597 = loc(fused[#loc395, #loc394])
#loc598 = loc(fused[#loc398, #loc399])
#loc599 = loc(fused[#loc402, #loc403])
#loc600 = loc(fused[#loc404, #loc405])
#loc601 = loc(fused[#loc406, #loc407])
#loc602 = loc(fused[#loc412, #loc413])
#loc605 = loc(fused[#loc429, #loc428])
