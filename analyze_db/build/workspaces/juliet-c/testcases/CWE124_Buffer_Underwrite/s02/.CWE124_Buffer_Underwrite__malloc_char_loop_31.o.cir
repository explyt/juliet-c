!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__malloc_char_loop_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc173)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc174)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc175)
  cir.func no_proto @CWE124_Buffer_Underwrite__malloc_char_loop_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc177)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc178)
    cir.scope {
      %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc180)
      %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc17)
      %4 = cir.const #cir.int<100> : !s32i loc(#loc18)
      %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc18)
      %6 = cir.const #cir.int<1> : !u64i loc(#loc181)
      %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc182)
      %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc17)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc183)
      cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc180)
      cir.scope {
        %28 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
        %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc24)
        %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc24)
        %31 = cir.cmp(eq, %28, %30) : !cir.ptr<!s8i>, !cir.bool loc(#loc185)
        cir.if %31 {
          %32 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc26)
          %33 = cir.const #cir.int<1> : !s32i loc(#loc27)
          %34 = cir.unary(minus, %33) nsw : !s32i, !s32i loc(#loc28)
          cir.call @exit(%34) : (!s32i) -> () extra(#fn_attr) loc(#loc26)
        } loc(#loc186)
      } loc(#loc184)
      %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc29)
      %12 = cir.const #cir.int<65> : !s32i loc(#loc30)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc31)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc32)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc31)
      %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc31)
      cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc187)
      %17 = cir.const #cir.int<0> : !s32i loc(#loc35)
      %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc35)
      %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
      %20 = cir.const #cir.int<100> : !s32i loc(#loc37)
      %21 = cir.const #cir.int<1> : !s32i loc(#loc38)
      %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc37)
      %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc39)
      cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc188)
      %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
      %25 = cir.const #cir.int<8> : !s32i loc(#loc41)
      %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc41)
      %27 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc42)
      cir.store %27, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc189)
    } loc(#loc179)
    cir.scope {
      %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc191)
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc192)
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
      cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc191)
      %5 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
      cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc192)
      cir.scope {
        %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc194)
        %7 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc195)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc56)
        %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc56)
        %10 = cir.const #cir.int<67> : !s32i loc(#loc57)
        %11 = cir.const #cir.int<100> : !s32i loc(#loc58)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc59)
        %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc58)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc58)
        cir.libc.memset %14 bytes from %9 set to %10 : !cir.ptr<!void>, !s32i, !u64i loc(#loc196)
        %15 = cir.const #cir.int<0> : !s32i loc(#loc62)
        %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc62)
        %17 = cir.const #cir.int<100> : !s32i loc(#loc63)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc64)
        %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc63)
        %20 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc65)
        %21 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc65)
        cir.store %16, %21 : !s8i, !cir.ptr<!s8i> loc(#loc197)
        cir.scope {
          %30 = cir.const #cir.int<0> : !s32i loc(#loc68)
          %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc68)
          cir.store %31, %6 : !u64i, !cir.ptr<!u64i> loc(#loc199)
          cir.for : cond {
            %32 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc70)
            %33 = cir.const #cir.int<100> : !s32i loc(#loc71)
            %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc71)
            %35 = cir.cmp(lt, %32, %34) : !u64i, !cir.bool loc(#loc200)
            cir.condition(%35) loc(#loc72)
          } body {
            cir.scope {
              %32 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc74)
              %33 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc75)
              %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc75)
              %35 = cir.load %34 : !cir.ptr<!s8i>, !s8i loc(#loc75)
              %36 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
              %37 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc77)
              %38 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %37 : !u64i), !cir.ptr<!s8i> loc(#loc78)
              cir.store %35, %38 : !s8i, !cir.ptr<!s8i> loc(#loc202)
            } loc(#loc201)
            cir.yield loc(#loc67)
          } step {
            %32 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc80)
            %33 = cir.unary(inc, %32) : !u64i, !u64i loc(#loc81)
            cir.store %33, %6 : !u64i, !cir.ptr<!u64i> loc(#loc203)
            cir.yield loc(#loc198)
          } loc(#loc198)
        } loc(#loc198)
        %22 = cir.const #cir.int<0> : !s32i loc(#loc82)
        %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc82)
        %24 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
        %25 = cir.const #cir.int<100> : !s32i loc(#loc84)
        %26 = cir.const #cir.int<1> : !s32i loc(#loc85)
        %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc84)
        %28 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc86)
        cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc204)
        %29 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
        cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc88)
      } loc(#loc193)
    } loc(#loc190)
    cir.return loc(#loc8)
  } loc(#loc176)
  cir.func no_proto @CWE124_Buffer_Underwrite__malloc_char_loop_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc206)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc91)
    cir.return loc(#loc90)
  } loc(#loc205)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc208)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc97)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc209)
    cir.scope {
      %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc211)
      %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc103)
      %4 = cir.const #cir.int<100> : !s32i loc(#loc104)
      %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc104)
      %6 = cir.const #cir.int<1> : !u64i loc(#loc212)
      %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc213)
      %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc103)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc214)
      cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc211)
      cir.scope {
        %25 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
        %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc110)
        %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc110)
        %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc216)
        cir.if %28 {
          %29 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc112)
          %30 = cir.const #cir.int<1> : !s32i loc(#loc113)
          %31 = cir.unary(minus, %30) nsw : !s32i, !s32i loc(#loc114)
          cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc112)
        } loc(#loc217)
      } loc(#loc215)
      %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc115)
      %12 = cir.const #cir.int<65> : !s32i loc(#loc116)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc117)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc118)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc117)
      %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc117)
      cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc218)
      %17 = cir.const #cir.int<0> : !s32i loc(#loc121)
      %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc121)
      %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
      %20 = cir.const #cir.int<100> : !s32i loc(#loc123)
      %21 = cir.const #cir.int<1> : !s32i loc(#loc124)
      %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc123)
      %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc125)
      cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc219)
      %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
      cir.store %24, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc220)
    } loc(#loc210)
    cir.scope {
      %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc222)
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc223)
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
      cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc222)
      %5 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
      cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc223)
      cir.scope {
        %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc225)
        %7 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc226)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc140)
        %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc140)
        %10 = cir.const #cir.int<67> : !s32i loc(#loc141)
        %11 = cir.const #cir.int<100> : !s32i loc(#loc142)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc143)
        %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc142)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc142)
        cir.libc.memset %14 bytes from %9 set to %10 : !cir.ptr<!void>, !s32i, !u64i loc(#loc227)
        %15 = cir.const #cir.int<0> : !s32i loc(#loc146)
        %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc146)
        %17 = cir.const #cir.int<100> : !s32i loc(#loc147)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc148)
        %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc147)
        %20 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc149)
        %21 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc149)
        cir.store %16, %21 : !s8i, !cir.ptr<!s8i> loc(#loc228)
        cir.scope {
          %30 = cir.const #cir.int<0> : !s32i loc(#loc152)
          %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc152)
          cir.store %31, %6 : !u64i, !cir.ptr<!u64i> loc(#loc230)
          cir.for : cond {
            %32 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc154)
            %33 = cir.const #cir.int<100> : !s32i loc(#loc155)
            %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc155)
            %35 = cir.cmp(lt, %32, %34) : !u64i, !cir.bool loc(#loc231)
            cir.condition(%35) loc(#loc156)
          } body {
            cir.scope {
              %32 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc158)
              %33 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc159)
              %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc159)
              %35 = cir.load %34 : !cir.ptr<!s8i>, !s8i loc(#loc159)
              %36 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
              %37 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc161)
              %38 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %37 : !u64i), !cir.ptr<!s8i> loc(#loc162)
              cir.store %35, %38 : !s8i, !cir.ptr<!s8i> loc(#loc233)
            } loc(#loc232)
            cir.yield loc(#loc151)
          } step {
            %32 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc164)
            %33 = cir.unary(inc, %32) : !u64i, !u64i loc(#loc165)
            cir.store %33, %6 : !u64i, !cir.ptr<!u64i> loc(#loc234)
            cir.yield loc(#loc229)
          } loc(#loc229)
        } loc(#loc229)
        %22 = cir.const #cir.int<0> : !s32i loc(#loc166)
        %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc166)
        %24 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
        %25 = cir.const #cir.int<100> : !s32i loc(#loc168)
        %26 = cir.const #cir.int<1> : !s32i loc(#loc169)
        %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc168)
        %28 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc170)
        cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc235)
        %29 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc171)
        cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc172)
      } loc(#loc224)
    } loc(#loc221)
    cir.return loc(#loc94)
  } loc(#loc207)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__malloc_char_loop_31.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":23:1)
#loc8 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":55:1)
#loc9 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":25:5)
#loc10 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":25:12)
#loc11 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":26:12)
#loc12 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":26:5)
#loc13 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":27:5)
#loc14 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":34:5)
#loc15 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":28:9)
#loc16 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":28:60)
#loc17 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":28:37)
#loc18 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":28:44)
#loc19 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":28:48)
#loc20 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":28:59)
#loc21 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":29:9)
#loc22 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":29:43)
#loc23 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":29:13)
#loc24 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":29:27)
#loc25 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":29:33)
#loc26 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":29:34)
#loc27 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":29:40)
#loc28 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":29:39)
#loc29 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":30:16)
#loc30 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":30:28)
#loc31 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":30:33)
#loc32 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":30:37)
#loc33 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":30:9)
#loc34 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":30:38)
#loc35 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":31:29)
#loc36 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":31:9)
#loc37 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":31:20)
#loc38 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":31:24)
#loc39 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":31:25)
#loc40 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":33:16)
#loc41 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":33:29)
#loc42 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":33:27)
#loc43 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":33:9)
#loc44 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":35:5)
#loc45 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":54:5)
#loc46 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":36:9)
#loc47 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":36:27)
#loc48 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":37:9)
#loc49 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":37:23)
#loc50 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":38:9)
#loc51 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":53:9)
#loc52 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":39:13)
#loc53 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":39:20)
#loc54 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":40:13)
#loc55 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":40:28)
#loc56 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":41:20)
#loc57 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":41:28)
#loc58 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":41:33)
#loc59 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":41:37)
#loc60 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":41:13)
#loc61 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":41:38)
#loc62 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":42:29)
#loc63 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":42:20)
#loc64 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":42:24)
#loc65 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":42:13)
#loc66 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":44:13)
#loc67 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":47:13)
#loc68 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":44:22)
#loc69 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":44:18)
#loc70 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":44:25)
#loc71 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":44:29)
#loc72 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":44:27)
#loc73 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":45:13)
#loc74 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":46:34)
#loc75 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":46:27)
#loc76 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":46:17)
#loc77 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":46:22)
#loc78 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":46:23)
#loc79 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":46:35)
#loc80 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":44:35)
#loc81 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":44:34)
#loc82 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":49:27)
#loc83 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":49:13)
#loc84 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":49:18)
#loc85 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":49:22)
#loc86 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":49:23)
#loc87 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":50:23)
#loc88 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":50:13)
#loc89 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":96:1)
#loc90 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":99:1)
#loc91 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":98:5)
#loc92 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":98:13)
#loc93 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":62:1)
#loc94 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":94:1)
#loc95 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":64:5)
#loc96 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":64:12)
#loc97 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":65:12)
#loc98 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":65:5)
#loc99 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":66:5)
#loc100 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":73:5)
#loc101 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":67:9)
#loc102 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":67:60)
#loc103 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":67:37)
#loc104 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":67:44)
#loc105 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":67:48)
#loc106 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":67:59)
#loc107 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":68:9)
#loc108 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":68:43)
#loc109 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":68:13)
#loc110 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":68:27)
#loc111 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":68:33)
#loc112 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":68:34)
#loc113 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":68:40)
#loc114 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":68:39)
#loc115 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":69:16)
#loc116 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":69:28)
#loc117 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":69:33)
#loc118 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":69:37)
#loc119 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":69:9)
#loc120 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":69:38)
#loc121 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":70:29)
#loc122 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":70:9)
#loc123 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":70:20)
#loc124 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":70:24)
#loc125 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":70:25)
#loc126 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":72:16)
#loc127 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":72:9)
#loc128 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":74:5)
#loc129 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":93:5)
#loc130 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":75:9)
#loc131 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":75:27)
#loc132 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":76:9)
#loc133 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":76:23)
#loc134 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":77:9)
#loc135 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":92:9)
#loc136 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":78:13)
#loc137 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":78:20)
#loc138 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":79:13)
#loc139 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":79:28)
#loc140 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":80:20)
#loc141 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":80:28)
#loc142 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":80:33)
#loc143 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":80:37)
#loc144 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":80:13)
#loc145 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":80:38)
#loc146 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":81:29)
#loc147 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":81:20)
#loc148 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":81:24)
#loc149 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":81:13)
#loc150 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":83:13)
#loc151 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":86:13)
#loc152 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":83:22)
#loc153 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":83:18)
#loc154 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":83:25)
#loc155 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":83:29)
#loc156 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":83:27)
#loc157 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":84:13)
#loc158 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":85:34)
#loc159 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":85:27)
#loc160 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":85:17)
#loc161 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":85:22)
#loc162 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":85:23)
#loc163 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":85:35)
#loc164 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":83:35)
#loc165 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":83:34)
#loc166 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":88:27)
#loc167 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":88:13)
#loc168 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":88:18)
#loc169 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":88:22)
#loc170 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":88:23)
#loc171 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":89:23)
#loc172 = loc("CWE124_Buffer_Underwrite__malloc_char_loop_31.c":89:13)
#loc173 = loc(fused[#loc1, #loc2])
#loc174 = loc(fused[#loc3, #loc4])
#loc175 = loc(fused[#loc5, #loc6])
#loc176 = loc(fused[#loc7, #loc8])
#loc177 = loc(fused[#loc9, #loc10])
#loc178 = loc(fused[#loc12, #loc11])
#loc179 = loc(fused[#loc13, #loc14])
#loc180 = loc(fused[#loc15, #loc16])
#loc181 = loc(fused[#loc19, #loc20])
#loc182 = loc(fused[#loc18, #loc20])
#loc183 = loc(fused[#loc17, #loc16])
#loc184 = loc(fused[#loc21, #loc22])
#loc185 = loc(fused[#loc23, #loc24])
#loc186 = loc(fused[#loc25, #loc22])
#loc187 = loc(fused[#loc33, #loc34])
#loc188 = loc(fused[#loc36, #loc35])
#loc189 = loc(fused[#loc43, #loc41])
#loc190 = loc(fused[#loc44, #loc45])
#loc191 = loc(fused[#loc46, #loc47])
#loc192 = loc(fused[#loc48, #loc49])
#loc193 = loc(fused[#loc50, #loc51])
#loc194 = loc(fused[#loc52, #loc53])
#loc195 = loc(fused[#loc54, #loc55])
#loc196 = loc(fused[#loc60, #loc61])
#loc197 = loc(fused[#loc65, #loc62])
#loc198 = loc(fused[#loc66, #loc67])
#loc199 = loc(fused[#loc69, #loc68])
#loc200 = loc(fused[#loc70, #loc71])
#loc201 = loc(fused[#loc73, #loc67])
#loc202 = loc(fused[#loc76, #loc79])
#loc203 = loc(fused[#loc81, #loc80])
#loc204 = loc(fused[#loc83, #loc82])
#loc205 = loc(fused[#loc89, #loc90])
#loc206 = loc(fused[#loc91, #loc92])
#loc207 = loc(fused[#loc93, #loc94])
#loc208 = loc(fused[#loc95, #loc96])
#loc209 = loc(fused[#loc98, #loc97])
#loc210 = loc(fused[#loc99, #loc100])
#loc211 = loc(fused[#loc101, #loc102])
#loc212 = loc(fused[#loc105, #loc106])
#loc213 = loc(fused[#loc104, #loc106])
#loc214 = loc(fused[#loc103, #loc102])
#loc215 = loc(fused[#loc107, #loc108])
#loc216 = loc(fused[#loc109, #loc110])
#loc217 = loc(fused[#loc111, #loc108])
#loc218 = loc(fused[#loc119, #loc120])
#loc219 = loc(fused[#loc122, #loc121])
#loc220 = loc(fused[#loc127, #loc126])
#loc221 = loc(fused[#loc128, #loc129])
#loc222 = loc(fused[#loc130, #loc131])
#loc223 = loc(fused[#loc132, #loc133])
#loc224 = loc(fused[#loc134, #loc135])
#loc225 = loc(fused[#loc136, #loc137])
#loc226 = loc(fused[#loc138, #loc139])
#loc227 = loc(fused[#loc144, #loc145])
#loc228 = loc(fused[#loc149, #loc146])
#loc229 = loc(fused[#loc150, #loc151])
#loc230 = loc(fused[#loc153, #loc152])
#loc231 = loc(fused[#loc154, #loc155])
#loc232 = loc(fused[#loc157, #loc151])
#loc233 = loc(fused[#loc160, #loc163])
#loc234 = loc(fused[#loc165, #loc164])
#loc235 = loc(fused[#loc167, #loc166])
