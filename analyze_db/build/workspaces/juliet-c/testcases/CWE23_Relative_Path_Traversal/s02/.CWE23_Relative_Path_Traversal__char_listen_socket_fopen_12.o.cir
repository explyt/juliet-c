!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc151 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":110:48)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const._ZN58CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12L7goodG2BEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc254)
  cir.global "private" constant cir_private @__const._ZN58CWE23_Relative_Path_Traversal__char_listen_socket_fopen_123badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc255)
  cir.func private @globalReturnsTrueOrFalse() -> !s32i loc(#loc256)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc257)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc258)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc259)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc260)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc261)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc262)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc263)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc264)
  cir.func private @close(!s32i) -> !s32i loc(#loc265)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc266)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc27)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc267)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"wb+\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc30)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc268)
  cir.func @_ZN58CWE23_Relative_Path_Traversal__char_listen_socket_fopen_123badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc270)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc271)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc272)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc273)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc274)
    %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc275)
    %6 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc276)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc277)
    %8 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc255)
    %9 = cir.get_global @__const._ZN58CWE23_Relative_Path_Traversal__char_listen_socket_fopen_123badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc255)
    cir.copy %9 to %8 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc255)
    %10 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc51)
    cir.store %10, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc278)
    cir.br ^bb1 loc(#loc279)
  ^bb1:  // pred: ^bb0
    %11 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc55)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc280)
    cir.brcond %12 ^bb2, ^bb56 loc(#loc281)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc282)
  ^bb3:  // pred: ^bb2
    %13 = cir.const #cir.int<1> : !s32i loc(#loc42)
    %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc42)
    cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc273)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc44)
    cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc274)
    %17 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc62)
    %18 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
    %19 = cir.call @strlen(%18) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc62)
    cir.store %19, %5 : !u64i, !cir.ptr<!u64i> loc(#loc275)
    cir.br ^bb4 loc(#loc283)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc283)
  ^bb5:  // pred: ^bb44
    %20 = cir.const #cir.int<0> : !s32i loc(#loc66)
    %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc66)
    cir.brcond %21 ^bb6, ^bb45 loc(#loc66)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc284)
  ^bb7:  // pred: ^bb6
    %22 = cir.const #cir.int<2> : !s32i loc(#loc69)
    %23 = cir.const #cir.int<1> : !u32i loc(#loc70)
    %24 = cir.cast(integral, %23 : !u32i), !s32i loc(#loc70)
    %25 = cir.const #cir.int<6> : !u32i loc(#loc71)
    %26 = cir.cast(integral, %25 : !u32i), !s32i loc(#loc71)
    %27 = cir.call @socket(%22, %24, %26) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc72)
    cir.store %27, %3 : !s32i, !cir.ptr<!s32i> loc(#loc285)
    cir.br ^bb8 loc(#loc286)
  ^bb8:  // pred: ^bb7
    %28 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc77)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc78)
    %30 = cir.unary(minus, %29) nsw : !s32i, !s32i loc(#loc78)
    %31 = cir.cmp(eq, %28, %30) : !s32i, !cir.bool loc(#loc287)
    cir.brcond %31 ^bb9, ^bb10 loc(#loc288)
  ^bb9:  // pred: ^bb8
    cir.br ^bb45 loc(#loc80)
  ^bb10:  // pred: ^bb8
    cir.br ^bb11 loc(#loc76)
  ^bb11:  // pred: ^bb10
    %32 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc289)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc83)
    %34 = cir.const #cir.int<16> : !u64i loc(#loc290)
    cir.libc.memset %34 bytes from %32 set to %33 : !cir.ptr<!void>, !s32i, !u64i loc(#loc291)
    %35 = cir.const #cir.int<2> : !s32i loc(#loc88)
    %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc88)
    %37 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc89)
    cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc292)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc91)
    %39 = cir.cast(integral, %38 : !s32i), !u32i loc(#loc91)
    %40 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc92)
    %41 = cir.get_member %40[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc93)
    cir.store %39, %41 : !u32i, !cir.ptr<!u32i> loc(#loc293)
    %42 = cir.const #cir.int<27015> : !s32i loc(#loc95)
    %43 = cir.cast(integral, %42 : !s32i), !u16i loc(#loc95)
    %44 = cir.call @htons(%43) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc96)
    %45 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc97)
    cir.store %44, %45 : !u16i, !cir.ptr<!u16i> loc(#loc294)
    cir.br ^bb12 loc(#loc295)
  ^bb12:  // pred: ^bb11
    %46 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc102)
    %47 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc296)
    %48 = cir.const #cir.int<16> : !u64i loc(#loc297)
    %49 = cir.cast(integral, %48 : !u64i), !u32i loc(#loc297)
    %50 = cir.call @bind(%46, %47, %49) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc107)
    %51 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %52 = cir.unary(minus, %51) nsw : !s32i, !s32i loc(#loc108)
    %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc298)
    cir.brcond %53 ^bb13, ^bb14 loc(#loc299)
  ^bb13:  // pred: ^bb12
    cir.br ^bb45 loc(#loc110)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc101)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc300)
  ^bb16:  // pred: ^bb15
    %54 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    %55 = cir.const #cir.int<5> : !s32i loc(#loc114)
    %56 = cir.call @listen(%54, %55) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc115)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc116)
    %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc301)
    cir.brcond %59 ^bb17, ^bb18 loc(#loc302)
  ^bb17:  // pred: ^bb16
    cir.br ^bb45 loc(#loc118)
  ^bb18:  // pred: ^bb16
    cir.br ^bb19 loc(#loc112)
  ^bb19:  // pred: ^bb18
    %60 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    %61 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc120)
    %62 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc121)
    %63 = cir.call @accept(%60, %61, %62) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc122)
    cir.store %63, %4 : !s32i, !cir.ptr<!s32i> loc(#loc303)
    cir.br ^bb20 loc(#loc304)
  ^bb20:  // pred: ^bb19
    %64 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %65 = cir.const #cir.int<1> : !s32i loc(#loc128)
    %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc128)
    %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc305)
    cir.brcond %67 ^bb21, ^bb22 loc(#loc306)
  ^bb21:  // pred: ^bb20
    cir.br ^bb45 loc(#loc130)
  ^bb22:  // pred: ^bb20
    cir.br ^bb23 loc(#loc126)
  ^bb23:  // pred: ^bb22
    %68 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc131)
    %69 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
    %70 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc133)
    %71 = cir.ptr_stride(%69 : !cir.ptr<!s8i>, %70 : !u64i), !cir.ptr<!s8i> loc(#loc134)
    %72 = cir.cast(bitcast, %71 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc307)
    %73 = cir.const #cir.int<1> : !u64i loc(#loc308)
    %74 = cir.const #cir.int<4096> : !s32i loc(#loc139)
    %75 = cir.cast(integral, %74 : !s32i), !u64i loc(#loc139)
    %76 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc140)
    %77 = cir.binop(sub, %75, %76) : !u64i loc(#loc309)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc141)
    %79 = cir.cast(integral, %78 : !s32i), !u64i loc(#loc141)
    %80 = cir.binop(sub, %77, %79) : !u64i loc(#loc310)
    %81 = cir.binop(mul, %73, %80) : !u64i loc(#loc311)
    %82 = cir.const #cir.int<0> : !s32i loc(#loc143)
    %83 = cir.call @recv(%68, %72, %81, %82) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc144)
    %84 = cir.cast(integral, %83 : !s64i), !s32i loc(#loc144)
    cir.store %84, %0 : !s32i, !cir.ptr<!s32i> loc(#loc312)
    cir.br ^bb24 loc(#loc313)
  ^bb24:  // pred: ^bb23
    %85 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    %86 = cir.const #cir.int<1> : !s32i loc(#loc150)
    %87 = cir.unary(minus, %86) nsw : !s32i, !s32i loc(#loc150)
    %88 = cir.cmp(eq, %85, %87) : !s32i, !cir.bool loc(#loc314)
    cir.brcond %88 ^bb25, ^bb26 loc(#loc151)
  ^bb25:  // pred: ^bb24
    %89 = cir.const #true loc(#loc151)
    cir.br ^bb31(%89 : !cir.bool) loc(#loc151)
  ^bb26:  // pred: ^bb24
    %90 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    %91 = cir.const #cir.int<0> : !s32i loc(#loc153)
    %92 = cir.cmp(eq, %90, %91) : !s32i, !cir.bool loc(#loc315)
    cir.brcond %92 ^bb27, ^bb28 loc(#loc151)
  ^bb27:  // pred: ^bb26
    %93 = cir.const #true loc(#loc151)
    cir.br ^bb29(%93 : !cir.bool) loc(#loc151)
  ^bb28:  // pred: ^bb26
    %94 = cir.const #false loc(#loc151)
    cir.br ^bb29(%94 : !cir.bool) loc(#loc151)
  ^bb29(%95: !cir.bool loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":110:48)):  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc151)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31(%95 : !cir.bool) loc(#loc151)
  ^bb31(%96: !cir.bool loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":110:48)):  // 2 preds: ^bb25, ^bb30
    cir.br ^bb32 loc(#loc151)
  ^bb32:  // pred: ^bb31
    cir.brcond %96 ^bb33, ^bb34 loc(#loc316)
  ^bb33:  // pred: ^bb32
    cir.br ^bb45 loc(#loc155)
  ^bb34:  // pred: ^bb32
    cir.br ^bb35 loc(#loc148)
  ^bb35:  // pred: ^bb34
    %97 = cir.const #cir.int<0> : !s8i loc(#loc156)
    %98 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
    %99 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc158)
    %100 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    %101 = cir.cast(integral, %100 : !s32i), !u64i loc(#loc159)
    %102 = cir.const #cir.int<1> : !u64i loc(#loc317)
    %103 = cir.binop(div, %101, %102) : !u64i loc(#loc318)
    %104 = cir.binop(add, %99, %103) : !u64i loc(#loc319)
    %105 = cir.ptr_stride(%98 : !cir.ptr<!s8i>, %104 : !u64i), !cir.ptr<!s8i> loc(#loc162)
    cir.store %97, %105 : !s8i, !cir.ptr<!s8i> loc(#loc320)
    %106 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
    %107 = cir.const #cir.int<13> : !s8i loc(#loc164)
    %108 = cir.cast(integral, %107 : !s8i), !s32i loc(#loc164)
    %109 = cir.call @strchr(%106, %108) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc165)
    cir.store %109, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc321)
    cir.br ^bb36 loc(#loc322)
  ^bb36:  // pred: ^bb35
    %110 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
    %111 = cir.cast(ptr_to_bool, %110 : !cir.ptr<!s8i>), !cir.bool loc(#loc170)
    cir.brcond %111 ^bb37, ^bb38 loc(#loc323)
  ^bb37:  // pred: ^bb36
    %112 = cir.const #cir.int<0> : !s8i loc(#loc172)
    %113 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc173)
    cir.store %112, %113 : !s8i, !cir.ptr<!s8i> loc(#loc324)
    cir.br ^bb38 loc(#loc169)
  ^bb38:  // 2 preds: ^bb36, ^bb37
    cir.br ^bb39 loc(#loc169)
  ^bb39:  // pred: ^bb38
    %114 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc175)
    %115 = cir.const #cir.int<10> : !s8i loc(#loc176)
    %116 = cir.cast(integral, %115 : !s8i), !s32i loc(#loc176)
    %117 = cir.call @strchr(%114, %116) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc177)
    cir.store %117, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc325)
    cir.br ^bb40 loc(#loc326)
  ^bb40:  // pred: ^bb39
    %118 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc182)
    %119 = cir.cast(ptr_to_bool, %118 : !cir.ptr<!s8i>), !cir.bool loc(#loc182)
    cir.brcond %119 ^bb41, ^bb42 loc(#loc327)
  ^bb41:  // pred: ^bb40
    %120 = cir.const #cir.int<0> : !s8i loc(#loc184)
    %121 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc185)
    cir.store %120, %121 : !s8i, !cir.ptr<!s8i> loc(#loc328)
    cir.br ^bb42 loc(#loc181)
  ^bb42:  // 2 preds: ^bb40, ^bb41
    cir.br ^bb43 loc(#loc181)
  ^bb43:  // pred: ^bb42
    cir.br ^bb44 loc(#loc68)
  ^bb44:  // pred: ^bb43
    cir.br ^bb5 loc(#loc65)
  ^bb45:  // 6 preds: ^bb5, ^bb9, ^bb13, ^bb17, ^bb21, ^bb33
    cir.br ^bb46 loc(#loc65)
  ^bb46:  // pred: ^bb45
    cir.br ^bb47 loc(#loc329)
  ^bb47:  // pred: ^bb46
    %122 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc189)
    %123 = cir.const #cir.int<1> : !s32i loc(#loc190)
    %124 = cir.unary(minus, %123) nsw : !s32i, !s32i loc(#loc190)
    %125 = cir.cmp(ne, %122, %124) : !s32i, !cir.bool loc(#loc330)
    cir.brcond %125 ^bb48, ^bb49 loc(#loc331)
  ^bb48:  // pred: ^bb47
    %126 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc192)
    %127 = cir.call @close(%126) : (!s32i) -> !s32i loc(#loc193)
    cir.br ^bb49 loc(#loc188)
  ^bb49:  // 2 preds: ^bb47, ^bb48
    cir.br ^bb50 loc(#loc188)
  ^bb50:  // pred: ^bb49
    cir.br ^bb51 loc(#loc332)
  ^bb51:  // pred: ^bb50
    %128 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc196)
    %129 = cir.const #cir.int<1> : !s32i loc(#loc197)
    %130 = cir.unary(minus, %129) nsw : !s32i, !s32i loc(#loc197)
    %131 = cir.cmp(ne, %128, %130) : !s32i, !cir.bool loc(#loc333)
    cir.brcond %131 ^bb52, ^bb53 loc(#loc334)
  ^bb52:  // pred: ^bb51
    %132 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc199)
    %133 = cir.call @close(%132) : (!s32i) -> !s32i loc(#loc200)
    cir.br ^bb53 loc(#loc195)
  ^bb53:  // 2 preds: ^bb51, ^bb52
    cir.br ^bb54 loc(#loc195)
  ^bb54:  // pred: ^bb53
    cir.br ^bb55 loc(#loc61)
  ^bb55:  // pred: ^bb54
    cir.br ^bb57 loc(#loc58)
  ^bb56:  // pred: ^bb1
    %134 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc201)
    %135 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc202)
    %136 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc27)
    %137 = cir.cast(array_to_ptrdecay, %136 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc27)
    %138 = cir.call @strcat(%135, %137) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc201)
    cir.br ^bb57 loc(#loc54)
  ^bb57:  // 2 preds: ^bb55, ^bb56
    cir.br ^bb58 loc(#loc54)
  ^bb58:  // pred: ^bb57
    cir.br ^bb59 loc(#loc335)
  ^bb59:  // pred: ^bb58
    %139 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc48)
    cir.store %139, %6 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc276)
    %140 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc205)
    %141 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc206)
    %142 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc30)
    %143 = cir.cast(array_to_ptrdecay, %142 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc30)
    %144 = cir.call @fopen(%141, %143) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc205)
    cir.store %144, %6 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc336)
    cir.br ^bb60 loc(#loc337)
  ^bb60:  // pred: ^bb59
    %145 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc211)
    %146 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc212)
    %147 = cir.cmp(ne, %145, %146) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc338)
    cir.brcond %147 ^bb61, ^bb62 loc(#loc339)
  ^bb61:  // pred: ^bb60
    %148 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc214)
    %149 = cir.call @fclose(%148) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc215)
    cir.br ^bb62 loc(#loc210)
  ^bb62:  // 2 preds: ^bb60, ^bb61
    cir.br ^bb63 loc(#loc210)
  ^bb63:  // pred: ^bb62
    cir.br ^bb64 loc(#loc204)
  ^bb64:  // pred: ^bb63
    cir.return loc(#loc34)
  } loc(#loc269)
  cir.func internal private @_ZN58CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc341)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc342)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc254)
    %3 = cir.get_global @__const._ZN58CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12L7goodG2BEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc254)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc254)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc222)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc343)
    cir.br ^bb1 loc(#loc344)
  ^bb1:  // pred: ^bb0
    %5 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc226)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc345)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc346)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc231)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc232)
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc233)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc233)
    %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc231)
    cir.br ^bb4 loc(#loc229)
  ^bb3:  // pred: ^bb1
    %12 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc234)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc235)
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc236)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc236)
    %16 = cir.call @strcat(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc234)
    cir.br ^bb4 loc(#loc225)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc225)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc347)
  ^bb6:  // pred: ^bb5
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc219)
    cir.store %17, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc341)
    %18 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc239)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc240)
    %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc241)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc241)
    %22 = cir.call @fopen(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc239)
    cir.store %22, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc348)
    cir.br ^bb7 loc(#loc349)
  ^bb7:  // pred: ^bb6
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc246)
    %24 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc247)
    %25 = cir.cmp(ne, %23, %24) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc350)
    cir.brcond %25 ^bb8, ^bb9 loc(#loc351)
  ^bb8:  // pred: ^bb7
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc249)
    %27 = cir.call @fclose(%26) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc250)
    cir.br ^bb9 loc(#loc245)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc245)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc238)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc217)
  } loc(#loc340)
  cir.func @_ZN58CWE23_Relative_Path_Traversal__char_listen_socket_fopen_124goodEv() extra(#fn_attr1) {
    cir.call @_ZN58CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12L7goodG2BEv() : () -> () loc(#loc253)
    cir.return loc(#loc252)
  } loc(#loc352)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":170:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":170:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":61:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":61:37)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc11 = loc("/usr/include/netinet/in.h":402:1)
#loc12 = loc("/usr/include/netinet/in.h":403:40)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc15 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc17 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc18 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc19 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc20 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc21 = loc("/usr/include/string.h":226:1)
#loc22 = loc("/usr/include/string.h":227:50)
#loc23 = loc("/usr/include/unistd.h":358:1)
#loc24 = loc("/usr/include/unistd.h":358:27)
#loc25 = loc("/usr/include/string.h":149:1)
#loc26 = loc("/usr/include/string.h":150:14)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":148:22)
#loc28 = loc("/usr/include/stdio.h":264:1)
#loc29 = loc("/usr/include/stdio.h":266:3)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":153:29)
#loc31 = loc("/usr/include/stdio.h":184:1)
#loc32 = loc("/usr/include/stdio.h":184:36)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":58:1)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":159:1)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":70:13)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":70:17)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":71:13)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":71:32)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":72:13)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":72:19)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":73:13)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":73:35)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":74:13)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":74:35)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":75:13)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":75:41)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":151:9)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":151:23)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":60:5)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":60:12)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":62:12)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":62:5)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":63:5)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":149:5)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":63:8)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":63:33)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":64:5)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":144:5)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":146:5)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":65:9)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":143:9)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":75:30)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":75:37)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":76:13)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":128:21)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":128:20)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":77:13)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":127:13)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":86:39)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":86:48)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":86:61)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":86:32)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":86:17)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":86:72)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":87:17)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":90:17)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":87:21)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":87:37)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":88:17)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":89:21)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":91:24)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":91:25)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":91:34)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":91:37)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":91:51)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":91:17)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":91:52)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":92:38)
#loc89 = loc("/usr/include/netinet/in.h":249:5)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":92:17)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":93:43)
#loc92 = loc("/usr/include/netinet/in.h":251:20)
#loc93 = loc("/usr/include/netinet/in.h":33:15)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":93:17)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":94:42)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":94:36)
#loc97 = loc("/usr/include/netinet/in.h":250:15)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":94:17)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":94:50)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":95:17)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":98:17)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":95:26)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":95:58)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":95:59)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":95:68)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":95:82)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":95:21)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":95:88)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":96:17)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":97:21)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":99:17)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":102:17)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":99:28)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":99:42)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":99:21)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":99:61)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":100:17)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":101:21)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":103:39)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":103:53)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":103:59)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":103:32)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":103:17)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":103:63)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":104:17)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":107:17)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":104:21)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":104:37)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":105:17)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":106:21)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":109:35)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":109:58)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":109:65)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":109:63)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":109:49)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":109:72)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":109:75)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":109:86)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":109:91)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":109:106)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":109:116)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":109:117)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":109:120)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":109:30)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":109:17)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":109:121)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":110:17)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":113:17)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":110:21)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":110:35)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":110:51)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":110:65)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":111:17)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":112:21)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":115:61)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":115:17)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":115:22)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":115:32)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":115:45)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":115:56)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":115:57)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":117:34)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":117:40)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":117:27)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":117:17)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":117:44)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":118:17)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":121:17)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":118:21)
#loc171 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":119:17)
#loc172 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":120:32)
#loc173 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":120:22)
#loc174 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":120:21)
#loc175 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":122:34)
#loc176 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":122:40)
#loc177 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":122:27)
#loc178 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":122:17)
#loc179 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":122:44)
#loc180 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":123:17)
#loc181 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":126:17)
#loc182 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":123:21)
#loc183 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":124:17)
#loc184 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":125:32)
#loc185 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":125:22)
#loc186 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":125:21)
#loc187 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":129:13)
#loc188 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":132:13)
#loc189 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":129:17)
#loc190 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":129:33)
#loc191 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":130:13)
#loc192 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":131:30)
#loc193 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":131:17)
#loc194 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":133:13)
#loc195 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":136:13)
#loc196 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":133:17)
#loc197 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":133:33)
#loc198 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":134:13)
#loc199 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":135:30)
#loc200 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":135:17)
#loc201 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":148:9)
#loc202 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":148:16)
#loc203 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":150:5)
#loc204 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":158:5)
#loc205 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":153:17)
#loc206 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":153:23)
#loc207 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":153:9)
#loc208 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":153:34)
#loc209 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":154:9)
#loc210 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":157:9)
#loc211 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":154:13)
#loc212 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":154:22)
#loc213 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":155:9)
#loc214 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":156:20)
#loc215 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":156:13)
#loc216 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":167:1)
#loc217 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":191:1)
#loc218 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":183:9)
#loc219 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":183:23)
#loc220 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":169:5)
#loc221 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":169:12)
#loc222 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":171:12)
#loc223 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":171:5)
#loc224 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":172:5)
#loc225 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":181:5)
#loc226 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":172:8)
#loc227 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":172:33)
#loc228 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":173:5)
#loc229 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":176:5)
#loc230 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":178:5)
#loc231 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":175:9)
#loc232 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":175:16)
#loc233 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":175:22)
#loc234 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":180:9)
#loc235 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":180:16)
#loc236 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":180:22)
#loc237 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":182:5)
#loc238 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":190:5)
#loc239 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":185:17)
#loc240 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":185:23)
#loc241 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":185:29)
#loc242 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":185:9)
#loc243 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":185:34)
#loc244 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":186:9)
#loc245 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":189:9)
#loc246 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":186:13)
#loc247 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":186:22)
#loc248 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":187:9)
#loc249 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":188:20)
#loc250 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":188:13)
#loc251 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":193:1)
#loc252 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":196:1)
#loc253 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_fopen_12.cpp":195:5)
#loc254 = loc(fused[#loc1, #loc2])
#loc255 = loc(fused[#loc3, #loc4])
#loc256 = loc(fused[#loc5, #loc6])
#loc257 = loc(fused[#loc7, #loc8])
#loc258 = loc(fused[#loc9, #loc10])
#loc259 = loc(fused[#loc11, #loc12])
#loc260 = loc(fused[#loc13, #loc14])
#loc261 = loc(fused[#loc15, #loc16])
#loc262 = loc(fused[#loc17, #loc18])
#loc263 = loc(fused[#loc19, #loc20])
#loc264 = loc(fused[#loc21, #loc22])
#loc265 = loc(fused[#loc23, #loc24])
#loc266 = loc(fused[#loc25, #loc26])
#loc267 = loc(fused[#loc28, #loc29])
#loc268 = loc(fused[#loc31, #loc32])
#loc269 = loc(fused[#loc33, #loc34])
#loc270 = loc(fused[#loc35, #loc36])
#loc271 = loc(fused[#loc37, #loc38])
#loc272 = loc(fused[#loc39, #loc40])
#loc273 = loc(fused[#loc41, #loc42])
#loc274 = loc(fused[#loc43, #loc44])
#loc275 = loc(fused[#loc45, #loc46])
#loc276 = loc(fused[#loc47, #loc48])
#loc277 = loc(fused[#loc49, #loc50])
#loc278 = loc(fused[#loc52, #loc51])
#loc279 = loc(fused[#loc53, #loc54])
#loc280 = loc(fused[#loc55, #loc56])
#loc281 = loc(fused[#loc57, #loc58, #loc59, #loc54])
#loc282 = loc(fused[#loc60, #loc61])
#loc283 = loc(fused[#loc64, #loc65])
#loc284 = loc(fused[#loc67, #loc68])
#loc285 = loc(fused[#loc73, #loc74])
#loc286 = loc(fused[#loc75, #loc76])
#loc287 = loc(fused[#loc77, #loc78])
#loc288 = loc(fused[#loc79, #loc76])
#loc289 = loc(fused[#loc81, #loc82])
#loc290 = loc(fused[#loc84, #loc85])
#loc291 = loc(fused[#loc86, #loc87])
#loc292 = loc(fused[#loc90, #loc88])
#loc293 = loc(fused[#loc94, #loc91])
#loc294 = loc(fused[#loc98, #loc99])
#loc295 = loc(fused[#loc100, #loc101])
#loc296 = loc(fused[#loc103, #loc104])
#loc297 = loc(fused[#loc105, #loc106])
#loc298 = loc(fused[#loc107, #loc108])
#loc299 = loc(fused[#loc109, #loc101])
#loc300 = loc(fused[#loc111, #loc112])
#loc301 = loc(fused[#loc115, #loc116])
#loc302 = loc(fused[#loc117, #loc112])
#loc303 = loc(fused[#loc123, #loc124])
#loc304 = loc(fused[#loc125, #loc126])
#loc305 = loc(fused[#loc127, #loc128])
#loc306 = loc(fused[#loc129, #loc126])
#loc307 = loc(fused[#loc135, #loc136])
#loc308 = loc(fused[#loc137, #loc138])
#loc309 = loc(fused[#loc139, #loc140])
#loc310 = loc(fused[#loc139, #loc141])
#loc311 = loc(fused[#loc137, #loc142])
#loc312 = loc(fused[#loc145, #loc146])
#loc313 = loc(fused[#loc147, #loc148])
#loc314 = loc(fused[#loc149, #loc150])
#loc315 = loc(fused[#loc152, #loc153])
#loc316 = loc(fused[#loc154, #loc148])
#loc317 = loc(fused[#loc160, #loc161])
#loc318 = loc(fused[#loc159, #loc161])
#loc319 = loc(fused[#loc158, #loc161])
#loc320 = loc(fused[#loc157, #loc156])
#loc321 = loc(fused[#loc166, #loc167])
#loc322 = loc(fused[#loc168, #loc169])
#loc323 = loc(fused[#loc171, #loc169])
#loc324 = loc(fused[#loc174, #loc172])
#loc325 = loc(fused[#loc178, #loc179])
#loc326 = loc(fused[#loc180, #loc181])
#loc327 = loc(fused[#loc183, #loc181])
#loc328 = loc(fused[#loc186, #loc184])
#loc329 = loc(fused[#loc187, #loc188])
#loc330 = loc(fused[#loc189, #loc190])
#loc331 = loc(fused[#loc191, #loc188])
#loc332 = loc(fused[#loc194, #loc195])
#loc333 = loc(fused[#loc196, #loc197])
#loc334 = loc(fused[#loc198, #loc195])
#loc335 = loc(fused[#loc203, #loc204])
#loc336 = loc(fused[#loc207, #loc208])
#loc337 = loc(fused[#loc209, #loc210])
#loc338 = loc(fused[#loc211, #loc212])
#loc339 = loc(fused[#loc213, #loc210])
#loc340 = loc(fused[#loc216, #loc217])
#loc341 = loc(fused[#loc218, #loc219])
#loc342 = loc(fused[#loc220, #loc221])
#loc343 = loc(fused[#loc223, #loc222])
#loc344 = loc(fused[#loc224, #loc225])
#loc345 = loc(fused[#loc226, #loc227])
#loc346 = loc(fused[#loc228, #loc229, #loc230, #loc225])
#loc347 = loc(fused[#loc237, #loc238])
#loc348 = loc(fused[#loc242, #loc243])
#loc349 = loc(fused[#loc244, #loc245])
#loc350 = loc(fused[#loc246, #loc247])
#loc351 = loc(fused[#loc248, #loc245])
#loc352 = loc(fused[#loc251, #loc252])
