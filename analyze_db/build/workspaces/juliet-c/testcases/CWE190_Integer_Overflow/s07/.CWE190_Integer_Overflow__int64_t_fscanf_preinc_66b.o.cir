!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc5 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":22:65)
#loc6 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":22:83)
#loc22 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":39:69)
#loc23 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":39:87)
#loc42 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":51:69)
#loc43 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":51:87)
#loc65 = loc(fused[#loc5, #loc6])
#loc71 = loc(fused[#loc22, #loc23])
#loc78 = loc(fused[#loc42, #loc43])
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @printLongLongLine(!s64i) loc(#loc63)
  cir.func @CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b_badSink(%arg0: !cir.ptr<!s64i> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc66)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc65)
    %2 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc67)
    cir.store %arg0, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc11)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc12)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc13)
    %5 = cir.ptr_stride(%3 : !cir.ptr<!s64i>, %4 : !s32i), !cir.ptr<!s64i> loc(#loc10)
    %6 = cir.load %5 : !cir.ptr<!s64i>, !s64i loc(#loc12)
    cir.store %6, %2 : !s64i, !cir.ptr<!s64i> loc(#loc67)
    cir.br ^bb1 loc(#loc68)
  ^bb1:  // pred: ^bb0
    %7 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc16)
    %8 = cir.unary(inc, %7) nsw : !s64i, !s64i loc(#loc16)
    cir.store %8, %2 : !s64i, !cir.ptr<!s64i> loc(#loc69)
    %9 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc8)
    cir.store %9, %0 : !s64i, !cir.ptr<!s64i> loc(#loc66)
    %10 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc18)
    cir.call @printLongLongLine(%10) : (!s64i) -> () loc(#loc19)
    cir.br ^bb2 loc(#loc15)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc4)
  } loc(#loc64)
  cir.func @CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b_goodG2BSink(%arg0: !cir.ptr<!s64i> loc(fused[#loc22, #loc23])) extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc72)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc71)
    %2 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc73)
    cir.store %arg0, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc28)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc29)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc30)
    %5 = cir.ptr_stride(%3 : !cir.ptr<!s64i>, %4 : !s32i), !cir.ptr<!s64i> loc(#loc27)
    %6 = cir.load %5 : !cir.ptr<!s64i>, !s64i loc(#loc29)
    cir.store %6, %2 : !s64i, !cir.ptr<!s64i> loc(#loc73)
    cir.br ^bb1 loc(#loc74)
  ^bb1:  // pred: ^bb0
    %7 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc33)
    %8 = cir.unary(inc, %7) nsw : !s64i, !s64i loc(#loc33)
    cir.store %8, %2 : !s64i, !cir.ptr<!s64i> loc(#loc75)
    %9 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc25)
    cir.store %9, %0 : !s64i, !cir.ptr<!s64i> loc(#loc72)
    %10 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc35)
    cir.call @printLongLongLine(%10) : (!s64i) -> () loc(#loc36)
    cir.br ^bb2 loc(#loc32)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc21)
  } loc(#loc70)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc76)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc39)
  cir.func @CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b_goodB2GSink(%arg0: !cir.ptr<!s64i> loc(fused[#loc42, #loc43])) extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc79)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc78)
    %2 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc80)
    cir.store %arg0, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc48)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc49)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc50)
    %5 = cir.ptr_stride(%3 : !cir.ptr<!s64i>, %4 : !s32i), !cir.ptr<!s64i> loc(#loc47)
    %6 = cir.load %5 : !cir.ptr<!s64i>, !s64i loc(#loc49)
    cir.store %6, %2 : !s64i, !cir.ptr<!s64i> loc(#loc80)
    cir.br ^bb1 loc(#loc81)
  ^bb1:  // pred: ^bb0
    %7 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc53)
    %8 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc54)
    %9 = cir.cmp(lt, %7, %8) : !s64i, !cir.bool loc(#loc82)
    cir.brcond %9 ^bb2, ^bb3 loc(#loc83)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc58)
    %11 = cir.unary(inc, %10) nsw : !s64i, !s64i loc(#loc58)
    cir.store %11, %2 : !s64i, !cir.ptr<!s64i> loc(#loc84)
    %12 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc45)
    cir.store %12, %0 : !s64i, !cir.ptr<!s64i> loc(#loc79)
    %13 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc60)
    cir.call @printLongLongLine(%13) : (!s64i) -> () loc(#loc61)
    cir.br ^bb4 loc(#loc56)
  ^bb3:  // pred: ^bb1
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc39)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    cir.br ^bb4 loc(#loc52)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc52)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc41)
  } loc(#loc77)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc3 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":22:1)
#loc4 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":32:1)
#loc7 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":29:9)
#loc8 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":29:26)
#loc9 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":25:5)
#loc10 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":25:31)
#loc11 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":23:1)
#loc12 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":25:20)
#loc13 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":25:30)
#loc14 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":26:5)
#loc15 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":31:5)
#loc16 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":28:9)
#loc17 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":28:11)
#loc18 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":30:27)
#loc19 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":30:9)
#loc20 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":39:1)
#loc21 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":48:1)
#loc24 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":45:9)
#loc25 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":45:26)
#loc26 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":41:5)
#loc27 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":41:31)
#loc28 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":40:1)
#loc29 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":41:20)
#loc30 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":41:30)
#loc31 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":42:5)
#loc32 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":47:5)
#loc33 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":44:9)
#loc34 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":44:11)
#loc35 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":46:27)
#loc36 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":46:9)
#loc37 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc38 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc39 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":63:19)
#loc40 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":51:1)
#loc41 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":65:1)
#loc44 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":58:9)
#loc45 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":58:26)
#loc46 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":53:5)
#loc47 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":53:31)
#loc48 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":52:1)
#loc49 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":53:20)
#loc50 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":53:30)
#loc51 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":55:5)
#loc52 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":64:5)
#loc53 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":55:9)
#loc54 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":55:16)
#loc55 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":56:5)
#loc56 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":60:5)
#loc57 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":62:5)
#loc58 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":57:9)
#loc59 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":57:11)
#loc60 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":59:27)
#loc61 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":59:9)
#loc62 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_66b.c":63:9)
#loc63 = loc(fused[#loc1, #loc2])
#loc64 = loc(fused[#loc3, #loc4])
#loc66 = loc(fused[#loc7, #loc8])
#loc67 = loc(fused[#loc9, #loc10])
#loc68 = loc(fused[#loc14, #loc15])
#loc69 = loc(fused[#loc16, #loc17])
#loc70 = loc(fused[#loc20, #loc21])
#loc72 = loc(fused[#loc24, #loc25])
#loc73 = loc(fused[#loc26, #loc27])
#loc74 = loc(fused[#loc31, #loc32])
#loc75 = loc(fused[#loc33, #loc34])
#loc76 = loc(fused[#loc37, #loc38])
#loc77 = loc(fused[#loc40, #loc41])
#loc79 = loc(fused[#loc44, #loc45])
#loc80 = loc(fused[#loc46, #loc47])
#loc81 = loc(fused[#loc51, #loc52])
#loc82 = loc(fused[#loc53, #loc54])
#loc83 = loc(fused[#loc55, #loc56, #loc57, #loc52])
#loc84 = loc(fused[#loc58, #loc59])
