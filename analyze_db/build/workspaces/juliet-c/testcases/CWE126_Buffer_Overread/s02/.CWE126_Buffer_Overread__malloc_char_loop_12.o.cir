!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_loop_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc231)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc232)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc233)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc234)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc235)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc236)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_loop_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc238)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc239)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc240)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc241)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc22)
    cir.store %4, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc242)
    cir.br ^bb1 loc(#loc243)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc244)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc244)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc26)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc26)
    cir.brcond %8 ^bb2, ^bb7 loc(#loc245)
  ^bb2:  // pred: ^bb1
    %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc31)
    %10 = cir.const #cir.int<50> : !s32i loc(#loc32)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc32)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc246)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc247)
    %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc31)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc248)
    cir.store %15, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc249)
    cir.br ^bb3 loc(#loc250)
  ^bb3:  // pred: ^bb2
    %16 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc40)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc40)
    %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc251)
    cir.brcond %19 ^bb4, ^bb5 loc(#loc252)
  ^bb4:  // pred: ^bb3
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc42)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc44)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc42)
    cir.br ^bb5 loc(#loc38)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc38)
  ^bb6:  // pred: ^bb5
    %23 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc45)
    %25 = cir.const #cir.int<65> : !s32i loc(#loc46)
    %26 = cir.const #cir.int<50> : !s32i loc(#loc47)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc47)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc47)
    cir.libc.memset %29 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc253)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %31 = cir.cast(integral, %30 : !s32i), !s8i loc(#loc51)
    %32 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
    %33 = cir.const #cir.int<50> : !s32i loc(#loc53)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc53)
    %36 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %35 : !s32i), !cir.ptr<!s8i> loc(#loc55)
    cir.store %31, %36 : !s8i, !cir.ptr<!s8i> loc(#loc254)
    cir.br ^bb12 loc(#loc29)
  ^bb7:  // pred: ^bb1
    %37 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc56)
    %38 = cir.const #cir.int<100> : !s32i loc(#loc57)
    %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc57)
    %40 = cir.const #cir.int<1> : !u64i loc(#loc255)
    %41 = cir.binop(mul, %39, %40) : !u64i loc(#loc256)
    %42 = cir.call @malloc(%41) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc56)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc257)
    cir.store %43, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc258)
    cir.br ^bb8 loc(#loc259)
  ^bb8:  // pred: ^bb7
    %44 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    %45 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc65)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc65)
    %47 = cir.cmp(eq, %44, %46) : !cir.ptr<!s8i>, !cir.bool loc(#loc260)
    cir.brcond %47 ^bb9, ^bb10 loc(#loc261)
  ^bb9:  // pred: ^bb8
    %48 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc67)
    %49 = cir.const #cir.int<1> : !s32i loc(#loc68)
    %50 = cir.unary(minus, %49) nsw : !s32i, !s32i loc(#loc69)
    cir.call @exit(%50) : (!s32i) -> () extra(#fn_attr) loc(#loc67)
    cir.br ^bb10 loc(#loc63)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc63)
  ^bb11:  // pred: ^bb10
    %51 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
    %52 = cir.cast(bitcast, %51 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc70)
    %53 = cir.const #cir.int<65> : !s32i loc(#loc71)
    %54 = cir.const #cir.int<100> : !s32i loc(#loc72)
    %55 = cir.const #cir.int<1> : !s32i loc(#loc73)
    %56 = cir.binop(sub, %54, %55) nsw : !s32i loc(#loc72)
    %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc72)
    cir.libc.memset %57 bytes from %52 set to %53 : !cir.ptr<!void>, !s32i, !u64i loc(#loc262)
    %58 = cir.const #cir.int<0> : !s32i loc(#loc76)
    %59 = cir.cast(integral, %58 : !s32i), !s8i loc(#loc76)
    %60 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
    %61 = cir.const #cir.int<100> : !s32i loc(#loc78)
    %62 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %63 = cir.binop(sub, %61, %62) nsw : !s32i loc(#loc78)
    %64 = cir.ptr_stride(%60 : !cir.ptr<!s8i>, %63 : !s32i), !cir.ptr<!s8i> loc(#loc80)
    cir.store %59, %64 : !s8i, !cir.ptr<!s8i> loc(#loc263)
    cir.br ^bb12 loc(#loc25)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc25)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc264)
  ^bb14:  // pred: ^bb13
    %65 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc83)
    %66 = cir.cast(bitcast, %65 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc83)
    %67 = cir.const #cir.int<67> : !s32i loc(#loc84)
    %68 = cir.const #cir.int<100> : !s32i loc(#loc85)
    %69 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %70 = cir.binop(sub, %68, %69) nsw : !s32i loc(#loc85)
    %71 = cir.cast(integral, %70 : !s32i), !u64i loc(#loc85)
    cir.libc.memset %71 bytes from %66 set to %67 : !cir.ptr<!void>, !s32i, !u64i loc(#loc265)
    %72 = cir.const #cir.int<0> : !s32i loc(#loc89)
    %73 = cir.cast(integral, %72 : !s32i), !s8i loc(#loc89)
    %74 = cir.const #cir.int<100> : !s32i loc(#loc90)
    %75 = cir.const #cir.int<1> : !s32i loc(#loc91)
    %76 = cir.binop(sub, %74, %75) nsw : !s32i loc(#loc90)
    %77 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc92)
    %78 = cir.ptr_stride(%77 : !cir.ptr<!s8i>, %76 : !s32i), !cir.ptr<!s8i> loc(#loc92)
    cir.store %73, %78 : !s8i, !cir.ptr<!s8i> loc(#loc266)
    %79 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc93)
    %80 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc94)
    %81 = cir.call @strlen(%80) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc93)
    cir.store %81, %1 : !u64i, !cir.ptr<!u64i> loc(#loc267)
    cir.br ^bb15 loc(#loc268)
  ^bb15:  // pred: ^bb14
    %82 = cir.const #cir.int<0> : !s32i loc(#loc99)
    %83 = cir.cast(integral, %82 : !s32i), !u64i loc(#loc99)
    cir.store %83, %0 : !u64i, !cir.ptr<!u64i> loc(#loc269)
    cir.br ^bb16 loc(#loc268)
  ^bb16:  // 2 preds: ^bb15, ^bb20
    %84 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc101)
    %85 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc102)
    %86 = cir.cmp(lt, %84, %85) : !u64i, !cir.bool loc(#loc270)
    cir.brcond %86 ^bb17, ^bb21 loc(#loc103)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc271)
  ^bb18:  // pred: ^bb17
    %87 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
    %88 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc106)
    %89 = cir.ptr_stride(%87 : !cir.ptr<!s8i>, %88 : !u64i), !cir.ptr<!s8i> loc(#loc107)
    %90 = cir.load %89 : !cir.ptr<!s8i>, !s8i loc(#loc105)
    %91 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc108)
    %92 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc109)
    %93 = cir.ptr_stride(%92 : !cir.ptr<!s8i>, %91 : !u64i), !cir.ptr<!s8i> loc(#loc109)
    cir.store %90, %93 : !s8i, !cir.ptr<!s8i> loc(#loc272)
    cir.br ^bb19 loc(#loc98)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc98)
  ^bb20:  // pred: ^bb19
    %94 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc110)
    %95 = cir.unary(inc, %94) : !u64i, !u64i loc(#loc111)
    cir.store %95, %0 : !u64i, !cir.ptr<!u64i> loc(#loc273)
    cir.br ^bb16 loc(#loc268)
  ^bb21:  // pred: ^bb16
    cir.br ^bb22 loc(#loc98)
  ^bb22:  // pred: ^bb21
    %96 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %97 = cir.cast(integral, %96 : !s32i), !s8i loc(#loc112)
    %98 = cir.const #cir.int<100> : !s32i loc(#loc113)
    %99 = cir.const #cir.int<1> : !s32i loc(#loc114)
    %100 = cir.binop(sub, %98, %99) nsw : !s32i loc(#loc113)
    %101 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc115)
    %102 = cir.ptr_stride(%101 : !cir.ptr<!s8i>, %100 : !s32i), !cir.ptr<!s8i> loc(#loc115)
    cir.store %97, %102 : !s8i, !cir.ptr<!s8i> loc(#loc274)
    %103 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc116)
    cir.call @printLine(%103) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    %104 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
    %105 = cir.cast(bitcast, %104 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc118)
    cir.call @free(%105) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc119)
    cir.br ^bb23 loc(#loc82)
  ^bb23:  // pred: ^bb22
    cir.return loc(#loc14)
  } loc(#loc237)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_loop_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc276)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc122)
    cir.return loc(#loc121)
  } loc(#loc275)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc278)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc279)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc280)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc281)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc133)
    cir.store %4, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc282)
    cir.br ^bb1 loc(#loc283)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc284)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc284)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc137)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc137)
    cir.brcond %8 ^bb2, ^bb7 loc(#loc285)
  ^bb2:  // pred: ^bb1
    %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc142)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc143)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc143)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc286)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc287)
    %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc142)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc288)
    cir.store %15, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc289)
    cir.br ^bb3 loc(#loc290)
  ^bb3:  // pred: ^bb2
    %16 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc151)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc151)
    %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc291)
    cir.brcond %19 ^bb4, ^bb5 loc(#loc292)
  ^bb4:  // pred: ^bb3
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc153)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc154)
    %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc155)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc153)
    cir.br ^bb5 loc(#loc149)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc149)
  ^bb6:  // pred: ^bb5
    %23 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc156)
    %25 = cir.const #cir.int<65> : !s32i loc(#loc157)
    %26 = cir.const #cir.int<100> : !s32i loc(#loc158)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc159)
    %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc158)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc158)
    cir.libc.memset %29 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc293)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc162)
    %31 = cir.cast(integral, %30 : !s32i), !s8i loc(#loc162)
    %32 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
    %33 = cir.const #cir.int<100> : !s32i loc(#loc164)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc165)
    %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc164)
    %36 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %35 : !s32i), !cir.ptr<!s8i> loc(#loc166)
    cir.store %31, %36 : !s8i, !cir.ptr<!s8i> loc(#loc294)
    cir.br ^bb12 loc(#loc140)
  ^bb7:  // pred: ^bb1
    %37 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc167)
    %38 = cir.const #cir.int<100> : !s32i loc(#loc168)
    %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc168)
    %40 = cir.const #cir.int<1> : !u64i loc(#loc295)
    %41 = cir.binop(mul, %39, %40) : !u64i loc(#loc296)
    %42 = cir.call @malloc(%41) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc167)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc297)
    cir.store %43, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc298)
    cir.br ^bb8 loc(#loc299)
  ^bb8:  // pred: ^bb7
    %44 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc175)
    %45 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc176)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc176)
    %47 = cir.cmp(eq, %44, %46) : !cir.ptr<!s8i>, !cir.bool loc(#loc300)
    cir.brcond %47 ^bb9, ^bb10 loc(#loc301)
  ^bb9:  // pred: ^bb8
    %48 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc178)
    %49 = cir.const #cir.int<1> : !s32i loc(#loc179)
    %50 = cir.unary(minus, %49) nsw : !s32i, !s32i loc(#loc180)
    cir.call @exit(%50) : (!s32i) -> () extra(#fn_attr) loc(#loc178)
    cir.br ^bb10 loc(#loc174)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc174)
  ^bb11:  // pred: ^bb10
    %51 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc181)
    %52 = cir.cast(bitcast, %51 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc181)
    %53 = cir.const #cir.int<65> : !s32i loc(#loc182)
    %54 = cir.const #cir.int<100> : !s32i loc(#loc183)
    %55 = cir.const #cir.int<1> : !s32i loc(#loc184)
    %56 = cir.binop(sub, %54, %55) nsw : !s32i loc(#loc183)
    %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc183)
    cir.libc.memset %57 bytes from %52 set to %53 : !cir.ptr<!void>, !s32i, !u64i loc(#loc302)
    %58 = cir.const #cir.int<0> : !s32i loc(#loc187)
    %59 = cir.cast(integral, %58 : !s32i), !s8i loc(#loc187)
    %60 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc188)
    %61 = cir.const #cir.int<100> : !s32i loc(#loc189)
    %62 = cir.const #cir.int<1> : !s32i loc(#loc190)
    %63 = cir.binop(sub, %61, %62) nsw : !s32i loc(#loc189)
    %64 = cir.ptr_stride(%60 : !cir.ptr<!s8i>, %63 : !s32i), !cir.ptr<!s8i> loc(#loc191)
    cir.store %59, %64 : !s8i, !cir.ptr<!s8i> loc(#loc303)
    cir.br ^bb12 loc(#loc136)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc136)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc304)
  ^bb14:  // pred: ^bb13
    %65 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc194)
    %66 = cir.cast(bitcast, %65 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc194)
    %67 = cir.const #cir.int<67> : !s32i loc(#loc195)
    %68 = cir.const #cir.int<100> : !s32i loc(#loc196)
    %69 = cir.const #cir.int<1> : !s32i loc(#loc197)
    %70 = cir.binop(sub, %68, %69) nsw : !s32i loc(#loc196)
    %71 = cir.cast(integral, %70 : !s32i), !u64i loc(#loc196)
    cir.libc.memset %71 bytes from %66 set to %67 : !cir.ptr<!void>, !s32i, !u64i loc(#loc305)
    %72 = cir.const #cir.int<0> : !s32i loc(#loc200)
    %73 = cir.cast(integral, %72 : !s32i), !s8i loc(#loc200)
    %74 = cir.const #cir.int<100> : !s32i loc(#loc201)
    %75 = cir.const #cir.int<1> : !s32i loc(#loc202)
    %76 = cir.binop(sub, %74, %75) nsw : !s32i loc(#loc201)
    %77 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc203)
    %78 = cir.ptr_stride(%77 : !cir.ptr<!s8i>, %76 : !s32i), !cir.ptr<!s8i> loc(#loc203)
    cir.store %73, %78 : !s8i, !cir.ptr<!s8i> loc(#loc306)
    %79 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc204)
    %80 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc205)
    %81 = cir.call @strlen(%80) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc204)
    cir.store %81, %1 : !u64i, !cir.ptr<!u64i> loc(#loc307)
    cir.br ^bb15 loc(#loc308)
  ^bb15:  // pred: ^bb14
    %82 = cir.const #cir.int<0> : !s32i loc(#loc210)
    %83 = cir.cast(integral, %82 : !s32i), !u64i loc(#loc210)
    cir.store %83, %0 : !u64i, !cir.ptr<!u64i> loc(#loc309)
    cir.br ^bb16 loc(#loc308)
  ^bb16:  // 2 preds: ^bb15, ^bb20
    %84 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc212)
    %85 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc213)
    %86 = cir.cmp(lt, %84, %85) : !u64i, !cir.bool loc(#loc310)
    cir.brcond %86 ^bb17, ^bb21 loc(#loc214)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc311)
  ^bb18:  // pred: ^bb17
    %87 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc216)
    %88 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc217)
    %89 = cir.ptr_stride(%87 : !cir.ptr<!s8i>, %88 : !u64i), !cir.ptr<!s8i> loc(#loc218)
    %90 = cir.load %89 : !cir.ptr<!s8i>, !s8i loc(#loc216)
    %91 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc219)
    %92 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc220)
    %93 = cir.ptr_stride(%92 : !cir.ptr<!s8i>, %91 : !u64i), !cir.ptr<!s8i> loc(#loc220)
    cir.store %90, %93 : !s8i, !cir.ptr<!s8i> loc(#loc312)
    cir.br ^bb19 loc(#loc209)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc209)
  ^bb20:  // pred: ^bb19
    %94 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc221)
    %95 = cir.unary(inc, %94) : !u64i, !u64i loc(#loc222)
    cir.store %95, %0 : !u64i, !cir.ptr<!u64i> loc(#loc313)
    cir.br ^bb16 loc(#loc308)
  ^bb21:  // pred: ^bb16
    cir.br ^bb22 loc(#loc209)
  ^bb22:  // pred: ^bb21
    %96 = cir.const #cir.int<0> : !s32i loc(#loc223)
    %97 = cir.cast(integral, %96 : !s32i), !s8i loc(#loc223)
    %98 = cir.const #cir.int<100> : !s32i loc(#loc224)
    %99 = cir.const #cir.int<1> : !s32i loc(#loc225)
    %100 = cir.binop(sub, %98, %99) nsw : !s32i loc(#loc224)
    %101 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc226)
    %102 = cir.ptr_stride(%101 : !cir.ptr<!s8i>, %100 : !s32i), !cir.ptr<!s8i> loc(#loc226)
    cir.store %97, %102 : !s8i, !cir.ptr<!s8i> loc(#loc314)
    %103 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc227)
    cir.call @printLine(%103) : (!cir.ptr<!s8i>) -> () loc(#loc228)
    %104 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc229)
    %105 = cir.cast(bitcast, %104 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc229)
    cir.call @free(%105) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc230)
    cir.br ^bb23 loc(#loc193)
  ^bb23:  // pred: ^bb22
    cir.return loc(#loc125)
  } loc(#loc277)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_loop_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("/usr/include/stdlib.h":687:1)
#loc12 = loc("/usr/include/stdlib.h":687:32)
#loc13 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":23:1)
#loc14 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":59:1)
#loc15 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":44:9)
#loc16 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":44:16)
#loc17 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":44:19)
#loc18 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":45:9)
#loc19 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":45:22)
#loc20 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":25:5)
#loc21 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":25:12)
#loc22 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":26:12)
#loc23 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":26:5)
#loc24 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":27:5)
#loc25 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":42:5)
#loc26 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":27:8)
#loc27 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":27:33)
#loc28 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":28:5)
#loc29 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":34:5)
#loc30 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":36:5)
#loc31 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":30:24)
#loc32 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":30:31)
#loc33 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":30:34)
#loc34 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":30:45)
#loc35 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":30:46)
#loc36 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":30:9)
#loc37 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":31:9)
#loc38 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":31:37)
#loc39 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":31:13)
#loc40 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":31:21)
#loc41 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":31:27)
#loc42 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":31:28)
#loc43 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":31:34)
#loc44 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":31:33)
#loc45 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":32:16)
#loc46 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":32:22)
#loc47 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":32:27)
#loc48 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":32:30)
#loc49 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":32:9)
#loc50 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":32:31)
#loc51 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":33:22)
#loc52 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":33:9)
#loc53 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":33:14)
#loc54 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":33:17)
#loc55 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":33:18)
#loc56 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":38:24)
#loc57 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":38:31)
#loc58 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":38:35)
#loc59 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":38:46)
#loc60 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":38:47)
#loc61 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":38:9)
#loc62 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":39:9)
#loc63 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":39:37)
#loc64 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":39:13)
#loc65 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":39:21)
#loc66 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":39:27)
#loc67 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":39:28)
#loc68 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":39:34)
#loc69 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":39:33)
#loc70 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":40:16)
#loc71 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":40:22)
#loc72 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":40:27)
#loc73 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":40:31)
#loc74 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":40:9)
#loc75 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":40:32)
#loc76 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":41:23)
#loc77 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":41:9)
#loc78 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":41:14)
#loc79 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":41:18)
#loc80 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":41:19)
#loc81 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":43:5)
#loc82 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":58:5)
#loc83 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":46:16)
#loc84 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":46:22)
#loc85 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":46:27)
#loc86 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":46:31)
#loc87 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":46:9)
#loc88 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":46:32)
#loc89 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":47:23)
#loc90 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":47:14)
#loc91 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":47:18)
#loc92 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":47:9)
#loc93 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":48:19)
#loc94 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":48:26)
#loc95 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":48:9)
#loc96 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":48:30)
#loc97 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":51:9)
#loc98 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":54:9)
#loc99 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":51:18)
#loc100 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":51:14)
#loc101 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":51:21)
#loc102 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":51:25)
#loc103 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":51:23)
#loc104 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":52:9)
#loc105 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":53:23)
#loc106 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":53:28)
#loc107 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":53:29)
#loc108 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":53:18)
#loc109 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":53:13)
#loc110 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":51:35)
#loc111 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":51:34)
#loc112 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":55:23)
#loc113 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":55:14)
#loc114 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":55:18)
#loc115 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":55:9)
#loc116 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":56:19)
#loc117 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":56:9)
#loc118 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":57:14)
#loc119 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":57:9)
#loc120 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":105:1)
#loc121 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":108:1)
#loc122 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":107:5)
#loc123 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":107:13)
#loc124 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":67:1)
#loc125 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":103:1)
#loc126 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":88:9)
#loc127 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":88:16)
#loc128 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":88:19)
#loc129 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":89:9)
#loc130 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":89:22)
#loc131 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":69:5)
#loc132 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":69:12)
#loc133 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":70:12)
#loc134 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":70:5)
#loc135 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":71:5)
#loc136 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":86:5)
#loc137 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":71:8)
#loc138 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":71:33)
#loc139 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":72:5)
#loc140 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":78:5)
#loc141 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":80:5)
#loc142 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":74:24)
#loc143 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":74:31)
#loc144 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":74:35)
#loc145 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":74:46)
#loc146 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":74:47)
#loc147 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":74:9)
#loc148 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":75:9)
#loc149 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":75:37)
#loc150 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":75:13)
#loc151 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":75:21)
#loc152 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":75:27)
#loc153 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":75:28)
#loc154 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":75:34)
#loc155 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":75:33)
#loc156 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":76:16)
#loc157 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":76:22)
#loc158 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":76:27)
#loc159 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":76:31)
#loc160 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":76:9)
#loc161 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":76:32)
#loc162 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":77:23)
#loc163 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":77:9)
#loc164 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":77:14)
#loc165 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":77:18)
#loc166 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":77:19)
#loc167 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":82:24)
#loc168 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":82:31)
#loc169 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":82:35)
#loc170 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":82:46)
#loc171 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":82:47)
#loc172 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":82:9)
#loc173 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":83:9)
#loc174 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":83:37)
#loc175 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":83:13)
#loc176 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":83:21)
#loc177 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":83:27)
#loc178 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":83:28)
#loc179 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":83:34)
#loc180 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":83:33)
#loc181 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":84:16)
#loc182 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":84:22)
#loc183 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":84:27)
#loc184 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":84:31)
#loc185 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":84:9)
#loc186 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":84:32)
#loc187 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":85:23)
#loc188 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":85:9)
#loc189 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":85:14)
#loc190 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":85:18)
#loc191 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":85:19)
#loc192 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":87:5)
#loc193 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":102:5)
#loc194 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":90:16)
#loc195 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":90:22)
#loc196 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":90:27)
#loc197 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":90:31)
#loc198 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":90:9)
#loc199 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":90:32)
#loc200 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":91:23)
#loc201 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":91:14)
#loc202 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":91:18)
#loc203 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":91:9)
#loc204 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":92:19)
#loc205 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":92:26)
#loc206 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":92:9)
#loc207 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":92:30)
#loc208 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":95:9)
#loc209 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":98:9)
#loc210 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":95:18)
#loc211 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":95:14)
#loc212 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":95:21)
#loc213 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":95:25)
#loc214 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":95:23)
#loc215 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":96:9)
#loc216 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":97:23)
#loc217 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":97:28)
#loc218 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":97:29)
#loc219 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":97:18)
#loc220 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":97:13)
#loc221 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":95:35)
#loc222 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":95:34)
#loc223 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":99:23)
#loc224 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":99:14)
#loc225 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":99:18)
#loc226 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":99:9)
#loc227 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":100:19)
#loc228 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":100:9)
#loc229 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":101:14)
#loc230 = loc("CWE126_Buffer_Overread__malloc_char_loop_12.c":101:9)
#loc231 = loc(fused[#loc1, #loc2])
#loc232 = loc(fused[#loc3, #loc4])
#loc233 = loc(fused[#loc5, #loc6])
#loc234 = loc(fused[#loc7, #loc8])
#loc235 = loc(fused[#loc9, #loc10])
#loc236 = loc(fused[#loc11, #loc12])
#loc237 = loc(fused[#loc13, #loc14])
#loc238 = loc(fused[#loc15, #loc16])
#loc239 = loc(fused[#loc15, #loc17])
#loc240 = loc(fused[#loc18, #loc19])
#loc241 = loc(fused[#loc20, #loc21])
#loc242 = loc(fused[#loc23, #loc22])
#loc243 = loc(fused[#loc24, #loc25])
#loc244 = loc(fused[#loc26, #loc27])
#loc245 = loc(fused[#loc28, #loc29, #loc30, #loc25])
#loc246 = loc(fused[#loc33, #loc34])
#loc247 = loc(fused[#loc32, #loc34])
#loc248 = loc(fused[#loc31, #loc35])
#loc249 = loc(fused[#loc36, #loc35])
#loc250 = loc(fused[#loc37, #loc38])
#loc251 = loc(fused[#loc39, #loc40])
#loc252 = loc(fused[#loc41, #loc38])
#loc253 = loc(fused[#loc49, #loc50])
#loc254 = loc(fused[#loc52, #loc51])
#loc255 = loc(fused[#loc58, #loc59])
#loc256 = loc(fused[#loc57, #loc59])
#loc257 = loc(fused[#loc56, #loc60])
#loc258 = loc(fused[#loc61, #loc60])
#loc259 = loc(fused[#loc62, #loc63])
#loc260 = loc(fused[#loc64, #loc65])
#loc261 = loc(fused[#loc66, #loc63])
#loc262 = loc(fused[#loc74, #loc75])
#loc263 = loc(fused[#loc77, #loc76])
#loc264 = loc(fused[#loc81, #loc82])
#loc265 = loc(fused[#loc87, #loc88])
#loc266 = loc(fused[#loc92, #loc89])
#loc267 = loc(fused[#loc95, #loc96])
#loc268 = loc(fused[#loc97, #loc98])
#loc269 = loc(fused[#loc100, #loc99])
#loc270 = loc(fused[#loc101, #loc102])
#loc271 = loc(fused[#loc104, #loc98])
#loc272 = loc(fused[#loc109, #loc107])
#loc273 = loc(fused[#loc111, #loc110])
#loc274 = loc(fused[#loc115, #loc112])
#loc275 = loc(fused[#loc120, #loc121])
#loc276 = loc(fused[#loc122, #loc123])
#loc277 = loc(fused[#loc124, #loc125])
#loc278 = loc(fused[#loc126, #loc127])
#loc279 = loc(fused[#loc126, #loc128])
#loc280 = loc(fused[#loc129, #loc130])
#loc281 = loc(fused[#loc131, #loc132])
#loc282 = loc(fused[#loc134, #loc133])
#loc283 = loc(fused[#loc135, #loc136])
#loc284 = loc(fused[#loc137, #loc138])
#loc285 = loc(fused[#loc139, #loc140, #loc141, #loc136])
#loc286 = loc(fused[#loc144, #loc145])
#loc287 = loc(fused[#loc143, #loc145])
#loc288 = loc(fused[#loc142, #loc146])
#loc289 = loc(fused[#loc147, #loc146])
#loc290 = loc(fused[#loc148, #loc149])
#loc291 = loc(fused[#loc150, #loc151])
#loc292 = loc(fused[#loc152, #loc149])
#loc293 = loc(fused[#loc160, #loc161])
#loc294 = loc(fused[#loc163, #loc162])
#loc295 = loc(fused[#loc169, #loc170])
#loc296 = loc(fused[#loc168, #loc170])
#loc297 = loc(fused[#loc167, #loc171])
#loc298 = loc(fused[#loc172, #loc171])
#loc299 = loc(fused[#loc173, #loc174])
#loc300 = loc(fused[#loc175, #loc176])
#loc301 = loc(fused[#loc177, #loc174])
#loc302 = loc(fused[#loc185, #loc186])
#loc303 = loc(fused[#loc188, #loc187])
#loc304 = loc(fused[#loc192, #loc193])
#loc305 = loc(fused[#loc198, #loc199])
#loc306 = loc(fused[#loc203, #loc200])
#loc307 = loc(fused[#loc206, #loc207])
#loc308 = loc(fused[#loc208, #loc209])
#loc309 = loc(fused[#loc211, #loc210])
#loc310 = loc(fused[#loc212, #loc213])
#loc311 = loc(fused[#loc215, #loc209])
#loc312 = loc(fused[#loc220, #loc218])
#loc313 = loc(fused[#loc222, #loc221])
#loc314 = loc(fused[#loc226, #loc223])
